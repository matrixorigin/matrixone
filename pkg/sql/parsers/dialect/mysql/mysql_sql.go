// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const ELSEIF = 57442
const LOWER_THAN_EQ = 57443
const LE = 57444
const GE = 57445
const NE = 57446
const NULL_SAFE_EQUAL = 57447
const IS = 57448
const LIKE = 57449
const REGEXP = 57450
const IN = 57451
const ASSIGNMENT = 57452
const ILIKE = 57453
const SHIFT_LEFT = 57454
const SHIFT_RIGHT = 57455
const DIV = 57456
const MOD = 57457
const UNARY = 57458
const COLLATE = 57459
const BINARY = 57460
const UNDERSCORE_BINARY = 57461
const INTERVAL = 57462
const OUT = 57463
const INOUT = 57464
const BEGIN = 57465
const START = 57466
const TRANSACTION = 57467
const COMMIT = 57468
const ROLLBACK = 57469
const WORK = 57470
const CONSISTENT = 57471
const SNAPSHOT = 57472
const CHAIN = 57473
const NO = 57474
const RELEASE = 57475
const PRIORITY = 57476
const QUICK = 57477
const BIT = 57478
const TINYINT = 57479
const SMALLINT = 57480
const MEDIUMINT = 57481
const INT = 57482
const INTEGER = 57483
const BIGINT = 57484
const INTNUM = 57485
const REAL = 57486
const DOUBLE = 57487
const FLOAT_TYPE = 57488
const DECIMAL = 57489
const NUMERIC = 57490
const DECIMAL_VALUE = 57491
const TIME = 57492
const TIMESTAMP = 57493
const DATETIME = 57494
const YEAR = 57495
const CHAR = 57496
const VARCHAR = 57497
const BOOL = 57498
const CHARACTER = 57499
const VARBINARY = 57500
const NCHAR = 57501
const TEXT = 57502
const TINYTEXT = 57503
const MEDIUMTEXT = 57504
const LONGTEXT = 57505
const BLOB = 57506
const TINYBLOB = 57507
const MEDIUMBLOB = 57508
const LONGBLOB = 57509
const JSON = 57510
const ENUM = 57511
const UUID = 57512
const GEOMETRY = 57513
const POINT = 57514
const LINESTRING = 57515
const POLYGON = 57516
const GEOMETRYCOLLECTION = 57517
const MULTIPOINT = 57518
const MULTILINESTRING = 57519
const MULTIPOLYGON = 57520
const INT1 = 57521
const INT2 = 57522
const INT3 = 57523
const INT4 = 57524
const INT8 = 57525
const S3OPTION = 57526
const SQL_SMALL_RESULT = 57527
const SQL_BIG_RESULT = 57528
const SQL_BUFFER_RESULT = 57529
const LOW_PRIORITY = 57530
const HIGH_PRIORITY = 57531
const DELAYED = 57532
const CREATE = 57533
const ALTER = 57534
const DROP = 57535
const RENAME = 57536
const ANALYZE = 57537
const ADD = 57538
const RETURNS = 57539
const SCHEMA = 57540
const TABLE = 57541
const SEQUENCE = 57542
const INDEX = 57543
const VIEW = 57544
const TO = 57545
const IGNORE = 57546
const IF = 57547
const PRIMARY = 57548
const COLUMN = 57549
const CONSTRAINT = 57550
const SPATIAL = 57551
const FULLTEXT = 57552
const FOREIGN = 57553
const KEY_BLOCK_SIZE = 57554
const SHOW = 57555
const DESCRIBE = 57556
const EXPLAIN = 57557
const DATE = 57558
const ESCAPE = 57559
const REPAIR = 57560
const OPTIMIZE = 57561
const TRUNCATE = 57562
const MAXVALUE = 57563
const PARTITION = 57564
const REORGANIZE = 57565
const LESS = 57566
const THAN = 57567
const PROCEDURE = 57568
const TRIGGER = 57569
const STATUS = 57570
const VARIABLES = 57571
const ROLE = 57572
const PROXY = 57573
const AVG_ROW_LENGTH = 57574
const STORAGE = 57575
const DISK = 57576
const MEMORY = 57577
const CHECKSUM = 57578
const COMPRESSION = 57579
const DATA = 57580
const DIRECTORY = 57581
const DELAY_KEY_WRITE = 57582
const ENCRYPTION = 57583
const ENGINE = 57584
const MAX_ROWS = 57585
const MIN_ROWS = 57586
const PACK_KEYS = 57587
const ROW_FORMAT = 57588
const STATS_AUTO_RECALC = 57589
const STATS_PERSISTENT = 57590
const STATS_SAMPLE_PAGES = 57591
const DYNAMIC = 57592
const COMPRESSED = 57593
const REDUNDANT = 57594
const COMPACT = 57595
const FIXED = 57596
const COLUMN_FORMAT = 57597
const AUTO_RANDOM = 57598
const RESTRICT = 57599
const CASCADE = 57600
const ACTION = 57601
const PARTIAL = 57602
const SIMPLE = 57603
const CHECK = 57604
const ENFORCED = 57605
const RANGE = 57606
const LIST = 57607
const ALGORITHM = 57608
const LINEAR = 57609
const PARTITIONS = 57610
const SUBPARTITION = 57611
const SUBPARTITIONS = 57612
const CLUSTER = 57613
const TYPE = 57614
const ANY = 57615
const SOME = 57616
const EXTERNAL = 57617
const LOCALFILE = 57618
const URL = 57619
const PREPARE = 57620
const DEALLOCATE = 57621
const RESET = 57622
const EXTENSION = 57623
const INCREMENT = 57624
const CYCLE = 57625
const MINVALUE = 57626
const PUBLICATION = 57627
const SUBSCRIPTIONS = 57628
const PUBLICATIONS = 57629
const PROPERTIES = 57630
const PARSER = 57631
const VISIBLE = 57632
const INVISIBLE = 57633
const BTREE = 57634
const HASH = 57635
const RTREE = 57636
const BSI = 57637
const ZONEMAP = 57638
const LEADING = 57639
const BOTH = 57640
const TRAILING = 57641
const UNKNOWN = 57642
const EXPIRE = 57643
const ACCOUNT = 57644
const ACCOUNTS = 57645
const UNLOCK = 57646
const DAY = 57647
const NEVER = 57648
const PUMP = 57649
const MYSQL_COMPATIBILITY_MODE = 57650
const SECOND = 57651
const ASCII = 57652
const COALESCE = 57653
const COLLATION = 57654
const HOUR = 57655
const MICROSECOND = 57656
const MINUTE = 57657
const MONTH = 57658
const QUARTER = 57659
const REPEAT = 57660
const REVERSE = 57661
const ROW_COUNT = 57662
const WEEK = 57663
const REVOKE = 57664
const FUNCTION = 57665
const PRIVILEGES = 57666
const TABLESPACE = 57667
const EXECUTE = 57668
const SUPER = 57669
const GRANT = 57670
const OPTION = 57671
const REFERENCES = 57672
const REPLICATION = 57673
const SLAVE = 57674
const CLIENT = 57675
const USAGE = 57676
const RELOAD = 57677
const FILE = 57678
const TEMPORARY = 57679
const ROUTINE = 57680
const EVENT = 57681
const SHUTDOWN = 57682
const NULLX = 57683
const AUTO_INCREMENT = 57684
const APPROXNUM = 57685
const SIGNED = 57686
const UNSIGNED = 57687
const ZEROFILL = 57688
const ENGINES = 57689
const LOW_CARDINALITY = 57690
const ADMIN_NAME = 57691
const RANDOM = 57692
const SUSPEND = 57693
const ATTRIBUTE = 57694
const HISTORY = 57695
const REUSE = 57696
const CURRENT = 57697
const OPTIONAL = 57698
const FAILED_LOGIN_ATTEMPTS = 57699
const PASSWORD_LOCK_TIME = 57700
const UNBOUNDED = 57701
const SECONDARY = 57702
const USER = 57703
const IDENTIFIED = 57704
const CIPHER = 57705
const ISSUER = 57706
const X509 = 57707
const SUBJECT = 57708
const SAN = 57709
const REQUIRE = 57710
const SSL = 57711
const NONE = 57712
const PASSWORD = 57713
const MAX_QUERIES_PER_HOUR = 57714
const MAX_UPDATES_PER_HOUR = 57715
const MAX_CONNECTIONS_PER_HOUR = 57716
const MAX_USER_CONNECTIONS = 57717
const FORMAT = 57718
const VERBOSE = 57719
const CONNECTION = 57720
const TRIGGERS = 57721
const PROFILES = 57722
const LOAD = 57723
const INFILE = 57724
const TERMINATED = 57725
const OPTIONALLY = 57726
const ENCLOSED = 57727
const ESCAPED = 57728
const STARTING = 57729
const LINES = 57730
const ROWS = 57731
const IMPORT = 57732
const MODUMP = 57733
const OVER = 57734
const PRECEDING = 57735
const FOLLOWING = 57736
const GROUPS = 57737
const DATABASES = 57738
const TABLES = 57739
const SEQUENCES = 57740
const EXTENDED = 57741
const FULL = 57742
const PROCESSLIST = 57743
const FIELDS = 57744
const COLUMNS = 57745
const OPEN = 57746
const ERRORS = 57747
const WARNINGS = 57748
const INDEXES = 57749
const SCHEMAS = 57750
const NODE = 57751
const LOCKS = 57752
const ROLES = 57753
const TABLE_NUMBER = 57754
const COLUMN_NUMBER = 57755
const TABLE_VALUES = 57756
const TABLE_SIZE = 57757
const NAMES = 57758
const GLOBAL = 57759
const PERSIST = 57760
const SESSION = 57761
const ISOLATION = 57762
const LEVEL = 57763
const READ = 57764
const WRITE = 57765
const ONLY = 57766
const REPEATABLE = 57767
const COMMITTED = 57768
const UNCOMMITTED = 57769
const SERIALIZABLE = 57770
const LOCAL = 57771
const EVENTS = 57772
const PLUGINS = 57773
const CURRENT_TIMESTAMP = 57774
const DATABASE = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const UTC_DATE = 57779
const UTC_TIME = 57780
const UTC_TIMESTAMP = 57781
const REPLACE = 57782
const CONVERT = 57783
const SEPARATOR = 57784
const TIMESTAMPDIFF = 57785
const CURRENT_DATE = 57786
const CURRENT_USER = 57787
const CURRENT_ROLE = 57788
const SECOND_MICROSECOND = 57789
const MINUTE_MICROSECOND = 57790
const MINUTE_SECOND = 57791
const HOUR_MICROSECOND = 57792
const HOUR_SECOND = 57793
const HOUR_MINUTE = 57794
const DAY_MICROSECOND = 57795
const DAY_SECOND = 57796
const DAY_MINUTE = 57797
const DAY_HOUR = 57798
const YEAR_MONTH = 57799
const SQL_TSI_HOUR = 57800
const SQL_TSI_DAY = 57801
const SQL_TSI_WEEK = 57802
const SQL_TSI_MONTH = 57803
const SQL_TSI_QUARTER = 57804
const SQL_TSI_YEAR = 57805
const SQL_TSI_SECOND = 57806
const SQL_TSI_MINUTE = 57807
const RECURSIVE = 57808
const CONFIG = 57809
const DRAINER = 57810
const MATCH = 57811
const AGAINST = 57812
const BOOLEAN = 57813
const LANGUAGE = 57814
const WITH = 57815
const QUERY = 57816
const EXPANSION = 57817
const ADDDATE = 57818
const BIT_AND = 57819
const BIT_OR = 57820
const BIT_XOR = 57821
const CAST = 57822
const COUNT = 57823
const APPROX_COUNT_DISTINCT = 57824
const APPROX_PERCENTILE = 57825
const CURDATE = 57826
const CURTIME = 57827
const DATE_ADD = 57828
const DATE_SUB = 57829
const EXTRACT = 57830
const GROUP_CONCAT = 57831
const MAX = 57832
const MID = 57833
const MIN = 57834
const NOW = 57835
const POSITION = 57836
const SESSION_USER = 57837
const STD = 57838
const STDDEV = 57839
const MEDIAN = 57840
const STDDEV_POP = 57841
const STDDEV_SAMP = 57842
const SUBDATE = 57843
const SUBSTR = 57844
const SUBSTRING = 57845
const SUM = 57846
const SYSDATE = 57847
const SYSTEM_USER = 57848
const TRANSLATE = 57849
const TRIM = 57850
const VARIANCE = 57851
const VAR_POP = 57852
const VAR_SAMP = 57853
const AVG = 57854
const RANK = 57855
const NEXTVAL = 57856
const SETVAL = 57857
const CURRVAL = 57858
const LASTVAL = 57859
const ARROW = 57860
const ROW = 57861
const OUTFILE = 57862
const HEADER = 57863
const MAX_FILE_SIZE = 57864
const FORCE_QUOTE = 57865
const PARALLEL = 57866
const UNUSED = 57867
const BINDINGS = 57868
const DO = 57869
const DECLARE = 57870
const LOOP = 57871
const WHILE = 57872
const LEAVE = 57873
const ITERATE = 57874
const UNTIL = 57875
const CALL = 57876
const SPBEGIN = 57877
const BACKEND = 57878
const SERVERS = 57879
const KILL = 57880
const QUERY_RESULT = 57881

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9403

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 110,
	21, 627,
	-2, 608,
	-1, 124,
	218, 844,
	-2, 915,
	-1, 146,
	42, 450,
	218, 450,
	245, 457,
	246, 457,
	424, 450,
	-2, 483,
	-1, 182,
	558, 1575,
	-2, 368,
	-1, 502,
	294, 130,
	399, 130,
	-2, 1488,
	-1, 565,
	67, 1294,
	-2, 1629,
	-1, 566,
	67, 1312,
	-2, 1600,
	-1, 570,
	67, 1313,
	-2, 1628,
	-1, 593,
	67, 1224,
	-2, 1690,
	-1, 594,
	67, 1225,
	-2, 1689,
	-1, 595,
	67, 1226,
	-2, 1679,
	-1, 596,
	67, 1654,
	-2, 1674,
	-1, 597,
	67, 1655,
	-2, 1675,
	-1, 598,
	67, 1656,
	-2, 1681,
	-1, 599,
	67, 1657,
	-2, 1664,
	-1, 600,
	67, 1658,
	-2, 1672,
	-1, 601,
	67, 1659,
	-2, 1682,
	-1, 602,
	67, 1660,
	-2, 1683,
	-1, 603,
	67, 1661,
	-2, 1688,
	-1, 604,
	67, 1662,
	-2, 1693,
	-1, 605,
	67, 1663,
	-2, 1694,
	-1, 607,
	67, 1291,
	-2, 1480,
	-1, 614,
	67, 1300,
	-2, 1506,
	-1, 618,
	67, 1304,
	-2, 1546,
	-1, 619,
	67, 1305,
	-2, 1624,
	-1, 627,
	67, 1315,
	-2, 1609,
	-1, 629,
	67, 1317,
	-2, 1619,
	-1, 630,
	67, 1318,
	-2, 1644,
	-1, 641,
	67, 1202,
	-2, 1684,
	-1, 642,
	67, 1203,
	-2, 1685,
	-1, 643,
	67, 1204,
	-2, 1686,
	-1, 647,
	21, 628,
	-2, 591,
	-1, 717,
	419, 483,
	420, 483,
	-2, 451,
	-1, 759,
	105, 1480,
	116, 1480,
	136, 1480,
	-2, 1455,
	-1, 859,
	21, 628,
	-2, 591,
	-1, 959,
	21, 627,
	-2, 1107,
	-1, 1301,
	67, 1362,
	-2, 1626,
	-1, 1302,
	67, 1363,
	-2, 1627,
	-1, 1434,
	68, 769,
	-2, 775,
	-1, 1760,
	68, 1441,
	137, 1441,
	-2, 1611,
	-1, 1761,
	68, 1441,
	137, 1441,
	-2, 1610,
	-1, 1762,
	68, 1419,
	137, 1419,
	-2, 1597,
	-1, 1763,
	68, 1420,
	137, 1420,
	-2, 1602,
	-1, 1764,
	68, 1421,
	137, 1421,
	-2, 1534,
	-1, 1765,
	68, 1422,
	137, 1422,
	-2, 1528,
	-1, 1766,
	68, 1423,
	137, 1423,
	-2, 1471,
	-1, 1767,
	68, 1424,
	137, 1424,
	-2, 1599,
	-1, 1768,
	68, 1425,
	137, 1425,
	-2, 1532,
	-1, 1769,
	68, 1426,
	137, 1426,
	-2, 1527,
	-1, 1770,
	68, 1427,
	137, 1427,
	-2, 1520,
	-1, 1772,
	68, 1430,
	137, 1430,
	-2, 1644,
	-1, 1773,
	68, 1410,
	137, 1410,
	-2, 1629,
	-1, 1774,
	68, 1439,
	137, 1439,
	-2, 1600,
	-1, 1775,
	68, 1439,
	137, 1439,
	-2, 1628,
	-1, 1776,
	68, 1439,
	137, 1439,
	-2, 1489,
	-1, 1777,
	68, 1437,
	137, 1437,
	-2, 1619,
	-1, 1778,
	68, 1434,
	137, 1434,
	-2, 1511,
	-1, 1779,
	67, 1392,
	68, 1392,
	137, 1392,
	361, 1392,
	362, 1392,
	363, 1392,
	-2, 1470,
	-1, 1780,
	67, 1393,
	68, 1393,
	137, 1393,
	361, 1393,
	362, 1393,
	363, 1393,
	-2, 1472,
	-1, 1781,
	67, 1396,
	68, 1396,
	137, 1396,
	361, 1396,
	362, 1396,
	363, 1396,
	-2, 1601,
	-1, 1782,
	67, 1398,
	68, 1398,
	137, 1398,
	361, 1398,
	362, 1398,
	363, 1398,
	-2, 1584,
	-1, 1783,
	67, 1400,
	68, 1400,
	137, 1400,
	361, 1400,
	362, 1400,
	363, 1400,
	-2, 1533,
	-1, 1784,
	67, 1402,
	68, 1402,
	137, 1402,
	361, 1402,
	362, 1402,
	363, 1402,
	-2, 1516,
	-1, 1785,
	67, 1403,
	68, 1403,
	137, 1403,
	361, 1403,
	362, 1403,
	363, 1403,
	-2, 1517,
	-1, 1786,
	67, 1405,
	68, 1405,
	137, 1405,
	361, 1405,
	362, 1405,
	363, 1405,
	-2, 1469,
	-1, 1787,
	68, 1444,
	137, 1444,
	361, 1444,
	362, 1444,
	363, 1444,
	-2, 1494,
	-1, 1788,
	68, 1444,
	137, 1444,
	361, 1444,
	362, 1444,
	363, 1444,
	-2, 1507,
	-1, 1789,
	68, 1447,
	137, 1447,
	361, 1447,
	362, 1447,
	363, 1447,
	-2, 1490,
	-1, 1790,
	68, 1444,
	137, 1444,
	361, 1444,
	362, 1444,
	363, 1444,
	-2, 1569,
	-1, 1803,
	88, 879,
	132, 879,
	171, 879,
	174, 879,
	258, 879,
	-2, 872,
	-1, 1914,
	21, 627,
	-2, 719,
	-1, 2093,
	88, 879,
	132, 879,
	171, 879,
	174, 879,
	258, 879,
	-2, 873,
	-1, 2105,
	65, 537,
	137, 537,
	-2, 1010,
	-1, 2123,
	279, 1075,
	-2, 1054,
	-1, 2383,
	279, 1075,
	-2, 1055,
	-1, 2516,
	88, 879,
	132, 879,
	171, 879,
	174, 879,
	-2, 958,
	-1, 2519,
	88, 879,
	132, 879,
	171, 879,
	174, 879,
	-2, 958,
	-1, 2529,
	65, 537,
	137, 537,
	-2, 1011,
	-1, 2628,
	88, 879,
	132, 879,
	171, 879,
	174, 879,
	-2, 959,
	-1, 2918,
	68, 930,
	137, 930,
	-2, 879,
	-1, 2922,
	68, 930,
	137, 930,
	-2, 879,
	-1, 2936,
	68, 934,
	137, 934,
	-2, 879,
	-1, 2941,
	68, 935,
	137, 935,
	-2, 879,
}

const yyPrivate = 57344

const yyLast = 34625

var yyAct = [...]int{
	532, 2922, 1497, 2921, 2930, 2901, 173, 511, 1282, 1220,
	2812, 513, 534, 2860, 2830, 2852, 2595, 2600, 2688, 2771,
	2395, 2772, 1738, 2622, 2660, 2739, 1094, 2472, 2755, 2759,
	2621, 2682, 990, 2473, 2620, 648, 2704, 1211, 2598, 419,
	2672, 1455, 2108, 2649, 562, 2627, 2360, 1285, 425, 2590,
	430, 430, 2189, 1552, 1278, 2539, 430, 446, 455, 158,
	2190, 455, 1555, 2407, 2500, 2174, 1841, 2384, 515, 1908,
	2470, 2182, 1998, 1648, 2458, 1844, 1617, 2211, 1530, 2441,
	2188, 1145, 2185, 2336, 2333, 2406, 2331, 1812, 853, 1892,
	466, 1756, 2094, 2241, 1052, 758, 1202, 1748, 460, 2358,
	1500, 1997, 1569, 1416, 1644, 1625, 1758, 504, 1948, 1618,
	1626, 1457, 1591, 510, 2224, 1533, 1548, 505, 1136, 1897,
	2280, 1643, 1909, 1531, 2072, 2076, 750, 694, 2125, 1842,
	1068, 1493, 1811, 764, 169, 8, 1442, 1103, 168, 7,
	6, 808, 1676, 1219, 1276, 1176, 547, 110, 1424, 424,
	419, 1754, 110, 1965, 1645, 514, 53, 1154, 109, 1655,
	35, 1467, 1796, 503, 1083, 418, 1466, 2040, 1331, 1315,
	870, 1621, 522, 173, 1267, 173, 14, 799, 800, 26,
	1281, 1624, 36, 1183, 1212, 442, 1607, 1581, 762, 1275,
	749, 1916, 1207, 439, 505, 2039, 1441, 1484, 693, 645,
	436, 1128, 1336, 110, 1070, 1337, 159, 1079, 468, 32,
	23, 16, 10, 15, 1095, 13, 469, 1050, 1175, 1102,
	152, 691, 712, 2274, 454, 991, 2274, 512, 1662, 2000,
	1652, 2465, 795, 450, 797, 1954, 451, 1952, 796, 452,
	1949, 1951, 724, 1190, 647, 1026, 1186, 155, 792, 791,
	792, 792, 157, 426, 1115, 1188, 928, 929, 930, 927,
	928, 929, 930, 927, 2588, 2237, 448, 2235, 1860, 1596,
	447, 2678, 449, 2673, 435, 2591, 2471, 1420, 2748, 1620,
	985, 646, 2803, 156, 156, 458, 49, 148, 125, 156,
	2613, 656, 8, 2612, 2714, 891, 7, 1042, 790, 1985,
	766, 156, 1993, 1649, 110, 2723, 156, 156, 156, 1234,
	768, 465, 765, 2303, 767, 156, 1660, 1800, 464, 110,
	1929, 110, 925, 1567, 156, 1231, 49, 148, 125, 156,
	1930, 49, 148, 125, 1091, 1227, 2848, 108, 2715, 2074,
	153, 153, 2256, 2249, 108, 2846, 1233, 1252, 1043, 649,
	636, 1224, 635, 637, 638, 1966, 639, 640, 153, 899,
	1100, 1101, 901, 153, 153, 153, 774, 769, 773, 775,
	1428, 1429, 1226, 733, 2775, 2776, 1268, 906, 1098, 1272,
	907, 153, 1097, 1100, 1101, 1731, 153, 657, 738, 1480,
	902, 737, 2073, 779, 918, 1284, 923, 772, 2608, 761,
	760, 1111, 2680, 1271, 1112, 2749, 2750, 2242, 909, 928,
	929, 930, 927, 2834, 2835, 1357, 2683, 2684, 2685, 2686,
	2474, 2741, 2474, 2243, 2741, 2244, 2744, 2676, 1287, 430,
	1980, 873, 864, 2754, 2802, 1549, 1545, 2483, 1541, 430,
	863, 2501, 1656, 1263, 2618, 777, 2347, 2508, 2337, 1887,
	2696, 1795, 780, 1604, 1196, 1195, 2064, 455, 455, 2402,
	430, 2267, 895, 862, 2345, 920, 1189, 1187, 2269, 770,
	506, 858, 860, 1990, 742, 499, 2589, 2079, 501, 1273,
	904, 894, 124, 500, 154, 897, 2236, 1114, 921, 922,
	778, 739, 2178, 1890, 1371, 1889, 2699, 900, 903, 2615,
	1270, 2341, 763, 873, 146, 1893, 2088, 2089, 2090, 2091,
	1089, 2850, 2805, 2806, 2774, 2841, 2342, 2343, 2415, 2416,
	857, 896, 2357, 2607, 802, 2364, 961, 2764, 771, 2609,
	2101, 2344, 2711, 1286, 457, 456, 2560, 911, 2760, 905,
	912, 2650, 2651, 2652, 2654, 2653, 2915, 2931, 2869, 2845,
	741, 2814, 1661, 1078, 886, 2876, 2730, 1565, 1566, 2552,
	2880, 877, 2810, 2811, 863, 2814, 1870, 1353, 914, 1869,
	859, 1350, 1665, 1667, 1668, 1352, 1349, 1351, 1355, 1356,
	1123, 2855, 2422, 1354, 2565, 2566, 2085, 995, 916, 917,
	110, 110, 766, 898, 1132, 1131, 2339, 1093, 1092, 2932,
	776, 884, 768, 2547, 765, 2662, 767, 2926, 1076, 1075,
	1269, 908, 875, 874, 1293, 1296, 1297, 1847, 1074, 2902,
	450, 450, 740, 451, 451, 1294, 452, 452, 2705, 866,
	867, 2159, 994, 854, 2521, 1113, 2319, 2938, 2586, 1053,
	910, 793, 794, 1677, 464, 2543, 798, 2487, 1650, 2738,
	2273, 1129, 1650, 448, 448, 1986, 1650, 447, 447, 449,
	449, 2213, 2215, 959, 1919, 1653, 1859, 1048, 425, 1051,
	1058, 2272, 1850, 768, 1062, 765, 915, 767, 883, 1061,
	1023, 879, 880, 2712, 875, 874, 792, 1060, 1100, 1101,
	792, 459, 792, 694, 792, 2804, 967, 1100, 1101, 913,
	2856, 792, 1664, 2327, 792, 2713, 2282, 2281, 868, 1950,
	1065, 2063, 453, 1191, 1742, 1663, 1090, 453, 1651, 1046,
	1360, 1361, 1362, 1363, 1364, 1365, 1358, 1359, 2751, 2752,
	1099, 2851, 1431, 2925, 686, 891, 1245, 1246, 1096, 430,
	2338, 1125, 1432, 2348, 2697, 963, 964, 965, 966, 646,
	1550, 1846, 419, 419, 419, 419, 1848, 2078, 1149, 1149,
	2614, 430, 2270, 126, 126, 1054, 1055, 1056, 1057, 126,
	1059, 50, 1994, 1741, 1063, 885, 50, 2619, 455, 1051,
	425, 126, 1179, 1179, 2340, 763, 126, 126, 126, 1156,
	2661, 1430, 1544, 173, 1542, 126, 1031, 1003, 1004, 1264,
	1851, 2017, 419, 658, 126, 1666, 659, 1849, 2937, 126,
	2082, 2083, 1147, 1147, 2548, 2549, 2635, 1049, 890, 1744,
	1743, 2214, 1044, 1045, 2081, 2853, 2854, 1458, 1249, 848,
	845, 846, 847, 662, 1854, 2022, 1248, 2021, 2020, 2018,
	1151, 1080, 1084, 1084, 1084, 1197, 650, 1295, 2881, 2106,
	1218, 926, 1221, 688, 689, 690, 650, 1229, 2160, 2162,
	2163, 2164, 2161, 1028, 1080, 1080, 1708, 2944, 1906, 1707,
	1085, 1086, 2545, 2369, 1143, 1144, 2544, 1250, 1139, 1140,
	1141, 1142, 2438, 743, 661, 1235, 891, 1968, 664, 663,
	2434, 1149, 2517, 1149, 863, 1751, 463, 1030, 734, 1732,
	647, 2019, 1124, 1985, 1907, 1077, 1200, 2069, 1203, 1204,
	1158, 2943, 1087, 1458, 1067, 436, 2066, 1283, 1752, 1753,
	1105, 1106, 1973, 1108, 1109, 1110, 1538, 1584, 1192, 1172,
	783, 788, 789, 1931, 1116, 1117, 926, 1104, 926, 110,
	1107, 734, 2355, 2934, 2916, 2107, 1649, 2911, 1907, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1130, 1853, 2905, 926, 1326, 1327, 1857, 1855, 2904,
	2885, 2107, 1856, 1335, 1024, 1907, 429, 429, 931, 1081,
	926, 736, 437, 2862, 735, 1864, 1384, 960, 1266, 435,
	1374, 1375, 1376, 2824, 2782, 969, 1171, 1280, 1835, 1181,
	110, 1180, 1170, 1390, 110, 1737, 1391, 2777, 1393, 1798,
	768, 1157, 2935, 1658, 768, 110, 2912, 974, 1398, 1399,
	1209, 1210, 1712, 1640, 736, 110, 2732, 735, 2731, 2023,
	2024, 1214, 1658, 1217, 2438, 1563, 1225, 1261, 1658, 1658,
	1232, 928, 929, 930, 927, 450, 1066, 1298, 451, 1582,
	1414, 452, 2863, 430, 1241, 1440, 1149, 1444, 1258, 1446,
	1447, 1259, 2825, 2701, 430, 1329, 1265, 694, 2356, 2728,
	1456, 1277, 2727, 2726, 1149, 1237, 2701, 2725, 448, 1082,
	1125, 1736, 447, 1133, 449, 446, 2507, 2301, 1417, 1257,
	1256, 1253, 1255, 647, 1254, 2733, 1383, 1816, 1274, 2899,
	856, 785, 786, 787, 1479, 1236, 1797, 2700, 1279, 2567,
	891, 2864, 1485, 1485, 888, 1125, 2424, 1125, 1125, 1366,
	1367, 430, 1370, 1440, 1440, 1483, 1317, 1149, 1528, 1540,
	1385, 2208, 2045, 1687, 419, 1439, 1149, 2001, 2701, 889,
	1983, 2701, 2701, 1392, 1977, 1394, 2701, 1975, 1445, 2532,
	928, 929, 930, 927, 2370, 1448, 1449, 1450, 2226, 928,
	929, 930, 927, 430, 1440, 1149, 2109, 1574, 430, 430,
	1577, 1988, 1970, 1963, 1961, 1580, 2701, 1959, 1931, 1586,
	1369, 1957, 1987, 1324, 1325, 2425, 173, 889, 1815, 173,
	173, 1979, 173, 1733, 1832, 2894, 1735, 1560, 1561, 1472,
	1907, 926, 1703, 1523, 1524, 1686, 926, 1688, 1487, 1816,
	1716, 1395, 1080, 1971, 1478, 2374, 1976, 1481, 1482, 1639,
	1589, 1436, 1238, 1546, 1415, 972, 1473, 1384, 1384, 1628,
	876, 856, 1715, 1706, 1384, 1384, 1443, 1084, 851, 1635,
	1551, 1971, 1964, 1962, 1571, 1595, 1958, 1697, 1598, 1599,
	1958, 1601, 1178, 1178, 1461, 849, 1573, 1816, 1556, 1557,
	1558, 1559, 1732, 1456, 1477, 1453, 1452, 1149, 1647, 1562,
	1575, 1576, 1696, 1695, 1421, 1539, 1488, 1657, 1469, 926,
	1464, 1465, 1463, 1489, 1490, 942, 941, 951, 952, 944,
	945, 946, 947, 948, 949, 950, 943, 1474, 1475, 1459,
	1460, 926, 926, 1468, 1641, 1470, 1471, 1443, 1629, 1242,
	1486, 943, 1918, 2765, 1373, 1372, 926, 2365, 1476, 2264,
	1529, 1081, 660, 1527, 1547, 2636, 2524, 2522, 1670, 1071,
	1674, 1675, 110, 1072, 2882, 110, 110, 1623, 110, 1949,
	1861, 926, 926, 2439, 1623, 1277, 1658, 1135, 2429, 2426,
	535, 544, 2463, 2008, 1572, 855, 536, 2766, 543, 537,
	541, 540, 538, 539, 1137, 861, 1592, 2275, 1590, 2637,
	2525, 2523, 2180, 766, 1974, 1138, 2366, 1921, 1243, 865,
	766, 856, 1943, 768, 1332, 765, 882, 767, 1593, 110,
	768, 2228, 765, 1609, 767, 930, 927, 1288, 1289, 1290,
	1291, 1292, 1568, 1438, 2799, 1630, 1713, 1404, 1332, 927,
	1683, 545, 2555, 1720, 1638, 1323, 1632, 2554, 2245, 450,
	2367, 1082, 451, 2137, 1184, 452, 1593, 2136, 1637, 1134,
	2131, 1320, 1322, 1319, 504, 1321, 863, 1791, 665, 2129,
	1642, 1333, 1334, 542, 2536, 2920, 2879, 1368, 2908, 430,
	430, 430, 448, 1813, 499, 1378, 447, 501, 449, 1759,
	1388, 2870, 500, 1820, 1125, 959, 2865, 2815, 1678, 2790,
	2767, 1389, 1669, 2716, 1825, 768, 2674, 765, 2616, 767,
	2505, 1633, 2183, 1634, 928, 929, 930, 927, 1125, 1671,
	2878, 2642, 1317, 2464, 2032, 863, 1418, 2332, 2639, 1682,
	1422, 1396, 1397, 1425, 2638, 1400, 1401, 1402, 1403, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 2617, 1840, 2506,
	2526, 942, 941, 951, 952, 944, 945, 946, 947, 948,
	949, 950, 943, 2504, 2346, 2170, 1911, 1911, 1540, 1911,
	1710, 1836, 946, 947, 948, 949, 950, 943, 1672, 1673,
	928, 929, 930, 927, 2168, 863, 928, 929, 930, 927,
	2260, 2466, 2240, 1149, 430, 2166, 2156, 1953, 1792, 2239,
	928, 929, 930, 927, 2169, 2769, 1822, 1823, 995, 863,
	425, 1730, 2154, 1179, 2153, 1540, 1826, 1827, 1938, 2152,
	1940, 2149, 2143, 2167, 173, 2140, 1863, 1745, 928, 929,
	930, 927, 1759, 1799, 2165, 2155, 1913, 1418, 1917, 2139,
	1922, 1923, 1924, 1925, 1418, 1418, 1915, 1927, 1612, 1611,
	1610, 1084, 1834, 994, 928, 929, 930, 927, 1606, 1605,
	1821, 1239, 1041, 2010, 1120, 2840, 1122, 2596, 1126, 1127,
	1981, 2836, 2800, 1647, 2736, 2698, 1699, 2675, 1831, 1833,
	1149, 2626, 1149, 1944, 1149, 1594, 2594, 2592, 1597, 863,
	2571, 1600, 2569, 1937, 1602, 1121, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 2175, 2294, 2538, 1174, 2503, 2502,
	2499, 1828, 1995, 2492, 1914, 2486, 1999, 1155, 1149, 2026,
	1891, 2433, 2431, 1935, 768, 2420, 765, 1829, 767, 1698,
	1830, 2419, 1942, 2324, 2033, 2323, 1991, 2271, 2238, 1149,
	944, 945, 946, 947, 948, 949, 950, 943, 2035, 2219,
	2293, 1928, 928, 929, 930, 927, 2157, 2150, 1936, 1934,
	1933, 1539, 934, 935, 936, 937, 938, 939, 940, 932,
	110, 2758, 1147, 928, 929, 930, 927, 2146, 2145, 2037,
	2144, 863, 941, 951, 952, 944, 945, 946, 947, 948,
	949, 950, 943, 1147, 928, 929, 930, 927, 1862, 2025,
	1865, 1866, 1867, 1868, 2067, 1992, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	2034, 1734, 2012, 2006, 1989, 2056, 1982, 1984, 1149, 1614,
	1680, 2086, 1608, 1684, 1685, 1440, 928, 929, 930, 927,
	1427, 2105, 592, 591, 1184, 2002, 2003, 2111, 951, 952,
	944, 945, 946, 947, 948, 949, 950, 943, 2016, 1240,
	1277, 1002, 998, 2120, 928, 929, 930, 927, 928, 929,
	930, 927, 1694, 1945, 997, 973, 2128, 1185, 852, 156,
	1701, 2718, 148, 125, 2133, 2134, 2135, 2687, 1204, 2519,
	2138, 928, 929, 930, 927, 2518, 2070, 2516, 1714, 1739,
	1740, 1717, 1718, 1719, 1911, 2491, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 2171, 2096, 2060, 2478, 2057, 2469,
	419, 2468, 2457, 2456, 1440, 863, 1540, 1540, 1540, 1540,
	928, 929, 930, 927, 2095, 2005, 153, 863, 1540, 2375,
	2112, 1911, 2041, 2299, 2292, 1691, 2102, 2046, 2191, 2126,
	1149, 2284, 2279, 2126, 928, 929, 930, 927, 2223, 1817,
	2191, 2068, 430, 430, 2084, 2065, 2114, 1960, 1956, 2127,
	2116, 1955, 1721, 2104, 1711, 1709, 173, 2123, 1705, 8,
	1704, 173, 1702, 7, 1693, 2110, 1690, 1689, 2602, 2204,
	1613, 110, 1413, 2115, 1387, 1386, 1377, 2122, 1209, 1210,
	1161, 2124, 1384, 1214, 1384, 1217, 2130, 2255, 1443, 1437,
	2259, 928, 929, 930, 927, 1159, 1149, 2933, 2893, 2266,
	1451, 928, 929, 930, 927, 156, 2151, 2887, 2877, 651,
	652, 653, 654, 2874, 2872, 2229, 2789, 2734, 992, 1199,
	2233, 2176, 650, 2658, 2646, 2643, 2179, 2181, 2580, 2192,
	2193, 2194, 2195, 2205, 2578, 2203, 2113, 1418, 1418, 1418,
	1418, 2562, 1417, 2207, 2117, 2118, 2561, 2254, 2220, 2206,
	2558, 2217, 1539, 1539, 1539, 1539, 2557, 1491, 647, 2252,
	2551, 2119, 153, 1178, 1539, 2258, 2231, 2227, 2287, 2230,
	2289, 1160, 2216, 2511, 2075, 1208, 2268, 1201, 1069, 2172,
	863, 2132, 2099, 2248, 2098, 2097, 2335, 2263, 2246, 2253,
	2601, 1213, 2251, 1216, 1205, 2055, 2350, 1969, 430, 1570,
	2262, 1920, 110, 1759, 1570, 1570, 1885, 110, 863, 863,
	863, 1814, 2276, 928, 929, 930, 927, 1540, 1813, 1318,
	2373, 153, 1578, 1435, 2285, 2286, 2377, 110, 2277, 1434,
	1262, 1840, 1840, 1840, 110, 1228, 2405, 768, 2408, 1206,
	2408, 2408, 2141, 2142, 768, 2283, 1025, 2413, 2147, 2148,
	1022, 1021, 1149, 1149, 2290, 2291, 1020, 1019, 1018, 1017,
	1016, 2320, 1015, 2250, 2009, 1014, 2177, 1013, 1012, 1011,
	2257, 2328, 2027, 2028, 2325, 1010, 1009, 1008, 1007, 1006,
	2030, 2031, 1005, 430, 2326, 1001, 2351, 1000, 2335, 999,
	996, 989, 988, 2036, 986, 2371, 2353, 1440, 1440, 2404,
	2403, 2354, 2368, 985, 2095, 2372, 1147, 1147, 2361, 2362,
	984, 983, 982, 1418, 981, 980, 2058, 2059, 1425, 979,
	978, 977, 976, 975, 2288, 2409, 2410, 971, 110, 970,
	893, 850, 2559, 2417, 2418, 2376, 2411, 2026, 768, 2378,
	2379, 1819, 2564, 1802, 2304, 881, 2467, 2820, 2305, 2306,
	2307, 2308, 2818, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2442, 2443, 1539, 2330, 928, 929, 930, 927, 2489,
	2773, 2445, 2428, 2427, 2087, 2432, 1932, 96, 110, 2435,
	2436, 2297, 1616, 430, 2446, 2423, 892, 2202, 768, 1903,
	1904, 52, 928, 929, 930, 927, 2296, 2200, 2450, 2453,
	2454, 2455, 2201, 2448, 928, 929, 930, 927, 2430, 2447,
	1522, 2437, 2462, 2198, 2381, 2295, 2197, 2196, 2199, 928,
	929, 930, 927, 51, 427, 2054, 2449, 2919, 2583, 1978,
	2582, 432, 2321, 2322, 2380, 2053, 2479, 1972, 928, 929,
	930, 927, 2062, 2480, 2329, 433, 2052, 2482, 928, 929,
	930, 927, 1193, 1996, 2387, 1967, 1027, 2485, 928, 929,
	930, 927, 2481, 2493, 2581, 1739, 1740, 1793, 2515, 928,
	929, 930, 927, 1222, 1579, 431, 887, 434, 2397, 1911,
	1540, 2529, 2753, 2121, 2071, 1805, 1806, 1807, 1809, 1454,
	1433, 2390, 2051, 1899, 1902, 1903, 1904, 1900, 2385, 1901,
	1905, 2495, 1149, 2400, 2401, 2537, 2827, 1888, 2498, 2386,
	1824, 2050, 1526, 430, 1119, 928, 929, 930, 927, 1373,
	1372, 1118, 2405, 1039, 1040, 919, 2531, 2452, 2049, 1636,
	2232, 1073, 2234, 2510, 928, 929, 930, 927, 1029, 2048,
	1037, 1038, 2888, 2047, 2497, 1440, 2391, 2808, 2527, 863,
	1418, 928, 929, 930, 927, 1418, 2540, 2796, 2528, 650,
	2403, 2535, 928, 929, 930, 927, 928, 929, 930, 927,
	1035, 1036, 2191, 1033, 1034, 173, 651, 652, 653, 654,
	2585, 2044, 2794, 2574, 2761, 2563, 2746, 2745, 863, 650,
	2225, 2278, 2743, 2530, 2572, 2735, 2669, 2668, 2593, 2533,
	1155, 2568, 2534, 2570, 928, 929, 930, 927, 2494, 2575,
	2476, 2191, 2576, 2298, 2610, 2475, 2460, 1032, 682, 2043,
	1458, 2459, 863, 1149, 1149, 2573, 1539, 2261, 863, 2629,
	2822, 2821, 2629, 2042, 2587, 1804, 1692, 2399, 878, 1845,
	2597, 2821, 928, 929, 930, 927, 1088, 2822, 2553, 2477,
	60, 1840, 160, 3, 2, 2611, 928, 929, 930, 927,
	1564, 1153, 1, 1426, 2393, 655, 2209, 2210, 863, 863,
	2038, 2451, 863, 863, 2630, 2633, 2632, 1147, 2540, 2625,
	2212, 1654, 2531, 1886, 1794, 2349, 2392, 2394, 1064, 1456,
	687, 2666, 2029, 928, 929, 930, 927, 1379, 1247, 2670,
	2671, 2007, 2647, 2648, 2624, 782, 2656, 2657, 2644, 872,
	1244, 2663, 871, 2412, 2655, 928, 929, 930, 927, 869,
	1330, 110, 549, 2695, 928, 929, 930, 927, 1328, 1619,
	2664, 2173, 2665, 2512, 2513, 2514, 2826, 2859, 2788, 2829,
	1260, 2707, 533, 2737, 684, 2679, 679, 2792, 669, 2640,
	2641, 928, 929, 930, 927, 681, 680, 863, 2681, 2599,
	1659, 2402, 2693, 924, 2247, 708, 585, 560, 987, 863,
	2702, 1230, 667, 2388, 1223, 1894, 673, 2302, 784, 2398,
	2709, 2708, 559, 2509, 2080, 2710, 2717, 2720, 676, 781,
	709, 2724, 1603, 2677, 1194, 1215, 1198, 2603, 1899, 1902,
	1903, 1904, 1900, 2729, 1901, 1905, 2634, 2520, 2363, 2100,
	2929, 2918, 863, 2900, 2886, 2813, 2914, 678, 2747, 2762,
	2844, 677, 2875, 2742, 2740, 2606, 2604, 666, 2605, 2868,
	2809, 672, 470, 1543, 417, 2757, 747, 2659, 1615, 471,
	1818, 2801, 2756, 2645, 2783, 2786, 674, 2103, 670, 2763,
	1801, 675, 2093, 2092, 2768, 1299, 933, 1316, 2317, 2318,
	968, 509, 2787, 1681, 2778, 2779, 2780, 2781, 521, 668,
	2795, 2077, 2797, 2798, 2396, 2488, 2793, 2791, 2218, 59,
	58, 57, 2490, 685, 56, 1585, 181, 551, 180, 2785,
	2831, 2807, 531, 530, 529, 528, 527, 1898, 1896, 1895,
	2833, 1535, 2819, 2817, 2816, 1534, 1583, 671, 2414, 1858,
	1852, 1492, 2832, 2823, 2770, 2721, 2722, 2550, 2158, 863,
	2546, 2542, 2421, 2837, 2628, 2382, 2383, 2389, 2838, 1808,
	807, 803, 805, 806, 804, 2015, 2858, 2011, 2847, 2849,
	1837, 1839, 2842, 1838, 2359, 1750, 1749, 1747, 2857, 2861,
	1746, 1047, 2866, 2694, 863, 928, 929, 930, 927, 2496,
	1757, 1755, 2867, 2444, 2871, 2440, 2873, 1627, 2221, 2222,
	1423, 2061, 1536, 1532, 2833, 2884, 1803, 1283, 87, 683,
	86, 94, 137, 863, 46, 863, 2832, 165, 2883, 823,
	164, 2890, 167, 2892, 166, 2895, 163, 1946, 1947, 162,
	1182, 161, 2631, 2861, 863, 2896, 1283, 644, 1283, 2903,
	2910, 1418, 2907, 2913, 37, 33, 12, 11, 34, 21,
	1418, 22, 2909, 2577, 20, 1251, 2579, 1283, 2917, 19,
	25, 2924, 31, 30, 1357, 2928, 2927, 954, 103, 958,
	2584, 102, 2936, 2891, 29, 101, 100, 99, 2941, 2924,
	2940, 98, 28, 2939, 2928, 955, 957, 953, 2942, 956,
	942, 941, 951, 952, 944, 945, 946, 947, 948, 949,
	950, 943, 942, 941, 951, 952, 944, 945, 946, 947,
	948, 949, 950, 943, 18, 41, 40, 39, 9, 93,
	91, 27, 811, 942, 941, 951, 952, 944, 945, 946,
	947, 948, 949, 950, 943, 92, 89, 90, 88, 71,
	2889, 70, 831, 835, 837, 839, 841, 842, 844, 69,
	848, 845, 846, 847, 2352, 84, 826, 827, 828, 829,
	809, 810, 832, 83, 812, 82, 813, 814, 815, 816,
	817, 818, 819, 820, 821, 822, 824, 830, 81, 80,
	79, 77, 78, 707, 68, 834, 836, 838, 840, 843,
	942, 941, 951, 952, 944, 945, 946, 947, 948, 949,
	950, 943, 67, 66, 65, 2300, 64, 75, 85, 76,
	74, 2839, 73, 72, 63, 62, 1353, 2692, 2004, 61,
	1350, 122, 825, 123, 1352, 1349, 1351, 1355, 1356, 121,
	120, 119, 1354, 118, 2703, 117, 116, 42, 43, 1570,
	44, 45, 942, 941, 951, 952, 944, 945, 946, 947,
	948, 949, 950, 943, 2719, 942, 941, 951, 952, 944,
	945, 946, 947, 948, 949, 950, 943, 133, 132, 134,
	353, 567, 136, 138, 135, 130, 128, 131, 129, 127,
	54, 316, 17, 24, 4, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 0, 0, 0, 261, 0,
	2692, 286, 0, 0, 0, 558, 0, 0, 345, 300,
	0, 0, 0, 0, 615, 623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 0, 0, 548,
	592, 591, 535, 544, 0, 0, 243, 179, 536, 2484,
	543, 537, 541, 540, 538, 539, 0, 607, 0, 0,
	2013, 2014, 0, 0, 507, 520, 2689, 524, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1360,
	1361, 1362, 1363, 1364, 1365, 1358, 1359, 0, 0, 0,
	0, 517, 518, 0, 0, 0, 0, 568, 0, 519,
	0, 0, 563, 545, 546, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	2692, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 542, 566, 570, 255, 629,
	564, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 630, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 2556,
	0, 0, 0, 0, 561, 0, 0, 833, 376, 0,
	0, 613, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 565, 2898, 336, 318, 626, 508, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 611, 314, 0, 1679, 625, 606, 608, 609, 612,
	616, 617, 618, 619, 620, 622, 624, 628, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 942, 941,
	951, 952, 944, 945, 946, 947, 948, 949, 950, 943,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 2690, 0, 0, 0, 2691, 0, 627, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 569, 304, 305,
	306, 307, 614, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 636, 610,
	635, 637, 638, 634, 639, 640, 621, 526, 0, 573,
	632, 631, 633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 599, 578, 579, 580, 525, 581, 576, 577,
	600, 571, 596, 597, 550, 574, 582, 595, 583, 598,
	601, 602, 641, 642, 589, 643, 586, 603, 594, 593,
	584, 572, 604, 605, 557, 552, 587, 588, 575, 590,
	553, 554, 555, 556, 353, 567, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 558,
	0, 0, 345, 300, 0, 0, 0, 0, 615, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 0, 0, 548, 592, 591, 535, 544, 0, 0,
	243, 179, 536, 0, 543, 537, 541, 540, 538, 539,
	0, 607, 0, 0, 0, 0, 0, 0, 507, 520,
	0, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 0, 0, 0,
	0, 568, 0, 519, 0, 0, 563, 545, 546, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 542,
	566, 570, 255, 629, 564, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	630, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 561, 0,
	0, 0, 376, 0, 0, 613, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 565, 0, 336, 318,
	626, 508, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 1381, 1380, 1382,
	388, 268, 226, 227, 423, 611, 314, 0, 0, 625,
	606, 608, 609, 612, 616, 617, 618, 619, 620, 622,
	624, 628, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 569, 304, 305, 306, 307, 614, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 636, 610, 635, 637, 638, 634, 639, 640,
	621, 526, 0, 573, 632, 631, 633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 599, 578, 579, 580,
	525, 581, 576, 577, 600, 571, 596, 597, 550, 574,
	582, 595, 583, 598, 601, 602, 641, 642, 589, 643,
	586, 603, 594, 593, 584, 572, 604, 605, 557, 552,
	587, 588, 575, 590, 553, 554, 555, 556, 353, 567,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 0, 0, 0, 261, 0, 0, 286,
	0, 0, 0, 558, 0, 0, 345, 300, 0, 0,
	0, 0, 615, 623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 0, 0, 548, 592, 591,
	535, 544, 0, 0, 243, 179, 536, 0, 543, 537,
	541, 540, 538, 539, 0, 607, 0, 0, 0, 0,
	0, 0, 507, 520, 0, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 0, 0, 0, 0, 568, 0, 519, 0, 0,
	563, 545, 546, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 542, 566, 570, 255, 629, 564, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 630, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 561, 0, 0, 0, 376, 0, 0, 613,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	565, 0, 336, 318, 626, 508, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 611,
	314, 0, 0, 625, 606, 608, 609, 612, 616, 617,
	618, 619, 620, 622, 624, 628, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 2690,
	0, 0, 0, 2691, 0, 627, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 569, 304, 305, 306, 307,
	614, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 636, 610, 635, 637,
	638, 634, 639, 640, 621, 526, 0, 573, 632, 631,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	599, 578, 579, 580, 525, 581, 576, 577, 600, 571,
	596, 597, 550, 574, 582, 595, 583, 598, 601, 602,
	641, 642, 589, 643, 586, 603, 594, 593, 584, 572,
	604, 605, 557, 552, 587, 588, 575, 590, 553, 554,
	555, 556, 353, 567, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 0, 0, 0,
	261, 1419, 0, 286, 0, 0, 0, 558, 0, 0,
	345, 300, 0, 0, 0, 0, 615, 623, 0, 0,
	0, 0, 0, 0, 0, 1553, 0, 0, 516, 0,
	0, 548, 592, 591, 535, 544, 0, 0, 243, 179,
	536, 0, 543, 537, 541, 540, 538, 539, 0, 607,
	0, 0, 0, 0, 0, 0, 507, 520, 0, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 0, 0, 0, 0, 568,
	0, 519, 0, 0, 1554, 545, 546, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 542, 566, 570,
	255, 629, 564, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 630, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 0, 0, 0,
	376, 0, 0, 613, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 565, 0, 336, 318, 626, 508,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 611, 314, 0, 0, 625, 606, 608,
	609, 612, 616, 617, 618, 619, 620, 622, 624, 628,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 569,
	304, 305, 306, 307, 614, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	636, 610, 635, 637, 638, 634, 639, 640, 621, 526,
	0, 573, 632, 631, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 599, 578, 579, 580, 525, 581,
	576, 577, 600, 571, 596, 597, 550, 574, 582, 595,
	583, 598, 601, 602, 641, 642, 589, 643, 586, 603,
	594, 593, 584, 572, 604, 605, 557, 552, 587, 588,
	575, 590, 553, 554, 555, 556, 156, 353, 567, 384,
	385, 386, 408, 370, 0, 420, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 962, 0, 0, 345, 300, 0, 0, 0,
	0, 615, 623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 516, 0, 0, 548, 592, 591, 535,
	544, 0, 0, 243, 179, 536, 0, 543, 537, 541,
	540, 538, 539, 0, 607, 0, 0, 0, 0, 0,
	0, 507, 520, 0, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 517, 518,
	0, 0, 0, 0, 568, 0, 519, 0, 0, 563,
	545, 546, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 542, 566, 570, 255, 629, 564, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 630, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 561, 0, 0, 0, 376, 0, 0, 613, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 565,
	0, 336, 318, 626, 508, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 611, 314,
	0, 0, 625, 606, 608, 609, 612, 616, 617, 618,
	619, 620, 622, 624, 628, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 569, 304, 305, 306, 307, 614,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 636, 610, 635, 637, 638,
	634, 639, 640, 621, 526, 0, 573, 632, 631, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 126, 328, 266, 599,
	578, 579, 580, 525, 581, 576, 577, 600, 571, 596,
	597, 550, 574, 582, 595, 583, 598, 601, 602, 641,
	642, 589, 643, 586, 603, 594, 593, 584, 572, 604,
	605, 557, 552, 587, 588, 575, 590, 553, 554, 555,
	556, 353, 567, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 523, 0, 0, 0, 261,
	2897, 0, 286, 0, 0, 0, 558, 0, 0, 345,
	300, 0, 0, 0, 0, 615, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 0, 0,
	548, 592, 591, 535, 544, 0, 0, 243, 179, 536,
	0, 543, 537, 541, 540, 538, 539, 0, 607, 0,
	0, 0, 0, 0, 0, 507, 520, 0, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 517, 518, 0, 0, 0, 0, 568, 0,
	519, 0, 0, 563, 545, 546, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 542, 566, 570, 255,
	629, 564, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 630, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 0, 0, 0, 376,
	0, 0, 613, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 565, 0, 336, 318, 626, 508, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 611, 314, 0, 0, 625, 606, 608, 609,
	612, 616, 617, 618, 619, 620, 622, 624, 628, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 569, 304,
	305, 306, 307, 614, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 636,
	610, 635, 637, 638, 634, 639, 640, 621, 526, 0,
	573, 632, 631, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 287,
	0, 328, 266, 599, 578, 579, 580, 525, 581, 576,
	577, 600, 571, 596, 597, 550, 574, 582, 595, 583,
	598, 601, 602, 641, 642, 589, 643, 586, 603, 594,
	593, 584, 572, 604, 605, 557, 552, 587, 588, 575,
	590, 553, 554, 555, 556, 353, 567, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	0, 0, 0, 261, 1419, 0, 286, 0, 0, 0,
	558, 0, 0, 345, 300, 0, 0, 0, 0, 615,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 0, 548, 592, 591, 535, 544, 0,
	0, 243, 179, 536, 0, 543, 537, 541, 540, 538,
	539, 0, 607, 0, 0, 0, 0, 0, 0, 507,
	520, 0, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 517, 518, 0, 0,
	0, 0, 568, 0, 519, 0, 0, 563, 545, 546,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	542, 566, 570, 255, 629, 564, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 630, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 561,
	0, 0, 0, 376, 0, 0, 613, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 565, 0, 336,
	318, 626, 508, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 611, 314, 0, 0,
	625, 606, 608, 609, 612, 616, 617, 618, 619, 620,
	622, 624, 628, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 569, 304, 305, 306, 307, 614, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 636, 610, 635, 637, 638, 634, 639,
	640, 621, 526, 0, 573, 632, 631, 633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 599, 578, 579,
	580, 525, 581, 576, 577, 600, 571, 596, 597, 550,
	574, 582, 595, 583, 598, 601, 602, 641, 642, 589,
	643, 586, 603, 594, 593, 584, 572, 604, 605, 557,
	552, 587, 588, 575, 590, 553, 554, 555, 556, 353,
	567, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 558, 0, 0, 345, 300, 0,
	0, 0, 0, 615, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 0, 0, 548, 592,
	591, 535, 544, 0, 0, 243, 179, 536, 0, 543,
	537, 541, 540, 538, 539, 0, 607, 0, 0, 0,
	0, 0, 0, 507, 520, 0, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 1177, 0, 0, 0, 568, 0, 519, 0,
	0, 563, 545, 546, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 542, 566, 570, 255, 629, 564,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 630, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 561, 0, 0, 0, 376, 0, 0,
	613, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 565, 0, 336, 318, 626, 508, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	611, 314, 0, 0, 625, 606, 608, 609, 612, 616,
	617, 618, 619, 620, 622, 624, 628, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 569, 304, 305, 306,
	307, 614, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 636, 610, 635,
	637, 638, 634, 639, 640, 621, 526, 0, 573, 632,
	631, 633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 599, 578, 579, 580, 525, 581, 576, 577, 600,
	571, 596, 597, 550, 574, 582, 595, 583, 598, 601,
	602, 641, 642, 589, 643, 586, 603, 594, 593, 584,
	572, 604, 605, 557, 552, 587, 588, 575, 590, 553,
	554, 555, 556, 0, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 353, 567, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 558, 0,
	0, 345, 300, 0, 0, 0, 0, 615, 623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 0, 548, 592, 591, 535, 544, 0, 0, 243,
	179, 536, 0, 543, 537, 541, 540, 538, 539, 0,
	607, 0, 0, 0, 0, 0, 0, 507, 520, 0,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 0, 0, 0, 0,
	568, 0, 519, 0, 0, 563, 545, 546, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 542, 566,
	570, 255, 629, 564, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 630,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 561, 0, 0,
	0, 376, 0, 0, 613, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 565, 0, 336, 318, 626,
	508, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 611, 314, 0, 0, 625, 606,
	608, 609, 612, 616, 617, 618, 619, 620, 622, 624,
	628, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	569, 304, 305, 306, 307, 614, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 636, 610, 635, 637, 638, 634, 639, 640, 621,
	526, 0, 573, 632, 631, 633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 599, 578, 579, 580, 525,
	581, 576, 577, 600, 571, 596, 597, 550, 574, 582,
	595, 583, 598, 601, 602, 641, 642, 589, 643, 586,
	603, 594, 593, 584, 572, 604, 605, 557, 552, 587,
	588, 575, 590, 553, 554, 555, 556, 353, 567, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 558, 0, 0, 345, 300, 0, 0, 0,
	0, 615, 623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 516, 0, 0, 548, 592, 591, 535,
	544, 0, 0, 243, 179, 536, 0, 543, 537, 541,
	540, 538, 539, 0, 607, 0, 0, 0, 0, 0,
	0, 507, 520, 0, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 517, 518,
	0, 0, 0, 0, 568, 0, 519, 0, 0, 563,
	545, 546, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 542, 566, 570, 255, 629, 564, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 630, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 561, 0, 0, 0, 376, 0, 0, 613, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 565,
	0, 336, 318, 626, 508, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 611, 314,
	0, 0, 625, 606, 608, 609, 612, 616, 617, 618,
	619, 620, 622, 624, 628, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 569, 304, 305, 306, 307, 614,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 636, 610, 635, 637, 638,
	634, 639, 640, 621, 526, 0, 573, 632, 631, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 599,
	578, 579, 580, 525, 581, 576, 577, 600, 571, 596,
	597, 550, 574, 582, 595, 583, 598, 601, 602, 641,
	642, 589, 643, 586, 603, 594, 593, 584, 572, 604,
	605, 557, 552, 587, 588, 575, 590, 553, 554, 555,
	556, 353, 567, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 1300, 0, 0, 0, 523, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 558, 0, 0, 345,
	300, 0, 0, 0, 0, 615, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 0, 0,
	548, 592, 591, 535, 544, 0, 0, 243, 179, 536,
	0, 543, 537, 541, 540, 538, 539, 0, 607, 0,
	0, 0, 0, 0, 0, 0, 520, 0, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 517, 518, 0, 0, 0, 0, 568, 0,
	519, 0, 0, 563, 545, 546, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 542, 566, 570, 255,
	629, 564, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 630, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 0, 0, 0, 376,
	0, 0, 613, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 565, 0, 336, 318, 626, 0, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	1301, 1302, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 611, 314, 0, 0, 625, 606, 608, 609,
	612, 616, 617, 618, 619, 620, 622, 624, 628, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 569, 304,
	305, 306, 307, 614, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 636,
	610, 635, 637, 638, 634, 639, 640, 621, 526, 0,
	573, 632, 631, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 287,
	0, 328, 266, 599, 578, 579, 580, 525, 581, 576,
	577, 600, 571, 596, 597, 550, 574, 582, 595, 583,
	598, 601, 602, 641, 642, 589, 643, 586, 603, 594,
	593, 584, 572, 604, 605, 557, 552, 587, 588, 575,
	590, 553, 554, 555, 556, 353, 567, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	558, 0, 0, 345, 300, 0, 0, 0, 0, 615,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 548, 592, 591, 535, 544, 0,
	0, 243, 179, 536, 0, 543, 537, 541, 540, 538,
	539, 0, 607, 0, 0, 0, 0, 0, 0, 507,
	520, 0, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 517, 518, 0, 0,
	0, 0, 568, 0, 519, 0, 0, 563, 545, 546,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	542, 566, 570, 255, 629, 564, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 630, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 561,
	0, 0, 0, 376, 0, 0, 613, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 565, 0, 336,
	318, 626, 508, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 611, 314, 0, 0,
	625, 606, 608, 609, 612, 616, 617, 618, 619, 620,
	622, 624, 628, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 569, 304, 305, 306, 307, 614, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 636, 610, 635, 637, 638, 634, 639,
	640, 621, 526, 0, 573, 632, 631, 633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 599, 578, 579,
	580, 525, 581, 576, 577, 600, 571, 596, 597, 550,
	574, 582, 595, 583, 598, 601, 602, 641, 642, 589,
	643, 586, 603, 594, 593, 584, 572, 604, 605, 557,
	552, 587, 588, 575, 590, 553, 554, 555, 556, 353,
	567, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 558, 0, 0, 345, 300, 0,
	0, 0, 0, 615, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 0, 0, 548, 592,
	591, 535, 544, 0, 0, 243, 179, 536, 0, 543,
	537, 541, 540, 538, 539, 0, 607, 0, 0, 0,
	0, 0, 0, 0, 520, 0, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 0, 0, 0, 0, 568, 0, 519, 0,
	0, 563, 545, 546, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 542, 566, 570, 255, 629, 564,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 630, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 561, 0, 0, 0, 376, 0, 0,
	613, 0, 0, 0, 349, 0, 0, 285, 0, 0,
	0, 565, 0, 336, 318, 626, 0, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 0, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	611, 314, 0, 0, 625, 606, 608, 609, 612, 616,
	617, 618, 619, 620, 622, 624, 628, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 569, 304, 305, 306,
	307, 614, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 636, 610, 635,
	637, 638, 634, 639, 640, 621, 526, 0, 573, 632,
	631, 633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 599, 578, 579, 580, 525, 581, 576, 577, 600,
	571, 596, 597, 550, 574, 582, 595, 583, 598, 601,
	602, 641, 642, 589, 643, 586, 603, 594, 593, 584,
	572, 604, 605, 557, 552, 587, 588, 575, 590, 553,
	554, 555, 556, 0, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 156, 353, 49, 148, 125, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	141, 0, 261, 0, 150, 286, 0, 0, 0, 108,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	153, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 124, 147, 154, 0, 95, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 171, 0, 0, 0, 349,
	0, 0, 285, 146, 140, 139, 392, 0, 336, 318,
	55, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 142, 143,
	144, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 371, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 174, 0,
	0, 0, 182, 0, 0, 0, 145, 0, 183, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 126, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 0, 0,
	0, 384, 385, 386, 408, 370, 353, 184, 38, 172,
	175, 177, 176, 0, 47, 5, 0, 316, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 993, 0, 0, 178, 0, 0, 535, 544,
	0, 0, 243, 179, 536, 0, 543, 537, 541, 540,
	538, 539, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 542, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	0, 0, 0, 384, 385, 386, 408, 370, 0, 420,
	156, 353, 49, 148, 125, 0, 0, 0, 0, 0,
	0, 0, 316, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 345,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 445, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 0, 363, 391, 255,
	382, 0, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 407, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 392, 0, 336, 318, 0, 0, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 387, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 397, 304,
	305, 306, 307, 441, 443, 248, 400, 329, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 287,
	126, 328, 266, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 222, 223, 224, 225, 353, 0, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 823, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 811, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 1779, 1781, 1782,
	1783, 1784, 1785, 1786, 0, 1790, 1787, 1788, 1789, 313,
	0, 1774, 1775, 1776, 1777, 809, 1760, 1780, 0, 1761,
	312, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1778, 324, 290, 325, 277, 302, 301, 303,
	834, 836, 838, 840, 843, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 1773, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 1357, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1353, 0,
	0, 0, 1350, 0, 0, 0, 1352, 1349, 1351, 1355,
	1356, 228, 833, 287, 1354, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 345, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 1847, 1850, 0,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1360, 1361, 1362, 1363, 1364, 1365, 1358, 1359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 350,
	366, 244, 341, 379, 249, 348, 239, 315, 338, 0,
	0, 236, 364, 347, 297, 280, 281, 235, 0, 333,
	259, 272, 256, 313, 0, 363, 391, 255, 382, 0,
	374, 238, 0, 373, 312, 360, 365, 298, 292, 237,
	362, 296, 291, 284, 263, 407, 276, 324, 290, 325,
	277, 302, 301, 303, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 376, 0, 0,
	0, 1846, 0, 1845, 349, 1843, 1848, 285, 0, 0,
	0, 392, 0, 336, 318, 0, 0, 0, 334, 288,
	361, 326, 367, 351, 375, 330, 327, 229, 352, 258,
	299, 240, 242, 254, 260, 262, 264, 265, 308, 309,
	321, 340, 354, 355, 356, 257, 250, 335, 251, 274,
	252, 230, 342, 253, 232, 322, 359, 1849, 270, 331,
	295, 233, 294, 323, 358, 357, 241, 383, 389, 390,
	395, 0, 396, 0, 0, 0, 404, 409, 410, 411,
	413, 414, 415, 416, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 388, 268, 226, 227, 423,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 387, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 421, 320, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	369, 381, 399, 402, 0, 0, 0, 231, 401, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 397, 304, 305, 306,
	307, 271, 0, 248, 400, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 267, 273, 412, 275, 247, 319,
	269, 378, 282, 0, 405, 0, 406, 0, 0, 0,
	0, 311, 278, 279, 343, 283, 289, 332, 377, 317,
	337, 245, 368, 344, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 287, 0, 328,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 353, 0, 0, 384, 385, 386, 408,
	370, 0, 420, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1587, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 1588, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 928, 929, 930, 927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 746, 0, 286, 0,
	0, 0, 0, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 755, 756, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 0, 363, 391, 255, 382, 736, 374, 238,
	735, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 407, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 392,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 744, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 745, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 748, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 757,
	751, 752, 753, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 156, 353, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 108, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 1631,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 126, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 156, 353, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 108, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 1622, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 0, 363, 391, 255, 382, 0, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 407, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 392,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 397, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 126, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 156, 353, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 108, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 126, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 353, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 755, 756, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 736, 374, 238, 735,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 757, 751,
	752, 753, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	353, 0, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	2184, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 2187,
	0, 0, 2186, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 1152, 0, 286, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 1150, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1148, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 353, 0,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 1146, 0, 286,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	1150, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1148, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 353, 0, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2828,
	0, 178, 592, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 353, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 1150, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2541, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	353, 0, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 1150, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1148, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1910, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 1912, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 353, 0,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 1926, 0, 286,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	1150, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 353, 0, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2906,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 353, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 592, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	353, 0, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2843, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 2784, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 353, 0,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2623, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 353, 0, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 2667, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 353, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	353, 0, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1537, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 353, 0,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	2334, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 353, 0, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 353, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 1150, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	353, 0, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 1912, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 353, 0,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 353, 0, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 1939, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 0, 0, 0, 384,
	385, 386, 408, 370, 353, 420, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 353, 0,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 1525, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 353, 0, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 1150, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 1462, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 353, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 1173, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	353, 0, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 692, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	461, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	462, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 353, 0,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 353, 0, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 353, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 0, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 387,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	353, 0, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 502, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 156, 406, 49, 148,
	125, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 149, 0, 0, 0,
	0, 0, 0, 141, 0, 0, 0, 150, 0, 221,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 153, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 0, 0, 0, 384, 385, 386,
	408, 370, 156, 420, 49, 148, 125, 0, 696, 0,
	0, 0, 0, 0, 0, 0, 112, 113, 0, 114,
	115, 0, 149, 0, 0, 0, 0, 0, 0, 141,
	0, 0, 0, 150, 0, 0, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 147, 154, 0, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	481, 0, 480, 487, 477, 0, 146, 140, 139, 823,
	0, 0, 0, 55, 484, 485, 0, 486, 490, 0,
	0, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 112, 113, 0, 114, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 0, 735, 0, 0, 0,
	499, 0, 0, 501, 0, 0, 0, 0, 500, 0,
	0, 142, 143, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 151, 697, 0,
	124, 147, 154, 0, 95, 0, 0, 0, 0, 0,
	0, 0, 811, 0, 0, 104, 801, 0, 0, 145,
	0, 105, 146, 140, 139, 699, 0, 0, 0, 55,
	0, 0, 831, 835, 837, 839, 841, 842, 844, 0,
	848, 845, 846, 847, 0, 0, 826, 827, 828, 829,
	809, 810, 832, 0, 812, 0, 813, 814, 815, 816,
	817, 818, 819, 820, 821, 822, 824, 830, 0, 0,
	0, 0, 0, 0, 106, 834, 836, 838, 840, 843,
	0, 0, 0, 0, 48, 720, 719, 142, 143, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 473, 475,
	474, 0, 718, 0, 0, 1520, 0, 0, 479, 0,
	0, 695, 825, 151, 0, 0, 0, 0, 0, 0,
	483, 0, 698, 729, 0, 0, 0, 498, 0, 0,
	0, 104, 0, 50, 476, 145, 823, 105, 467, 1522,
	0, 0, 0, 0, 0, 0, 725, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 726, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	106, 0, 0, 0, 0, 715, 0, 713, 717, 733,
	48, 0, 0, 714, 711, 710, 0, 716, 701, 702,
	700, 703, 704, 705, 706, 2923, 731, 0, 732, 0,
	107, 38, 0, 0, 1520, 1502, 0, 47, 5, 727,
	728, 111, 0, 478, 482, 488, 0, 489, 491, 811,
	0, 492, 493, 494, 0, 0, 496, 497, 0, 50,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 831,
	835, 837, 839, 841, 842, 844, 723, 848, 845, 846,
	847, 0, 0, 826, 827, 828, 829, 809, 810, 832,
	0, 812, 126, 813, 814, 815, 816, 817, 818, 819,
	820, 821, 822, 824, 830, 1502, 0, 1520, 0, 0,
	0, 0, 834, 836, 838, 840, 843, 0, 1496, 1495,
	0, 0, 1494, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 1522, 0, 0, 0, 722, 107, 38, 0, 825,
	0, 0, 0, 47, 0, 0, 0, 111, 1499, 0,
	0, 0, 1501, 1503, 1505, 2706, 1507, 1508, 1509, 1511,
	1512, 1513, 1515, 1516, 1517, 1518, 1506, 833, 1502, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 0,
	0, 1501, 1503, 1505, 1521, 1507, 1508, 1509, 1511, 1512,
	1513, 1515, 1516, 1517, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	480, 487, 477, 0, 0, 0, 1506, 0, 0, 0,
	0, 1519, 484, 485, 0, 486, 490, 1510, 0, 472,
	0, 0, 0, 1521, 0, 0, 0, 0, 1498, 495,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 0,
	0, 1501, 1503, 1505, 0, 1507, 1508, 1509, 1511, 1512,
	1513, 1515, 1516, 1517, 1518, 0, 0, 1514, 499, 0,
	1519, 501, 0, 0, 1504, 0, 500, 481, 0, 480,
	487, 477, 0, 0, 0, 0, 0, 1498, 0, 1506,
	0, 484, 485, 0, 486, 490, 0, 0, 472, 0,
	1510, 0, 0, 1521, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 0,
	1499, 0, 0, 1504, 1501, 1503, 1505, 0, 1507, 1508,
	1509, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 833, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 475, 474, 0,
	0, 0, 0, 1519, 0, 0, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	1498, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 475, 474, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 482, 488, 0, 489, 491, 0, 0, 492,
	493, 494, 0, 0, 496, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 482, 488, 0, 489, 491, 0, 0, 492, 493,
	494, 0, 0, 496, 497,
}

var yyPact = [...]int{
	33456, -1000, -1000, -1000, -305, 9953, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32515, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 32515, -303, 31991,
	31991, -1000, -1000, 1839, -1000, 31467, 11020, 32515, 240, 239,
	32515, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 475, -1000, 30943, -1000, -1000,
	-1000, -1000, -1000, -1000, 422, 33670, 33039, 7846, -255, -1000,
	2460, -104, 658, 664, 739, 739, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2419, 648, 30419, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 33562, 172, 648, 13116,
	-14, -15, 2460, 298, 150, -1000, 899, 33572, 147, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7846, 7846, 9953, -320, 9953, 7846, 32515, 32515, -1000, -1000,
	-1000, -1000, 422, 33670, 7846, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -15, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33659, -1000, 1119,
	-1000, -1000, -1000, -1000, 2154, 1102, 1775, 394, 32515, -1000,
	1095, 394, -1000, -1000, -1000, 2460, 2460, -1000, 32515, 32515,
	37, 1274, -1000, 319, 314, 291, 1094, -1000, -1000, -1000,
	-1000, -1000, -1000, 306, 2513, -1000, 32515, 32515, 2170, 32515,
	-1000, 1384, 354, 34198, 2331, 1050, 598, 2212, -1000, -1000,
	2153, -1000, 140, 143, 161, 321, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 175, -1000, 2389, -1000, -1000, 119, -1000,
	-1000, 139, -1000, -1000, -1000, -18, -1000, -1000, -1000, -1000,
	-1000, -1000, -124, -1000, -1000, 714, 1809, 7846, -1000, 1627,
	-1000, 2832, -1000, -1000, -1000, -1000, 5216, 9418, 9418, 9418,
	9418, -1000, -1000, 2044, 7846, 2152, 2150, -1000, -1000, -1000,
	-1000, -1000, 1089, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1772, 8894, -1000, 2146, 2145,
	2144, 2143, 2142, 2138, 2137, 2135, 2134, 2133, 2126, 2117,
	2115, 2114, 1941, 10485, 2113, 1771, 1759, 2112, 2110, 2108,
	1758, 1941, 1941, 2105, 2102, 2101, 2100, 2099, 2098, 2092,
	2091, 2090, 2088, 2085, 2083, 2082, 2081, 2080, 2079, 2074,
	2073, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 837, -1000, 2069, 2308, 2407, 1985,
	2487, 2432, 2429, 2399, 2382, 1553, -1000, -1000, -1000, -142,
	-1000, -1000, 674, -1000, 569, -1000, 32515, 32515, 32515, 417,
	417, 417, 417, 417, 452, 417, 471, 463, 458, 417,
	-1000, -1000, -1000, -1000, -1000, -1000, 558, -1000, -1000, -1000,
	-1000, 909, 32515, -1000, 2001, 1216, 2398, 373, 364, 363,
	1216, 271, -1000, 1306, 1306, 1306, 1306, 1216, 292, 352,
	2407, 2407, -36, 1306, -44, 1216, 1216, -44, 1216, 1216,
	1216, 185, -300, -1000, -1000, -1000, 1306, 1306, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2381, 2374, 422, 32515, 96,
	32515, 422, 422, 430, 1384, 348, 347, 946, 1324, -1000,
	1259, 32515, 32515, 32515, 32515, 1259, 1259, 16787, 16263, -1000,
	32515, -1000, 2407, 1985, -1000, 1917, 1993, 1902, 1985, 422,
	422, 422, 422, 422, 422, 422, 422, 32515, 32515, 29895,
	422, 6788, 6788, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9953, 1715, 1747, 144, -80, -307, 169, -1000,
	-1000, 32515, 2302, 93, -1000, -1000, -1000, 1942, -1000, 2000,
	2000, 2000, 2000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2017, 2062, -1000, -1000, 1998, 1998, 1998, 1942,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2014, 2014, 2016, 2014, 32515,
	7846, 32515, 2325, 305, 2058, -1000, 32515, 279, 2407, 2308,
	2407, -1000, -1000, 1086, 1552, 1756, -1000, -1000, 319, 1241,
	-1000, 651, -1000, -1000, -1000, -1000, 32515, -124, 274, -1000,
	-1000, 1741, 2053, -1000, 412, 1002, 973, -1000, 160, 34267,
	25695, 1384, 25695, 32515, -1000, -1000, -1000, -1000, -1000, -1000,
	-19, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 134, -1000, 7846, 7846, 7846, 7846,
	7846, -1000, 530, 8370, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 9418, 9418, 9418, 9418, 9418, 9418, 9418, 9418, 9418,
	9418, 9418, 9418, 2042, 1318, 9418, 9418, 9418, 9418, 1993,
	2550, 928, 213, -1000, -1000, -1000, -1000, -1000, 1285, 1809,
	7846, 7846, 32515, -1000, 2754, 7846, 7846, 11696, 7846, 2378,
	7846, 7846, 7846, 1898, 3643, 32515, 7846, -1000, 1897, 1896,
	-1000, -1000, 1392, 7846, -1000, -1000, 7846, -1000, -1000, 7846,
	9418, 7846, -1000, -1000, -1000, 245, 2378, 2378, 7846, 7846,
	2378, 2378, 2378, 1283, 2378, 2378, 2378, 2378, 2378, 2378,
	2378, 2378, 1894, 2407, -255, 6264, -1000, -260, 2308, 7846,
	-1000, -1000, 7846, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1737, -70, 645, 583, 594, -1000, 2346, -1000, 2052,
	2046, 1085, 32515, 1308, 32515, 25695, 32515, 1384, 32515, 32515,
	417, 417, 417, 32515, 430, -1000, 32515, 909, 2345, 32515,
	2494, 9418, 9418, 29371, 1306, 1216, 1216, -1000, -1000, 32515,
	-1000, -1000, -1000, 1306, 32515, 1306, 1306, 2494, 1306, -1000,
	-1000, -1000, 1216, 1216, -1000, -1000, -1000, -1000, 1306, 1306,
	-1000, -1000, 2494, 32515, -25, 2494, 2494, -59, -1000, -1000,
	-1000, 32515, 32515, 417, 32515, -1000, 32515, 32515, -1000, -1000,
	32515, 33879, 32515, 28847, 2372, -1000, 25695, 32515, 23599, -1000,
	-1000, 407, 405, 15215, 362, 25695, 4691, -1000, -1000, 1259,
	1259, 1259, 1259, 4691, 4691, 1137, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 898, -1000, 118, 2308, -1000, -1000, -1000,
	-1000, -1000, 32515, 32515, 25695, 1384, 32515, 32515, 32515, 32515,
	-1000, 2045, -1000, 2329, 32515, 912, -1000, -1000, 12592, 1084,
	912, -1000, 1325, -1000, 7846, 9953, -277, 7846, 9953, 9953,
	7846, 9953, -1000, 7846, 90, -1000, -1000, -1000, -1000, 1550,
	-1000, 1549, -1000, -1000, -1000, 1729, 1729, -1000, 1541, -1000,
	-1000, -1000, -1000, 1540, -1000, -1000, 1539, -1000, -1000, 1892,
	714, -1000, 1726, 2208, -257, -1000, 14166, 32515, 32515, -1000,
	-1000, -257, -1000, 13641, 32515, 2308, -1000, 2308, 32515, -1000,
	2396, -1000, 319, 219, -1000, -1000, -1000, -1000, -1000, -1000,
	1083, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	886, -1000, 32515, -1000, -1000, 160, 25695, 26743, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 166, -1000, -1000, 159, -1000,
	445, 63, 1209, -1000, -1000, 95, 155, 501, 1809, -1000,
	1302, 1302, 1315, -1000, 488, -1000, -1000, -1000, -1000, 2044,
	-1000, -1000, -1000, 1698, 1633, -1000, 1418, 1418, 1182, 1182,
	1182, 1182, 1182, 1588, 1588, -1000, -1000, -1000, 5216, 2042,
	9418, 9418, 9418, 9418, 409, 409, 1167, 3350, -1000, 7846,
	1309, -1000, 7846, 1770, 1068, 1071, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1889, 1888, 1900, 2511,
	1886, 7846, -1000, -1000, 1205, 1204, 1179, -1000, 1631, 7322,
	-1000, -1000, -1000, 1884, 1066, 1882, -1000, -1000, -1000, 1880,
	1165, 801, 1877, 1403, 1876, 885, 7846, 7846, 1164, 1142,
	7846, 7846, 7846, 7846, 1874, 7846, 7846, 7846, 7846, 7846,
	7846, 7846, 7846, -24, -1000, -1000, 1125, -1000, 1809, -1000,
	1718, -1000, 1059, 868, -1000, 1833, -1000, -1000, -1000, -1000,
	626, 564, 670, 32515, 780, 11544, 32515, 2001, 2322, 85,
	-1000, 969, -1000, 63, -133, 749, 2168, 2510, 32515, 32515,
	32515, 2344, 28323, -1000, 2034, 1120, -1000, -1000, 7846, -1000,
	-1000, 2166, 32515, 32515, 2494, 2494, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 32515, 2494, 2494, 1216, 1306, -1000, -1000,
	1306, -1000, -1000, 1306, -1000, 1058, -1000, 32515, -1000, -1000,
	-1000, 2001, 861, -1000, 12068, 744, 448, -1000, 1235, 1235,
	853, 1235, 1235, 1235, 1235, 313, 310, 1235, 1235, 1235,
	1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235,
	1235, 2029, -1000, 83, 2367, 170, 168, 969, 186, 2635,
	838, -1000, -1000, -1000, -1000, 18883, 18883, 14691, 18883, -1000,
	1245, -1000, -1000, 444, -1000, -1000, 749, -1000, -1000, -1000,
	2024, 1272, -1000, -1000, 10485, -1000, 4691, 4691, 4691, 4691,
	-1000, -1000, 19407, 32515, -1000, -126, -1000, -110, -1000, 796,
	-1000, -1000, 809, 749, 2202, 796, 796, -1000, 11544, 32515,
	-1000, 2494, 6788, -1000, 23599, -1000, -1000, 27791, -1000, 27267,
	2494, 1280, -1000, 9953, 1743, 137, -1000, 165, -309, 135,
	1465, 133, 1809, -1000, -1000, 1873, 1870, 1113, -1000, 1109,
	1869, 1106, 1105, -1000, -64, -1000, 2306, 750, -1000, 2020,
	-1000, 1104, 2281, -1000, 785, -1000, 1269, 1079, -1000, 750,
	1076, 2273, 785, -1000, -1000, 1055, 35, -1000, -1000, 32515,
	1741, 1072, 26743, 766, -1000, 435, 1046, 1035, -1000, 25695,
	128, 25695, -1000, 25695, -1000, -1000, 282, -1000, 32515, 2305,
	-1000, -1000, -1000, 1613, -331, -1000, -1000, -1000, -1000, -1000,
	1069, -1000, 409, 409, 1167, 2984, -1000, 9418, -1000, 9418,
	2523, 1251, -1000, 7846, 1533, 2849, 668, 18359, 32515, -1000,
	-1000, 7846, 7846, -1000, 2514, -1000, -1000, -1000, -1000, 7846,
	7846, 1479, -1000, 32515, -1000, -1000, -1000, -1000, 18359, -1000,
	9418, -1000, 7846, 827, 2492, -24, -24, 2455, 2441, 2403,
	1064, -24, 2365, 2361, 2350, 2333, 2314, 2268, 2257, 2247,
	-1000, 2018, 6264, -1000, -64, 7846, 7846, 7846, 2289, -1000,
	-1000, -1000, -1000, -1000, 561, 103, 1867, 779, -1000, -1000,
	32515, -1000, -1000, -1000, 1863, 770, -1000, -1000, -1000, 33886,
	2000, 2000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2017, -1000, -1000, 1998, 1998, 1998, 1942, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2014, 2014, 2016,
	2014, -1000, 2340, -1000, -29, 1235, 436, 25695, 339, -1000,
	32515, 2200, 197, 2260, 32515, 2008, 2007, 2005, 231, 33886,
	32515, 834, -1000, 1030, 33572, -1000, 32515, 1809, -1000, 1384,
	-1000, 1216, -1000, -1000, 2494, 964, -1000, -1000, 2494, 1216,
	1216, 1306, 32515, -1000, 2339, 33879, -1000, -1000, -1000, -1000,
	33886, 528, -1000, 582, 417, 32515, 1349, 582, 1340, 2004,
	-1000, -1000, -1000, 32515, 32515, 32515, 1337, 1333, -1000, 32515,
	1530, -1000, 1516, 1235, 1235, 1513, 1677, 1675, 1674, 1235,
	1235, 1512, 1654, 26219, 1510, 1505, 1503, 1526, 1653, 591,
	1525, 1514, 1495, 32515, 2002, 1601, -29, 1235, 167, 32515,
	1267, 436, 1405, 15739, 32515, 23599, 23599, 23599, 23599, -1000,
	2254, 2253, -1000, 2250, 2234, 2224, 32515, 23599, 2001, -1000,
	26219, -1000, -1000, -1000, 1993, 1063, 2330, 600, 7846, 25695,
	1646, 362, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 32515, 32515, 1860, -1000, 2463, -1000, 767, -1000, -1000,
	1022, -1000, 2463, 1293, -306, 9953, 1287, 1236, -1000, 7846,
	9953, 7846, -279, 151, -282, -1000, -1000, -1000, 1635, -1000,
	-1000, -1000, 1490, -1000, 1483, 2, 23, 1328, -257, 6264,
	297, 32515, -257, 32515, 6264, -1000, 32515, 296, -257, 32515,
	1481, -1000, -1000, -1000, 2502, 25695, 1384, 1195, 25171, -1000,
	115, -1000, 162, 395, 1634, -1000, 455, 89, -1000, 1262,
	1613, -1000, -1000, -1000, 9418, -1000, -1000, -1000, -1000, 1809,
	7846, 1854, -1000, 549, 549, 1853, -1000, 2000, 2000, -1000,
	1942, 1998, 1942, 549, 549, 1846, -1000, 1652, 2237, -1000,
	2218, 2203, 7846, -1000, 1845, 2997, 950, -146, -24, -1000,
	-1000, -1000, -24, -24, -24, -24, -1000, -24, -24, -24,
	-24, -24, -24, -24, -24, 397, -1000, 2, 1809, 1809,
	-1000, -1000, 2278, -1000, 1632, 1630, 780, 33886, 489, 11544,
	2294, 273, 1420, -1000, -1000, 24647, 371, -1000, -1000, -1000,
	461, 146, 1455, 367, -1000, 32515, 186, 32515, -1000, -1000,
	-1000, -1000, -1000, 2260, -1000, 810, 220, 12068, 12068, 12068,
	224, 1297, -1000, 394, 808, 1018, 23599, 32515, -1000, 23075,
	1841, -1000, 749, 2494, -1000, 32515, -1000, 2494, 2494, 1216,
	-1000, 273, -1000, 2304, -1000, 32515, -1000, 32515, -1000, 32515,
	32515, 417, 7846, -1000, -1000, -1000, 32515, -1000, 211, -1000,
	-1000, 18359, 18359, -1000, -1000, -1000, -1000, 1628, 1622, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 332, 32515, 1048, -1000, 1244, 1420, 24647, 1243, 1259,
	1619, 371, -1000, 1618, -1000, 753, 32515, 32515, -1000, 897,
	-1000, 1238, 2187, 2197, 2187, -1000, -1000, -1000, -1000, 2246,
	-1000, 2240, -1000, -1000, 897, -1000, -1000, -1000, -1000, -1000,
	600, -1000, 2394, 582, 582, 582, 1825, 766, 1824, -1000,
	-1000, -1000, -1000, -1000, 2493, 2486, 24123, 2493, -1000, -306,
	1250, -1000, 1393, 129, 1459, 32515, -1000, -1000, -1000, 1823,
	1821, -262, 22, 2485, 2480, 2526, -1000, 1819, 762, -257,
	-1000, -1000, 750, -1000, -1000, -1000, -257, -1000, 750, -1000,
	-1000, 1384, -1000, 158, -1000, -1000, -1000, -1000, -1000, -1000,
	49, -1000, 32515, -1000, 1613, 1612, 86, -1000, 1809, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 7846, -1000, -1000, -1000, 2191, -1000,
	-1000, 7846, 1807, 1610, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2430, -1000, 2478,
	-262, -1000, -1000, -1000, -1000, -1000, -1000, 33886, -1000, 1277,
	-1000, -1000, 1607, 62, -1000, -1000, -1000, 1606, 1605, 1454,
	-1000, -1000, 1440, 951, 75, -1000, -1000, -1000, -1000, -1000,
	-1000, 1405, 1996, -1000, 1235, 1235, 1235, 32515, 1799, 755,
	-1000, 1797, 1791, 396, 1248, 1247, -1000, 1441, 18883, 23599,
	23075, 811, -1000, 1013, -1000, -1000, -1000, 2494, -1000, -1000,
	2494, -1000, -1000, 2304, -1000, -1000, 1360, 9418, -1000, -1000,
	1603, 17835, 605, 563, 1983, -1000, 280, 2525, -1000, 1327,
	1322, -1000, 32515, -1000, 1979, -1000, 1973, 2157, 247, 1969,
	1964, 32515, 2164, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 333, 1041, -1000, 1601, 1589, -1000, 62, 1587,
	4691, -1000, -1000, -1000, 32515, 753, 753, 2430, 32515, 6264,
	-1000, -1000, 7846, 1957, -1000, 7846, -1000, -1000, -1000, -1000,
	-1000, 1951, 2301, -1000, -1000, -1000, -1000, -1000, -1000, 7846,
	7846, -1000, -1000, 416, 9953, -283, 141, -1000, -1000, -1000,
	-264, 1584, -1000, -1000, 2468, 1583, 1564, 32515, -1000, 750,
	750, 749, -1000, -1000, -59, -1000, -1000, -1000, 2012, -1000,
	1890, -24, -1000, 117, 7846, -264, -196, -1000, -1000, -1000,
	-1000, 270, -1000, -1000, 177, -1000, -1000, 1438, 404, -1000,
	-1000, 22027, 18359, 17835, 1578, -1000, 34071, 12068, 134, 34071,
	675, 1246, -1000, 1425, -1000, 1419, -1000, 2494, 811, 1013,
	-1000, -1000, 1091, -1000, -1000, -1000, -1000, 1167, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1412, 1948, -99, -1000, -1000, 1947, 22027, 22027, 232,
	232, 22027, 22027, 1946, 510, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2407, -1000, -1000, 1809, 32515, 1809,
	22551, -1000, 2467, 2466, 1809, 714, -1000, -306, 32515, 32515,
	-267, 1397, -1000, 1574, 25, -1000, -1000, 745, -270, -3,
	16, -1000, -1000, -1000, 1789, -1000, 3119, -1000, -1000, -1000,
	714, -267, 32515, 377, 1572, -1000, -1000, 174, -1000, -1000,
	1039, -1000, 1942, 7846, -1000, -1000, -1000, 389, 33998, -1000,
	-1000, -1000, -59, 389, 383, 215, -1000, 1394, -1000, -1000,
	2430, -1000, 1783, 7846, 1941, -181, 22027, 1009, 1005, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1004, 1001, 22027, -1000,
	-1000, -1000, 276, -1000, 960, 958, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1940, -1000, -1000, 2465, -1000, 1571, 428,
	20, 16, -1000, 2462, 24, 2457, 2456, -1000, -1000, 4167,
	-258, -5, 318, -1000, 2338, -1000, -1000, 45, -1000, -1000,
	-1000, 22027, 2319, 1673, 250, 2454, 34071, -1000, -1000, 250,
	-1000, 227, -1000, 1234, -1000, 1391, -1000, 2407, -1000, 1507,
	-1000, 2196, -1000, 97, 939, -1000, -1000, -1000, -1000, 926,
	-1000, -1000, -1000, 21503, 32515, 1564, -1000, 1939, 1390, 22,
	17, 2452, -1000, 1564, 2427, 1564, 1564, 1310, -1000, -1000,
	-1000, -1000, -1000, 1569, -1000, 205, -1000, -1000, 2319, -1000,
	2417, 281, -1000, -1000, -1000, -1000, 1388, -1000, -1000, 510,
	-1000, 2178, 2173, 2507, -1000, -1000, -1000, -1000, 205, 205,
	205, 205, 112, -1000, -1000, 925, -1000, -1000, 2366, 17311,
	8, -1000, -1000, -1000, 1568, -1000, 1564, -1000, -1000, 4167,
	-1000, -1000, 1235, 1562, 209, -1000, -1000, -1000, 20979, 264,
	278, 269, -1000, 421, -1000, -1000, -1000, -1000, 2524, -1000,
	2517, 551, 551, -1000, -1000, 32515, -1000, 32515, -1000, 915,
	-1000, -1000, -1000, 975, -1000, -1000, -1000, -1000, -1000, 1387,
	-1000, 32515, -1000, 32515, 262, 1382, 9418, 1937, 9418, 1936,
	272, 1931, -1000, -1000, -1000, 1406, 284, -1000, -1000, 711,
	-1000, 1229, -1000, 20455, 32515, -1000, -1000, 902, 1930, 2412,
	-1000, 2932, 32515, 2865, 32515, 1921, 1090, 9418, -1000, -1000,
	-1000, 32515, 5740, -1000, 963, -1000, -1000, 380, 267, -1000,
	901, -1000, 895, 19931, 1369, 2844, -1000, -1000, 1809, 32515,
	879, -1000, 32515, 259, -1000, -1000, -1000, 876, -1000, -1000,
	-1000, -1000, 380, 2271, -1000, 1366, -1000, -1000, 33928, 492,
	-1000, -1000, 33928, 261, -1000, 357, 1920, -1000, -1000, 875,
	-1000, 32515, 570, 7846, -1000, 261, 34071, -1000, 7846, 843,
	-1000, 34071, 799, -1000, -1000,
}

var yyPgo = [...]int{
	0, 140, 2542, 206, 138, 3144, 59, 212, 215, 213,
	211, 3143, 3142, 2313, 2281, 3140, 3139, 3138, 3137, 3136,
	3135, 3134, 3133, 3132, 3129, 3128, 3127, 3101, 3100, 3098,
	3097, 3096, 3095, 3093, 3091, 3090, 3089, 3083, 3081, 210,
	3079, 3075, 3074, 3073, 3072, 3070, 3069, 3068, 3067, 3066,
	3064, 3063, 3062, 3044, 3043, 3042, 3041, 3040, 3039, 3038,
	3025, 3023, 3015, 3009, 3001, 2999, 2998, 2997, 2996, 2995,
	179, 2981, 2267, 2980, 2979, 2978, 2977, 2976, 2975, 2974,
	185, 2942, 2941, 2937, 2936, 2935, 2934, 2931, 2928, 2923,
	2922, 209, 2920, 2919, 2915, 2914, 2911, 2909, 176, 2908,
	134, 160, 2907, 2906, 2905, 2904, 2897, 199, 245, 47,
	2892, 38, 2891, 183, 2890, 112, 2889, 108, 2888, 2887,
	2886, 2884, 2882, 2880, 2877, 2874, 2872, 2871, 2870, 2868,
	71, 2866, 89, 182, 158, 220, 146, 247, 218, 145,
	132, 78, 2863, 2314, 2862, 123, 191, 115, 22, 2861,
	148, 2860, 133, 35, 26, 214, 110, 41, 130, 88,
	2857, 171, 82, 79, 2855, 2853, 217, 151, 2851, 91,
	2850, 2849, 2843, 2841, 163, 149, 2840, 2837, 97, 2836,
	2835, 99, 2834, 46, 2833, 129, 2831, 926, 87, 102,
	2830, 2827, 2825, 106, 2824, 2823, 2822, 2821, 141, 2820,
	2819, 120, 67, 2817, 2816, 2815, 45, 2814, 81, 2812,
	55, 2811, 2810, 2808, 2807, 49, 2806, 2805, 15, 19,
	21, 2804, 20, 2801, 131, 2800, 2799, 2798, 2, 2796,
	187, 111, 74, 114, 2795, 349, 2791, 2789, 2788, 119,
	2787, 494, 2786, 2785, 2784, 2783, 2782, 23, 2780, 186,
	40, 2779, 72, 101, 95, 161, 166, 2778, 2777, 2776,
	268, 69, 54, 0, 2775, 122, 2774, 2771, 2770, 224,
	2769, 193, 164, 197, 204, 222, 219, 2768, 2764, 66,
	2761, 125, 68, 113, 7, 2758, 227, 2753, 470, 142,
	2751, 169, 2750, 143, 9, 109, 2749, 2748, 32, 225,
	2747, 2746, 2745, 92, 2743, 2742, 94, 100, 2741, 2740,
	2736, 34, 2733, 30, 28, 2731, 90, 2730, 216, 2729,
	180, 104, 144, 136, 121, 189, 196, 60, 52, 2728,
	1322, 116, 73, 24, 2727, 190, 2726, 126, 118, 2724,
	53, 2723, 208, 311, 174, 2722, 154, 8, 36, 29,
	2720, 10, 2719, 195, 167, 2718, 2716, 18, 2715, 17,
	2712, 2710, 2706, 2705, 5, 2704, 2703, 2701, 1, 4,
	2700, 3, 172, 2699, 2698, 2697, 2696, 37, 96, 2686,
	192, 184, 2685, 2684, 70, 2683, 2682, 2680, 896, 2679,
	2678, 2675, 2674, 2673, 2672, 2668, 2667, 2664, 2661, 76,
	44, 2658, 2657, 2656, 2655, 62, 103, 2654, 2653, 2650,
	2649, 31, 153, 2648, 16, 2637, 27, 25, 33, 2635,
	93, 2633, 12, 155, 2632, 2630, 14, 2629, 2628, 11,
	13, 2627, 2626, 85, 2622, 63, 43, 128, 75, 2621,
	65, 181, 105, 2619, 2612, 202, 205, 168, 2610, 156,
	198, 221, 2609, 170, 2602, 2600, 2599, 2595, 2588, 2587,
	734, 2580, 2578, 201, 42, 80, 84, 2575, 2574, 2573,
	64, 124, 86, 83, 159, 2571, 162, 2570, 2561, 77,
	2557, 2556, 2555, 2553, 2552, 157, 2551, 2550, 2544, 2540,
	207, 137, 2536,
}

//line mysql_sql.y:9403
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 484, 488, 488, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 105, 482, 482, 482, 483, 483, 102, 122,
	121, 124, 124, 123, 123, 120, 120, 116, 119, 119,
	118, 118, 117, 112, 114, 114, 113, 115, 115, 103,
	91, 104, 432, 432, 431, 431, 430, 430, 385, 385,
	429, 429, 429, 428, 428, 428, 427, 427, 426, 426,
	425, 425, 423, 423, 424, 422, 421, 421, 421, 419,
	419, 419, 415, 415, 417, 416, 416, 418, 410, 410,
	413, 413, 411, 411, 411, 411, 414, 409, 409, 409,
	408, 408, 90, 90, 90, 332, 332, 89, 89, 346,
	346, 346, 346, 346, 344, 344, 344, 344, 344, 344,
	343, 343, 342, 342, 347, 347, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 81, 81, 81, 81,
	84, 84, 84, 85, 341, 341, 341, 82, 83, 83,
	331, 331, 336, 336, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 340, 340, 340,
	338, 338, 337, 337, 339, 339, 75, 75, 75, 78,
	77, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	76, 76, 76, 76, 76, 76, 71, 71, 71, 71,
	71, 70, 70, 72, 72, 328, 328, 327, 86, 86,
	87, 486, 486, 485, 487, 487, 487, 487, 88, 94,
	94, 94, 94, 94, 94, 94, 93, 93, 96, 96,
	95, 97, 80, 80, 80, 80, 80, 80, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 456, 456, 456,
	458, 458, 267, 268, 489, 270, 266, 266, 266, 452,
	452, 453, 454, 455, 455, 455, 92, 11, 11, 11,
	11, 11, 11, 69, 74, 223, 223, 224, 224, 224,
	224, 225, 225, 225, 225, 225, 226, 227, 227, 67,
	73, 73, 73, 469, 469, 68, 476, 476, 388, 388,
	281, 281, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 392, 393,
	277, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 46,
	45, 45, 45, 317, 317, 44, 490, 490, 256, 256,
	56, 55, 48, 57, 58, 59, 60, 61, 62, 43,
	54, 54, 54, 54, 54, 54, 54, 54, 65, 65,
	404, 404, 492, 492, 492, 63, 64, 387, 387, 387,
	53, 52, 51, 50, 49, 49, 42, 42, 41, 41,
	47, 128, 129, 274, 274, 274, 276, 276, 272, 491,
	491, 359, 359, 275, 275, 40, 40, 40, 40, 66,
	273, 273, 255, 271, 271, 271, 12, 12, 10, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 23, 24, 26, 325, 325, 322, 25, 18, 17,
	20, 16, 19, 21, 22, 22, 9, 9, 9, 9,
	13, 13, 14, 140, 140, 188, 188, 464, 464, 460,
	460, 461, 461, 461, 462, 462, 463, 463, 98, 398,
	398, 398, 398, 398, 398, 8, 162, 162, 397, 397,
	397, 397, 397, 397, 329, 329, 441, 441, 441, 442,
	161, 161, 156, 156, 399, 399, 295, 443, 443, 407,
	407, 406, 406, 405, 405, 159, 159, 160, 160, 143,
	143, 108, 108, 412, 412, 412, 412, 420, 420, 384,
	384, 215, 215, 250, 250, 251, 251, 133, 133, 134,
	134, 134, 134, 134, 134, 449, 449, 451, 451, 450,
	158, 158, 154, 154, 155, 155, 155, 153, 153, 152,
	151, 151, 150, 148, 148, 148, 149, 149, 149, 136,
	136, 136, 135, 135, 135, 135, 135, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 137,
	137, 457, 457, 457, 389, 389, 389, 395, 395, 232,
	232, 233, 233, 231, 231, 138, 138, 139, 139, 139,
	139, 230, 230, 229, 141, 141, 147, 146, 146, 142,
	142, 142, 142, 240, 240, 239, 239, 239, 239, 101,
	106, 106, 107, 165, 165, 238, 237, 237, 237, 164,
	164, 163, 163, 157, 157, 145, 145, 145, 145, 236,
	144, 234, 481, 481, 480, 480, 479, 477, 477, 477,
	478, 478, 478, 478, 434, 434, 434, 434, 434, 261,
	261, 261, 265, 265, 264, 264, 264, 264, 264, 269,
	7, 7, 7, 7, 7, 30, 30, 30, 30, 30,
	30, 30, 30, 36, 173, 174, 37, 175, 175, 176,
	176, 177, 177, 178, 179, 180, 180, 180, 180, 35,
	166, 166, 167, 167, 168, 168, 169, 170, 170, 170,
	172, 171, 34, 27, 465, 468, 466, 466, 470, 470,
	470, 471, 471, 471, 472, 472, 28, 125, 130, 130,
	127, 132, 132, 132, 132, 132, 126, 467, 473, 473,
	473, 326, 326, 323, 324, 324, 321, 320, 320, 320,
	475, 475, 474, 474, 474, 262, 262, 29, 316, 316,
	318, 319, 319, 319, 310, 310, 310, 310, 33, 314,
	314, 315, 315, 315, 315, 315, 311, 311, 313, 313,
	309, 309, 309, 309, 309, 32, 131, 131, 308, 308,
	306, 306, 304, 304, 305, 305, 303, 303, 303, 307,
	307, 31, 31, 31, 110, 109, 109, 109, 253, 253,
	252, 252, 111, 38, 200, 200, 373, 373, 373, 373,
	373, 391, 391, 391, 374, 374, 374, 375, 375, 375,
	376, 376, 376, 376, 376, 390, 390, 348, 348, 349,
	349, 349, 352, 352, 365, 365, 366, 366, 364, 364,
	371, 371, 370, 370, 369, 369, 368, 368, 367, 367,
	367, 367, 362, 362, 361, 361, 350, 350, 350, 350,
	350, 351, 351, 351, 360, 360, 363, 363, 206, 206,
	207, 207, 207, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 439, 439, 440, 209, 209, 209, 213, 213,
	213, 213, 213, 213, 208, 208, 210, 210, 189, 189,
	187, 187, 181, 181, 182, 182, 183, 183, 183, 186,
	186, 184, 184, 185, 185, 185, 185, 334, 334, 437,
	437, 438, 438, 433, 433, 433, 436, 436, 436, 436,
	436, 435, 435, 190, 248, 248, 248, 263, 263, 263,
	263, 247, 247, 247, 205, 205, 204, 204, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 333, 333, 278, 278, 279, 279, 222,
	221, 221, 221, 221, 221, 219, 220, 218, 218, 218,
	218, 218, 217, 217, 216, 216, 216, 312, 312, 214,
	214, 212, 212, 212, 211, 211, 211, 372, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 246, 287, 287, 292, 292, 448, 448, 447,
	191, 191, 191, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 201, 201, 201, 357, 357, 357, 357, 357,
	358, 358, 358, 355, 355, 356, 356, 296, 297, 297,
	396, 396, 353, 353, 354, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 403, 403, 403, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 459, 459, 459, 444, 444, 444, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 244, 244, 244, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 298, 298, 299, 299, 400, 400,
	400, 400, 400, 400, 401, 401, 402, 402, 402, 402,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 285,
	241, 241, 241, 300, 293, 293, 294, 294, 288, 288,
	288, 288, 288, 288, 288, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 289, 289, 291,
	291, 302, 302, 302, 301, 301, 301, 301, 301, 301,
	301, 203, 203, 203, 203, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 193, 193, 193, 193,
	197, 197, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 198, 198, 198, 198,
	196, 196, 196, 196, 196, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 99, 100, 100, 195, 249, 249, 377, 377, 380,
	380, 378, 378, 379, 381, 381, 381, 382, 382, 382,
	383, 383, 383, 386, 386, 254, 254, 254, 260, 260,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 4, 6, 1, 1, 1, 2, 4, 6,
	1, 4, 1, 3, 3, 4, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 2,
	2, 0, 1, 4, 2, 4, 1, 5, 3, 2,
	1, 2, 2, 4, 4, 5, 2, 1, 3, 4,
	4, 1, 2, 9, 7, 1, 3, 3, 1, 1,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 3, 1, 1, 1, 1, 1, 1, 2, 3,
	4, 7, 2, 3, 3, 4, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 2, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 7, 4, 1, 3, 2, 2, 2,
	1, 2, 2, 2, 3, 2, 3, 1, 1, 7,
	7, 8, 8, 0, 4, 7, 0, 3, 0, 2,
	0, 1, 1, 1, 1, 4, 2, 2, 3, 3,
	4, 5, 3, 4, 4, 2, 2, 2, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 5, 3, 3, 2, 4, 4, 4, 4, 4,
	1, 1, 1, 3, 3, 1, 1, 1, 6, 8,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 4, 6, 7, 4, 4, 7, 8,
	3, 3, 3, 0, 2, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 4, 3,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 4, 1, 3, 1, 4, 6, 4,
	4, 4, 3, 6, 3, 5, 1, 1, 2, 2,
	11, 8, 9, 1, 3, 2, 4, 0, 2, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 4, 2,
	1, 5, 4, 4, 2, 5, 1, 3, 2, 1,
	5, 4, 4, 2, 0, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 1, 3, 4, 0, 1, 0,
	1, 1, 3, 1, 1, 0, 4, 1, 3, 2,
	1, 0, 8, 0, 4, 7, 4, 0, 2, 0,
	2, 0, 2, 0, 4, 1, 3, 1, 1, 4,
	3, 4, 5, 4, 5, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 3,
	3, 3, 1, 3, 3, 3, 3, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 7,
	7, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	4, 4, 3, 2, 2, 2, 3, 2, 3, 4,
	1, 3, 4, 0, 2, 1, 1, 2, 2, 0,
	1, 2, 4, 1, 3, 1, 3, 2, 3, 1,
	4, 3, 0, 1, 1, 2, 5, 2, 2, 2,
	0, 2, 3, 3, 0, 1, 3, 1, 3, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 7, 1, 1, 7, 1, 3, 0,
	1, 1, 3, 1, 3, 0, 1, 1, 1, 12,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 4,
	1, 1, 7, 7, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 0, 2, 7, 8, 0, 2,
	6, 0, 2, 2, 3, 3, 4, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 6, 0, 4, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 11, 9, 11, 2, 2, 4, 5, 1, 3,
	0, 3, 5, 10, 0, 2, 0, 3, 2, 4,
	3, 0, 2, 1, 0, 2, 3, 0, 2, 3,
	0, 3, 2, 4, 3, 0, 1, 0, 6, 0,
	3, 5, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 0, 1,
	1, 3, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 4, 1, 3, 3, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 1, 7,
	7, 2, 1, 7, 7, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 5,
	6, 4, 1, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 6, 6, 1, 1, 1,
	1, 1, 4, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 2, 5, 0, 1, 3, 0, 1,
	0, 2, 0, 1, 6, 8, 6, 5, 5, 6,
	6, 6, 6, 5, 6, 6, 6, 6, 6, 6,
	6, 6, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 4, 4, 4, 3, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 2, 2, 4, 6, 2, 2,
	4, 6, 4, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 2, 3, 5, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -484, -488, -2, -5, 552, -1, -4, -100, -75,
	-7, -102, -103, -8, -98, -9, -10, -12, -79, -93,
	-95, -97, -96, -39, -11, -92, -70, -71, -81, -86,
	-89, -90, -91, -104, -99, -101, -133, -105, 545, -76,
	-77, -78, -30, -29, -28, -27, -125, 551, 408, 12,
	457, -13, -14, -449, -15, 237, -266, -267, -268, -270,
	-489, -40, -41, -42, -49, -50, -51, -52, -53, -63,
	-64, -65, -43, -44, -45, -48, -46, -56, -55, -57,
	-58, -59, -60, -61, -62, -47, -128, -129, -66, -68,
	-67, -73, -69, -74, -127, 212, -72, 61, -82, -83,
	-84, -85, -87, -88, 339, 345, 398, 544, 46, -134,
	-136, 555, 140, 141, 143, 144, -31, -32, -33, -34,
	-35, -36, -38, -37, 208, 14, 490, -16, -19, -17,
	-20, -18, -25, -26, -24, -21, -23, -126, -22, 232,
	231, 37, 295, 296, 297, 343, 230, 209, 13, 30,
	41, 321, -135, 67, 210, -137, 10, 557, -6, -3,
	-2, -112, -116, -120, -123, -124, -121, -122, -4, -100,
	98, 222, 546, -263, 335, 547, 549, 548, 70, 78,
	-257, -259, 339, 345, 544, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 460, 531, 532, 533, 534, 319, 320, 487, 249,
	273, 369, 276, 283, 140, 159, 153, 181, 173, 148,
	253, 288, 254, 77, 143, 443, 88, 420, 395, 146,
	268, 270, 272, 275, 255, 169, 164, 267, 251, 162,
	256, 39, 257, 186, 258, 259, 492, 416, 318, 422,
	280, 393, 163, 417, 271, 419, 188, 192, 434, 435,
	157, 158, 424, 437, 185, 229, 42, 489, 241, 438,
	190, 184, 180, 446, 284, 282, 183, 156, 179, 252,
	50, 194, 193, 195, 389, 390, 391, 392, 260, 261,
	333, 433, 176, 165, 323, 149, 22, 441, 236, 421,
	346, 262, 277, 285, 189, 191, 243, 248, 491, 397,
	247, 281, 439, 161, 240, 269, 235, 442, 150, 348,
	263, 144, 274, 436, 445, 49, 361, 155, 147, 226,
	141, 245, 250, 11, 264, 265, 266, 287, 286, 278,
	177, 242, 182, 167, 154, 178, 142, 244, 444, 362,
	542, 321, 378, 175, 172, 246, 219, 440, 423, 145,
	382, 363, 170, 289, 538, 539, 540, 334, 317, 290,
	291, 168, 233, 414, 415, 292, 294, 388, 310, 364,
	396, 370, 365, 201, 298, 426, 428, 187, 541, 299,
	300, 301, 418, 302, 303, 304, 305, -339, -337, -263,
	544, 345, 339, 321, -175, -263, 556, -143, 38, -187,
	-263, -143, -72, -14, -13, -135, -136, -187, 216, -271,
	23, 393, -80, 394, 212, 67, -263, -9, -91, -8,
	-98, -70, -133, 398, -269, -263, 295, 295, -269, 216,
	-263, 247, 377, -388, 222, -343, -316, 248, -342, -318,
	-345, -319, 31, 208, 210, 209, 244, 14, 343, 218,
	12, 10, 344, 230, 24, 25, 27, 13, 345, 347,
	28, 348, 351, 352, 353, 41, 356, 357, 237, 70,
	78, 73, 255, -174, -263, -294, -288, 95, 238, -290,
	-283, -284, -286, -429, -423, -282, 67, 122, 123, 130,
	96, -285, -372, 35, 98, 497, 458, -242, -243, -244,
	-245, -246, -263, -424, -422, 73, 79, 82, 85, 86,
	84, 83, 166, 81, 74, 134, 135, -136, 70, -444,
	505, -258, 526, 531, 532, 533, 534, 525, 46, -394,
	-402, 215, -400, 133, 171, 233, 167, 12, 128, 388,
	168, 502, 522, 460, 506, 529, 499, 500, 494, 495,
	496, 498, 507, 509, 521, -403, 517, 527, 528, 515,
	530, 72, 71, 520, 519, 508, 503, 504, 510, 493,
	501, 511, 512, 518, 523, 524, 327, 88, 328, 329,
	450, 322, 330, 222, 393, 55, 331, 332, 333, 334,
	335, 457, 336, 56, 337, 326, 237, 378, 338, 170,
	187, 462, 461, 463, 454, 451, 449, 452, 453, 455,
	456, 513, 514, 516, -106, -107, 536, -152, -153, -235,
	19, 6, 7, 8, 9, -482, 395, 491, 145, 142,
	-330, 145, 94, 150, 149, -330, 298, 243, 340, 219,
	319, 378, 302, 247, -310, -308, -390, 292, 288, 217,
	227, 226, 89, 450, 215, 354, -460, -461, 205, 206,
	207, -451, 483, -450, -263, 329, 26, 216, 340, 243,
	428, 426, 427, 429, 430, 431, 432, -54, -404, -387,
	423, 422, -275, 415, 421, 413, 425, 416, 320, 304,
	303, 208, 553, 484, -254, 364, 396, 447, 448, 341,
	397, 434, 436, 417, 88, 174, 171, 219, 216, 319,
	450, 378, 302, -460, 247, 377, 40, -336, 388, -335,
	-337, 434, 435, 436, 446, 71, 72, 433, -254, 88,
	414, 414, -153, -235, -152, -134, -136, -101, -449, 217,
	319, 378, 247, 218, 216, 219, 450, 295, 340, 243,
	302, -389, -457, 31, -395, 202, 203, 204, 32, 33,
	-1, 102, 557, -288, -288, -6, 558, -6, -288, -263,
	-263, 137, -193, -197, -194, -196, -195, -199, -198, 171,
	172, 133, 175, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 30, 187, 233, 167, 168, 169, 170,
	188, 153, 173, 488, 196, 154, 197, 155, 198, 156,
	199, 157, 158, 200, 159, 162, 163, 164, 161, 136,
	67, 136, 73, -159, 239, -187, 136, -159, -153, -152,
	-153, -187, -247, -263, 395, 105, -80, -80, 394, -452,
	-453, -454, -456, 212, 394, 393, 136, 255, 15, -269,
	-269, 65, -187, -318, 247, -343, -316, 35, 64, 137,
	220, 137, 64, 67, 341, 319, 378, 342, 450, 216,
	354, 219, 247, 355, 319, 378, 216, 219, 450, 247,
	319, 216, 219, 378, 247, 355, 413, 414, 219, 26,
	346, 349, 350, 414, -408, 446, 137, 94, 91, 92,
	93, -288, 112, -301, 105, 106, 107, 108, 109, 110,
	111, 119, 118, 129, 122, 123, 124, 125, 126, 127,
	128, 120, 121, 115, 95, 113, 117, 114, 97, -136,
	-288, -294, 46, -286, -286, -286, -286, -372, -292, -288,
	67, 67, 136, 73, -288, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, -401, 67, 67,
	-298, -299, 67, 67, -282, -247, 67, 73, 73, 67,
	67, 67, 73, -299, -299, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, -153, 137, 67, -108, 38, -155, 21,
	-137, -136, 20, 31, 32, 31, 32, 31, 32, 31,
	32, 79, 439, 490, 148, 149, 150, -173, -263, -175,
	-166, -263, -306, 222, -306, -306, -306, -306, 218, -306,
	216, 216, 216, -306, -462, 152, 137, -451, -158, 67,
	-274, 113, 117, 23, 245, 245, 245, -274, 282, -490,
	-491, 15, 115, -272, -491, -272, -272, -274, -492, 218,
	424, 42, 246, 245, -154, -155, -154, 418, 414, -359,
	419, 420, -276, -491, -275, -274, -274, -275, -274, -274,
	-274, 216, 219, 450, 302, 554, -490, -490, 30, 30,
	-388, -187, -388, 484, -255, -263, -388, -388, -463, 221,
	-318, 247, 247, 137, 105, 23, -338, 105, 116, -337,
	-337, -337, -337, -338, -338, -208, 40, -262, 133, -263,
	73, -208, 40, -486, -485, -187, -154, -137, -136, 68,
	68, 68, -388, -388, -388, -388, -388, -388, -388, -388,
	-269, -166, -175, 222, -388, -138, -139, 124, -288, -263,
	-138, -3, -114, -113, 99, 100, 102, 547, 335, 546,
	550, 544, -337, 40, -383, 362, 361, -377, -379, 67,
	-378, 67, -378, -378, -378, 67, 67, -380, 67, -380,
	-380, -377, -381, 67, -381, -382, 67, -381, -263, -293,
	-294, -263, 38, -397, 46, -133, 67, 30, 67, -263,
	-398, 46, -133, 67, 30, -154, -108, -155, 136, 79,
	73, -80, 68, 137, -455, 85, 86, -458, 185, 177,
	-263, -94, 73, -7, -8, -9, -10, -39, -70, -133,
	-425, -423, 67, 31, 387, 64, 15, -344, 216, 450,
	340, 243, 219, 319, -342, -325, -322, -320, -262, -318,
	-321, -320, -347, -247, 414, -109, 399, 294, -288, -288,
	-288, -288, -288, 84, 95, 317, 85, 86, -283, -302,
	31, 290, 291, -284, -284, -284, -284, -284, -284, -284,
	-284, -284, -284, -284, -284, -291, -300, -372, 67, 115,
	113, 117, 114, 97, -286, -286, -284, -284, 68, 137,
	-448, -447, 99, -288, -288, -263, -445, -446, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 331,
	326, 332, 330, 322, 338, 333, 334, 170, 481, 482,
	475, 476, 477, 478, 479, 480, -293, -293, -288, -445,
	-293, -241, 32, 31, -294, -294, -294, 68, -288, -459,
	315, 314, 316, -156, -263, -293, 68, 68, 68, 79,
	-294, -294, -293, -284, -293, -446, -241, -241, -294, -294,
	-241, -241, -241, -241, 124, -241, -241, -241, -241, -241,
	-241, -241, -241, 68, -154, -107, -406, -405, -288, 40,
	537, -108, -288, -151, -150, -288, -483, 73, 440, 441,
	146, 149, 148, 34, 67, 67, 136, -187, 95, -465,
	-263, -326, -323, -320, -263, -316, -263, -263, -306, -306,
	-306, -187, -463, -450, 34, -157, -263, -231, 16, -286,
	-286, -320, 247, -490, -274, -274, -256, -255, -276, -271,
	-276, -276, -231, -491, -274, -274, -276, -272, -231, -263,
	414, -231, -231, -359, -273, -263, -273, -306, -255, -256,
	-256, -187, -223, -224, 213, 210, 209, -228, 359, 249,
	-307, 253, 77, 254, 395, 255, 218, 257, 258, 259,
	229, 260, 261, 262, 388, 263, 264, 265, 266, 342,
	6, 305, 40, -465, -465, 30, 30, -326, -263, -146,
	-141, -145, -142, -147, -234, -236, -144, 67, -187, -136,
	-263, 31, 387, -341, 387, 31, -316, -335, -331, 73,
	388, -321, -340, 64, 133, -405, -338, -338, -338, -338,
	-340, -340, 132, 137, -487, 439, 440, 205, -108, -189,
	-187, -465, -325, -316, -263, -189, -189, -263, 67, 35,
	-263, -230, 137, -229, 15, -264, -263, 34, 73, 136,
	-230, -115, -113, 101, -288, -6, 546, -288, -6, -6,
	-288, -6, -288, -386, 363, 79, 79, -249, 73, -249,
	79, 79, 79, 68, 73, -329, 64, -399, -295, -443,
	536, -161, 68, -156, -441, -442, -156, -160, -263, -399,
	-161, 68, -441, -108, -108, -263, 23, -80, -453, 136,
	137, -157, -344, -324, -321, -346, 124, -263, -332, 137,
	490, 559, 71, 220, -475, -474, 379, 68, 137, -409,
	221, 457, 73, 560, 201, 84, 317, 85, 86, -372,
	-294, -291, -286, -286, -284, -284, -289, 234, -289, 94,
	-288, -287, -447, 101, -288, 34, 137, 65, 136, 68,
	68, 15, 15, 68, -288, 68, 68, 68, 68, 15,
	15, -288, 68, 136, 68, 68, 68, 68, 65, 68,
	137, 68, 137, -294, -288, 68, 68, -288, -288, -288,
	-294, 68, -288, -288, -288, -288, -288, -288, -288, -288,
	-354, 409, 137, 68, 73, 137, 22, 137, -148, 36,
	37, 147, 150, 150, 149, -174, -176, -177, -178, -179,
	-180, 115, 138, 139, -167, -168, -169, -170, -193, -247,
	172, 175, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 233, 167, 168, 169, 170, 188, 153,
	173, 154, 155, 156, 157, 158, 159, 162, 163, 164,
	161, -263, -158, 35, -468, 366, -476, 137, 40, -474,
	450, -309, 65, -131, 15, -187, -187, -187, -200, 34,
	15, -140, -188, -263, 67, 68, 137, -288, -317, 65,
	-263, -256, -231, -231, -187, -263, -231, -231, -274, -276,
	-276, -272, 136, -255, -158, 137, -183, -190, -184, -186,
	-247, -279, -185, 227, -438, 225, 223, 89, 228, 279,
	90, 218, -225, 218, 90, 224, 228, 223, -226, 218,
	-260, 105, -260, -254, 132, -260, -260, -260, -260, 256,
	256, -260, -260, -260, -260, -260, -260, -260, -260, -260,
	-260, -260, -260, -260, -260, 67, -469, 366, 30, 325,
	325, -476, -132, 319, 30, -237, -238, -239, -240, 53,
	57, 59, 54, 55, 56, 60, 30, 137, -261, -265,
	34, -263, 73, -261, -136, -141, -146, -261, 67, 220,
	67, 105, -340, -340, -340, -340, 40, -262, -485, 446,
	440, 137, 64, -167, -175, -231, -139, -141, -263, 73,
	-263, 124, -231, 102, -6, 100, -119, -118, -117, 103,
	544, 550, 102, 102, 102, 68, 68, 68, 137, 68,
	68, 68, 137, 68, 137, -412, 419, 39, 137, 67,
	68, 137, 46, 137, 105, 68, 137, 68, 46, 136,
	395, -263, -423, 68, -346, 137, 220, 136, 136, -322,
	345, -262, -324, 20, 490, -247, 38, -253, -252, 73,
	560, 68, -289, -289, 94, -286, -283, 68, 102, -288,
	100, -191, -193, 361, 362, -192, -198, 133, 171, 233,
	170, 169, 167, 361, 362, -208, -263, -288, -288, 68,
	-288, -288, 15, -263, -208, -284, -288, -153, 68, -353,
	-354, -353, 68, 68, 68, 68, -353, 68, 68, 68,
	68, 68, 68, 68, 68, 67, -405, -412, -288, -288,
	-150, -149, 43, 150, 353, 68, 137, -247, 68, 137,
	-193, 34, -471, 421, 368, -260, -281, -280, 321, 41,
	-392, 388, 374, 375, -323, 247, -263, 64, 309, 310,
	311, 312, -304, -305, -303, -307, -465, 67, 67, 67,
	-373, 299, -193, -187, -140, -263, 15, 137, -464, 136,
	-1, -263, -316, -274, -231, -491, -231, -274, -274, -276,
	-263, 34, -224, -193, -185, -437, -438, -306, -263, 90,
	-437, 90, 67, -263, -263, -263, 90, 90, -263, 79,
	79, -260, -260, 79, 73, 73, 73, -260, -260, 79,
	73, -265, 79, 79, 79, 79, 40, 73, -213, 40,
	267, 271, 268, 269, 270, 79, 40, 79, 40, 79,
	40, -263, 67, -439, -440, 73, -471, -260, 325, -337,
	105, -281, -130, 77, 31, -162, 213, 210, -465, -328,
	-327, -247, -145, -145, -145, -145, 53, 53, 53, 58,
	53, 58, 53, -239, -328, -147, -158, -265, 68, -481,
	-480, -479, -477, 61, 221, 62, -293, -324, -277, 73,
	-331, -187, -187, 68, -233, 17, 136, -233, 98, -6,
	-115, -117, -288, -6, -288, 546, 335, 547, 73, 79,
	79, -420, 405, 400, 402, 90, -295, -407, -406, 46,
	-133, -156, -399, -442, -405, -263, 46, -133, -399, -263,
	79, 15, -321, -316, 124, 124, -263, 346, -332, 73,
	367, 73, 216, 561, 137, 105, -253, -283, -288, 68,
	-201, 158, 157, -201, 68, -378, -378, -377, -380, -377,
	-201, -201, 68, 68, 23, 68, 68, 68, -288, 68,
	68, 137, -396, 459, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -297, -296, 239,
	-420, 44, 45, 73, 73, -178, -193, 214, -169, 40,
	-133, -472, 77, -466, 73, -263, -473, 77, 369, 135,
	323, 40, 370, 371, 385, 318, 79, 79, 376, -467,
	-263, -132, -187, -303, -254, 132, 258, 302, -181, -182,
	-183, -181, -181, -374, 301, 20, 79, 123, -159, 65,
	136, -141, -188, -263, 124, 68, -231, -263, -231, -231,
	-274, -133, -205, -204, -202, 84, 95, 40, 359, -203,
	77, 132, 272, 250, 273, -222, -278, 64, 365, 223,
	89, 90, 347, -279, -435, -263, -433, -435, -263, -433,
	-433, -306, -288, -263, -227, 307, 308, -208, -208, 73,
	73, -209, 250, -189, 68, 137, 105, -472, -466, 105,
	-338, 73, -473, 73, 137, -162, -162, -231, 137, 105,
	-164, -163, 64, 65, -165, 64, -163, 53, 53, -231,
	-479, -478, 23, -438, -438, -438, 68, 68, -232, 18,
	20, 124, -232, 102, 100, 102, 102, -263, 68, 68,
	-384, 538, -416, -418, 400, 20, 20, 13, 68, -399,
	-399, -316, -332, 388, -187, -252, 73, 561, -288, 68,
	-288, 68, 73, -153, 20, -384, -171, -193, -282, 73,
	-470, 379, 73, 73, 79, 40, 79, 135, 372, -393,
	-130, 67, -260, -260, -260, -263, 68, 137, 68, 68,
	-375, 238, 79, 123, 79, 123, 79, -261, -141, -263,
	-231, -464, 136, -231, -231, -202, 84, -284, 73, -210,
	-262, 133, -211, 40, 271, 267, -212, 40, 251, 252,
	-214, 67, 279, 13, 90, 90, -187, 67, 67, 65,
	289, 67, 67, -435, 68, 251, 252, 68, -440, 73,
	-470, 73, -340, -465, -153, -327, -405, -288, 67, -288,
	67, 53, 19, 17, -288, -294, 222, -6, 547, 335,
	-215, 539, 73, 20, 73, -414, 73, -328, -111, -410,
	-359, 68, 68, -353, -356, -355, -358, 406, 281, 412,
	-294, -215, 489, 20, 490, 322, 40, 79, 40, 373,
	-311, -313, -247, 67, -208, -210, 73, -206, -207, -228,
	-183, -110, -109, -206, -376, 141, 79, 123, 79, 79,
	-231, -231, 79, 67, -400, -312, 67, -311, -311, -436,
	309, 310, 311, 313, 312, -436, -311, -311, 67, -334,
	-333, 280, 95, -154, -157, -434, -263, 223, 20, 20,
	-263, -263, -250, 540, 79, 73, 402, -385, 541, -419,
	405, -413, -411, 400, 401, 402, 403, 68, -357, 97,
	372, 376, -288, -250, -172, -263, 73, 367, 73, 322,
	68, 137, -377, -288, -348, 239, 137, -228, -111, -348,
	-391, 149, 300, 490, 79, 123, 79, -153, 68, -288,
	-298, -217, -216, 486, -311, 68, 68, 68, 68, -311,
	280, 68, 68, 137, 67, 20, 73, -421, 221, -417,
	-418, 404, -411, 20, 402, 20, 20, -357, 536, 410,
	411, 410, 411, 34, 388, -314, -313, -148, 68, -349,
	288, 20, -228, -349, 300, 79, 123, 79, -154, 68,
	-221, -219, -220, 64, 417, 277, 278, 68, -314, -314,
	-314, -314, 68, -263, 223, -251, -263, -414, -428, 67,
	79, -416, -415, -417, 20, -414, 20, -414, -414, 94,
	73, -315, 229, 77, 490, 307, 308, -148, 20, -350,
	281, 282, -351, -363, 284, 79, -333, -220, 64, -219,
	64, 14, 13, -222, 68, 137, -432, 30, 68, -427,
	-426, -248, -422, -263, 405, 406, 73, -414, -357, -260,
	73, 306, -247, 67, -361, 285, 67, -359, 67, -359,
	90, 310, -218, 274, 275, 30, 149, -218, -263, -431,
	-430, -429, 68, 137, 136, 79, -263, -347, -352, 286,
	79, -284, 67, -284, 67, -360, 283, 67, 84, 40,
	276, 137, 105, -426, -263, 68, -365, 67, 20, 68,
	-347, 68, -347, 67, 105, -284, -430, 40, -288, 136,
	-366, -364, 239, -351, 68, 68, 68, -347, 79, 68,
	-263, 68, 137, -263, -362, 287, 68, -364, -367, 46,
	79, -371, -368, 67, -228, 241, 115, -371, -228, -370,
	-369, 286, 242, 67, 68, 137, -263, 238, 67, -294,
	-369, -368, -294, 68, 68,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 246,
	247, 248, 750, 751, 752, 753, 754, 0, 0, 0,
	0, 526, 527, 0, 498, 0, 0, 0, 0, 0,
	0, 391, 392, 393, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 418, 337,
	338, 339, 340, 341, 342, 0, 271, 267, 206, 207,
	208, 209, 278, 279, 368, 0, 0, 0, 0, 607,
	-2, 53, 260, 0, 251, 251, 755, 756, 757, 758,
	759, 760, 761, 762, -2, 539, 0, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 326,
	327, 328, 322, 323, 325, 324, -2, 0, 539, 0,
	0, 0, 627, 0, 0, 642, 664, 23, 0, 7,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	0, 0, 19, 0, 19, 0, 0, 0, 1047, 1048,
	1049, 1050, -2, 1515, 1493, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 0, 244, 242,
	1493, 1515, 1575, 1608, 0, 767, 0, 585, 0, 590,
	1010, 585, 272, 528, 529, 627, 627, 496, 0, 308,
	0, 1506, 312, 0, 0, 0, 493, 302, 303, 304,
	305, 306, 307, 0, 0, 749, 0, 0, 298, 0,
	266, 1566, 0, 0, 0, 0, 0, 0, 150, 838,
	152, 840, 156, 163, 0, 0, 168, 169, 172, 173,
	174, 175, 176, 0, 180, 0, 182, 185, 0, 187,
	188, 0, 191, 192, 193, 0, 203, 204, 205, 841,
	842, 843, -2, 81, 765, 1431, 1326, 0, 1333, 1334,
	1345, 1356, 1120, 1121, 1122, 1123, 0, 0, 0, 0,
	0, 1130, 1131, 0, 1145, 1668, 0, 1137, 1138, 1139,
	1140, 1141, 90, 102, 103, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 0, 1299, 1107, 1047, 0,
	1676, 0, 1696, 1701, 1702, 1703, 1704, 1695, 0, 0,
	1284, 0, 1274, 0, 0, -2, -2, 0, 0, 1634,
	-2, 1673, 1692, 1700, 1677, 1699, 1670, 1671, 1665, 1666,
	1667, 1669, 1678, 1680, 1691, 0, 1687, 1697, 1698, 0,
	0, 104, 105, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1290, -2, 1292, 1293,
	1295, 1296, 1297, 1298, -2, 1301, 1302, 1303, -2, -2,
	1306, 1307, 1308, 1309, 1310, 1311, 1314, -2, 1316, -2,
	-2, 1286, 1287, 1288, 1289, 1278, 1279, 1280, 1281, 1282,
	1283, -2, -2, -2, 627, 700, 0, -2, 0, 0,
	0, 647, 650, 653, 656, 0, 54, 55, 261, 262,
	250, 252, 0, 256, 0, 249, 0, 0, 0, 870,
	870, 870, 870, 870, 0, 870, 0, 0, 0, 870,
	845, 846, 847, 868, 869, 916, 544, 540, 541, 542,
	543, 615, 0, 617, 620, 473, 420, 0, 0, 0,
	473, 0, 434, 426, 0, 0, 0, 473, 0, 0,
	622, 622, 0, 476, 483, 473, 473, -2, 473, 473,
	473, 0, 0, 440, 441, 442, 426, 426, 445, 446,
	447, 458, 459, 484, 1455, 0, 0, 368, 0, 368,
	0, 368, 368, 546, 1566, 0, 0, 217, 1634, 222,
	0, 1513, 1514, 1580, 1529, 0, 0, 1547, 0, -2,
	0, 288, 622, 0, 628, 0, 627, 0, 0, 368,
	368, 368, 368, 368, 368, 368, 368, 0, 0, 0,
	368, 0, 0, 665, 666, 661, 662, 663, 667, 668,
	5, 6, 19, 0, 0, 0, 0, 0, 0, 60,
	59, 0, 1432, 1450, 1387, 1388, 1389, 1437, 1391, 1441,
	1441, 1441, 1441, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 0, 0, 1430, 1410, 1439, 1439, 1439, 1437,
	1434, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1444, 1444, 1447, 1444, 0,
	1324, 0, 0, 0, 0, 589, 0, 0, 622, -2,
	0, 497, 309, 1051, 0, 0, 313, 314, 0, 0,
	329, 0, 332, 317, 318, 319, 0, 130, 0, 300,
	301, 0, 0, 268, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 160, 157, 164, 167, 177, 184,
	0, 196, 198, 201, 158, 165, 170, 171, 178, 199,
	159, 161, 162, 166, 200, 202, 179, 183, 197, 181,
	186, 189, 190, 195, 0, 131, 0, 0, 0, 0,
	0, 1332, 0, 0, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	1326, 0, 0, 1126, 1127, 1128, 1129, 1132, 0, 1146,
	0, 0, 0, 1385, 0, 1324, 1324, 0, 1324, 1320,
	0, 0, 0, 0, 0, 0, 1324, 1260, 0, 0,
	1262, 1275, 0, 0, 1264, 1265, 0, 1268, 1269, 1324,
	0, 1324, 1273, 1256, 1257, 0, 1320, 1320, 0, 0,
	1320, 1320, 1320, 1320, 1320, 1320, 1320, 1320, 1320, 1320,
	1320, 1320, 0, 622, 0, 0, 610, 0, 591, 0,
	644, 646, 0, 648, 649, 651, 652, 654, 655, 657,
	658, 56, 0, 0, 254, 0, 259, 0, 764, 0,
	0, 780, 0, 0, 0, 0, 0, 0, 0, 0,
	870, 870, 870, 0, 546, 545, 0, 616, 0, 0,
	673, 0, 0, 0, 426, 473, 473, 432, 433, 428,
	427, 479, 480, 476, 0, 476, 476, 673, 0, 452,
	453, 454, 473, 473, 460, 623, 461, 462, 476, 0,
	481, 482, 673, 0, 0, 673, 673, 0, 470, 471,
	472, 0, 0, 870, 0, 489, 428, 428, 1456, 1457,
	0, 879, 0, 0, 0, 492, 0, 0, 0, 547,
	210, 0, 0, 0, 0, 0, 0, 240, 241, 0,
	0, 0, 0, 0, 0, 231, 234, 1004, 1005, 835,
	836, 235, 236, 280, 281, 0, 591, 643, 645, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 0, 524, 0, 0, 681, 675, 677, 744, 90,
	681, 8, 77, 74, 0, 19, 0, 0, 19, 19,
	0, 19, 245, 0, 1453, 1451, 1452, 1390, 1438, 0,
	1415, 0, 1416, 1417, 1418, 0, 0, 1411, 0, 1412,
	1413, 1414, 1406, 0, 1407, 1408, 0, 1409, 243, 0,
	1325, 768, 0, 564, 577, 559, 0, 566, 0, 1011,
	548, 577, 550, 0, 566, 591, 613, 591, 0, 310,
	0, 315, 0, 0, 331, 333, 334, 335, 320, 321,
	494, 296, 297, 289, 290, 291, 292, 293, 294, 295,
	299, 100, 0, 269, 270, 0, 0, 0, 144, 145,
	146, 147, 148, 149, 151, 135, 514, 516, 827, 839,
	0, 830, 0, 154, 194, 127, 0, 0, 1327, 1328,
	1329, 1330, 1331, 1335, 0, 1337, 1339, 1341, 1343, 0,
	1361, -2, -2, 1108, 1109, 1110, 1111, 1112, 1113, 1114,
	1115, 1116, 1117, 1118, 1119, 1346, 1359, 1360, 0, 0,
	0, 0, 0, 0, 1357, 1357, 1352, 0, 1124, 0,
	1143, 1147, 0, 0, 0, 91, 1319, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 0, 0, 1326, 0,
	0, 0, 1321, 1322, 0, 0, 0, 1215, 0, 0,
	1221, 1222, 1223, 0, 572, 0, 1285, 1261, 1276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 699, 701, 0, 581, 583, 584,
	0, 611, 624, 629, 630, 633, 52, 57, 263, 264,
	0, 0, 258, 0, -2, 782, 0, 620, 0, 0,
	794, 366, 821, 0, 0, 837, 860, 866, 0, 0,
	0, 894, 0, 618, 0, 0, 713, 419, 0, 474,
	475, 423, 1566, 428, 673, 673, 435, 429, 436, 478,
	437, 438, 439, 0, 673, 673, 473, 476, 463, 477,
	476, 466, 467, 0, 485, 490, 486, 0, 488, 443,
	444, 620, 344, 345, 0, 0, 0, 350, 1458, 1458,
	0, 1458, 1458, 1458, 1458, 0, 0, 1458, 1458, 1458,
	1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458,
	1458, 0, 880, 363, 0, 0, 0, 366, 811, 686,
	0, 687, 688, 684, 715, 739, 739, 0, 739, 719,
	1010, 211, 212, 0, 214, 215, 216, 223, 218, 220,
	0, 0, 224, 237, 238, 239, 0, 0, 0, 0,
	229, 230, 0, 0, 283, 284, 286, 0, 609, 511,
	1008, 512, 513, 517, 0, 519, 520, 521, 782, 0,
	816, 673, 0, 682, 0, 678, 745, 0, 747, 0,
	673, 0, 75, 19, 0, 68, 65, 0, 0, 0,
	0, 0, 1433, 1386, 1454, 0, 0, 0, 1435, 0,
	0, 0, 0, 58, 593, 555, 0, 558, 574, 0,
	578, 0, 0, 570, 563, 567, 0, 0, 587, 549,
	0, 0, 554, 612, 614, 1052, 0, 316, 330, 0,
	0, 0, 0, 138, 824, 0, 139, 143, 133, 0,
	0, 0, 829, 0, 826, 831, 0, 153, 0, 0,
	128, 129, 885, 890, 0, 1336, 1338, 1340, 1342, 1344,
	0, 1347, 1357, 1357, 1353, 0, 1348, 0, 1350, 0,
	1327, 0, 1148, 0, 0, 0, 0, 0, 0, 1205,
	1206, 0, 0, 1210, 0, 1212, 1213, 1214, 1216, 0,
	0, 0, 1220, 0, 1259, 1277, 1263, 1266, 0, 1270,
	0, 1272, 0, 627, 0, 1182, 1182, 0, 0, 0,
	0, 1182, 0, 0, 0, 0, 0, 0, 0, 0,
	1142, 0, 0, 702, 593, 0, 0, 0, 636, 634,
	635, 265, 253, 255, 0, 0, 0, 770, 771, 773,
	0, 776, 777, 778, 0, 783, 784, 786, 787, 0,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1498, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 781, 0, 871, 801, 1458, 370, 0, 0, 823,
	0, 0, 0, -2, 0, 0, 0, 0, 896, 0,
	0, 0, 533, 537, 23, 621, 0, 674, 421, 0,
	422, 473, 430, 431, 673, 1010, 455, 456, 673, 473,
	473, 476, 0, 487, 0, 879, 347, 1016, 1017, 1018,
	0, 0, 1022, 1029, 870, 1077, 0, 1029, 0, 0,
	1031, 1032, 348, 0, 0, 0, 0, 0, 349, 0,
	0, 1459, 0, 1458, 1458, 0, 0, 0, 0, 1458,
	1458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 801, 1458, 0, 0,
	0, 370, 808, 0, 0, 0, 0, 0, 0, 706,
	0, 0, 705, 0, 0, 0, 0, 0, 620, 740,
	0, 742, 743, 717, -2, 0, 686, 722, 1324, 0,
	0, 0, 225, 226, 227, 228, 232, 233, 282, 285,
	287, 0, 0, 0, 525, 671, 676, 683, 746, 748,
	91, 679, 671, 0, 78, 19, 77, 69, 70, 0,
	19, 0, 0, 0, 0, 1443, 1442, 1428, 0, 1429,
	1440, 1445, 0, 1448, 0, 597, 0, 0, 577, 579,
	0, 0, 577, 0, 0, 586, 0, 0, 577, 0,
	0, 495, 101, 336, 0, 0, 0, 0, 0, 515,
	0, 828, 135, 0, 0, 155, 0, 0, 888, 0,
	890, 1323, 1349, 1351, 0, 1358, 1354, 1125, 1133, 1144,
	0, 0, 1150, 1162, 1162, 0, 1153, 1441, 1441, 1156,
	1437, 1439, 1437, 1162, 1162, 0, 92, 0, 0, 1211,
	0, 0, 0, 573, 0, 0, 0, 1180, 1182, 1187,
	1183, 1188, 1182, 1182, 1182, 1182, 1193, 1182, 1182, 1182,
	1182, 1182, 1182, 1182, 1182, 1178, 582, 597, 625, 626,
	631, 632, 0, 257, 0, 0, 775, 0, 0, 0,
	788, 0, 804, 802, 803, 0, 818, 371, 372, 373,
	374, 0, 0, 0, 822, 0, 811, 0, 861, 862,
	863, 864, 865, -2, 874, 0, 0, 1012, 1012, 1012,
	904, 0, 895, 585, 0, -2, 0, 0, 535, 0,
	0, 714, 424, 673, 448, 0, 464, 673, 673, 473,
	491, 0, 346, -2, 1021, 1041, 1030, 1041, 1078, 1041,
	1041, 870, 0, 351, 352, 353, 0, 355, 0, 963,
	964, 0, 0, 967, 968, 969, 970, 0, 0, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 998,
	999, 1000, 1001, 1002, 1003, 983, 984, 985, 986, 987,
	988, 995, 0, 0, 992, 0, 804, 0, 0, 0,
	0, 818, 810, 0, 812, 813, 0, 0, 556, 673,
	275, 0, 709, 703, 0, 692, 707, 708, 695, 0,
	697, 0, 693, 694, 673, 685, 716, 741, 718, 721,
	723, 724, 730, 0, 0, 0, 0, 213, 0, 390,
	219, 1009, 518, 523, 669, 0, 0, 669, 73, 76,
	0, 71, 0, 0, 0, 0, 63, 61, 1436, 0,
	0, 599, 115, 0, 0, 0, 575, 0, 580, 577,
	562, 571, 561, 568, 569, 588, 577, 553, 552, 1053,
	311, 0, 825, 135, 140, 141, 142, 136, 134, 832,
	0, 834, 0, 886, 890, 0, 0, 1355, 1149, 1134,
	1151, 1163, 1164, 1152, 1135, 1154, 1155, 1157, 1158, 1159,
	1160, 1161, 1136, 1207, 0, 1209, 1217, 1218, 0, 1267,
	1271, 0, 0, 0, 1186, 1189, 1190, 1191, 1192, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 627, 1179, 0,
	599, 637, 638, 763, 766, 772, 774, 0, 785, 0,
	792, 793, 0, 0, 796, 797, 806, 0, 0, 0,
	376, 377, 0, 0, 0, 389, 385, 386, 387, 367,
	817, 808, 0, 875, 1458, 1458, 1458, 0, 0, 1013,
	1014, 0, 0, 907, 0, 0, 898, 0, 739, 0,
	0, 673, 534, 537, 538, 619, 425, 673, 468, 465,
	673, 343, 1043, -2, 1056, 1058, 0, 0, 1061, 1062,
	0, 0, 0, 0, 1099, 1068, 0, 0, 1072, 0,
	1373, 1374, 0, 1076, 0, 1042, 0, 1033, 1042, 0,
	0, 1041, 0, 354, 356, 357, 358, 965, 966, 971,
	972, 989, 0, 0, 991, 0, 0, 359, 0, 0,
	0, 360, 365, 809, 0, 814, 815, 627, 0, 0,
	689, 710, 0, 0, 690, 0, 691, 696, 698, 274,
	725, 0, 0, 727, 728, 729, 720, 221, 659, 0,
	0, 680, 660, 0, 19, 0, 0, 66, 1446, 1449,
	601, 0, 598, 116, 0, 0, 0, 0, 576, 560,
	551, 137, 132, 833, 118, 889, 891, 887, 0, 1219,
	0, 1182, 1181, 1175, 0, 601, 0, 791, 789, 805,
	795, 0, 819, 820, 0, 378, 379, 0, 382, 388,
	807, 0, 0, 0, 0, 867, -2, 0, 0, -2,
	910, 0, 905, 0, 897, 0, 900, 673, 673, -2,
	531, 536, 0, 449, 469, 1057, 1059, 1060, 1063, 1064,
	1006, 1007, 1065, 1104, 1105, 1106, 1066, 1101, 1102, 1103,
	1067, 0, 0, 0, 1371, 1372, 1097, 0, 0, 0,
	0, 0, 0, 0, 1027, 996, 997, 990, 993, 994,
	364, 361, 362, 557, 622, 276, 277, 711, 0, 704,
	734, 731, 0, 0, 670, 672, 67, 72, 0, 0,
	603, 0, 600, 0, 594, 596, 126, 565, 88, 109,
	0, 1208, 1258, 1185, 0, 1176, 0, 1170, 1171, 1172,
	1177, 603, 0, 0, 0, 375, 380, 0, 383, 384,
	0, 856, 1437, 0, 876, 877, 878, 917, -2, 960,
	1015, 882, 118, 917, 901, 0, 908, 0, 906, 899,
	627, 532, 0, 0, 1274, 1092, 0, 0, 0, 1034,
	1036, 1037, 1038, 1039, 1040, 1035, 0, 0, 0, 1026,
	1028, 1073, 0, 273, 0, 0, 735, 737, 732, 733,
	62, 64, 79, 0, 602, 117, 0, 80, 0, 106,
	0, 119, 120, 0, 0, 0, 0, 1184, 1173, 0,
	0, 0, 0, 592, 0, 790, 798, 0, 800, 381,
	849, 0, 633, 0, 919, 0, 879, 962, 884, 919,
	893, 0, 903, 0, 912, 0, 909, 622, 1100, 0,
	1071, 1080, 1093, 0, 0, 849, 849, 849, 849, 0,
	1074, 712, 726, 0, 0, 0, 89, 93, 0, 115,
	112, 0, 121, 0, 0, 0, 0, 0, 1165, 1166,
	1168, 1167, 1169, 0, 799, 848, 857, 858, 633, 881,
	0, 956, 961, 883, 902, 911, 0, 914, 530, 1069,
	1079, 1081, 1082, 0, 1094, 1095, 1096, 1098, 1019, 1020,
	1023, 1024, 0, 736, 738, 0, 605, 595, 82, 0,
	0, 110, 111, 113, 0, 122, 0, 124, 125, 0,
	779, 850, 1458, 0, 0, 854, 855, 859, 0, 944,
	0, 0, 950, 0, 957, 913, 1070, 1083, 0, 1084,
	0, 0, 0, 1025, 604, 0, 892, 0, 94, 0,
	96, 98, 99, 1044, 107, 108, 114, 123, 1174, 0,
	852, 0, 920, 0, 922, 0, 0, 0, 0, 0,
	954, 0, 1085, 1087, 1088, 0, 0, 1086, 606, 83,
	84, 0, 95, 0, 0, 851, 853, 0, 924, 0,
	945, 0, 0, 0, 0, 0, 0, 0, 1089, 1091,
	1090, 0, 0, 97, 1045, 921, 918, 0, 956, 946,
	0, 948, 0, 0, 0, 0, 85, 86, 87, 0,
	0, 926, 0, 942, 947, 949, 951, 0, 955, 953,
	1046, 925, 0, 938, 923, 0, 952, 927, -2, 0,
	943, 928, -2, 0, 936, 0, 0, 929, 937, 0,
	932, 0, 0, 0, 931, 0, -2, 939, 0, 0,
	933, -2, 0, 941, 940,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 127, 119, 3,
	67, 68, 124, 122, 137, 123, 136, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 558, 557,
	106, 105, 107, 3, 559, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 560, 118, 561, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 104,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	120, 121, 126, 128, 131, 132, 133, 134, 135, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:710
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:717
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:723
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:731
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:737
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:741
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:756
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:760
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:766
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:771
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:775
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:807
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:814
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:834
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:840
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:847
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:855
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:861
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:870
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:880
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:888
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:896
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:904
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:914
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:922
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:932
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:962
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:968
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:972
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:978
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:987
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:997
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1001
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1020
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1026
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1047
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1060
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1071
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1077
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1081
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1087
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1094
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1102
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1106
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1120
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1124
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1128
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1141
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1147
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1156
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1167
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1171
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1177
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1181
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1187
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1191
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1197
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1221
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1240
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1244
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1248
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1257
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1264
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1272
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1279
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1284
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1291
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1296
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1300
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1324
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1328
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1334
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1340
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1358
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1375
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1398
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1402
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1406
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1411
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1415
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1421
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1434
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1445
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1458
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1462
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1472
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1485
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1498
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1504
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1510
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1517
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1525
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1534
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1538
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1542
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1546
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1550
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1554
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1561
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1565
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1587
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1591
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1597
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1629
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1633
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1637
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1641
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1645
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1649
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1653
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1657
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1661
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1805
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1812
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1819
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1828
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1858
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1862
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1866
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1872
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1878
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1889
		{
			yyVAL.str = yyDollar[3].str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1895
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1899
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1905
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1913
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1922
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1931
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1939
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1947
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1970
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1993
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2000
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2022
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2038
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2042
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2046
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2052
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2056
		{
			yyVAL.str = yyDollar[1].str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2062
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2066
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2072
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2076
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2087
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2093
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2098
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2102
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2106
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2110
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2114
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2118
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2122
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2126
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2130
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2136
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2140
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2144
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2148
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2153
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2158
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2164
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2171
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2177
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2184
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2191
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2201
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2208
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2219
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2230
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2234
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2250
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2256
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2260
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2266
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2272
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2276
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2280
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2284
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2302
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2308
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2312
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2328
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2334
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2345
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2351
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2355
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2359
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2363
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2367
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2371
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2379
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2387
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2397
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2438
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2442
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2448
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2454
		{
			yyVAL.str = yyDollar[1].str
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2459
		{
			yyVAL.str = "true"
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2460
		{
			yyVAL.str = "false"
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2461
		{
			yyVAL.str = yyDollar[1].str
		}
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2481
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2501
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2505
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2511
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2518
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2522
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2526
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2532
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2539
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2546
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2553
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2560
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2568
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2577
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2581
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2588
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2600
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2608
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2616
		{
			assignments := []*tree.VarAssignmentExpr{
				{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2629
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2635
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2646
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2657
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2661
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2666
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2670
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2675
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2679
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2695
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2699
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2703
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2707
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2711
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2715
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2719
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2723
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2727
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2731
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2735
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2739
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2743
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2747
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2751
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2755
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2761
		{
			yyVAL.item = nil
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2766
		{
			yyVAL.item = nil
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2805
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2810
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2814
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2818
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2827
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2831
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2837
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2842
		{
		}
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2846
		{
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2851
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2861
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2885
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2891
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2897
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2903
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2909
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2915
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2924
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2936
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2944
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2952
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2958
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2965
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2975
		{
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2977
		{
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2986
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3005
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3009
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3013
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3019
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3025
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3031
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3037
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3046
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3068
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3072
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3110
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3122
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3126
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3130
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3135
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3139
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3145
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3158
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3162
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3168
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3173
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3177
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3193
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3197
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3203
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3209
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3213
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3217
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3223
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3227
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3250
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3259
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3268
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3277
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3281
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3296
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3305
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3315
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3321
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3333
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3355
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3366
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3371
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3378
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3394
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3407
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3418
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3422
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3428
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3433
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3440
		{
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3442
		{
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3445
		{
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3454
		{
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3458
		{
		}
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3463
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3472
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3479
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3485
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3493
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3500
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3507
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3527
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3537
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3541
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3547
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3554
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3560
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3568
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3575
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3582
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3601
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3605
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3614
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3618
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3624
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3633
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3637
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3643
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3647
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3653
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3657
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3663
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3668
		{
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3679
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3683
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3690
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3699
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3705
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3709
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3715
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3719
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3724
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3728
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3748
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3755
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3773
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3792
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3798
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3805
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3809
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3822
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3826
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3831
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3835
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3842
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3847
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3854
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3860
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3864
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3868
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3872
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3876
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3880
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3886
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3893
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3902
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3906
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3912
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3924
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3933
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3939
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3943
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3947
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3956
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3962
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3968
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3972
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3978
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3983
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3987
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3991
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3996
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4000
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4004
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4010
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4014
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4018
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4032
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4036
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4046
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4056
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4066
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4078
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4086
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4094
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4103
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4111
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4119
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4127
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4135
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4143
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4151
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4159
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4167
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4177
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4188
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4202
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4206
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4210
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4215
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4219
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4223
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4232
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4236
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4245
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4254
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4260
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4264
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4270
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4274
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4279
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4283
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4288
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4296
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4302
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4310
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4318
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4328
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4334
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4343
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4352
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4361
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4371
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4375
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4385
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4389
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4393
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4397
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4403
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4413
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4417
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4423
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4433
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4439
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4445
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4449
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4453
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4463
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4469
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4473
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4479
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4483
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4489
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4493
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4503
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4516
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4522
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4528
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4541
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4552
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4559
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4563
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4569
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4579
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4583
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4587
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4592
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4596
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4600
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4604
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4613
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4617
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4621
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4625
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4630
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4634
		{
			yyVAL.str = yyDollar[1].str
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4638
		{
			yyVAL.str = yyDollar[2].str
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4644
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4650
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4654
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4658
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4662
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4666
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4672
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 763:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4705
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4715
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4721
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 766:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4727
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4737
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4742
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4748
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4755
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4759
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4765
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4771
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4776
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4780
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4784
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4788
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4795
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4807
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4812
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4818
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4825
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4829
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4835
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4841
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4845
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4849
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4855
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4861
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4867
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4878
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4890
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4896
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4906
		{
			yyVAL.str = yyDollar[1].str
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4910
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4916
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4923
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4929
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4937
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4943
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4950
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4958
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4964
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4973
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4985
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4996
		{
			yyVAL.str = ""
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5000
		{
			yyVAL.str = yyDollar[2].str
		}
	case 810:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5006
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5020
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5026
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5032
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5038
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5047
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5056
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5061
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5067
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5075
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5181
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5185
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5191
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5201
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5205
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5211
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5221
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5225
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5229
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5238
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5244
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5251
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5257
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5266
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5273
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5282
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5286
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5292
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5306
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5310
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5314
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5319
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5323
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5327
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5331
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5337
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5360
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5382
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5386
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5390
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5394
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5398
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5404
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5408
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5414
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5419
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5424
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5428
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5432
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5436
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5440
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5446
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5461
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5471
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5475
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5480
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5484
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5490
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5494
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5500
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5504
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5508
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5513
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5517
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5523
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5535
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5544
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5557
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5564
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5574
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5582
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5593
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5597
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5602
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5606
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5613
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5624
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5637
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5651
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5655
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5659
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5666
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5673
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5680
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5687
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5691
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5695
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5699
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5703
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5710
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5721
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5728
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5735
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5739
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5746
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5753
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5760
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5767
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5771
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5780
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5794
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5801
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5812
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5825
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5831
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5835
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5841
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5850
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5864
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5870
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5874
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5880
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5887
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5896
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5900
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5905
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5909
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5914
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5918
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5923
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5927
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5937
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5941
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5952
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5960
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5968
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5976
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5987
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5996
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6006
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6016
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6020
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6025
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6029
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6034
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6038
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6044
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6048
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6052
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6058
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6062
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6066
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6070
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6074
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6078
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6083
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6087
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6091
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6095
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6099
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6103
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6107
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6111
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6115
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6119
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6123
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6127
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6131
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6135
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6139
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6143
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6147
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6151
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6155
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6159
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6163
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6167
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6171
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6178
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6182
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6188
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6193
		{
			yyVAL.str = ""
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6197
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6201
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6207
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6211
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6215
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6219
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6223
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6227
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6241
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6245
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6254
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6259
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6265
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6272
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6276
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6282
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6286
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6290
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6296
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6305
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6330
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6344
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6350
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6359
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6368
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6378
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6386
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6392
		{
			yyVAL.str = ""
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6396
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6406
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6412
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6418
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6432
		{
			yyVAL.str = ""
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6436
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6442
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6448
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6452
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6456
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6462
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6466
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6470
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6474
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6480
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6484
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6488
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6497
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6503
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6507
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6513
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6517
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6521
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6525
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6529
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6533
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6538
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6542
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6546
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6550
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6554
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6558
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6562
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6566
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6579
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6585
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6589
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6594
		{
			yyVAL.str = ""
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6598
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6604
		{
			yyVAL.str = ""
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6608
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6614
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6626
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6633
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6640
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6647
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6654
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6663
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6669
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6675
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6679
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6683
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6687
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6691
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6696
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6703
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6707
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6711
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6720
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6725
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6729
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6745
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6751
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6755
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6759
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6763
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6767
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6771
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6775
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6779
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6783
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6787
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6791
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6795
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6799
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6805
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6809
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6813
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6817
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6821
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6825
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6829
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6833
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6837
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6841
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6845
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6849
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6854
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6862
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6867
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6871
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6880
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6884
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6888
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6892
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6896
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6902
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6911
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6915
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6924
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6930
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6934
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6940
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6949
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6961
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6978
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6995
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7008
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7021
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7033
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7047
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7062
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7077
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7094
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7109
		{
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7115
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7119
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7123
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7129
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7133
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7141
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7145
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7149
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7155
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7162
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7175
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7182
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7191
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7196
		{
			yyVAL.str = ","
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7200
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7212
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7222
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7233
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7243
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7252
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7261
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7271
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7281
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7291
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7301
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7311
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7321
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7331
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7341
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7351
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7361
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7371
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7381
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7398
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7406
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7414
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7422
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7430
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7440
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7448
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7457
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7465
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7473
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7481
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7489
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7500
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7510
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7522
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7533
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7555
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7591
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7603
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7615
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7626
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7634
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7641
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7648
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7660
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7668
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7678
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7688
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7696
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7707
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7716
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7725
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7733
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7743
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7751
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7761
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7765
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7771
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7775
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7794
		{
		}
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7796
		{
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7837
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7848
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7852
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7856
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7862
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7867
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7871
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7877
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7881
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7888
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7892
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7896
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7904
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7908
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7912
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7916
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7922
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7926
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7930
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7934
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7938
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7942
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7946
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7950
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7954
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7958
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7966
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7970
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7974
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7978
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7982
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7986
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7990
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7994
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7998
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8002
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8012
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8018
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8022
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8029
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8033
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8037
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8043
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8047
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8051
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8055
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8059
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8063
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8067
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8073
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8077
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8081
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8085
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8091
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8095
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8108
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8113
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8117
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8121
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8125
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8129
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8133
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8147
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8151
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8158
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8169
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8174
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8180
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8192
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8204
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8216
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8229
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8242
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8255
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8268
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8281
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8294
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8307
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8320
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8333
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8346
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8361
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8388
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8430
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8478
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8495
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8507
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8527
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8547
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8567
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8583
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8596
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8609
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8622
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8635
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8647
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8659
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8671
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8683
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8695
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8707
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8719
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8731
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8743
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8756
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8769
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8784
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8792
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8801
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8811
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8834
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8839
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8845
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8852
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8856
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8861
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8865
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8871
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8877
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8884
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8891
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8900
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8907
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8914
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8923
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8927
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8931
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8937
		{
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8939
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8949
		{
			yyVAL.str = ""
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8953
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

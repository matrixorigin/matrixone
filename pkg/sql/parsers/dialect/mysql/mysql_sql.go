// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const LOWER_THAN_COMMA = 57354
const SELECT = 57355
const INSERT = 57356
const UPDATE = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const GROUP = 57361
const HAVING = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CONNECT = 57367
const MANAGE = 57368
const GRANTS = 57369
const OWNERSHIP = 57370
const REFERENCE = 57371
const LOWER_THAN_SET = 57372
const SET = 57373
const ALL = 57374
const DISTINCT = 57375
const DISTINCTROW = 57376
const AS = 57377
const EXISTS = 57378
const ASC = 57379
const DESC = 57380
const INTO = 57381
const DUPLICATE = 57382
const DEFAULT = 57383
const LOCK = 57384
const KEYS = 57385
const NULLS = 57386
const FIRST = 57387
const LAST = 57388
const AFTER = 57389
const INSTANT = 57390
const INPLACE = 57391
const COPY = 57392
const DISABLE = 57393
const ENABLE = 57394
const UNDEFINED = 57395
const MERGE = 57396
const TEMPTABLE = 57397
const DEFINER = 57398
const INVOKER = 57399
const SQL = 57400
const SECURITY = 57401
const CASCADED = 57402
const VALUES = 57403
const NEXT = 57404
const VALUE = 57405
const SHARE = 57406
const MODE = 57407
const SQL_NO_CACHE = 57408
const SQL_CACHE = 57409
const JOIN = 57410
const STRAIGHT_JOIN = 57411
const LEFT = 57412
const RIGHT = 57413
const INNER = 57414
const OUTER = 57415
const CROSS = 57416
const NATURAL = 57417
const USE = 57418
const FORCE = 57419
const LOWER_THAN_ON = 57420
const ON = 57421
const USING = 57422
const SUBQUERY_AS_EXPR = 57423
const LOWER_THAN_STRING = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const STRING = 57428
const VALUE_ARG = 57429
const LIST_ARG = 57430
const COMMENT = 57431
const COMMENT_KEYWORD = 57432
const QUOTE_ID = 57433
const STAGE = 57434
const CREDENTIALS = 57435
const STAGES = 57436
const INTEGRAL = 57437
const HEX = 57438
const BIT_LITERAL = 57439
const FLOAT = 57440
const HEXNUM = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const LOWER_THAN_CHARSET = 57445
const CHARSET = 57446
const UNIQUE = 57447
const KEY = 57448
const OR = 57449
const PIPE_CONCAT = 57450
const XOR = 57451
const AND = 57452
const NOT = 57453
const BETWEEN = 57454
const CASE = 57455
const WHEN = 57456
const THEN = 57457
const ELSE = 57458
const END = 57459
const ELSEIF = 57460
const LOWER_THAN_EQ = 57461
const LE = 57462
const GE = 57463
const NE = 57464
const NULL_SAFE_EQUAL = 57465
const IS = 57466
const LIKE = 57467
const REGEXP = 57468
const IN = 57469
const ASSIGNMENT = 57470
const ILIKE = 57471
const SHIFT_LEFT = 57472
const SHIFT_RIGHT = 57473
const DIV = 57474
const MOD = 57475
const UNARY = 57476
const COLLATE = 57477
const BINARY = 57478
const UNDERSCORE_BINARY = 57479
const INTERVAL = 57480
const OUT = 57481
const INOUT = 57482
const BEGIN = 57483
const START = 57484
const TRANSACTION = 57485
const COMMIT = 57486
const ROLLBACK = 57487
const WORK = 57488
const CONSISTENT = 57489
const SNAPSHOT = 57490
const CHAIN = 57491
const NO = 57492
const RELEASE = 57493
const PRIORITY = 57494
const QUICK = 57495
const BIT = 57496
const TINYINT = 57497
const SMALLINT = 57498
const MEDIUMINT = 57499
const INT = 57500
const INTEGER = 57501
const BIGINT = 57502
const INTNUM = 57503
const REAL = 57504
const DOUBLE = 57505
const FLOAT_TYPE = 57506
const DECIMAL = 57507
const NUMERIC = 57508
const DECIMAL_VALUE = 57509
const TIME = 57510
const TIMESTAMP = 57511
const DATETIME = 57512
const YEAR = 57513
const CHAR = 57514
const VARCHAR = 57515
const BOOL = 57516
const CHARACTER = 57517
const VARBINARY = 57518
const NCHAR = 57519
const TEXT = 57520
const TINYTEXT = 57521
const MEDIUMTEXT = 57522
const LONGTEXT = 57523
const BLOB = 57524
const TINYBLOB = 57525
const MEDIUMBLOB = 57526
const LONGBLOB = 57527
const JSON = 57528
const ENUM = 57529
const UUID = 57530
const VECF32 = 57531
const VECF64 = 57532
const GEOMETRY = 57533
const POINT = 57534
const LINESTRING = 57535
const POLYGON = 57536
const GEOMETRYCOLLECTION = 57537
const MULTIPOINT = 57538
const MULTILINESTRING = 57539
const MULTIPOLYGON = 57540
const INT1 = 57541
const INT2 = 57542
const INT3 = 57543
const INT4 = 57544
const INT8 = 57545
const S3OPTION = 57546
const STAGEOPTION = 57547
const SQL_SMALL_RESULT = 57548
const SQL_BIG_RESULT = 57549
const SQL_BUFFER_RESULT = 57550
const LOW_PRIORITY = 57551
const HIGH_PRIORITY = 57552
const DELAYED = 57553
const CREATE = 57554
const ALTER = 57555
const DROP = 57556
const RENAME = 57557
const ANALYZE = 57558
const ADD = 57559
const RETURNS = 57560
const SCHEMA = 57561
const TABLE = 57562
const SEQUENCE = 57563
const INDEX = 57564
const VIEW = 57565
const TO = 57566
const IGNORE = 57567
const IF = 57568
const PRIMARY = 57569
const COLUMN = 57570
const CONSTRAINT = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const FOREIGN = 57574
const KEY_BLOCK_SIZE = 57575
const SHOW = 57576
const DESCRIBE = 57577
const EXPLAIN = 57578
const DATE = 57579
const ESCAPE = 57580
const REPAIR = 57581
const OPTIMIZE = 57582
const TRUNCATE = 57583
const MAXVALUE = 57584
const PARTITION = 57585
const REORGANIZE = 57586
const LESS = 57587
const THAN = 57588
const PROCEDURE = 57589
const TRIGGER = 57590
const STATUS = 57591
const VARIABLES = 57592
const ROLE = 57593
const PROXY = 57594
const AVG_ROW_LENGTH = 57595
const STORAGE = 57596
const DISK = 57597
const MEMORY = 57598
const CHECKSUM = 57599
const COMPRESSION = 57600
const DATA = 57601
const DIRECTORY = 57602
const DELAY_KEY_WRITE = 57603
const ENCRYPTION = 57604
const ENGINE = 57605
const MAX_ROWS = 57606
const MIN_ROWS = 57607
const PACK_KEYS = 57608
const ROW_FORMAT = 57609
const STATS_AUTO_RECALC = 57610
const STATS_PERSISTENT = 57611
const STATS_SAMPLE_PAGES = 57612
const DYNAMIC = 57613
const COMPRESSED = 57614
const REDUNDANT = 57615
const COMPACT = 57616
const FIXED = 57617
const COLUMN_FORMAT = 57618
const AUTO_RANDOM = 57619
const ENGINE_ATTRIBUTE = 57620
const SECONDARY_ENGINE_ATTRIBUTE = 57621
const INSERT_METHOD = 57622
const RESTRICT = 57623
const CASCADE = 57624
const ACTION = 57625
const PARTIAL = 57626
const SIMPLE = 57627
const CHECK = 57628
const ENFORCED = 57629
const RANGE = 57630
const LIST = 57631
const ALGORITHM = 57632
const LINEAR = 57633
const PARTITIONS = 57634
const SUBPARTITION = 57635
const SUBPARTITIONS = 57636
const CLUSTER = 57637
const TYPE = 57638
const ANY = 57639
const SOME = 57640
const EXTERNAL = 57641
const LOCALFILE = 57642
const URL = 57643
const PREPARE = 57644
const DEALLOCATE = 57645
const RESET = 57646
const EXTENSION = 57647
const INCREMENT = 57648
const CYCLE = 57649
const MINVALUE = 57650
const PUBLICATION = 57651
const SUBSCRIPTIONS = 57652
const PUBLICATIONS = 57653
const PROPERTIES = 57654
const PARSER = 57655
const VISIBLE = 57656
const INVISIBLE = 57657
const BTREE = 57658
const HASH = 57659
const RTREE = 57660
const BSI = 57661
const IVFFLAT = 57662
const ZONEMAP = 57663
const LEADING = 57664
const BOTH = 57665
const TRAILING = 57666
const UNKNOWN = 57667
const LISTS = 57668
const OP_TYPE = 57669
const REINDEX = 57670
const EXPIRE = 57671
const ACCOUNT = 57672
const ACCOUNTS = 57673
const UNLOCK = 57674
const DAY = 57675
const NEVER = 57676
const PUMP = 57677
const MYSQL_COMPATIBILITY_MODE = 57678
const MODIFY = 57679
const CHANGE = 57680
const SECOND = 57681
const ASCII = 57682
const COALESCE = 57683
const COLLATION = 57684
const HOUR = 57685
const MICROSECOND = 57686
const MINUTE = 57687
const MONTH = 57688
const QUARTER = 57689
const REPEAT = 57690
const REVERSE = 57691
const ROW_COUNT = 57692
const WEEK = 57693
const REVOKE = 57694
const FUNCTION = 57695
const PRIVILEGES = 57696
const TABLESPACE = 57697
const EXECUTE = 57698
const SUPER = 57699
const GRANT = 57700
const OPTION = 57701
const REFERENCES = 57702
const REPLICATION = 57703
const SLAVE = 57704
const CLIENT = 57705
const USAGE = 57706
const RELOAD = 57707
const FILE = 57708
const TEMPORARY = 57709
const ROUTINE = 57710
const EVENT = 57711
const SHUTDOWN = 57712
const NULLX = 57713
const AUTO_INCREMENT = 57714
const APPROXNUM = 57715
const SIGNED = 57716
const UNSIGNED = 57717
const ZEROFILL = 57718
const ENGINES = 57719
const LOW_CARDINALITY = 57720
const AUTOEXTEND_SIZE = 57721
const ADMIN_NAME = 57722
const RANDOM = 57723
const SUSPEND = 57724
const ATTRIBUTE = 57725
const HISTORY = 57726
const REUSE = 57727
const CURRENT = 57728
const OPTIONAL = 57729
const FAILED_LOGIN_ATTEMPTS = 57730
const PASSWORD_LOCK_TIME = 57731
const UNBOUNDED = 57732
const SECONDARY = 57733
const RESTRICTED = 57734
const USER = 57735
const IDENTIFIED = 57736
const CIPHER = 57737
const ISSUER = 57738
const X509 = 57739
const SUBJECT = 57740
const SAN = 57741
const REQUIRE = 57742
const SSL = 57743
const NONE = 57744
const PASSWORD = 57745
const SHARED = 57746
const EXCLUSIVE = 57747
const MAX_QUERIES_PER_HOUR = 57748
const MAX_UPDATES_PER_HOUR = 57749
const MAX_CONNECTIONS_PER_HOUR = 57750
const MAX_USER_CONNECTIONS = 57751
const FORMAT = 57752
const VERBOSE = 57753
const CONNECTION = 57754
const TRIGGERS = 57755
const PROFILES = 57756
const LOAD = 57757
const INLINE = 57758
const INFILE = 57759
const TERMINATED = 57760
const OPTIONALLY = 57761
const ENCLOSED = 57762
const ESCAPED = 57763
const STARTING = 57764
const LINES = 57765
const ROWS = 57766
const IMPORT = 57767
const DISCARD = 57768
const JSONTYPE = 57769
const MODUMP = 57770
const OVER = 57771
const PRECEDING = 57772
const FOLLOWING = 57773
const GROUPS = 57774
const DATABASES = 57775
const TABLES = 57776
const SEQUENCES = 57777
const EXTENDED = 57778
const FULL = 57779
const PROCESSLIST = 57780
const FIELDS = 57781
const COLUMNS = 57782
const OPEN = 57783
const ERRORS = 57784
const WARNINGS = 57785
const INDEXES = 57786
const SCHEMAS = 57787
const NODE = 57788
const LOCKS = 57789
const ROLES = 57790
const TABLE_NUMBER = 57791
const COLUMN_NUMBER = 57792
const TABLE_VALUES = 57793
const TABLE_SIZE = 57794
const NAMES = 57795
const GLOBAL = 57796
const PERSIST = 57797
const SESSION = 57798
const ISOLATION = 57799
const LEVEL = 57800
const READ = 57801
const WRITE = 57802
const ONLY = 57803
const REPEATABLE = 57804
const COMMITTED = 57805
const UNCOMMITTED = 57806
const SERIALIZABLE = 57807
const LOCAL = 57808
const EVENTS = 57809
const PLUGINS = 57810
const CURRENT_TIMESTAMP = 57811
const DATABASE = 57812
const CURRENT_TIME = 57813
const LOCALTIME = 57814
const LOCALTIMESTAMP = 57815
const UTC_DATE = 57816
const UTC_TIME = 57817
const UTC_TIMESTAMP = 57818
const REPLACE = 57819
const CONVERT = 57820
const SEPARATOR = 57821
const TIMESTAMPDIFF = 57822
const CURRENT_DATE = 57823
const CURRENT_USER = 57824
const CURRENT_ROLE = 57825
const SECOND_MICROSECOND = 57826
const MINUTE_MICROSECOND = 57827
const MINUTE_SECOND = 57828
const HOUR_MICROSECOND = 57829
const HOUR_SECOND = 57830
const HOUR_MINUTE = 57831
const DAY_MICROSECOND = 57832
const DAY_SECOND = 57833
const DAY_MINUTE = 57834
const DAY_HOUR = 57835
const YEAR_MONTH = 57836
const SQL_TSI_HOUR = 57837
const SQL_TSI_DAY = 57838
const SQL_TSI_WEEK = 57839
const SQL_TSI_MONTH = 57840
const SQL_TSI_QUARTER = 57841
const SQL_TSI_YEAR = 57842
const SQL_TSI_SECOND = 57843
const SQL_TSI_MINUTE = 57844
const RECURSIVE = 57845
const CONFIG = 57846
const DRAINER = 57847
const SOURCE = 57848
const STREAM = 57849
const HEADERS = 57850
const CONNECTOR = 57851
const CONNECTORS = 57852
const DAEMON = 57853
const PAUSE = 57854
const CANCEL = 57855
const TASK = 57856
const RESUME = 57857
const MATCH = 57858
const AGAINST = 57859
const BOOLEAN = 57860
const LANGUAGE = 57861
const WITH = 57862
const QUERY = 57863
const EXPANSION = 57864
const WITHOUT = 57865
const VALIDATION = 57866
const ADDDATE = 57867
const BIT_AND = 57868
const BIT_OR = 57869
const BIT_XOR = 57870
const CAST = 57871
const COUNT = 57872
const APPROX_COUNT = 57873
const APPROX_COUNT_DISTINCT = 57874
const APPROX_PERCENTILE = 57875
const CURDATE = 57876
const CURTIME = 57877
const DATE_ADD = 57878
const DATE_SUB = 57879
const EXTRACT = 57880
const GROUP_CONCAT = 57881
const MAX = 57882
const MID = 57883
const MIN = 57884
const NOW = 57885
const POSITION = 57886
const SESSION_USER = 57887
const STD = 57888
const STDDEV = 57889
const MEDIAN = 57890
const CLUSTER_CENTERS = 57891
const SPHERICAL_KMEANS = 57892
const STDDEV_POP = 57893
const STDDEV_SAMP = 57894
const SUBDATE = 57895
const SUBSTR = 57896
const SUBSTRING = 57897
const SUM = 57898
const SYSDATE = 57899
const SYSTEM_USER = 57900
const TRANSLATE = 57901
const TRIM = 57902
const VARIANCE = 57903
const VAR_POP = 57904
const VAR_SAMP = 57905
const AVG = 57906
const RANK = 57907
const ROW_NUMBER = 57908
const DENSE_RANK = 57909
const BIT_CAST = 57910
const NEXTVAL = 57911
const SETVAL = 57912
const CURRVAL = 57913
const LASTVAL = 57914
const ARROW = 57915
const ROW = 57916
const OUTFILE = 57917
const HEADER = 57918
const MAX_FILE_SIZE = 57919
const FORCE_QUOTE = 57920
const PARALLEL = 57921
const UNUSED = 57922
const BINDINGS = 57923
const DO = 57924
const DECLARE = 57925
const LOOP = 57926
const WHILE = 57927
const LEAVE = 57928
const ITERATE = 57929
const UNTIL = 57930
const CALL = 57931
const PREV = 57932
const SLIDING = 57933
const FILL = 57934
const SPBEGIN = 57935
const BACKEND = 57936
const SERVERS = 57937
const HANDLER = 57938
const PERCENT = 57939
const SAMPLE = 57940
const KILL = 57941
const BACKUP = 57942
const FILESYSTEM = 57943
const QUERY_RESULT = 57944

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"LOWER_THAN_COMMA",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"LISTS",
	"OP_TYPE",
	"REINDEX",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"JSONTYPE",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"CLUSTER_CENTERS",
	"SPHERICAL_KMEANS",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"PERCENT",
	"SAMPLE",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10902

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	11, 701,
	22, 701,
	-2, 694,
	-1, 137,
	237, 1083,
	239, 991,
	-2, 1037,
	-1, 161,
	43, 530,
	239, 530,
	266, 537,
	267, 537,
	461, 530,
	-2, 563,
	-1, 200,
	623, 1820,
	-2, 446,
	-1, 556,
	318, 133,
	433, 133,
	434, 133,
	-2, 1725,
	-1, 621,
	82, 1515,
	-2, 1875,
	-1, 622,
	82, 1533,
	-2, 1846,
	-1, 626,
	82, 1534,
	-2, 1874,
	-1, 654,
	82, 1445,
	-2, 1948,
	-1, 655,
	82, 1446,
	-2, 1947,
	-1, 656,
	82, 1447,
	-2, 1937,
	-1, 657,
	82, 1909,
	-2, 1930,
	-1, 658,
	82, 1910,
	-2, 1931,
	-1, 659,
	82, 1911,
	-2, 1939,
	-1, 660,
	82, 1912,
	-2, 1919,
	-1, 661,
	82, 1913,
	-2, 1928,
	-1, 662,
	82, 1914,
	-2, 1940,
	-1, 663,
	82, 1915,
	-2, 1941,
	-1, 664,
	82, 1916,
	-2, 1946,
	-1, 665,
	82, 1917,
	-2, 1951,
	-1, 666,
	82, 1918,
	-2, 1952,
	-1, 668,
	82, 1512,
	-2, 1709,
	-1, 670,
	82, 1514,
	-2, 1718,
	-1, 672,
	82, 1517,
	-2, 1726,
	-1, 675,
	82, 1521,
	-2, 1745,
	-1, 679,
	82, 1525,
	-2, 1789,
	-1, 680,
	82, 1526,
	-2, 1870,
	-1, 688,
	82, 1536,
	-2, 1855,
	-1, 689,
	82, 1537,
	-2, 1900,
	-1, 690,
	82, 1538,
	-2, 1865,
	-1, 691,
	82, 1539,
	-2, 1890,
	-1, 702,
	82, 1423,
	-2, 1942,
	-1, 703,
	82, 1424,
	-2, 1943,
	-1, 704,
	82, 1425,
	-2, 1944,
	-1, 789,
	456, 563,
	457, 563,
	-2, 531,
	-1, 835,
	123, 1709,
	134, 1709,
	154, 1709,
	-2, 1683,
	-1, 944,
	22, 728,
	-2, 677,
	-1, 1045,
	11, 701,
	22, 701,
	-2, 1310,
	-1, 1120,
	22, 728,
	-2, 677,
	-1, 1431,
	82, 1583,
	-2, 1872,
	-1, 1432,
	82, 1584,
	-2, 1873,
	-1, 1574,
	83, 877,
	-2, 883,
	-1, 1983,
	106, 1029,
	150, 1029,
	189, 1029,
	192, 1029,
	279, 1029,
	-2, 1022,
	-1, 2129,
	11, 701,
	22, 701,
	-2, 821,
	-1, 2161,
	83, 1669,
	155, 1669,
	-2, 1857,
	-1, 2162,
	83, 1669,
	155, 1669,
	-2, 1856,
	-1, 2163,
	83, 1645,
	155, 1645,
	-2, 1843,
	-1, 2164,
	83, 1646,
	155, 1646,
	-2, 1848,
	-1, 2165,
	83, 1647,
	155, 1647,
	-2, 1777,
	-1, 2166,
	83, 1648,
	155, 1648,
	-2, 1771,
	-1, 2167,
	83, 1649,
	155, 1649,
	-2, 1699,
	-1, 2168,
	83, 1650,
	155, 1650,
	-2, 1845,
	-1, 2169,
	83, 1651,
	155, 1651,
	-2, 1775,
	-1, 2170,
	83, 1652,
	155, 1652,
	-2, 1770,
	-1, 2171,
	83, 1653,
	155, 1653,
	-2, 1759,
	-1, 2172,
	83, 1669,
	155, 1669,
	-2, 1760,
	-1, 2173,
	83, 1669,
	155, 1669,
	-2, 1761,
	-1, 2175,
	83, 1658,
	155, 1658,
	-2, 1890,
	-1, 2176,
	83, 1636,
	155, 1636,
	-2, 1875,
	-1, 2177,
	83, 1667,
	155, 1667,
	-2, 1846,
	-1, 2178,
	83, 1667,
	155, 1667,
	-2, 1874,
	-1, 2179,
	83, 1667,
	155, 1667,
	-2, 1727,
	-1, 2180,
	83, 1665,
	155, 1665,
	-2, 1865,
	-1, 2181,
	83, 1662,
	155, 1662,
	-2, 1750,
	-1, 2182,
	82, 1617,
	83, 1617,
	155, 1617,
	391, 1617,
	392, 1617,
	393, 1617,
	-2, 1698,
	-1, 2183,
	82, 1618,
	83, 1618,
	155, 1618,
	391, 1618,
	392, 1618,
	393, 1618,
	-2, 1700,
	-1, 2184,
	82, 1621,
	83, 1621,
	155, 1621,
	391, 1621,
	392, 1621,
	393, 1621,
	-2, 1847,
	-1, 2185,
	82, 1623,
	83, 1623,
	155, 1623,
	391, 1623,
	392, 1623,
	393, 1623,
	-2, 1829,
	-1, 2186,
	82, 1625,
	83, 1625,
	155, 1625,
	391, 1625,
	392, 1625,
	393, 1625,
	-2, 1776,
	-1, 2187,
	82, 1627,
	83, 1627,
	155, 1627,
	391, 1627,
	392, 1627,
	393, 1627,
	-2, 1755,
	-1, 2188,
	82, 1628,
	83, 1628,
	155, 1628,
	391, 1628,
	392, 1628,
	393, 1628,
	-2, 1756,
	-1, 2189,
	82, 1630,
	83, 1630,
	155, 1630,
	391, 1630,
	392, 1630,
	393, 1630,
	-2, 1697,
	-1, 2190,
	83, 1672,
	155, 1672,
	391, 1672,
	392, 1672,
	393, 1672,
	-2, 1732,
	-1, 2191,
	83, 1672,
	155, 1672,
	391, 1672,
	392, 1672,
	393, 1672,
	-2, 1746,
	-1, 2192,
	83, 1675,
	155, 1675,
	391, 1675,
	392, 1675,
	393, 1675,
	-2, 1728,
	-1, 2193,
	83, 1675,
	155, 1675,
	391, 1675,
	392, 1675,
	393, 1675,
	-2, 1792,
	-1, 2194,
	83, 1672,
	155, 1672,
	391, 1672,
	392, 1672,
	393, 1672,
	-2, 1813,
	-1, 2380,
	106, 1029,
	150, 1029,
	189, 1029,
	192, 1029,
	279, 1029,
	-2, 1023,
	-1, 2394,
	80, 622,
	155, 622,
	-2, 1196,
	-1, 2775,
	192, 1029,
	303, 1278,
	-2, 1250,
	-1, 2928,
	106, 1029,
	150, 1029,
	189, 1029,
	192, 1029,
	-2, 1139,
	-1, 2930,
	106, 1029,
	150, 1029,
	189, 1029,
	192, 1029,
	-2, 1139,
	-1, 2942,
	80, 622,
	155, 622,
	-2, 1197,
	-1, 2963,
	192, 1029,
	303, 1278,
	-2, 1251,
	-1, 3095,
	106, 1029,
	150, 1029,
	189, 1029,
	192, 1029,
	-2, 1140,
	-1, 3121,
	83, 1101,
	155, 1101,
	-2, 1029,
	-1, 3250,
	83, 1101,
	155, 1101,
	-2, 1029,
	-1, 3399,
	83, 1105,
	155, 1105,
	-2, 1029,
	-1, 3444,
	83, 1106,
	155, 1106,
	-2, 1029,
}

const yyPrivate = 57344

const yyLast = 42678

var yyAct = [...]int{
	588, 567, 3460, 2423, 590, 3424, 191, 3475, 1658, 1411,
	1347, 2948, 3407, 3406, 2794, 3250, 3305, 3331, 2761, 3041,
	575, 3290, 1261, 3149, 2977, 3228, 2244, 3281, 2417, 2861,
	1078, 3309, 1200, 3083, 3249, 3082, 3187, 1407, 569, 3080,
	469, 2862, 3176, 618, 2420, 3220, 945, 834, 3045, 1337,
	479, 3291, 484, 484, 3293, 3036, 2770, 2915, 484, 500,
	509, 1607, 3087, 509, 3102, 2028, 2964, 2397, 1414, 3094,
	3064, 2159, 2698, 2529, 2931, 2859, 2735, 3097, 1748, 1745,
	2530, 2512, 2724, 2904, 2447, 2772, 2790, 2933, 2528, 2779,
	2522, 55, 176, 2591, 36, 1713, 1851, 2847, 2123, 520,
	2157, 1467, 2827, 2551, 514, 1816, 2525, 2708, 2031, 2370,
	2705, 1254, 1994, 938, 558, 2778, 2703, 2742, 2381, 2107,
	2426, 1763, 1961, 2699, 1952, 559, 2696, 2701, 2700, 2634,
	564, 1836, 1825, 1333, 3047, 1847, 1951, 2564, 2210, 2227,
	765, 1824, 1817, 1790, 1554, 2574, 1741, 1846, 2354, 1341,
	2359, 2449, 1338, 506, 1637, 2428, 2029, 1648, 2124, 2389,
	187, 8, 6, 1716, 2155, 469, 890, 1173, 1583, 1405,
	2279, 2112, 1721, 1848, 1209, 1993, 186, 7, 1300, 478,
	1240, 1270, 116, 568, 1858, 1363, 1881, 1974, 560, 557,
	1714, 191, 1461, 191, 828, 881, 882, 956, 35, 1619,
	1445, 1396, 1823, 1307, 1820, 2024, 1618, 1326, 566, 797,
	1609, 2311, 1806, 559, 26, 2310, 15, 1404, 13, 576,
	1780, 764, 1239, 1582, 483, 483, 1185, 1189, 493, 14,
	491, 827, 2131, 706, 468, 565, 1293, 1346, 32, 1468,
	496, 1201, 522, 23, 16, 1237, 177, 10, 173, 1410,
	1299, 784, 523, 167, 762, 741, 747, 1118, 1079, 508,
	843, 1855, 3214, 878, 1151, 2343, 2343, 2343, 1865, 2918,
	2267, 2213, 2854, 505, 1175, 501, 2216, 503, 2214, 1567,
	2211, 1314, 874, 877, 1310, 879, 874, 873, 504, 175,
	1137, 480, 2681, 2678, 2683, 2680, 874, 502, 3468, 2336,
	2334, 1222, 1561, 1133, 1312, 1014, 1015, 1016, 1013, 489,
	1014, 1015, 1016, 1013, 3034, 2587, 2585, 1795, 2967, 3183,
	3177, 3037, 512, 2860, 1833, 3295, 1819, 1073, 1210, 707,
	2660, 2068, 3069, 718, 174, 2261, 8, 3235, 872, 2338,
	977, 2253, 174, 51, 163, 138, 3065, 2932, 1138, 1985,
	3204, 840, 7, 1852, 174, 755, 2979, 756, 3342, 174,
	1280, 3384, 1279, 1278, 846, 844, 174, 842, 174, 2970,
	174, 174, 174, 51, 163, 138, 845, 875, 876, 2965,
	1147, 3236, 880, 519, 2987, 2988, 1361, 2658, 1354, 518,
	2966, 1863, 1165, 736, 1978, 3206, 2149, 1011, 174, 51,
	163, 138, 2606, 168, 2558, 2559, 750, 115, 746, 1139,
	708, 168, 709, 2150, 2599, 1241, 1358, 1243, 1351, 115,
	1726, 1727, 2557, 168, 1568, 1569, 1218, 2971, 168, 1219,
	2137, 1725, 2228, 2136, 1758, 168, 2138, 1360, 1197, 1353,
	168, 168, 719, 1207, 1208, 2356, 697, 1381, 696, 698,
	699, 806, 700, 701, 992, 2357, 1205, 993, 2765, 3057,
	1204, 1207, 1208, 1004, 2763, 2682, 2679, 168, 1633, 3410,
	3411, 1413, 1009, 837, 836, 3298, 3375, 3297, 3374, 3296,
	3373, 3298, 3297, 484, 3296, 995, 1940, 3432, 3428, 3429,
	3377, 3185, 2863, 484, 949, 1397, 3283, 985, 1401, 2592,
	987, 3283, 3286, 3180, 2355, 3188, 3189, 3190, 3191, 2863,
	1146, 509, 509, 959, 484, 1221, 2593, 2248, 2594, 3381,
	1417, 2986, 1400, 2032, 950, 1867, 2467, 2717, 988, 3302,
	1742, 1732, 2905, 2876, 1392, 752, 1859, 745, 2912, 884,
	1313, 1311, 2719, 1803, 3208, 2339, 749, 748, 2975, 3074,
	2101, 2989, 1972, 2624, 1320, 1319, 753, 816, 3379, 2346,
	2362, 2709, 2258, 730, 990, 2066, 2622, 737, 1006, 1502,
	2972, 2976, 2974, 2973, 1007, 1008, 980, 1736, 838, 959,
	839, 1047, 2714, 2715, 3035, 2586, 2516, 744, 137, 2060,
	172, 843, 506, 506, 2104, 3056, 2103, 3211, 2716, 942,
	3386, 3387, 3071, 3058, 2108, 1402, 754, 981, 2981, 2982,
	161, 743, 3382, 3383, 948, 742, 3004, 972, 2793, 2767,
	949, 729, 3409, 3200, 3439, 735, 3201, 991, 1399, 2733,
	553, 2713, 983, 555, 1195, 1416, 1415, 3001, 554, 3200,
	3324, 3195, 3201, 1864, 986, 989, 733, 3240, 3150, 3151,
	3152, 3155, 3154, 3153, 2989, 940, 2337, 3232, 1082, 1870,
	1872, 1873, 843, 1148, 517, 947, 2968, 1231, 2791, 2792,
	982, 3319, 2980, 1002, 1003, 2743, 1220, 2390, 2521, 3203,
	511, 510, 840, 753, 1756, 1757, 968, 1136, 1980, 3310,
	2047, 1423, 1426, 1427, 2994, 3203, 2027, 2050, 842, 3326,
	812, 810, 1424, 811, 994, 2422, 2949, 961, 960, 734,
	3202, 3332, 505, 505, 501, 501, 503, 503, 2418, 2419,
	2762, 2422, 1853, 1853, 2956, 1184, 3202, 504, 504, 3213,
	1144, 479, 2879, 2628, 2342, 1853, 502, 502, 952, 953,
	1083, 2796, 755, 2711, 756, 1398, 3301, 984, 944, 3140,
	1017, 3005, 1116, 840, 2049, 1121, 3129, 954, 3491, 1046,
	2078, 507, 3048, 807, 765, 2077, 2034, 1055, 969, 842,
	965, 966, 874, 961, 960, 2368, 874, 3234, 874, 874,
	1049, 1050, 1051, 1052, 874, 963, 751, 874, 3135, 817,
	1250, 1062, 2098, 2099, 1182, 2212, 2048, 1053, 1249, 1854,
	1315, 1866, 2985, 2152, 3241, 970, 3385, 2731, 2934, 1181,
	813, 3333, 1180, 484, 3233, 1233, 1203, 507, 3207, 1199,
	1198, 469, 469, 52, 997, 740, 3254, 998, 3221, 2771,
	469, 469, 1207, 1208, 1265, 1265, 707, 484, 1207, 1208,
	3401, 939, 2677, 2069, 2335, 2768, 809, 1882, 3070, 808,
	2027, 2262, 2720, 3032, 3209, 1000, 1196, 1267, 139, 509,
	1294, 479, 1743, 2625, 1303, 1303, 139, 2361, 1152, 2710,
	2984, 1263, 1263, 815, 518, 191, 2866, 3478, 139, 52,
	3280, 1238, 977, 139, 469, 1272, 1091, 1092, 169, 170,
	139, 171, 139, 2787, 139, 139, 139, 3378, 2037, 1871,
	943, 971, 839, 2033, 2468, 2254, 2469, 2470, 2035, 2141,
	1145, 2064, 3075, 2374, 2376, 2377, 2378, 2375, 1733, 1206,
	1856, 1393, 139, 2365, 2366, 2627, 1149, 2791, 2792, 3196,
	2044, 1425, 2795, 3197, 996, 1345, 2732, 1348, 2364, 1321,
	1157, 2712, 1356, 1259, 1260, 3196, 2569, 2570, 1163, 3292,
	814, 1162, 2034, 2037, 1161, 3253, 2553, 2555, 1122, 1160,
	513, 2898, 2036, 1379, 1735, 3142, 1120, 2465, 976, 1170,
	2788, 2345, 1001, 1955, 759, 760, 761, 1265, 807, 1265,
	949, 1868, 1869, 2636, 2635, 1229, 1957, 1956, 725, 1150,
	1362, 1142, 1571, 754, 2487, 2488, 1572, 999, 1954, 1153,
	1154, 1155, 1156, 3131, 1158, 1191, 1192, 3130, 1570, 1271,
	1164, 721, 757, 3479, 1232, 1245, 1247, 3400, 1172, 3136,
	3137, 3103, 2063, 2090, 1257, 1258, 1223, 1224, 722, 2038,
	843, 1140, 1141, 1352, 843, 3495, 2748, 1359, 1211, 724,
	1295, 1214, 1178, 727, 726, 1335, 1336, 1183, 1964, 506,
	2121, 2395, 1302, 1302, 1193, 3487, 946, 1610, 1783, 1388,
	1466, 809, 1212, 1213, 808, 1215, 1216, 1217, 1976, 3474,
	3462, 1965, 1966, 946, 1515, 1248, 3481, 1610, 1316, 1505,
	1506, 1507, 1343, 1340, 2038, 3446, 1344, 3371, 1273, 2033,
	2027, 2032, 1521, 2030, 2035, 1522, 2496, 489, 1012, 1324,
	1412, 1327, 1328, 2867, 1186, 1190, 1190, 1190, 1286, 1532,
	1533, 2396, 1329, 1330, 1409, 1304, 2486, 1914, 1292, 2824,
	1913, 1305, 2554, 1374, 1375, 3418, 1551, 1861, 1186, 1186,
	865, 870, 871, 977, 2230, 949, 2043, 1395, 2820, 2901,
	2041, 1012, 3463, 2878, 3476, 3477, 1945, 1294, 2036, 1552,
	1428, 1390, 1580, 2253, 1265, 1585, 1586, 1012, 1588, 1589,
	484, 1014, 1015, 1016, 1013, 484, 2800, 1500, 1265, 505,
	2789, 501, 765, 503, 2122, 1608, 818, 3412, 2798, 1387,
	1265, 1384, 1975, 1383, 504, 3397, 1233, 1365, 3352, 2396,
	3327, 500, 1012, 502, 2122, 1370, 1781, 3419, 1555, 2687,
	1012, 1418, 1419, 1420, 1421, 1422, 1514, 2656, 1386, 1385,
	3464, 1632, 1382, 3315, 2824, 1378, 2685, 1117, 1403, 1638,
	1638, 1394, 1233, 1377, 1233, 1233, 1406, 2122, 484, 484,
	1408, 1580, 1580, 2572, 2348, 1265, 1710, 1711, 1723, 3273,
	1579, 711, 712, 713, 714, 1463, 1464, 1465, 2340, 3217,
	1454, 1455, 469, 1499, 1265, 1563, 1587, 3398, 3272, 1447,
	3217, 1509, 1861, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 977, 3267, 2243, 2235, 1456,
	1457, 3266, 484, 1580, 1265, 3316, 1768, 2152, 484, 484,
	484, 1773, 1774, 711, 712, 713, 714, 975, 1778, 1779,
	3265, 1497, 1498, 1785, 1501, 1759, 1558, 1660, 1556, 3264,
	191, 3274, 1516, 191, 191, 3244, 191, 1852, 1276, 1705,
	1706, 867, 868, 869, 1524, 1523, 3243, 1525, 1724, 2020,
	1998, 1950, 1590, 1526, 1944, 1943, 1918, 1595, 1843, 1751,
	1752, 1754, 1171, 2497, 2499, 2500, 2501, 2498, 3217, 1636,
	1737, 1553, 1459, 3217, 1515, 1515, 1827, 1729, 1251, 1731,
	3216, 1515, 1515, 1559, 1620, 3010, 1622, 1623, 1838, 1749,
	1750, 1765, 3217, 2945, 1639, 2958, 2749, 2576, 2924, 2808,
	1629, 3217, 2398, 1575, 1767, 1611, 1612, 1861, 716, 1744,
	2256, 1628, 1608, 1605, 2255, 1832, 1265, 1850, 1861, 2548,
	1644, 1645, 1794, 1584, 1624, 1797, 1798, 1615, 1800, 1770,
	1771, 1772, 1576, 1577, 1578, 1604, 2317, 1600, 2309, 1621,
	1631, 1641, 1625, 1634, 1635, 1591, 1592, 1593, 1594, 1613,
	1642, 1643, 3217, 2269, 1630, 2251, 2239, 2152, 2247, 2237,
	716, 3165, 2015, 1556, 1909, 843, 2911, 2959, 1556, 1556,
	2925, 2809, 843, 1844, 1764, 1894, 1616, 1617, 1709, 1875,
	1764, 1764, 1764, 1842, 1828, 2232, 506, 1728, 1788, 1730,
	1712, 2122, 2225, 1626, 1627, 1227, 1228, 2223, 1230, 1776,
	1234, 1235, 1236, 1738, 1584, 1640, 1822, 1029, 1012, 3008,
	1012, 1367, 1059, 1822, 2010, 2221, 2219, 1793, 962, 1997,
	1796, 1766, 941, 1799, 1946, 1012, 1801, 1998, 2233, 1186,
	1791, 2238, 1281, 1282, 1283, 1284, 1285, 1925, 1287, 1288,
	1289, 1290, 1291, 1190, 936, 1789, 1297, 1298, 1924, 934,
	1912, 1893, 1903, 1406, 1753, 1190, 840, 2233, 1919, 1920,
	843, 1922, 1902, 840, 2226, 1808, 1901, 2753, 1929, 2224,
	2619, 1834, 842, 1504, 1503, 1837, 974, 1253, 1860, 842,
	1014, 1015, 1016, 1013, 1831, 1829, 1371, 2220, 2220, 3320,
	1841, 1998, 2133, 1255, 558, 3482, 1945, 484, 484, 484,
	1014, 1015, 1016, 1013, 1256, 723, 505, 3465, 501, 1012,
	503, 2286, 484, 484, 484, 484, 1845, 2061, 2852, 3104,
	1012, 504, 1012, 3215, 1012, 1995, 1892, 1504, 1503, 3192,
	502, 2937, 1840, 3321, 1012, 2002, 1233, 2744, 1012, 933,
	929, 930, 931, 932, 2935, 2291, 2009, 2290, 2289, 2287,
	1861, 840, 975, 3133, 3132, 1176, 1187, 2211, 1372, 1177,
	3118, 1233, 1883, 3105, 941, 3076, 2917, 842, 1885, 1874,
	1876, 1889, 2825, 1887, 2818, 2938, 1252, 2813, 2056, 1877,
	1878, 2810, 2726, 1538, 1527, 1528, 1529, 1530, 2936, 1447,
	1534, 1535, 1536, 1537, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1032, 1033, 1034, 1035, 1036, 1029, 1879, 1880,
	2518, 1900, 2372, 2745, 2288, 2344, 1453, 2266, 2276, 1907,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1029, 2062, 728,
	2034, 2037, 1450, 1452, 1449, 2236, 1451, 1531, 1921, 2126,
	2126, 1723, 2126, 1926, 1927, 1928, 2205, 2143, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1167, 2746, 1166, 951,
	469, 469, 1462, 1792, 1888, 1947, 1462, 2578, 949, 1968,
	1969, 1970, 1188, 1581, 1265, 484, 1308, 3372, 1792, 1939,
	1941, 1942, 1013, 1958, 1986, 1987, 1988, 1989, 3145, 1977,
	484, 3124, 1014, 1015, 1016, 1013, 949, 2195, 479, 2026,
	2025, 3144, 1303, 2855, 1723, 2595, 1082, 2200, 2457, 2202,
	2456, 2147, 2434, 191, 3072, 1014, 1015, 1016, 1013, 1999,
	2006, 1014, 1015, 1016, 1013, 2012, 2215, 2432, 2013, 2139,
	2853, 2140, 843, 2019, 1016, 1013, 2130, 3470, 2128, 2301,
	2132, 2371, 2003, 1014, 1015, 1016, 1013, 2004, 2005, 2144,
	2145, 2292, 2293, 1014, 1015, 1016, 1013, 2007, 2008, 3469,
	2016, 1308, 2038, 2249, 3077, 3078, 1850, 2033, 2027, 2032,
	3073, 2030, 2035, 1265, 1061, 1265, 3490, 1265, 2039, 2040,
	3396, 2045, 949, 2022, 2014, 3395, 2328, 1060, 1083, 2329,
	2268, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1018, 2199,
	1014, 1015, 1016, 1013, 2909, 2206, 2916, 2649, 2508, 2278,
	3361, 2154, 2259, 2506, 1265, 2295, 2160, 2105, 1014, 1015,
	1016, 1013, 2504, 840, 2011, 2134, 2036, 2207, 3322, 2523,
	2302, 1014, 1015, 1016, 1013, 1265, 2294, 3489, 1556, 842,
	1556, 1014, 1015, 1016, 1013, 2493, 3269, 1271, 3257, 3247,
	1309, 1263, 3237, 1519, 1245, 1247, 2148, 2303, 1556, 1556,
	2910, 3178, 1764, 1897, 2507, 2151, 2648, 1520, 3107, 2505,
	3106, 1769, 1263, 2950, 2939, 2908, 2718, 2196, 2503, 2615,
	2198, 3403, 2280, 2280, 949, 1190, 2306, 2307, 949, 2590,
	1302, 2589, 1014, 1015, 1016, 1013, 1265, 2491, 2490, 2369,
	2489, 2492, 2263, 2481, 2475, 1580, 2474, 1014, 1015, 1016,
	1013, 2197, 2473, 2394, 2245, 2246, 591, 601, 2472, 2400,
	2204, 2341, 3308, 2265, 2260, 592, 1949, 600, 593, 597,
	596, 594, 595, 1811, 1810, 2274, 2410, 1809, 2241, 2252,
	1805, 1804, 2257, 1905, 2332, 949, 1762, 2250, 1014, 1015,
	1016, 1013, 1761, 2431, 1760, 1014, 1015, 1016, 1013, 1368,
	949, 949, 949, 1638, 1135, 2704, 949, 3486, 2442, 2443,
	2444, 2445, 949, 2452, 1891, 2453, 2454, 3485, 2455, 2285,
	598, 2382, 2283, 2391, 2270, 2271, 1014, 1015, 1016, 1013,
	2452, 553, 3438, 2383, 555, 3437, 3434, 2277, 3042, 554,
	3430, 3304, 2126, 3081, 2349, 3289, 2296, 2297, 2160, 1904,
	2412, 2273, 599, 3278, 2299, 2300, 2509, 3261, 1660, 3256,
	3255, 2401, 1406, 3212, 469, 3210, 3179, 2305, 3126, 1580,
	949, 1723, 1723, 1723, 1723, 1014, 1015, 1016, 1013, 3090,
	3040, 3038, 949, 1723, 3017, 3014, 2126, 3012, 1014, 1015,
	1016, 1013, 2350, 1418, 1556, 1890, 2351, 2513, 2353, 2429,
	2312, 2313, 1265, 2429, 2367, 2907, 2318, 2906, 2425, 2903,
	2886, 2884, 2304, 484, 484, 3060, 2819, 8, 2815, 2399,
	3339, 2437, 2438, 2436, 2806, 2392, 2441, 2805, 2393, 2727,
	2691, 2690, 2448, 7, 3050, 2689, 1953, 2411, 2414, 3335,
	2629, 1014, 1015, 1016, 1013, 2427, 2626, 2588, 3451, 2409,
	2433, 2562, 2502, 2494, 2484, 2544, 2482, 2440, 2404, 2405,
	1014, 1015, 1016, 1013, 2478, 2477, 2476, 2242, 191, 1014,
	1015, 1016, 1013, 191, 653, 652, 3193, 2403, 3049, 1813,
	1807, 2471, 2406, 3449, 2998, 1584, 1566, 1565, 1369, 3061,
	2531, 1090, 2573, 1086, 1515, 1085, 1515, 937, 720, 2605,
	2483, 2930, 2531, 2929, 1014, 1015, 1016, 1013, 2614, 2514,
	1014, 1015, 1016, 1013, 1265, 2067, 2519, 2621, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2928, 2900, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2402, 2091,
	2092, 2093, 2094, 2095, 2547, 2096, 2545, 2407, 2408, 2560,
	2563, 2546, 2543, 2881, 2896, 2894, 2430, 2893, 2517, 2892,
	2579, 2532, 2533, 2534, 2535, 2583, 2891, 2890, 2889, 2652,
	1555, 2885, 1335, 1336, 174, 2604, 163, 138, 2883, 1014,
	1015, 1016, 1013, 2868, 843, 2566, 2567, 2600, 2858, 2857,
	2843, 843, 2842, 2754, 2607, 1014, 1015, 1016, 1013, 2642,
	2602, 2644, 2694, 1343, 1340, 2684, 2608, 1344, 2581, 2654,
	2577, 2647, 2580, 949, 2618, 2639, 2638, 2623, 2633, 2707,
	2571, 2347, 2222, 2218, 2651, 2217, 2601, 1930, 1923, 2722,
	1328, 2556, 1917, 2596, 484, 2611, 2598, 2603, 1915, 2609,
	1329, 1330, 2610, 168, 2424, 2736, 949, 949, 949, 2617,
	1014, 1015, 1016, 1013, 1911, 1910, 1723, 1995, 1908, 2752,
	2582, 1899, 2584, 2631, 2630, 1896, 1895, 1812, 1549, 1548,
	1547, 1518, 2637, 1517, 1508, 174, 1277, 2056, 1275, 3360,
	1556, 2693, 2645, 2646, 2643, 1556, 2650, 1080, 3334, 2777,
	2730, 2780, 1837, 2780, 2780, 3408, 3275, 3263, 949, 3258,
	1323, 3159, 2686, 3143, 3139, 3117, 3101, 862, 3025, 2831,
	2326, 3023, 1014, 1015, 1016, 1013, 2996, 2801, 2382, 2995,
	2797, 2992, 2991, 2957, 1265, 1265, 2954, 2632, 2688, 2952,
	2919, 2692, 1334, 1325, 1339, 2799, 1014, 1015, 1016, 1013,
	843, 1342, 1331, 2741, 168, 1174, 2802, 2803, 2510, 2723,
	2653, 2750, 2435, 2387, 2640, 2641, 2386, 2385, 2775, 2729,
	2384, 1263, 1263, 2352, 2327, 843, 2747, 3351, 2760, 2751,
	2231, 484, 2738, 2739, 2740, 2142, 2707, 2097, 2776, 1996,
	1967, 1948, 2785, 1448, 2661, 2662, 168, 1580, 1580, 2759,
	2663, 2664, 2665, 2666, 1775, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2026, 2025, 1574, 2728, 1562, 2781, 2782,
	1391, 603, 117, 2764, 2766, 2325, 1355, 117, 1332, 1134,
	1119, 2786, 2358, 1037, 1038, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1029, 949, 1115, 1114, 1113, 2295, 1112, 1111,
	1110, 1014, 1015, 1016, 1013, 1109, 2856, 1108, 1107, 857,
	852, 847, 851, 855, 1027, 1037, 1038, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1029, 1488, 1106, 490, 1105, 1104,
	117, 1103, 1102, 2755, 1101, 1100, 1099, 860, 2756, 2757,
	1098, 850, 1097, 1096, 2784, 1095, 2812, 2816, 484, 2814,
	2817, 2811, 2807, 2821, 2822, 1094, 1093, 2832, 1028, 1027,
	1037, 1038, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1029,
	1089, 1088, 2463, 2464, 2836, 1087, 1084, 1916, 2834, 2324,
	1077, 1076, 2839, 2840, 2841, 1074, 1073, 2479, 2480, 2323,
	1072, 1071, 858, 2845, 1070, 2851, 1069, 1068, 1067, 861,
	2322, 1066, 1065, 1764, 2758, 1014, 1015, 1016, 1013, 1064,
	1063, 2515, 1058, 2160, 1057, 1014, 1015, 1016, 1013, 2783,
	848, 2373, 2321, 1056, 2871, 2869, 1014, 1015, 1016, 1013,
	2320, 979, 2870, 935, 3349, 2875, 2874, 2828, 2829, 3347,
	841, 3345, 2887, 859, 2993, 2319, 2001, 117, 1014, 1015,
	1016, 1013, 2316, 1982, 2923, 967, 1014, 1015, 1016, 1013,
	2823, 2153, 117, 1815, 117, 978, 2833, 2537, 2126, 1723,
	2942, 1014, 1015, 1016, 1013, 2835, 2536, 2540, 1014, 1015,
	1016, 1013, 2541, 849, 2538, 3122, 3027, 1484, 2542, 2539,
	2118, 2119, 2960, 1481, 3028, 949, 2240, 1483, 1480, 1482,
	1486, 1487, 2315, 2234, 2777, 1485, 1168, 843, 949, 2897,
	2899, 1602, 1603, 2725, 843, 2613, 102, 2902, 3003, 949,
	2877, 3007, 2314, 54, 481, 1265, 2308, 2065, 1014, 1015,
	1016, 1013, 53, 2846, 2914, 1597, 1598, 1599, 2872, 2873,
	2944, 1580, 2298, 3026, 2773, 949, 2774, 3009, 1014, 1015,
	1016, 1013, 1014, 1015, 1016, 1013, 2275, 1697, 2880, 1317,
	856, 2990, 1263, 2229, 2941, 2882, 2940, 2947, 1014, 1015,
	1016, 1013, 486, 2983, 191, 2245, 2246, 485, 2264, 487,
	3031, 1458, 1014, 1015, 1016, 1013, 1364, 949, 488, 1349,
	3019, 1973, 2999, 2997, 2895, 3002, 853, 1777, 2702, 854,
	973, 2695, 2413, 3006, 2388, 3029, 2018, 1014, 1015, 1016,
	1013, 3011, 1991, 1606, 3015, 2961, 3013, 1573, 3421, 3059,
	3016, 3260, 949, 2804, 3021, 3020, 1504, 1503, 3000, 3018,
	2114, 2117, 2118, 2119, 2115, 2106, 2116, 2120, 2102, 2448,
	949, 1265, 1265, 1130, 1131, 1708, 2736, 1128, 1129, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 1490, 3096, 1226, 3096,
	3043, 2109, 2459, 3086, 1225, 2531, 3033, 3044, 1005, 2460,
	2461, 2462, 3111, 949, 2838, 949, 1126, 1127, 1263, 3088,
	2565, 2943, 3114, 1839, 3116, 3092, 3093, 1124, 1125, 2946,
	3063, 1179, 1265, 3068, 3067, 3066, 1159, 1202, 2114, 2117,
	2118, 2119, 2115, 3389, 2116, 2120, 3367, 2531, 3365, 3311,
	484, 3288, 949, 949, 3287, 3285, 949, 949, 3099, 2951,
	3100, 2953, 3091, 1556, 3276, 3173, 3172, 3112, 3039, 3088,
	2944, 2888, 3110, 3161, 1556, 2865, 3120, 3022, 3156, 2864,
	3024, 2849, 2051, 2021, 1608, 1366, 3170, 3147, 3148, 2990,
	3123, 3157, 3158, 2848, 3127, 3174, 3175, 3030, 2575, 1610,
	3084, 2983, 3453, 3452, 946, 2616, 1984, 1898, 3452, 117,
	117, 841, 3167, 964, 3453, 3141, 2844, 711, 712, 713,
	714, 1194, 946, 62, 1040, 2, 1044, 178, 3, 3466,
	3467, 1, 2333, 1412, 3166, 1412, 3199, 1560, 1132, 715,
	710, 1242, 1041, 1043, 1039, 3168, 1042, 1028, 1027, 1037,
	1038, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1029, 3051,
	3181, 3052, 3229, 2135, 3223, 1755, 1269, 3194, 1564, 717,
	3198, 2549, 3084, 3084, 3248, 2550, 3084, 3084, 949, 2837,
	2552, 1857, 1045, 2520, 2100, 1971, 2721, 3246, 1169, 758,
	3252, 1510, 1376, 864, 3218, 958, 1373, 957, 955, 1460,
	605, 1818, 2511, 2485, 3169, 3224, 3226, 3420, 3225, 3459,
	3359, 3108, 3109, 3423, 1389, 3238, 589, 3242, 3279, 3184,
	949, 3363, 3146, 3186, 3046, 1265, 1862, 1028, 1027, 1037,
	1038, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1029, 1010,
	2597, 780, 643, 616, 1075, 3259, 1357, 3270, 1350, 2659,
	2657, 866, 615, 3119, 2913, 3268, 2363, 2568, 3231, 863,
	781, 1802, 1263, 3125, 3182, 3300, 1318, 1322, 2017, 3239,
	3330, 3121, 2769, 2421, 3325, 2955, 3294, 3055, 949, 3053,
	3054, 524, 1734, 3284, 3277, 467, 825, 3282, 3160, 1814,
	525, 3312, 2000, 3380, 3262, 738, 1981, 3162, 1412, 739,
	731, 2380, 2379, 1429, 1019, 3307, 1446, 2675, 2676, 1054,
	563, 3306, 1886, 2360, 3303, 2978, 2561, 61, 3314, 3329,
	60, 1123, 59, 58, 949, 1784, 199, 607, 198, 3079,
	3356, 3323, 1265, 3425, 3219, 3354, 3357, 587, 586, 585,
	3084, 3344, 3346, 3348, 3350, 3328, 584, 583, 582, 2113,
	3337, 2111, 2110, 1718, 3353, 1717, 3358, 1782, 2734, 3343,
	2451, 768, 2446, 1649, 1647, 3366, 2439, 3368, 3369, 1263,
	3364, 3362, 2046, 2053, 1265, 1646, 3405, 3229, 3340, 3341,
	2920, 2921, 2922, 3138, 2495, 1596, 2926, 2927, 2042, 1666,
	2466, 1663, 1662, 3399, 2458, 3388, 3391, 3134, 3084, 3404,
	3390, 3128, 3392, 3115, 1694, 3402, 3227, 535, 534, 541,
	531, 1263, 3095, 2962, 2963, 2969, 3393, 3394, 1990, 538,
	539, 3427, 540, 544, 889, 3426, 526, 885, 887, 3413,
	767, 3414, 888, 3415, 886, 3416, 549, 3417, 2284, 2023,
	807, 2697, 1963, 1962, 3084, 1960, 1959, 3431, 1143, 3299,
	949, 1274, 1062, 3294, 3433, 490, 1028, 1027, 1037, 1038,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1029, 3252, 3442,
	3376, 3062, 3445, 2158, 2156, 3444, 3443, 2830, 3447, 3448,
	3458, 3450, 2826, 3461, 1826, 1835, 117, 2612, 1719, 1715,
	3454, 3455, 3456, 3457, 1014, 1015, 1016, 1013, 1983, 3205,
	3471, 1601, 949, 732, 1979, 99, 152, 3336, 48, 89,
	88, 3472, 1488, 3329, 3473, 98, 150, 47, 183, 182,
	185, 3480, 184, 809, 3427, 3484, 808, 3113, 3426, 3483,
	181, 2208, 2209, 180, 1306, 179, 3370, 3488, 3098, 705,
	38, 37, 33, 3461, 3492, 12, 2655, 11, 34, 21,
	117, 22, 20, 1380, 117, 19, 3496, 25, 31, 30,
	110, 109, 29, 793, 108, 107, 117, 106, 105, 104,
	3440, 769, 28, 1488, 18, 42, 117, 41, 40, 9,
	1028, 1027, 1037, 1038, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1029, 97, 95, 27, 96, 93, 94, 771, 1028,
	1027, 1037, 1038, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1029, 92, 90, 73, 72, 71, 86, 85, 84, 83,
	82, 81, 1412, 527, 529, 528, 79, 80, 779, 70,
	69, 68, 67, 533, 66, 91, 77, 87, 78, 76,
	75, 74, 65, 64, 63, 537, 136, 135, 134, 133,
	132, 130, 552, 131, 3163, 129, 128, 127, 3164, 530,
	126, 792, 791, 125, 124, 43, 44, 45, 46, 146,
	145, 147, 149, 151, 1484, 148, 153, 143, 141, 144,
	1481, 142, 790, 2272, 1483, 1480, 1482, 1486, 1487, 140,
	56, 100, 1485, 766, 17, 24, 4, 0, 0, 0,
	0, 0, 0, 0, 770, 802, 0, 1028, 1027, 1037,
	1038, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1029, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 798, 0,
	0, 3494, 0, 0, 0, 1484, 0, 0, 0, 0,
	0, 1481, 0, 0, 0, 1483, 1480, 1482, 1486, 1487,
	0, 0, 0, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 799, 803, 0, 532, 536, 542,
	0, 543, 545, 0, 0, 546, 547, 548, 0, 0,
	550, 551, 0, 0, 787, 0, 785, 789, 806, 0,
	0, 0, 786, 783, 782, 0, 788, 773, 774, 772,
	775, 776, 777, 778, 0, 804, 0, 805, 0, 0,
	0, 0, 0, 0, 0, 3271, 0, 0, 800, 801,
	0, 0, 0, 0, 0, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1491, 1492, 1493, 1494,
	1495, 1496, 1489, 1490, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 0, 796, 0, 0, 0, 0,
	0, 795, 1028, 1027, 1037, 1038, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1029, 3313, 0, 0, 0, 0, 3317,
	3318, 0, 0, 0, 0, 0, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1491, 1492, 1493,
	1494, 1495, 1496, 1489, 1490, 1884, 0, 0, 0, 0,
	3338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 117, 117, 0, 117, 0, 1028,
	1027, 1037, 1038, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1029, 0, 0, 0, 0, 794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 841, 0, 0, 0, 623,
	0, 0, 841, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 117, 466, 0, 0, 0, 0, 0,
	0, 577, 0, 0, 0, 295, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	0, 460, 0, 461, 0, 0, 614, 0, 465, 386,
	339, 0, 0, 0, 0, 676, 684, 0, 0, 0,
	0, 3435, 3436, 0, 0, 0, 0, 570, 0, 0,
	604, 653, 652, 591, 601, 0, 0, 268, 197, 462,
	0, 463, 592, 0, 600, 593, 597, 596, 594, 595,
	1045, 668, 0, 0, 0, 0, 0, 0, 561, 574,
	0, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 571, 572, 0, 0, 0,
	0, 624, 0, 573, 0, 0, 619, 598, 602, 0,
	0, 0, 0, 258, 391, 408, 269, 382, 421, 274,
	389, 264, 354, 378, 0, 0, 260, 406, 388, 336,
	315, 316, 259, 0, 373, 293, 307, 290, 352, 599,
	622, 626, 289, 690, 620, 416, 262, 0, 415, 351,
	402, 407, 337, 331, 261, 404, 335, 330, 319, 297,
	691, 320, 321, 311, 363, 329, 364, 312, 341, 340,
	342, 0, 0, 0, 0, 0, 444, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 418, 0, 0, 674, 0,
	0, 0, 390, 0, 0, 322, 0, 0, 0, 621,
	0, 376, 357, 687, 562, 0, 374, 327, 403, 365,
	409, 392, 417, 370, 366, 253, 393, 292, 338, 265,
	267, 287, 294, 296, 298, 299, 347, 348, 360, 381,
	394, 395, 396, 291, 275, 375, 276, 309, 277, 254,
	283, 281, 284, 383, 285, 256, 361, 400, 0, 304,
	371, 334, 257, 333, 362, 399, 398, 266, 425, 431,
	432, 0, 0, 437, 0, 0, 0, 446, 451, 452,
	453, 455, 456, 457, 458, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 1512, 1511, 1513, 430, 323, 324,
	0, 302, 250, 251, 476, 672, 353, 0, 0, 0,
	0, 686, 667, 669, 670, 673, 677, 678, 679, 680,
	681, 683, 685, 689, 475, 0, 0, 0, 0, 0,
	472, 359, 2129, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 411, 423, 440,
	443, 0, 0, 0, 0, 255, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 688, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 625, 0, 0, 343, 344,
	345, 346, 675, 0, 273, 441, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 435, 436, 301, 308,
	454, 310, 272, 358, 303, 420, 317, 0, 447, 0,
	448, 0, 0, 0, 0, 350, 313, 314, 384, 318,
	328, 372, 419, 356, 377, 270, 410, 385, 332, 0,
	0, 697, 671, 696, 698, 699, 695, 700, 701, 682,
	581, 0, 629, 693, 692, 694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 282,
	248, 278, 279, 286, 473, 470, 401, 474, 0, 252,
	0, 326, 0, 367, 300, 0, 0, 660, 636, 637,
	638, 579, 639, 633, 634, 635, 661, 627, 657, 658,
	606, 630, 640, 656, 641, 659, 662, 663, 702, 703,
	647, 631, 220, 704, 644, 664, 655, 654, 642, 628,
	665, 666, 613, 608, 645, 646, 632, 648, 649, 650,
	580, 609, 610, 611, 612, 0, 0, 0, 426, 427,
	428, 450, 412, 0, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 0, 477, 464, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 117, 0,
	0, 0, 0, 0, 355, 0, 0, 0, 0, 0,
	466, 0, 0, 0, 0, 0, 0, 577, 0, 0,
	0, 295, 1557, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 0, 0, 0, 460, 0, 461,
	0, 0, 614, 0, 465, 386, 339, 0, 0, 0,
	0, 676, 684, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 570, 0, 0, 604, 653, 652, 591,
	601, 0, 0, 268, 197, 462, 0, 463, 592, 0,
	600, 593, 597, 596, 594, 595, 0, 668, 0, 0,
	0, 0, 0, 0, 561, 574, 0, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 1722, 1722, 1722, 0, 0, 0, 0,
	0, 571, 572, 0, 1722, 0, 0, 624, 0, 573,
	0, 0, 1747, 598, 602, 0, 0, 0, 0, 258,
	391, 408, 269, 382, 421, 274, 389, 264, 354, 378,
	0, 0, 260, 406, 388, 336, 315, 316, 259, 0,
	373, 293, 307, 290, 352, 599, 622, 626, 289, 690,
	620, 416, 262, 0, 415, 351, 402, 407, 337, 331,
	261, 404, 335, 330, 319, 297, 691, 320, 321, 311,
	363, 329, 364, 312, 341, 340, 342, 0, 0, 0,
	0, 0, 444, 445, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 117, 0, 0, 617, 0, 0,
	0, 418, 0, 0, 674, 0, 0, 0, 390, 0,
	0, 322, 0, 0, 117, 621, 0, 376, 357, 687,
	562, 117, 374, 327, 403, 365, 409, 392, 417, 370,
	366, 253, 393, 292, 338, 265, 267, 287, 294, 296,
	298, 299, 347, 348, 360, 381, 394, 395, 396, 291,
	275, 375, 276, 309, 277, 254, 283, 281, 284, 383,
	285, 256, 361, 400, 0, 304, 371, 334, 257, 333,
	362, 399, 398, 266, 425, 431, 432, 0, 0, 437,
	0, 0, 0, 446, 451, 452, 453, 455, 456, 457,
	458, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 430, 323, 324, 0, 302, 250, 251,
	476, 672, 353, 0, 0, 0, 0, 686, 667, 669,
	670, 673, 677, 678, 679, 680, 681, 683, 685, 689,
	475, 0, 0, 0, 0, 0, 472, 359, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 411, 423, 440, 443, 0, 0, 0,
	0, 255, 442, 0, 0, 0, 0, 0, 0, 0,
	117, 688, 0, 0, 0, 422, 0, 1722, 0, 0,
	0, 625, 0, 0, 343, 344, 345, 346, 675, 0,
	273, 441, 369, 0, 0, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 301, 308, 454, 310, 272, 358,
	303, 420, 317, 0, 447, 0, 448, 0, 0, 0,
	0, 350, 313, 314, 384, 318, 328, 372, 419, 356,
	377, 270, 410, 385, 332, 0, 0, 697, 671, 696,
	698, 699, 695, 700, 701, 682, 581, 0, 629, 693,
	692, 694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 282, 248, 278, 279, 286,
	473, 470, 401, 474, 0, 252, 0, 326, 0, 367,
	300, 0, 0, 660, 636, 637, 638, 579, 639, 633,
	634, 635, 661, 627, 657, 658, 606, 630, 640, 656,
	641, 659, 662, 663, 702, 703, 647, 631, 220, 704,
	644, 664, 655, 654, 642, 628, 665, 666, 613, 608,
	645, 646, 632, 648, 649, 650, 580, 609, 610, 611,
	612, 0, 0, 0, 426, 427, 428, 450, 412, 0,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 0, 477, 464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 466, 0, 0, 0, 0,
	0, 0, 577, 0, 0, 0, 295, 0, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 0,
	0, 0, 460, 0, 461, 0, 0, 1048, 0, 465,
	386, 339, 0, 0, 0, 0, 676, 684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 570, 0,
	0, 604, 653, 652, 591, 601, 0, 117, 268, 197,
	462, 0, 463, 592, 117, 600, 593, 597, 596, 594,
	595, 0, 668, 0, 0, 0, 0, 0, 0, 561,
	574, 0, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 571, 572, 0, 0,
	1722, 0, 624, 0, 573, 0, 0, 619, 598, 602,
	0, 0, 0, 0, 258, 391, 408, 269, 382, 421,
	274, 389, 264, 354, 378, 0, 0, 260, 406, 388,
	336, 315, 316, 259, 0, 373, 293, 307, 290, 352,
	599, 622, 626, 289, 690, 620, 416, 262, 0, 415,
	351, 402, 407, 337, 331, 261, 404, 335, 330, 319,
	297, 691, 320, 321, 311, 363, 329, 364, 312, 341,
	340, 342, 0, 0, 0, 0, 0, 444, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 418, 0, 0, 674,
	0, 0, 0, 390, 0, 117, 322, 0, 0, 0,
	621, 0, 376, 357, 687, 562, 0, 374, 327, 403,
	365, 409, 392, 417, 370, 366, 253, 393, 292, 338,
	265, 267, 287, 294, 296, 298, 299, 347, 348, 360,
	381, 394, 395, 396, 291, 275, 375, 276, 309, 277,
	254, 283, 281, 284, 383, 285, 256, 361, 400, 0,
	304, 371, 334, 257, 333, 362, 399, 398, 266, 425,
	431, 432, 0, 0, 437, 0, 0, 0, 446, 451,
	452, 453, 455, 456, 457, 458, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 430, 323,
	324, 0, 302, 250, 251, 476, 672, 353, 0, 0,
	0, 0, 686, 667, 669, 670, 673, 677, 678, 679,
	680, 681, 683, 685, 689, 475, 0, 0, 0, 0,
	0, 472, 359, 0, 380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 411, 423,
	440, 443, 0, 0, 0, 0, 255, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 688, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 625, 0, 0, 343,
	344, 345, 346, 675, 0, 273, 441, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 301,
	308, 454, 310, 272, 358, 303, 420, 317, 0, 447,
	0, 448, 0, 0, 0, 0, 350, 313, 314, 384,
	318, 328, 372, 419, 356, 377, 270, 410, 385, 332,
	0, 0, 697, 671, 696, 698, 699, 695, 700, 701,
	682, 581, 0, 629, 693, 692, 694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	282, 248, 278, 279, 286, 473, 470, 401, 474, 0,
	252, 0, 326, 139, 367, 300, 0, 0, 660, 636,
	637, 638, 579, 639, 633, 634, 635, 661, 627, 657,
	658, 606, 630, 640, 656, 641, 659, 662, 663, 702,
	703, 647, 631, 220, 704, 644, 664, 655, 654, 642,
	628, 665, 666, 613, 608, 645, 646, 632, 648, 649,
	650, 580, 609, 610, 611, 612, 0, 0, 0, 426,
	427, 428, 450, 412, 623, 471, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 466,
	0, 651, 0, 477, 464, 0, 577, 0, 0, 0,
	295, 3493, 0, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 0, 0, 0, 460, 0, 461, 0,
	0, 614, 0, 465, 386, 339, 0, 0, 0, 0,
	676, 684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 570, 0, 0, 604, 653, 652, 591, 601,
	0, 0, 268, 197, 462, 0, 463, 592, 0, 600,
	593, 597, 596, 594, 595, 0, 668, 0, 0, 0,
	0, 0, 0, 561, 574, 0, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	571, 572, 0, 0, 0, 0, 624, 0, 573, 0,
	0, 619, 598, 602, 0, 0, 0, 0, 258, 391,
	408, 269, 382, 421, 274, 389, 264, 354, 378, 0,
	0, 260, 406, 388, 336, 315, 316, 259, 0, 373,
	293, 307, 290, 352, 599, 622, 626, 289, 690, 620,
	416, 262, 0, 415, 351, 402, 407, 337, 331, 261,
	404, 335, 330, 319, 297, 691, 320, 321, 311, 363,
	329, 364, 312, 341, 340, 342, 0, 0, 0, 0,
	0, 444, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	418, 0, 0, 674, 0, 0, 0, 390, 0, 0,
	322, 0, 0, 0, 621, 0, 376, 357, 687, 562,
	0, 374, 327, 403, 365, 409, 392, 417, 370, 366,
	253, 393, 292, 338, 265, 267, 287, 294, 296, 298,
	299, 347, 348, 360, 381, 394, 395, 396, 291, 275,
	375, 276, 309, 277, 254, 283, 281, 284, 383, 285,
	256, 361, 400, 0, 304, 371, 334, 257, 333, 362,
	399, 398, 266, 425, 431, 432, 0, 0, 437, 0,
	0, 0, 446, 451, 452, 453, 455, 456, 457, 458,
	0, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 430, 323, 324, 0, 302, 250, 251, 476,
	672, 353, 0, 0, 0, 0, 686, 667, 669, 670,
	673, 677, 678, 679, 680, 681, 683, 685, 689, 475,
	0, 0, 0, 0, 0, 472, 359, 0, 380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 411, 423, 440, 443, 0, 0, 0, 0,
	255, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	688, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	625, 0, 0, 343, 344, 345, 346, 675, 0, 273,
	441, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 301, 308, 454, 310, 272, 358, 303,
	420, 317, 0, 447, 0, 448, 0, 0, 0, 0,
	350, 313, 314, 384, 318, 328, 372, 419, 356, 377,
	270, 410, 385, 332, 0, 0, 697, 671, 696, 698,
	699, 695, 700, 701, 682, 581, 0, 629, 693, 692,
	694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 282, 248, 278, 279, 286, 473,
	470, 401, 474, 0, 252, 0, 326, 0, 367, 300,
	0, 0, 660, 636, 637, 638, 579, 639, 633, 634,
	635, 661, 627, 657, 658, 606, 630, 640, 656, 641,
	659, 662, 663, 702, 703, 647, 631, 220, 704, 644,
	664, 655, 654, 642, 628, 665, 666, 613, 608, 645,
	646, 632, 648, 649, 650, 580, 609, 610, 611, 612,
	0, 0, 0, 426, 427, 428, 450, 412, 623, 471,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 0, 0, 466, 0, 651, 0, 477, 464, 0,
	577, 0, 0, 0, 295, 1557, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 0, 0, 0,
	460, 0, 461, 0, 0, 614, 0, 465, 386, 339,
	0, 0, 0, 0, 676, 684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 0, 0, 604,
	653, 652, 591, 601, 0, 0, 268, 197, 462, 0,
	463, 592, 0, 600, 593, 597, 596, 594, 595, 0,
	668, 0, 0, 0, 0, 0, 0, 561, 574, 0,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 571, 572, 0, 0, 0, 0,
	624, 0, 573, 0, 0, 619, 598, 602, 0, 0,
	0, 0, 258, 391, 408, 269, 382, 421, 274, 389,
	264, 354, 378, 0, 0, 260, 406, 388, 336, 315,
	316, 259, 0, 373, 293, 307, 290, 352, 599, 622,
	626, 289, 690, 620, 416, 262, 0, 415, 351, 402,
	407, 337, 331, 261, 404, 335, 330, 319, 297, 691,
	320, 321, 311, 363, 329, 364, 312, 341, 340, 342,
	0, 0, 0, 0, 0, 444, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 418, 0, 0, 674, 0, 0,
	0, 390, 0, 0, 322, 0, 0, 0, 621, 0,
	376, 357, 687, 562, 0, 374, 327, 403, 365, 409,
	392, 417, 370, 366, 253, 393, 292, 338, 265, 267,
	287, 294, 296, 298, 299, 347, 348, 360, 381, 394,
	395, 396, 291, 275, 375, 276, 309, 277, 254, 283,
	281, 284, 383, 285, 256, 361, 400, 0, 304, 371,
	334, 257, 333, 362, 399, 398, 266, 425, 431, 432,
	0, 0, 437, 0, 0, 0, 446, 451, 452, 453,
	455, 456, 457, 458, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 430, 323, 324, 0,
	302, 250, 251, 476, 672, 353, 0, 0, 0, 0,
	686, 667, 669, 670, 673, 677, 678, 679, 680, 681,
	683, 685, 689, 475, 0, 0, 0, 0, 0, 472,
	359, 0, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 411, 423, 440, 443,
	0, 0, 0, 0, 255, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 688, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 625, 0, 0, 343, 344, 345,
	346, 675, 0, 273, 441, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 301, 308, 454,
	310, 272, 358, 303, 420, 317, 0, 447, 0, 448,
	0, 0, 0, 0, 350, 313, 314, 384, 318, 328,
	372, 419, 356, 377, 270, 410, 385, 332, 0, 0,
	697, 671, 696, 698, 699, 695, 700, 701, 682, 581,
	0, 629, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 282, 248,
	278, 279, 286, 473, 470, 401, 474, 0, 252, 0,
	326, 0, 367, 300, 0, 0, 660, 636, 637, 638,
	579, 639, 633, 634, 635, 661, 627, 657, 658, 606,
	630, 640, 656, 641, 659, 662, 663, 702, 703, 647,
	631, 220, 704, 644, 664, 655, 654, 642, 628, 665,
	666, 613, 608, 645, 646, 632, 648, 649, 650, 580,
	609, 610, 611, 612, 0, 0, 0, 426, 427, 428,
	450, 412, 623, 471, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 466, 0, 651,
	0, 477, 464, 0, 577, 0, 0, 0, 295, 0,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 0, 0, 0, 460, 0, 461, 0, 0, 614,
	0, 465, 386, 339, 0, 0, 0, 0, 676, 684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	570, 0, 0, 604, 653, 652, 591, 601, 0, 0,
	268, 197, 462, 0, 463, 592, 0, 600, 593, 597,
	596, 594, 595, 0, 668, 0, 0, 0, 0, 0,
	0, 561, 574, 0, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 571, 572,
	1301, 0, 0, 0, 624, 0, 573, 0, 0, 619,
	598, 602, 0, 0, 0, 0, 258, 391, 408, 269,
	382, 421, 274, 389, 264, 354, 378, 0, 0, 260,
	406, 388, 336, 315, 316, 259, 0, 373, 293, 307,
	290, 352, 599, 622, 626, 289, 690, 620, 416, 262,
	0, 415, 351, 402, 407, 337, 331, 261, 404, 335,
	330, 319, 297, 691, 320, 321, 311, 363, 329, 364,
	312, 341, 340, 342, 0, 0, 0, 0, 0, 444,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 418, 0,
	0, 674, 0, 0, 0, 390, 0, 0, 322, 0,
	0, 0, 621, 0, 376, 357, 687, 562, 0, 374,
	327, 403, 365, 409, 392, 417, 370, 366, 253, 393,
	292, 338, 265, 267, 287, 294, 296, 298, 299, 347,
	348, 360, 381, 394, 395, 396, 291, 275, 375, 276,
	309, 277, 254, 283, 281, 284, 383, 285, 256, 361,
	400, 0, 304, 371, 334, 257, 333, 362, 399, 398,
	266, 425, 431, 432, 0, 0, 437, 0, 0, 0,
	446, 451, 452, 453, 455, 456, 457, 458, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	430, 323, 324, 0, 302, 250, 251, 476, 672, 353,
	0, 0, 0, 0, 686, 667, 669, 670, 673, 677,
	678, 679, 680, 681, 683, 685, 689, 475, 0, 0,
	0, 0, 0, 472, 359, 0, 380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 387,
	411, 423, 440, 443, 0, 0, 0, 0, 255, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 625, 0,
	0, 343, 344, 345, 346, 675, 0, 273, 441, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 301, 308, 454, 310, 272, 358, 303, 420, 317,
	0, 447, 0, 448, 0, 0, 0, 0, 350, 313,
	314, 384, 318, 328, 372, 419, 356, 377, 270, 410,
	385, 332, 0, 0, 697, 671, 696, 698, 699, 695,
	700, 701, 682, 581, 0, 629, 693, 692, 694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 282, 248, 278, 279, 286, 473, 470, 401,
	474, 0, 252, 0, 326, 0, 367, 300, 0, 0,
	660, 636, 637, 638, 579, 639, 633, 634, 635, 661,
	627, 657, 658, 606, 630, 640, 656, 641, 659, 662,
	663, 702, 703, 647, 631, 220, 704, 644, 664, 655,
	654, 642, 628, 665, 666, 613, 608, 645, 646, 632,
	648, 649, 650, 580, 609, 610, 611, 612, 0, 0,
	0, 426, 427, 428, 450, 412, 623, 471, 0, 1906,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 0,
	0, 466, 0, 651, 0, 477, 464, 0, 577, 0,
	0, 0, 295, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 0, 0, 0, 460, 0,
	461, 0, 0, 614, 0, 465, 386, 339, 0, 0,
	0, 0, 676, 684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 570, 0, 0, 604, 653, 652,
	591, 601, 0, 0, 268, 197, 462, 0, 463, 592,
	0, 600, 593, 597, 596, 594, 595, 0, 668, 0,
	0, 0, 0, 0, 0, 561, 574, 0, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 571, 572, 0, 0, 0, 0, 624, 0,
	573, 0, 0, 619, 598, 602, 0, 0, 0, 0,
	258, 391, 408, 269, 382, 421, 274, 389, 264, 354,
	378, 0, 0, 260, 406, 388, 336, 315, 316, 259,
	0, 373, 293, 307, 290, 352, 599, 622, 626, 289,
	690, 620, 416, 262, 0, 415, 351, 402, 407, 337,
	331, 261, 404, 335, 330, 319, 297, 691, 320, 321,
	311, 363, 329, 364, 312, 341, 340, 342, 0, 0,
	0, 0, 0, 444, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 418, 0, 0, 674, 0, 0, 0, 390,
	0, 0, 322, 0, 0, 0, 621, 0, 376, 357,
	687, 562, 0, 374, 327, 403, 365, 409, 392, 417,
	370, 366, 253, 393, 292, 338, 265, 267, 287, 294,
	296, 298, 299, 347, 348, 360, 381, 394, 395, 396,
	291, 275, 375, 276, 309, 277, 254, 283, 281, 284,
	383, 285, 256, 361, 400, 0, 304, 371, 334, 257,
	333, 362, 399, 398, 266, 425, 431, 432, 0, 0,
	437, 0, 0, 0, 446, 451, 452, 453, 455, 456,
	457, 458, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 430, 323, 324, 0, 302, 250,
	251, 476, 672, 353, 0, 0, 0, 0, 686, 667,
	669, 670, 673, 677, 678, 679, 680, 681, 683, 685,
	689, 475, 0, 0, 0, 0, 0, 472, 359, 0,
	380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 411, 423, 440, 443, 0, 0,
	0, 0, 255, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 688, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 625, 0, 0, 343, 344, 345, 346, 675,
	0, 273, 441, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 301, 308, 454, 310, 272,
	358, 303, 420, 317, 0, 447, 0, 448, 0, 0,
	0, 0, 350, 313, 314, 384, 318, 328, 372, 419,
	356, 377, 270, 410, 385, 332, 0, 0, 697, 671,
	696, 698, 699, 695, 700, 701, 682, 581, 0, 629,
	693, 692, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 282, 248, 278, 279,
	286, 473, 470, 401, 474, 0, 252, 0, 326, 0,
	367, 300, 0, 0, 660, 636, 637, 638, 579, 639,
	633, 634, 635, 661, 627, 657, 658, 606, 630, 640,
	656, 641, 659, 662, 663, 702, 703, 647, 631, 220,
	704, 644, 664, 655, 654, 642, 628, 665, 666, 613,
	608, 645, 646, 632, 648, 649, 650, 580, 609, 610,
	611, 612, 0, 0, 0, 426, 427, 428, 450, 412,
	623, 471, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 466, 0, 651, 0, 477,
	464, 0, 577, 0, 0, 0, 295, 0, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 0,
	0, 0, 460, 0, 461, 0, 0, 614, 0, 465,
	386, 339, 0, 0, 0, 0, 676, 684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 570, 0,
	0, 604, 653, 652, 591, 601, 0, 0, 268, 197,
	462, 0, 463, 592, 0, 600, 593, 597, 596, 594,
	595, 0, 668, 0, 0, 0, 0, 0, 0, 561,
	574, 0, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 571, 572, 1550, 0,
	0, 0, 624, 0, 573, 0, 0, 619, 598, 602,
	0, 0, 0, 0, 258, 391, 408, 269, 382, 421,
	274, 389, 264, 354, 378, 0, 0, 260, 406, 388,
	336, 315, 316, 259, 0, 373, 293, 307, 290, 352,
	599, 622, 626, 289, 690, 620, 416, 262, 0, 415,
	351, 402, 407, 337, 331, 261, 404, 335, 330, 319,
	297, 691, 320, 321, 311, 363, 329, 364, 312, 341,
	340, 342, 0, 0, 0, 0, 0, 444, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 418, 0, 0, 674,
	0, 0, 0, 390, 0, 0, 322, 0, 0, 0,
	621, 0, 376, 357, 687, 562, 0, 374, 327, 403,
	365, 409, 392, 417, 370, 366, 253, 393, 292, 338,
	265, 267, 287, 294, 296, 298, 299, 347, 348, 360,
	381, 394, 395, 396, 291, 275, 375, 276, 309, 277,
	254, 283, 281, 284, 383, 285, 256, 361, 400, 0,
	304, 371, 334, 257, 333, 362, 399, 398, 266, 425,
	431, 432, 0, 0, 437, 0, 0, 0, 446, 451,
	452, 453, 455, 456, 457, 458, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 430, 323,
	324, 0, 302, 250, 251, 476, 672, 353, 0, 0,
	0, 0, 686, 667, 669, 670, 673, 677, 678, 679,
	680, 681, 683, 685, 689, 475, 0, 0, 0, 0,
	0, 472, 359, 0, 380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 411, 423,
	440, 443, 0, 0, 0, 0, 255, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 688, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 625, 0, 0, 343,
	344, 345, 346, 675, 0, 273, 441, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 301,
	308, 454, 310, 272, 358, 303, 420, 317, 0, 447,
	0, 448, 0, 0, 0, 0, 350, 313, 314, 384,
	318, 328, 372, 419, 356, 377, 270, 410, 385, 332,
	0, 0, 697, 671, 696, 698, 699, 695, 700, 701,
	682, 581, 0, 629, 693, 692, 694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	282, 248, 278, 279, 286, 473, 470, 401, 474, 0,
	252, 0, 326, 0, 367, 300, 0, 0, 660, 636,
	637, 638, 579, 639, 633, 634, 635, 661, 627, 657,
	658, 606, 630, 640, 656, 641, 659, 662, 663, 702,
	703, 647, 631, 220, 704, 644, 664, 655, 654, 642,
	628, 665, 666, 613, 608, 645, 646, 632, 648, 649,
	650, 580, 609, 610, 611, 612, 0, 0, 0, 426,
	427, 428, 450, 412, 623, 471, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 466,
	0, 651, 0, 477, 464, 0, 577, 0, 0, 0,
	295, 0, 0, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 0, 0, 0, 460, 0, 461, 0,
	0, 614, 0, 465, 386, 339, 0, 0, 0, 0,
	676, 684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 570, 0, 0, 604, 653, 652, 591, 601,
	0, 0, 268, 197, 462, 0, 463, 592, 0, 600,
	593, 597, 596, 594, 595, 0, 668, 0, 0, 0,
	0, 0, 0, 561, 574, 0, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	571, 572, 0, 0, 0, 0, 624, 0, 573, 0,
	0, 619, 598, 602, 0, 0, 0, 0, 258, 391,
	408, 269, 382, 421, 274, 389, 264, 354, 378, 0,
	0, 260, 406, 388, 336, 315, 316, 259, 0, 373,
	293, 307, 290, 352, 599, 622, 626, 289, 690, 620,
	416, 262, 0, 415, 351, 402, 407, 337, 331, 261,
	404, 335, 330, 319, 297, 691, 320, 321, 311, 363,
	329, 364, 312, 341, 340, 342, 0, 0, 0, 0,
	0, 444, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	418, 0, 0, 674, 0, 0, 0, 390, 0, 0,
	322, 0, 0, 0, 621, 0, 376, 357, 687, 562,
	0, 374, 327, 403, 365, 409, 392, 417, 370, 366,
	253, 393, 292, 338, 265, 267, 287, 294, 296, 298,
	299, 347, 348, 360, 381, 394, 395, 396, 291, 275,
	375, 276, 309, 277, 254, 283, 281, 284, 383, 285,
	256, 361, 400, 0, 304, 371, 334, 257, 333, 362,
	399, 398, 266, 425, 431, 432, 0, 0, 437, 0,
	0, 0, 446, 451, 452, 453, 455, 456, 457, 458,
	0, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 430, 323, 324, 0, 302, 250, 251, 476,
	672, 353, 0, 0, 0, 0, 686, 667, 669, 670,
	673, 677, 678, 679, 680, 681, 683, 685, 689, 475,
	0, 0, 0, 0, 0, 472, 359, 0, 380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 411, 423, 440, 443, 0, 0, 0, 0,
	255, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	688, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	625, 0, 0, 343, 344, 345, 346, 675, 0, 273,
	441, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 301, 308, 454, 310, 272, 358, 303,
	420, 317, 0, 447, 0, 448, 0, 0, 0, 0,
	350, 313, 314, 384, 318, 328, 372, 419, 356, 377,
	270, 410, 385, 332, 0, 0, 697, 671, 696, 698,
	699, 695, 700, 701, 682, 581, 0, 629, 693, 692,
	694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 282, 248, 278, 279, 286, 473,
	470, 401, 474, 0, 252, 0, 326, 0, 367, 300,
	0, 0, 660, 636, 637, 638, 579, 639, 633, 634,
	635, 661, 627, 657, 658, 606, 630, 640, 656, 641,
	659, 662, 663, 702, 703, 647, 631, 220, 704, 644,
	664, 655, 654, 642, 628, 665, 666, 613, 608, 645,
	646, 632, 648, 649, 650, 580, 609, 610, 611, 612,
	0, 0, 0, 426, 427, 428, 450, 412, 623, 471,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 0, 0, 466, 0, 651, 0, 477, 464, 0,
	577, 0, 0, 0, 295, 0, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 0, 0, 0,
	460, 0, 461, 0, 0, 614, 0, 465, 386, 339,
	0, 0, 0, 0, 676, 684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 0, 0, 604,
	653, 652, 591, 601, 0, 0, 268, 197, 462, 0,
	463, 2330, 0, 600, 2331, 597, 596, 594, 595, 0,
	668, 0, 0, 0, 0, 0, 0, 561, 574, 0,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 571, 572, 0, 0, 0, 0,
	624, 0, 573, 0, 0, 619, 598, 602, 0, 0,
	0, 0, 258, 391, 408, 269, 382, 421, 274, 389,
	264, 354, 378, 0, 0, 260, 406, 388, 336, 315,
	316, 259, 0, 373, 293, 307, 290, 352, 599, 622,
	626, 289, 690, 620, 416, 262, 0, 415, 351, 402,
	407, 337, 331, 261, 404, 335, 330, 319, 297, 691,
	320, 321, 311, 363, 329, 364, 312, 341, 340, 342,
	0, 0, 0, 0, 0, 444, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 418, 0, 0, 674, 0, 0,
	0, 390, 0, 0, 322, 0, 0, 0, 621, 0,
	376, 357, 687, 562, 0, 374, 327, 403, 365, 409,
	392, 417, 370, 366, 253, 393, 292, 338, 265, 267,
	287, 294, 296, 298, 299, 347, 348, 360, 381, 394,
	395, 396, 291, 275, 375, 276, 309, 277, 254, 283,
	281, 284, 383, 285, 256, 361, 400, 0, 304, 371,
	334, 257, 333, 362, 399, 398, 266, 425, 431, 432,
	0, 0, 437, 0, 0, 0, 446, 451, 452, 453,
	455, 456, 457, 458, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 430, 323, 324, 0,
	302, 250, 251, 476, 672, 353, 0, 0, 0, 0,
	686, 667, 669, 670, 673, 677, 678, 679, 680, 681,
	683, 685, 689, 475, 0, 0, 0, 0, 0, 472,
	359, 0, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 411, 423, 440, 443,
	0, 0, 0, 0, 255, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 688, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 625, 0, 0, 343, 344, 345,
	346, 675, 0, 273, 441, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 301, 308, 454,
	310, 272, 358, 303, 420, 317, 0, 447, 0, 448,
	0, 0, 0, 0, 350, 313, 314, 384, 318, 328,
	372, 419, 356, 377, 270, 410, 385, 332, 0, 0,
	697, 671, 696, 698, 699, 695, 700, 701, 682, 581,
	0, 629, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 282, 248,
	278, 279, 286, 473, 470, 401, 474, 0, 252, 0,
	326, 0, 367, 300, 0, 0, 660, 636, 637, 638,
	579, 639, 633, 634, 635, 661, 627, 657, 658, 606,
	630, 640, 656, 641, 659, 662, 663, 702, 703, 647,
	631, 220, 704, 644, 664, 655, 654, 642, 628, 665,
	666, 613, 608, 645, 646, 632, 648, 649, 650, 580,
	609, 610, 611, 612, 0, 0, 0, 426, 427, 428,
	450, 412, 623, 471, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 466, 0, 651,
	1430, 477, 464, 0, 577, 0, 0, 0, 295, 0,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 0, 0, 0, 460, 0, 461, 0, 0, 614,
	0, 465, 386, 339, 0, 0, 0, 0, 676, 684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	570, 0, 0, 604, 653, 652, 591, 601, 0, 0,
	268, 197, 462, 0, 463, 592, 0, 600, 593, 597,
	596, 594, 595, 0, 668, 0, 0, 0, 0, 0,
	0, 0, 574, 0, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 571, 572,
	0, 0, 0, 0, 624, 0, 573, 0, 0, 619,
	598, 602, 0, 0, 0, 0, 258, 391, 408, 269,
	382, 421, 274, 389, 264, 354, 378, 0, 0, 260,
	406, 388, 336, 315, 316, 259, 0, 373, 293, 307,
	290, 352, 599, 622, 626, 289, 690, 620, 416, 262,
	0, 415, 351, 402, 407, 337, 331, 261, 404, 335,
	330, 319, 297, 691, 320, 321, 311, 363, 329, 364,
	312, 341, 340, 342, 0, 0, 0, 0, 0, 444,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 418, 0,
	0, 674, 0, 0, 0, 390, 0, 0, 322, 0,
	0, 0, 621, 0, 376, 357, 687, 0, 0, 374,
	327, 403, 365, 409, 392, 417, 370, 366, 253, 393,
	292, 338, 265, 267, 287, 294, 296, 298, 299, 347,
	348, 360, 381, 394, 395, 396, 291, 275, 375, 276,
	309, 277, 254, 283, 281, 284, 383, 285, 256, 361,
	400, 0, 304, 371, 334, 257, 333, 362, 399, 398,
	266, 425, 1431, 1432, 0, 0, 437, 0, 0, 0,
	446, 451, 452, 453, 455, 456, 457, 458, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	430, 323, 324, 0, 302, 250, 251, 476, 672, 353,
	0, 0, 0, 0, 686, 667, 669, 670, 673, 677,
	678, 679, 680, 681, 683, 685, 689, 475, 0, 0,
	0, 0, 0, 472, 359, 0, 380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 387,
	411, 423, 440, 443, 0, 0, 0, 0, 255, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 625, 0,
	0, 343, 344, 345, 346, 675, 0, 273, 441, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 301, 308, 454, 310, 272, 358, 303, 420, 317,
	0, 447, 0, 448, 0, 0, 0, 0, 350, 313,
	314, 384, 318, 328, 372, 419, 356, 377, 270, 410,
	385, 332, 0, 0, 697, 671, 696, 698, 699, 695,
	700, 701, 682, 581, 0, 629, 693, 692, 694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 282, 248, 278, 279, 286, 473, 470, 401,
	474, 0, 252, 0, 326, 0, 367, 300, 0, 0,
	660, 636, 637, 638, 579, 639, 633, 634, 635, 661,
	627, 657, 658, 606, 630, 640, 656, 641, 659, 662,
	663, 702, 703, 647, 631, 220, 704, 644, 664, 655,
	654, 642, 628, 665, 666, 613, 608, 645, 646, 632,
	648, 649, 650, 580, 609, 610, 611, 612, 0, 0,
	0, 426, 427, 428, 450, 412, 623, 471, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 0,
	0, 466, 0, 651, 0, 477, 464, 0, 577, 0,
	0, 0, 295, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 0, 0, 0, 460, 0,
	461, 0, 0, 614, 0, 465, 386, 339, 0, 0,
	0, 0, 676, 684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 604, 653, 652,
	591, 601, 0, 0, 268, 197, 462, 0, 463, 592,
	0, 600, 593, 597, 596, 594, 595, 0, 668, 0,
	0, 0, 0, 0, 0, 561, 574, 0, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 571, 572, 0, 0, 0, 0, 624, 0,
	573, 0, 0, 619, 598, 602, 0, 0, 0, 0,
	258, 391, 408, 269, 382, 421, 274, 389, 264, 354,
	378, 0, 0, 260, 406, 388, 336, 315, 316, 259,
	0, 373, 293, 307, 290, 352, 599, 622, 626, 289,
	690, 620, 416, 262, 0, 415, 351, 402, 407, 337,
	331, 261, 404, 335, 330, 319, 297, 691, 320, 321,
	311, 363, 329, 364, 312, 341, 340, 342, 0, 0,
	0, 0, 0, 444, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 418, 0, 0, 674, 0, 0, 0, 390,
	0, 0, 322, 0, 0, 0, 621, 0, 376, 357,
	687, 562, 0, 374, 327, 403, 365, 409, 392, 417,
	370, 366, 253, 393, 292, 338, 265, 267, 287, 294,
	296, 298, 299, 347, 348, 360, 381, 394, 395, 396,
	291, 275, 375, 276, 309, 277, 254, 283, 281, 284,
	383, 285, 256, 361, 400, 0, 304, 371, 334, 257,
	333, 362, 399, 398, 266, 425, 431, 432, 0, 0,
	437, 0, 0, 0, 446, 451, 452, 453, 455, 456,
	457, 458, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 430, 323, 324, 0, 302, 250,
	251, 476, 672, 353, 0, 0, 0, 0, 686, 667,
	669, 670, 673, 677, 678, 679, 680, 681, 683, 685,
	689, 475, 0, 0, 0, 0, 0, 472, 359, 0,
	380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 411, 423, 440, 443, 0, 0,
	0, 0, 255, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 688, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 625, 0, 0, 343, 344, 345, 346, 675,
	0, 273, 441, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 301, 308, 454, 310, 272,
	358, 303, 420, 317, 0, 447, 0, 448, 0, 0,
	0, 0, 350, 313, 314, 384, 318, 328, 372, 419,
	356, 377, 270, 410, 385, 332, 0, 0, 697, 671,
	696, 698, 699, 695, 700, 701, 682, 581, 0, 629,
	693, 692, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 282, 248, 278, 279,
	286, 473, 470, 401, 474, 0, 252, 0, 326, 0,
	367, 300, 0, 0, 660, 636, 637, 638, 579, 639,
	633, 634, 635, 661, 627, 657, 658, 606, 630, 640,
	656, 641, 659, 662, 663, 702, 703, 647, 631, 220,
	704, 644, 664, 655, 654, 642, 628, 665, 666, 613,
	608, 645, 646, 632, 648, 649, 650, 580, 609, 610,
	611, 612, 0, 0, 0, 426, 427, 428, 450, 412,
	623, 471, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 466, 0, 651, 0, 477,
	464, 0, 577, 0, 0, 0, 295, 0, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 0,
	0, 0, 460, 0, 461, 0, 0, 614, 0, 465,
	386, 339, 0, 0, 0, 0, 676, 684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 570, 0,
	0, 604, 653, 652, 591, 601, 0, 0, 268, 197,
	462, 0, 463, 592, 0, 600, 593, 597, 596, 594,
	595, 0, 668, 0, 0, 0, 0, 0, 0, 0,
	574, 0, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 571, 572, 0, 0,
	0, 0, 624, 0, 573, 0, 0, 619, 598, 602,
	0, 0, 0, 0, 258, 391, 408, 269, 382, 421,
	274, 389, 264, 354, 378, 0, 0, 260, 406, 388,
	336, 315, 316, 259, 0, 373, 293, 307, 290, 352,
	599, 622, 626, 289, 690, 620, 416, 262, 0, 415,
	351, 402, 407, 337, 331, 261, 404, 335, 330, 319,
	297, 691, 320, 321, 311, 363, 329, 364, 312, 341,
	340, 342, 0, 0, 0, 0, 0, 444, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 418, 0, 0, 674,
	0, 0, 0, 390, 0, 0, 322, 0, 0, 0,
	621, 0, 376, 357, 687, 0, 0, 374, 327, 403,
	365, 409, 392, 417, 370, 366, 253, 393, 292, 338,
	265, 267, 287, 294, 296, 298, 299, 347, 348, 360,
	381, 394, 395, 396, 291, 275, 375, 276, 309, 277,
	254, 283, 281, 284, 383, 285, 256, 361, 400, 0,
	304, 371, 334, 257, 333, 362, 399, 398, 266, 425,
	431, 432, 0, 0, 437, 0, 0, 0, 446, 451,
	452, 453, 455, 456, 457, 458, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 430, 323,
	324, 0, 302, 250, 251, 476, 672, 353, 0, 0,
	0, 0, 686, 667, 669, 670, 673, 677, 678, 679,
	680, 681, 683, 685, 689, 475, 0, 0, 0, 0,
	0, 472, 359, 0, 380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 411, 423,
	440, 443, 0, 0, 0, 0, 255, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 688, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 625, 0, 0, 343,
	344, 345, 346, 675, 0, 273, 441, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 301,
	308, 454, 310, 272, 358, 303, 420, 317, 0, 447,
	0, 448, 0, 0, 0, 0, 350, 313, 314, 384,
	318, 328, 372, 419, 356, 377, 270, 410, 385, 332,
	0, 0, 697, 671, 696, 698, 699, 695, 700, 701,
	682, 581, 0, 629, 693, 692, 694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	282, 248, 278, 279, 286, 473, 470, 401, 474, 0,
	252, 0, 326, 0, 367, 300, 0, 0, 660, 636,
	637, 638, 579, 639, 633, 634, 635, 661, 627, 657,
	658, 606, 630, 640, 656, 641, 659, 662, 663, 702,
	703, 647, 631, 220, 704, 644, 664, 655, 654, 642,
	628, 665, 666, 613, 608, 645, 646, 632, 648, 649,
	650, 580, 609, 610, 611, 612, 0, 0, 0, 426,
	427, 428, 450, 412, 0, 471, 0, 0, 0, 174,
	51, 163, 138, 0, 0, 0, 0, 0, 0, 355,
	0, 651, 0, 477, 464, 466, 0, 164, 0, 0,
	0, 0, 0, 0, 156, 0, 295, 0, 165, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 0,
	0, 0, 460, 0, 461, 0, 0, 115, 0, 465,
	386, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 168, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	462, 0, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 391, 408, 269, 382, 421,
	274, 389, 264, 354, 378, 0, 0, 260, 406, 388,
	336, 315, 316, 259, 0, 373, 293, 307, 290, 352,
	0, 405, 433, 289, 424, 0, 416, 262, 0, 415,
	351, 402, 407, 337, 331, 261, 404, 335, 330, 319,
	297, 449, 320, 321, 311, 363, 329, 364, 312, 341,
	340, 342, 0, 0, 0, 0, 0, 444, 445, 0,
	0, 0, 0, 0, 0, 137, 162, 172, 0, 101,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 189,
	0, 0, 0, 390, 0, 0, 322, 161, 155, 154,
	434, 0, 376, 357, 57, 0, 0, 374, 327, 403,
	365, 409, 392, 417, 370, 366, 253, 393, 292, 338,
	265, 267, 287, 294, 296, 298, 299, 347, 348, 360,
	381, 394, 395, 396, 291, 275, 375, 276, 309, 277,
	254, 283, 281, 284, 383, 285, 256, 361, 400, 0,
	304, 371, 334, 257, 333, 362, 399, 398, 266, 425,
	431, 432, 0, 0, 437, 157, 158, 159, 446, 451,
	452, 453, 455, 456, 457, 458, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 430, 323,
	324, 0, 302, 250, 251, 413, 288, 353, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 349,
	429, 192, 0, 0, 459, 200, 0, 0, 0, 160,
	0, 201, 359, 0, 380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 411, 423,
	440, 443, 0, 0, 0, 0, 255, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 438, 0, 0, 343,
	344, 345, 346, 306, 0, 273, 441, 369, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 0, 0, 0, 0, 0, 435, 436, 301,
	308, 454, 310, 272, 358, 303, 420, 317, 0, 447,
	0, 448, 0, 0, 0, 0, 350, 313, 314, 384,
	318, 328, 372, 419, 356, 377, 270, 410, 385, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	282, 248, 278, 279, 286, 368, 263, 401, 379, 0,
	252, 0, 326, 139, 367, 300, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 0, 0, 355, 426,
	427, 428, 450, 412, 466, 202, 39, 190, 193, 195,
	194, 0, 49, 0, 0, 295, 5, 0, 325, 0,
	0, 0, 118, 203, 464, 0, 0, 305, 0, 0,
	0, 460, 0, 461, 0, 0, 0, 0, 465, 386,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1081, 0, 0,
	196, 0, 0, 591, 601, 0, 0, 268, 197, 462,
	0, 463, 592, 0, 600, 593, 597, 596, 594, 595,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 0, 258, 391, 408, 269, 382, 421, 274,
	389, 264, 354, 378, 0, 0, 260, 406, 388, 336,
	315, 316, 259, 0, 373, 293, 307, 290, 352, 599,
	405, 433, 289, 424, 0, 416, 262, 0, 415, 351,
	402, 407, 337, 331, 261, 404, 335, 330, 319, 297,
	449, 320, 321, 311, 363, 329, 364, 312, 341, 340,
	342, 0, 0, 0, 0, 0, 444, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 322, 0, 0, 0, 434,
	0, 376, 357, 0, 0, 0, 374, 327, 403, 365,
	409, 392, 417, 370, 366, 253, 393, 292, 338, 265,
	267, 287, 294, 296, 298, 299, 347, 348, 360, 381,
	394, 395, 396, 291, 275, 375, 276, 309, 277, 254,
	283, 281, 284, 383, 285, 256, 361, 400, 0, 304,
	371, 334, 257, 333, 362, 399, 398, 266, 425, 431,
	432, 0, 0, 437, 0, 0, 0, 446, 451, 452,
	453, 455, 456, 457, 458, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 430, 323, 324,
	0, 302, 250, 251, 476, 288, 353, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 349, 429,
	0, 0, 0, 459, 475, 0, 0, 0, 0, 0,
	472, 359, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 411, 423, 440,
	443, 0, 0, 0, 0, 255, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 438, 0, 0, 343, 344,
	345, 346, 306, 0, 273, 441, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 301, 308,
	454, 310, 272, 358, 303, 420, 317, 0, 447, 0,
	448, 0, 0, 0, 0, 350, 313, 314, 384, 318,
	328, 372, 419, 356, 377, 270, 410, 385, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 282,
	248, 278, 279, 286, 473, 470, 401, 474, 0, 252,
	0, 326, 0, 367, 300, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 0, 0, 0, 426, 427,
	428, 450, 412, 0, 471, 174, 51, 163, 138, 0,
	0, 0, 0, 0, 0, 355, 494, 0, 0, 0,
	0, 466, 477, 464, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 0, 0, 0, 460, 0,
	461, 0, 0, 0, 0, 465, 386, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 499, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 462, 0, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 391, 408, 269, 382, 421, 274, 389, 264, 354,
	378, 0, 0, 260, 406, 388, 336, 315, 316, 259,
	0, 373, 293, 307, 290, 352, 0, 405, 433, 289,
	424, 0, 416, 262, 0, 415, 351, 402, 407, 337,
	331, 261, 404, 335, 330, 319, 297, 449, 320, 321,
	311, 363, 329, 364, 312, 341, 340, 342, 0, 0,
	0, 0, 0, 444, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 322, 0, 0, 0, 434, 0, 376, 357,
	0, 0, 0, 374, 327, 403, 365, 409, 392, 417,
	370, 366, 253, 393, 292, 338, 265, 267, 287, 294,
	296, 298, 299, 347, 348, 360, 381, 394, 395, 396,
	291, 275, 375, 276, 309, 277, 254, 283, 281, 284,
	383, 285, 256, 361, 400, 0, 304, 371, 334, 257,
	333, 362, 399, 398, 266, 425, 431, 432, 0, 0,
	437, 0, 0, 0, 446, 451, 452, 453, 455, 456,
	457, 458, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 430, 323, 324, 0, 302, 250,
	251, 476, 288, 353, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 349, 429, 0, 0, 0,
	459, 475, 0, 0, 0, 0, 0, 472, 359, 0,
	380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 411, 423, 440, 443, 0, 0,
	0, 0, 255, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 438, 0, 0, 343, 344, 345, 346, 495,
	497, 273, 441, 369, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 301, 308, 454, 310, 272,
	358, 303, 420, 317, 0, 447, 0, 448, 0, 0,
	0, 0, 350, 313, 314, 384, 318, 328, 372, 419,
	356, 377, 270, 410, 385, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 282, 248, 278, 279,
	286, 473, 470, 401, 474, 0, 252, 0, 326, 139,
	367, 300, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 0, 0, 355, 426, 427, 428, 450, 412,
	466, 471, 907, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 325, 0, 0, 0, 0, 477,
	464, 0, 0, 305, 0, 0, 0, 460, 0, 461,
	0, 0, 0, 0, 465, 386, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 462, 0, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 893, 0, 0, 0, 0, 0, 0, 258,
	391, 408, 269, 382, 421, 274, 389, 264, 354, 378,
	0, 0, 2182, 2184, 2185, 2186, 2187, 2188, 2189, 0,
	2194, 2190, 2191, 2192, 2193, 0, 2177, 2178, 2179, 2180,
	891, 2161, 2183, 0, 2162, 351, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2174, 2175, 2172, 2173, 2181,
	363, 329, 364, 312, 341, 340, 342, 918, 920, 922,
	924, 927, 444, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 322, 0, 0, 0, 2176, 0, 376, 357, 0,
	0, 0, 374, 327, 403, 365, 409, 392, 417, 370,
	366, 253, 393, 292, 338, 265, 267, 287, 294, 296,
	298, 299, 347, 348, 360, 381, 394, 395, 396, 291,
	275, 375, 276, 309, 277, 254, 283, 281, 284, 383,
	285, 256, 361, 400, 0, 304, 371, 334, 257, 333,
	362, 399, 398, 266, 425, 431, 432, 0, 0, 437,
	0, 0, 0, 446, 451, 452, 453, 455, 456, 457,
	458, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 430, 323, 324, 0, 302, 250, 251,
	476, 288, 353, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 349, 429, 0, 0, 0, 459,
	475, 0, 0, 0, 0, 0, 472, 359, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 411, 423, 440, 443, 0, 0, 0,
	0, 255, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 438, 0, 0, 343, 344, 345, 346, 306, 0,
	273, 441, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 301, 308, 454, 310, 272, 358,
	303, 420, 317, 0, 447, 0, 448, 0, 0, 0,
	0, 350, 313, 314, 384, 318, 328, 372, 419, 356,
	377, 270, 410, 385, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 282, 248, 278, 279, 286,
	473, 470, 401, 474, 0, 252, 917, 326, 0, 367,
	300, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 0, 0, 355, 426, 427, 428, 450, 412, 466,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 325, 0, 0, 0, 0, 477, 464,
	0, 0, 305, 0, 0, 0, 460, 0, 461, 0,
	0, 0, 0, 465, 386, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 462, 0, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 2034, 2037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 391,
	408, 269, 382, 421, 274, 389, 264, 354, 378, 0,
	0, 260, 406, 388, 336, 315, 316, 259, 0, 373,
	293, 307, 290, 352, 0, 405, 433, 289, 424, 0,
	416, 262, 0, 415, 351, 402, 407, 337, 331, 261,
	404, 335, 330, 319, 297, 449, 320, 321, 311, 363,
	329, 364, 312, 341, 340, 342, 0, 0, 0, 0,
	0, 444, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	418, 0, 0, 0, 2033, 0, 2032, 390, 2030, 2035,
	322, 0, 0, 0, 434, 0, 376, 357, 0, 0,
	0, 374, 327, 403, 365, 409, 392, 417, 370, 366,
	253, 393, 292, 338, 265, 267, 287, 294, 296, 298,
	299, 347, 348, 360, 381, 394, 395, 396, 291, 275,
	375, 276, 309, 277, 254, 283, 281, 284, 383, 285,
	256, 361, 400, 2036, 304, 371, 334, 257, 333, 362,
	399, 398, 266, 425, 431, 432, 0, 0, 437, 0,
	0, 0, 446, 451, 452, 453, 455, 456, 457, 458,
	0, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 430, 323, 324, 0, 302, 250, 251, 476,
	288, 353, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 349, 429, 0, 0, 0, 459, 475,
	0, 0, 0, 0, 0, 472, 359, 0, 380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 411, 423, 440, 443, 0, 0, 0, 0,
	255, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	438, 0, 0, 343, 344, 345, 346, 306, 0, 273,
	441, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 301, 308, 454, 310, 272, 358, 303,
	420, 317, 0, 447, 0, 448, 0, 0, 0, 0,
	350, 313, 314, 384, 318, 328, 372, 419, 356, 377,
	270, 410, 385, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 282, 248, 278, 279, 286, 473,
	470, 401, 474, 0, 252, 0, 326, 0, 367, 300,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	0, 0, 355, 426, 427, 428, 450, 412, 466, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	0, 0, 325, 0, 0, 0, 0, 477, 464, 0,
	0, 305, 0, 0, 0, 460, 0, 461, 0, 0,
	0, 0, 465, 386, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 462, 0, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 2055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 391, 408,
	269, 382, 421, 274, 389, 264, 354, 378, 0, 0,
	260, 406, 388, 336, 315, 316, 259, 0, 373, 293,
	307, 290, 352, 0, 405, 433, 289, 424, 0, 416,
	262, 0, 415, 351, 402, 407, 337, 331, 261, 404,
	335, 330, 319, 297, 449, 320, 321, 311, 363, 329,
	364, 312, 341, 340, 342, 0, 0, 0, 0, 0,
	444, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2054, 418,
	0, 0, 0, 2059, 2057, 0, 390, 0, 2058, 322,
	0, 0, 0, 434, 0, 376, 357, 0, 0, 2052,
	374, 327, 403, 365, 409, 392, 417, 370, 366, 253,
	393, 292, 338, 265, 267, 287, 294, 296, 298, 299,
	347, 348, 360, 381, 394, 395, 396, 291, 275, 375,
	276, 309, 277, 254, 283, 281, 284, 383, 285, 256,
	361, 400, 0, 304, 371, 334, 257, 333, 362, 399,
	398, 266, 425, 431, 432, 0, 0, 437, 0, 0,
	0, 446, 451, 452, 453, 455, 456, 457, 458, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 430, 323, 324, 0, 302, 250, 251, 476, 288,
	353, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 349, 429, 0, 0, 0, 459, 475, 0,
	0, 0, 0, 0, 472, 359, 0, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	387, 411, 423, 440, 443, 0, 0, 0, 0, 255,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 438,
	0, 0, 343, 344, 345, 346, 306, 0, 273, 441,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 301, 308, 454, 310, 272, 358, 303, 420,
	317, 0, 447, 0, 448, 0, 0, 0, 0, 350,
	313, 314, 384, 318, 328, 372, 419, 356, 377, 270,
	410, 385, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 282, 248, 278, 279, 286, 473, 470,
	401, 474, 0, 252, 0, 326, 0, 367, 300, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 0,
	0, 355, 426, 427, 428, 450, 412, 466, 471, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 295, 0,
	0, 325, 0, 0, 0, 0, 477, 464, 0, 0,
	305, 0, 0, 0, 460, 0, 461, 0, 0, 0,
	0, 465, 386, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 1787, 0, 0, 0,
	268, 197, 462, 0, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 1014, 1015, 1016,
	1013, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 391, 408, 269,
	382, 421, 274, 389, 264, 354, 378, 0, 0, 260,
	406, 388, 336, 315, 316, 259, 0, 373, 293, 307,
	290, 352, 0, 405, 433, 289, 424, 0, 416, 262,
	0, 415, 351, 402, 407, 337, 331, 261, 404, 335,
	330, 319, 297, 449, 320, 321, 311, 363, 329, 364,
	312, 341, 340, 342, 0, 0, 0, 0, 0, 444,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 322, 0,
	0, 0, 434, 0, 376, 357, 0, 0, 0, 374,
	327, 403, 365, 409, 392, 417, 370, 366, 253, 393,
	292, 338, 265, 267, 287, 294, 296, 298, 299, 347,
	348, 360, 381, 394, 395, 396, 291, 275, 375, 276,
	309, 277, 254, 283, 281, 284, 383, 285, 256, 361,
	400, 0, 304, 371, 334, 257, 333, 362, 399, 398,
	266, 425, 431, 432, 0, 0, 437, 0, 0, 0,
	446, 451, 452, 453, 455, 456, 457, 458, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	430, 323, 324, 0, 302, 250, 251, 476, 288, 353,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 349, 429, 0, 0, 0, 459, 475, 0, 0,
	0, 0, 0, 472, 359, 0, 380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 387,
	411, 423, 440, 443, 0, 0, 0, 0, 255, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 438, 0,
	0, 343, 344, 345, 346, 306, 0, 273, 441, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 301, 308, 454, 310, 272, 358, 303, 420, 317,
	0, 447, 0, 448, 0, 0, 0, 0, 350, 313,
	314, 384, 318, 328, 372, 419, 356, 377, 270, 410,
	385, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 282, 248, 278, 279, 286, 473, 470, 401,
	474, 0, 252, 0, 326, 0, 367, 300, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 0, 0,
	355, 426, 427, 428, 450, 412, 466, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 824, 0,
	325, 0, 0, 0, 0, 477, 464, 0, 0, 305,
	0, 0, 0, 460, 0, 461, 0, 0, 0, 0,
	465, 386, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 831, 832, 0, 0, 0, 0, 268,
	197, 462, 0, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 391, 819, 269, 382,
	421, 274, 389, 264, 354, 378, 0, 0, 260, 406,
	388, 336, 315, 316, 259, 0, 373, 293, 307, 290,
	352, 0, 405, 433, 289, 424, 809, 416, 262, 808,
	415, 351, 402, 407, 337, 331, 261, 404, 335, 330,
	319, 297, 449, 320, 321, 311, 363, 329, 364, 312,
	341, 340, 342, 0, 0, 0, 0, 0, 444, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 322, 0, 0,
	0, 434, 0, 376, 357, 0, 0, 0, 374, 327,
	403, 365, 409, 392, 417, 822, 366, 253, 393, 292,
	338, 265, 267, 287, 294, 296, 298, 299, 347, 348,
	360, 381, 394, 395, 396, 291, 275, 375, 276, 309,
	277, 254, 283, 281, 284, 383, 285, 256, 361, 400,
	0, 304, 371, 334, 257, 333, 362, 399, 398, 266,
	425, 431, 432, 0, 0, 437, 0, 0, 0, 446,
	451, 452, 453, 455, 456, 457, 458, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 430,
	323, 324, 0, 302, 250, 251, 476, 288, 353, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	349, 429, 0, 0, 0, 459, 475, 0, 0, 0,
	0, 0, 472, 359, 0, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 387, 411,
	423, 440, 443, 0, 0, 0, 0, 255, 442, 0,
	0, 0, 0, 0, 0, 823, 0, 414, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 826, 0, 0,
	343, 344, 345, 346, 306, 0, 273, 441, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	301, 308, 454, 310, 272, 358, 303, 420, 317, 0,
	447, 0, 448, 0, 0, 0, 0, 833, 820, 829,
	821, 318, 328, 372, 419, 356, 377, 270, 410, 385,
	830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 282, 248, 278, 279, 286, 473, 470, 401, 474,
	0, 252, 0, 326, 0, 367, 300, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 0, 0, 355,
	426, 427, 428, 450, 412, 466, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 0, 325,
	0, 0, 0, 0, 477, 464, 0, 0, 305, 0,
	0, 0, 460, 0, 461, 0, 0, 0, 0, 465,
	386, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	462, 0, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 2055, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 391, 408, 269, 382, 421,
	274, 389, 264, 354, 378, 0, 0, 260, 406, 388,
	336, 315, 316, 259, 0, 373, 293, 307, 290, 352,
	0, 405, 433, 289, 424, 0, 416, 262, 0, 415,
	351, 402, 407, 337, 331, 261, 404, 335, 330, 319,
	297, 449, 320, 321, 311, 363, 329, 364, 312, 341,
	340, 342, 0, 0, 0, 0, 0, 444, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2054, 418, 0, 0, 0,
	2059, 2057, 0, 390, 0, 2058, 322, 0, 0, 0,
	434, 0, 376, 357, 0, 0, 0, 374, 327, 403,
	365, 409, 392, 417, 370, 366, 253, 393, 292, 338,
	265, 267, 287, 294, 296, 298, 299, 347, 348, 360,
	381, 394, 395, 396, 291, 275, 375, 276, 309, 277,
	254, 283, 281, 284, 383, 285, 256, 361, 400, 0,
	304, 371, 334, 257, 333, 362, 399, 398, 266, 425,
	431, 432, 0, 0, 437, 0, 0, 0, 446, 451,
	452, 453, 455, 456, 457, 458, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 430, 323,
	324, 0, 302, 250, 251, 476, 288, 353, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 349,
	429, 0, 0, 0, 459, 475, 0, 0, 0, 0,
	0, 472, 359, 0, 380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 411, 423,
	440, 443, 0, 0, 0, 0, 255, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 438, 0, 0, 343,
	344, 345, 346, 306, 0, 273, 441, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 301,
	308, 454, 310, 272, 358, 303, 420, 317, 0, 447,
	0, 448, 0, 0, 0, 0, 350, 313, 314, 384,
	318, 328, 372, 419, 356, 377, 270, 410, 385, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	282, 248, 278, 279, 286, 473, 470, 401, 474, 0,
	252, 0, 326, 0, 367, 300, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 174, 0,
	0, 249, 244, 245, 246, 247, 0, 0, 355, 426,
	427, 428, 450, 412, 466, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 325, 0,
	0, 0, 0, 477, 464, 0, 0, 305, 0, 0,
	0, 460, 0, 461, 0, 0, 115, 0, 465, 386,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 1830, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 462,
	0, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 391, 408, 269, 382, 421, 274,
	389, 264, 354, 378, 0, 0, 260, 406, 388, 336,
	315, 316, 259, 0, 373, 293, 307, 290, 352, 0,
	405, 433, 289, 424, 0, 416, 262, 0, 415, 351,
	402, 407, 337, 331, 261, 404, 335, 330, 319, 297,
	449, 320, 321, 311, 363, 329, 364, 312, 341, 340,
	342, 0, 0, 0, 0, 0, 444, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 322, 0, 0, 0, 434,
	0, 376, 357, 0, 0, 0, 374, 327, 403, 365,
	409, 392, 417, 370, 366, 253, 393, 292, 338, 265,
	267, 287, 294, 296, 298, 299, 347, 348, 360, 381,
	394, 395, 396, 291, 275, 375, 276, 309, 277, 254,
	283, 281, 284, 383, 285, 256, 361, 400, 0, 304,
	371, 334, 257, 333, 362, 399, 398, 266, 425, 431,
	432, 0, 0, 437, 0, 0, 0, 446, 451, 452,
	453, 455, 456, 457, 458, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 430, 323, 324,
	0, 302, 250, 251, 476, 288, 353, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 349, 429,
	0, 0, 0, 459, 475, 0, 0, 0, 0, 0,
	472, 359, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 411, 423, 440,
	443, 0, 0, 0, 0, 255, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 438, 0, 0, 343, 344,
	345, 346, 306, 0, 273, 441, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 301, 308,
	454, 310, 272, 358, 303, 420, 317, 0, 447, 0,
	448, 0, 0, 0, 0, 350, 313, 314, 384, 318,
	328, 372, 419, 356, 377, 270, 410, 385, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 282,
	248, 278, 279, 286, 473, 470, 401, 474, 0, 252,
	0, 326, 139, 367, 300, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 174, 0, 0,
	249, 244, 245, 246, 247, 0, 0, 355, 426, 427,
	428, 450, 412, 466, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 325, 0, 0,
	0, 0, 477, 464, 0, 0, 305, 0, 0, 0,
	460, 0, 461, 0, 0, 115, 0, 465, 386, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 1821, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 462, 0,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 391, 408, 269, 382, 421, 274, 389,
	264, 354, 378, 0, 0, 260, 406, 388, 336, 315,
	316, 259, 0, 373, 293, 307, 290, 352, 0, 405,
	433, 289, 424, 0, 416, 262, 0, 415, 351, 402,
	407, 337, 331, 261, 404, 335, 330, 319, 297, 449,
	320, 321, 311, 363, 329, 364, 312, 341, 340, 342,
	0, 0, 0, 0, 0, 444, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 322, 0, 0, 0, 434, 0,
	376, 357, 0, 0, 0, 374, 327, 403, 365, 409,
	392, 417, 370, 366, 253, 393, 292, 338, 265, 267,
	287, 294, 296, 298, 299, 347, 348, 360, 381, 394,
	395, 396, 291, 275, 375, 276, 309, 277, 254, 283,
	281, 284, 383, 285, 256, 361, 400, 0, 304, 371,
	334, 257, 333, 362, 399, 398, 266, 425, 431, 432,
	0, 0, 437, 0, 0, 0, 446, 451, 452, 453,
	455, 456, 457, 458, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 430, 323, 324, 0,
	302, 250, 251, 476, 288, 353, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 349, 429, 0,
	0, 0, 459, 475, 0, 0, 0, 0, 0, 472,
	359, 0, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 411, 423, 440, 443,
	0, 0, 0, 0, 255, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 438, 0, 0, 343, 344, 345,
	346, 306, 0, 273, 441, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 301, 308, 454,
	310, 272, 358, 303, 420, 317, 0, 447, 0, 448,
	0, 0, 0, 0, 350, 313, 314, 384, 318, 328,
	372, 419, 356, 377, 270, 410, 385, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 282, 248,
	278, 279, 286, 473, 470, 401, 474, 0, 252, 0,
	326, 139, 367, 300, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 174, 0, 0, 249,
	244, 245, 246, 247, 0, 0, 355, 426, 427, 428,
	450, 412, 466, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 325, 0, 0, 0,
	0, 477, 464, 0, 0, 305, 0, 0, 0, 460,
	0, 461, 0, 0, 115, 0, 465, 386, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 462, 0, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 391, 408, 269, 382, 421, 274, 389, 264,
	354, 378, 0, 0, 260, 406, 388, 336, 315, 316,
	259, 0, 373, 293, 307, 290, 352, 0, 405, 433,
	289, 424, 0, 416, 262, 0, 415, 351, 402, 407,
	337, 331, 261, 404, 335, 330, 319, 297, 449, 320,
	321, 311, 363, 329, 364, 312, 341, 340, 342, 0,
	0, 0, 0, 0, 444, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 322, 0, 0, 0, 434, 0, 376,
	357, 0, 0, 0, 374, 327, 403, 365, 409, 392,
	417, 370, 366, 253, 393, 292, 338, 265, 267, 287,
	294, 296, 298, 299, 347, 348, 360, 381, 394, 395,
	396, 291, 275, 375, 276, 309, 277, 254, 283, 281,
	284, 383, 285, 256, 361, 400, 0, 304, 371, 334,
	257, 333, 362, 399, 398, 266, 425, 431, 432, 0,
	0, 437, 0, 0, 0, 446, 451, 452, 453, 455,
	456, 457, 458, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 430, 323, 324, 0, 302,
	250, 251, 476, 288, 353, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 349, 429, 0, 0,
	0, 459, 475, 0, 0, 0, 0, 0, 472, 359,
	0, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 411, 423, 440, 443, 0,
	0, 0, 0, 255, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 438, 0, 0, 343, 344, 345, 346,
	306, 0, 273, 441, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 301, 308, 454, 310,
	272, 358, 303, 420, 317, 0, 447, 0, 448, 0,
	0, 0, 0, 350, 313, 314, 384, 318, 328, 372,
	419, 356, 377, 270, 410, 385, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 282, 248, 278,
	279, 286, 473, 470, 401, 474, 0, 252, 0, 326,
	139, 367, 300, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 0, 0, 355, 426, 427, 428, 450,
	412, 466, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 325, 0, 0, 0, 0,
	477, 464, 0, 0, 305, 0, 0, 0, 460, 0,
	461, 0, 0, 0, 0, 465, 386, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 831, 832,
	0, 0, 0, 0, 268, 197, 462, 0, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 391, 408, 269, 382, 421, 274, 389, 264, 354,
	378, 0, 0, 260, 406, 388, 336, 315, 316, 259,
	0, 373, 293, 307, 290, 352, 0, 405, 433, 289,
	424, 809, 416, 262, 808, 415, 351, 402, 407, 337,
	331, 261, 404, 335, 330, 319, 297, 449, 320, 321,
	311, 363, 329, 364, 312, 341, 340, 342, 0, 0,
	0, 0, 0, 444, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 322, 0, 0, 0, 434, 0, 376, 357,
	0, 0, 0, 374, 327, 403, 365, 409, 392, 417,
	370, 366, 253, 393, 292, 338, 265, 267, 287, 294,
	296, 298, 299, 347, 348, 360, 381, 394, 395, 396,
	291, 275, 375, 276, 309, 277, 254, 283, 281, 284,
	383, 285, 256, 361, 400, 0, 304, 371, 334, 257,
	333, 362, 399, 398, 266, 425, 431, 432, 0, 0,
	437, 0, 0, 0, 446, 451, 452, 453, 455, 456,
	457, 458, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 430, 323, 324, 0, 302, 250,
	251, 476, 288, 353, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 349, 429, 0, 0, 0,
	459, 475, 0, 0, 0, 0, 0, 472, 359, 0,
	380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 411, 423, 440, 443, 0, 0,
	0, 0, 255, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 438, 0, 0, 343, 344, 345, 346, 306,
	0, 273, 441, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 301, 308, 454, 310, 272,
	358, 303, 420, 317, 0, 447, 0, 448, 0, 0,
	0, 0, 833, 1739, 829, 1740, 318, 328, 372, 419,
	356, 377, 270, 410, 385, 830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 282, 248, 278, 279,
	286, 473, 470, 401, 474, 0, 252, 0, 326, 0,
	367, 300, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 0, 0, 355, 426, 427, 428, 450, 412,
	466, 471, 0, 2524, 0, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 325, 0, 0, 0, 0, 477,
	464, 0, 0, 305, 0, 0, 0, 460, 0, 461,
	0, 0, 0, 0, 465, 386, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 462, 0, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	391, 408, 269, 382, 421, 274, 389, 264, 354, 378,
	0, 0, 260, 406, 388, 336, 315, 316, 259, 0,
	373, 293, 307, 290, 352, 0, 405, 433, 289, 424,
	0, 416, 262, 0, 415, 351, 402, 407, 337, 331,
	261, 404, 335, 330, 319, 297, 449, 320, 321, 311,
	363, 329, 364, 312, 341, 340, 342, 0, 0, 0,
	0, 0, 444, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 2527, 0, 0, 2526, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 322, 0, 0, 0, 434, 0, 376, 357, 0,
	0, 0, 374, 327, 403, 365, 409, 392, 417, 370,
	366, 253, 393, 292, 338, 265, 267, 287, 294, 296,
	298, 299, 347, 348, 360, 381, 394, 395, 396, 291,
	275, 375, 276, 309, 277, 254, 283, 281, 284, 383,
	285, 256, 361, 400, 0, 304, 371, 334, 257, 333,
	362, 399, 398, 266, 425, 431, 432, 0, 0, 437,
	0, 0, 0, 446, 451, 452, 453, 455, 456, 457,
	458, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 430, 323, 324, 0, 302, 250, 251,
	476, 288, 353, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 349, 429, 0, 0, 0, 459,
	475, 0, 0, 0, 0, 0, 472, 359, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 411, 423, 440, 443, 0, 0, 0,
	0, 255, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 438, 0, 0, 343, 344, 345, 346, 306, 0,
	273, 441, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 301, 308, 454, 310, 272, 358,
	303, 420, 317, 0, 447, 0, 448, 0, 0, 0,
	0, 350, 313, 314, 384, 318, 328, 372, 419, 356,
	377, 270, 410, 385, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 282, 248, 278, 279, 286,
	473, 470, 401, 474, 0, 252, 0, 326, 0, 367,
	300, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 0, 0, 355, 426, 427, 428, 450, 412, 466,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 1268, 0, 325, 0, 0, 0, 0, 477, 464,
	0, 0, 305, 0, 0, 0, 460, 0, 461, 0,
	0, 0, 0, 465, 386, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 1266, 0,
	0, 0, 268, 197, 462, 0, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1264, 0, 0, 0, 0, 0, 0, 258, 391,
	408, 269, 382, 421, 274, 389, 264, 354, 378, 0,
	0, 260, 406, 388, 336, 315, 316, 259, 0, 373,
	293, 307, 290, 352, 0, 405, 433, 289, 424, 0,
	416, 262, 0, 415, 351, 402, 407, 337, 331, 261,
	404, 335, 330, 319, 297, 449, 320, 321, 311, 363,
	329, 364, 312, 341, 340, 342, 0, 0, 0, 0,
	0, 444, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	322, 0, 0, 0, 434, 0, 376, 357, 0, 0,
	0, 374, 327, 403, 365, 409, 392, 417, 370, 366,
	253, 393, 292, 338, 265, 267, 287, 294, 296, 298,
	299, 347, 348, 360, 381, 394, 395, 396, 291, 275,
	375, 276, 309, 277, 254, 283, 281, 284, 383, 285,
	256, 361, 400, 0, 304, 371, 334, 257, 333, 362,
	399, 398, 266, 425, 431, 432, 0, 0, 437, 0,
	0, 0, 446, 451, 452, 453, 455, 456, 457, 458,
	0, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 430, 323, 324, 0, 302, 250, 251, 476,
	288, 353, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 349, 429, 0, 0, 0, 459, 475,
	0, 0, 0, 0, 0, 472, 359, 0, 380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 411, 423, 440, 443, 0, 0, 0, 0,
	255, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	438, 0, 0, 343, 344, 345, 346, 306, 0, 273,
	441, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 301, 308, 454, 310, 272, 358, 303,
	420, 317, 0, 447, 0, 448, 0, 0, 0, 0,
	350, 313, 314, 384, 318, 328, 372, 419, 356, 377,
	270, 410, 385, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 282, 248, 278, 279, 286, 473,
	470, 401, 474, 0, 252, 0, 326, 0, 367, 300,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	0, 0, 355, 426, 427, 428, 450, 412, 466, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	1262, 0, 325, 0, 0, 0, 0, 477, 464, 0,
	0, 305, 0, 0, 0, 460, 0, 461, 0, 0,
	0, 0, 465, 386, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 1266, 0, 0,
	0, 268, 197, 462, 0, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1264, 0, 0, 0, 0, 0, 0, 258, 391, 408,
	269, 382, 421, 274, 389, 264, 354, 378, 0, 0,
	260, 406, 388, 336, 315, 316, 259, 0, 373, 293,
	307, 290, 352, 0, 405, 433, 289, 424, 0, 416,
	262, 0, 415, 351, 402, 407, 337, 331, 261, 404,
	335, 330, 319, 297, 449, 320, 321, 311, 363, 329,
	364, 312, 341, 340, 342, 0, 0, 0, 0, 0,
	444, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 322,
	0, 0, 0, 434, 0, 376, 357, 0, 0, 0,
	374, 327, 403, 365, 409, 392, 417, 370, 366, 253,
	393, 292, 338, 265, 267, 287, 294, 296, 298, 299,
	347, 348, 360, 381, 394, 395, 396, 291, 275, 375,
	276, 309, 277, 254, 283, 281, 284, 383, 285, 256,
	361, 400, 0, 304, 371, 334, 257, 333, 362, 399,
	398, 266, 425, 431, 432, 0, 0, 437, 0, 0,
	0, 446, 451, 452, 453, 455, 456, 457, 458, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 430, 323, 324, 0, 302, 250, 251, 476, 288,
	353, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 349, 429, 0, 0, 0, 459, 475, 0,
	0, 0, 0, 0, 472, 359, 0, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	387, 411, 423, 440, 443, 0, 0, 0, 0, 255,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 438,
	0, 0, 343, 344, 345, 346, 306, 0, 273, 441,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 301, 308, 454, 310, 272, 358, 303, 420,
	317, 0, 447, 0, 448, 0, 0, 0, 0, 350,
	313, 314, 384, 318, 328, 372, 419, 356, 377, 270,
	410, 385, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 282, 248, 278, 279, 286, 473, 470,
	401, 474, 0, 252, 0, 326, 0, 367, 300, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 0,
	0, 355, 426, 427, 428, 450, 412, 466, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 325, 0, 0, 0, 0, 477, 464, 0, 0,
	305, 0, 0, 0, 460, 0, 461, 0, 0, 0,
	0, 465, 386, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3422, 0, 196, 653, 0, 0, 0, 0, 0,
	268, 197, 462, 0, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 391, 408, 269,
	382, 421, 274, 389, 264, 354, 378, 0, 0, 260,
	406, 388, 336, 315, 316, 259, 0, 373, 293, 307,
	290, 352, 0, 405, 433, 289, 424, 0, 416, 262,
	0, 415, 351, 402, 407, 337, 331, 261, 404, 335,
	330, 319, 297, 449, 320, 321, 311, 363, 329, 364,
	312, 341, 340, 342, 0, 0, 0, 0, 0, 444,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 322, 0,
	0, 0, 434, 0, 376, 357, 0, 0, 0, 374,
	327, 403, 365, 409, 392, 417, 370, 366, 253, 393,
	292, 338, 265, 267, 287, 294, 296, 298, 299, 347,
	348, 360, 381, 394, 395, 396, 291, 275, 375, 276,
	309, 277, 254, 283, 281, 284, 383, 285, 256, 361,
	400, 0, 304, 371, 334, 257, 333, 362, 399, 398,
	266, 425, 431, 432, 0, 0, 437, 0, 0, 0,
	446, 451, 452, 453, 455, 456, 457, 458, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	430, 323, 324, 0, 302, 250, 251, 476, 288, 353,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 349, 429, 0, 0, 0, 459, 475, 0, 0,
	0, 0, 0, 472, 359, 0, 380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 387,
	411, 423, 440, 443, 0, 0, 0, 0, 255, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 438, 0,
	0, 343, 344, 345, 346, 306, 0, 273, 441, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 301, 308, 454, 310, 272, 358, 303, 420, 317,
	0, 447, 0, 448, 0, 0, 0, 0, 350, 313,
	314, 384, 318, 328, 372, 419, 356, 377, 270, 410,
	385, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 282, 248, 278, 279, 286, 473, 470, 401,
	474, 0, 252, 0, 326, 0, 367, 300, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 0, 0,
	355, 426, 427, 428, 450, 412, 466, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 0, 0,
	325, 0, 0, 0, 0, 477, 464, 0, 0, 305,
	0, 0, 0, 460, 0, 461, 0, 0, 0, 0,
	465, 386, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 1266, 0, 0, 0, 268,
	197, 462, 0, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1264, 0,
	0, 0, 0, 0, 0, 258, 391, 408, 269, 382,
	421, 274, 389, 264, 354, 378, 0, 0, 260, 406,
	388, 336, 315, 316, 259, 0, 373, 293, 307, 290,
	352, 0, 405, 433, 289, 424, 0, 416, 262, 0,
	415, 351, 402, 407, 337, 331, 261, 404, 335, 330,
	319, 297, 449, 320, 321, 311, 363, 329, 364, 312,
	341, 340, 342, 0, 0, 0, 0, 0, 444, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 322, 0, 0,
	0, 434, 0, 376, 357, 0, 0, 0, 374, 327,
	403, 365, 409, 392, 417, 370, 366, 253, 393, 292,
	338, 265, 267, 287, 294, 296, 298, 299, 347, 348,
	360, 381, 394, 395, 396, 291, 275, 375, 276, 309,
	277, 254, 283, 281, 284, 383, 285, 256, 361, 400,
	0, 304, 371, 334, 257, 333, 362, 399, 398, 266,
	425, 431, 432, 0, 0, 437, 0, 0, 0, 446,
	451, 452, 453, 455, 456, 457, 458, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 430,
	323, 324, 0, 302, 250, 251, 476, 288, 353, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	349, 429, 0, 0, 0, 459, 475, 0, 0, 0,
	0, 0, 472, 359, 0, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 387, 411,
	423, 440, 443, 0, 0, 0, 0, 255, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 438, 0, 0,
	343, 344, 345, 346, 306, 0, 273, 441, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	301, 308, 454, 310, 272, 358, 303, 420, 317, 0,
	447, 0, 448, 0, 0, 0, 0, 350, 313, 314,
	384, 318, 328, 372, 419, 356, 377, 270, 410, 385,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 282, 248, 278, 279, 286, 473, 470, 401, 474,
	0, 252, 0, 326, 0, 367, 300, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 0, 0, 355,
	426, 427, 428, 450, 412, 466, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 0, 325,
	0, 0, 0, 0, 477, 464, 0, 0, 305, 0,
	0, 0, 460, 0, 461, 0, 0, 0, 0, 465,
	386, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1266, 0, 0, 0, 268, 197,
	462, 0, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3089, 0, 0,
	0, 0, 0, 0, 258, 391, 408, 269, 382, 421,
	274, 389, 264, 354, 378, 0, 0, 260, 406, 388,
	336, 315, 316, 259, 0, 373, 293, 307, 290, 352,
	0, 405, 433, 289, 424, 0, 416, 262, 0, 415,
	351, 402, 407, 337, 331, 261, 404, 335, 330, 319,
	297, 449, 320, 321, 311, 363, 329, 364, 312, 341,
	340, 342, 0, 0, 0, 0, 0, 444, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 322, 0, 0, 0,
	434, 0, 376, 357, 0, 0, 0, 374, 327, 403,
	365, 409, 392, 417, 370, 366, 253, 393, 292, 338,
	265, 267, 287, 294, 296, 298, 299, 347, 348, 360,
	381, 394, 395, 396, 291, 275, 375, 276, 309, 277,
	254, 283, 281, 284, 383, 285, 256, 361, 400, 0,
	304, 371, 334, 257, 333, 362, 399, 398, 266, 425,
	431, 432, 0, 0, 437, 0, 0, 0, 446, 451,
	452, 453, 455, 456, 457, 458, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 430, 323,
	324, 0, 302, 250, 251, 476, 288, 353, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 349,
	429, 0, 0, 0, 459, 475, 0, 0, 0, 0,
	0, 472, 359, 0, 380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 411, 423,
	440, 443, 0, 0, 0, 0, 255, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 438, 0, 0, 343,
	344, 345, 346, 306, 0, 273, 441, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 301,
	308, 454, 310, 272, 358, 303, 420, 317, 0, 447,
	0, 448, 0, 0, 0, 0, 350, 313, 314, 384,
	318, 328, 372, 419, 356, 377, 270, 410, 385, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	282, 248, 278, 279, 286, 473, 470, 401, 474, 0,
	252, 0, 326, 0, 367, 300, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 0, 0, 355, 426,
	427, 428, 450, 412, 466, 471, 0, 0, 0, 0,
	2125, 0, 0, 0, 0, 295, 0, 0, 325, 0,
	0, 0, 0, 477, 464, 0, 0, 305, 0, 0,
	0, 460, 0, 461, 0, 0, 0, 0, 465, 386,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 2127, 0, 0, 0, 268, 197, 462,
	0, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 391, 408, 269, 382, 421, 274,
	389, 264, 354, 378, 0, 0, 260, 406, 388, 336,
	315, 316, 259, 0, 373, 293, 307, 290, 352, 0,
	405, 433, 289, 424, 0, 416, 262, 0, 415, 351,
	402, 407, 337, 331, 261, 404, 335, 330, 319, 297,
	449, 320, 321, 311, 363, 329, 364, 312, 341, 340,
	342, 0, 0, 0, 0, 0, 444, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 322, 0, 0, 0, 434,
	0, 376, 357, 0, 0, 0, 374, 327, 403, 365,
	409, 392, 417, 370, 366, 253, 393, 292, 338, 265,
	267, 287, 294, 296, 298, 299, 347, 348, 360, 381,
	394, 395, 396, 291, 275, 375, 276, 309, 277, 254,
	283, 281, 284, 383, 285, 256, 361, 400, 0, 304,
	371, 334, 257, 333, 362, 399, 398, 266, 425, 431,
	432, 0, 0, 437, 0, 0, 0, 446, 451, 452,
	453, 455, 456, 457, 458, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 430, 323, 324,
	0, 302, 250, 251, 476, 288, 353, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 349, 429,
	0, 0, 0, 459, 475, 0, 0, 0, 0, 0,
	472, 359, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 411, 423, 440,
	443, 0, 0, 0, 0, 255, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 438, 0, 0, 343, 344,
	345, 346, 306, 0, 273, 441, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 301, 308,
	454, 310, 272, 358, 303, 420, 317, 0, 447, 0,
	448, 0, 0, 0, 0, 350, 313, 314, 384, 318,
	328, 372, 419, 356, 377, 270, 410, 385, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 282,
	248, 278, 279, 286, 473, 470, 401, 474, 0, 252,
	0, 326, 0, 367, 300, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 0, 0, 355, 426, 427,
	428, 450, 412, 466, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 2146, 0, 325, 0, 0,
	0, 0, 477, 464, 0, 0, 305, 0, 0, 0,
	460, 0, 461, 0, 0, 0, 0, 465, 386, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1266, 0, 0, 0, 268, 197, 462, 0,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 391, 408, 269, 382, 421, 274, 389,
	264, 354, 378, 0, 0, 260, 406, 388, 336, 315,
	316, 259, 0, 373, 293, 307, 290, 352, 0, 405,
	433, 289, 424, 0, 416, 262, 0, 415, 351, 402,
	407, 337, 331, 261, 404, 335, 330, 319, 297, 449,
	320, 321, 311, 363, 329, 364, 312, 341, 340, 342,
	0, 0, 0, 0, 0, 444, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 322, 0, 0, 0, 434, 0,
	376, 357, 0, 0, 0, 374, 327, 403, 365, 409,
	392, 417, 370, 366, 253, 393, 292, 338, 265, 267,
	287, 294, 296, 298, 299, 347, 348, 360, 381, 394,
	395, 396, 291, 275, 375, 276, 309, 277, 254, 283,
	281, 284, 383, 285, 256, 361, 400, 0, 304, 371,
	334, 257, 333, 362, 399, 398, 266, 425, 431, 432,
	0, 0, 437, 0, 0, 0, 446, 451, 452, 453,
	455, 456, 457, 458, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 430, 323, 324, 0,
	302, 250, 251, 476, 288, 353, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 349, 429, 0,
	0, 0, 459, 475, 0, 0, 0, 0, 0, 472,
	359, 0, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 411, 423, 440, 443,
	0, 0, 0, 0, 255, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 438, 0, 0, 343, 344, 345,
	346, 306, 0, 273, 441, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 301, 308, 454,
	310, 272, 358, 303, 420, 317, 0, 447, 0, 448,
	0, 0, 0, 0, 350, 313, 314, 384, 318, 328,
	372, 419, 356, 377, 270, 410, 385, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 282, 248,
	278, 279, 286, 473, 470, 401, 474, 0, 252, 0,
	326, 0, 367, 300, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 0, 0, 355, 426, 427, 428,
	450, 412, 466, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 325, 0, 0, 0,
	0, 477, 464, 0, 0, 305, 0, 0, 0, 460,
	0, 461, 0, 0, 0, 0, 465, 386, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 653,
	0, 0, 0, 0, 0, 268, 197, 462, 0, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 391, 408, 269, 382, 421, 274, 389, 264,
	354, 378, 0, 0, 260, 406, 388, 336, 315, 316,
	259, 0, 373, 293, 307, 290, 352, 0, 405, 433,
	289, 424, 0, 416, 262, 0, 415, 351, 402, 407,
	337, 331, 261, 404, 335, 330, 319, 297, 449, 320,
	321, 311, 363, 329, 364, 312, 341, 340, 342, 0,
	0, 0, 0, 0, 444, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 322, 0, 0, 0, 434, 0, 376,
	357, 0, 0, 0, 374, 327, 403, 365, 409, 392,
	417, 370, 366, 253, 393, 292, 338, 265, 267, 287,
	294, 296, 298, 299, 347, 348, 360, 381, 394, 395,
	396, 291, 275, 375, 276, 309, 277, 254, 283, 281,
	284, 383, 285, 256, 361, 400, 0, 304, 371, 334,
	257, 333, 362, 399, 398, 266, 425, 431, 432, 0,
	0, 437, 0, 0, 0, 446, 451, 452, 453, 455,
	456, 457, 458, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 430, 323, 324, 0, 302,
	250, 251, 476, 288, 353, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 349, 429, 0, 0,
	0, 459, 475, 0, 0, 0, 0, 0, 472, 359,
	0, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 411, 423, 440, 443, 0,
	0, 0, 0, 255, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 438, 0, 0, 343, 344, 345, 346,
	306, 0, 273, 441, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 301, 308, 454, 310,
	272, 358, 303, 420, 317, 0, 447, 0, 448, 0,
	0, 0, 0, 350, 313, 314, 384, 318, 328, 372,
	419, 356, 377, 270, 410, 385, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 282, 248, 278,
	279, 286, 473, 470, 401, 474, 0, 252, 0, 326,
	0, 367, 300, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 0, 0, 355, 426, 427, 428, 450,
	412, 466, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 325, 0, 0, 0, 0,
	477, 464, 0, 0, 305, 0, 0, 0, 460, 0,
	461, 0, 0, 0, 0, 465, 386, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3441, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 462, 0, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 391, 408, 269, 382, 421, 274, 389, 264, 354,
	378, 0, 0, 260, 406, 388, 336, 315, 316, 259,
	0, 373, 293, 307, 290, 352, 0, 405, 433, 289,
	424, 0, 416, 262, 0, 415, 351, 402, 407, 337,
	331, 261, 404, 335, 330, 319, 297, 449, 320, 321,
	311, 363, 329, 364, 312, 341, 340, 342, 0, 0,
	0, 0, 0, 444, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 322, 0, 0, 0, 434, 0, 376, 357,
	0, 0, 0, 374, 327, 403, 365, 409, 392, 417,
	370, 366, 253, 393, 292, 338, 265, 267, 287, 294,
	296, 298, 299, 347, 348, 360, 381, 394, 395, 396,
	291, 275, 375, 276, 309, 277, 254, 283, 281, 284,
	383, 285, 256, 361, 400, 0, 304, 371, 334, 257,
	333, 362, 399, 398, 266, 425, 431, 432, 0, 0,
	437, 0, 0, 0, 446, 451, 452, 453, 455, 456,
	457, 458, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 430, 323, 324, 0, 302, 250,
	251, 476, 288, 353, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 349, 429, 0, 0, 0,
	459, 475, 0, 0, 0, 0, 0, 472, 359, 0,
	380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 411, 423, 440, 443, 0, 0,
	0, 0, 255, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 438, 0, 0, 343, 344, 345, 346, 306,
	0, 273, 441, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 301, 308, 454, 310, 272,
	358, 303, 420, 317, 0, 447, 0, 448, 0, 0,
	0, 0, 350, 313, 314, 384, 318, 328, 372, 419,
	356, 377, 270, 410, 385, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 282, 248, 278, 279,
	286, 473, 470, 401, 474, 0, 252, 0, 326, 0,
	367, 300, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 0, 0, 355, 426, 427, 428, 450, 412,
	466, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 325, 0, 0, 0, 0, 477,
	464, 0, 0, 305, 0, 0, 0, 460, 0, 461,
	0, 0, 0, 0, 465, 386, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 3230,
	0, 0, 0, 268, 197, 462, 0, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	391, 408, 269, 382, 421, 274, 389, 264, 354, 378,
	0, 0, 260, 406, 388, 336, 315, 316, 259, 0,
	373, 293, 307, 290, 352, 0, 405, 433, 289, 424,
	0, 416, 262, 0, 415, 351, 402, 407, 337, 331,
	261, 404, 335, 330, 319, 297, 449, 320, 321, 311,
	363, 329, 364, 312, 341, 340, 342, 0, 0, 0,
	0, 0, 444, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 322, 0, 0, 0, 434, 0, 376, 357, 0,
	0, 0, 374, 327, 403, 365, 409, 392, 417, 370,
	366, 253, 393, 292, 338, 265, 267, 287, 294, 296,
	298, 299, 347, 348, 360, 381, 394, 395, 396, 291,
	275, 375, 276, 309, 277, 254, 283, 281, 284, 383,
	285, 256, 361, 400, 0, 304, 371, 334, 257, 333,
	362, 399, 398, 266, 425, 431, 432, 0, 0, 437,
	0, 0, 0, 446, 451, 452, 453, 455, 456, 457,
	458, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 430, 323, 324, 0, 302, 250, 251,
	476, 288, 353, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 349, 429, 0, 0, 0, 459,
	475, 0, 0, 0, 0, 0, 472, 359, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 411, 423, 440, 443, 0, 0, 0,
	0, 255, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 438, 0, 0, 343, 344, 345, 346, 306, 0,
	273, 441, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 301, 308, 454, 310, 272, 358,
	303, 420, 317, 0, 447, 0, 448, 0, 0, 0,
	0, 350, 313, 314, 384, 318, 328, 372, 419, 356,
	377, 270, 410, 385, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 282, 248, 278, 279, 286,
	473, 470, 401, 474, 0, 252, 0, 326, 0, 367,
	300, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 0, 0, 355, 426, 427, 428, 450, 412, 466,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 325, 0, 0, 0, 0, 477, 464,
	0, 0, 305, 0, 0, 0, 460, 0, 461, 0,
	0, 0, 0, 465, 386, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 462, 0, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 391,
	408, 269, 382, 421, 274, 389, 264, 354, 378, 0,
	0, 260, 406, 388, 336, 315, 316, 259, 0, 373,
	293, 307, 290, 352, 0, 405, 433, 289, 424, 0,
	416, 262, 0, 415, 351, 402, 407, 337, 331, 261,
	404, 335, 330, 319, 297, 449, 320, 321, 311, 363,
	329, 364, 312, 341, 340, 342, 0, 0, 0, 0,
	0, 444, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 3355, 0, 0, 390, 0, 0,
	322, 0, 0, 0, 434, 0, 376, 357, 0, 0,
	0, 374, 327, 403, 365, 409, 392, 417, 370, 366,
	253, 393, 292, 338, 265, 267, 287, 294, 296, 298,
	299, 347, 348, 360, 381, 394, 395, 396, 291, 275,
	375, 276, 309, 277, 254, 283, 281, 284, 383, 285,
	256, 361, 400, 0, 304, 371, 334, 257, 333, 362,
	399, 398, 266, 425, 431, 432, 0, 0, 437, 0,
	0, 0, 446, 451, 452, 453, 455, 456, 457, 458,
	0, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 430, 323, 324, 0, 302, 250, 251, 476,
	288, 353, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 349, 429, 0, 0, 0, 459, 475,
	0, 0, 0, 0, 0, 472, 359, 0, 380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 411, 423, 440, 443, 0, 0, 0, 0,
	255, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	438, 0, 0, 343, 344, 345, 346, 306, 0, 273,
	441, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 301, 308, 454, 310, 272, 358, 303,
	420, 317, 0, 447, 0, 448, 0, 0, 0, 0,
	350, 313, 314, 384, 318, 328, 372, 419, 356, 377,
	270, 410, 385, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 282, 248, 278, 279, 286, 473,
	470, 401, 474, 0, 252, 0, 326, 0, 367, 300,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	0, 0, 355, 426, 427, 428, 450, 412, 466, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	0, 0, 325, 0, 0, 0, 0, 477, 464, 0,
	0, 305, 0, 0, 0, 460, 0, 461, 0, 0,
	0, 0, 465, 386, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3085, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 462, 0, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 391, 408,
	269, 382, 421, 274, 389, 264, 354, 378, 0, 0,
	260, 406, 388, 336, 315, 316, 259, 0, 373, 293,
	307, 290, 352, 0, 405, 433, 289, 424, 0, 416,
	262, 0, 415, 351, 402, 407, 337, 331, 261, 404,
	335, 330, 319, 297, 449, 320, 321, 311, 363, 329,
	364, 312, 341, 340, 342, 0, 0, 0, 0, 0,
	444, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 322,
	0, 0, 0, 434, 0, 376, 357, 0, 0, 0,
	374, 327, 403, 365, 409, 392, 417, 370, 366, 253,
	393, 292, 338, 265, 267, 287, 294, 296, 298, 299,
	347, 348, 360, 381, 394, 395, 396, 291, 275, 375,
	276, 309, 277, 254, 283, 281, 284, 383, 285, 256,
	361, 400, 0, 304, 371, 334, 257, 333, 362, 399,
	398, 266, 425, 431, 432, 0, 0, 437, 0, 0,
	0, 446, 451, 452, 453, 455, 456, 457, 458, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 430, 323, 324, 0, 302, 250, 251, 476, 288,
	353, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 349, 429, 0, 0, 0, 459, 475, 0,
	0, 0, 0, 0, 472, 359, 0, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	387, 411, 423, 440, 443, 0, 0, 0, 0, 255,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 438,
	0, 0, 343, 344, 345, 346, 306, 0, 273, 441,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 301, 308, 454, 310, 272, 358, 303, 420,
	317, 0, 447, 0, 448, 0, 0, 0, 0, 350,
	313, 314, 384, 318, 328, 372, 419, 356, 377, 270,
	410, 385, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 282, 248, 278, 279, 286, 473, 470,
	401, 474, 0, 252, 0, 326, 0, 367, 300, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 0,
	0, 355, 426, 427, 428, 450, 412, 466, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 325, 0, 0, 0, 0, 477, 464, 0, 0,
	305, 0, 0, 0, 460, 0, 461, 0, 0, 0,
	0, 465, 386, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3245, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 462, 0, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 391, 408, 269,
	382, 421, 274, 389, 264, 354, 378, 0, 0, 260,
	406, 388, 336, 315, 316, 259, 0, 373, 293, 307,
	290, 352, 0, 405, 433, 289, 424, 0, 416, 262,
	0, 415, 351, 402, 407, 337, 331, 261, 404, 335,
	330, 319, 297, 449, 320, 321, 311, 363, 329, 364,
	312, 341, 340, 342, 0, 0, 0, 0, 0, 444,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 322, 0,
	0, 0, 434, 0, 376, 357, 0, 0, 0, 374,
	327, 403, 365, 409, 392, 417, 370, 366, 253, 393,
	292, 338, 265, 267, 287, 294, 296, 298, 299, 347,
	348, 360, 381, 394, 395, 396, 291, 275, 375, 276,
	309, 277, 254, 283, 281, 284, 383, 285, 256, 361,
	400, 0, 304, 371, 334, 257, 333, 362, 399, 398,
	266, 425, 431, 432, 0, 0, 437, 0, 0, 0,
	446, 451, 452, 453, 455, 456, 457, 458, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	430, 323, 324, 0, 302, 250, 251, 476, 288, 353,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 349, 429, 0, 0, 0, 459, 475, 0, 0,
	0, 0, 0, 472, 359, 0, 380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 387,
	411, 423, 440, 443, 0, 0, 0, 0, 255, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 438, 0,
	0, 343, 344, 345, 346, 306, 0, 273, 441, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 301, 308, 454, 310, 272, 358, 303, 420, 317,
	0, 447, 0, 448, 0, 0, 0, 0, 350, 313,
	314, 384, 318, 328, 372, 419, 356, 377, 270, 410,
	385, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 282, 248, 278, 279, 286, 473, 470, 401,
	474, 0, 252, 0, 326, 0, 367, 300, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 0, 0,
	355, 426, 427, 428, 450, 412, 466, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 0, 0,
	325, 0, 0, 0, 0, 477, 464, 0, 0, 305,
	0, 0, 0, 460, 0, 461, 0, 0, 0, 0,
	465, 386, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 462, 0, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 391, 408, 269, 382,
	421, 274, 389, 264, 354, 378, 0, 0, 260, 406,
	388, 336, 315, 316, 259, 0, 373, 293, 307, 290,
	352, 0, 405, 433, 289, 424, 0, 416, 262, 0,
	415, 351, 402, 407, 337, 331, 261, 404, 335, 330,
	319, 297, 449, 320, 321, 311, 363, 329, 364, 312,
	341, 340, 342, 0, 0, 0, 0, 0, 444, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 3171, 0, 0, 390, 0, 0, 322, 0, 0,
	0, 434, 0, 376, 357, 0, 0, 0, 374, 327,
	403, 365, 409, 392, 417, 370, 366, 253, 393, 292,
	338, 265, 267, 287, 294, 296, 298, 299, 347, 348,
	360, 381, 394, 395, 396, 291, 275, 375, 276, 309,
	277, 254, 283, 281, 284, 383, 285, 256, 361, 400,
	0, 304, 371, 334, 257, 333, 362, 399, 398, 266,
	425, 431, 432, 0, 0, 437, 0, 0, 0, 446,
	451, 452, 453, 455, 456, 457, 458, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 430,
	323, 324, 0, 302, 250, 251, 476, 288, 353, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	349, 429, 0, 0, 0, 459, 475, 0, 0, 0,
	0, 0, 472, 359, 0, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 387, 411,
	423, 440, 443, 0, 0, 0, 0, 255, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 438, 0, 0,
	343, 344, 345, 346, 306, 0, 273, 441, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	301, 308, 454, 310, 272, 358, 303, 420, 317, 0,
	447, 0, 448, 0, 0, 0, 0, 350, 313, 314,
	384, 318, 328, 372, 419, 356, 377, 270, 410, 385,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 282, 248, 278, 279, 286, 473, 470, 401, 474,
	0, 252, 0, 326, 0, 367, 300, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 0, 0, 355,
	426, 427, 428, 450, 412, 466, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 0, 325,
	0, 0, 0, 0, 477, 464, 0, 0, 305, 0,
	0, 0, 460, 0, 461, 0, 0, 0, 0, 465,
	386, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 2737, 0, 0, 0, 268, 197,
	462, 0, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 391, 408, 269, 382, 421,
	274, 389, 264, 354, 378, 0, 0, 260, 406, 388,
	336, 315, 316, 259, 0, 373, 293, 307, 290, 352,
	0, 405, 433, 289, 424, 0, 416, 262, 0, 415,
	351, 402, 407, 337, 331, 261, 404, 335, 330, 319,
	297, 449, 320, 321, 311, 363, 329, 364, 312, 341,
	340, 342, 0, 0, 0, 0, 0, 444, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 322, 0, 0, 0,
	434, 0, 376, 357, 0, 0, 0, 374, 327, 403,
	365, 409, 392, 417, 370, 366, 253, 393, 292, 338,
	265, 267, 287, 294, 296, 298, 299, 347, 348, 360,
	381, 394, 395, 396, 291, 275, 375, 276, 309, 277,
	254, 283, 281, 284, 383, 285, 256, 361, 400, 0,
	304, 371, 334, 257, 333, 362, 399, 398, 266, 425,
	431, 432, 0, 0, 437, 0, 0, 0, 446, 451,
	452, 453, 455, 456, 457, 458, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 430, 323,
	324, 0, 302, 250, 251, 476, 288, 353, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 349,
	429, 0, 0, 0, 459, 475, 0, 0, 0, 0,
	0, 472, 359, 0, 380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 411, 423,
	440, 443, 0, 0, 0, 0, 255, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 438, 0, 0, 343,
	344, 345, 346, 306, 0, 273, 441, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 301,
	308, 454, 310, 272, 358, 303, 420, 317, 0, 447,
	0, 448, 0, 0, 0, 0, 350, 313, 314, 384,
	318, 328, 372, 419, 356, 377, 270, 410, 385, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	282, 248, 278, 279, 286, 473, 470, 401, 474, 0,
	252, 0, 326, 0, 367, 300, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 0, 0, 355, 426,
	427, 428, 450, 412, 466, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 325, 0,
	0, 0, 0, 477, 464, 0, 0, 305, 0, 0,
	0, 460, 0, 461, 0, 0, 0, 0, 465, 386,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 462,
	0, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 391, 408, 269, 382, 421, 274,
	389, 264, 354, 378, 0, 0, 260, 406, 388, 336,
	315, 316, 259, 0, 373, 293, 307, 290, 352, 0,
	405, 433, 289, 424, 0, 416, 262, 0, 415, 351,
	402, 407, 337, 331, 261, 404, 335, 330, 319, 297,
	449, 320, 321, 311, 363, 329, 364, 312, 341, 340,
	342, 0, 0, 0, 0, 0, 444, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 322, 0, 0, 0, 434,
	0, 376, 357, 0, 0, 0, 374, 327, 403, 365,
	409, 392, 417, 370, 366, 253, 393, 292, 338, 265,
	267, 287, 294, 296, 298, 299, 347, 348, 360, 381,
	394, 395, 396, 291, 275, 375, 276, 309, 277, 254,
	283, 281, 284, 383, 285, 256, 361, 400, 0, 304,
	371, 334, 257, 333, 362, 399, 398, 266, 425, 431,
	432, 0, 0, 437, 0, 0, 0, 446, 451, 452,
	453, 455, 456, 457, 458, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 430, 323, 324,
	0, 302, 250, 251, 476, 288, 353, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 349, 429,
	0, 0, 0, 459, 475, 0, 0, 0, 0, 0,
	472, 359, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 411, 423, 440,
	443, 0, 0, 0, 0, 255, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 438, 0, 0, 343, 344,
	345, 346, 306, 0, 273, 441, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 301, 308,
	454, 310, 272, 358, 303, 420, 317, 0, 447, 0,
	448, 0, 0, 0, 0, 350, 313, 314, 384, 318,
	328, 372, 419, 356, 377, 270, 410, 385, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 282,
	248, 278, 279, 286, 473, 470, 401, 474, 0, 252,
	0, 326, 0, 367, 300, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 0, 0, 355, 426, 427,
	428, 450, 412, 466, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 325, 0, 0,
	0, 0, 477, 464, 0, 0, 305, 0, 0, 0,
	460, 0, 461, 0, 0, 0, 0, 465, 386, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 462, 0,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 391, 408, 269, 382, 421, 274, 389,
	264, 354, 378, 0, 0, 260, 406, 388, 336, 315,
	316, 259, 0, 373, 293, 307, 290, 352, 0, 405,
	433, 289, 424, 0, 416, 262, 0, 415, 351, 402,
	407, 337, 331, 261, 404, 335, 330, 319, 297, 449,
	320, 321, 311, 363, 329, 364, 312, 341, 340, 342,
	0, 0, 0, 0, 0, 444, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 322, 0, 0, 0, 434, 0,
	376, 357, 0, 0, 0, 374, 327, 403, 365, 409,
	392, 417, 370, 366, 253, 393, 292, 338, 265, 267,
	287, 294, 296, 298, 299, 347, 348, 360, 381, 394,
	395, 396, 291, 275, 375, 276, 309, 277, 254, 283,
	281, 284, 383, 285, 256, 361, 400, 0, 304, 371,
	334, 257, 333, 362, 399, 398, 266, 425, 431, 432,
	0, 0, 437, 0, 0, 0, 446, 451, 452, 453,
	455, 456, 457, 458, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 430, 323, 324, 0,
	302, 250, 251, 476, 288, 353, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 349, 429, 0,
	0, 0, 459, 475, 0, 0, 0, 0, 0, 472,
	359, 0, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 411, 423, 440, 443,
	0, 0, 0, 0, 255, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 438, 0, 0, 343, 344, 345,
	346, 306, 0, 273, 441, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 301, 308, 454,
	310, 272, 358, 303, 420, 317, 0, 447, 0, 448,
	0, 0, 0, 0, 350, 313, 314, 384, 318, 328,
	372, 419, 356, 377, 270, 410, 385, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 282, 248,
	278, 279, 286, 473, 470, 401, 474, 0, 252, 0,
	326, 0, 367, 300, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 0, 0, 355, 426, 427, 428,
	450, 412, 466, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 325, 0, 0, 0,
	0, 477, 464, 0, 0, 305, 0, 0, 0, 460,
	0, 461, 0, 0, 0, 0, 465, 386, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 462, 0, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 391, 408, 269, 382, 421, 274, 389, 264,
	354, 378, 0, 0, 260, 406, 388, 336, 315, 316,
	259, 0, 373, 293, 307, 290, 352, 0, 405, 433,
	289, 424, 0, 416, 262, 0, 415, 351, 402, 407,
	337, 331, 261, 404, 335, 330, 319, 297, 449, 320,
	321, 311, 363, 329, 364, 312, 341, 340, 342, 0,
	0, 0, 0, 0, 444, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 322, 0, 0, 0, 434, 0, 376,
	357, 0, 0, 0, 374, 327, 403, 365, 409, 392,
	417, 370, 366, 253, 393, 292, 338, 265, 267, 287,
	294, 296, 298, 299, 347, 348, 360, 381, 394, 395,
	396, 291, 275, 375, 276, 309, 277, 254, 283, 281,
	284, 383, 285, 256, 361, 400, 0, 304, 371, 334,
	257, 333, 362, 399, 398, 266, 425, 431, 432, 0,
	0, 437, 0, 0, 0, 446, 451, 452, 453, 455,
	456, 457, 458, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 430, 323, 324, 0, 302,
	250, 251, 476, 288, 353, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 349, 429, 0, 0,
	0, 459, 475, 0, 0, 0, 0, 0, 472, 359,
	0, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 411, 423, 440, 443, 0,
	0, 0, 0, 255, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 438, 0, 0, 343, 344, 345, 346,
	306, 0, 273, 441, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 301, 308, 454, 310,
	272, 358, 303, 420, 317, 0, 447, 0, 448, 0,
	0, 0, 0, 350, 313, 314, 384, 318, 328, 372,
	419, 356, 377, 270, 410, 385, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 282, 248, 278,
	279, 286, 473, 470, 401, 474, 0, 252, 0, 326,
	0, 367, 300, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 0, 0, 355, 426, 427, 428, 450,
	412, 466, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 325, 0, 0, 0, 0,
	477, 464, 0, 0, 305, 0, 0, 0, 460, 0,
	461, 0, 0, 0, 0, 465, 386, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2706, 0, 0, 0, 268, 197, 462, 0, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 391, 408, 269, 382, 421, 274, 389, 264, 354,
	378, 0, 0, 260, 406, 388, 336, 315, 316, 259,
	0, 373, 293, 307, 290, 352, 0, 405, 433, 289,
	424, 0, 416, 262, 0, 415, 351, 402, 407, 337,
	331, 261, 404, 335, 330, 319, 297, 449, 320, 321,
	311, 363, 329, 364, 312, 341, 340, 342, 0, 0,
	0, 0, 0, 444, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 322, 0, 0, 0, 434, 0, 376, 357,
	0, 0, 0, 374, 327, 403, 365, 409, 392, 417,
	370, 366, 253, 393, 292, 338, 265, 267, 287, 294,
	296, 298, 299, 347, 348, 360, 381, 394, 395, 396,
	291, 275, 375, 276, 309, 277, 254, 283, 281, 284,
	383, 285, 256, 361, 400, 0, 304, 371, 334, 257,
	333, 362, 399, 398, 266, 425, 431, 432, 0, 0,
	437, 0, 0, 0, 446, 451, 452, 453, 455, 456,
	457, 458, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 430, 323, 324, 0, 302, 250,
	251, 476, 288, 353, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 349, 429, 0, 0, 0,
	459, 475, 0, 0, 0, 0, 0, 472, 359, 0,
	380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 411, 423, 440, 443, 0, 0,
	0, 0, 255, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 438, 0, 0, 343, 344, 345, 346, 306,
	0, 273, 441, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 301, 308, 454, 310, 272,
	358, 303, 420, 317, 0, 447, 0, 448, 0, 0,
	0, 0, 350, 313, 314, 384, 318, 328, 372, 419,
	356, 377, 270, 410, 385, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 282, 248, 278, 279,
	286, 473, 470, 401, 474, 0, 252, 0, 326, 0,
	367, 300, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 0, 0, 355, 426, 427, 428, 450, 412,
	466, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 325, 0, 0, 0, 0, 477,
	464, 0, 0, 305, 0, 0, 0, 460, 0, 461,
	0, 0, 0, 0, 465, 386, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 462, 0, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	391, 408, 269, 382, 421, 274, 389, 264, 354, 378,
	0, 0, 260, 406, 388, 336, 315, 316, 259, 0,
	373, 293, 307, 290, 352, 0, 405, 433, 289, 424,
	0, 416, 262, 0, 415, 351, 402, 407, 337, 331,
	261, 404, 335, 330, 319, 297, 449, 320, 321, 311,
	363, 329, 364, 312, 341, 340, 342, 0, 0, 0,
	0, 0, 444, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 322, 0, 0, 0, 434, 0, 376, 357, 0,
	0, 0, 374, 327, 403, 365, 409, 392, 417, 370,
	366, 253, 393, 292, 338, 265, 267, 287, 294, 296,
	298, 299, 347, 348, 360, 381, 394, 395, 396, 291,
	275, 375, 276, 309, 277, 254, 283, 281, 284, 383,
	285, 256, 361, 400, 0, 304, 371, 334, 257, 333,
	362, 399, 398, 266, 425, 431, 432, 0, 0, 437,
	0, 0, 0, 446, 451, 452, 453, 455, 456, 457,
	458, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 430, 323, 324, 0, 302, 250, 251,
	476, 288, 353, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 349, 429, 0, 0, 0, 459,
	475, 0, 0, 0, 0, 0, 472, 359, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 411, 423, 440, 443, 0, 0, 0,
	0, 255, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 438, 0, 0, 343, 344, 345, 346, 306, 0,
	273, 441, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 301, 308, 454, 310, 272, 358,
	303, 420, 317, 0, 447, 0, 448, 0, 0, 0,
	0, 350, 313, 314, 384, 318, 328, 372, 419, 356,
	377, 270, 410, 385, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 282, 248, 278, 279, 286,
	473, 470, 401, 474, 0, 252, 0, 326, 0, 367,
	300, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 0, 0, 355, 426, 427, 428, 450, 412, 466,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 325, 0, 0, 0, 0, 477, 464,
	0, 0, 305, 0, 0, 0, 460, 0, 461, 0,
	0, 0, 0, 465, 386, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 1266, 0,
	0, 0, 268, 197, 462, 0, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 391,
	408, 269, 382, 421, 274, 389, 264, 354, 378, 0,
	0, 260, 406, 388, 336, 315, 316, 259, 0, 373,
	293, 307, 290, 352, 0, 405, 433, 289, 424, 0,
	416, 262, 0, 415, 351, 402, 407, 337, 331, 261,
	404, 335, 330, 319, 297, 449, 320, 321, 311, 363,
	329, 364, 312, 341, 340, 342, 0, 0, 0, 0,
	0, 444, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	322, 0, 0, 0, 434, 0, 376, 357, 0, 0,
	0, 374, 327, 403, 365, 409, 392, 417, 370, 366,
	253, 393, 292, 338, 265, 267, 287, 294, 296, 298,
	299, 347, 348, 360, 381, 394, 395, 396, 291, 275,
	375, 276, 309, 277, 254, 283, 281, 284, 383, 285,
	256, 361, 400, 0, 304, 371, 334, 257, 333, 362,
	399, 398, 266, 425, 431, 432, 0, 0, 437, 0,
	0, 0, 446, 451, 452, 453, 455, 456, 457, 458,
	0, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 430, 323, 324, 0, 302, 250, 251, 476,
	288, 353, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 349, 429, 0, 0, 0, 459, 475,
	0, 0, 0, 0, 0, 472, 359, 0, 380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 411, 423, 440, 443, 0, 0, 0, 0,
	255, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	438, 0, 0, 343, 344, 345, 346, 306, 0, 273,
	441, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 301, 308, 454, 310, 272, 358, 303,
	420, 317, 0, 447, 0, 448, 0, 0, 0, 0,
	350, 313, 314, 384, 318, 328, 372, 419, 356, 377,
	270, 410, 385, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 282, 248, 278, 279, 286, 473,
	470, 401, 474, 0, 252, 0, 326, 0, 367, 300,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	0, 0, 355, 426, 427, 428, 450, 412, 466, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	0, 0, 325, 0, 0, 0, 0, 477, 464, 0,
	0, 305, 0, 0, 0, 460, 0, 461, 0, 0,
	0, 0, 465, 386, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 2127, 0, 0,
	0, 268, 197, 462, 0, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 391, 408,
	269, 382, 421, 274, 389, 264, 354, 378, 0, 0,
	260, 406, 388, 336, 315, 316, 259, 0, 373, 293,
	307, 290, 352, 0, 405, 433, 289, 424, 0, 416,
	262, 0, 415, 351, 402, 407, 337, 331, 261, 404,
	335, 330, 319, 297, 449, 320, 321, 311, 363, 329,
	364, 312, 341, 340, 342, 0, 0, 0, 0, 0,
	444, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 322,
	0, 0, 0, 434, 0, 376, 357, 0, 0, 0,
	374, 327, 403, 365, 409, 392, 417, 370, 366, 253,
	393, 292, 338, 265, 267, 287, 294, 296, 298, 299,
	347, 348, 360, 381, 394, 395, 396, 291, 275, 375,
	276, 309, 277, 254, 283, 281, 284, 383, 285, 256,
	361, 400, 0, 304, 371, 334, 257, 333, 362, 399,
	398, 266, 425, 431, 432, 0, 0, 437, 0, 0,
	0, 446, 451, 452, 453, 455, 456, 457, 458, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 430, 323, 324, 0, 302, 250, 251, 476, 288,
	353, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 349, 429, 0, 0, 0, 459, 475, 0,
	0, 0, 0, 0, 472, 359, 0, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	387, 411, 423, 440, 443, 0, 0, 0, 0, 255,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 438,
	0, 0, 343, 344, 345, 346, 306, 0, 273, 441,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 301, 308, 454, 310, 272, 358, 303, 420,
	317, 0, 447, 0, 448, 0, 0, 0, 0, 350,
	313, 314, 384, 318, 328, 372, 419, 356, 377, 270,
	410, 385, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 282, 248, 278, 279, 286, 473, 470,
	401, 474, 0, 252, 0, 326, 0, 367, 300, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 0,
	0, 355, 426, 427, 428, 450, 412, 466, 471, 0,
	2450, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 325, 0, 0, 0, 0, 477, 464, 0, 0,
	305, 0, 0, 0, 460, 0, 461, 0, 0, 0,
	0, 465, 386, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 462, 0, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 391, 408, 269,
	382, 421, 274, 389, 264, 354, 378, 0, 0, 260,
	406, 388, 336, 315, 316, 259, 0, 373, 293, 307,
	290, 352, 0, 405, 433, 289, 424, 0, 416, 262,
	0, 415, 351, 402, 407, 337, 331, 261, 404, 335,
	330, 319, 297, 449, 320, 321, 311, 363, 329, 364,
	312, 341, 340, 342, 0, 0, 0, 0, 0, 444,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 322, 0,
	0, 0, 434, 0, 376, 357, 0, 0, 0, 374,
	327, 403, 365, 409, 392, 417, 370, 366, 253, 393,
	292, 338, 265, 267, 287, 294, 296, 298, 299, 347,
	348, 360, 381, 394, 395, 396, 291, 275, 375, 276,
	309, 277, 254, 283, 281, 284, 383, 285, 256, 361,
	400, 0, 304, 371, 334, 257, 333, 362, 399, 398,
	266, 425, 431, 432, 0, 0, 437, 0, 0, 0,
	446, 451, 452, 453, 455, 456, 457, 458, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	430, 323, 324, 0, 302, 250, 251, 476, 288, 353,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 349, 429, 0, 0, 0, 459, 475, 0, 0,
	0, 0, 0, 472, 359, 0, 380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 387,
	411, 423, 440, 443, 0, 0, 0, 0, 255, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 438, 0,
	0, 343, 344, 345, 346, 306, 0, 273, 441, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 301, 308, 454, 310, 272, 358, 303, 420, 317,
	0, 447, 0, 448, 0, 0, 0, 0, 350, 313,
	314, 384, 318, 328, 372, 419, 356, 377, 270, 410,
	385, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 282, 248, 278, 279, 286, 473, 470, 401,
	474, 0, 252, 0, 326, 0, 367, 300, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 0, 0,
	355, 426, 427, 428, 450, 412, 466, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 0, 0,
	325, 0, 0, 0, 0, 477, 464, 0, 0, 305,
	0, 0, 0, 460, 0, 461, 0, 0, 0, 0,
	465, 386, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 462, 0, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 391, 408, 269, 382,
	421, 274, 389, 264, 354, 378, 0, 0, 260, 406,
	388, 336, 315, 316, 259, 0, 373, 293, 307, 290,
	352, 0, 405, 433, 289, 424, 0, 416, 262, 0,
	415, 351, 402, 407, 337, 331, 261, 404, 335, 330,
	319, 297, 449, 320, 321, 311, 363, 329, 364, 312,
	341, 340, 342, 0, 0, 0, 0, 0, 444, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 322, 0, 0,
	0, 434, 0, 376, 357, 0, 0, 0, 374, 327,
	403, 365, 409, 392, 417, 370, 366, 253, 393, 292,
	338, 265, 267, 287, 294, 296, 298, 299, 347, 348,
	360, 381, 394, 395, 396, 291, 275, 375, 276, 309,
	277, 254, 283, 281, 284, 383, 285, 256, 361, 400,
	0, 304, 371, 334, 257, 333, 362, 399, 398, 266,
	425, 431, 432, 0, 0, 437, 0, 0, 0, 446,
	451, 452, 453, 455, 456, 457, 458, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 430,
	323, 324, 0, 302, 250, 251, 476, 288, 353, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	349, 429, 0, 0, 0, 459, 475, 0, 0, 0,
	0, 0, 472, 359, 0, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 387, 411,
	423, 440, 443, 0, 0, 0, 0, 255, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 438, 0, 0,
	343, 344, 345, 346, 306, 0, 273, 441, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	301, 308, 454, 310, 272, 358, 303, 420, 317, 0,
	447, 0, 448, 0, 0, 0, 0, 350, 313, 314,
	384, 318, 328, 372, 419, 356, 377, 270, 410, 385,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 282, 248, 278, 279, 286, 473, 470, 401, 474,
	0, 252, 0, 326, 0, 367, 300, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 0, 0, 355,
	426, 427, 428, 450, 412, 466, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 0, 325,
	0, 0, 0, 0, 477, 464, 0, 0, 305, 0,
	0, 0, 460, 0, 461, 0, 0, 0, 0, 465,
	386, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	462, 0, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 391, 408, 269, 382, 421,
	274, 389, 264, 354, 378, 0, 0, 260, 406, 388,
	336, 315, 316, 259, 0, 373, 293, 307, 290, 352,
	0, 405, 433, 289, 424, 0, 416, 262, 0, 415,
	351, 402, 407, 337, 331, 261, 404, 335, 330, 319,
	297, 449, 320, 321, 311, 363, 329, 364, 312, 341,
	340, 342, 0, 0, 0, 0, 0, 444, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 322, 0, 0, 0,
	434, 0, 376, 357, 0, 0, 0, 374, 327, 403,
	365, 409, 392, 417, 370, 366, 253, 393, 292, 338,
	265, 267, 287, 294, 296, 298, 299, 347, 348, 360,
	381, 394, 395, 396, 291, 275, 375, 276, 309, 277,
	254, 283, 281, 284, 383, 285, 256, 361, 400, 0,
	304, 371, 334, 257, 333, 362, 399, 398, 266, 425,
	431, 432, 0, 0, 437, 0, 0, 0, 446, 451,
	452, 453, 455, 456, 457, 458, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 430, 323,
	324, 0, 302, 250, 251, 476, 288, 353, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 349,
	429, 0, 0, 0, 459, 475, 0, 0, 0, 0,
	0, 472, 359, 0, 380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 411, 423,
	440, 443, 0, 0, 0, 0, 255, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 438, 0, 0, 343,
	344, 345, 346, 306, 0, 273, 441, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 301,
	308, 454, 310, 272, 358, 303, 420, 317, 0, 447,
	0, 448, 0, 0, 0, 0, 350, 313, 314, 384,
	318, 328, 372, 419, 356, 377, 270, 410, 385, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	282, 248, 278, 279, 286, 473, 470, 401, 474, 0,
	252, 0, 326, 0, 367, 300, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 0, 0, 355, 426,
	427, 428, 450, 412, 466, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 325, 0,
	0, 0, 0, 477, 464, 0, 0, 305, 0, 0,
	0, 460, 0, 461, 0, 0, 0, 0, 465, 386,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 2201, 0, 0, 0, 268, 197, 462,
	0, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 391, 408, 269, 382, 421, 274,
	389, 264, 354, 378, 0, 0, 260, 406, 388, 336,
	315, 316, 259, 0, 373, 293, 307, 290, 352, 0,
	405, 433, 289, 424, 0, 416, 262, 0, 415, 351,
	402, 407, 337, 331, 261, 404, 335, 330, 319, 297,
	449, 320, 321, 311, 363, 329, 364, 312, 341, 340,
	342, 0, 0, 0, 0, 0, 444, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 322, 0, 0, 0, 434,
	0, 376, 357, 0, 0, 0, 374, 327, 403, 365,
	409, 392, 417, 370, 366, 253, 393, 292, 338, 265,
	267, 287, 294, 296, 298, 299, 347, 348, 360, 381,
	394, 395, 396, 291, 275, 375, 276, 309, 277, 254,
	283, 281, 284, 383, 285, 256, 361, 400, 0, 304,
	371, 334, 257, 333, 362, 399, 398, 266, 425, 431,
	432, 0, 0, 437, 0, 0, 0, 446, 451, 452,
	453, 455, 456, 457, 458, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 430, 323, 324,
	0, 302, 250, 251, 476, 288, 353, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 349, 429,
	0, 0, 0, 459, 475, 0, 0, 0, 0, 0,
	472, 359, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 411, 423, 440,
	443, 0, 0, 0, 0, 255, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 438, 0, 0, 343, 344,
	345, 346, 306, 0, 273, 441, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 301, 308,
	454, 310, 272, 358, 303, 420, 317, 0, 447, 0,
	448, 0, 0, 0, 0, 350, 313, 314, 384, 318,
	328, 372, 419, 356, 377, 270, 410, 385, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 282,
	248, 278, 279, 286, 473, 470, 401, 474, 0, 252,
	0, 326, 0, 367, 300, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 0, 0, 0, 426, 427,
	428, 450, 412, 1992, 471, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 466, 0, 0, 0, 0,
	0, 0, 477, 464, 0, 0, 295, 0, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 0,
	0, 0, 460, 0, 461, 0, 0, 0, 0, 465,
	386, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	462, 0, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 391, 408, 269, 382, 421,
	274, 389, 264, 354, 378, 0, 0, 260, 406, 388,
	336, 315, 316, 259, 0, 373, 293, 307, 290, 352,
	0, 405, 433, 289, 424, 0, 416, 262, 0, 415,
	351, 402, 407, 337, 331, 261, 404, 335, 330, 319,
	297, 449, 320, 321, 311, 363, 329, 364, 312, 341,
	340, 342, 0, 0, 0, 0, 0, 444, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 322, 0, 0, 0,
	434, 0, 376, 357, 0, 0, 0, 374, 327, 403,
	365, 409, 392, 417, 370, 366, 253, 393, 292, 338,
	265, 267, 287, 294, 296, 298, 299, 347, 348, 360,
	381, 394, 395, 396, 291, 275, 375, 276, 309, 277,
	254, 283, 281, 284, 383, 285, 256, 361, 400, 0,
	304, 371, 334, 257, 333, 362, 399, 398, 266, 425,
	431, 432, 0, 0, 437, 0, 0, 0, 446, 451,
	452, 453, 455, 456, 457, 458, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 430, 323,
	324, 0, 302, 250, 251, 476, 288, 353, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 349,
	429, 0, 0, 0, 459, 475, 0, 0, 0, 0,
	0, 472, 359, 0, 380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 411, 423,
	440, 443, 0, 0, 0, 0, 255, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 438, 0, 0, 343,
	344, 345, 346, 306, 0, 273, 441, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 301,
	308, 454, 310, 272, 358, 303, 420, 317, 0, 447,
	0, 448, 0, 0, 0, 0, 350, 313, 314, 384,
	318, 328, 372, 419, 356, 377, 270, 410, 385, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	282, 248, 278, 279, 286, 473, 470, 401, 474, 0,
	252, 0, 326, 0, 367, 300, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 0, 0, 355, 426,
	427, 428, 450, 412, 466, 471, 1707, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 325, 0,
	0, 0, 0, 477, 464, 0, 0, 305, 0, 0,
	0, 460, 0, 461, 0, 0, 0, 0, 465, 386,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 462,
	0, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 391, 408, 269, 382, 421, 274,
	389, 264, 354, 378, 0, 0, 260, 406, 388, 336,
	315, 316, 259, 0, 373, 293, 307, 290, 352, 0,
	405, 433, 289, 424, 0, 416, 262, 0, 415, 351,
	402, 407, 337, 331, 261, 404, 335, 330, 319, 297,
	449, 320, 321, 311, 363, 329, 364, 312, 341, 340,
	342, 0, 0, 0, 0, 0, 444, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 322, 0, 0, 0, 434,
	0, 376, 357, 0, 0, 0, 374, 327, 403, 365,
	409, 392, 417, 370, 366, 253, 393, 292, 338, 265,
	267, 287, 294, 296, 298, 299, 347, 348, 360, 381,
	394, 395, 396, 291, 275, 375, 276, 309, 277, 254,
	283, 281, 284, 383, 285, 256, 361, 400, 0, 304,
	371, 334, 257, 333, 362, 399, 398, 266, 425, 431,
	432, 0, 0, 437, 0, 0, 0, 446, 451, 452,
	453, 455, 456, 457, 458, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 430, 323, 324,
	0, 302, 250, 251, 476, 288, 353, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 349, 429,
	0, 0, 0, 459, 475, 0, 0, 0, 0, 0,
	472, 359, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 411, 423, 440,
	443, 0, 0, 0, 0, 255, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 438, 0, 0, 343, 344,
	345, 346, 306, 0, 273, 441, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 301, 308,
	454, 310, 272, 358, 303, 420, 317, 0, 447, 0,
	448, 0, 0, 0, 0, 350, 313, 314, 384, 318,
	328, 372, 419, 356, 377, 270, 410, 385, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 282,
	248, 278, 279, 286, 473, 470, 401, 474, 0, 252,
	0, 326, 0, 367, 300, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 0, 0, 355, 426, 427,
	428, 450, 412, 466, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 325, 0, 0,
	0, 0, 477, 464, 0, 0, 305, 0, 0, 0,
	460, 0, 461, 0, 0, 0, 0, 465, 386, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1266, 0, 0, 0, 268, 197, 462, 0,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 391, 408, 269, 382, 421, 274, 389,
	264, 354, 378, 0, 0, 260, 406, 388, 336, 315,
	316, 259, 0, 373, 293, 307, 290, 352, 0, 405,
	433, 289, 424, 0, 416, 262, 0, 415, 351, 402,
	407, 337, 331, 261, 404, 335, 330, 319, 297, 449,
	320, 321, 311, 363, 329, 364, 312, 341, 340, 342,
	0, 0, 0, 0, 0, 444, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 322, 0, 0, 0, 434, 0,
	376, 357, 0, 0, 0, 374, 327, 403, 365, 409,
	392, 417, 1614, 366, 253, 393, 292, 338, 265, 267,
	287, 294, 296, 298, 299, 347, 348, 360, 381, 394,
	395, 396, 291, 275, 375, 276, 309, 277, 254, 283,
	281, 284, 383, 285, 256, 361, 400, 0, 304, 371,
	334, 257, 333, 362, 399, 398, 266, 425, 431, 432,
	0, 0, 437, 0, 0, 0, 446, 451, 452, 453,
	455, 456, 457, 458, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 430, 323, 324, 0,
	302, 250, 251, 476, 288, 353, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 349, 429, 0,
	0, 0, 459, 475, 0, 0, 0, 0, 0, 472,
	359, 0, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 411, 423, 440, 443,
	0, 0, 0, 0, 255, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 438, 0, 0, 343, 344, 345,
	346, 306, 0, 273, 441, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 301, 308, 454,
	310, 272, 358, 303, 420, 317, 0, 447, 0, 448,
	0, 0, 0, 0, 350, 313, 314, 384, 318, 328,
	372, 419, 356, 377, 270, 410, 385, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 282, 248,
	278, 279, 286, 473, 470, 401, 474, 0, 252, 0,
	326, 0, 367, 300, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 0, 0, 355, 426, 427, 428,
	450, 412, 466, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 325, 0, 0, 0,
	0, 477, 464, 0, 0, 305, 0, 0, 0, 460,
	0, 461, 0, 0, 0, 0, 465, 386, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 462, 0, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 391, 408, 269, 382, 421, 274, 389, 264,
	354, 378, 0, 0, 260, 406, 388, 336, 315, 316,
	259, 0, 373, 293, 307, 290, 352, 0, 405, 433,
	289, 424, 0, 416, 262, 0, 415, 351, 402, 407,
	337, 331, 261, 404, 335, 330, 319, 297, 449, 320,
	321, 311, 363, 329, 364, 312, 341, 340, 342, 0,
	0, 0, 0, 0, 444, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 418, 0, 0, 1296, 0, 0, 0,
	390, 0, 0, 322, 0, 0, 0, 434, 0, 376,
	357, 0, 0, 0, 374, 327, 403, 365, 409, 392,
	417, 370, 366, 253, 393, 292, 338, 265, 267, 287,
	294, 296, 298, 299, 347, 348, 360, 381, 394, 395,
	396, 291, 275, 375, 276, 309, 277, 254, 283, 281,
	284, 383, 285, 256, 361, 400, 0, 304, 371, 334,
	257, 333, 362, 399, 398, 266, 425, 431, 432, 0,
	0, 437, 0, 0, 0, 446, 451, 452, 453, 455,
	456, 457, 458, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 430, 323, 324, 0, 302,
	250, 251, 476, 288, 353, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 0, 0, 349, 429, 0, 0,
	0, 459, 475, 0, 0, 0, 0, 0, 472, 359,
	0, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 411, 423, 440, 443, 0,
	0, 0, 0, 255, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 438, 0, 0, 343, 344, 345, 346,
	306, 0, 273, 441, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 301, 308, 454, 310,
	272, 358, 303, 420, 317, 0, 447, 0, 448, 0,
	0, 0, 0, 350, 313, 314, 384, 318, 328, 372,
	419, 356, 377, 270, 410, 385, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 282, 248, 278,
	279, 286, 473, 470, 401, 474, 0, 252, 0, 326,
	0, 367, 300, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 0, 0, 355, 426, 427, 428, 450,
	412, 466, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 325, 0, 0, 0, 0,
	477, 464, 0, 0, 305, 0, 0, 0, 460, 0,
	461, 0, 0, 0, 0, 465, 386, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 462, 0, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 391, 408, 269, 382, 421, 274, 389, 264, 354,
	378, 0, 0, 260, 406, 388, 336, 315, 316, 259,
	0, 373, 293, 307, 290, 352, 0, 405, 433, 289,
	424, 0, 416, 262, 0, 415, 351, 402, 407, 337,
	331, 261, 404, 335, 330, 319, 297, 449, 320, 321,
	311, 363, 329, 364, 312, 341, 340, 342, 0, 0,
	0, 0, 0, 444, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 322, 0, 0, 0, 434, 0, 376, 357,
	0, 0, 0, 374, 327, 403, 365, 409, 392, 417,
	370, 366, 253, 393, 292, 338, 265, 267, 287, 294,
	296, 298, 299, 347, 348, 360, 381, 394, 395, 396,
	291, 275, 375, 276, 309, 277, 254, 283, 281, 284,
	383, 285, 256, 361, 400, 0, 304, 371, 334, 257,
	333, 362, 399, 398, 266, 425, 431, 432, 0, 0,
	437, 0, 0, 0, 446, 451, 452, 453, 455, 456,
	457, 458, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 430, 323, 324, 0, 302, 250,
	251, 476, 288, 353, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 349, 429, 0, 0, 0,
	459, 475, 0, 0, 0, 0, 0, 472, 359, 0,
	380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 411, 423, 440, 443, 0, 0,
	0, 0, 255, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 438, 0, 0, 343, 344, 345, 346, 306,
	0, 273, 441, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 301, 308, 454, 310, 272,
	358, 303, 420, 317, 0, 447, 0, 448, 0, 0,
	0, 0, 350, 313, 314, 384, 318, 328, 372, 419,
	356, 377, 270, 410, 385, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 763, 0, 0, 397, 282, 248, 278, 279,
	286, 473, 470, 401, 474, 0, 252, 0, 326, 0,
	367, 300, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 0, 0, 355, 426, 427, 428, 450, 412,
	466, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 0, 0, 325, 0, 0, 0, 0, 477,
	464, 0, 0, 305, 0, 0, 0, 460, 0, 461,
	0, 0, 0, 0, 465, 386, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 462, 0, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	391, 408, 269, 382, 421, 274, 389, 264, 354, 378,
	0, 0, 260, 406, 388, 336, 315, 316, 259, 0,
	373, 293, 307, 290, 352, 0, 405, 433, 289, 424,
	0, 416, 262, 0, 415, 351, 402, 407, 337, 331,
	261, 404, 335, 330, 319, 297, 449, 320, 321, 311,
	363, 329, 364, 312, 341, 340, 342, 0, 0, 0,
	0, 0, 444, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 322, 0, 0, 0, 434, 0, 376, 357, 0,
	0, 0, 374, 327, 403, 365, 409, 392, 417, 515,
	366, 253, 393, 292, 338, 265, 267, 287, 294, 296,
	298, 299, 347, 348, 360, 381, 394, 395, 396, 291,
	275, 375, 276, 309, 277, 254, 283, 281, 284, 383,
	285, 256, 361, 400, 0, 304, 371, 334, 257, 333,
	362, 399, 398, 266, 425, 431, 432, 0, 0, 437,
	0, 0, 0, 446, 451, 452, 453, 455, 456, 457,
	458, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 430, 323, 324, 0, 302, 250, 251,
	476, 288, 353, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 349, 429, 0, 0, 0, 459,
	475, 0, 0, 0, 0, 0, 472, 359, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 411, 423, 440, 443, 0, 0, 0,
	0, 255, 442, 0, 0, 0, 0, 0, 0, 516,
	0, 414, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 438, 0, 0, 343, 344, 345, 346, 306, 0,
	273, 441, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 301, 308, 454, 310, 272, 358,
	303, 420, 317, 0, 447, 0, 448, 0, 0, 0,
	0, 350, 313, 314, 384, 318, 328, 372, 419, 356,
	377, 270, 410, 385, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 282, 248, 278, 279, 286,
	473, 470, 401, 474, 0, 252, 0, 326, 0, 367,
	300, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 0, 0, 355, 426, 427, 428, 450, 412, 466,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 0, 325, 0, 0, 0, 0, 477, 464,
	0, 0, 305, 0, 0, 0, 460, 0, 461, 0,
	0, 0, 0, 465, 386, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 462, 0, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 391,
	408, 269, 382, 421, 274, 389, 264, 354, 378, 0,
	0, 260, 406, 388, 336, 315, 316, 259, 0, 373,
	293, 307, 290, 352, 0, 405, 433, 289, 424, 0,
	416, 262, 0, 415, 351, 402, 407, 337, 331, 261,
	404, 335, 330, 319, 297, 449, 320, 321, 311, 363,
	329, 364, 312, 341, 340, 342, 0, 0, 0, 0,
	0, 444, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	322, 0, 0, 0, 434, 0, 376, 357, 0, 0,
	0, 374, 327, 403, 365, 409, 392, 417, 370, 366,
	253, 393, 292, 338, 265, 267, 287, 294, 296, 298,
	299, 347, 348, 360, 381, 394, 395, 396, 291, 275,
	375, 276, 309, 277, 254, 283, 281, 284, 383, 285,
	256, 361, 400, 0, 304, 371, 334, 257, 333, 362,
	399, 398, 266, 425, 431, 432, 0, 0, 437, 0,
	0, 0, 446, 451, 452, 453, 455, 456, 457, 458,
	0, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 430, 323, 324, 0, 302, 250, 251, 476,
	288, 353, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 0, 0, 349, 429, 0, 0, 0, 459, 475,
	0, 0, 0, 0, 0, 472, 359, 0, 380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 411, 423, 440, 443, 0, 0, 0, 0,
	255, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	438, 0, 0, 343, 344, 345, 346, 306, 0, 273,
	441, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 301, 308, 454, 310, 272, 358, 303,
	420, 317, 0, 447, 0, 448, 0, 0, 0, 0,
	350, 313, 314, 384, 318, 328, 372, 419, 356, 377,
	270, 410, 385, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 282, 248, 278, 279, 286, 473,
	470, 401, 474, 0, 252, 0, 326, 0, 367, 300,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	0, 0, 355, 426, 427, 428, 450, 412, 466, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 295,
	0, 0, 325, 0, 0, 0, 0, 477, 464, 0,
	0, 305, 0, 0, 0, 460, 0, 461, 0, 0,
	0, 0, 465, 386, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 462, 0, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 391, 408,
	269, 382, 421, 274, 389, 264, 354, 378, 0, 0,
	260, 406, 388, 336, 315, 316, 259, 0, 373, 293,
	307, 290, 352, 0, 405, 433, 289, 424, 0, 416,
	262, 0, 415, 351, 402, 407, 337, 331, 261, 404,
	335, 330, 319, 297, 449, 320, 321, 311, 363, 329,
	364, 312, 341, 340, 342, 0, 0, 0, 0, 0,
	444, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 322,
	0, 0, 0, 434, 0, 376, 357, 0, 0, 0,
	374, 327, 403, 365, 409, 392, 417, 370, 366, 253,
	393, 292, 338, 265, 267, 287, 294, 296, 298, 299,
	347, 348, 360, 381, 394, 395, 396, 291, 275, 375,
	276, 309, 277, 254, 283, 281, 284, 383, 285, 256,
	361, 400, 0, 304, 371, 334, 257, 333, 362, 399,
	398, 266, 425, 431, 432, 0, 0, 437, 0, 0,
	0, 446, 451, 452, 453, 455, 456, 457, 458, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 430, 323, 324, 0, 302, 250, 251, 476, 288,
	353, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 0, 349, 429, 0, 0, 0, 459, 475, 0,
	0, 0, 0, 0, 472, 359, 0, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	387, 411, 423, 440, 443, 0, 0, 0, 0, 255,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 438,
	0, 0, 343, 344, 345, 346, 306, 0, 273, 441,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 301, 308, 454, 310, 272, 358, 303, 420,
	317, 0, 447, 0, 448, 0, 0, 0, 0, 350,
	313, 314, 384, 318, 328, 372, 419, 356, 377, 270,
	410, 385, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 282, 248, 278, 279, 286, 473, 470,
	401, 474, 0, 252, 0, 326, 0, 367, 300, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 0,
	0, 355, 426, 427, 428, 450, 412, 466, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 325, 0, 0, 0, 0, 477, 464, 0, 0,
	305, 0, 0, 0, 460, 0, 461, 0, 0, 0,
	0, 465, 386, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 462, 0, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 391, 408, 269,
	382, 421, 274, 389, 264, 354, 378, 0, 0, 260,
	406, 388, 336, 315, 316, 259, 0, 373, 293, 307,
	290, 352, 0, 405, 433, 289, 424, 0, 416, 262,
	0, 415, 351, 402, 407, 337, 331, 261, 404, 335,
	330, 319, 297, 449, 320, 321, 311, 363, 329, 364,
	312, 341, 340, 342, 0, 0, 0, 0, 0, 444,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 322, 0,
	0, 0, 434, 0, 376, 357, 0, 0, 0, 374,
	327, 403, 365, 409, 392, 417, 370, 366, 253, 393,
	292, 338, 265, 267, 287, 294, 296, 298, 299, 347,
	348, 360, 381, 394, 395, 396, 291, 275, 375, 276,
	309, 277, 254, 283, 281, 284, 383, 285, 256, 361,
	400, 0, 304, 371, 334, 257, 333, 362, 399, 398,
	266, 425, 431, 432, 0, 0, 437, 0, 0, 0,
	446, 451, 452, 453, 455, 456, 457, 458, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	430, 323, 324, 0, 302, 250, 251, 476, 288, 353,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	0, 349, 429, 0, 0, 0, 459, 475, 0, 0,
	0, 0, 0, 472, 359, 0, 380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 387,
	411, 423, 440, 443, 0, 0, 0, 0, 255, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 438, 0,
	0, 343, 344, 345, 346, 306, 0, 273, 441, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 301, 308, 454, 310, 272, 358, 303, 420, 317,
	0, 447, 0, 448, 0, 0, 0, 0, 350, 313,
	314, 384, 318, 328, 372, 419, 356, 377, 270, 410,
	385, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 282, 248, 278, 279, 286, 473, 470, 401,
	474, 0, 252, 0, 326, 0, 367, 300, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 0, 0,
	355, 426, 427, 428, 450, 412, 466, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 0, 0,
	325, 0, 0, 0, 0, 477, 464, 0, 0, 305,
	0, 0, 0, 460, 0, 461, 0, 0, 0, 0,
	465, 386, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 462, 0, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 391, 1246, 269, 382,
	421, 274, 389, 264, 354, 378, 0, 0, 260, 406,
	388, 336, 315, 316, 259, 0, 373, 293, 307, 290,
	352, 0, 405, 433, 289, 424, 0, 416, 262, 0,
	415, 351, 402, 407, 337, 331, 261, 404, 335, 330,
	319, 297, 449, 320, 321, 311, 363, 329, 364, 312,
	341, 340, 342, 0, 0, 0, 0, 0, 444, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 322, 0, 0,
	0, 434, 0, 376, 357, 0, 0, 0, 374, 327,
	403, 365, 409, 392, 417, 370, 366, 253, 393, 292,
	338, 265, 267, 287, 294, 296, 298, 299, 347, 348,
	360, 381, 394, 395, 396, 291, 275, 375, 276, 309,
	277, 254, 283, 281, 284, 383, 285, 256, 361, 400,
	0, 304, 371, 334, 257, 333, 362, 399, 398, 266,
	425, 431, 432, 0, 0, 437, 0, 0, 0, 446,
	451, 452, 453, 455, 456, 457, 458, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 430,
	323, 324, 0, 302, 250, 251, 476, 288, 353, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 0, 0,
	349, 429, 0, 0, 0, 459, 475, 0, 0, 0,
	0, 0, 472, 359, 0, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 387, 411,
	423, 440, 443, 0, 0, 0, 0, 255, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 438, 0, 0,
	343, 344, 345, 346, 306, 0, 273, 441, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	301, 308, 454, 310, 272, 358, 303, 420, 317, 0,
	447, 0, 448, 0, 0, 0, 0, 350, 313, 314,
	384, 318, 328, 372, 419, 356, 377, 270, 410, 385,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 282, 248, 278, 279, 286, 473, 470, 401, 474,
	0, 252, 0, 326, 0, 367, 300, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 0, 0, 355,
	426, 427, 428, 450, 412, 466, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 0, 0, 325,
	0, 0, 0, 0, 477, 464, 0, 0, 305, 0,
	0, 0, 460, 0, 461, 0, 0, 0, 0, 465,
	386, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	462, 0, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 391, 1244, 269, 382, 421,
	274, 389, 264, 354, 378, 0, 0, 260, 406, 388,
	336, 315, 316, 259, 0, 373, 293, 307, 290, 352,
	0, 405, 433, 289, 424, 0, 416, 262, 0, 415,
	351, 402, 407, 337, 331, 261, 404, 335, 330, 319,
	297, 449, 320, 321, 311, 363, 329, 364, 312, 341,
	340, 342, 0, 0, 0, 0, 0, 444, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 322, 0, 0, 0,
	434, 0, 376, 357, 0, 0, 0, 374, 327, 403,
	365, 409, 392, 417, 370, 366, 253, 393, 292, 338,
	265, 267, 287, 294, 296, 298, 299, 347, 348, 360,
	381, 394, 395, 396, 291, 275, 375, 276, 309, 277,
	254, 283, 281, 284, 383, 285, 256, 361, 400, 0,
	304, 371, 334, 257, 333, 362, 399, 398, 266, 425,
	431, 432, 0, 0, 437, 0, 0, 0, 446, 451,
	452, 453, 455, 456, 457, 458, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 430, 323,
	324, 0, 302, 250, 251, 476, 288, 353, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 349,
	429, 0, 0, 0, 459, 475, 0, 0, 0, 0,
	0, 472, 359, 0, 380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 411, 423,
	440, 443, 0, 0, 0, 0, 255, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 438, 0, 0, 343,
	344, 345, 346, 306, 0, 273, 441, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 301,
	308, 454, 310, 272, 358, 303, 420, 317, 0, 447,
	0, 448, 0, 0, 0, 0, 350, 313, 314, 384,
	318, 328, 372, 419, 356, 377, 270, 410, 385, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	282, 248, 278, 279, 286, 473, 470, 401, 474, 0,
	252, 0, 326, 0, 367, 300, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 0, 0, 355, 426,
	427, 428, 450, 412, 466, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 325, 0,
	0, 0, 0, 477, 464, 0, 0, 305, 0, 0,
	0, 460, 0, 461, 0, 0, 0, 0, 465, 386,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 462,
	0, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 391, 408, 269, 382, 421, 274,
	389, 264, 354, 378, 0, 0, 260, 406, 388, 336,
	315, 316, 259, 0, 373, 293, 307, 290, 352, 0,
	405, 433, 289, 424, 0, 416, 262, 0, 415, 351,
	402, 407, 337, 331, 261, 404, 335, 330, 319, 297,
	449, 320, 321, 311, 363, 329, 364, 312, 341, 340,
	342, 0, 0, 0, 0, 0, 444, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 322, 0, 0, 0, 434,
	0, 376, 357, 0, 0, 0, 374, 327, 403, 365,
	409, 392, 417, 370, 366, 253, 393, 292, 338, 265,
	267, 556, 294, 296, 298, 299, 347, 348, 360, 381,
	394, 395, 396, 291, 275, 375, 276, 309, 277, 254,
	283, 281, 284, 383, 285, 256, 361, 400, 0, 304,
	371, 334, 257, 333, 362, 399, 398, 266, 425, 431,
	432, 0, 0, 437, 0, 0, 0, 446, 451, 452,
	453, 455, 456, 457, 458, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 430, 323, 324,
	0, 302, 250, 251, 476, 288, 353, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 0, 0, 349, 429,
	0, 0, 0, 459, 475, 0, 0, 0, 0, 0,
	472, 359, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 411, 423, 440,
	443, 0, 0, 0, 0, 255, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 438, 0, 0, 343, 344,
	345, 346, 306, 0, 273, 441, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 301, 308,
	454, 310, 272, 358, 303, 420, 317, 0, 447, 0,
	448, 0, 0, 0, 0, 350, 313, 314, 384, 318,
	328, 372, 419, 356, 377, 270, 410, 385, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 282,
	248, 278, 279, 286, 473, 470, 401, 474, 0, 252,
	0, 326, 0, 367, 300, 0, 907, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 0, 0, 0, 426, 427,
	428, 450, 412, 0, 471, 0, 174, 51, 163, 138,
	0, 0, 0, 0, 0, 174, 51, 163, 138, 0,
	0, 0, 477, 464, 164, 0, 0, 0, 0, 0,
	0, 156, 0, 164, 0, 165, 0, 0, 0, 0,
	156, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 893, 0, 0, 103,
	0, 0, 0, 0, 0, 168, 0, 0, 103, 0,
	0, 0, 0, 0, 168, 0, 915, 919, 921, 923,
	925, 926, 928, 0, 933, 929, 930, 931, 932, 0,
	910, 911, 912, 913, 891, 892, 916, 0, 894, 0,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 906,
	908, 904, 905, 914, 0, 0, 0, 0, 0, 0,
	0, 918, 920, 922, 924, 927, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 121, 0, 122, 123, 0, 0, 0, 0,
	120, 121, 0, 122, 123, 0, 0, 0, 0, 909,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 162, 172, 0, 101, 0, 0, 0,
	0, 137, 162, 172, 0, 101, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 155, 154, 0, 0, 0,
	0, 57, 0, 161, 155, 154, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1695, 0, 0, 0, 0, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2281, 2282, 0, 0,
	0, 0, 157, 158, 159, 0, 0, 0, 1697, 1665,
	0, 157, 158, 159, 0, 0, 0, 0, 1698, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 1664, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 0, 0, 160, 0, 112, 1672,
	0, 111, 0, 0, 0, 160, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 534, 541, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 538, 539, 0,
	540, 544, 0, 1695, 526, 0, 0, 0, 1656, 0,
	0, 0, 0, 0, 549, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 1688, 0, 50, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 1697, 1665,
	917, 0, 0, 0, 0, 0, 0, 0, 1698, 1699,
	0, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	555, 0, 0, 0, 0, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 1664, 0, 0, 52, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 1672,
	0, 0, 0, 0, 0, 0, 0, 1655, 1657, 1654,
	0, 1651, 0, 0, 0, 0, 1676, 0, 0, 0,
	0, 0, 169, 170, 0, 171, 0, 1682, 0, 0,
	139, 169, 170, 0, 171, 1667, 0, 1650, 0, 139,
	0, 0, 0, 0, 0, 0, 0, 1670, 1704, 0,
	0, 1671, 1673, 1675, 0, 1677, 1678, 1679, 1683, 1684,
	1685, 1687, 1690, 1691, 1692, 0, 1688, 0, 0, 0,
	0, 0, 1680, 1689, 1681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 114, 39, 0, 0, 0, 0, 0, 49,
	0, 114, 39, 5, 0, 0, 1696, 0, 49, 118,
	119, 527, 529, 528, 0, 0, 0, 0, 118, 119,
	0, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1652, 1653, 537, 0, 0, 0, 1655, 2416, 1654,
	552, 2415, 0, 0, 0, 0, 1676, 530, 0, 1693,
	0, 521, 0, 0, 0, 0, 0, 1682, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 1668, 0, 0, 0, 1670, 1704, 0,
	0, 1671, 1673, 1675, 0, 1677, 1678, 1679, 1683, 1684,
	1685, 1687, 1690, 1691, 1692, 0, 0, 1686, 0, 0,
	0, 0, 1680, 1689, 1681, 0, 1674, 0, 0, 0,
	0, 907, 0, 0, 1659, 0, 0, 0, 0, 1701,
	1700, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 536, 542, 0, 543,
	545, 1652, 1653, 546, 547, 548, 0, 0, 550, 551,
	0, 0, 1661, 0, 0, 0, 0, 0, 0, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 1668, 0, 0, 0, 0, 907, 0,
	0, 0, 0, 0, 1703, 0, 0, 1702, 0, 0,
	0, 0, 0, 1697, 0, 0, 0, 1686, 0, 0,
	0, 893, 0, 0, 0, 883, 1674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1701,
	1700, 915, 919, 921, 923, 925, 926, 928, 0, 933,
	929, 930, 931, 932, 3251, 910, 911, 912, 913, 891,
	892, 916, 0, 894, 1672, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 906, 908, 904, 905, 914, 0,
	0, 0, 0, 0, 0, 0, 918, 920, 922, 924,
	927, 0, 1661, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 893, 0,
	0, 0, 0, 0, 909, 0, 0, 0, 0, 0,
	0, 1688, 0, 0, 1703, 0, 0, 1702, 915, 919,
	921, 923, 925, 926, 928, 1695, 933, 929, 930, 931,
	932, 0, 910, 911, 912, 913, 891, 892, 916, 0,
	894, 0, 895, 896, 897, 898, 899, 900, 901, 902,
	903, 906, 908, 904, 905, 914, 0, 0, 0, 0,
	1697, 0, 0, 918, 920, 922, 924, 927, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 909, 1682, 0, 0, 0, 0, 0, 0, 0,
	0, 1672, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1670, 1704, 0, 0, 1671, 1673, 1675, 0,
	1677, 1678, 1679, 1683, 1684, 1685, 1687, 1690, 1691, 1692,
	0, 0, 0, 535, 534, 541, 531, 1680, 1689, 1681,
	0, 0, 0, 0, 0, 538, 539, 0, 540, 544,
	0, 0, 526, 1672, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 0, 3222, 0, 0, 0, 1688, 0,
	0, 1696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 0, 0, 555, 0,
	0, 0, 0, 554, 1693, 0, 0, 0, 0, 0,
	1688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 1668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1682,
	0, 0, 1686, 0, 0, 0, 0, 0, 0, 0,
	0, 1674, 0, 0, 0, 917, 0, 0, 0, 1670,
	1704, 0, 0, 1671, 1673, 1675, 0, 1677, 1678, 1679,
	1683, 1684, 1685, 1687, 1690, 1691, 1692, 0, 0, 0,
	1676, 0, 0, 0, 1680, 1689, 1681, 0, 0, 0,
	0, 1682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1670, 1704, 0, 0, 1671, 1673, 1675, 1696, 1677,
	1678, 1679, 1683, 1684, 1685, 1687, 1690, 1691, 1692, 527,
	529, 528, 0, 0, 0, 0, 1680, 1689, 1681, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 537, 917, 0, 0, 0, 0, 0, 552, 0,
	0, 1693, 0, 0, 0, 530, 0, 0, 0, 0,
	1696, 0, 0, 0, 0, 0, 0, 0, 1669, 0,
	0, 0, 0, 0, 0, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1686,
	0, 0, 0, 1693, 0, 0, 0, 0, 1674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 1668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1686, 0, 0, 0, 0, 0, 0, 0, 0,
	1674, 0, 0, 532, 536, 542, 0, 543, 545, 0,
	0, 546, 547, 548, 0, 0, 550, 551,
}

var yyPact = [...]int{
	41223, -1000, -1000, -1000, -331, 11586, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 38928,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 38928,
	-328, 38359, 38359, -1000, -1000, 2301, -1000, 37790, 12742, 38928,
	362, 361, 38928, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 723, -1000, 37221, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 631, 41612, 40635, 8660, -262, -1000, 1287, -96, 2150,
	848, 868, 876, 876, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 299, 748, 36652,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3274, 463, 748, 15587, 23, 22, 1287, 358, -163,
	-152, -164, 2353, -1000, 1098, 41232, 167, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8660, 8660,
	11586, -360, 11586, 8660, 38928, 38928, -1000, -1000, -1000, -1000,
	631, 41612, 8660, 2150, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -152, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -163, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -164,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 22, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 41910, -1000, 1375,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2631, 1370,
	2149, 581, 38928, -1000, 1348, 581, -1000, -1000, -1000, 1287,
	3051, -1000, 38928, 38928, 95, 1616, -1000, 385, 329, 346,
	1344, -1000, -1000, -1000, -1000, -1000, -1000, 509, 3036, -1000,
	38928, 38928, 2655, 38928, -1000, 1986, 537, 42290, 2844, 1477,
	727, 2666, -1000, -1000, 2629, -1000, 205, 260, 217, 587,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 223, -1000, 2921,
	-1000, -1000, 192, -1000, -1000, 195, -1000, -1000, -1000, 21,
	-1000, -1000, -1000, -1000, -1000, -1000, -86, -1000, -1000, 943,
	1714, 8660, -1000, 1748, -1000, 2951, -1000, -1000, -1000, -1000,
	5156, 10996, 10996, 10996, 10996, -1000, -1000, 2444, 8660, 2621,
	2612, 2610, -1000, -1000, -1000, -1000, -1000, -1000, 1338, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1766, -1000,
	-1000, -1000, 10412, -1000, 2608, 2607, 2600, 2599, 2596, 2595,
	2594, 2592, 2589, 2588, 2584, 2583, 2579, 2578, 2345, 12155,
	2574, 2147, 2145, 2573, 2569, 2568, 2143, 2345, 2345, 2554,
	2553, 2543, 2541, 2540, 2538, 2534, 2533, 2532, 2530, 2529,
	2527, 2526, 2524, 2506, 2505, 2503, 2498, 2497, 2496, 2494,
	2493, 2492, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1062, -1000, 2478, 3033, 2402,
	-1000, 2935, 2924, 2895, 2891, -305, 2477, 1947, -1000, -1000,
	69, -1000, -128, -1000, -1000, 865, -1000, 823, -1000, 38928,
	38928, 140, 686, 625, 625, 625, 625, 625, 701, 625,
	2952, 722, 717, 714, 711, 625, -102, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1615, 1613, 2727, 799, -1000, -1000,
	-1000, -1000, 1187, 38928, -1000, 2403, 1504, 1504, 2947, 546,
	543, 528, 1504, 419, -1000, 1619, 1619, 1619, 1619, 1504,
	395, 553, 2955, 2955, 5, 1619, -3, 1504, 1504, -3,
	1504, 1504, 1504, 189, -311, -1000, -1000, -1000, -1000, 1619,
	1619, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2913, 2907,
	631, 631, 38928, 146, 38928, 631, 631, 631, 639, -59,
	40066, 39497, 1986, 530, 522, 1203, 1533, -1000, 1450, 38928,
	38928, 1450, 1450, 20139, 19570, -1000, 38928, -1000, 3033, 2402,
	2335, 1235, 2333, 2402, -168, -169, -171, 631, 631, 631,
	631, 631, 172, 631, 631, 631, 631, 631, 38928, 38928,
	36083, 631, 631, 6908, 6908, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 11586, 1724, 1812, 164, -61, -324,
	201, -1000, -1000, 38928, 2798, 163, -1000, -1000, -1000, 2358,
	-1000, 2391, 2391, 2391, 2391, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2391, 2391, 2400, 2476, -1000, -1000,
	2390, 2390, 2390, 2358, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2392,
	2392, 2399, 2399, 2392, 38928, 8660, 38928, 2830, 357, 2474,
	-1000, 38928, 355, 3033, 2827, 2955, 3004, -1000, -1000, 1337,
	1942, 2140, -1000, -1000, 385, 1483, -1000, 1020, -1000, -1000,
	-1000, -1000, 38928, -86, 359, -1000, -1000, 2128, 2468, -1000,
	502, 1142, 1120, -1000, 258, 3334, 30950, 1986, 30950, 38928,
	-1000, -1000, -1000, -1000, -1000, -1000, 20, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	202, -1000, 8660, 8660, 8660, 8660, 8660, -1000, 589, 9828,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10996, 10996, 10996,
	10996, 10996, 10996, 10996, 10996, 10996, 10996, 10996, 10996, 2441,
	1581, 10996, 10996, 10996, 10996, 1235, 2778, 1197, 245, -1000,
	-1000, -1000, -1000, -1000, 1629, 1714, 8660, 8660, 8660, 38928,
	-1000, -1000, 3325, 8660, 8660, 3264, 8660, 2874, 8660, 8660,
	8660, 2331, 3895, 38928, 8660, -1000, 2330, 2328, -1000, -1000,
	1850, 8660, -1000, -1000, 8660, -1000, -1000, 8660, 10996, 8660,
	-1000, -1000, -1000, 2417, 2874, 2874, 2874, 1575, 8660, 8660,
	2874, 2874, 2874, 1521, 2874, 2874, 2874, 2874, 2874, 2874,
	2874, 2874, 2327, 2326, 2325, 8076, 2955, -262, -1000, 6324,
	2827, 2955, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -307, 2465, 38928, 2139, 2138, -342, -53, 844,
	825, 830, -1000, 2862, -1000, 2463, 38928, 625, 625, 625,
	-1000, 38928, 1640, 30950, 38928, 38928, 1986, 38928, 38928, 38928,
	625, 625, 625, 625, 38928, -1000, 2762, 30950, 2735, 639,
	-1000, 38928, 1187, 2858, 38928, 3021, 10996, 10996, -1000, 35514,
	1619, 1504, 1504, -1000, -1000, 38928, -1000, -1000, -1000, 1619,
	38928, 1619, 1619, 3021, 1619, -1000, -1000, -1000, 1504, 1504,
	-1000, -1000, 8660, -1000, -1000, 1619, 1619, -1000, -1000, 3021,
	38928, 17, 3021, 3021, -13, -1000, -1000, -1000, 38928, 38928,
	625, 38928, -1000, 38928, 38928, -1000, -1000, 38928, 38928, 41507,
	38928, 34945, 2894, -1000, 30950, 38928, 38928, 28674, -1000, 1173,
	-1000, -44, -1000, -57, -59, 1450, -59, 1450, -1000, 499,
	545, 18432, 442, 30950, 4531, -1000, -1000, 1450, 1450, 4531,
	4531, 1384, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1186,
	-1000, 208, 2955, -1000, -1000, -1000, -1000, -1000, 1937, 1935,
	1929, 38928, 38928, 30950, 1986, 38928, 631, 38928, 38928, 38928,
	38928, 38928, -1000, 2452, 1325, -1000, 2841, 38928, 38928, 1041,
	-1000, -1000, 15018, 1314, 1041, -1000, 1639, -1000, 8660, 11586,
	-284, 8660, 11586, 11586, 8660, 11586, -1000, 8660, 150, -1000,
	-1000, -1000, -1000, 1924, -1000, 1923, -1000, -1000, -1000, -1000,
	-1000, 2132, 2132, -1000, 1920, -1000, -1000, -1000, -1000, 1917,
	-1000, -1000, 1916, -1000, -1000, -1000, 2324, 943, -1000, 2131,
	2664, -265, -1000, 17294, 38928, 38928, -1000, -1000, -265, -1000,
	16725, 38928, 2955, -1000, -268, 2827, 8660, 38928, -1000, 2939,
	-1000, 385, 280, -1000, -1000, -1000, -1000, -1000, -1000, 1309,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1183,
	-1000, 38928, -1000, -1000, 258, 30950, 32657, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 198, -1000, -1000, 175, -1000, 679,
	125, 1475, -1000, -1000, 149, 180, 98, 760, 1714, -1000,
	1703, 1703, 1650, -1000, 557, -1000, -1000, -1000, -1000, 2444,
	-1000, -1000, -1000, 2425, 2457, -1000, 1540, 1540, 1340, 1340,
	1340, 1340, 1340, 1560, 1560, -1000, -1000, -1000, 5156, 2441,
	10996, 10996, 10996, 10996, 592, 592, 3666, 3733, -1000, 8660,
	1625, -1000, 8660, 2100, 2019, 1451, 1301, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2323, 2322, 1926,
	3030, 2318, 8660, -1000, -1000, 1463, 1459, 1449, -1000, 2006,
	7492, -1000, -1000, -1000, 2315, 1290, 2312, -1000, -1000, -1000,
	2311, 1447, 1037, 2295, 2502, 2289, 1181, 8660, 8660, 8660,
	8660, 2285, 1445, 1434, 8660, 8660, 8660, 8660, 2284, 8660,
	8660, 8660, 8660, 8660, 8660, 8660, 8660, 40, 40, 40,
	1180, 1179, -1000, -1000, 1421, -1000, 1714, -1000, -1000, 2827,
	-1000, 2439, 1909, 1176, -1000, -1000, -1000, 2088, -1000, -1000,
	833, 805, 819, 38928, 915, 2438, 38928, 38928, 38928, 155,
	-1000, 2835, 1027, -1000, 125, -93, 370, 978, 2653, 3029,
	-188, 38928, 38928, 38928, 38928, 2857, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 34376, -1000, 2437, 1416, -1000, -1000,
	8660, -1000, -1000, 2646, 38928, 38928, 3021, 3021, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1619, 3021, 3021, 1471, 1504,
	1619, -1000, -1000, 1619, -1000, -1000, 1619, -1000, 1288, -1000,
	38928, -1000, -1000, -1000, 2851, 2403, 1174, -1000, -1000, -1000,
	3002, 1603, 605, 605, 895, 451, 3001, 14449, -1000, 1474,
	872, 670, 2764, 193, -1000, 1474, -210, 583, 1474, 1474,
	1474, 1474, 1474, 1474, 1474, 488, 483, 1474, 1474, 1474,
	1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, 863, 1474,
	1474, 1474, 1474, 1474, -1000, 1474, 2435, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 520, 153, 2887, 243, 241, 1027,
	2884, 257, 2910, 1019, -1000, -1000, -1000, -1000, 22415, 22415,
	17863, 22415, -1000, 1490, -59, -46, -1000, -1000, 1173, 4531,
	1173, 4531, -1000, -1000, 668, -1000, -1000, 978, -1000, 38928,
	38928, -1000, -1000, 2433, 1604, -1000, -1000, 12155, -1000, 4531,
	4531, -1000, -1000, 22984, 38928, -1000, -87, -1000, -64, 2827,
	-1000, -1000, -1000, 1132, -1000, -1000, 1162, 978, 2662, 38928,
	1132, 1132, 1132, -1000, -1000, 13311, 38928, 38928, -1000, -1000,
	3021, 6908, -1000, 28674, -1000, -1000, 33795, -1000, 33226, 3021,
	1606, -1000, 11586, 1789, 159, -1000, 196, -334, 158, 1686,
	156, 1714, -1000, -1000, 2282, 2280, 1413, -1000, 1412, 2279,
	1394, 1389, -1000, -24, -1000, 2803, 979, -1000, 2428, -1000,
	1382, 2722, -1000, 1123, -1000, 1592, 1356, -1000, 979, 1353,
	2715, 1123, 2827, 2119, -1000, 1122, -1000, 1957, 1284, 88,
	-1000, -1000, 38928, 2128, 1352, 32657, 998, -1000, 664, 1240,
	1236, -1000, 30950, 187, 30950, -1000, 30950, -1000, -1000, 314,
	-1000, 38928, 2819, -1000, -1000, -1000, 2088, 1574, -351, 38928,
	-1000, -1000, -1000, -1000, -1000, 1350, -1000, 592, 592, 3666,
	3511, -1000, 10996, -1000, 10996, 2753, 1578, -1000, 8660, 1771,
	41145, 41145, 1440, 21277, 38928, -1000, -1000, 8660, 8660, -1000,
	2739, -1000, -1000, -1000, -1000, 8660, 8660, 1802, -1000, 38928,
	-1000, -1000, -1000, -1000, 21277, -1000, 10996, -1000, 8660, 1045,
	1045, 2723, 1335, 40, 40, 40, 2719, 2699, 2649, 1333,
	40, 2642, 2627, 2619, 2597, 2586, 2576, 2472, 2367, -1000,
	2422, -1000, -1000, 1769, 9244, 6324, -1000, -1000, 237, 1093,
	1904, 112, -1000, 1572, -1000, -1000, -1000, 803, 176, 2278,
	1079, -1000, -1000, 38928, -1000, -1000, -1000, 13311, 2403, 2421,
	2403, 46, 1474, -1000, 518, 30950, 507, -1000, 38928, 1726,
	1569, 2622, 580, 2796, 38928, 2418, 2415, 2414, 2411, 2849,
	354, 42007, 38928, 1034, -1000, 1228, 41232, -1000, 38928, 1714,
	-1000, 1986, -1000, 1504, -1000, -1000, 3021, -1000, -1000, 8660,
	8660, 3021, 1504, 1504, 1619, 38928, -1000, 354, 42007, 2847,
	41637, 413, 2302, -1000, 38928, -1000, -1000, -1000, 659, -1000,
	790, 625, 38928, 1699, 790, 1684, 2410, -1000, -1000, 38928,
	38928, 38928, 38928, -1000, -1000, 38928, -1000, 38928, 38928, 38928,
	38928, 38928, 32088, -1000, 38928, 38928, -1000, 38928, 1682, 1680,
	2901, -1000, 1474, 1474, 775, -1000, -1000, 485, -1000, 32088,
	1901, 1895, 1889, 1887, 2118, 2117, 2116, 1474, 1474, 1886,
	2108, 31519, 2106, 949, 1883, 1881, 1880, 1884, 2105, 1055,
	-1000, 2104, 1861, 1852, 1847, 38928, 2406, 2049, -1000, -1000,
	46, 1474, 233, 38928, 1567, 518, 360, 1817, 19001, 38928,
	28674, 28674, 28674, 28674, -1000, 2688, 2679, -1000, 2696, 2689,
	2700, 38928, 28674, 2403, -1000, 31519, -1000, -1000, -1000, 1235,
	1316, 2842, 880, 8660, -1000, -1000, -54, -76, -1000, -1000,
	-1000, 30950, 2103, 442, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2936, 38928, 38928, 648, 2277, 1078, -1000, -1000, -1000,
	42007, 2391, 2391, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2391, 2391, 2400, -1000, -1000, 2390, 2390, 2390,
	2358, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2392, 2392, 2399, 2399, 2392, -1000, -1000, 3019, -1000, 1072,
	-1000, -1000, 1223, -1000, 3019, 1631, -338, 11586, 1624, 1516,
	-1000, 8660, 11586, 8660, -285, 220, -287, -1000, -1000, -1000,
	2099, -1000, -1000, -1000, 1874, -1000, 1872, 59, 81, 1677,
	-265, 6324, 353, 38928, -265, 38928, 6324, -1000, 38928, 341,
	-265, 2936, -24, 8660, 2751, -1000, -1000, 38928, 1862, -1000,
	-1000, -1000, 3028, 30950, 1986, 1408, 30381, -1000, 190, -1000,
	186, 465, 2098, -1000, 688, 111, 2092, 2088, -1000, -1000,
	-1000, -1000, 10996, -1000, -1000, -1000, -1000, 1714, 8660, 2275,
	-1000, 808, 808, 2273, 2272, -1000, 2391, 2391, -1000, 2358,
	2390, 2358, 808, 808, 2268, -1000, 1863, 2343, -1000, 2281,
	2226, 8660, -1000, 2266, 3403, 1052, -109, -237, 40, 40,
	-1000, -1000, -1000, -1000, 40, 40, 40, 40, -1000, 40,
	40, 40, 40, 40, 40, 40, 40, 582, -148, -319,
	-149, -320, -1000, 2262, 1061, -1000, -1000, -1000, -1000, -1000,
	3264, 1044, -1000, 2088, 2087, -1000, 2083, 2082, 915, 42007,
	2259, 2846, 13880, 2843, 1953, -1000, -1000, -1000, 29812, 469,
	-1000, -1000, -1000, 590, 181, 1859, 445, -1000, 38928, 257,
	2741, 1539, 2081, 38928, -1000, -1000, -1000, -1000, -1000, -1000,
	2796, -1000, 657, 303, 27536, 13880, 13880, 13880, 321, 350,
	1596, -1000, 581, 956, 1222, 28674, 38928, -1000, 28105, 2250,
	-1000, 978, 3021, -1000, 1714, 1714, -1000, 3021, 3021, 1504,
	-1000, 350, -1000, 321, -1000, 845, 16156, 411, 382, 376,
	-1000, 511, -1000, -1000, 569, 2779, 42007, -1000, 38928, -1000,
	38928, -1000, 38928, 38928, 625, 8660, 2779, 38928, 652, -1000,
	-1000, 939, 337, 281, 628, 628, 1023, -1000, 2818, -1000,
	-1000, 1011, -1000, -1000, -1000, -1000, 38928, -1000, -1000, -1000,
	-1000, -1000, -1000, 21277, 21277, 2872, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2079,
	2076, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	38928, 1296, -1000, 1538, 1953, 29812, 1534, 1450, 2070, 469,
	1726, 1531, -1000, 2068, -1000, 983, 38928, 38928, -1000, 1059,
	-1000, 1529, 2638, 2370, 2638, -1000, -1000, -1000, -1000, 2678,
	-1000, 2590, -1000, -1000, 1059, -1000, -1000, -1000, -1000, -1000,
	880, -1000, 2930, 790, 790, 790, 2249, -1000, -1000, -1000,
	998, 2247, -1000, -1000, -1000, 3041, -1000, -1000, -1000, -1000,
	-1000, -1000, 13311, 2772, 3013, 3000, 29243, 3013, -1000, -338,
	1478, -1000, 1692, 152, 1663, 38928, -1000, -1000, -1000, 2246,
	2245, -270, 74, 2998, 2994, 861, -1000, 2240, 991, -265,
	-1000, -1000, 979, -1000, -1000, -1000, -265, -1000, 979, -1000,
	59, -1000, -1000, 2773, -1000, -1000, 1986, -1000, 185, -1000,
	-1000, -1000, -1000, -1000, -1000, 113, -1000, 38928, -1000, 988,
	110, -1000, 1714, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8660,
	-1000, -1000, -1000, 2210, -1000, -1000, 8660, 2235, 2063, 2228,
	2062, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3033, -1000, 2990, 2225, 2224,
	2223, 2216, 2214, 2212, -1000, 8660, 2211, 3264, -1000, -1000,
	-1000, -1000, -1000, -1000, 726, 321, 2183, 984, -1000, -1000,
	-1000, -1000, 321, -1000, 2061, 121, -1000, -1000, -1000, 2059,
	2057, 1858, -1000, -1000, 1843, 1293, 135, -1000, -1000, -1000,
	-1000, -1000, -1000, 1817, 1794, 1523, -352, -1000, 2388, -1000,
	1474, 1474, 1474, 38928, 1295, -1000, 1474, 1474, 2182, 2160,
	2158, -190, 549, 1527, 1514, -1000, 1857, 22415, 28674, 28105,
	1039, -1000, 1219, -1000, -1000, -1000, -1000, -1000, 3021, 549,
	-1000, 396, 1856, 10996, 2387, 10996, 2384, 417, 2381, 1292,
	-1000, 38928, -1000, -1000, 38928, 277, 2380, -1000, 2379, 2644,
	381, 2377, 2374, 38928, 2141, -1000, 2779, 38928, 596, 2757,
	-1000, -1000, -1000, 273, -1000, -1000, 447, -1000, 38928, -1000,
	38928, -1000, 1339, -1000, 21277, -1000, -1000, 1282, -1000, 2049,
	2039, -1000, 121, 2037, 4531, -1000, -1000, 2741, 2036, -1000,
	38928, 983, 983, 3033, 38928, 6324, -1000, -1000, 8660, 2369,
	-1000, 8660, -1000, -1000, -1000, -1000, -1000, 2366, 2755, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1908, -1000, 8660, 8660,
	-1000, -1000, 610, 11586, -288, 219, -1000, -1000, -1000, -273,
	2033, -1000, -1000, 2987, 2032, 1990, 38928, -1000, -1000, 979,
	979, -270, -1000, -1000, 978, -1000, -1000, -13, 486, -1000,
	2135, -1000, 2091, 40, -1000, 40, -1000, 154, 8660, -1000,
	-1000, -1000, -1000, -1000, -1000, 2072, -1000, 2146, 42007, -191,
	-190, 13880, -191, -1000, -1000, 311, -1000, -1000, 252, -1000,
	-1000, 1753, 508, -1000, -1000, -1000, 1522, 1741, 1995, 25829,
	21277, 21846, 2031, -1000, -1000, 27536, 1908, 1908, 42231, 202,
	42231, -1000, 2364, 862, 1502, -1000, 1853, -1000, 1851, -1000,
	3021, 1039, 1219, -1000, -1000, 1405, -1000, 862, 2302, 2986,
	-1000, 3384, 38928, 3260, 38928, 2363, 1517, 10996, -1000, 569,
	2704, -1000, -1000, 277, -1000, -1000, 1669, 10996, -1000, -1000,
	2020, 21846, 715, 1511, 1510, 747, 2362, -1000, 446, 3040,
	-1000, -1000, -1000, 773, 2361, -1000, 1673, 1660, -1000, 38928,
	-1000, 25829, 25829, 315, 315, 25829, 25829, 2359, 628, -1000,
	-1000, 10996, -1000, -1000, 1474, -1000, -1000, -1000, 1474, 1291,
	-1000, -1000, -1000, -1000, -1000, -1000, 1794, -1000, -1000, 2955,
	-1000, -1000, 1714, 38928, 1714, 26967, -1000, 2985, 2984, -1000,
	1714, 943, -1000, -338, 38928, 38928, -275, 1844, -1000, 2018,
	66, -1000, -1000, 964, -273, -277, 51, 70, 1486, -1000,
	-1000, -1000, -1000, 2133, -1000, 526, -1000, -1000, -1000, 943,
	-1000, -1000, -186, -1000, -1000, 335, -1000, -1000, -1000, 456,
	2017, -1000, -1000, 247, -1000, -1000, 2015, -1000, -1000, 107,
	-1000, 1480, 1277, -1000, 2358, 8660, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 568, 42179, -1000, 872, -1000, -13,
	568, 24691, 490, 240, -1000, 1835, -1000, -1000, 3033, -1000,
	480, -1000, 397, -1000, 1243, -1000, 1232, 26398, 1832, 3031,
	-1000, 42012, 693, -1000, -1000, 3666, -1000, -1000, -1000, -1000,
	-1000, -1000, 2012, 2011, -1000, -1000, -1000, -1000, -1000, 1831,
	2357, -40, 2870, 2009, -1000, -1000, 2355, 1226, 1217, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1198, 1193, 25829,
	-1000, -1000, 3666, 1829, 21277, 1474, -1000, -1000, 1175, 1156,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2354, -1000, -1000,
	2983, -275, -1000, 2005, 638, 57, 70, -1000, 2974, 65,
	2973, 2970, 1997, -1000, -1000, 542, -266, 37, 35, 34,
	-1000, -1000, -1000, 8660, 38928, 443, -1000, -1000, -1000, 109,
	-1000, -1000, -1000, -1000, 1995, 1993, -1000, 25829, 2818, 1919,
	377, 2968, 42231, -1000, 1474, -1000, 377, 1130, -1000, 1474,
	1474, -1000, 347, -1000, 1472, -1000, 1811, -1000, 2955, -1000,
	316, -1000, 388, -1000, -1000, -1000, 1107, -1000, -1000, -1000,
	42012, 401, -1000, 548, 2346, -1000, -1000, 2096, 8660, 2345,
	1474, 2077, -175, 25829, 2641, 2639, 2634, 2427, 1105, -1000,
	-1000, 21277, -1000, -1000, 25260, 38928, 1990, -1000, -1000, 2337,
	1793, 74, 62, 2967, -1000, 1990, 2965, 1990, 1990, 932,
	1645, -1000, 32, 30, 28, -1000, -1000, -1000, -1000, 455,
	-1000, 182, -1000, -1000, -1000, 269, -1000, -1000, 2818, -1000,
	2962, 413, -1000, 21277, -1000, -1000, 24691, 1908, 1908, -1000,
	-1000, 1768, -1000, -1000, -1000, -1000, 1763, -1000, -1000, -1000,
	1102, -1000, 38928, 758, 8660, -1000, 1878, -1000, 38928, -1000,
	2356, -1000, 168, 1094, 269, 315, 269, 315, 269, 315,
	269, 315, 174, -1000, -1000, -1000, 1042, -1000, -1000, 2867,
	20708, 48, -1000, -1000, -1000, 1992, -1000, 1990, -1000, -1000,
	-1000, 43, 542, -1000, -1000, -1000, 1988, -1000, -1000, -1000,
	-1000, 1474, 1474, 1987, 1984, 294, -1000, -1000, -1000, 24122,
	411, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 401, 42231,
	-1000, 8660, 1002, 628, -1000, -1000, 2144, 2109, 3027, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 38928,
	-1000, 38928, -1000, 987, -1000, -1000, -1000, 1056, -1000, -1000,
	-1000, -1000, 1464, -1000, -315, 1742, 1720, -1000, -1000, 38928,
	-1000, 38928, 396, -1000, 42231, 986, -1000, -1000, -1000, 3039,
	-1000, 3032, 846, 846, 269, 269, 269, 269, -1000, 921,
	-1000, 1452, -1000, 23553, 38928, 1969, -1000, -1000, 1959, -1000,
	-1000, -1000, 972, 2302, -1000, -1000, -1000, -1000, 1815, 458,
	-1000, 38928, 5740, -1000, 881, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1714, 38928, -1000,
}

var yyPgo = [...]int{
	0, 162, 3067, 246, 176, 3636, 92, 247, 218, 216,
	244, 3635, 3634, 3631, 2812, 2803, 3630, 3629, 3621, 3619,
	3618, 3617, 3616, 3615, 3613, 3612, 3611, 3610, 3609, 3608,
	3607, 3606, 3605, 3604, 3603, 3600, 3597, 3596, 3595, 3593,
	3591, 3590, 3589, 3588, 3587, 3586, 243, 3584, 3583, 3582,
	3581, 3580, 3579, 3578, 3577, 3576, 3575, 3574, 3572, 3571,
	3570, 3569, 3568, 3567, 3566, 3561, 3560, 3559, 3558, 3557,
	3556, 3555, 3554, 3553, 3552, 3551, 3537, 3536, 3535, 214,
	3534, 2796, 3533, 3532, 3519, 3518, 3517, 3515, 3514, 240,
	3512, 3509, 3508, 3507, 3505, 3504, 3502, 3501, 3500, 3499,
	3498, 238, 3497, 3495, 3493, 3492, 3491, 3489, 229, 3488,
	160, 198, 3487, 3485, 3482, 3481, 3480, 3479, 233, 185,
	68, 3478, 48, 3476, 3475, 203, 3474, 143, 3473, 138,
	3472, 3471, 3470, 3462, 3460, 3459, 3458, 3457, 3456, 3455,
	3450, 3449, 3448, 3446, 3445, 3444, 90, 3443, 256, 3441,
	70, 3439, 3438, 119, 94, 182, 253, 2551, 248, 250,
	178, 175, 95, 3429, 2804, 3428, 190, 232, 163, 26,
	3427, 131, 3425, 257, 46, 32, 241, 132, 61, 167,
	113, 3424, 204, 106, 102, 3422, 3417, 137, 236, 164,
	3414, 100, 3413, 3411, 3410, 3389, 3388, 189, 179, 3386,
	3385, 122, 3383, 3382, 126, 3381, 72, 128, 156, 127,
	3379, 172, 112, 121, 123, 170, 3378, 71, 3374, 3372,
	3368, 3367, 166, 3364, 3358, 129, 66, 3355, 3354, 3353,
	69, 3352, 74, 3346, 22, 3344, 62, 3341, 3337, 3334,
	3332, 3331, 3330, 3329, 3328, 3325, 3324, 3323, 55, 3319,
	3318, 7, 13, 12, 3316, 24, 3315, 157, 3313, 3312,
	3306, 3304, 3303, 85, 84, 3302, 86, 151, 3300, 8,
	25, 76, 3298, 3297, 220, 210, 97, 145, 3295, 412,
	3293, 3292, 3291, 171, 3289, 569, 3288, 3287, 3286, 3279,
	3278, 3277, 120, 3273, 212, 42, 3270, 124, 136, 3269,
	39, 47, 199, 206, 3268, 3267, 3266, 589, 205, 98,
	37, 0, 3265, 158, 3263, 3262, 3260, 259, 3257, 228,
	227, 154, 274, 251, 174, 3256, 3255, 65, 3253, 150,
	38, 54, 130, 235, 20, 208, 3252, 188, 186, 3250,
	200, 3249, 237, 10, 142, 3248, 3247, 30, 258, 3246,
	3244, 3243, 118, 3242, 3241, 264, 77, 3240, 3239, 3236,
	3235, 35, 3234, 33, 16, 3233, 99, 3232, 252, 3230,
	249, 135, 169, 168, 147, 217, 223, 80, 73, 3229,
	1585, 146, 96, 14, 3228, 231, 3226, 194, 111, 3225,
	79, 3222, 242, 383, 201, 3221, 173, 9, 45, 31,
	28, 44, 11, 215, 211, 3220, 3219, 21, 51, 3217,
	134, 3215, 18, 3214, 3213, 56, 3, 3212, 3211, 15,
	17, 3210, 34, 219, 159, 117, 87, 64, 3209, 3208,
	49, 207, 3207, 133, 152, 149, 3206, 75, 3204, 3201,
	3200, 664, 3199, 255, 3198, 3197, 3196, 3194, 3192, 3191,
	3190, 3189, 3188, 3186, 105, 43, 3184, 3183, 3182, 3181,
	78, 144, 3180, 3179, 3166, 3164, 36, 139, 3163, 19,
	3161, 29, 27, 41, 3159, 93, 3158, 4, 183, 3156,
	3154, 5, 3153, 3150, 1, 2, 3149, 3147, 115, 3144,
	89, 23, 155, 108, 3143, 3142, 81, 202, 141, 3141,
	3140, 101, 239, 192, 3139, 91, 221, 254, 3138, 197,
	3137, 3136, 3135, 3133, 3132, 3131, 1012, 3129, 3128, 245,
	67, 88, 110, 3126, 3125, 3124, 83, 148, 116, 107,
	57, 82, 3123, 109, 184, 3121, 187, 3120, 3119, 103,
	3115, 3111, 3109, 3108, 181, 3106, 3105, 180, 222, 3103,
	3081, 410, 3080, 3079, 3078, 3077, 3072, 3071, 3070, 3069,
	3065, 3063, 226, 328, 3061,
}

//line mysql_sql.y:10902
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) PartitionNamesUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterPartitionOptionUnion() tree.AlterPartitionOption {
	v, _ := st.union.(tree.AlterPartitionOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) sourceOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 557, 560, 560, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 542, 542, 542, 543,
	543, 112, 134, 133, 136, 136, 135, 135, 132, 132,
	128, 131, 131, 130, 130, 129, 124, 126, 126, 125,
	127, 127, 113, 101, 114, 487, 487, 486, 486, 485,
	485, 438, 438, 484, 484, 484, 483, 483, 483, 482,
	482, 481, 481, 480, 480, 478, 478, 479, 477, 476,
	476, 476, 474, 474, 474, 470, 470, 472, 471, 471,
	473, 465, 465, 468, 468, 466, 466, 466, 466, 469,
	464, 464, 464, 463, 463, 100, 100, 100, 382, 382,
	99, 99, 396, 396, 396, 396, 396, 394, 394, 394,
	394, 394, 394, 393, 393, 392, 392, 397, 397, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 90,
	90, 90, 90, 90, 95, 95, 95, 548, 548, 547,
	547, 549, 549, 549, 549, 550, 550, 93, 93, 93,
	94, 391, 391, 391, 91, 92, 92, 381, 381, 386,
	386, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 390, 390, 390, 388, 388, 387,
	387, 389, 389, 84, 84, 84, 87, 86, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 378, 378, 377, 96, 96, 97, 545, 545,
	544, 546, 546, 546, 546, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 512, 512, 512, 514, 514, 315,
	316, 561, 318, 314, 314, 314, 508, 508, 509, 510,
	511, 511, 511, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 83, 256, 256, 261, 261,
	262, 262, 262, 267, 267, 268, 268, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 244,
	244, 244, 239, 239, 239, 239, 240, 240, 241, 241,
	242, 242, 242, 242, 243, 243, 308, 308, 263, 263,
	263, 265, 265, 264, 260, 258, 258, 258, 258, 258,
	258, 259, 259, 259, 259, 266, 266, 76, 82, 82,
	82, 525, 525, 77, 536, 536, 441, 441, 329, 329,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 446, 447, 325, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 53,
	56, 52, 52, 52, 367, 367, 51, 562, 562, 303,
	303, 64, 63, 55, 65, 66, 67, 68, 69, 70,
	50, 62, 62, 62, 62, 62, 62, 62, 62, 73,
	459, 459, 564, 564, 564, 71, 72, 440, 440, 440,
	61, 60, 59, 58, 57, 57, 49, 49, 48, 48,
	54, 140, 141, 322, 322, 322, 324, 324, 320, 563,
	563, 410, 410, 323, 323, 47, 47, 47, 47, 74,
	321, 321, 302, 319, 319, 319, 12, 12, 10, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 25, 26, 28, 375, 375, 372, 27,
	19, 18, 18, 22, 21, 17, 17, 20, 23, 24,
	24, 9, 9, 9, 9, 14, 14, 15, 161, 161,
	212, 212, 520, 520, 516, 516, 517, 517, 517, 518,
	518, 519, 519, 108, 453, 453, 453, 453, 453, 453,
	8, 183, 183, 452, 452, 452, 452, 452, 452, 379,
	379, 379, 497, 497, 497, 498, 182, 182, 177, 177,
	454, 454, 344, 499, 499, 462, 462, 461, 461, 460,
	460, 180, 180, 181, 181, 164, 164, 119, 119, 467,
	467, 467, 467, 475, 475, 437, 437, 248, 248, 295,
	295, 296, 296, 154, 154, 155, 155, 155, 155, 155,
	155, 551, 551, 552, 553, 554, 554, 555, 555, 555,
	556, 556, 556, 556, 556, 505, 505, 507, 507, 506,
	179, 179, 175, 175, 176, 176, 176, 174, 174, 173,
	172, 172, 171, 169, 169, 169, 170, 170, 170, 187,
	187, 157, 157, 157, 156, 156, 156, 156, 156, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 158, 158, 513, 513, 513, 442, 442, 442, 449,
	449, 276, 276, 277, 277, 275, 275, 159, 159, 160,
	160, 160, 160, 274, 274, 273, 162, 162, 168, 167,
	167, 163, 163, 163, 163, 284, 284, 283, 283, 283,
	283, 111, 117, 117, 118, 186, 186, 282, 281, 281,
	281, 185, 185, 184, 184, 178, 178, 166, 166, 166,
	166, 280, 165, 278, 541, 541, 540, 540, 539, 537,
	537, 537, 538, 538, 538, 538, 489, 489, 489, 489,
	489, 309, 309, 309, 313, 313, 312, 312, 312, 312,
	312, 317, 7, 7, 7, 7, 7, 7, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 38, 196, 197, 39, 198, 198, 199, 199, 200,
	200, 201, 202, 203, 203, 203, 203, 37, 188, 188,
	189, 189, 190, 190, 191, 192, 192, 192, 195, 193,
	194, 194, 559, 559, 558, 36, 36, 29, 147, 147,
	148, 148, 148, 150, 150, 245, 245, 245, 149, 149,
	151, 151, 151, 521, 524, 522, 522, 526, 526, 526,
	527, 527, 527, 527, 528, 528, 30, 137, 142, 531,
	531, 531, 530, 530, 532, 532, 533, 533, 299, 299,
	300, 300, 145, 146, 146, 144, 139, 153, 153, 153,
	153, 153, 138, 143, 523, 529, 529, 529, 376, 376,
	373, 374, 374, 371, 370, 370, 370, 535, 535, 534,
	534, 534, 310, 310, 31, 366, 366, 368, 369, 369,
	369, 360, 360, 360, 360, 35, 364, 364, 365, 365,
	365, 365, 365, 365, 365, 361, 361, 363, 363, 359,
	359, 359, 359, 359, 359, 34, 152, 152, 358, 358,
	355, 355, 353, 353, 354, 354, 352, 352, 352, 356,
	356, 42, 75, 43, 44, 45, 41, 357, 357, 33,
	33, 33, 33, 121, 120, 120, 120, 120, 120, 123,
	123, 298, 298, 297, 297, 122, 40, 224, 224, 429,
	429, 424, 424, 424, 424, 424, 444, 444, 444, 425,
	425, 425, 426, 426, 426, 428, 428, 428, 427, 427,
	427, 427, 427, 443, 443, 445, 445, 445, 398, 398,
	399, 399, 399, 402, 402, 416, 416, 417, 417, 415,
	415, 422, 422, 421, 421, 420, 420, 419, 419, 418,
	418, 418, 418, 413, 413, 412, 412, 400, 400, 400,
	400, 400, 401, 401, 401, 411, 411, 414, 414, 272,
	272, 271, 271, 232, 232, 233, 233, 270, 270, 230,
	230, 231, 231, 231, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 495,
	495, 496, 235, 235, 246, 246, 246, 246, 246, 246,
	234, 234, 236, 236, 213, 213, 211, 211, 204, 204,
	205, 205, 206, 206, 206, 210, 210, 209, 209, 209,
	209, 207, 207, 208, 208, 208, 208, 208, 208, 384,
	384, 492, 492, 493, 493, 488, 488, 488, 491, 491,
	491, 491, 491, 491, 494, 494, 494, 490, 490, 214,
	293, 293, 293, 311, 311, 311, 311, 292, 292, 292,
	229, 229, 228, 228, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 383, 383, 326, 326,
	327, 327, 255, 254, 254, 254, 254, 254, 252, 253,
	251, 251, 251, 251, 251, 250, 250, 249, 249, 249,
	362, 362, 247, 247, 238, 238, 238, 237, 237, 237,
	423, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 290, 290, 290,
	291, 291, 291, 291, 291, 291, 336, 336, 341, 341,
	504, 504, 503, 215, 215, 215, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 225, 225, 225, 407, 407,
	407, 407, 408, 408, 408, 408, 409, 409, 409, 405,
	405, 406, 406, 345, 346, 346, 450, 450, 451, 451,
	403, 403, 404, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 458, 458, 458, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 515, 515, 515, 500, 500, 500, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 288, 288, 288,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 347, 347, 348, 348, 455,
	455, 455, 455, 455, 455, 456, 456, 457, 457, 457,
	457, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	334, 285, 285, 285, 349, 342, 342, 343, 343, 337,
	337, 337, 337, 337, 337, 337, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 338, 338,
	340, 340, 351, 351, 351, 350, 350, 350, 350, 350,
	350, 350, 227, 227, 227, 227, 331, 331, 331, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 217, 217, 217, 217, 221, 221, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 222, 222, 222, 222, 222, 220, 220, 220, 220,
	220, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 109,
	110, 110, 219, 294, 294, 430, 430, 433, 433, 431,
	431, 432, 434, 434, 434, 435, 435, 435, 436, 436,
	436, 439, 439, 301, 301, 301, 307, 307, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 4, 1, 3, 1, 6,
	3, 3, 3, 1, 1, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 6, 3, 3, 1, 1, 7, 7, 8,
	8, 0, 4, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 2, 5, 5, 0, 2, 7, 0, 1, 0,
	1, 5, 5, 3, 3, 2, 4, 4, 4, 4,
	4, 1, 1, 1, 3, 3, 1, 1, 1, 6,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 4, 6, 7, 4, 4, 7, 8,
	3, 3, 3, 0, 2, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 4, 3,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 6, 4, 4, 4, 4, 4, 3, 6, 3,
	5, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 1, 3, 2, 1, 5, 4, 4, 2, 0,
	5, 4, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 6, 4, 5, 7, 4,
	5, 0, 1, 3, 8, 0, 6, 0, 4, 6,
	1, 1, 1, 1, 1, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 0,
	2, 3, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 14, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	1, 1, 0, 1, 2, 9, 9, 7, 1, 2,
	3, 3, 3, 0, 4, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 1, 0, 2, 7, 8, 8, 0,
	3, 3, 0, 3, 0, 3, 0, 5, 1, 3,
	0, 3, 3, 0, 2, 9, 6, 0, 2, 2,
	3, 3, 4, 4, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 3,
	2, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 2, 6, 0, 4, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 8, 2, 4, 4, 4, 9, 0, 2, 11,
	9, 11, 8, 2, 2, 9, 4, 5, 3, 0,
	4, 1, 3, 0, 3, 5, 10, 0, 2, 0,
	2, 0, 3, 2, 4, 3, 0, 2, 1, 0,
	2, 3, 0, 2, 3, 0, 2, 1, 0, 3,
	2, 4, 3, 0, 1, 0, 1, 1, 0, 6,
	0, 3, 5, 0, 4, 0, 3, 1, 3, 4,
	5, 0, 3, 1, 3, 2, 3, 1, 2, 0,
	4, 6, 5, 0, 2, 0, 2, 4, 5, 4,
	5, 1, 5, 6, 5, 0, 3, 0, 1, 1,
	3, 3, 3, 0, 4, 1, 3, 3, 3, 0,
	1, 1, 3, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 5, 4, 1,
	3, 3, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 1, 1, 1, 7, 9, 7,
	9, 2, 1, 7, 9, 7, 9, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 3, 3, 2, 2, 1, 5, 6, 4,
	1, 1, 1, 5, 4, 1, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	6, 1, 1, 1, 1, 1, 1, 4, 4, 4,
	7, 7, 7, 7, 7, 7, 0, 2, 0, 1,
	1, 2, 4, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 2,
	5, 0, 1, 3, 0, 1, 0, 2, 0, 2,
	0, 1, 6, 8, 8, 6, 6, 5, 5, 5,
	6, 6, 6, 6, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 4, 4, 4, 3, 4, 6, 6,
	7, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 8,
	4, 2, 3, 2, 4, 2, 2, 4, 6, 2,
	2, 4, 6, 4, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 1, 1,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -557, -560, -2, -5, 610, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -154, -115, -116, 600,
	-85, -86, -87, -32, -31, -30, -29, -137, -142, 606,
	445, 14, 494, -14, -15, -505, -16, 258, -314, -315,
	-316, -318, -561, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -140, -141,
	-74, -56, -75, -77, -76, -82, -78, -83, -139, -144,
	-13, 233, -81, 76, -91, -92, -93, -94, -95, -97,
	-98, 369, 375, 432, 599, 61, -155, -157, 616, 617,
	158, 159, 161, 162, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 229, 16, 537,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-138, -24, -143, -22, 253, 252, 38, 319, 320, 321,
	373, 251, 230, 15, 31, 42, 349, -156, 82, 529,
	530, 532, 231, -158, 13, 620, -6, -3, -2, -124,
	-128, -132, -135, -136, -133, -134, -4, -110, 116, 243,
	601, -311, 365, 602, 604, 603, 85, 93, -304, -306,
	369, 375, 599, 617, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 566,
	567, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 497, 586, 587, 588, 589, 525, 585,
	347, 348, 534, 270, 294, 400, 300, 307, 158, 177,
	171, 199, 191, 530, 166, 274, 312, 275, 92, 161,
	480, 106, 457, 429, 164, 289, 291, 293, 526, 527,
	359, 296, 524, 295, 297, 299, 528, 276, 350, 187,
	182, 288, 272, 180, 277, 40, 278, 204, 279, 280,
	539, 453, 346, 459, 304, 52, 427, 181, 454, 292,
	456, 208, 212, 471, 472, 175, 176, 461, 474, 203,
	206, 207, 250, 343, 344, 43, 536, 262, 475, 210,
	202, 198, 483, 308, 306, 201, 174, 197, 273, 65,
	214, 213, 215, 423, 424, 425, 426, 281, 282, 363,
	470, 194, 183, 351, 167, 23, 478, 257, 458, 376,
	283, 301, 309, 209, 211, 264, 269, 538, 529, 431,
	268, 305, 476, 179, 261, 290, 256, 479, 168, 532,
	378, 284, 162, 298, 473, 482, 64, 391, 173, 165,
	247, 159, 266, 271, 285, 286, 287, 523, 311, 310,
	302, 531, 195, 263, 200, 185, 172, 196, 160, 265,
	481, 392, 597, 349, 410, 193, 190, 267, 240, 477,
	460, 163, 414, 393, 188, 313, 593, 594, 595, 364,
	342, 314, 315, 186, 254, 451, 452, 318, 420, 334,
	394, 430, 401, 395, 221, 222, 322, 463, 465, 205,
	596, 323, 324, 325, 455, 326, 327, 328, 329, 368,
	56, 58, 94, 96, 618, 63, 29, -389, -387, -311,
	530, 599, 375, 529, 532, 369, 349, 617, -198, -311,
	619, -164, 39, -211, -311, -164, -81, -15, -14, -156,
	-157, -211, 237, -319, 24, 427, -89, 428, 233, 82,
	-311, -9, -101, -8, -108, -79, -154, 432, -317, -311,
	319, 319, -317, 237, -311, 268, 408, -441, 243, -393,
	-366, 269, -392, -368, -395, -369, 32, 229, 231, 230,
	265, 16, 373, 239, 14, 13, 374, 251, 25, 26,
	28, 15, 375, 377, 29, 378, 381, 382, 383, 42,
	386, 387, 258, 85, 93, 88, 276, -197, -311, -343,
	-337, 113, 259, -339, -332, -333, -335, -484, -478, -330,
	82, 140, 141, 148, 114, -334, -423, 36, 116, 546,
	585, 495, -286, -287, -288, -289, -290, -291, -311, -479,
	-477, 88, 97, 100, 103, 104, 102, 101, 152, 184,
	99, 89, 153, -157, 85, -500, 555, -305, 578, 586,
	587, 588, 589, 577, 61, -448, -457, 236, -455, 151,
	189, 254, 185, 14, 146, 420, 186, 552, 574, 497,
	556, 566, 581, 548, 549, 550, 543, 544, 545, 547,
	557, 559, 573, -458, 569, 579, 580, 565, 582, 583,
	584, 615, 87, 86, 572, 571, 558, 553, 554, 560,
	542, 551, 561, 562, 570, 575, 576, 357, 106, 358,
	359, 487, 350, 360, 243, 427, 70, 361, 362, 363,
	364, 365, 494, 366, 71, 367, 356, 258, 410, 368,
	188, 205, 499, 498, 500, 491, 488, 486, 489, 490,
	492, 493, 563, 564, 568, -117, -118, 591, -551, -279,
	-552, 6, 7, 8, 9, -553, 153, -542, 429, 538,
	88, 163, 160, -380, 163, 112, 168, 167, -380, 322,
	264, -357, -147, 347, 410, 326, 94, 268, -360, -358,
	526, -443, 316, 312, 288, 238, 109, -148, 248, 247,
	107, 487, 236, 384, 307, 56, 58, -516, -517, 226,
	227, 228, -507, 520, -506, -311, 359, 96, 27, 237,
	370, 264, 465, 463, 464, 466, 467, 468, 469, -62,
	-459, -440, 460, 459, -323, 452, 458, 450, 462, 453,
	348, 328, 327, 229, 611, 527, 521, -301, 394, 430,
	484, 485, 371, 431, 471, 473, 454, 106, 192, 189,
	238, 240, 237, 347, 487, 410, 94, 326, -516, 160,
	471, 473, 268, 408, 41, -386, 420, -385, -387, 472,
	483, 86, 87, 470, -301, 106, 451, 451, -551, -279,
	-155, -157, -111, -505, 528, 528, 528, 238, 347, 410,
	268, 239, 237, 523, 526, 240, 487, 236, 319, 370,
	264, 326, 94, -442, -513, 32, -449, 223, 224, 225,
	33, 34, -1, 120, 620, -337, -337, -6, 623, -6,
	-337, -311, -311, 155, -217, -221, -218, -220, -219, -223,
	-222, 189, 190, 151, 193, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 206, 207, 204, 31, 205, 254,
	185, 186, 187, 188, 208, 171, 191, 535, 216, 172,
	217, 173, 218, 174, 219, 175, 176, 220, 177, 180,
	181, 182, 183, 179, 154, 82, 154, 88, -180, 260,
	-211, 154, -180, -551, -173, -174, 11, -211, -292, -311,
	429, 123, -89, -89, 428, -508, -509, -510, -512, 233,
	428, 427, 154, 276, 17, -317, -317, 80, -211, -368,
	268, -393, -366, 36, 79, 155, 241, 155, 79, 82,
	371, 347, 410, 372, 487, 237, 384, 240, 268, 385,
	347, 410, 237, 240, 487, 268, 347, 237, 240, 410,
	268, 385, 450, 451, 240, 27, 376, 379, 380, 451,
	-463, 483, 155, 112, 109, 110, 111, -337, 130, -350,
	123, 124, 125, 126, 127, 128, 129, 137, 136, 147,
	140, 141, 142, 143, 144, 145, 146, 138, 139, 133,
	113, 131, 135, 132, 115, -157, -337, -343, 61, -335,
	-335, -335, -335, -423, -341, -337, 82, 82, 82, 154,
	101, 88, -337, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, -456, 82, 82, -347, -348,
	82, 82, -330, -292, 82, 88, 88, 82, 82, 82,
	88, -348, -348, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, -174, 155, -173, 82,
	-173, -174, -158, -157, 32, 33, 32, 33, 32, 33,
	32, 33, -554, 608, 82, 97, 618, 221, 476, 537,
	166, 167, 168, -196, -311, -198, 370, 240, 523, 240,
	-148, -355, 243, -355, -355, -355, -355, 239, -355, 24,
	237, 237, 237, 237, -355, 494, 123, 123, 59, -518,
	170, 155, -507, -179, 82, -322, 131, 135, -322, 24,
	266, 266, 266, -322, 306, -562, -563, 17, 133, -320,
	-563, -320, -320, -322, -564, 239, 461, 43, 267, 266,
	-175, -176, 22, -175, 455, 451, -410, 456, 457, -324,
	-563, -323, -322, -322, -323, -322, -322, -322, 237, 240,
	487, 326, 612, -562, -562, 31, 31, -441, -441, -211,
	-441, 521, -302, -311, -441, -441, -441, -519, 242, -548,
	-547, 474, -550, 476, 160, -387, 160, -387, -368, 268,
	268, 155, 123, 24, -388, 123, 134, -387, -387, -388,
	-388, -234, 41, -310, 151, -311, 88, -234, 41, -545,
	-544, -211, -174, -158, -157, 83, 83, 83, 531, 531,
	531, -441, -441, -441, -441, -441, -443, -441, -441, -441,
	-441, -441, -317, -188, -311, -198, 243, -441, -441, -159,
	-160, 142, -337, -311, -159, -3, -126, -125, 117, 118,
	120, 602, 365, 601, 605, 599, -387, 41, -436, 392,
	391, -430, -432, 82, -431, 82, -431, -431, -431, -431,
	-431, 82, 82, -433, 82, -433, -433, -430, -434, 82,
	-434, -435, 82, -435, -434, -311, -342, -343, -311, 39,
	-452, 61, -154, 82, 31, 82, -311, -453, 61, -154,
	82, 31, -174, -119, 39, -176, 21, 154, 97, 88,
	-89, 83, 155, -511, 103, 104, -514, 203, 195, -311,
	-104, 88, -7, -8, -9, -10, -46, -79, -154, -480,
	-478, 82, 32, 419, 79, 17, -394, 237, 487, 370,
	264, 240, 347, -392, -375, -372, -370, -310, -368, -371,
	-370, -397, -292, 451, -120, 434, 433, 318, -337, -337,
	-337, -337, -337, 102, 113, 342, 103, 104, -332, -351,
	32, 314, 315, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -340, -349, -423, 82, 133,
	131, 135, 132, 115, -335, -335, -333, -333, 83, 155,
	-504, -503, 117, -337, -337, -337, -311, -501, -502, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	361, 356, 362, 360, 350, 368, 363, 364, 188, 518,
	519, 512, 513, 514, 515, 516, 517, -342, -342, -337,
	-501, -342, -285, 33, 32, -343, -343, -343, 83, -337,
	-515, 340, 339, 341, -177, -311, -342, 83, 83, 83,
	97, -343, -343, -342, -333, -342, -502, -285, -285, -285,
	-285, 142, -343, -343, -285, -285, -285, -285, 142, -285,
	-285, -285, -285, -285, -285, -285, -285, 83, 83, 83,
	142, -343, -175, -118, -461, -460, -337, 41, -119, -176,
	-555, 609, 82, -292, -543, 88, 88, 621, 477, 478,
	164, 167, 166, 35, 82, -188, -355, -355, -355, -521,
	-311, 113, -376, -373, -370, -311, -311, -366, -311, -311,
	-211, -355, -355, -355, -355, -211, -245, 53, 54, 55,
	-370, -149, 56, 57, -519, -506, 35, -178, -311, -275,
	18, -335, -335, -370, 268, -562, -322, -322, -303, -302,
	-324, -319, -324, -324, -275, -320, -322, -322, -337, -324,
	-320, -275, -311, 451, -275, -275, -410, -321, -311, -321,
	-355, -302, -303, -303, -211, -211, -256, -261, -257, -262,
	260, 234, 354, 355, 232, 230, 11, 231, -269, 307,
	-356, 495, -240, -241, 77, 42, -243, 258, 396, 389,
	270, 274, 92, 275, 429, 276, 239, 278, 279, 280,
	295, 297, 250, 281, 282, 283, 420, 284, 159, 296,
	285, 286, 287, 372, -235, 6, 329, 41, 51, 52,
	443, 442, 540, 537, 271, -521, -521, 31, 31, -376,
	-311, -311, -167, -162, -166, -163, -168, -278, -280, -165,
	82, -211, -157, -311, 155, 475, 477, 478, -548, -388,
	-548, -388, 32, 419, -391, 419, 32, -366, -385, 471,
	473, -381, 88, 420, -371, -390, 79, 151, -460, -388,
	-388, -390, -390, 150, 155, -546, 476, 477, 226, -175,
	97, 97, 97, -213, -211, -521, -375, -366, -311, -441,
	-213, -213, -213, -311, -311, 82, 154, 36, -311, -311,
	-274, 155, -273, 17, -312, -311, 35, 88, 154, -274,
	-127, -125, 119, -337, -6, 601, -337, -6, -6, -337,
	-6, -337, -439, 393, 97, 97, -294, 88, -294, 97,
	97, 97, 83, 88, -379, 79, -454, -344, -499, 591,
	-182, 83, -177, -497, -498, -177, -181, -311, -454, -182,
	83, -497, -175, 592, -119, -172, -171, -337, -311, 24,
	-89, -509, 154, 155, -178, -394, -374, -371, -396, 142,
	-311, -382, 155, 537, 624, 86, 241, -535, -534, 411,
	83, 155, -464, 242, 494, 88, 621, 427, 221, 222,
	102, 342, 103, 104, -423, -343, -340, -335, -335, -333,
	-333, -338, 255, -338, 112, -337, -336, -503, 119, -337,
	35, 35, 155, 80, 154, 83, 83, 17, 17, 83,
	-337, 83, 83, 83, 83, 17, 17, -337, 83, 154,
	83, 83, 83, 83, 80, 83, 155, 83, 155, -343,
	-343, -337, -343, 83, 83, 83, -337, -337, -337, -343,
	83, -337, -337, -337, -337, -337, -337, -337, -337, -404,
	446, -404, -404, 155, 155, 155, 83, -119, 82, 97,
	155, -298, -297, 88, 165, 168, 168, 167, -197, -199,
	-200, -201, -202, -203, 133, 156, 157, 82, -211, -211,
	-211, -524, 397, 36, -536, 155, 41, -534, 487, -145,
	318, -359, 80, -152, 17, 537, -211, -211, -211, -211,
	-224, 35, 17, -161, -212, -311, 82, 83, 155, -337,
	-367, 80, -311, -303, -275, -275, -324, -275, -275, 155,
	23, -322, -324, -324, -320, 154, -302, -429, 35, -179,
	155, 21, 260, -210, -308, -207, -209, 245, -327, -208,
	248, -493, 246, 244, 107, 249, 303, 108, 239, -308,
	-308, 245, -244, 241, 35, -308, -259, 239, 345, 303,
	246, 21, 260, -258, 239, 108, -311, 245, 249, 244,
	-307, 123, -301, 150, 241, 43, 372, -307, 541, 260,
	-307, -307, -307, -307, -307, -307, -307, 277, 277, -307,
	-307, -307, -307, -307, -307, -307, -307, -307, -307, -307,
	160, -307, -307, -307, -307, -307, -307, 82, 272, 273,
	-525, 397, 31, 353, 353, -536, 31, -153, 347, 31,
	-281, -282, -283, -284, 68, 72, 74, 69, 70, 71,
	75, 31, 155, -309, -313, 35, -311, 88, -309, -157,
	-162, -167, -309, 82, -547, -549, 479, 476, 482, -390,
	-390, 241, 82, 123, -390, -390, 41, -310, -544, 483,
	477, -119, 155, 79, -213, -189, -190, -191, -192, -217,
	-292, 190, 193, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 206, 207, 204, 205, 254, 185, 186, 187,
	188, 208, 171, 191, 172, 173, 174, 175, 176, 177,
	180, 181, 182, 183, 179, -311, -198, -275, -160, -162,
	-311, 88, -311, 142, -275, 120, -6, 118, -131, -130,
	-129, 121, 599, 605, 120, 120, 120, 83, 83, 83,
	155, 83, 83, 83, 155, 83, 155, -467, 456, 40,
	155, 82, 83, 155, 61, 155, 123, 83, 155, 83,
	61, -119, 88, 155, -169, 37, 38, 154, 429, -311,
	-478, 83, -396, 155, 241, 154, 154, -372, 375, -310,
	-374, 21, 537, -292, 39, -298, 123, 621, -311, 83,
	-338, -338, 112, -335, -332, 83, 120, -337, 118, -215,
	-217, 391, 392, -215, -216, -222, 151, 189, 254, 188,
	187, 185, 391, 392, -234, -311, -337, -337, 83, -337,
	-337, 17, -311, -234, -333, -337, -174, -174, 83, 83,
	-403, -404, -403, -403, 83, 83, 83, 83, -403, 83,
	83, 83, 83, 83, 83, 83, 83, 82, 97, 100,
	97, 100, -460, -556, 63, 607, 62, 419, 102, 308,
	155, 97, 622, 155, 123, 168, 383, 83, 155, -292,
	-189, -179, 82, -179, -527, 458, 399, 409, -307, -329,
	-328, 349, 42, -446, 420, 405, 406, -373, 268, -311,
	-533, 95, 123, 79, 333, 337, 334, 335, 336, -353,
	-354, -352, -356, -521, 82, 82, 82, 82, 35, -424,
	323, -217, -211, -161, -311, 17, 155, -520, 154, -1,
	-311, -366, -322, -275, -337, -337, -275, -322, -322, -324,
	-311, -424, -217, 35, -257, 234, 231, -400, 305, 306,
	-401, -414, 308, -416, 82, -214, -292, -208, -492, -493,
	-355, -311, 108, -492, 108, 82, -214, -292, -292, -260,
	-321, -292, -311, -311, -311, -311, -265, -264, -292, -267,
	32, -268, -311, -311, -311, -311, 108, 108, -239, 41,
	48, 49, 50, -307, -307, 192, -242, 41, 419, 421,
	422, -267, 97, 97, 97, 97, 88, 88, 88, -307,
	-307, 97, 88, -313, 88, -494, 167, 45, 46, 97,
	97, 97, 97, 41, 88, -246, 41, 288, 292, 289,
	290, 291, 88, 97, 41, 97, 41, 97, 41, -311,
	82, -495, -496, 88, -527, -307, 353, -387, 123, -329,
	-532, 318, -146, 92, 32, -183, 234, 231, -521, -378,
	-377, -292, -166, -166, -166, -166, 68, 68, 68, 73,
	68, 73, 68, -283, -378, -168, -179, -313, 83, -541,
	-540, -539, -537, 76, 242, 77, -342, 476, 480, 481,
	-374, -325, 88, -381, -187, 24, -211, -211, -445, 298,
	299, 83, 155, -217, -277, 19, 154, -277, 116, -6,
	-127, -129, -337, -6, -337, 601, 365, 602, 88, 97,
	97, -475, 440, 435, 437, 108, -344, -462, -461, 61,
	-154, -177, -454, -498, -460, -311, 61, -154, -454, -187,
	-467, -171, -170, 44, -311, 97, 17, -371, -366, 142,
	142, -311, 376, -382, 88, 398, 88, 237, 622, 88,
	-298, -332, -337, 83, -225, 176, 175, -225, 83, 83,
	-431, -431, -430, -433, -430, -225, -225, 83, 83, 24,
	83, 83, 83, -337, 83, 83, 155, -450, 496, -451,
	567, -403, -403, -403, -403, -403, -403, -403, -403, -403,
	-403, -403, -403, -403, -403, -346, -345, 260, 441, 614,
	614, 441, 614, 614, 83, 155, -501, 155, -297, 88,
	88, 88, -201, -217, 83, 35, -204, -205, -206, -214,
	-207, -209, 35, -528, 92, -522, 88, -311, -529, 92,
	400, 153, 351, 41, 401, 402, 417, 346, 97, 97,
	407, -523, -311, -153, -531, 52, 123, 88, -211, -352,
	-301, 150, 279, 326, -272, -271, -311, 88, -204, -204,
	-204, -154, -425, 325, 21, 97, 141, -180, 80, 154,
	-162, -212, -311, 142, 83, -275, -275, -275, -322, -425,
	-154, -412, 309, 82, -410, 82, -410, 108, 334, -417,
	-415, 260, -263, 45, 47, -217, -490, -311, -488, -490,
	-311, -488, -488, -355, -337, -263, -214, 241, 31, 231,
	-266, 331, 332, 337, -383, 304, 113, -383, 155, -169,
	155, -311, -234, -234, 31, 88, 88, -213, 83, 155,
	123, -528, -522, 123, -388, 88, -529, -533, 123, 88,
	155, -183, -183, -275, 155, 123, -185, -184, 79, 80,
	-186, 79, -184, 68, 68, -275, -539, -538, 24, -493,
	-493, -493, 83, 83, 15, -191, 41, -276, 20, 21,
	142, -276, 120, 118, 120, 120, -311, 83, 83, -437,
	593, -471, -473, 435, 21, 21, 15, 242, 83, -454,
	-454, -475, 45, 46, -366, -382, 420, -211, 155, 622,
	-337, 83, -337, 83, 88, 83, 88, -174, 21, 83,
	83, 83, 83, 83, 83, -337, 83, -501, 235, -154,
	83, 155, -154, 88, -526, 411, 88, 88, 97, 41,
	97, 153, 403, -447, -146, -530, 92, 123, 621, 82,
	-307, -307, -307, -311, 83, 155, -307, -307, 83, 83,
	83, -232, 537, -426, 259, 97, 141, 97, 141, 97,
	-309, -162, -311, -275, -520, 154, -275, -426, -402, 310,
	97, -333, 82, -333, 82, -411, 307, 82, 83, 155,
	-311, -292, -229, -228, -226, 102, 113, 41, 389, -227,
	92, 150, 293, 296, 295, 271, 294, -255, -326, 79,
	395, 331, 332, -356, 593, 525, 244, 107, 108, 377,
	-327, 82, 82, 80, 313, 82, 82, -490, 83, -263,
	-292, 41, -266, 41, 343, 304, -264, -311, 150, -234,
	83, -496, 88, -526, 88, -390, -531, 88, -521, -174,
	-377, -460, -337, 82, -337, 82, 68, 11, 19, -330,
	-337, -343, 243, -6, 602, 365, -248, 594, 88, 21,
	88, -469, 88, -378, -437, -122, -465, -410, 276, 83,
	83, -403, -403, -406, -405, -409, 441, 305, 449, -343,
	83, 83, -193, -217, -150, 537, -232, -206, -150, 21,
	537, 350, 41, 97, 41, 404, 123, 103, 104, -299,
	-300, 88, -361, -363, -292, 82, -234, -236, -310, 151,
	88, -271, -330, -330, -230, -231, -269, -356, -121, -120,
	-230, 82, -427, 159, 97, 141, 97, 97, -275, -275,
	-427, -416, 21, 83, -397, 83, -397, 82, 123, -333,
	-415, -418, 61, -226, 102, -333, 88, -236, -237, 41,
	292, 288, 123, 123, -238, 41, 272, 273, -247, 82,
	303, 15, 192, 82, 108, 108, -211, -361, -361, -491,
	333, 334, 335, 338, 337, 336, -491, -361, -361, 82,
	-384, -383, -333, -307, -307, 150, -530, -175, -178, -489,
	-311, 244, 21, 21, -311, -311, -295, 595, 97, 88,
	437, -248, -438, 596, -474, 440, -468, -466, 435, 436,
	437, 438, 123, 83, -408, 115, 403, 407, -331, -334,
	97, 100, 184, 153, 536, -151, 60, 483, 88, 398,
	88, 350, 88, 622, 155, 123, 83, 155, -430, -337,
	-398, 260, 155, -269, -301, -122, -398, -233, -270, -311,
	88, -444, 167, 324, 537, 97, 141, 97, -174, -428,
	167, 324, -401, 83, 83, 83, -397, 97, 83, -422,
	-419, 82, -269, 262, 133, 88, 88, 97, 82, -455,
	31, 88, -362, 82, 83, 83, 83, 83, -361, 97,
	-234, -307, 83, 83, 155, 82, 21, -295, 88, -476,
	242, -472, -473, 439, -466, 21, 437, 21, 21, 88,
	-407, -408, 407, -331, -334, 591, 447, 447, 447, -195,
	-311, 303, 420, -300, 88, -364, -363, -169, 83, -399,
	312, 21, -269, -307, -399, 83, 155, -307, -307, 324,
	97, 141, 97, -175, 324, -413, 311, 83, -422, -269,
	-421, -420, 310, 263, 82, 83, -337, -347, -307, 83,
	-250, -249, 533, -361, -364, 80, -364, 80, -364, 80,
	-364, 80, 83, -234, -311, 244, -296, -311, -469, -483,
	82, 97, -471, -470, -472, 21, -469, 21, -469, -469,
	-123, 155, 112, 448, 448, 448, -194, 35, 442, 376,
	-365, 250, 343, 344, 92, 537, 331, 332, -169, 21,
	-400, -234, -270, -330, -330, 97, 97, 83, 155, -311,
	259, 82, -343, 83, -311, -254, -252, -253, 79, 454,
	301, 302, 83, -491, -491, -491, -491, -255, 83, 155,
	-487, 31, 83, -482, -481, -293, -477, -311, 440, 441,
	88, -469, 444, -407, 88, -307, -307, 88, 88, 330,
	-292, 82, -412, -420, -419, -343, 83, -383, -253, 79,
	-252, 79, 16, 15, -364, -364, -364, -364, -311, -486,
	-485, -484, 83, 155, 154, 123, -559, -558, 613, 97,
	97, -311, -397, -402, 83, -251, 298, 299, 31, 167,
	-251, 155, 123, -481, -311, 88, 88, 83, -416, 102,
	41, 300, -485, 41, -337, 154, -311,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 852, 853, 854, 855, 856, 857, 0,
	0, 0, 0, 611, 612, 0, 578, 0, 0, 0,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 446, 0, 0, 0, 0, 693, -2, 56, 0,
	277, 0, 268, 268, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, -2, 624, 0,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 624, 0, 0, 0, 701, 0, 0,
	0, 0, 0, 744, 766, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1243, 1244, 1245, 1246,
	-2, 1754, 1731, 1905, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890,
	1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1906, 1907, 1908, 0, 261, 259,
	1701, 1731, 1754, 1808, 1819, 1820, 1854, 1905, 0, 875,
	0, 671, 0, 676, 1196, 671, 289, 613, 614, 701,
	727, 576, 0, 325, 0, 1745, 329, 0, 0, 0,
	573, 319, 320, 321, 322, 323, 324, 0, 0, 851,
	0, 0, 315, 0, 283, 1810, 0, 0, 0, 0,
	0, 0, 153, 985, 155, 987, 159, 166, 0, 0,
	171, 172, 175, 176, 177, 178, 179, 0, 183, 0,
	185, 188, 0, 190, 191, 0, 194, 195, 196, 0,
	206, 207, 208, 988, 989, 990, -2, 84, 873, 1659,
	1547, 0, 1554, 1555, 1566, 1577, 1323, 1324, 1325, 1326,
	0, 0, 0, 0, 0, 1333, 1334, 0, 1358, 1923,
	1964, 0, 1341, 1342, 1343, 1344, 1345, 1346, 93, 105,
	106, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 0, 1607,
	1608, 1609, 1520, 1310, 1243, 0, 1932, 0, 1954, 1959,
	1960, 1961, 1962, 1953, 0, 0, 1505, 0, 1495, 0,
	0, -2, -2, 0, 0, 1879, -2, 1929, 1950, 1958,
	1933, 1934, 1957, 1925, 1926, 1927, 1920, 1921, 1922, 1924,
	1936, 1938, 1949, 0, 1945, 1955, 1956, 0, 0, 0,
	0, 0, 107, 108, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1511, -2, 1513,
	-2, 1516, -2, 1518, 1519, -2, 1522, 1523, 1524, -2,
	-2, 1527, 1528, 1529, 1530, 1531, 1532, 1535, -2, -2,
	-2, -2, 1507, 1508, 1509, 1510, 1499, 1500, 1501, 1502,
	1503, 1504, -2, -2, -2, 727, 802, 0, 727, 0,
	702, 749, 752, 755, 758, 705, 0, 0, 57, 58,
	0, 278, 279, 267, 269, 0, 273, 0, 266, 0,
	0, 0, 0, 1020, 1020, 1020, 1020, 1020, 0, 1020,
	0, 0, 0, 0, 0, 1020, 0, 908, 992, 993,
	994, 1018, 1019, 1084, 0, 0, 0, 629, 625, 626,
	627, 628, 715, 0, 717, 720, 553, 553, 501, 0,
	0, 0, 553, 0, 515, 507, 0, 0, 0, 553,
	0, 0, 722, 722, 0, 556, 563, 553, 553, -2,
	553, 553, 553, 0, 0, 1032, 521, 522, 523, 507,
	507, 526, 527, 528, 538, 539, 564, 1683, 0, 0,
	446, 446, 0, 446, 0, 446, 446, 446, 631, 1849,
	1752, 1825, 1810, 0, 0, 234, 1879, 239, 0, 1753,
	1772, 0, 0, 1790, 0, -2, 0, 305, 727, 0,
	0, 701, 0, 0, 0, 0, 0, 446, 446, 446,
	446, 446, 1083, 446, 446, 446, 446, 446, 0, 0,
	0, 446, 446, 0, 0, 767, 768, 763, 764, 765,
	769, 770, 5, 6, 19, 0, 0, 0, 0, 0,
	0, 63, 62, 0, 1660, 1678, 1612, 1613, 1614, 1665,
	1616, 1669, 1669, 1669, 1669, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1669, 1669, 0, 0, 1658, 1636,
	1667, 1667, 1667, 1665, 1662, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1672,
	1672, 1675, 1675, 1672, 0, 1545, 0, 0, 0, 0,
	675, 0, 0, 727, -2, 0, 0, 577, 326, 1247,
	0, 0, 330, 331, 0, 0, 346, 0, 349, 334,
	335, 336, 0, 133, 0, 317, 318, 0, 0, 285,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	163, 160, 167, 170, 180, 187, 0, 199, 201, 204,
	161, 168, 173, 174, 181, 202, 162, 164, 165, 169,
	203, 205, 182, 186, 200, 184, 189, 192, 193, 198,
	0, 134, 0, 0, 0, 0, 0, 1553, 0, 0,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 1547, 0, 0, 1329,
	1330, 1331, 1332, 1335, 0, 1359, 0, 0, 0, 0,
	1606, 1610, 0, 1545, 1545, 0, 1545, 1541, 0, 0,
	0, 0, 0, 0, 1545, 1481, 0, 0, 1483, 1496,
	0, 0, 1485, 1486, 0, 1489, 1490, 1545, 0, 1545,
	1494, 1477, 1478, 0, 1541, 1541, 1541, 1541, 0, 0,
	1541, 1541, 1541, 1541, 1541, 1541, 1541, 1541, 1541, 1541,
	1541, 1541, 0, 0, 0, 0, 722, 0, 728, 0,
	-2, 0, 746, 748, 750, 751, 753, 754, 756, 757,
	759, 760, 707, 0, 0, 59, 0, 0, 0, 0,
	271, 0, 276, 0, 872, 0, 0, 1020, 1020, 1020,
	909, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1020, 1020, 1020, 1020, 0, 1038, 0, 0, 0, 631,
	630, 0, 716, 0, 0, 775, 0, 0, 500, 0,
	507, 553, 553, 513, 514, 509, 508, 559, 560, 556,
	0, 556, 556, 775, 0, 532, 533, 534, 553, 553,
	540, 723, 0, 541, 542, 556, 0, 561, 562, 775,
	0, 0, 775, 775, 0, 550, 551, 552, 0, 0,
	1020, 0, 569, 509, 509, 1684, 1685, 0, 0, 1029,
	0, 0, 0, 572, 0, 0, 0, 0, 632, 214,
	217, 0, 220, 0, 1849, 0, 1849, 0, 227, 0,
	0, 0, 0, 0, 0, 257, 258, 0, 0, 0,
	0, 248, 251, 1190, 1191, 982, 983, 252, 253, 297,
	298, 0, 722, 745, 747, 741, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 0, 446, 0, 0, 0,
	0, 0, 607, 0, 888, 609, 0, 0, 0, 783,
	777, 779, 846, 93, 783, 8, 80, 77, 0, 19,
	0, 0, 19, 19, 0, 19, 262, 0, 1681, 1679,
	1680, 1615, 1666, 0, 1641, 0, 1642, 1643, 1644, 1654,
	1655, 0, 0, 1637, 0, 1638, 1639, 1640, 1631, 0,
	1632, 1633, 0, 1634, 1635, 260, 0, 1546, 876, 0,
	649, 663, 644, 0, 652, 0, 1197, 633, 663, 635,
	0, 652, 722, 699, 0, 677, 0, 0, 327, 0,
	332, 0, 0, 348, 350, 351, 352, 337, 338, 574,
	313, 314, 306, 307, 308, 309, 310, 311, 312, 316,
	103, 0, 286, 287, 0, 0, 0, 147, 148, 149,
	150, 151, 152, 154, 138, 596, 598, 974, 986, 0,
	977, 0, 157, 197, 130, 0, 0, 0, 1548, 1549,
	1550, 1551, 1552, 1556, 0, 1558, 1560, 1562, 1564, 0,
	1582, -2, -2, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1567, 1580, 1581, 0, 0,
	0, 0, 0, 0, 1578, 1578, 1573, 0, 1327, 0,
	1356, 1360, 0, 0, 0, 0, 94, 1540, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 0, 0, 1547,
	0, 0, 0, 1542, 1543, 0, 0, 0, 1436, 0,
	0, 1442, 1443, 1444, 0, 658, 0, 1506, 1482, 1497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 801, 803, 0, 667, 669, 670, 696, 677,
	703, 0, 0, 0, 55, 60, 53, 1053, 280, 281,
	0, 0, 275, 0, -2, 0, 0, 0, 0, 0,
	923, 0, 444, 968, 0, 0, 0, 984, 1009, 1016,
	0, 0, 0, 0, 0, 1057, 910, 915, 916, 917,
	911, 912, 918, 919, 0, 718, 0, 0, 815, 499,
	0, 554, 555, 504, 1810, 509, 775, 775, 516, 510,
	517, 558, 518, 519, 520, 556, 775, 775, 724, 553,
	556, 543, 557, 556, 546, 547, 0, 565, 570, 566,
	0, 568, 524, 525, 1059, 720, 364, 365, 366, 368,
	0, 416, 416, 416, 399, 416, 0, 0, 387, 1686,
	0, 0, 0, 0, 396, 1686, 0, 0, 1686, 1686,
	1686, 1686, 1686, 1686, 1686, 0, 0, 1686, 1686, 1686,
	1686, 1686, 1686, 1686, 1686, 1686, 1686, 1686, 0, 1686,
	1686, 1686, 1686, 1686, 1176, 1686, 0, 1030, 406, 407,
	408, 409, 414, 415, 0, 441, 0, 0, 0, 444,
	0, 957, 788, 0, 789, 790, 786, 817, 841, 841,
	0, 841, 821, 1196, 0, 0, 225, 226, 215, 0,
	216, 0, 228, 229, 0, 231, 232, 233, 240, 1752,
	1825, 235, 237, 0, 0, 241, 254, 255, 256, 0,
	0, 246, 247, 0, 0, 300, 301, 303, 0, 677,
	1033, 1034, 1035, 593, 1194, 594, 595, 599, 0, 0,
	602, 603, 604, 605, 606, 890, 0, 0, 962, 963,
	775, 0, 784, 0, 780, 847, 0, 849, 0, 775,
	0, 78, 19, 0, 71, 68, 0, 0, 0, 0,
	0, 1661, 1611, 1682, 0, 0, 0, 1663, 0, 0,
	0, 0, 61, 679, 640, 0, 643, 660, 0, 664,
	0, 0, 656, 648, 653, 0, 0, 673, 634, 0,
	0, 639, 677, 0, 700, 729, 730, 733, 1248, 0,
	333, 347, 0, 0, 0, 0, 141, 971, 0, 142,
	146, 136, 0, 0, 0, 976, 0, 973, 978, 0,
	156, 0, 0, 131, 132, 1044, 1053, 0, 0, 0,
	1557, 1559, 1561, 1563, 1565, 0, 1568, 1578, 1578, 1574,
	0, 1569, 0, 1571, 0, 1548, 0, 1361, 0, 0,
	0, 0, 0, 0, 0, 1426, 1427, 0, 0, 1431,
	0, 1433, 1434, 1435, 1437, 0, 0, 0, 1441, 0,
	1480, 1498, 1484, 1487, 0, 1491, 0, 1493, 0, 727,
	727, 0, 0, 1400, 1400, 1400, 0, 0, 0, 0,
	1400, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	0, 1348, 1349, 0, 0, 0, 804, 697, 0, 0,
	0, 0, 1051, 0, 282, 270, 272, 0, 0, 0,
	878, 879, 881, 0, 884, 885, 886, 890, 720, 0,
	720, 930, 1686, 1021, 448, 0, 0, 970, 0, 946,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	1061, 0, 0, 0, 618, 622, 23, 721, 0, 776,
	502, 0, 503, 553, 511, 512, 775, 535, 536, 0,
	0, 775, 553, 553, 556, 0, 567, 1061, 0, 0,
	1029, 1127, 1095, 377, 0, 1205, 1206, 417, 0, 1212,
	1221, 1020, 1280, 0, 1221, 0, 0, 1223, 1224, 0,
	0, 0, 0, 400, 401, 0, 386, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 427, 0, 0, 0,
	0, 1687, 1686, 1686, 0, 394, 395, 0, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 1686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1167, 0, 0, 0, 0, 0, 0, 0, 1182, 1183,
	930, 1686, 0, 0, 0, 448, 944, 953, 0, 0,
	0, 0, 0, 0, 808, 0, 0, 807, 0, 0,
	0, 0, 0, 720, 842, 0, 844, 845, 819, -2,
	0, 788, 824, 1545, 218, 219, 0, 0, 224, 242,
	244, 0, 0, 0, 243, 245, 249, 250, 299, 302,
	304, 739, 0, 0, 1085, 0, 891, 892, 894, 895,
	0, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1736, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 889, 610, 773, 778, 785,
	848, 850, 94, 781, 773, 0, 81, 19, 80, 72,
	73, 0, 19, 0, 0, 0, 0, 1671, 1670, 1656,
	0, 1657, 1668, 1673, 0, 1676, 0, 683, 0, 0,
	663, 665, 0, 0, 663, 0, 0, 672, 0, 0,
	663, 739, 679, 0, 736, 734, 735, 0, 0, 575,
	104, 353, 0, 0, 0, 0, 0, 597, 0, 975,
	138, 0, 0, 158, 0, 0, 0, 1053, 1048, 1544,
	1570, 1572, 0, 1579, 1575, 1328, 1336, 1357, 0, 0,
	1363, 1375, 1375, 0, 0, 1366, 1669, 1669, 1369, 1665,
	1667, 1665, 1375, 1375, 0, 95, 0, 0, 1432, 0,
	0, 0, 659, 0, 0, 0, 1396, 1398, 1400, 1400,
	1407, 1401, 1408, 1409, 1400, 1400, 1400, 1400, 1414, 1400,
	1400, 1400, 1400, 1400, 1400, 1400, 1400, 1394, 0, 0,
	1600, 1601, 668, 0, 0, 710, 711, 712, 713, 714,
	0, 0, 54, 1053, 0, 274, 0, 0, 883, 0,
	0, 0, 1198, 0, 934, 931, 932, 933, 0, 965,
	449, 450, 451, 452, 0, 0, 0, 969, 0, 957,
	939, 0, 0, 0, 1010, 1011, 1012, 1013, 1014, 1015,
	-2, 1024, 0, 0, 0, 1198, 1198, 1198, 0, 1069,
	0, 1058, 671, 0, -2, 0, 0, 620, 0, 0,
	816, 505, 775, 529, 725, 726, 544, 775, 775, 553,
	571, 1069, 1060, 0, 367, 416, 0, 1115, 0, 0,
	1121, 0, 1128, 370, 0, 418, 0, 1211, 1237, 1222,
	1237, 1281, 1237, 1237, 1020, 0, 418, 0, 0, 388,
	424, 0, 0, 0, 0, 0, 384, 421, 733, 371,
	373, 374, 375, 425, 426, 428, 0, 430, 390, 402,
	403, 404, 405, 0, 0, 0, 397, 410, 411, 412,
	413, 372, 1144, 1145, 1146, 1149, 1150, 1151, 1152, 0,
	0, 1155, 1156, 1157, 1158, 1159, 1234, 1235, 1236, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1184, 1185, 1186, 1187,
	1188, 1189, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	0, 0, 1179, 0, 934, 0, 0, 0, 0, 965,
	946, 0, 956, 0, 958, 959, 0, 0, 641, 775,
	292, 0, 811, 805, 0, 794, 809, 810, 797, 0,
	799, 0, 795, 796, 775, 787, 818, 843, 820, 823,
	825, 826, 832, 0, 0, 0, 0, 221, 222, 223,
	230, 0, 468, 236, 695, 0, 1195, 600, 601, 1086,
	1087, 608, 0, 896, 771, 0, 0, 771, 76, 79,
	0, 74, 0, 0, 0, 0, 66, 64, 1664, 0,
	0, 685, 118, 0, 0, 0, 661, 0, 666, 663,
	647, 657, 646, 654, 655, 674, 663, 638, 637, 698,
	683, 731, 732, 0, 1249, 328, 0, 972, 138, 143,
	144, 145, 139, 137, 979, 0, 981, 0, 1046, 0,
	0, 1576, 1362, 1337, 1364, 1376, 1377, 1365, 1338, 1339,
	1367, 1368, 1370, 1371, 1372, 1373, 1374, 1340, 1428, 0,
	1430, 1438, 1439, 0, 1488, 1492, 0, 0, 0, 0,
	0, 1405, 1406, 1410, 1411, 1412, 1413, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 727, 1395, 0, 0, 0,
	0, 0, 0, 0, 708, 0, 0, 0, 1052, 1054,
	871, 874, 880, 882, 0, 0, 0, 1199, 1200, 1202,
	1203, 1204, 0, 907, 0, 0, 925, 926, 936, 0,
	0, 0, 454, 455, 0, 0, 0, 467, 463, 464,
	465, 445, 964, 953, 942, 0, 0, 952, 0, 1025,
	1686, 1686, 1686, 0, 0, 1129, 1686, 1686, 0, 0,
	0, 1133, 1072, 0, 0, 1063, 0, 841, 0, 0,
	775, 619, 622, 623, 719, 506, 548, 545, 775, 1072,
	363, 1093, 0, 0, 0, 0, 0, 1125, 0, 0,
	1097, 0, 389, 419, 0, -2, 0, 1238, 0, 1225,
	1238, 0, 0, 1237, 0, 378, 418, 0, 0, 0,
	431, 435, 436, 0, 433, 1276, 0, 434, 0, 423,
	0, 429, 1147, 1148, 0, 1153, 1154, 0, 1178, 0,
	0, 437, 0, 0, 0, 438, 443, 939, 0, 954,
	0, 960, 961, 727, 0, 0, 791, 812, 0, 0,
	792, 0, 793, 798, 800, 291, 827, 0, 0, 829,
	830, 831, 822, 238, 740, 893, 0, 761, 0, 0,
	782, 762, 0, 19, 0, 0, 69, 1674, 1677, 687,
	0, 684, 119, 0, 0, 0, 0, 651, 662, 645,
	636, 685, 737, 738, 140, 135, 980, 121, 0, 1047,
	0, 1440, 0, 1400, 1397, 1400, 1399, 1391, 0, 1350,
	1351, 1352, 1353, 1354, 1355, 0, 706, 0, 0, 913,
	1133, 0, 913, 935, 924, 0, 966, 967, 0, 456,
	457, 0, 460, 466, 937, 938, 0, 0, 950, 0,
	0, 0, 0, 1017, 1031, 0, 0, 0, -2, 0,
	-2, 1042, 0, 1078, 0, 1070, 0, 1062, 0, 1065,
	775, 775, -2, 616, 621, 0, 549, 1078, 1095, 0,
	1116, 0, 0, 0, 0, 0, 0, 0, 1096, 0,
	1109, 420, 1239, -2, 1252, 1254, 0, 1030, 1257, 1258,
	0, 0, 0, 0, 0, 0, 1302, 1266, 0, 0,
	1270, 1271, 1272, 0, 0, 1275, 0, 1594, 1595, 0,
	1279, 0, 0, 0, 0, 0, 0, 0, 1219, 379,
	380, 0, 382, 383, 1686, 1277, 422, 376, 1686, 392,
	1177, 1180, 1181, 442, 439, 440, 942, 945, 642, 722,
	293, 294, 813, 0, 806, 836, 833, 0, 0, 897,
	772, 774, 70, 75, 0, 0, 689, 0, 686, 0,
	680, 682, 129, 650, 687, 91, 112, 0, 0, 1429,
	1479, 1403, 1404, 0, 1392, 0, 1386, 1387, 1388, 1393,
	709, 704, 0, 899, 906, 920, 1036, 1201, 905, 0,
	0, 453, 458, 0, 461, 462, 0, 940, 941, 0,
	948, 0, 0, 1005, 1665, 0, 1026, 1027, 1192, 1193,
	1028, 1130, 1131, 1132, 1088, -2, 1141, 0, 1040, 121,
	1088, 0, 1066, 0, 1073, 0, 1071, 1064, 727, 617,
	1075, 369, 1127, 1117, 0, 1119, 0, 0, 0, 0,
	1098, -2, 0, 1253, 1255, 1256, 1259, 1260, 1261, 1307,
	1308, 1309, 0, 0, 1264, 1304, 1305, 1306, 1265, 0,
	0, 0, 0, 0, 1592, 1593, 1300, 0, 0, 1226,
	1228, 1229, 1230, 1231, 1232, 1233, 1227, 0, 0, 0,
	1218, 1220, 381, 0, 0, 1686, 955, 290, 0, 0,
	837, 839, 834, 835, 65, 67, 82, 0, 688, 120,
	0, 689, 83, 0, 109, 0, 122, 123, 0, 0,
	0, 0, 0, 1402, 1389, 0, 0, 0, 0, 0,
	1596, 1597, 1598, 0, 0, 0, 921, 922, 927, 0,
	929, 459, 943, 947, 950, 0, 996, 0, 733, 0,
	1090, 0, 1029, 1143, 1686, 1043, 1090, 0, 1135, 1686,
	1686, 1056, 0, 1068, 0, 1080, 0, 1074, 722, 362,
	0, 1077, 1113, 1118, 1120, 1122, 0, 1126, 1124, 1099,
	-2, 0, 1107, 0, 0, 1262, 1263, 0, 0, 1495,
	1686, 0, 1295, 0, 996, 996, 996, 996, 0, 432,
	391, 0, 814, 828, 0, 0, 0, 678, 92, 96,
	0, 118, 115, 0, 124, 0, 0, 0, 0, 1049,
	0, 1378, 0, 0, 0, 1382, 1383, 1384, 1385, 0,
	898, 0, 928, 949, 951, 995, 1006, 1007, 733, 1039,
	0, 1127, 1142, 0, 1041, 1134, 0, 0, 0, 1067,
	1079, 0, 1082, 615, 1076, 1094, 0, 1123, 1100, 1108,
	0, 1103, 0, 0, 0, 1303, 0, 1269, 0, 1274,
	1283, 1296, 0, 0, 1207, 0, 1209, 0, 1213, 0,
	1215, 0, 0, 393, 838, 840, 0, 691, 681, 85,
	0, 0, 113, 114, 116, 0, 125, 0, 127, 128,
	1045, 0, 0, 1379, 1380, 1381, 0, 900, 901, 914,
	997, 1686, 1686, 0, 0, 0, 1003, 1004, 1008, 0,
	1115, 1147, 1136, 1137, 1138, 1081, 1114, 1102, 0, -2,
	1110, 0, 0, 1267, 1273, 1282, 1284, 1285, 0, 1297,
	1298, 1299, 1301, 996, 996, 996, 996, 1217, 690, 0,
	1055, 0, 97, 0, 99, 101, 102, 1240, 110, 111,
	117, 126, 0, 1390, 902, 0, 0, 1000, 1001, 0,
	1091, 0, 1093, 1104, -2, 0, 1112, 1268, 1286, 0,
	1287, 0, 0, 0, 1208, 1210, 1214, 1216, 692, 86,
	87, 0, 98, 0, 0, 0, 887, 903, 0, 998,
	999, 1002, 0, 1095, 1111, 1288, 1290, 1291, 0, 0,
	1289, 0, 0, 100, 1241, 1050, 904, 1092, 1089, 1292,
	1294, 1293, 88, 89, 90, 0, 1242,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 114, 3, 3, 3, 145, 137, 3,
	82, 83, 142, 140, 155, 141, 154, 143, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 623, 620,
	124, 123, 125, 3, 624, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 147, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 621, 136, 622, 148,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	115, 116, 117, 118, 119, 120, 121, 122, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 138, 139,
	144, 146, 149, 150, 151, 152, 153, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:795
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:802
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:808
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:816
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:822
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:826
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:841
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:845
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:851
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:856
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:860
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:892
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:900
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:908
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:918
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:938
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:944
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:951
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:959
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:965
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:984
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1000
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1008
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1018
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1026
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1036
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1043
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1052
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1066
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1072
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1076
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1082
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1091
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1101
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1105
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1111
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1120
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1124
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1130
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1151
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1164
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1175
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1181
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1185
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1191
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1198
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1206
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1210
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1224
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1228
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1232
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1245
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1251
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1260
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1271
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1275
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1281
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1285
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1291
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1295
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1301
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1325
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1344
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1348
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1352
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1361
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1368
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1376
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1383
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1388
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1395
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1400
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1404
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1428
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1432
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1438
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1444
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1462
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1479
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1502
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1506
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1510
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1515
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1519
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1525
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1549
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1562
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1566
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1602
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1608
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1621
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1629
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1654
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1658
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1665
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1669
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1675
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1682
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1691
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1695
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1865
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1873
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1877
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1881
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1885
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1889
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1893
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1897
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1917
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1924
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1934
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1938
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1944
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1951
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1959
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1963
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1967
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1971
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1977
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1981
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1987
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1994
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2010
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2040
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2044
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2048
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2054
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2060
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2064
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2071
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2077
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2081
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2087
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2095
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2104
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2113
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2121
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2129
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2152
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2189
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2197
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2204
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2211
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2220
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2224
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2228
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2234
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2238
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2244
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2248
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2254
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2258
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2275
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2280
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2284
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2288
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2292
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2296
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2300
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2304
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2308
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2312
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2326
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2335
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2340
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2359
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2373
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2383
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2390
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2401
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2412
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2416
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2422
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2432
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2438
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2442
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2448
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2454
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2458
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2462
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2466
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2494
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2510
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2527
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2533
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2541
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2545
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2549
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2553
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2561
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2569
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2579
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2620
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2624
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2630
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2636
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2641
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2642
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2643
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2648
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2665
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2680
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2691
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2698
		{
			yyLOCAL = &tree.AlterTable{
				Table:            yyDollar[3].tableNameUnion(),
				PartitionOptions: yyDollar[4].alterPartitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2707
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2711
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line mysql_sql.y:2717
		{
			yyLOCAL = yyDollar[1].alterPartitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line mysql_sql.y:2721
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			partitionDef := &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
			opt := &tree.AlterPartitionRedefinePartitionClause{
				PartitionOption: partitionDef,
			}
			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line mysql_sql.y:2736
		{
			opt := &tree.AlterPartitionAddPartitionClause{
				Typ:        tree.AlterPartitionAddPartition,
				Partitions: yyDollar[3].partitionsUnion(),
			}
			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line mysql_sql.y:2744
		{
			opt := &tree.AlterPartitionDropPartitionClause{
				Typ:            tree.AlterPartitionDropPartition,
				PartitionNames: yyDollar[3].PartitionNamesUnion(),
			}
			if yyDollar[3].PartitionNamesUnion() == nil {
				opt.OnAllPartitions = true
			} else {
				opt.PartitionNames = yyDollar[3].PartitionNamesUnion()
			}
			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line mysql_sql.y:2757
		{
			opt := &tree.AlterPartitionTruncatePartitionClause{
				Typ:            tree.AlterPartitionTruncatePartition,
				PartitionNames: yyDollar[3].PartitionNamesUnion(),
			}
			if yyDollar[3].PartitionNamesUnion() == nil {
				opt.OnAllPartitions = true
			} else {
				opt.PartitionNames = yyDollar[3].PartitionNamesUnion()
			}
			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2776
		{
			yyLOCAL = yyDollar[1].PartitionNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2782
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2786
		{
			yyLOCAL = append(yyDollar[1].PartitionNamesUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2792
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2799
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2808
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2818
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2827
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2837
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2847
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2856
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2864
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2868
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2872
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2876
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2880
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2895
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2899
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2903
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2907
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2911
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2915
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2919
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2923
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2928
		{
			yyVAL.str = ""
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2959
		{
			yyVAL.str = ""
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2963
		{
			yyVAL.str = string("COLUMN")
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2974
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2980
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2989
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2993
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2999
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3006
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3014
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3028
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3035
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3042
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3049
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3057
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3064
		{
			yyLOCAL = &tree.AlterOptionAlterReIndex{
				KeyType:       tree.INDEX_TYPE_IVFFLAT,
				AlgoParamList: int64(yyDollar[6].item.(int64)),
				Name:          tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3072
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:3088
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:3092
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3119
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3127
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3140
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3146
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3157
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3172
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3177
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3181
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3190
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3206
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3210
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3214
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3218
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3222
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3226
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3230
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3242
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3246
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3250
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3254
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3262
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3266
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3272
		{
			yyVAL.item = nil
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3277
		{
			yyVAL.item = nil
		}
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3324
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3332
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3340
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3353
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3359
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3364
		{
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3368
		{
		}
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3373
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3383
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3393
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3401
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3407
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3413
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3419
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3425
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3431
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3437
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3446
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3454
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3458
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3462
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3466
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3470
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3474
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3489
		{
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3491
		{
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3500
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3510
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3519
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3523
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3527
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3533
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3545
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3551
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3560
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3570
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3582
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3586
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3592
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3604
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3618
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3624
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3631
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3640
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3644
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3649
		{
			yyVAL.str = ""
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3653
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3659
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3672
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3676
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3682
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3695
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3701
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3707
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3711
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3717
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3723
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3727
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3731
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3737
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3741
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3766
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3775
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3784
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3793
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3797
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3803
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3812
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3821
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3831
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3835
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3841
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3847
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3853
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3857
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3863
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3869
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3878
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3885
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3896
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3901
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3908
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3924
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3937
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3948
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3952
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3958
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3963
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3970
		{
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3972
		{
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3975
		{
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3984
		{
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3988
		{
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3993
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:4002
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:4009
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:4015
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:4023
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:4030
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:4037
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4057
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4067
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4071
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4077
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4084
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4090
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4098
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4105
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4112
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4131
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4135
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4139
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4144
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4148
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4152
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4158
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4167
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4171
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4177
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4181
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4187
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4191
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4197
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4202
		{
		}
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4206
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4213
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4217
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4224
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4233
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4239
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4243
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4249
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4253
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4262
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4275
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4282
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4289
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4307
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4326
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4332
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4339
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4343
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4356
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4360
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4365
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4369
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4376
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4381
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4388
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4394
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4398
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4402
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4406
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4410
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4414
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4419
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4423
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4429
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line mysql_sql.y:4439
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4458
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4476
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4482
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4491
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4495
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4499
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4503
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4507
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4513
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4520
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4529
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4533
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4539
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4547
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4551
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4556
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4560
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4566
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4570
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4583
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4589
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4595
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4599
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4605
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4610
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4614
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4618
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4623
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4627
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4631
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4648
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4652
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4656
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4670
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4674
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4684
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4694
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4704
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4716
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4724
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4732
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4741
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4749
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4757
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4765
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4773
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4781
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4789
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4797
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4805
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4815
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4826
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4840
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4844
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4848
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4853
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4857
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4861
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4874
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4883
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4892
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4898
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4902
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4908
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4912
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4917
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4921
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4926
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4934
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4940
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4948
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4956
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4966
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4972
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4981
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4990
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4999
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5009
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5013
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5023
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5027
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5031
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5035
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5041
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:5051
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:5055
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5061
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5071
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5077
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5083
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5087
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5091
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5097
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5101
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5107
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5111
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5117
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5121
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5127
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5131
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5141
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5154
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:5160
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5166
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:5179
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5190
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5197
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5201
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5207
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5217
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5221
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5225
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5230
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5234
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5238
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5242
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5247
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5251
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5255
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5259
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5263
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5268
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5272
		{
			yyVAL.str = yyDollar[1].str
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5276
		{
			yyVAL.str = yyDollar[2].str
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5282
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5288
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5292
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5296
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5300
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5304
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5310
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 871:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5349
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5359
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5365
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 874:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5371
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5381
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5386
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5392
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5403
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5409
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5415
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5420
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5424
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5428
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5432
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5439
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].sourceOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5463
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5468
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5474
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5481
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5485
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5491
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5497
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5501
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5505
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5511
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5517
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5523
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5527
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5533
		{
			yyVAL.str = ""
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5540
		{
			yyVAL.str = yyDollar[2].str
		}
	case 905:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5546
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5555
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].sourceOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5567
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5579
		{
			yyVAL.str = yyDollar[1].str
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5583
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5589
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5593
		{
			yyVAL.str = "DEFINER = "
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5597
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5602
		{
			yyVAL.str = ""
		}
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5606
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5620
		{
			yyVAL.str = ""
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5628
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5634
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5644
		{
			yyVAL.str = yyDollar[1].str
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5648
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5654
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5661
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5667
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5675
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5681
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5688
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5695
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5703
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5709
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5718
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5730
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5742
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5754
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5760
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5767
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5775
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5781
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5789
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5795
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5803
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5809
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5818
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5822
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5827
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5831
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5838
		{
			yyVAL.str = yyDollar[3].str
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5843
		{
			yyVAL.str = ""
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5847
		{
			yyVAL.str = yyDollar[2].str
		}
	case 955:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5853
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5867
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5881
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5887
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5893
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5899
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5908
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5917
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5926
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5931
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5937
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5945
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:6051
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:6055
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:6061
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:6071
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:6075
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:6081
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6091
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6095
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6099
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6108
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6114
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6121
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6127
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6136
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6143
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6152
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6156
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:6162
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6176
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6180
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6184
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6189
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6193
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6197
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6201
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6207
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = &tree.IndexOption{IType: tree.INDEX_TYPE_INVALID}
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6232
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				} else if opt2.AlgoParamList > 0 {
					opt1.AlgoParamList = opt2.AlgoParamList
				} else if len(opt2.AlgoParamVectorOpType) > 0 {
					opt1.AlgoParamVectorOpType = opt2.AlgoParamVectorOpType
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6258
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6262
		{
			yyLOCAL = &tree.IndexOption{AlgoParamList: int64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6266
		{
			yyLOCAL = &tree.IndexOption{AlgoParamVectorOpType: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6270
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6274
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6278
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6282
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6288
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6292
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6298
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6303
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6308
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6312
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6316
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6320
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6324
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6328
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6334
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6349
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6359
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6363
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6368
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6372
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6378
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6382
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6388
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6392
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6396
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6401
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6405
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6411
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6420
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6426
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6444
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6462
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6480
		{
			yyLOCAL = &tree.CreateSource{
				Replace:     yyDollar[2].sourceOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				SourceName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6491
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6495
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6501
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6513
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6522
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6534
		{
			yyLOCAL = &tree.CreateTable{
				IsDynamicTable: true,
				IfNotExists:    yyDollar[4].ifNotExistsUnion(),
				Table:          *yyDollar[5].tableNameUnion(),
				AsSource:       yyDollar[7].selectUnion(),
				DTOptions:      yyDollar[8].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6545
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6552
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6562
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
				ExParam: tree.ExParam{
					JsonData: yyDollar[9].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6575
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6583
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6592
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6601
		{
			yyVAL.str = ""
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:6605
		{
			yyVAL.str = yyDollar[4].str
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6611
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6615
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6620
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6624
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6631
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6642
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6655
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6669
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6673
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6677
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6687
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6694
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6701
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6708
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6715
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6719
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6723
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6727
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6731
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6738
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6745
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6749
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6756
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6763
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6767
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6773
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6783
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6790
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6797
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6804
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6811
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6815
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6820
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6824
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6828
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6833
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6837
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6847
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6851
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6858
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6869
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6878
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6882
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6888
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6892
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6898
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6907
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6917
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6921
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6927
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6931
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6937
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6944
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6953
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6957
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6962
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6966
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6971
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6975
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6980
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6984
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6994
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6998
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7009
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7017
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7025
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7033
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7044
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7053
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7063
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7073
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7077
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7082
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7086
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7092
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7096
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7102
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7106
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7111
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7115
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7121
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7125
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7131
		{
			yyLOCAL = &tree.CreateSourceWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7135
		{
			yyLOCAL = &tree.CreateSourceWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7140
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7144
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7150
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7154
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7158
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7164
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7168
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7172
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7176
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7180
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7184
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7188
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7193
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7197
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7201
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7205
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7209
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7213
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7217
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7221
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7225
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7229
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7233
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7237
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7241
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7245
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7249
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7253
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7257
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7261
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7265
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7269
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7273
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7277
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7281
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7285
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7289
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7293
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7297
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7301
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7307
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7311
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7317
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7323
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7327
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7333
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7337
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7341
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7345
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7349
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7353
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7367
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7371
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7380
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7385
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7391
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7398
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7402
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7408
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7412
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7416
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7422
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7426
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7432
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7441
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7450
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7481
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7514
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7528
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7534
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7543
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7552
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7561
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7570
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7580
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7588
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7594
		{
			yyVAL.str = ""
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7598
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7608
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7614
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7620
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7640
		{
			yyVAL.str = ""
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7644
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7650
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7656
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7660
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7664
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7670
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7674
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7678
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7682
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7688
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7692
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7696
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7705
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7711
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7715
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7721
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7725
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7729
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7733
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7737
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7741
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7746
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7750
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7754
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7758
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7762
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7766
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7770
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7774
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7778
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7782
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7795
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7799
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7803
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7811
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7815
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7821
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7825
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7830
		{
			yyVAL.str = ""
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7834
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7840
		{
			yyVAL.str = ""
		}
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7844
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7850
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7862
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7869
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7876
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7883
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7890
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7899
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7905
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7911
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7915
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7919
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7923
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7927
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7932
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7939
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7943
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7947
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7956
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7961
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7965
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7981
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7987
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7991
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7995
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7999
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8003
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8007
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8011
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8015
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8019
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8023
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8027
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8031
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8035
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8041
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8045
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8049
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8053
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8057
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8061
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8065
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8069
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8073
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8077
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8081
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8085
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8090
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8098
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8102
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8106
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8110
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8119
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8123
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8127
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8131
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8135
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8139
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8145
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8153
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8161
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8171
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, true, nil)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8181
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), true, nil)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8190
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), true, nil)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8200
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8210
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8219
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8233
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8242
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8248
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8252
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:8258
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8267
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8279
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8296
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8313
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8326
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8339
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8351
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8365
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8380
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8395
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8412
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8427
		{
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8434
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8438
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8442
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8448
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8452
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8456
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8460
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8466
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8470
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8474
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8480
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8488
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8498
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8502
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8509
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8514
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8518
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8523
		{
			yyVAL.str = ","
		}
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8527
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8532
		{
			yyVAL.str = "1,vector_l2_ops,random"
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8536
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8541
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8548
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8574
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8585
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8596
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8606
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8616
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8626
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8635
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8644
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8654
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8664
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8674
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8684
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8694
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8704
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8714
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8724
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8734
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8744
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8754
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8764
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8783
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8791
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8799
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8807
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8815
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8825
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8833
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8842
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8850
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8858
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8866
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8874
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8885
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8895
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8907
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8918
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8940
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8976
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8988
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9000
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9011
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9019
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9026
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9033
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9045
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9053
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9063
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9073
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9081
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9092
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9101
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9110
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9118
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9128
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9136
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9150
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9160
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9179
		{
		}
	case 1506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:9181
		{
		}
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9222
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9233
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9237
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9241
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:9247
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9252
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9256
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9262
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9266
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9273
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9277
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9281
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9289
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9293
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9297
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9301
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9307
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9311
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9315
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9319
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9323
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9327
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9331
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9335
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9339
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9343
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9351
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9355
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9359
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9363
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9367
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9371
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9375
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9379
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9383
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9387
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9397
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9403
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9407
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9414
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9418
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9422
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9428
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9432
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9436
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9440
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9444
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9448
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9452
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9458
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9462
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9466
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9470
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9476
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9489
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9494
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9500
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9504
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9517
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9522
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9526
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9530
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9534
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9538
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9545
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9549
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9563
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9567
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9574
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9585
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9590
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9596
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9608
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9620
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9632
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9645
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9658
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9671
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9684
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9697
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9710
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9723
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9736
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9749
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9762
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9777
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9804
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9846
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9882
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9918
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9935
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9947
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9967
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9987
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10007
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10023
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10036
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10049
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10062
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10075
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10087
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10099
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10111
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10123
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10135
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10147
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10159
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10171
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10183
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10196
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10209
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10222
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10235
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10250
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10258
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1661:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10267
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10277
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10300
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10305
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10311
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10318
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10322
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10327
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10331
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10337
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10343
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10350
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10357
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10366
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10373
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1677:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10380
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10389
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10393
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10397
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10403
		{
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10405
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10415
		{
			yyVAL.str = ""
		}
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10419
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go -c mysql mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"go/constant"
	"strconv"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const DISTINCTROW = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const KEYS = 57374
const VALUES = 57375
const LAST_INSERT_ID = 57376
const NEXT = 57377
const VALUE = 57378
const SHARE = 57379
const MODE = 57380
const SQL_NO_CACHE = 57381
const SQL_CACHE = 57382
const JOIN = 57383
const STRAIGHT_JOIN = 57384
const LEFT = 57385
const RIGHT = 57386
const INNER = 57387
const OUTER = 57388
const CROSS = 57389
const NATURAL = 57390
const USE = 57391
const FORCE = 57392
const ON = 57393
const USING = 57394
const SUBQUERY_AS_EXPR = 57395
const ID = 57396
const AT_ID = 57397
const AT_AT_ID = 57398
const STRING = 57399
const VALUE_ARG = 57400
const LIST_ARG = 57401
const COMMENT = 57402
const COMMENT_KEYWORD = 57403
const INTEGRAL = 57404
const HEX = 57405
const HEXNUM = 57406
const BIT_LITERAL = 57407
const FLOAT = 57408
const NULL = 57409
const TRUE = 57410
const FALSE = 57411
const EMPTY_FROM_CLAUSE = 57412
const LOWER_THAN_CHARSET = 57413
const CHARSET = 57414
const UNIQUE = 57415
const KEY = 57416
const OR = 57417
const XOR = 57418
const AND = 57419
const NOT = 57420
const BETWEEN = 57421
const CASE = 57422
const WHEN = 57423
const THEN = 57424
const ELSE = 57425
const END = 57426
const LE = 57427
const GE = 57428
const NE = 57429
const NULL_SAFE_EQUAL = 57430
const IS = 57431
const LIKE = 57432
const REGEXP = 57433
const IN = 57434
const ASSIGNMENT = 57435
const SHIFT_LEFT = 57436
const SHIFT_RIGHT = 57437
const DIV = 57438
const MOD = 57439
const UNARY = 57440
const COLLATE = 57441
const BINARY = 57442
const UNDERSCORE_BINARY = 57443
const INTERVAL = 57444
const BEGIN = 57445
const START = 57446
const TRANSACTION = 57447
const COMMIT = 57448
const ROLLBACK = 57449
const WORK = 57450
const CONSISTENT = 57451
const SNAPSHOT = 57452
const CHAIN = 57453
const NO = 57454
const RELEASE = 57455
const BIT = 57456
const TINYINT = 57457
const SMALLINT = 57458
const MEDIUMINT = 57459
const INT = 57460
const INTEGER = 57461
const BIGINT = 57462
const INTNUM = 57463
const REAL = 57464
const DOUBLE = 57465
const FLOAT_TYPE = 57466
const DECIMAL = 57467
const NUMERIC = 57468
const TIME = 57469
const TIMESTAMP = 57470
const DATETIME = 57471
const YEAR = 57472
const CHAR = 57473
const VARCHAR = 57474
const BOOL = 57475
const CHARACTER = 57476
const VARBINARY = 57477
const NCHAR = 57478
const TEXT = 57479
const TINYTEXT = 57480
const MEDIUMTEXT = 57481
const LONGTEXT = 57482
const BLOB = 57483
const TINYBLOB = 57484
const MEDIUMBLOB = 57485
const LONGBLOB = 57486
const JSON = 57487
const ENUM = 57488
const GEOMETRY = 57489
const POINT = 57490
const LINESTRING = 57491
const POLYGON = 57492
const GEOMETRYCOLLECTION = 57493
const MULTIPOINT = 57494
const MULTILINESTRING = 57495
const MULTIPOLYGON = 57496
const INT1 = 57497
const INT2 = 57498
const INT3 = 57499
const INT4 = 57500
const INT8 = 57501
const CREATE = 57502
const ALTER = 57503
const DROP = 57504
const RENAME = 57505
const ANALYZE = 57506
const ADD = 57507
const SCHEMA = 57508
const TABLE = 57509
const INDEX = 57510
const VIEW = 57511
const TO = 57512
const IGNORE = 57513
const IF = 57514
const PRIMARY = 57515
const COLUMN = 57516
const CONSTRAINT = 57517
const SPATIAL = 57518
const FULLTEXT = 57519
const FOREIGN = 57520
const KEY_BLOCK_SIZE = 57521
const SHOW = 57522
const DESCRIBE = 57523
const EXPLAIN = 57524
const DATE = 57525
const ESCAPE = 57526
const REPAIR = 57527
const OPTIMIZE = 57528
const TRUNCATE = 57529
const MAXVALUE = 57530
const PARTITION = 57531
const REORGANIZE = 57532
const LESS = 57533
const THAN = 57534
const PROCEDURE = 57535
const TRIGGER = 57536
const STATUS = 57537
const VARIABLES = 57538
const ROLE = 57539
const PROXY = 57540
const AVG_ROW_LENGTH = 57541
const STORAGE = 57542
const DISK = 57543
const MEMORY = 57544
const CHECKSUM = 57545
const COMPRESSION = 57546
const DATA = 57547
const DIRECTORY = 57548
const DELAY_KEY_WRITE = 57549
const ENCRYPTION = 57550
const ENGINE = 57551
const MAX_ROWS = 57552
const MIN_ROWS = 57553
const PACK_KEYS = 57554
const ROW_FORMAT = 57555
const STATS_AUTO_RECALC = 57556
const STATS_PERSISTENT = 57557
const STATS_SAMPLE_PAGES = 57558
const DYNAMIC = 57559
const COMPRESSED = 57560
const REDUNDANT = 57561
const COMPACT = 57562
const FIXED = 57563
const COLUMN_FORMAT = 57564
const AUTO_RANDOM = 57565
const RESTRICT = 57566
const CASCADE = 57567
const ACTION = 57568
const PARTIAL = 57569
const SIMPLE = 57570
const CHECK = 57571
const ENFORCED = 57572
const RANGE = 57573
const LIST = 57574
const ALGORITHM = 57575
const LINEAR = 57576
const PARTITIONS = 57577
const SUBPARTITION = 57578
const SUBPARTITIONS = 57579
const TYPE = 57580
const PROPERTIES = 57581
const PARSER = 57582
const VISIBLE = 57583
const INVISIBLE = 57584
const BTREE = 57585
const HASH = 57586
const RTREE = 57587
const BSI = 57588
const ZONEMAP = 57589
const EXPIRE = 57590
const ACCOUNT = 57591
const UNLOCK = 57592
const DAY = 57593
const NEVER = 57594
const SECOND = 57595
const ASCII = 57596
const COALESCE = 57597
const COLLATION = 57598
const HOUR = 57599
const MICROSECOND = 57600
const MINUTE = 57601
const MONTH = 57602
const QUARTER = 57603
const REPEAT = 57604
const REVERSE = 57605
const ROW_COUNT = 57606
const WEEK = 57607
const REVOKE = 57608
const FUNCTION = 57609
const PRIVILEGES = 57610
const TABLESPACE = 57611
const EXECUTE = 57612
const SUPER = 57613
const GRANT = 57614
const OPTION = 57615
const REFERENCES = 57616
const REPLICATION = 57617
const SLAVE = 57618
const CLIENT = 57619
const USAGE = 57620
const RELOAD = 57621
const FILE = 57622
const TEMPORARY = 57623
const ROUTINE = 57624
const EVENT = 57625
const SHUTDOWN = 57626
const NULLX = 57627
const AUTO_INCREMENT = 57628
const APPROXNUM = 57629
const SIGNED = 57630
const UNSIGNED = 57631
const ZEROFILL = 57632
const USER = 57633
const IDENTIFIED = 57634
const CIPHER = 57635
const ISSUER = 57636
const X509 = 57637
const SUBJECT = 57638
const SAN = 57639
const REQUIRE = 57640
const SSL = 57641
const NONE = 57642
const PASSWORD = 57643
const MAX_QUERIES_PER_HOUR = 57644
const MAX_UPDATES_PER_HOUR = 57645
const MAX_CONNECTIONS_PER_HOUR = 57646
const MAX_USER_CONNECTIONS = 57647
const FORMAT = 57648
const CONNECTION = 57649
const LOAD = 57650
const INFILE = 57651
const TERMINATED = 57652
const OPTIONALLY = 57653
const ENCLOSED = 57654
const ESCAPED = 57655
const STARTING = 57656
const LINES = 57657
const DATABASES = 57658
const TABLES = 57659
const EXTENDED = 57660
const FULL = 57661
const PROCESSLIST = 57662
const FIELDS = 57663
const COLUMNS = 57664
const OPEN = 57665
const ERRORS = 57666
const WARNINGS = 57667
const INDEXES = 57668
const NAMES = 57669
const GLOBAL = 57670
const SESSION = 57671
const ISOLATION = 57672
const LEVEL = 57673
const READ = 57674
const WRITE = 57675
const ONLY = 57676
const REPEATABLE = 57677
const COMMITTED = 57678
const UNCOMMITTED = 57679
const SERIALIZABLE = 57680
const LOCAL = 57681
const EXCEPT = 57682
const CURRENT_TIMESTAMP = 57683
const DATABASE = 57684
const CURRENT_TIME = 57685
const LOCALTIME = 57686
const LOCALTIMESTAMP = 57687
const UTC_DATE = 57688
const UTC_TIME = 57689
const UTC_TIMESTAMP = 57690
const REPLACE = 57691
const CONVERT = 57692
const SEPARATOR = 57693
const CURRENT_DATE = 57694
const CURRENT_USER = 57695
const CURRENT_ROLE = 57696
const SECOND_MICROSECOND = 57697
const MINUTE_MICROSECOND = 57698
const MINUTE_SECOND = 57699
const HOUR_MICROSECOND = 57700
const HOUR_SECOND = 57701
const HOUR_MINUTE = 57702
const DAY_MICROSECOND = 57703
const DAY_SECOND = 57704
const DAY_MINUTE = 57705
const DAY_HOUR = 57706
const YEAR_MONTH = 57707
const SQL_TSI_HOUR = 57708
const SQL_TSI_DAY = 57709
const SQL_TSI_WEEK = 57710
const SQL_TSI_MONTH = 57711
const SQL_TSI_QUARTER = 57712
const SQL_TSI_YEAR = 57713
const SQL_TSI_SECOND = 57714
const SQL_TSI_MINUTE = 57715
const RECURSIVE = 57716
const MATCH = 57717
const AGAINST = 57718
const BOOLEAN = 57719
const LANGUAGE = 57720
const WITH = 57721
const QUERY = 57722
const EXPANSION = 57723
const ADDDATE = 57724
const BIT_AND = 57725
const BIT_OR = 57726
const BIT_XOR = 57727
const CAST = 57728
const COUNT = 57729
const APPROX_COUNT_DISTINCT = 57730
const APPROX_PERCENTILE = 57731
const CURDATE = 57732
const CURTIME = 57733
const DATE_ADD = 57734
const DATE_SUB = 57735
const EXTRACT = 57736
const GROUP_CONCAT = 57737
const MAX = 57738
const MID = 57739
const MIN = 57740
const NOW = 57741
const POSITION = 57742
const SESSION_USER = 57743
const STD = 57744
const STDDEV = 57745
const STDDEV_POP = 57746
const STDDEV_SAMP = 57747
const SUBDATE = 57748
const SUBSTR = 57749
const SUBSTRING = 57750
const SUM = 57751
const SYSDATE = 57752
const SYSTEM_USER = 57753
const TRANSLATE = 57754
const TRIM = 57755
const VARIANCE = 57756
const VAR_POP = 57757
const VAR_SAMP = 57758
const AVG = 57759
const ROW = 57760
const OUTFILE = 57761
const HEADER = 57762
const MAX_FILE_SIZE = 57763
const FORCE_QUOTE = 57764
const UNUSED = 57765

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"HEXNUM",
	"BIT_LITERAL",
	"FLOAT",
	"NULL",
	"TRUE",
	"FALSE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"CONNECTION",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EXCEPT",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"';'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:6186

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 52,
	17, 344,
	-2, 325,
	-1, 56,
	185, 481,
	-2, 517,
	-1, 65,
	212, 234,
	213, 234,
	-2, 254,
	-1, 309,
	58, 1272,
	442, 1272,
	-2, 92,
	-1, 328,
	58, 644,
	442, 644,
	-2, 479,
	-1, 329,
	58, 472,
	442, 472,
	-2, 480,
	-1, 335,
	17, 345,
	-2, 308,
	-1, 548,
	17, 345,
	-2, 308,
	-1, 581,
	54, 770,
	-2, 1312,
	-1, 582,
	54, 771,
	-2, 1313,
	-1, 583,
	54, 772,
	-2, 1314,
	-1, 585,
	54, 779,
	-2, 1317,
	-1, 586,
	54, 778,
	-2, 1318,
	-1, 592,
	54, 853,
	-2, 1217,
	-1, 593,
	54, 864,
	-2, 1277,
	-1, 594,
	54, 866,
	-2, 1287,
	-1, 736,
	1, 507,
	56, 507,
	441, 507,
	-2, 514,
	-1, 854,
	17, 344,
	-2, 702,
	-1, 900,
	119, 990,
	-2, 988,
	-1, 902,
	119, 426,
	-2, 985,
	-1, 903,
	119, 427,
	-2, 986,
	-1, 1094,
	1, 508,
	56, 508,
	441, 508,
	-2, 514,
	-1, 1522,
	75, 514,
	115, 514,
	148, 514,
	151, 514,
	-2, 554,
	-1, 1524,
	246, 669,
	-2, 650,
	-1, 1632,
	75, 514,
	115, 514,
	148, 514,
	151, 514,
	-2, 555,
	-1, 1660,
	246, 669,
	-2, 651,
	-1, 2042,
	55, 529,
	56, 529,
	-2, 514,
	-1, 2046,
	55, 529,
	56, 529,
	-2, 514,
	-1, 2058,
	55, 533,
	56, 533,
	-2, 514,
	-1, 2061,
	55, 534,
	56, 534,
	-2, 514,
}

const yyPrivate = 57344

const yyLast = 16948

var yyAct = [...]int{
	728, 1147, 2048, 2046, 2045, 2053, 2019, 597, 1993, 1629,
	717, 595, 1890, 615, 1964, 1672, 2008, 1948, 1863, 1949,
	535, 1841, 1625, 1800, 83, 501, 1505, 285, 1627, 789,
	1084, 1793, 1851, 533, 1628, 441, 1694, 1309, 1771, 1148,
	83, 298, 296, 86, 1587, 385, 1693, 1517, 1590, 330,
	330, 1588, 488, 1418, 1391, 773, 1422, 1661, 1412, 714,
	569, 1599, 1595, 1438, 1427, 1569, 82, 1423, 1284, 1400,
	1456, 1087, 386, 882, 678, 1455, 1345, 505, 407, 291,
	796, 711, 83, 543, 897, 900, 891, 19, 1225, 51,
	596, 892, 1211, 3, 606, 1278, 766, 883, 686, 1636,
	1095, 730, 741, 1149, 712, 1162, 1146, 479, 305, 305,
	562, 336, 624, 52, 289, 1066, 280, 770, 742, 300,
	743, 559, 335, 791, 416, 443, 826, 12, 6, 5,
	1057, 406, 544, 378, 703, 302, 526, 1073, 79, 52,
	301, 1713, 1621, 1504, 458, 429, 725, 283, 885, 1069,
	78, 1882, 78, 404, 288, 286, 287, 292, 78, 1263,
	23, 39, 24, 512, 397, 1392, 1279, 337, 1907, 332,
	78, 1049, 1270, 413, 78, 76, 23, 39, 24, 1368,
	508, 402, 401, 760, 392, 347, 396, 398, 355, 478,
	755, 756, 52, 1273, 675, 394, 1936, 672, 74, 500,
	74, 745, 499, 502, 503, 720, 74, 502, 503, 365,
	513, 400, 473, 1934, 510, 1952, 1953, 469, 674, 1968,
	1791, 1395, 74, 1794, 1795, 1796, 1797, 1396, 1871, 1397,
	1874, 1716, 1506, 724, 1401, 1402, 1403, 1404, 1250, 1069,
	393, 379, 421, 1287, 1285, 1282, 1286, 1288, 1439, 1281,
	1280, 1442, 767, 1071, 1405, 1287, 1285, 464, 1286, 1288,
	366, 1770, 1681, 1680, 460, 471, 472, 1677, 1618, 470,
	1501, 459, 1782, 704, 1581, 1852, 1853, 1854, 1856, 1855,
	83, 420, 1582, 1881, 1931, 465, 1290, 1291, 1292, 1293,
	419, 83, 349, 1578, 1776, 1938, 2038, 2054, 1975, 706,
	1441, 1933, 346, 345, 1892, 399, 1982, 1951, 1865, 1888,
	1889, 1457, 1892, 1915, 1765, 2029, 1734, 445, 1733, 334,
	1940, 1941, 1898, 341, 2011, 1756, 522, 498, 497, 2055,
	467, 2049, 2020, 425, 1468, 1465, 1466, 1467, 1722, 1462,
	446, 1461, 1460, 1458, 415, 1884, 1885, 489, 1346, 511,
	1271, 362, 1431, 1869, 1760, 509, 403, 462, 1267, 418,
	455, 491, 1118, 1579, 468, 1077, 1502, 493, 389, 463,
	466, 290, 289, 705, 1307, 330, 1597, 1596, 1114, 461,
	516, 386, 386, 386, 1116, 1115, 758, 450, 514, 515,
	757, 759, 1113, 370, 490, 1459, 492, 52, 367, 368,
	447, 448, 449, 536, 2033, 1997, 407, 350, 1728, 565,
	451, 1398, 288, 286, 287, 780, 1319, 340, 677, 538,
	1261, 1260, 1249, 2012, 839, 683, 1243, 420, 83, 83,
	83, 83, 423, 1108, 305, 1082, 687, 1051, 1826, 700,
	808, 391, 372, 371, 1298, 680, 540, 424, 564, 417,
	484, 1151, 1150, 1386, 1384, 330, 330, 420, 330, 537,
	1432, 527, 506, 445, 495, 2015, 718, 2006, 348, 481,
	494, 1413, 528, 1902, 1864, 1245, 330, 330, 701, 1939,
	502, 503, 1068, 1883, 1287, 1285, 446, 1286, 1288, 330,
	1392, 330, 475, 736, 521, 83, 359, 502, 503, 1089,
	1463, 1464, 673, 1385, 360, 1120, 546, 547, 549, 750,
	768, 330, 735, 483, 1580, 305, 1055, 719, 394, 548,
	532, 1072, 727, 330, 386, 731, 330, 52, 457, 1577,
	1758, 389, 1067, 748, 1757, 2009, 2010, 738, 1156, 1264,
	77, 781, 77, 1761, 1762, 504, 737, 507, 77, 525,
	305, 422, 496, 330, 330, 788, 83, 722, 407, 558,
	77, 797, 751, 393, 77, 806, 774, 1484, 1226, 545,
	732, 1296, 774, 1143, 733, 739, 740, 792, 805, 803,
	746, 723, 305, 699, 1144, 688, 689, 690, 691, 726,
	803, 716, 752, 1226, 707, 1351, 1767, 747, 790, 1766,
	793, 1573, 856, 1568, 391, 72, 809, 1298, 1751, 721,
	734, 1218, 2028, 305, 552, 553, 554, 555, 556, 524,
	744, 1320, 529, 530, 531, 1216, 1217, 1215, 1428, 1431,
	769, 783, 2044, 865, 786, 2025, 1976, 1611, 866, 1972,
	855, 539, 764, 1827, 1829, 1830, 1831, 1828, 863, 1356,
	779, 782, 357, 2027, 358, 365, 784, 765, 1920, 356,
	354, 353, 361, 1837, 363, 364, 776, 777, 778, 447,
	448, 449, 536, 787, 1610, 889, 889, 894, 1835, 395,
	1867, 1297, 785, 369, 1866, 797, 804, 805, 803, 794,
	397, 1159, 857, 858, 859, 860, 804, 805, 803, 1836,
	1161, 902, 861, 847, 848, 840, 841, 842, 843, 844,
	845, 846, 839, 854, 1834, 833, 804, 805, 803, 896,
	2058, 1664, 1081, 1354, 903, 1843, 1353, 880, 537, 447,
	448, 449, 1519, 804, 805, 803, 1833, 1432, 83, 1085,
	1086, 1486, 1425, 1821, 1820, 285, 1426, 1429, 534, 804,
	805, 803, 1110, 1823, 373, 872, 1667, 1626, 1819, 1080,
	1053, 330, 1662, 792, 397, 1052, 888, 1816, 1675, 1676,
	289, 1810, 1832, 1663, 1807, 1806, 447, 448, 449, 536,
	1098, 330, 804, 805, 803, 1714, 793, 398, 1520, 1822,
	895, 1708, 804, 805, 803, 52, 1707, 1706, 1430, 1705,
	565, 394, 83, 1702, 1513, 1512, 901, 1668, 1140, 1141,
	288, 286, 287, 1099, 1100, 1101, 774, 774, 774, 1102,
	305, 1062, 1065, 1511, 1111, 1510, 1157, 1158, 1380, 681,
	1050, 447, 448, 449, 2036, 537, 1096, 1076, 1969, 564,
	1125, 1944, 1326, 1137, 1138, 1139, 1104, 1842, 1106, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1105, 1154, 880, 1220, 1221, 1103, 744, 1930, 1107,
	1909, 1917, 1145, 1133, 1896, 1233, 1895, 1824, 1817, 1945,
	1117, 1136, 1674, 1916, 1424, 1813, 1812, 1545, 1811, 1772,
	1235, 1126, 1753, 1127, 1121, 1122, 1123, 804, 805, 803,
	2026, 804, 805, 803, 1227, 1715, 1803, 1230, 1310, 1670,
	1134, 1624, 2003, 837, 847, 848, 840, 841, 842, 843,
	844, 845, 846, 839, 1152, 1153, 1622, 1155, 804, 805,
	803, 1669, 1671, 1192, 1193, 1194, 1195, 1521, 1196, 1197,
	1198, 1410, 1219, 1409, 1213, 838, 837, 847, 848, 840,
	841, 842, 843, 844, 845, 846, 839, 838, 837, 847,
	848, 840, 841, 842, 843, 844, 845, 846, 839, 1408,
	1407, 1079, 1228, 1533, 1229, 1231, 1078, 876, 875, 1248,
	874, 682, 1903, 1677, 1234, 1237, 1236, 1784, 1552, 1556,
	1558, 1560, 1562, 1563, 1565, 1665, 1468, 1465, 1466, 1467,
	1783, 1547, 1548, 1549, 1550, 1531, 1532, 1553, 1612, 1534,
	1609, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1551, 842, 843, 844, 845, 846, 839, 1608, 1555,
	1557, 1559, 1561, 1564, 838, 837, 847, 848, 840, 841,
	842, 843, 844, 845, 846, 839, 812, 813, 814, 815,
	816, 817, 1251, 810, 1586, 420, 1359, 1546, 1789, 1322,
	1358, 1522, 339, 1493, 687, 1322, 2063, 2057, 2056, 1444,
	330, 1443, 338, 330, 1075, 2039, 420, 1362, 330, 1360,
	804, 805, 803, 1276, 1781, 1266, 840, 841, 842, 843,
	844, 845, 846, 839, 1605, 1255, 2035, 2034, 1256, 1075,
	2023, 1258, 1492, 1075, 2022, 1357, 804, 805, 803, 1304,
	1996, 1995, 1483, 551, 1355, 1477, 804, 805, 803, 330,
	1274, 1275, 1476, 731, 804, 805, 803, 1475, 1331, 83,
	83, 1328, 1265, 1315, 804, 805, 803, 804, 805, 803,
	1474, 1321, 1295, 1306, 804, 805, 803, 1718, 1959, 804,
	805, 803, 1232, 1254, 1718, 1954, 1473, 1327, 702, 1268,
	1129, 1942, 804, 805, 803, 1253, 1928, 1927, 1718, 1913,
	550, 1312, 1313, 2014, 1262, 1472, 394, 1300, 804, 805,
	803, 1471, 1301, 1322, 1302, 1277, 1718, 1912, 1238, 1323,
	1454, 1523, 1324, 1325, 1096, 1294, 1453, 804, 805, 803,
	1308, 1718, 1911, 804, 805, 803, 801, 1305, 1718, 1910,
	1303, 474, 804, 805, 803, 453, 1340, 1311, 804, 805,
	803, 1901, 1900, 454, 1314, 1848, 1849, 1848, 1847, 1343,
	1344, 1452, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1788,
	1787, 679, 889, 52, 1372, 889, 1786, 1785, 1375, 1222,
	799, 1554, 1069, 804, 805, 803, 1718, 1717, 797, 1494,
	330, 1132, 1496, 1348, 330, 330, 1352, 455, 330, 1318,
	1378, 804, 805, 803, 1322, 1478, 455, 1363, 1244, 774,
	1322, 1469, 1322, 1330, 1054, 774, 1322, 1329, 1132, 1252,
	83, 1247, 1246, 1379, 1223, 1367, 1241, 1240, 1132, 1131,
	420, 1374, 1075, 1074, 397, 1129, 1083, 1342, 1341, 1421,
	1213, 452, 557, 1350, 523, 453, 1371, 78, 2059, 83,
	1449, 2005, 1999, 1387, 1389, 1983, 1980, 854, 1369, 1978,
	1919, 1373, 1411, 1370, 1376, 1377, 1364, 1381, 1382, 1861,
	1846, 1383, 1844, 1839, 1798, 1779, 426, 1778, 1777, 1390,
	1774, 1764, 1406, 52, 1749, 1414, 1415, 431, 434, 435,
	436, 432, 1451, 433, 437, 74, 1589, 1688, 1687, 1591,
	1775, 679, 1470, 1491, 1600, 1603, 1433, 1434, 1574, 1515,
	1214, 1435, 1299, 1257, 1239, 1130, 1119, 1112, 1488, 330,
	560, 1485, 881, 1490, 879, 878, 1489, 877, 1448, 1449,
	431, 434, 435, 436, 432, 2001, 433, 437, 1482, 431,
	434, 435, 436, 432, 873, 433, 437, 827, 870, 1479,
	868, 867, 1988, 864, 74, 1567, 836, 835, 834, 1487,
	832, 831, 830, 829, 828, 1518, 825, 1481, 824, 823,
	822, 821, 1495, 820, 819, 818, 1516, 684, 1497, 1585,
	838, 837, 847, 848, 840, 841, 842, 843, 844, 845,
	846, 839, 1500, 676, 456, 1058, 1059, 1092, 1986, 1509,
	1950, 1289, 1128, 1061, 1514, 476, 696, 694, 1064, 299,
	1571, 697, 695, 1063, 693, 698, 1584, 435, 436, 692,
	1566, 1570, 1530, 1570, 1572, 2043, 1242, 1961, 541, 330,
	330, 1576, 542, 83, 1097, 1592, 1593, 1594, 1085, 1086,
	1575, 1393, 480, 1498, 1090, 754, 420, 795, 439, 482,
	1499, 409, 411, 412, 420, 1633, 1607, 1598, 1601, 331,
	1604, 1151, 1150, 1421, 774, 486, 487, 2000, 1924, 1922,
	1876, 1606, 1875, 1873, 1804, 1619, 1799, 1623, 1583, 1508,
	1614, 1507, 1447, 339, 485, 1617, 338, 1446, 1615, 1616,
	1317, 679, 1989, 338, 1990, 1989, 438, 1332, 1259, 1695,
	1697, 279, 1695, 1695, 1682, 1990, 351, 1658, 1685, 1686,
	1683, 1678, 1, 73, 1684, 1224, 1163, 625, 884, 890,
	1840, 1960, 1689, 1690, 1691, 1692, 1992, 1918, 1963, 614,
	598, 1868, 1394, 1790, 1870, 1792, 1696, 1272, 1710, 1269,
	477, 1365, 1366, 637, 1701, 627, 869, 628, 1698, 1699,
	671, 1704, 410, 626, 1703, 1440, 1700, 344, 408, 352,
	1769, 1503, 850, 1679, 853, 1724, 1602, 1160, 2052, 2042,
	2018, 1998, 1891, 2037, 1932, 1711, 1981, 1974, 851, 852,
	849, 1709, 838, 837, 847, 848, 840, 841, 842, 843,
	844, 845, 846, 839, 1887, 1721, 303, 761, 517, 376,
	1720, 1862, 383, 685, 1719, 1399, 1752, 1283, 83, 1088,
	1070, 713, 1727, 304, 1880, 1845, 342, 1091, 343, 1518,
	1094, 1093, 811, 1725, 1726, 1212, 1729, 1730, 1731, 1732,
	871, 1697, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1754, 1678, 1750, 420,
	1768, 862, 567, 1349, 605, 599, 1805, 1773, 1437, 1436,
	1673, 749, 26, 440, 802, 898, 85, 1780, 1109, 899,
	1877, 1712, 1965, 613, 612, 611, 610, 430, 1838, 428,
	1802, 427, 295, 1801, 294, 1316, 1445, 798, 445, 800,
	1947, 1946, 1905, 1906, 1620, 1613, 1763, 1825, 1759, 1755,
	1897, 1632, 1631, 1818, 1659, 420, 1660, 1666, 420, 420,
	420, 446, 1529, 1525, 1527, 1528, 1808, 1809, 1526, 1524,
	1419, 1420, 1814, 1815, 1417, 1416, 1060, 1056, 886, 1878,
	893, 414, 729, 1850, 80, 293, 1858, 1859, 1860, 1857,
	838, 837, 847, 848, 840, 841, 842, 843, 844, 845,
	846, 839, 1879, 1135, 1872, 561, 11, 1480, 18, 17,
	16, 47, 46, 45, 1886, 44, 15, 8, 43, 42,
	83, 41, 1893, 1894, 14, 13, 37, 420, 838, 837,
	847, 848, 840, 841, 842, 843, 844, 845, 846, 839,
	36, 35, 420, 34, 33, 32, 31, 30, 29, 1899,
	28, 27, 9, 55, 54, 1908, 53, 20, 21, 1347,
	22, 61, 790, 60, 1904, 59, 58, 57, 25, 10,
	1914, 7, 4, 2, 0, 0, 1923, 1921, 1925, 1926,
	838, 837, 847, 848, 840, 841, 842, 843, 844, 845,
	846, 839, 0, 0, 1935, 1937, 0, 0, 0, 0,
	1967, 0, 0, 1943, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 1966, 1955, 1956, 1957, 1958, 0, 0,
	1929, 0, 0, 0, 0, 0, 1977, 1970, 1979, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 1987, 1985, 1994,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 420,
	0, 420, 0, 0, 0, 0, 0, 0, 718, 2002,
	718, 2004, 0, 0, 0, 2007, 0, 1967, 2017, 0,
	0, 0, 0, 0, 0, 0, 420, 2013, 0, 0,
	1966, 2016, 0, 2021, 0, 718, 2024, 0, 0, 0,
	0, 0, 1994, 2030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 0, 0, 0, 2051,
	0, 2050, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 2062, 2061, 2060, 2051, 1016, 1002, 0, 964, 1018,
	936, 952, 1026, 954, 955, 989, 914, 973, 210, 950,
	906, 939, 940, 908, 947, 909, 937, 966, 154, 935,
	1005, 976, 179, 1024, 181, 0, 0, 239, 194, 0,
	0, 969, 1007, 971, 994, 963, 990, 922, 983, 1019,
	951, 987, 1020, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	986, 1012, 949, 0, 0, 923, 1017, 970, 988, 0,
	907, 984, 0, 912, 915, 1025, 1010, 944, 945, 0,
	0, 0, 0, 0, 0, 0, 967, 972, 991, 960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 941,
	0, 980, 0, 0, 0, 917, 913, 0, 965, 0,
	128, 244, 258, 138, 235, 271, 142, 242, 134, 209,
	231, 130, 256, 241, 191, 173, 174, 129, 0, 226,
	152, 165, 149, 207, 1014, 1015, 148, 274, 916, 266,
	132, 133, 265, 206, 253, 257, 192, 186, 131, 255,
	190, 185, 177, 156, 169, 219, 184, 220, 170, 196,
	195, 197, 1037, 1038, 1039, 1040, 1041, 921, 0, 942,
	992, 0, 905, 1001, 1008, 962, 268, 1011, 959, 958,
	1044, 0, 1043, 243, 1045, 1046, 178, 1006, 938, 948,
	943, 946, 229, 212, 1013, 979, 217, 227, 182, 254,
	221, 259, 245, 267, 995, 222, 124, 246, 151, 193,
	135, 136, 147, 153, 155, 157, 158, 202, 203, 215,
	234, 247, 248, 249, 150, 143, 228, 144, 167, 145,
	125, 236, 146, 126, 216, 252, 1042, 164, 224, 189,
	127, 188, 218, 251, 250, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 904, 263, 0, 208,
	1003, 910, 920, 918, 956, 981, 982, 204, 1029, 997,
	1000, 998, 1027, 232, 1183, 0, 0, 0, 0, 172,
	214, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 911, 0, 240, 261, 273, 264, 957,
	929, 968, 272, 932, 930, 996, 931, 985, 1030, 198,
	199, 200, 201, 953, 141, 977, 961, 1031, 1032, 1033,
	1034, 1035, 1036, 934, 1009, 160, 166, 0, 168, 140,
	213, 163, 270, 175, 205, 171, 237, 176, 183, 225,
	269, 211, 230, 139, 260, 238, 187, 162, 928, 933,
	927, 974, 975, 1021, 1022, 1023, 993, 919, 1004, 924,
	926, 925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 999, 978, 123, 0, 180, 1028, 223, 159, 0,
	0, 0, 0, 0, 0, 1179, 0, 1176, 0, 0,
	0, 1178, 1175, 1177, 1181, 1182, 0, 0, 0, 1180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 78,
	0, 633, 0, 0, 0, 1047, 1048, 276, 277, 278,
	262, 210, 0, 0, 0, 0, 0, 607, 0, 0,
	0, 154, 0, 0, 0, 179, 0, 181, 0, 0,
	239, 194, 0, 0, 0, 0, 649, 656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 0, 0,
	568, 639, 638, 616, 0, 0, 0, 137, 617, 0,
	622, 0, 618, 621, 619, 620, 0, 0, 641, 0,
	0, 0, 0, 0, 566, 604, 0, 608, 0, 1164,
	1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174,
	1186, 1187, 1188, 1189, 1190, 1191, 1184, 1185, 601, 602,
	0, 0, 0, 0, 634, 0, 603, 0, 0, 636,
	0, 623, 0, 128, 244, 258, 138, 235, 271, 142,
	242, 134, 209, 231, 130, 256, 241, 191, 173, 174,
	129, 0, 226, 152, 165, 149, 207, 631, 632, 148,
	594, 629, 266, 132, 133, 265, 206, 253, 257, 192,
	186, 131, 255, 190, 185, 177, 156, 169, 219, 184,
	220, 170, 196, 195, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 647, 0, 0, 0, 243, 0, 0, 178,
	0, 0, 0, 630, 0, 229, 212, 659, 0, 217,
	227, 182, 254, 221, 259, 245, 267, 0, 222, 124,
	246, 151, 193, 135, 136, 147, 153, 155, 157, 158,
	202, 203, 215, 234, 247, 248, 249, 150, 143, 228,
	144, 167, 145, 125, 236, 146, 126, 216, 252, 0,
	164, 224, 189, 127, 188, 218, 251, 250, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	263, 645, 208, 658, 640, 642, 643, 646, 650, 651,
	592, 652, 653, 655, 657, 660, 232, 0, 0, 0,
	0, 0, 172, 214, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 261,
	273, 593, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 635, 198, 199, 200, 201, 648, 141, 0, 1361,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 166,
	0, 168, 140, 213, 163, 270, 175, 205, 171, 237,
	176, 183, 225, 269, 211, 230, 139, 260, 238, 187,
	162, 666, 644, 665, 667, 668, 664, 669, 670, 654,
	609, 0, 662, 661, 663, 838, 837, 847, 848, 840,
	841, 842, 843, 844, 845, 846, 839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 0, 180, 77,
	223, 159, 87, 570, 571, 572, 573, 574, 575, 576,
	95, 577, 97, 98, 578, 100, 579, 102, 580, 104,
	105, 106, 581, 582, 583, 584, 111, 585, 586, 587,
	588, 116, 117, 118, 119, 589, 590, 591, 633, 0,
	276, 277, 278, 262, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 607, 0, 0, 0, 154, 775,
	0, 0, 179, 0, 181, 0, 0, 239, 194, 0,
	0, 0, 0, 649, 656, 0, 0, 0, 0, 0,
	0, 771, 0, 0, 600, 0, 0, 568, 639, 638,
	616, 0, 0, 0, 137, 617, 0, 622, 0, 618,
	621, 619, 620, 0, 0, 641, 0, 0, 0, 0,
	0, 566, 604, 0, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 601, 602, 0, 0, 0,
	0, 634, 0, 603, 0, 0, 772, 0, 623, 0,
	128, 244, 258, 138, 235, 271, 142, 242, 134, 209,
	231, 130, 256, 241, 191, 173, 174, 129, 0, 226,
	152, 165, 149, 207, 631, 632, 148, 594, 629, 266,
	132, 133, 265, 206, 253, 257, 192, 186, 131, 255,
	190, 185, 177, 156, 169, 219, 184, 220, 170, 196,
	195, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 647,
	0, 0, 0, 243, 0, 0, 178, 0, 0, 0,
	630, 0, 229, 212, 659, 0, 217, 227, 182, 254,
	221, 259, 245, 267, 0, 222, 124, 246, 151, 193,
	135, 136, 147, 153, 155, 157, 158, 202, 203, 215,
	234, 247, 248, 249, 150, 143, 228, 144, 167, 145,
	125, 236, 146, 126, 216, 252, 0, 164, 224, 189,
	127, 188, 218, 251, 250, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 263, 645, 208,
	658, 640, 642, 643, 646, 650, 651, 592, 652, 653,
	655, 657, 660, 232, 0, 0, 0, 0, 0, 172,
	214, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 261, 273, 593, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 635, 198,
	199, 200, 201, 648, 141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 166, 0, 168, 140,
	213, 163, 270, 175, 205, 171, 237, 176, 183, 225,
	269, 211, 230, 139, 260, 238, 187, 162, 666, 644,
	665, 667, 668, 664, 669, 670, 654, 609, 0, 662,
	661, 663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 180, 0, 223, 159, 87,
	570, 571, 572, 573, 574, 575, 576, 95, 577, 97,
	98, 578, 100, 579, 102, 580, 104, 105, 106, 581,
	582, 583, 584, 111, 585, 586, 587, 588, 116, 117,
	118, 119, 589, 590, 591, 633, 0, 276, 277, 278,
	262, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 607, 0, 0, 0, 154, 2031, 0, 0, 179,
	0, 181, 0, 0, 239, 194, 0, 0, 0, 0,
	649, 656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 0, 0, 568, 639, 638, 616, 0, 0,
	0, 137, 617, 0, 622, 0, 618, 621, 619, 620,
	0, 0, 641, 0, 0, 0, 0, 0, 566, 604,
	0, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 601, 602, 0, 0, 0, 0, 634, 0,
	603, 0, 0, 636, 0, 623, 0, 128, 244, 258,
	138, 235, 271, 142, 242, 134, 209, 231, 130, 256,
	241, 191, 173, 174, 129, 0, 226, 152, 165, 149,
	207, 631, 632, 148, 594, 629, 266, 132, 133, 265,
	206, 253, 257, 192, 186, 131, 255, 190, 185, 177,
	156, 169, 219, 184, 220, 170, 196, 195, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 647, 0, 0, 0,
	243, 0, 0, 178, 0, 0, 0, 630, 0, 229,
	212, 659, 0, 217, 227, 182, 254, 221, 259, 245,
	267, 0, 222, 124, 246, 151, 193, 135, 136, 147,
	153, 155, 157, 158, 202, 203, 215, 234, 247, 248,
	249, 150, 143, 228, 144, 167, 145, 125, 236, 146,
	126, 216, 252, 0, 164, 224, 189, 127, 188, 218,
	251, 250, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 263, 645, 208, 658, 640, 642,
	643, 646, 650, 651, 592, 652, 653, 655, 657, 660,
	232, 0, 0, 0, 0, 0, 172, 214, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 261, 273, 593, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 635, 198, 199, 200, 201,
	648, 141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 166, 0, 168, 140, 213, 163, 270,
	175, 205, 171, 237, 176, 183, 225, 269, 211, 230,
	139, 260, 238, 187, 162, 666, 644, 665, 667, 668,
	664, 669, 670, 654, 609, 0, 662, 661, 663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 180, 0, 223, 159, 87, 570, 571, 572,
	573, 574, 575, 576, 95, 577, 97, 98, 578, 100,
	579, 102, 580, 104, 105, 106, 581, 582, 583, 584,
	111, 585, 586, 587, 588, 116, 117, 118, 119, 589,
	590, 591, 633, 0, 276, 277, 278, 262, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 607, 0,
	0, 0, 154, 775, 0, 0, 179, 0, 181, 0,
	0, 239, 194, 0, 0, 0, 0, 649, 656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 0,
	0, 568, 639, 638, 616, 0, 0, 0, 137, 617,
	0, 622, 0, 618, 621, 619, 620, 0, 0, 641,
	0, 0, 0, 0, 0, 566, 604, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 601,
	602, 0, 0, 0, 0, 634, 0, 603, 0, 0,
	636, 0, 623, 0, 128, 244, 258, 138, 235, 271,
	142, 242, 134, 209, 231, 130, 256, 241, 191, 173,
	174, 129, 0, 226, 152, 165, 149, 207, 631, 632,
	148, 594, 629, 266, 132, 133, 265, 206, 253, 257,
	192, 186, 131, 255, 190, 185, 177, 156, 169, 219,
	184, 220, 170, 196, 195, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 647, 0, 0, 0, 243, 0, 0,
	178, 0, 0, 0, 630, 0, 229, 212, 659, 0,
	217, 227, 182, 254, 221, 259, 245, 267, 0, 222,
	124, 246, 151, 193, 135, 136, 147, 153, 155, 157,
	158, 202, 203, 215, 234, 247, 248, 249, 150, 143,
	228, 144, 167, 145, 125, 236, 146, 126, 216, 252,
	0, 164, 224, 189, 127, 188, 218, 251, 250, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 263, 645, 208, 658, 640, 642, 643, 646, 650,
	651, 592, 652, 653, 655, 657, 660, 232, 0, 0,
	0, 0, 0, 172, 214, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	261, 273, 593, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 635, 198, 199, 200, 201, 648, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	166, 0, 168, 140, 213, 163, 270, 175, 205, 171,
	237, 176, 183, 225, 269, 211, 230, 139, 260, 238,
	187, 162, 666, 644, 665, 667, 668, 664, 669, 670,
	654, 609, 0, 662, 661, 663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 180,
	0, 223, 159, 87, 570, 571, 572, 573, 574, 575,
	576, 95, 577, 97, 98, 578, 100, 579, 102, 580,
	104, 105, 106, 581, 582, 583, 584, 111, 585, 586,
	587, 588, 116, 117, 118, 119, 589, 590, 591, 633,
	0, 276, 277, 278, 262, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 607, 0, 0, 0, 154,
	0, 0, 0, 179, 0, 181, 0, 0, 239, 194,
	0, 0, 0, 0, 649, 656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 0, 0, 568, 639,
	638, 616, 0, 0, 0, 137, 617, 0, 622, 0,
	618, 621, 619, 620, 0, 0, 641, 0, 0, 0,
	0, 0, 566, 604, 0, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 601, 602, 563, 0,
	0, 0, 634, 0, 603, 0, 0, 636, 0, 623,
	0, 128, 244, 258, 138, 235, 271, 142, 242, 134,
	209, 231, 130, 256, 241, 191, 173, 174, 129, 0,
	226, 152, 165, 149, 207, 631, 632, 148, 594, 629,
	266, 132, 133, 265, 206, 253, 257, 192, 186, 131,
	255, 190, 185, 177, 156, 169, 219, 184, 220, 170,
	196, 195, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	647, 0, 0, 0, 243, 0, 0, 178, 0, 0,
	0, 630, 0, 229, 212, 659, 0, 217, 227, 182,
	254, 221, 259, 245, 267, 0, 222, 124, 246, 151,
	193, 135, 136, 147, 153, 155, 157, 158, 202, 203,
	215, 234, 247, 248, 249, 150, 143, 228, 144, 167,
	145, 125, 236, 146, 126, 216, 252, 0, 164, 224,
	189, 127, 188, 218, 251, 250, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 263, 645,
	208, 658, 640, 642, 643, 646, 650, 651, 592, 652,
	653, 655, 657, 660, 232, 0, 0, 0, 0, 0,
	172, 214, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 261, 273, 593,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 635,
	198, 199, 200, 201, 648, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 166, 0, 168,
	140, 213, 163, 270, 175, 205, 171, 237, 176, 183,
	225, 269, 211, 230, 139, 260, 238, 187, 162, 666,
	644, 665, 667, 668, 664, 669, 670, 654, 609, 0,
	662, 661, 663, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 180, 0, 223, 159,
	87, 570, 571, 572, 573, 574, 575, 576, 95, 577,
	97, 98, 578, 100, 579, 102, 580, 104, 105, 106,
	581, 582, 583, 584, 111, 585, 586, 587, 588, 116,
	117, 118, 119, 589, 590, 591, 633, 0, 276, 277,
	278, 262, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 607, 0, 0, 0, 154, 0, 0, 0,
	179, 0, 181, 0, 0, 239, 194, 0, 0, 0,
	0, 649, 656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 0, 0, 568, 639, 638, 616, 0,
	0, 0, 137, 617, 0, 622, 0, 618, 621, 619,
	620, 0, 0, 641, 0, 0, 0, 0, 0, 566,
	604, 0, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 601, 602, 0, 0, 0, 0, 634,
	0, 603, 0, 0, 636, 0, 623, 0, 128, 244,
	258, 138, 235, 271, 142, 242, 134, 209, 231, 130,
	256, 241, 191, 173, 174, 129, 0, 226, 152, 165,
	149, 207, 631, 632, 148, 594, 629, 266, 132, 133,
	265, 206, 253, 257, 192, 186, 131, 255, 190, 185,
	177, 156, 169, 219, 184, 220, 170, 196, 195, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 647, 0, 0,
	0, 243, 0, 0, 178, 0, 0, 0, 630, 0,
	229, 212, 659, 0, 217, 227, 182, 254, 221, 259,
	245, 267, 0, 222, 124, 246, 151, 193, 135, 136,
	147, 153, 155, 157, 158, 202, 203, 215, 234, 247,
	248, 249, 150, 143, 228, 144, 167, 145, 125, 236,
	146, 126, 216, 252, 0, 164, 224, 189, 127, 188,
	218, 251, 250, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 263, 645, 208, 658, 640,
	642, 643, 646, 650, 651, 592, 652, 653, 655, 657,
	660, 232, 0, 0, 0, 0, 0, 172, 214, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 261, 273, 593, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 635, 198, 199, 200,
	201, 648, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 166, 0, 168, 140, 213, 163,
	270, 175, 205, 171, 237, 176, 183, 225, 269, 211,
	230, 139, 260, 238, 187, 162, 666, 644, 665, 667,
	668, 664, 669, 670, 654, 609, 0, 662, 661, 663,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 180, 0, 223, 159, 87, 570, 571,
	572, 573, 574, 575, 576, 95, 577, 97, 98, 578,
	100, 579, 102, 580, 104, 105, 106, 581, 582, 583,
	584, 111, 585, 586, 587, 588, 116, 117, 118, 119,
	589, 590, 591, 633, 0, 276, 277, 278, 262, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 607,
	0, 0, 0, 154, 0, 0, 0, 179, 0, 181,
	0, 0, 239, 194, 0, 0, 0, 0, 649, 656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	0, 0, 568, 639, 638, 616, 0, 0, 0, 137,
	617, 0, 622, 0, 618, 621, 619, 620, 0, 0,
	641, 0, 0, 0, 0, 0, 0, 604, 0, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	601, 602, 0, 0, 0, 0, 634, 0, 603, 0,
	0, 636, 0, 623, 0, 128, 244, 258, 138, 235,
	271, 142, 242, 134, 209, 231, 130, 256, 241, 191,
	173, 174, 129, 0, 226, 152, 165, 149, 207, 631,
	632, 148, 594, 629, 266, 132, 133, 265, 206, 253,
	257, 192, 186, 131, 255, 190, 185, 177, 156, 169,
	219, 184, 220, 170, 196, 195, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 647, 0, 0, 0, 243, 0,
	0, 178, 0, 0, 0, 630, 0, 229, 212, 659,
	0, 217, 227, 182, 254, 221, 259, 245, 267, 0,
	222, 124, 246, 151, 193, 135, 136, 147, 153, 155,
	157, 158, 202, 203, 215, 234, 247, 248, 249, 150,
	143, 228, 144, 167, 145, 125, 236, 146, 126, 216,
	252, 0, 164, 224, 189, 127, 188, 218, 251, 250,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 263, 645, 208, 658, 640, 642, 643, 646,
	650, 651, 592, 652, 653, 655, 657, 660, 232, 0,
	0, 0, 0, 0, 172, 214, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 261, 273, 593, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 635, 198, 199, 200, 201, 648, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 166, 0, 168, 140, 213, 163, 270, 175, 205,
	171, 237, 176, 183, 225, 269, 211, 230, 139, 260,
	238, 187, 162, 666, 644, 665, 667, 668, 664, 669,
	670, 654, 609, 0, 662, 661, 663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 123, 0,
	180, 0, 223, 159, 87, 570, 571, 572, 573, 574,
	575, 576, 95, 577, 97, 98, 578, 100, 579, 102,
	580, 104, 105, 106, 581, 582, 583, 584, 111, 585,
	586, 587, 588, 116, 117, 118, 119, 589, 590, 591,
	0, 0, 276, 277, 278, 262, 315, 0, 314, 318,
	310, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 325, 179, 0, 181, 0, 0, 239, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	329, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 314, 318, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 0, 0, 0, 0,
	128, 244, 258, 138, 235, 271, 142, 242, 134, 209,
	231, 130, 256, 241, 191, 173, 174, 129, 0, 226,
	152, 165, 149, 207, 0, 0, 148, 274, 0, 266,
	132, 133, 265, 206, 253, 257, 192, 186, 131, 255,
	190, 185, 177, 156, 169, 219, 184, 220, 170, 196,
	195, 197, 0, 0, 0, 0, 0, 308, 307, 311,
	0, 0, 0, 0, 0, 313, 268, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 178, 317, 0, 0,
	0, 0, 229, 212, 0, 0, 217, 227, 182, 254,
	221, 309, 245, 267, 0, 333, 124, 246, 151, 193,
	135, 136, 147, 153, 155, 157, 158, 202, 203, 215,
	234, 247, 248, 249, 150, 143, 228, 144, 167, 145,
	125, 236, 146, 126, 216, 252, 0, 164, 224, 189,
	127, 188, 218, 251, 250, 275, 0, 0, 0, 0,
	308, 307, 311, 0, 0, 161, 0, 263, 313, 208,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	317, 0, 0, 232, 0, 0, 0, 312, 316, 319,
	214, 320, 321, 0, 708, 322, 323, 324, 0, 0,
	326, 327, 0, 0, 0, 240, 261, 273, 264, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 198,
	199, 200, 201, 0, 141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 166, 0, 168, 140,
	213, 163, 270, 175, 205, 171, 237, 176, 183, 225,
	269, 211, 230, 139, 260, 238, 187, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 316, 709, 0, 320, 710, 0, 0, 322, 323,
	324, 0, 0, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 180, 0, 223, 159, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 0, 0, 276, 277, 278,
	262, 315, 0, 314, 318, 310, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 0, 325, 179, 0, 181,
	0, 0, 239, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 329, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 244, 258, 138, 235,
	271, 142, 242, 134, 209, 231, 130, 256, 241, 191,
	173, 174, 129, 0, 226, 152, 165, 149, 207, 0,
	0, 148, 274, 0, 266, 132, 133, 265, 206, 253,
	257, 192, 186, 131, 255, 190, 185, 177, 156, 169,
	219, 184, 220, 170, 196, 195, 197, 0, 0, 0,
	0, 0, 308, 307, 311, 0, 0, 0, 0, 0,
	313, 268, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 178, 317, 0, 0, 0, 0, 229, 212, 0,
	0, 217, 227, 182, 254, 221, 309, 245, 267, 0,
	222, 124, 246, 151, 193, 135, 136, 147, 153, 155,
	157, 158, 202, 203, 215, 234, 247, 248, 249, 150,
	143, 228, 144, 167, 145, 125, 236, 146, 126, 216,
	252, 0, 164, 224, 189, 127, 188, 218, 251, 250,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 263, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 312, 316, 319, 214, 320, 321, 0, 0,
	322, 323, 324, 0, 0, 326, 327, 0, 0, 0,
	240, 261, 273, 264, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 198, 199, 200, 201, 0, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 166, 0, 168, 140, 213, 163, 270, 175, 205,
	171, 237, 176, 183, 225, 269, 211, 230, 139, 260,
	238, 187, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 123, 0,
	180, 0, 223, 159, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	0, 0, 276, 277, 278, 262, 78, 0, 23, 39,
	24, 0, 0, 0, 0, 0, 0, 0, 210, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 179, 0, 181, 0, 0, 239, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 244, 258, 138, 235, 271, 142, 242, 134, 209,
	231, 130, 256, 241, 191, 173, 174, 129, 0, 226,
	152, 165, 149, 207, 0, 0, 148, 274, 0, 266,
	132, 133, 265, 206, 253, 257, 192, 186, 131, 255,
	190, 185, 177, 156, 169, 219, 184, 220, 170, 196,
	195, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 178, 0, 0, 0,
	0, 0, 229, 212, 0, 0, 217, 227, 182, 254,
	221, 259, 245, 267, 0, 222, 124, 246, 151, 193,
	135, 136, 147, 153, 155, 157, 158, 202, 203, 215,
	234, 247, 248, 249, 150, 143, 228, 144, 167, 145,
	125, 236, 146, 126, 216, 252, 0, 164, 224, 189,
	127, 188, 218, 251, 250, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 263, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 172,
	214, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 261, 273, 264, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 198,
	199, 200, 201, 282, 141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 166, 0, 168, 140,
	213, 163, 270, 175, 205, 171, 237, 176, 183, 225,
	269, 211, 230, 139, 260, 238, 187, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 180, 77, 223, 159, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 210, 0, 276, 277, 278,
	262, 0, 0, 0, 0, 154, 0, 0, 0, 179,
	0, 181, 0, 0, 239, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1428, 1431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 244, 258,
	138, 235, 271, 142, 242, 134, 209, 231, 130, 256,
	241, 191, 173, 174, 129, 0, 226, 152, 165, 149,
	207, 0, 0, 148, 274, 0, 266, 132, 133, 265,
	206, 253, 257, 192, 186, 131, 255, 190, 185, 177,
	156, 169, 219, 184, 220, 170, 196, 195, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1432, 268, 0, 0, 0, 1425, 0, 1424,
	243, 1426, 1429, 178, 0, 0, 0, 0, 0, 229,
	212, 0, 0, 217, 227, 182, 254, 221, 259, 245,
	267, 0, 222, 124, 246, 151, 193, 135, 136, 147,
	153, 155, 157, 158, 202, 203, 215, 234, 247, 248,
	249, 150, 143, 228, 144, 167, 145, 125, 236, 146,
	126, 216, 252, 1430, 164, 224, 189, 127, 188, 218,
	251, 250, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 263, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 172, 214, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 261, 273, 264, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 198, 199, 200, 201,
	0, 141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 166, 0, 168, 140, 213, 163, 270,
	175, 205, 171, 237, 176, 183, 225, 269, 211, 230,
	139, 260, 238, 187, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 180, 0, 223, 159, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 210, 0, 276, 277, 278, 262, 0, 0,
	0, 0, 154, 375, 0, 0, 179, 0, 181, 0,
	0, 239, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 387, 388, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 244, 258, 138, 235, 271,
	142, 242, 134, 209, 231, 130, 256, 241, 191, 173,
	174, 129, 0, 226, 152, 165, 149, 207, 0, 0,
	148, 274, 391, 266, 132, 390, 265, 206, 253, 257,
	192, 186, 131, 255, 190, 185, 177, 156, 169, 219,
	184, 220, 170, 196, 195, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	178, 0, 0, 0, 0, 0, 229, 212, 0, 0,
	217, 227, 182, 254, 221, 259, 245, 267, 374, 222,
	124, 246, 151, 193, 135, 136, 147, 153, 155, 157,
	158, 202, 203, 215, 234, 247, 248, 249, 150, 143,
	228, 144, 167, 145, 125, 236, 146, 126, 216, 252,
	0, 164, 224, 189, 127, 188, 218, 251, 250, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 263, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 172, 214, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	261, 273, 264, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 377, 198, 199, 200, 201, 0, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	166, 0, 168, 140, 213, 163, 270, 175, 384, 380,
	381, 176, 183, 225, 269, 211, 230, 139, 260, 238,
	382, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 180,
	0, 223, 159, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 78,
	0, 276, 277, 278, 262, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 179, 0, 181, 0, 0,
	239, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 74, 0, 887,
	84, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 244, 258, 138, 235, 271, 142,
	242, 134, 209, 231, 130, 256, 241, 191, 173, 174,
	129, 0, 226, 152, 165, 149, 207, 0, 0, 148,
	274, 0, 266, 132, 133, 265, 206, 253, 257, 192,
	186, 131, 255, 190, 185, 177, 156, 169, 219, 184,
	220, 170, 196, 195, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 178,
	0, 0, 0, 0, 0, 229, 212, 0, 0, 217,
	227, 182, 254, 221, 259, 245, 267, 0, 222, 124,
	246, 151, 193, 135, 136, 147, 153, 155, 157, 158,
	202, 203, 215, 234, 247, 248, 249, 150, 143, 228,
	144, 167, 145, 125, 236, 146, 126, 216, 252, 0,
	164, 224, 189, 127, 188, 218, 251, 250, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	263, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 172, 214, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 261,
	273, 264, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 198, 199, 200, 201, 0, 141, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 166,
	0, 168, 140, 213, 163, 270, 175, 205, 171, 237,
	176, 183, 225, 269, 211, 230, 139, 260, 238, 187,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 0, 180, 77,
	223, 159, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 0, 210,
	276, 277, 278, 262, 807, 0, 0, 0, 0, 154,
	0, 0, 0, 179, 0, 181, 0, 0, 239, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 804,
	805, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 244, 258, 138, 235, 271, 142, 242, 134,
	209, 231, 130, 256, 241, 191, 173, 174, 129, 0,
	226, 152, 165, 149, 207, 0, 0, 148, 274, 0,
	266, 132, 133, 265, 206, 253, 257, 192, 186, 131,
	255, 190, 185, 177, 156, 169, 219, 184, 220, 170,
	196, 195, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 178, 0, 0,
	0, 0, 0, 229, 212, 0, 0, 217, 227, 182,
	254, 221, 259, 245, 267, 0, 222, 124, 246, 151,
	193, 135, 136, 147, 153, 155, 157, 158, 202, 203,
	215, 234, 247, 248, 249, 150, 143, 228, 144, 167,
	145, 125, 236, 146, 126, 216, 252, 0, 164, 224,
	189, 127, 188, 218, 251, 250, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 263, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	172, 214, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 261, 273, 264,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	198, 199, 200, 201, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 166, 0, 168,
	140, 213, 163, 270, 175, 205, 171, 237, 176, 183,
	225, 269, 211, 230, 139, 260, 238, 187, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 180, 0, 223, 159,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 210, 0, 276, 277,
	278, 262, 0, 0, 0, 0, 154, 0, 0, 0,
	179, 0, 181, 0, 0, 239, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 387, 388, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 244,
	258, 138, 235, 271, 142, 242, 134, 209, 231, 130,
	256, 241, 191, 173, 174, 129, 0, 226, 152, 165,
	149, 207, 0, 0, 148, 274, 391, 266, 132, 390,
	265, 206, 253, 257, 192, 186, 131, 255, 190, 185,
	177, 156, 169, 219, 184, 220, 170, 196, 195, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 178, 0, 0, 0, 0, 0,
	229, 212, 0, 0, 217, 227, 182, 254, 221, 259,
	245, 267, 0, 222, 124, 246, 151, 193, 135, 136,
	147, 153, 155, 157, 158, 202, 203, 215, 234, 247,
	248, 249, 150, 143, 228, 144, 167, 145, 125, 236,
	146, 126, 216, 252, 0, 164, 224, 189, 127, 188,
	218, 251, 250, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 263, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 172, 214, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 261, 273, 264, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 198, 199, 200,
	201, 0, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 166, 0, 168, 140, 213, 163,
	270, 175, 384, 380, 381, 176, 183, 225, 269, 211,
	230, 139, 260, 238, 382, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 180, 0, 223, 159, 87, 88, 89,
	90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
	100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 0, 0, 276, 277, 278, 262, 210,
	0, 518, 0, 0, 0, 0, 0, 0, 0, 154,
	519, 0, 0, 179, 0, 181, 0, 0, 239, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 329, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 244, 258, 138, 235, 271, 142, 242, 134,
	209, 231, 130, 256, 241, 191, 173, 174, 129, 0,
	226, 152, 165, 149, 207, 0, 0, 148, 274, 0,
	266, 132, 133, 265, 206, 253, 257, 192, 186, 131,
	255, 190, 185, 177, 156, 169, 219, 184, 220, 170,
	196, 195, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 178, 0, 0,
	0, 0, 0, 229, 212, 0, 0, 217, 227, 182,
	254, 221, 259, 245, 267, 0, 222, 124, 246, 151,
	193, 135, 136, 147, 153, 155, 157, 158, 202, 203,
	215, 234, 247, 248, 249, 150, 143, 228, 144, 167,
	145, 125, 236, 146, 126, 216, 252, 0, 164, 224,
	189, 127, 188, 218, 251, 250, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 263, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	172, 214, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 261, 273, 264,
	0, 0, 0, 272, 0, 0, 0, 0, 520, 0,
	198, 199, 200, 201, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 166, 0, 168,
	140, 213, 163, 270, 175, 205, 171, 237, 176, 183,
	225, 269, 211, 230, 139, 260, 238, 187, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 180, 0, 223, 159,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 0, 0, 276, 277,
	278, 262, 210, 0, 763, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 179, 0, 181, 0,
	0, 239, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 329, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 244, 258, 138, 235, 271,
	142, 242, 134, 209, 231, 130, 256, 241, 191, 173,
	174, 129, 0, 226, 152, 165, 149, 207, 0, 0,
	148, 274, 0, 266, 132, 133, 265, 206, 253, 257,
	192, 186, 131, 255, 190, 185, 177, 156, 169, 219,
	184, 220, 170, 196, 195, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	178, 0, 0, 0, 0, 0, 229, 212, 0, 0,
	217, 227, 182, 254, 221, 259, 245, 267, 0, 222,
	124, 246, 151, 193, 135, 136, 147, 153, 155, 157,
	158, 202, 203, 215, 234, 247, 248, 249, 150, 143,
	228, 144, 167, 145, 125, 236, 146, 126, 216, 252,
	0, 164, 224, 189, 127, 188, 218, 251, 250, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 263, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 172, 214, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	261, 273, 264, 0, 0, 0, 272, 0, 0, 0,
	0, 762, 0, 198, 199, 200, 201, 0, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	166, 0, 168, 140, 213, 163, 270, 175, 205, 171,
	237, 176, 183, 225, 269, 211, 230, 139, 260, 238,
	187, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 180,
	0, 223, 159, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 210,
	0, 276, 277, 278, 262, 0, 0, 0, 0, 154,
	0, 0, 0, 179, 0, 181, 0, 0, 239, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1962, 84, 639,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 244, 258, 138, 235, 271, 142, 242, 134,
	209, 231, 130, 256, 241, 191, 173, 174, 129, 0,
	226, 152, 165, 149, 207, 0, 0, 148, 274, 0,
	266, 132, 133, 265, 206, 253, 257, 192, 186, 131,
	255, 190, 185, 177, 156, 169, 219, 184, 220, 170,
	196, 195, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 178, 0, 0,
	0, 0, 0, 229, 212, 0, 0, 217, 227, 182,
	254, 221, 259, 245, 267, 0, 222, 124, 246, 151,
	193, 135, 136, 147, 153, 155, 157, 158, 202, 203,
	215, 234, 247, 248, 249, 150, 143, 228, 144, 167,
	145, 125, 236, 146, 126, 216, 252, 0, 164, 224,
	189, 127, 188, 218, 251, 250, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 263, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	172, 214, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 261, 273, 264,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	198, 199, 200, 201, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 166, 0, 168,
	140, 213, 163, 270, 175, 205, 171, 237, 176, 183,
	225, 269, 211, 230, 139, 260, 238, 187, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 180, 0, 223, 159,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 210, 0, 276, 277,
	278, 262, 0, 0, 0, 0, 154, 0, 0, 0,
	179, 0, 181, 0, 0, 239, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 715, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 244,
	258, 138, 235, 271, 142, 242, 134, 209, 231, 130,
	256, 241, 191, 173, 174, 129, 0, 226, 152, 165,
	149, 207, 0, 0, 148, 274, 0, 266, 132, 133,
	265, 206, 253, 257, 192, 186, 131, 255, 190, 185,
	177, 156, 169, 219, 184, 220, 170, 196, 195, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 178, 0, 0, 0, 0, 0,
	229, 212, 0, 0, 217, 227, 182, 254, 221, 259,
	245, 267, 0, 222, 124, 246, 151, 193, 135, 136,
	147, 153, 155, 157, 158, 202, 203, 215, 234, 247,
	248, 249, 150, 143, 228, 144, 167, 145, 125, 236,
	146, 126, 216, 252, 0, 164, 224, 189, 127, 188,
	218, 251, 250, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 263, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 172, 214, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 261, 273, 264, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 1388, 198, 199, 200,
	201, 0, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 166, 0, 168, 140, 213, 163,
	270, 175, 205, 171, 237, 176, 183, 225, 269, 211,
	230, 139, 260, 238, 187, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 180, 0, 223, 159, 87, 88, 89,
	90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
	100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 210, 0, 276, 277, 278, 262, 0,
	0, 0, 0, 154, 1124, 0, 0, 179, 0, 181,
	0, 0, 239, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 715, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 244, 258, 138, 235,
	271, 142, 242, 134, 209, 231, 130, 256, 241, 191,
	173, 174, 129, 0, 226, 152, 165, 149, 207, 0,
	0, 148, 274, 0, 266, 132, 133, 265, 206, 253,
	257, 192, 186, 131, 255, 190, 185, 177, 156, 169,
	219, 184, 220, 170, 196, 195, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 178, 0, 0, 0, 0, 0, 229, 212, 0,
	0, 217, 227, 182, 254, 221, 259, 245, 267, 0,
	222, 124, 246, 151, 193, 135, 136, 147, 153, 155,
	157, 158, 202, 203, 215, 234, 247, 248, 249, 150,
	143, 228, 144, 167, 145, 125, 236, 146, 126, 216,
	252, 0, 164, 224, 189, 127, 188, 218, 251, 250,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 263, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 172, 214, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 261, 273, 264, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 198, 199, 200, 201, 0, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 166, 0, 168, 140, 213, 163, 270, 175, 205,
	171, 237, 176, 183, 225, 269, 211, 230, 139, 260,
	238, 187, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 123, 0,
	180, 0, 223, 159, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	210, 0, 276, 277, 278, 262, 0, 0, 0, 0,
	154, 0, 0, 0, 179, 0, 181, 0, 0, 239,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	639, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 244, 258, 138, 235, 271, 142, 242,
	134, 209, 231, 130, 256, 241, 191, 173, 174, 129,
	0, 226, 152, 165, 149, 207, 0, 0, 148, 274,
	0, 266, 132, 133, 265, 206, 253, 257, 192, 186,
	131, 255, 190, 185, 177, 156, 169, 219, 184, 220,
	170, 196, 195, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 178, 0,
	0, 0, 0, 0, 229, 212, 0, 0, 217, 227,
	182, 254, 221, 259, 245, 267, 0, 222, 124, 246,
	151, 193, 135, 136, 147, 153, 155, 157, 158, 202,
	203, 215, 234, 247, 248, 249, 150, 143, 228, 144,
	167, 145, 125, 236, 146, 126, 216, 252, 0, 164,
	224, 189, 127, 188, 218, 251, 250, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 263,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 172, 214, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 261, 273,
	264, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 198, 199, 200, 201, 0, 141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 166, 0,
	168, 140, 213, 163, 270, 175, 205, 171, 237, 176,
	183, 225, 269, 211, 230, 139, 260, 238, 187, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 0, 180, 0, 223,
	159, 87, 88, 89, 90, 91, 92, 93, 94, 95,
	96, 97, 98, 99, 100, 101, 102, 103, 104, 105,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 210, 0, 276,
	277, 278, 262, 0, 0, 0, 0, 154, 0, 0,
	0, 179, 0, 181, 0, 0, 239, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	244, 258, 138, 235, 271, 142, 242, 134, 209, 231,
	130, 256, 241, 191, 173, 174, 129, 0, 226, 152,
	165, 149, 207, 0, 0, 148, 274, 0, 266, 132,
	133, 265, 206, 253, 257, 192, 186, 131, 255, 190,
	185, 177, 156, 169, 219, 184, 220, 170, 196, 195,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 178, 0, 0, 0, 0,
	0, 229, 212, 0, 0, 217, 227, 182, 254, 221,
	259, 245, 267, 0, 222, 124, 246, 151, 193, 135,
	136, 147, 153, 155, 157, 158, 202, 203, 215, 234,
	247, 248, 249, 150, 143, 228, 144, 167, 145, 125,
	236, 146, 126, 216, 252, 0, 164, 224, 189, 127,
	188, 218, 251, 250, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 263, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 172, 214,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 261, 273, 264, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 198, 199,
	200, 201, 0, 141, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 166, 0, 168, 140, 213,
	163, 270, 175, 205, 171, 237, 176, 183, 225, 269,
	211, 230, 139, 260, 238, 187, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 0, 180, 0, 223, 159, 87, 88,
	89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 210, 0, 276, 277, 278, 262,
	0, 0, 0, 0, 154, 0, 0, 0, 179, 0,
	181, 0, 0, 239, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 715, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 244, 258, 138,
	235, 271, 142, 242, 134, 209, 231, 130, 256, 241,
	191, 173, 174, 129, 0, 226, 152, 165, 149, 207,
	0, 0, 148, 274, 0, 266, 132, 133, 265, 206,
	253, 257, 192, 186, 131, 255, 190, 185, 177, 156,
	169, 219, 184, 220, 170, 196, 195, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 178, 0, 0, 0, 0, 0, 229, 212,
	0, 0, 217, 227, 182, 254, 221, 259, 245, 267,
	0, 222, 124, 246, 151, 193, 135, 136, 147, 153,
	155, 157, 158, 202, 203, 215, 234, 247, 248, 249,
	150, 143, 228, 144, 167, 145, 125, 236, 146, 126,
	216, 252, 0, 164, 224, 189, 127, 188, 218, 251,
	250, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 263, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 172, 214, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 261, 273, 264, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 198, 199, 200, 201, 0,
	141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 166, 0, 168, 140, 213, 163, 270, 175,
	205, 171, 237, 176, 183, 225, 269, 211, 230, 139,
	260, 238, 187, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	0, 180, 0, 223, 159, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 210, 0, 276, 277, 278, 262, 0, 0, 0,
	0, 154, 0, 0, 0, 179, 0, 181, 0, 0,
	239, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 244, 258, 138, 235, 271, 142,
	242, 134, 209, 231, 130, 256, 241, 191, 173, 174,
	129, 0, 226, 152, 165, 149, 207, 0, 0, 148,
	274, 0, 266, 132, 133, 265, 206, 253, 257, 192,
	186, 131, 255, 190, 185, 177, 156, 169, 219, 184,
	220, 170, 196, 195, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 178,
	0, 0, 0, 0, 0, 229, 212, 0, 0, 217,
	227, 182, 254, 221, 259, 245, 267, 0, 222, 124,
	246, 151, 193, 135, 136, 147, 153, 155, 157, 158,
	202, 203, 215, 234, 247, 248, 249, 150, 143, 228,
	144, 167, 145, 125, 236, 146, 126, 216, 252, 0,
	164, 224, 189, 127, 188, 218, 251, 250, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	263, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 172, 214, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 261,
	273, 264, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 198, 199, 200, 201, 0, 141, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 166,
	0, 168, 140, 213, 163, 270, 175, 205, 171, 237,
	176, 183, 225, 269, 211, 230, 139, 260, 238, 187,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 0, 180, 0,
	223, 159, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 210, 0,
	276, 277, 278, 262, 0, 0, 0, 0, 154, 0,
	0, 0, 179, 0, 181, 0, 0, 239, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 244, 258, 138, 235, 271, 142, 242, 134, 209,
	231, 130, 256, 241, 191, 173, 174, 129, 0, 226,
	152, 165, 149, 207, 0, 0, 148, 274, 0, 266,
	132, 133, 265, 206, 253, 257, 192, 186, 131, 255,
	190, 185, 177, 156, 169, 219, 184, 220, 170, 196,
	195, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 178, 0, 0, 0,
	0, 0, 229, 212, 0, 0, 217, 227, 182, 254,
	221, 259, 245, 267, 0, 222, 124, 246, 151, 193,
	135, 136, 147, 153, 155, 157, 158, 202, 203, 215,
	234, 247, 248, 249, 150, 143, 228, 144, 167, 145,
	125, 236, 146, 126, 216, 252, 0, 164, 224, 189,
	127, 188, 218, 251, 250, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 263, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 172,
	214, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 261, 273, 264, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 198,
	199, 200, 201, 0, 141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 166, 0, 168, 140,
	213, 163, 270, 175, 205, 171, 237, 176, 183, 225,
	269, 211, 230, 139, 260, 238, 187, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 180, 0, 223, 159, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 210, 0, 276, 277, 278,
	262, 0, 0, 0, 0, 154, 0, 0, 0, 179,
	0, 181, 0, 0, 239, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 244, 258,
	138, 235, 271, 142, 242, 134, 209, 231, 130, 256,
	241, 191, 173, 174, 129, 0, 226, 152, 165, 149,
	207, 0, 0, 148, 274, 0, 266, 132, 133, 265,
	206, 253, 257, 192, 186, 131, 255, 190, 185, 177,
	156, 169, 219, 184, 220, 170, 196, 195, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 178, 0, 0, 0, 0, 0, 229,
	212, 0, 0, 217, 227, 182, 254, 221, 259, 245,
	267, 0, 222, 124, 246, 151, 193, 135, 136, 147,
	153, 155, 157, 158, 202, 203, 215, 234, 247, 248,
	249, 150, 143, 228, 144, 167, 145, 125, 236, 146,
	126, 216, 252, 0, 164, 224, 189, 127, 188, 218,
	251, 250, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 263, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 172, 214, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 261, 273, 264, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 198, 199, 200, 201,
	0, 141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 166, 0, 168, 140, 213, 163, 270,
	175, 205, 171, 237, 176, 183, 225, 269, 211, 230,
	139, 260, 238, 187, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 180, 0, 223, 159, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 210, 0, 276, 277, 278, 262, 0, 0,
	0, 0, 154, 0, 0, 0, 179, 0, 181, 0,
	0, 239, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 329, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 244, 258, 138, 235, 271,
	142, 242, 134, 209, 231, 130, 256, 241, 191, 173,
	174, 129, 0, 226, 152, 165, 149, 207, 0, 0,
	148, 274, 0, 266, 132, 133, 265, 206, 253, 257,
	192, 186, 131, 255, 190, 185, 177, 156, 169, 219,
	184, 220, 170, 196, 195, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	178, 0, 0, 0, 0, 0, 229, 212, 0, 0,
	217, 227, 182, 254, 221, 259, 245, 267, 0, 222,
	124, 246, 151, 193, 135, 136, 147, 153, 155, 157,
	158, 202, 203, 215, 234, 247, 248, 249, 150, 143,
	228, 144, 167, 145, 125, 236, 146, 126, 216, 252,
	0, 164, 224, 189, 127, 188, 218, 251, 250, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 263, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 172, 214, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	261, 273, 264, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 198, 199, 200, 201, 0, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	166, 0, 168, 140, 213, 163, 270, 175, 205, 171,
	237, 176, 183, 225, 269, 211, 230, 139, 260, 238,
	187, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 180,
	0, 223, 159, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 210,
	0, 276, 277, 278, 262, 0, 0, 0, 0, 154,
	0, 0, 0, 179, 0, 181, 0, 0, 239, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 715, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 244, 258, 138, 235, 271, 142, 242, 134,
	209, 231, 130, 256, 241, 191, 173, 174, 129, 0,
	226, 152, 165, 149, 207, 0, 0, 148, 274, 0,
	266, 132, 133, 265, 206, 253, 257, 192, 186, 131,
	255, 190, 185, 177, 156, 169, 219, 184, 220, 170,
	196, 195, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 178, 0, 0,
	0, 0, 0, 229, 212, 0, 0, 217, 227, 182,
	254, 221, 259, 245, 267, 0, 222, 124, 246, 151,
	193, 135, 136, 147, 153, 155, 157, 158, 202, 203,
	215, 234, 247, 248, 249, 150, 143, 228, 144, 167,
	145, 125, 236, 146, 126, 216, 252, 0, 164, 224,
	189, 127, 188, 218, 251, 250, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 263, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	172, 214, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 261, 273, 753,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	198, 199, 200, 201, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 166, 0, 168,
	140, 213, 163, 270, 175, 205, 171, 237, 176, 183,
	225, 269, 211, 230, 139, 260, 238, 187, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 180, 0, 223, 159,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 210, 0, 276, 277,
	278, 262, 0, 0, 0, 0, 154, 0, 0, 0,
	179, 0, 181, 0, 0, 239, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 244,
	258, 138, 235, 271, 142, 242, 134, 209, 231, 130,
	256, 241, 191, 173, 174, 129, 0, 226, 152, 165,
	149, 207, 0, 0, 148, 274, 0, 266, 132, 133,
	265, 206, 253, 257, 192, 186, 131, 255, 190, 185,
	177, 156, 169, 219, 184, 220, 170, 196, 195, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 178, 0, 0, 0, 0, 0,
	229, 212, 0, 0, 217, 227, 182, 254, 221, 259,
	245, 267, 0, 222, 124, 246, 151, 193, 135, 136,
	147, 153, 155, 157, 158, 202, 203, 215, 234, 247,
	248, 249, 150, 143, 228, 144, 167, 145, 125, 236,
	146, 126, 216, 252, 0, 164, 224, 189, 127, 188,
	218, 251, 250, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 263, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 172, 214, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 261, 273, 264, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 198, 199, 200,
	201, 0, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 166, 0, 168, 140, 213, 163,
	270, 175, 205, 171, 237, 176, 183, 225, 269, 211,
	230, 139, 260, 238, 187, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 123, 0, 180, 0, 223, 159, 87, 88, 89,
	90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
	100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 210, 0, 276, 277, 278, 262, 0,
	0, 0, 81, 154, 0, 0, 0, 179, 0, 181,
	0, 0, 239, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 244, 258, 138, 235,
	271, 142, 242, 134, 209, 231, 130, 256, 241, 191,
	173, 174, 129, 0, 226, 152, 165, 149, 207, 0,
	0, 148, 274, 0, 266, 132, 133, 265, 206, 253,
	257, 192, 186, 131, 255, 190, 185, 177, 156, 169,
	219, 184, 220, 170, 196, 195, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 178, 0, 0, 0, 0, 0, 229, 212, 0,
	0, 217, 227, 182, 254, 221, 259, 245, 267, 0,
	222, 124, 246, 151, 193, 135, 136, 147, 153, 155,
	157, 158, 202, 203, 215, 234, 247, 248, 249, 150,
	143, 228, 144, 167, 145, 125, 236, 146, 126, 216,
	252, 0, 164, 224, 189, 127, 188, 218, 251, 250,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 263, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 172, 214, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 261, 273, 264, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 198, 199, 200, 201, 0, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 166, 0, 168, 140, 213, 163, 270, 175, 205,
	171, 237, 176, 183, 225, 269, 211, 230, 139, 260,
	238, 187, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 123, 0,
	180, 0, 223, 159, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	210, 0, 276, 277, 278, 262, 0, 0, 0, 0,
	154, 0, 0, 0, 179, 0, 181, 0, 0, 239,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 244, 258, 138, 235, 271, 142, 242,
	134, 209, 231, 130, 256, 241, 191, 173, 174, 129,
	0, 226, 152, 165, 149, 207, 0, 0, 148, 274,
	0, 266, 132, 133, 265, 206, 253, 257, 192, 186,
	131, 255, 190, 185, 177, 156, 169, 219, 184, 220,
	170, 196, 195, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 178, 0,
	0, 0, 0, 0, 229, 212, 0, 0, 217, 227,
	182, 254, 221, 259, 245, 267, 0, 222, 124, 246,
	151, 193, 135, 136, 147, 153, 155, 157, 158, 202,
	203, 215, 234, 247, 248, 249, 150, 143, 228, 144,
	167, 145, 125, 236, 146, 126, 216, 252, 0, 164,
	224, 189, 127, 188, 218, 251, 250, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 263,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 172, 214, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 261, 273,
	264, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 198, 199, 200, 201, 0, 141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 166, 0,
	168, 140, 213, 163, 270, 175, 205, 171, 237, 176,
	183, 225, 269, 211, 230, 139, 260, 238, 187, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 0, 180, 0, 223,
	159, 87, 88, 89, 90, 91, 92, 93, 94, 95,
	96, 97, 98, 99, 100, 101, 102, 103, 104, 105,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 0, 210, 276,
	277, 278, 262, 442, 0, 0, 0, 0, 154, 0,
	0, 0, 179, 0, 181, 0, 0, 239, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 448, 449,
	444, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 244, 258, 138, 235, 271, 142, 242, 134, 209,
	231, 130, 256, 241, 191, 173, 174, 129, 0, 226,
	152, 165, 149, 207, 0, 0, 148, 274, 0, 266,
	132, 133, 265, 206, 253, 257, 192, 186, 131, 255,
	190, 185, 177, 156, 169, 219, 184, 220, 170, 196,
	195, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 178, 0, 0, 0,
	0, 0, 229, 212, 0, 0, 217, 227, 182, 254,
	221, 259, 245, 267, 0, 222, 124, 246, 151, 193,
	135, 136, 147, 153, 155, 157, 158, 202, 203, 215,
	234, 247, 248, 249, 150, 143, 228, 144, 167, 145,
	125, 236, 146, 126, 216, 252, 0, 164, 224, 189,
	127, 188, 218, 251, 250, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 263, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 172,
	214, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 261, 273, 264, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 198,
	199, 200, 201, 0, 141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 166, 0, 168, 140,
	213, 163, 270, 175, 205, 171, 237, 176, 183, 225,
	269, 211, 230, 139, 260, 238, 187, 162, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 179, 0, 181, 0, 0, 239,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 180, 0, 223, 159, 447,
	448, 449, 444, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 277, 278,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 244, 258, 138, 235, 271, 142, 242,
	134, 209, 231, 130, 256, 241, 191, 173, 174, 129,
	0, 226, 152, 165, 149, 207, 0, 0, 148, 274,
	0, 266, 132, 133, 265, 206, 253, 257, 192, 186,
	131, 255, 190, 185, 177, 156, 169, 219, 184, 220,
	170, 196, 195, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 178, 0,
	0, 0, 0, 0, 229, 212, 0, 0, 217, 227,
	182, 254, 221, 259, 245, 267, 0, 222, 124, 246,
	151, 193, 135, 136, 147, 153, 155, 157, 158, 202,
	203, 215, 234, 247, 248, 249, 150, 143, 228, 144,
	167, 145, 125, 236, 146, 126, 216, 252, 0, 164,
	224, 189, 127, 188, 218, 251, 250, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 263,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 172, 214, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 261, 273,
	264, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 198, 199, 200, 201, 0, 141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 166, 0,
	168, 140, 213, 163, 270, 175, 205, 171, 237, 176,
	183, 225, 269, 211, 230, 139, 260, 238, 187, 162,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 179, 0, 181, 0,
	0, 239, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 0, 180, 0, 223,
	159, 447, 448, 449, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	277, 278, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 244, 258, 138, 235, 271,
	142, 242, 134, 209, 231, 130, 256, 241, 191, 173,
	174, 129, 0, 226, 152, 165, 149, 207, 0, 0,
	148, 274, 0, 266, 132, 133, 265, 206, 253, 257,
	192, 186, 131, 255, 190, 185, 177, 156, 169, 219,
	184, 220, 170, 196, 195, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	178, 0, 0, 0, 0, 0, 229, 212, 0, 0,
	217, 227, 182, 254, 221, 259, 245, 267, 0, 222,
	124, 246, 151, 193, 135, 136, 147, 153, 155, 157,
	158, 202, 203, 215, 234, 247, 248, 249, 150, 143,
	228, 144, 167, 145, 125, 236, 146, 126, 216, 252,
	0, 164, 224, 189, 127, 188, 218, 251, 250, 275,
	78, 0, 23, 39, 24, 0, 0, 0, 1656, 161,
	0, 263, 0, 208, 0, 0, 0, 0, 0, 0,
	64, 204, 0, 0, 71, 0, 0, 232, 0, 0,
	0, 0, 1097, 172, 214, 0, 233, 0, 0, 0,
	0, 0, 0, 40, 0, 0, 0, 0, 74, 240,
	261, 273, 264, 0, 0, 0, 272, 2047, 0, 0,
	0, 0, 0, 198, 199, 200, 201, 1638, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	166, 0, 168, 140, 213, 163, 270, 175, 205, 171,
	237, 176, 183, 225, 269, 211, 230, 139, 260, 238,
	187, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 67, 68, 0, 69, 70, 1656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 1656, 180,
	0, 223, 159, 1097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1097, 0, 0, 0, 0, 0, 0, 1723,
	0, 56, 66, 75, 0, 38, 0, 0, 1638, 0,
	0, 276, 277, 278, 262, 0, 0, 0, 1642, 0,
	0, 65, 63, 62, 0, 0, 0, 1638, 0, 1646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 0, 0, 1637, 1639, 1641, 0, 1643, 1644, 1645,
	1647, 1648, 1649, 1651, 1652, 1653, 1654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 48, 0, 0,
	0, 0, 0, 49, 0, 0, 0, 0, 0, 1655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1642,
	0, 0, 0, 0, 0, 0, 1634, 0, 0, 0,
	1646, 0, 0, 0, 0, 0, 0, 0, 1642, 50,
	0, 1650, 0, 0, 0, 0, 0, 1640, 0, 1646,
	1635, 0, 0, 0, 1637, 1639, 1641, 0, 1643, 1644,
	1645, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 0, 1635,
	0, 0, 0, 1637, 1639, 1641, 0, 1643, 1644, 1645,
	1647, 1648, 1649, 1651, 1652, 1653, 1654, 0, 0, 0,
	1657, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 0, 1655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 1634, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1650, 0, 0, 0, 0, 0, 1640,
}

var yyPact = [...]int{
	16484, -1000, -303, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 14715, 1560, -1000, 6350, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 187, 12630,
	15132, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 5915, 5480,
	97, -1000, 1548, -1000, -1000, -1000, 109, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 319, -48, 273, 277, 313,
	313, 7184, 1548, 1311, 144, -3, -1000, 14298, 1501, 16484,
	138, 15132, -1000, 330, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12630,
	15132, -82, 462, -1000, 168, 328, -1000, -1000, -1000, -1000,
	15132, 1316, -1000, -1000, -1000, 1495, 15550, 144, -1000, 1260,
	1212, -1000, -1000, 1410, -1000, 86, -14, -35, 71, -1000,
	-1000, 116, -1000, -1000, -1000, -1000, -1000, 31, -1000, -21,
	-1000, -28, -1000, -1000, -1000, -122, -1000, -1000, -1000, -1000,
	-1000, 1160, 305, 1424, -167, 1485, 1502, 1311, 1538, 1515,
	158, 158, 176, 158, 183, -1000, -1000, -1000, -1000, -1000,
	-1000, 453, 115, -1000, -1000, -135, -127, 365, -127, -4,
	-1000, -1000, -1000, -1000, -1000, -1000, 160, -1000, -186, -1000,
	260, -1000, 250, -1000, 8871, 112, 1259, 530, -1000, 372,
	15132, 15132, 15132, 372, 719, 612, 327, -1000, -1000, -1000,
	1468, 1472, 1502, 1311, -1000, 1548, 1548, 1114, 1057, 160,
	160, 160, 160, 160, 1257, 15132, -1000, 1336, 4191, -1000,
	-1000, -1000, -1000, -1000, 164, 1409, -1000, 15132, 1359, -1000,
	326, 764, 921, -1000, 15132, 1393, 15132, 12630, 12630, 12630,
	12630, -1000, 1448, 1443, -1000, 1436, 1435, 1444, 15132, -1000,
	-1000, -1000, 15892, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1102, 1548, 89, 5563, 11796, 13464, 15132, 11796, -1000, -1000,
	-1000, -1000, -1000, -129, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 89, 11796, 11796, -93, -1000, -1000,
	-290, 1485, 4618, -1000, -1000, 4618, -1000, -1000, 11796, 493,
	13464, 774, 15132, 158, 15132, -1000, -1000, 365, 365, -1000,
	453, 453, -1000, -1000, -133, 1549, 5045, -131, 15132, 158,
	13881, 1491, -160, 264, 257, 263, -1000, -1000, -174, -1000,
	-1000, 1221, 9294, 8448, 192, 11796, 2910, -1000, -1000, 372,
	372, 372, 2910, 300, -1000, -1000, -1000, -1000, -1000, -1000,
	15132, -1000, -1000, 1485, -1000, -1000, -1000, 1502, 1485, 1502,
	-1000, -1000, 11796, 13464, 15132, 15132, 16234, 15132, 1257, 1494,
	15132, 1195, -1000, -1000, 8031, 321, 4618, 957, 1391, -1000,
	1390, 1389, 1387, 1386, 1385, 1384, 1382, 1363, 1380, 1379,
	1378, -1000, -1000, -1000, 1377, -1000, -1000, 1376, 1363, 1374,
	1373, 1372, -1000, -1000, -1000, 1551, -1000, -1000, -1000, -1000,
	2483, 5045, 5045, 5045, 5045, -1000, -1000, 1370, 4618, 1369,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 573, -1000, 1367, 1366, 1364, 1363, 1360,
	920, 918, 917, 1343, 1341, 1340, 5045, 1338, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -287, -1000, 7613, 15132, 15132, -1000, 1541, 4618,
	2060, -1000, 152, 318, 15132, 1229, -1000, 427, 1414, 1422,
	1414, -1000, -1000, -1000, -1000, 1442, -1000, 1437, -1000, -1000,
	1336, -1000, -1000, 425, -1000, -1000, -1000, -1000, -1000, -21,
	-28, 1197, -1000, -56, 79, -1000, -1000, 1247, -1000, -1000,
	-1000, 425, 1197, 178, 916, 911, -1000, 704, 316, 1251,
	-1000, 714, 184, 1490, 1221, 1415, 1475, 15132, 1549, 1549,
	1549, 365, 16234, 453, 15132, 453, -1000, -1000, 453, -1000,
	314, 15132, 184, 1333, -1000, -1000, -1000, 265, 248, 255,
	13464, 175, -1000, -1000, 1221, -1000, -1000, -1000, 1332, 416,
	-1000, -1000, 5045, -1000, 608, -1000, 2910, 2910, 2910, -1000,
	10545, -1000, -1000, 1485, -1000, 1485, 1197, 1221, 1421, 1250,
	-1000, -1000, -1000, -1000, -1000, 1331, 1243, -1000, 1549, 4191,
	-1000, 12630, -1000, 4618, 4618, 4618, -1000, 15132, 13047, -1000,
	503, 5045, -1000, -1000, -1000, -1000, -1000, -1000, 4618, 1511,
	1511, 1511, 4618, 431, 4618, 4618, -1000, 635, 2197, 1511,
	1511, 1511, 1511, -1000, 1511, 1511, 1511, 5045, 5045, 5045,
	5045, 5045, 5045, 5045, 5045, 5045, 5045, 5045, 5045, 1326,
	528, 5045, 5045, 5045, 1057, 1193, 1239, -1000, -1000, -1000,
	-1000, -1000, 483, 608, 4618, -1000, 2197, 4618, 4618, -1000,
	1096, -1000, -1000, 4618, -1000, -1000, -1000, 4618, 5045, 4618,
	-1000, 1511, 1133, -1000, 1330, -1000, 1241, 1463, -1000, 307,
	1223, -1000, 386, 1236, -1000, 1502, 608, -1000, 303, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -86,
	-1000, 15132, 1233, 1541, 15132, 4618, -1000, -1000, 4618, 1329,
	-1000, 4618, -1000, -1000, -1000, -1000, 1557, 302, 301, 11796,
	-1000, 143, 11796, -1000, -1000, 15132, 171, 11796, -16, -145,
	4618, 4618, 15132, 4618, -1000, -1000, -1000, -230, -1000, -67,
	-1000, 1420, 26, -1000, 1475, -1000, 456, -1000, 1328, -1000,
	-1000, -1000, 1549, -1000, 365, -1000, 365, 453, 15132, -1000,
	-1000, -230, 1087, -1000, -1000, -1000, 244, 1221, 11796, 848,
	192, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15132, 15132,
	16484, -1000, 15132, 1547, -1000, 1214, 1368, -1000, 499, 510,
	-1000, 297, -1000, -1000, 551, -1000, 1085, 1128, 608, 4618,
	-1000, -1000, 4618, 4618, 819, 4618, 1075, 1231, 1227, -1000,
	1072, -1000, 1556, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4618, 4618, 4618, 4618, 4618, 4618, 4618, 600,
	811, -1000, 915, 915, 312, 312, 312, 312, 312, 981,
	981, -1000, -1000, -1000, 2483, 1326, 5045, 5045, 5045, 147,
	933, 1799, -1000, 4618, 508, -1000, 4618, 671, -1000, 1058,
	638, 1049, -1000, 1004, 1023, 2754, 1021, 4618, -287, 3764,
	146, 15132, -287, 15132, 15132, 3764, -1000, 15132, -1000, 2060,
	763, -1000, -1000, 1502, -1000, 608, 608, 15132, 608, 11796,
	347, 396, -1000, 10128, 11796, -1000, -1000, 11796, 94, 1484,
	-1000, -1000, -111, -100, 608, 608, 292, -1000, -1000, -85,
	-1000, -1000, -1000, 174, -1000, 910, 909, 883, 881, 15132,
	-1000, -1000, -1000, -1000, -1000, 382, 382, 382, 1468, 6767,
	-1000, 1549, 1549, 365, -1000, -18, -58, -1000, 1197, 1015,
	-1000, -1000, -1000, -1000, 1013, -1000, 1543, 1536, 12630, 12213,
	-1000, -1000, 4618, 1175, 1140, 1134, 195, 1225, -1000, -1000,
	-1000, -1000, 4618, 1125, 1119, 1100, 1084, 1071, 1066, 1059,
	1219, -1000, 147, 933, 1747, -1000, 5045, 5045, 1056, 479,
	-1000, 4618, 655, 195, 343, -1000, 4618, -1000, -1000, 343,
	-1000, 5045, -1000, 1046, -1000, 1007, 1204, -1000, -287, -1000,
	-1000, 1133, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1206, 1197, -1000, -1000, -1000, -1000, 11796, 1497,
	184, -1000, -19, 182, -294, -95, 1535, 1533, 15132, -85,
	-1000, 760, 758, 740, 739, -55, -1000, -1000, -1000, -1000,
	-1000, 1325, 343, -1000, 672, 877, 1005, 1136, -1000, -1000,
	-1000, 857, 552, -1000, 15132, 526, 275, 158, 275, 524,
	1324, -1000, -1000, -1000, -1000, 1549, -1000, -18, -1000, 262,
	245, 17, 1532, -1000, -1000, -1000, 4618, 4618, 1368, -1000,
	-1000, 608, -1000, -1000, -1000, 998, -1000, 1312, 1315, -1000,
	1312, 1312, 1312, 241, 241, 1320, 1320, 1321, 1320, -1000,
	1038, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	5045, -1000, -1000, -1000, -1000, 608, 4618, 972, 954, 618,
	952, 1709, -1000, -1000, 3764, 1133, -1000, -1000, 11796, 11796,
	-231, -22, 15132, -296, 866, -1000, 1531, 851, 697, -1000,
	-1000, -1000, -1000, -1000, -1000, 11379, -1000, -1000, -1000, -1000,
	-1000, -1000, 16623, 6767, 692, -43, -1000, -1000, -1000, 1312,
	-1000, 1315, 1312, 1312, 1312, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1314, 1313, -1000, 1312, 1312, 1312,
	1312, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15132, 15132,
	-1000, 15132, 15132, 158, 4618, -1000, -1000, -1000, -1000, 738,
	-1000, -1000, -1000, 848, 608, 1128, -1000, -1000, -1000, 734,
	-1000, 732, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	731, -1000, -1000, 726, -1000, -1000, -1000, 608, -1000, -1000,
	-1000, 4618, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -131,
	-298, 720, -1000, 845, -98, -1000, -1000, 1201, -1000, 1312,
	4618, 132, 16604, -1000, 382, 382, 293, 382, 382, 382,
	382, 95, 93, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 1300, -1000, -1000,
	692, -1000, -1000, 538, 5045, -1000, -1000, 832, 672, 296,
	325, 1297, -1000, 68, 522, 519, -1000, 15132, -1000, -46,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 829, 829, -1000,
	-1000, -1000, -1000, 1296, 1318, 39, 1294, -1000, 1293, 1291,
	15132, 1028, 4, -1000, -1000, 944, 931, 1191, 1184, 1002,
	-112, -104, -1000, 1290, -1000, -1000, 1530, -1000, 11379, 1483,
	850, -1000, 1528, 16623, -1000, 710, 709, 382, 382, 706,
	828, 826, 825, 382, 382, 702, 818, 15892, 693, 679,
	678, 724, 817, 409, 707, 649, 634, 15132, 1289, 787,
	-1000, -1000, 933, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 660, 1288, -1000, -1000, 1286, -1000,
	-1000, 1172, -1000, 1170, 11379, 15, 15, 11379, 11379, 11379,
	1285, 227, -1000, -1000, -1000, -1000, 619, -1000, 615, -1000,
	165, -103, -104, -1000, 1527, -99, 1526, 1524, 15132, 697,
	87, -1000, -1000, 1483, 61, -1000, -1000, -1000, 343, 343,
	-1000, -1000, -1000, -1000, 816, 814, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 105, 15132,
	1166, -1000, 384, 926, 4618, -224, 11379, -1000, 810, -1000,
	1153, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1146, 1131,
	1113, 11379, -1000, -1000, -1000, 66, 827, 815, 1276, 593,
	-95, 1523, -1000, 697, 1522, 697, 697, 1111, -1000, -1000,
	-1000, 382, 808, 27, -1000, -1000, -1000, 49, 159, 142,
	-1000, 218, -1000, -1000, -1000, -1000, -1000, -1000, 102, 1105,
	-1000, 787, 781, -1000, 823, 1419, -1000, -29, 1099, -1000,
	-1000, -1000, -1000, -1000, 1092, -1000, -1000, -1000, 1467, 9711,
	-113, -1000, 778, -1000, 697, -1000, -1000, -1000, 15132, 574,
	-1000, 774, 45, 571, 5045, 1275, 5045, 1272, 56, 1271,
	-1000, -1000, -1000, -1000, -1000, 227, -1000, -1000, 1417, 1371,
	1555, -1000, -1000, -1000, -1000, 87, 87, 87, 87, -24,
	-1000, 15132, -1000, 1055, -1000, -1000, -1000, 286, -1000, -1000,
	-1000, -1000, -1000, -1000, 1268, 1521, -1000, 1349, 15132, 856,
	15132, 1267, 378, 5045, -1000, -1000, 1566, -1000, 1552, 294,
	294, -1000, 1118, -1000, 376, -1000, 10962, 15132, -1000, 126,
	53, -1000, 1048, -1000, 1044, 15132, 570, 844, -1000, -1000,
	-1000, 583, 72, -1000, 15132, 3337, -1000, 285, 1041, -1000,
	777, 42, -1000, -1000, 1019, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 608, 15132, -1000, 126, 1462, -1000, 567, -1000,
	-1000, -1000, 16493, 123, -1000, -1000, 16493, 44, -1000, 120,
	-1000, -1000, 1012, -1000, 663, 1264, -1000, 44, 16623, 4618,
	-1000, 16623, 1010, -1000,
}

var yyPgo = [...]int{
	0, 93, 1893, 1892, 129, 128, 1891, 1889, 1888, 1887,
	1886, 1885, 1883, 1881, 1880, 1878, 1877, 1876, 1874, 1873,
	1872, 1871, 1870, 1868, 1867, 1866, 1865, 1864, 1863, 1861,
	1860, 1846, 127, 1845, 1844, 1841, 1839, 1838, 1837, 147,
	1836, 1835, 1833, 1832, 1831, 1830, 1829, 1828, 1826, 107,
	87, 89, 605, 112, 175, 1825, 110, 1823, 79, 157,
	1805, 1804, 30, 101, 1802, 122, 111, 83, 132, 91,
	80, 121, 1801, 1800, 1798, 130, 1797, 1796, 1795, 1794,
	53, 1791, 67, 42, 29, 1790, 75, 1789, 1788, 1785,
	1784, 1783, 70, 1782, 62, 57, 1777, 1776, 1774, 1772,
	1771, 33, 1770, 47, 1769, 1768, 1767, 1766, 1764, 1763,
	1762, 16, 17, 19, 1761, 1760, 15, 2, 1759, 1757,
	74, 1756, 1755, 1754, 167, 1752, 1751, 1749, 145, 1747,
	103, 1746, 1745, 1744, 1743, 9, 1742, 38, 1741, 1740,
	1739, 45, 1738, 1736, 85, 43, 58, 84, 1735, 1734,
	1733, 125, 20, 59, 0, 123, 35, 1732, 116, 120,
	1731, 77, 188, 102, 37, 1730, 56, 63, 1729, 1728,
	1725, 60, 11, 1724, 90, 1723, 39, 76, 1722, 92,
	1721, 106, 1, 97, 1700, 126, 1695, 1692, 100, 1691,
	1690, 52, 99, 1688, 1687, 1686, 28, 1685, 34, 23,
	1684, 119, 135, 1683, 1681, 1680, 104, 81, 71, 1679,
	1677, 68, 1675, 95, 69, 98, 1673, 683, 1672, 96,
	54, 18, 1671, 133, 1669, 241, 136, 117, 1668, 1667,
	140, 1479, 134, 1666, 115, 10, 1665, 1664, 12, 1647,
	25, 1646, 1644, 1643, 1642, 6, 1641, 1640, 1639, 3,
	5, 1638, 4, 94, 1637, 44, 48, 51, 61, 1636,
	1633, 1631, 1630, 1629, 214, 1628, 1627, 1625, 1624, 1623,
	1622, 1620, 73, 1617, 1616, 1615, 1613, 55, 1612, 1611,
	1610, 1609, 1608, 31, 1607, 1605, 22, 1604, 26, 1603,
	1602, 1601, 13, 1600, 1599, 14, 1598, 1597, 7, 8,
	1596, 1591, 46, 36, 32, 65, 64, 1590, 21, 1589,
	86, 1588, 1587, 105, 1586, 88, 1585, 1583, 131, 153,
	1582, 1576, 118, 1566,
}

//line mysql_sql.y:6186
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 320, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 47, 301, 301, 300, 300, 299, 299, 298, 298,
	298, 297, 297, 297, 296, 296, 295, 295, 293, 293,
	294, 292, 291, 291, 289, 289, 287, 287, 288, 288,
	282, 282, 285, 285, 283, 283, 283, 283, 286, 281,
	281, 281, 280, 280, 46, 46, 46, 220, 220, 45,
	45, 234, 234, 234, 234, 234, 232, 232, 232, 232,
	231, 231, 230, 230, 235, 235, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 40,
	40, 40, 40, 43, 44, 228, 228, 228, 228, 228,
	229, 229, 229, 41, 42, 42, 219, 219, 224, 224,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 218, 218, 227, 227, 227, 226, 226, 225, 225,
	34, 34, 34, 37, 36, 217, 217, 217, 217, 217,
	217, 217, 217, 35, 35, 35, 35, 35, 35, 33,
	33, 32, 216, 216, 215, 39, 39, 39, 39, 38,
	38, 38, 38, 38, 38, 38, 157, 157, 157, 48,
	7, 31, 31, 264, 264, 168, 168, 169, 169, 167,
	167, 167, 167, 167, 167, 267, 268, 164, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 30, 321,
	321, 321, 28, 29, 263, 263, 263, 27, 26, 25,
	24, 24, 23, 22, 22, 161, 161, 163, 163, 159,
	322, 322, 240, 240, 162, 162, 21, 21, 160, 160,
	142, 158, 158, 158, 6, 8, 8, 8, 8, 8,
	13, 12, 11, 10, 9, 5, 4, 271, 271, 271,
	271, 271, 271, 309, 309, 309, 310, 74, 74, 69,
	69, 272, 272, 183, 311, 311, 279, 279, 278, 278,
	277, 277, 72, 72, 73, 73, 61, 61, 49, 49,
	284, 284, 284, 284, 290, 290, 261, 261, 108, 108,
	138, 138, 139, 139, 50, 50, 51, 51, 51, 51,
	51, 51, 317, 317, 319, 319, 318, 71, 71, 67,
	67, 68, 68, 68, 66, 66, 65, 64, 64, 63,
	62, 62, 62, 53, 53, 52, 52, 52, 52, 52,
	124, 124, 124, 54, 265, 265, 265, 270, 270, 121,
	121, 122, 122, 120, 120, 55, 55, 56, 56, 56,
	56, 119, 119, 118, 57, 57, 58, 58, 60, 60,
	60, 60, 129, 129, 128, 128, 128, 128, 77, 77,
	127, 126, 126, 126, 76, 76, 75, 75, 70, 70,
	59, 59, 125, 323, 323, 123, 150, 150, 150, 156,
	156, 149, 149, 149, 155, 155, 151, 151, 152, 152,
	152, 3, 3, 3, 16, 16, 16, 14, 213, 213,
	212, 212, 214, 214, 214, 214, 208, 208, 209, 209,
	209, 209, 210, 210, 210, 211, 211, 211, 211, 207,
	207, 206, 204, 204, 204, 205, 205, 205, 205, 205,
	205, 153, 153, 15, 201, 201, 202, 202, 202, 203,
	203, 195, 195, 195, 195, 19, 199, 199, 200, 200,
	200, 200, 200, 196, 196, 198, 198, 194, 194, 194,
	194, 194, 18, 193, 193, 191, 191, 189, 189, 190,
	190, 188, 188, 188, 192, 192, 17, 266, 266, 236,
	236, 239, 239, 246, 246, 247, 247, 245, 245, 252,
	252, 251, 251, 250, 250, 249, 249, 248, 248, 243,
	243, 242, 242, 237, 237, 237, 237, 237, 238, 238,
	241, 241, 244, 244, 99, 99, 100, 100, 100, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 307, 307,
	308, 102, 102, 102, 106, 106, 106, 106, 106, 106,
	101, 101, 101, 103, 103, 103, 84, 84, 83, 83,
	78, 78, 79, 79, 80, 80, 81, 81, 82, 82,
	82, 82, 82, 82, 222, 222, 305, 305, 306, 306,
	302, 302, 302, 304, 304, 304, 304, 304, 303, 303,
	85, 136, 136, 136, 154, 154, 154, 135, 135, 135,
	98, 98, 97, 97, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 221, 221, 165,
	165, 166, 166, 116, 114, 114, 115, 115, 115, 115,
	112, 113, 111, 111, 111, 111, 111, 110, 110, 109,
	109, 109, 197, 197, 107, 107, 105, 105, 105, 104,
	104, 104, 253, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 175, 175, 180, 180,
	316, 316, 315, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 94, 94, 94, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	276, 276, 276, 131, 131, 131, 131, 131, 312, 312,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 133,
	133, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 184, 184, 185, 185, 273, 273, 273,
	273, 273, 273, 274, 274, 275, 275, 275, 275, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 173, 173, 130,
	130, 130, 186, 181, 181, 182, 182, 176, 176, 176,
	176, 176, 178, 178, 178, 178, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 177, 177, 179, 179, 187,
	187, 187, 187, 187, 187, 96, 96, 96, 96, 254,
	170, 170, 170, 170, 170, 170, 170, 87, 87, 87,
	87, 91, 91, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 92, 92, 92,
	92, 90, 90, 90, 90, 90, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 89, 137, 137, 255, 255, 256, 256, 257, 258,
	258, 258, 259, 259, 259, 260, 260, 260, 262, 262,
	141, 141, 141, 146, 146, 140, 140, 147, 147, 148,
	148, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 14, 0, 2, 1, 3, 3, 3, 1, 3,
	5, 0, 2, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 2, 1, 2, 3, 4, 3, 3, 1, 0,
	1, 1, 0, 1, 9, 4, 7, 0, 3, 7,
	4, 1, 3, 3, 3, 1, 0, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 6, 3, 1, 1, 1, 1,
	1, 1, 1, 2, 4, 6, 1, 4, 1, 3,
	3, 4, 4, 4, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 2, 0, 4, 2, 4, 1,
	5, 3, 2, 1, 2, 2, 4, 4, 5, 2,
	1, 7, 1, 3, 3, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 5, 3, 1, 1, 1, 6,
	1, 7, 9, 0, 2, 0, 1, 1, 2, 2,
	2, 1, 4, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 1,
	1, 1, 5, 5, 0, 1, 1, 2, 2, 3,
	6, 7, 4, 7, 8, 0, 2, 0, 2, 2,
	1, 1, 1, 1, 0, 1, 4, 5, 1, 3,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 4, 4, 6, 4, 2, 1, 5,
	4, 4, 2, 0, 1, 3, 3, 1, 3, 1,
	3, 1, 3, 4, 0, 1, 0, 1, 1, 3,
	1, 1, 0, 4, 1, 3, 2, 1, 0, 8,
	0, 4, 7, 4, 0, 2, 0, 2, 0, 2,
	0, 4, 1, 3, 1, 1, 4, 3, 4, 5,
	4, 5, 2, 3, 1, 3, 6, 0, 3, 0,
	1, 2, 4, 4, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 7, 0, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 4, 4,
	4, 3, 2, 2, 2, 3, 2, 3, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 4, 3, 0, 1, 2, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 2, 2,
	2, 2, 1, 3, 2, 2, 2, 2, 2, 1,
	3, 2, 1, 3, 2, 0, 3, 3, 5, 5,
	4, 1, 1, 4, 1, 3, 1, 3, 2, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 5, 1, 1, 0, 3, 0, 1, 1,
	2, 4, 4, 4, 0, 1, 10, 0, 1, 0,
	6, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 6, 0,
	2, 0, 2, 4, 5, 4, 5, 1, 6, 5,
	0, 3, 0, 1, 0, 1, 1, 3, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 4, 1, 3,
	3, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 1, 7, 7,
	7, 7, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 0, 1,
	3, 1, 3, 5, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 1, 5, 6, 1, 2, 0,
	1, 1, 2, 5, 0, 1, 1, 1, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	2, 2, 0, 3, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 3,
	5, 2, 2, 2, 2, 1, 1, 2, 5, 6,
	6, 6, 1, 1, 1, 1, 0, 2, 0, 1,
	1, 2, 4, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 5, 4, 4, 5, 5,
	5, 5, 4, 5, 5, 5, 5, 5, 5, 5,
	1, 1, 1, 4, 4, 6, 8, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 4, 2, 2, 4, 6, 2, 2, 2, 4,
	6, 4, 2, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 0,
	1, 1, 3, 0, 1, 1, 3, 3, 3, 3,
	2, 1, 3, 4, 3, 1, 3, 4, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 1, 3, 0, 1, 0, 3, 3, 0,
	3, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -320, -2, -1, -3, -4, -5, -6, -38, -20,
	-7, -48, -32, -33, -34, -40, -45, -46, -47, -50,
	-16, -15, -14, 8, 10, -8, -157, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, 181, 9,
	49, -35, -36, -37, -41, -42, -43, -44, 283, 289,
	325, -51, -53, -17, -18, -19, 177, -9, -10, -11,
	-12, -13, 199, 198, 26, 197, 178, 120, 121, 123,
	124, 30, -52, -317, 54, 179, -54, 396, 6, 441,
	-61, 27, -83, -154, 57, -143, -145, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 393, 216, 240, 243, 250, 120, 137,
	131, 158, 150, 151, 128, 220, 221, 64, 123, 353,
	339, 324, 126, 235, 237, 239, 242, 222, 146, 142,
	234, 218, 140, 223, 28, 224, 163, 225, 226, 398,
	335, 265, 357, 341, 247, 141, 336, 238, 338, 164,
	168, 345, 289, 135, 136, 343, 347, 162, 196, 32,
	395, 34, 208, 348, 166, 161, 157, 356, 251, 249,
	160, 134, 156, 219, 38, 170, 169, 171, 319, 320,
	321, 322, 227, 228, 277, 344, 153, 143, 269, 129,
	18, 351, 203, 340, 290, 229, 244, 206, 252, 165,
	167, 210, 215, 397, 248, 349, 139, 207, 236, 202,
	352, 130, 283, 292, 230, 124, 241, 346, 355, 37,
	305, 133, 127, 193, 121, 212, 217, 231, 232, 233,
	254, 253, 245, 154, 209, 159, 132, 155, 122, 211,
	354, 306, 440, 267, 308, 152, 149, 213, 186, 350,
	342, 125, 312, 307, 147, 255, 437, 438, 439, 11,
	-158, 19, 323, -39, 181, -154, -5, -4, -32, -50,
	184, -58, -59, -60, -123, -125, -83, 54, -154, -231,
	-201, -230, -202, -233, -203, -153, 20, 178, 177, 211,
	10, 179, 287, 185, 8, 6, 288, 197, 9, 289,
	291, 292, 295, 296, 297, 31, 300, 301, 57, 60,
	-154, -231, -201, 215, 222, -65, -66, -124, 15, 5,
	308, 214, -195, -193, -266, 194, 193, 76, 359, 183,
	298, -321, -263, 342, 341, -162, 340, 333, 335, 177,
	185, 343, 32, 345, 346, 336, 308, 125, 122, -217,
	80, 130, 129, -217, 214, 29, -224, 318, -223, -225,
	345, 346, 356, -218, 344, -141, -154, 58, 59, 75,
	151, 148, -66, -124, -65, -52, -53, -51, -53, 308,
	214, 185, 184, 359, -319, 391, -318, -154, -265, 20,
	-270, 21, 22, -1, -72, 206, -83, 119, -58, -135,
	-154, 324, 89, -39, 119, -83, 30, -126, -127, -128,
	-129, 41, 45, 47, 42, 43, 44, 48, -323, 23,
	-150, -156, 23, -151, 60, -152, -145, 57, 58, 59,
	-51, -53, 51, 55, 11, 55, 54, 442, 58, 285,
	299, 308, 286, 298, 186, 214, 299, 214, 333, 186,
	290, 293, 294, 334, 51, 187, 51, -280, 356, -49,
	27, -68, 17, -54, -53, 16, 20, 21, -191, 189,
	-191, 185, -191, 184, -322, 11, 99, 213, 212, 337,
	334, -240, 338, 339, -162, -161, 97, -162, 184, 359,
	-264, 189, 349, 396, 128, 129, 130, -228, 20, 29,
	317, -201, 214, 55, 89, 19, -226, 89, 100, -225,
	-225, -225, -226, -101, 29, -152, 60, 116, -101, 29,
	119, 30, 30, -67, -68, -54, -53, -66, -65, -66,
	56, 56, -264, -264, -264, -264, -264, 55, -319, -71,
	54, -55, -56, 107, -176, -154, 81, -178, 57, -171,
	400, 401, 402, 403, 404, 405, 406, 408, 411, 413,
	415, 419, 420, 421, 422, 424, 425, 426, 427, 432,
	433, 434, 277, 308, 147, -172, -174, -298, -293, -170,
	54, 105, 106, 113, 82, -173, -253, 24, 84, 367,
	-131, -132, -133, -134, -294, -292, 60, 65, 69, 71,
	72, 70, 67, 118, -53, -312, -269, -275, -273, 148,
	200, 144, 145, 8, 111, 318, 116, -276, 59, 58,
	271, 75, 272, 273, 359, 268, 274, 189, 323, 43,
	275, 276, 278, 279, 366, 280, 44, 281, 270, 204,
	282, 370, 369, 371, 363, 360, 358, 361, 362, 364,
	365, -271, 33, -50, 54, 30, 54, -154, -120, 12,
	119, 65, 60, -154, 54, -216, -215, -135, -59, -59,
	-59, -59, 41, 41, 41, 46, 41, 46, 41, -128,
	-154, -156, 56, -232, 184, 284, 210, -230, 211, 289,
	292, -207, -206, -204, -153, 60, -202, -235, -135, -153,
	334, -232, -207, -206, 326, 436, -49, -176, -154, -64,
	-63, -176, -207, 81, -201, -152, -154, -191, -83, -161,
	-161, -163, -322, -159, -322, 334, -120, -174, -240, -160,
	-154, -191, -207, 308, 24, 350, 351, 126, 129, 128,
	357, -229, 317, 20, -201, -223, -219, 60, 318, -206,
	-227, 51, 116, -277, -176, 29, -226, -226, -226, -227,
	115, -154, -49, -67, -49, -68, -207, -201, -154, -84,
	-83, -155, -152, -145, -318, 23, -70, -154, -119, 55,
	-118, 11, -149, 80, 78, 79, -154, 23, 119, -176,
	96, -187, 89, 90, 91, 92, 93, 94, 54, 54,
	54, 54, 54, 54, 54, 54, -185, 54, 54, 54,
	54, 54, 54, -185, 54, 54, 54, 102, 101, 112,
	105, 106, 107, 108, 109, 110, 111, 103, 104, 99,
	81, 97, 98, 83, -53, -176, -182, -174, -174, -174,
	-174, -253, -180, -176, 54, 60, 65, 54, 54, -274,
	54, -184, -185, 54, 60, 60, 60, 54, 54, 54,
	-174, 54, -272, -183, -311, 435, -74, 56, -69, -154,
	-309, -310, -69, -73, -154, -66, -176, -147, -148, -140,
	-144, -151, -152, -145, 266, 182, 20, 80, 23, 25,
	271, 303, 83, 116, 16, 84, 148, 115, 273, 367,
	272, 177, 47, 75, 369, 371, 370, 360, 358, 310,
	314, 316, 313, 359, 333, 29, 10, 26, 198, 21,
	22, 109, 179, 200, 87, 88, 201, 24, 199, 72,
	19, 50, 11, 323, 13, 14, 274, 309, 189, 188,
	99, 326, 185, 45, 8, 118, 27, 96, 311, 41,
	77, 43, 97, 17, 361, 362, 31, 325, 392, 205,
	111, 275, 276, 48, 81, 317, 70, 51, 78, 15,
	46, 98, 180, 366, 44, 214, 315, 279, 281, 391,
	280, 183, 6, 270, 368, 30, 197, 42, 184, 334,
	86, 187, 71, 204, 144, 145, 5, 76, 9, 49,
	52, 363, 364, 365, 33, 85, 12, 282, 396, 278,
	318, 327, 328, 329, 330, 331, 332, 172, 173, 174,
	175, 176, 246, 192, 190, 194, 195, 435, 436, 19,
	-39, 119, -70, -120, 55, 89, -76, -75, 51, 52,
	-77, 51, -75, 41, 41, -71, -234, 107, 57, 55,
	-205, 309, 442, 58, 56, 55, -234, 187, 60, 60,
	55, 18, 119, 55, -62, 25, 26, -208, -209, 315,
	24, -194, 52, -189, -190, -188, -192, 29, -83, -120,
	-120, -120, -161, -155, -163, -158, -163, -159, 119, -142,
	-154, -208, 54, 127, 130, 130, 129, -201, 187, 54,
	89, -227, -227, -227, 29, -153, -49, -49, 51, 55,
	54, 56, 55, -120, -56, -57, -58, -176, -176, -176,
	-154, -154, 107, 70, 81, -171, -181, -182, -176, -130,
	21, 20, -130, -130, -176, -130, 107, -182, -182, 56,
	-254, 65, -313, -314, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 275, 270, 276, 274, 268,
	282, 277, 278, 147, 389, 390, 383, 384, 385, 386,
	387, 388, -130, -130, -130, -130, -130, -130, -130, -172,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-172, -179, -186, -253, 54, 99, 97, 98, 83, -174,
	-172, -172, 56, 55, -316, -315, 85, -176, -313, -181,
	-176, -181, 56, -182, -181, -172, -181, -130, 55, 54,
	56, 55, 33, 119, 55, 89, 56, 55, -67, 119,
	324, -154, 56, -66, -215, -176, -176, 54, -176, 11,
	119, 119, -206, 16, 396, -153, -135, 187, -207, -281,
	188, 366, -284, 338, -176, -176, -154, -63, -213, 396,
	317, 316, 312, -210, -211, 311, 313, 310, 314, 51,
	260, 261, 262, 263, -188, -141, 115, 225, 151, 54,
	-120, -161, -161, -163, -154, -213, 56, 130, -207, -164,
	60, -219, -83, -83, -1, -154, -122, 13, 55, 119,
	70, 56, 55, -176, -176, -176, 23, -182, 56, 56,
	56, 56, 11, -176, -176, -176, -176, -176, -176, -176,
	-182, -179, -174, -172, -172, -177, 201, 80, -176, -175,
	-315, 87, -176, 55, 52, 56, 11, 56, 56, 52,
	56, 55, 56, -176, -183, -279, -278, -277, 33, -50,
	-69, -272, -154, -310, -277, -154, -147, -144, -152, -145,
	65, -67, -70, -207, 107, 107, 57, -153, 318, -153,
	-207, -220, 396, 27, -290, 332, 327, 329, 119, -212,
	-214, 319, 320, 321, 322, 80, -211, 60, 60, 60,
	60, -83, -146, 89, -146, -146, -78, -79, -80, -85,
	-81, -135, -166, -82, 192, 190, 194, -306, 76, 195,
	246, 77, 185, -120, -120, -161, -168, -169, -167, 266,
	-267, 318, 309, 56, 56, -121, 14, 16, -58, -154,
	107, -176, 56, 56, 56, -86, -92, 116, 148, 200,
	147, 146, 144, 305, 306, 140, 141, 142, 139, 56,
	-176, 56, 56, 56, 56, 56, 56, 56, 56, -177,
	80, -174, -171, 56, 88, -176, 86, -86, -101, -176,
	-101, -172, 56, 56, 55, -272, 56, -153, 16, 23,
	-208, 289, 184, -261, 437, -288, 327, 16, 16, -214,
	65, 65, 65, 65, -211, 54, -101, -103, -152, 60,
	116, 60, 56, 55, -87, -91, -88, -90, -89, -93,
	-92, 148, 149, 116, 152, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 30, 200, 144, 145, 146,
	147, 164, 131, 150, 394, 172, 132, 173, 133, 174,
	134, 175, 135, 136, 176, 137, -82, -154, 77, -305,
	-306, -191, -305, 77, 54, -120, -167, 267, 31, 118,
	269, 29, 265, 16, -176, -182, 56, -255, -257, 54,
	-256, 54, -255, -255, -255, -94, 136, 135, -94, -258,
	54, -258, -259, 54, -258, 56, -171, -176, 56, 56,
	56, 19, 56, 56, -277, -153, -153, -220, 290, -83,
	-108, 438, 60, 16, 60, -286, 60, -196, -198, -135,
	54, -99, -100, -117, 303, 216, -192, 220, 64, 221,
	324, 222, 185, 224, 225, 226, 196, 227, 228, 229,
	318, 230, 231, 232, 233, 286, 5, 256, -80, -98,
	-97, -95, 70, 81, 29, 303, -96, 64, 115, 239,
	217, 240, -116, -165, 190, 76, 77, 291, -166, -260,
	306, 305, -255, -256, -257, -255, -255, 54, 54, -255,
	-255, -255, -255, -302, -303, -154, -303, -154, -302, -302,
	-191, -176, 65, -268, -164, 65, 65, 65, 65, -176,
	-282, -240, -138, 439, 65, 60, 329, 56, 55, -255,
	-176, -236, 206, 55, -117, -146, -146, -141, 115, -146,
	-146, -146, -146, 223, 223, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, 54,
	-95, 70, -172, 60, -103, -104, 29, 238, 234, -105,
	29, 218, 219, -107, 54, 246, 77, 77, -83, -262,
	307, -137, 60, -137, 54, 52, 255, 54, 54, 54,
	-303, 56, 268, 56, 56, 56, 55, 56, 55, 56,
	-289, 332, -285, -283, 327, 328, 329, 330, 54, 16,
	-199, -198, -62, 56, 16, -117, 65, 65, -146, -146,
	65, 60, 60, 60, -146, -146, 65, 60, -156, 65,
	65, 65, 65, 29, 60, -106, 29, 234, 238, 235,
	236, 237, 65, 29, 65, 29, 65, 29, -154, 54,
	-307, -308, 60, 65, 54, -197, 54, 56, 55, 56,
	-196, -304, 260, 261, 262, 264, 263, -304, -196, -196,
	-196, 54, -222, -221, 247, 81, 65, 65, -291, 188,
	-287, 331, -283, 16, 329, 16, 16, -139, -154, -286,
	-200, 196, 64, 396, 258, 259, -62, -237, 248, 249,
	-238, -244, 251, -101, -101, 60, 60, -102, 217, -84,
	56, 55, 89, 56, -176, -110, -109, 392, -196, 60,
	56, 56, 56, 56, -196, 247, 56, 56, -297, 54,
	65, -288, 16, -286, 16, -286, -286, 56, 55, -146,
	60, 257, -242, 252, 54, -240, 54, -240, 77, 261,
	218, 219, 56, -308, 60, 56, -114, -115, -112, -113,
	51, 336, 244, 245, 56, -199, -199, -199, -199, 56,
	-301, 30, 56, -296, -295, -136, -292, -154, 332, 60,
	-286, -154, 65, -152, -239, 253, 65, -172, 54, -172,
	54, -241, 250, 54, -221, -113, 51, -112, 51, 10,
	9, -116, -300, -299, -298, 56, 55, 119, -246, 54,
	16, 56, -235, 56, -235, 54, 89, -172, -111, 241,
	242, 30, 129, -111, 55, 89, -295, -154, -247, -245,
	206, -238, 56, 56, -235, 65, 56, 70, 29, 243,
	-299, 29, -176, 119, 56, 55, 57, -243, 254, 56,
	-154, -245, -248, 33, 65, -252, -249, 54, -117, 208,
	-252, -117, -251, -250, 253, 209, 56, 55, 57, 54,
	-250, -249, -182, 56,
}

var yyDef = [...]int{
	20, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	431, 432, 433, 0, 0, 264, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 200, 0, 0,
	180, 160, 161, 162, 119, 120, 121, 122, 0, 0,
	0, 324, -2, 434, 435, 436, -2, 265, 266, 267,
	268, 269, 196, 197, 198, -2, 0, 173, 0, 165,
	165, 0, 344, 0, 0, 0, 355, 0, 364, 20,
	302, 0, 307, 608, 644, 645, 646, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 0,
	189, 0, 0, 193, 0, 261, 185, 186, 187, 188,
	0, 0, 386, 387, 410, 413, 416, 0, 179, 0,
	0, 80, 474, 82, 476, 0, 86, 88, 89, -2,
	93, 94, 95, 96, 97, 98, 99, 0, 101, 1185,
	103, 1246, 106, 107, 108, 0, 117, 118, -2, -2,
	471, 0, 0, 1235, 62, -2, 0, 0, 0, 360,
	505, 505, 0, 505, 0, 482, 483, 484, 503, 504,
	518, 0, 0, 237, 238, 0, 254, 245, 254, 0,
	229, 230, 231, 235, 236, 255, 203, 174, 175, 164,
	0, 169, 0, 163, 0, 0, 133, 0, 138, 0,
	1184, 1250, 1200, 0, 1218, 0, 158, 151, 152, 980,
	1146, 0, 339, 0, 345, 344, 344, 0, 344, 203,
	203, 203, 203, 203, 332, 0, 334, 337, 0, 365,
	366, 367, 368, 3, 0, 0, 306, 0, 373, 190,
	647, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 401, 0, 0, 400, 0, 0, 0, 0, 414,
	415, 417, 0, 419, 420, 426, 427, 428, 429, 430,
	0, 344, 76, 0, 0, 0, 0, 0, 478, 87,
	116, 90, 91, 0, 111, 113, 115, 114, 100, 112,
	102, 104, 105, 110, 76, 0, 0, 0, 63, 327,
	0, 308, 0, 357, 359, 0, 361, 362, 0, 0,
	0, 0, 0, 505, 0, 250, 251, 245, 245, 239,
	247, 0, 252, 253, 0, 373, 0, 0, 0, 505,
	0, 0, 0, 0, 167, 0, 172, 123, 128, 126,
	127, 129, 0, 0, 0, 0, 0, 156, 157, 0,
	0, 0, 0, 145, 148, 600, 601, 602, 149, 150,
	0, 981, 982, 308, 340, 356, 358, 339, -2, 0,
	353, 354, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 381, 375, 377, 421, 28, 0, 881, 644, 885,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1304, 1306,
	1308, -2, -2, -2, 1315, -2, -2, 1319, 1320, 1325,
	1326, 1327, -2, -2, -2, 894, 715, 716, 717, 718,
	0, 0, 0, 0, 0, 725, 726, 0, 738, 0,
	732, 733, 734, 735, 38, 39, 910, 911, 912, 913,
	914, 915, 916, 848, 702, 0, 0, 833, 823, 0,
	843, 861, 862, 0, 0, 0, 0, 0, 40, 41,
	839, 840, 841, 842, 844, 845, 846, 847, 849, 850,
	851, 852, 854, 855, 856, 857, 858, 859, 860, 863,
	865, 835, 836, 837, 838, 827, 828, 829, 830, 831,
	832, 276, 294, 278, 0, 283, 0, 609, 344, 0,
	0, 191, 0, 262, 0, 373, 182, 0, 404, 398,
	0, 391, 402, 403, 394, 0, 396, 0, 392, 393,
	337, 418, 412, 0, 77, 78, 79, 81, 92, 0,
	0, 70, 459, 465, 462, 472, 475, 0, 84, 477,
	109, 0, 65, 0, 0, 0, 328, 341, 28, 346,
	347, 350, 446, 0, 473, 497, -2, 0, 373, 373,
	373, 245, 0, 247, 0, 247, 242, 246, 0, 256,
	258, 0, 446, 1277, 204, 176, 177, 0, 0, 171,
	0, 0, 130, 131, 132, 139, 134, 136, 0, 0,
	140, 153, 154, 155, 300, 301, 0, 0, 0, 144,
	0, 159, 326, 308, 330, 308, 270, 271, 0, 273,
	606, 274, 424, 425, 335, 0, 0, 408, 373, 0,
	382, 0, 378, 0, 0, 0, 422, 0, 0, 880,
	0, 0, 899, 900, 901, 902, 903, 904, 873, 869,
	869, 869, 0, 869, 0, 0, 809, 0, 0, 869,
	869, 869, 869, 810, 869, 869, 869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 875, 0, 721, 722, 723,
	724, 727, 0, 739, 0, 867, 0, 873, 873, 812,
	0, 813, 824, 0, 816, 817, 818, 873, 0, 873,
	822, 869, 277, 291, 0, 295, 0, 0, 287, 289,
	282, 284, 0, 0, 304, 339, 374, 648, 0, 987,
	-2, 989, -2, -2, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 0,
	194, 0, 0, 344, 0, 0, 388, 405, 0, 0,
	389, 0, 390, 395, 397, 411, 0, 71, 75, 0,
	461, 0, 0, 464, 83, 0, 0, 0, 59, 310,
	0, 0, 0, 0, 349, 351, 352, 438, 447, 0,
	506, 0, 0, 502, -2, 509, 0, 515, 0, 228,
	232, 233, 373, 248, 245, 249, 245, 247, 0, 257,
	260, 438, 0, 178, 166, 168, 0, 125, 0, 0,
	0, 141, 142, 143, 146, 147, 329, 331, 0, 0,
	20, 338, 0, 371, 376, 383, 384, 877, 878, 879,
	423, 29, 379, 882, 0, 884, 0, 874, 875, 0,
	870, 871, 0, 0, 0, 0, 0, 0, 0, 825,
	0, 909, 0, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 796,
	797, 798, 799, 800, 801, 802, 803, 804, 805, 806,
	807, 808, 0, 0, 0, 0, 0, 0, 0, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 886, 897, 898, 0, 0, 0, 0, 0, 895,
	890, 0, 719, 0, 736, 740, 0, 0, 868, 0,
	875, 0, 834, 0, 0, 0, 0, 0, 294, 296,
	0, 0, 294, 0, 0, 0, 303, 0, 275, 0,
	0, 263, 199, 339, 183, 184, 406, 0, 399, 0,
	0, 0, 460, 0, 0, 463, 85, 0, 67, 0,
	60, 61, 314, 0, 342, 343, 29, 348, 437, 0,
	448, 449, 450, 451, 452, 0, 0, 0, 0, 0,
	498, 499, 500, 501, 510, 983, 983, 983, 0, 610,
	240, 373, 373, 245, 259, 205, 0, 170, 124, 0,
	217, 135, 272, 607, 0, 409, 369, 0, 0, 0,
	883, 773, 0, 0, 0, 0, 0, 0, 762, 756,
	757, 826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 887, 895, 891, 0, 888, 0, 0, 876, 0,
	741, 0, 0, 0, 0, 774, 0, 811, 814, 0,
	819, 0, 821, 0, 292, 0, 297, 298, 294, 281,
	288, 280, 290, 285, 286, 305, 649, 988, 985, 986,
	192, 181, 0, 69, 72, 73, 74, 466, 0, 467,
	446, 66, 0, 0, 316, 48, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 454, 455, 456, 457,
	458, 0, 0, 984, 0, 0, 0, 611, 612, 614,
	615, 0, 0, 617, 671, 0, 626, 505, 626, 0,
	0, 628, 629, 243, 241, 373, 201, 206, 207, 0,
	211, 0, 0, 137, 336, 363, 0, 0, 385, 30,
	380, 876, 758, 759, 760, 0, 743, 964, 966, 746,
	964, 964, 964, 752, 752, 969, 969, 972, 969, 761,
	0, 763, 764, 767, 765, 768, 769, 755, 872, 889,
	0, 896, 892, 720, 728, 737, 0, 0, 0, 0,
	0, 0, 766, 293, 0, 279, 407, 470, 0, 0,
	67, 0, 0, 318, 0, 315, 0, 0, 0, 441,
	442, 443, 444, 445, 453, 0, 511, 512, 603, 604,
	605, 513, -2, 0, -2, 975, 918, 919, 920, 964,
	922, 966, 0, 964, 964, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 0, 0, 941, 964, 964, 964,
	964, 961, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 936, 616, 672, 638, 638,
	627, 638, 638, 505, 0, 244, 208, 209, 210, 0,
	213, 214, 216, 0, 370, 372, 729, 744, 965, 0,
	745, 0, 747, 748, 749, 750, 753, 754, 751, 937,
	0, 938, 939, 0, 940, 777, 893, 742, 730, 731,
	775, 0, 815, 820, 299, 468, 469, 64, 68, 50,
	320, 0, 317, 0, 311, 313, 58, 0, 493, 964,
	0, 519, -2, 556, 983, 983, 0, 983, 983, 983,
	983, 0, 0, 983, 983, 983, 983, 983, 983, 983,
	983, 983, 983, 983, 983, 983, 983, 0, 613, 640,
	-2, 652, 654, 0, 0, 657, 658, 0, 0, 0,
	0, 694, 664, 0, 0, 907, 908, 0, 670, 978,
	976, 977, 921, 946, 947, 948, 949, 0, 0, 942,
	943, 944, 945, 0, 630, 639, 0, 639, 0, 0,
	638, 0, 0, 215, 202, 0, 0, 0, 0, 0,
	44, 0, 309, 0, 319, 49, 0, 486, 0, 350,
	0, 516, 0, 514, 558, 0, 0, 983, 983, 0,
	0, 0, 0, 983, 983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	653, 655, 656, 659, 660, 661, 699, 700, 701, 662,
	696, 697, 698, 663, 0, 0, 905, 906, 692, 917,
	979, 0, 962, 0, 0, 0, 0, 0, 0, 0,
	0, 624, 212, 968, 967, 970, 0, 973, 0, 776,
	42, 46, 51, 52, 0, 0, 0, 0, 0, 0,
	485, 494, 495, 350, 552, 557, 559, 560, 0, 0,
	563, 564, 565, 566, 0, 0, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 594, 595, 596, 597,
	598, 599, 579, 580, 581, 582, 583, 584, 591, 0,
	0, 588, 0, 0, 0, 687, 0, 959, 0, 960,
	0, 631, 633, 634, 635, 636, 637, 632, 0, 0,
	0, 0, 623, 625, 667, 0, 0, 0, 31, 0,
	48, 0, 53, 0, 0, 0, 0, 0, 322, 312,
	487, 983, 0, 0, 491, 492, 496, 541, 0, 0,
	547, 0, 553, 561, 562, 567, 568, 585, 0, 0,
	587, 0, 0, 695, 0, 674, 688, 0, 0, 963,
	486, 486, 486, 486, 0, 668, 971, 974, 22, 0,
	0, 45, 0, 54, 0, 56, 57, 321, 0, 0,
	489, 0, 521, 0, 0, 0, 0, 0, 550, 0,
	592, 593, 586, 589, 590, 665, 673, 675, 676, 677,
	0, 689, 690, 691, 693, 618, 619, 620, 621, 0,
	21, 0, 32, 0, 34, 36, 37, 641, 43, 47,
	55, 323, 488, 490, 523, 0, 542, 0, 0, 0,
	0, 0, 0, 0, 666, 678, 0, 679, 0, 0,
	0, 622, 23, 24, 0, 33, 0, 0, 520, 0,
	552, 543, 0, 545, 0, 0, 0, 0, 680, 682,
	683, 0, 0, 681, 0, 0, 35, 642, 0, 525,
	0, 539, 544, 546, 0, 551, 549, 684, 686, 685,
	25, 26, 27, 0, 524, 0, 537, 522, 0, 548,
	643, 526, -2, 0, 540, 527, -2, 0, 535, 0,
	528, 536, 0, 531, 0, 0, 530, 0, -2, 0,
	532, -2, 0, 538,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 82, 3, 3, 3, 110, 102, 3,
	54, 56, 107, 105, 55, 106, 119, 108, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 441,
	90, 89, 91, 3, 442, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 112, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 101, 3, 113,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 83, 84, 85,
	86, 87, 88, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 103, 104, 109, 111, 114, 115, 116, 117,
	118, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:494
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:500
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:523
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:527
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 21:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:533
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				File:              yyDollar[5].str,
				DuplicateHandling: yyDollar[6].duplicateKeyUnion(),
				Table:             yyDollar[9].tableNameUnion(),
				Fields:            yyDollar[10].fieldsUnion(),
				Lines:             yyDollar[11].linesUnion(),
				IgnoredLines:      uint64(yyDollar[12].int64ValUnion()),
				ColumnList:        yyDollar[13].loadColumnsUnion(),
				Assignments:       yyDollar[14].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:552
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:558
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:562
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:568
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:575
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:584
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:588
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:592
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:601
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:605
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:611
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:620
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:631
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:635
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:641
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:645
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:651
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:675
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:694
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:698
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:707
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:715
		{
			yyVAL.str = ""
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:719
		{
			yyVAL.str = yyDollar[3].str
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:724
		{
			yyVAL.str = "\n"
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:728
		{
			yyVAL.str = yyDollar[3].str
		}
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:737
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:761
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:765
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:771
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:777
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:795
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:812
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:835
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:839
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:843
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:848
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:852
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:858
		{
			yyLOCAL = &tree.Grant{
				Privileges:  yyDollar[2].privilegesUnion(),
				ObjType:     yyDollar[4].objectTypeUnion(),
				Level:       yyDollar[5].privilegeLevelUnion(),
				Users:       yyDollar[7].usersUnion(),
				GrantOption: yyDollar[9].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:868
		{
			yyLOCAL = &tree.Grant{
				IsGrantRole:      true,
				RolesInGrantRole: yyDollar[2].rolesUnion(),
				Users:            yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:876
		{
			yyLOCAL = &tree.Grant{
				IsProxy:     true,
				ProxyUser:   yyDollar[4].userUnion(),
				Users:       yyDollar[6].usersUnion(),
				GrantOption: yyDollar[7].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:886
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:890
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:900
		{
			yyLOCAL = &tree.Revoke{
				Privileges: yyDollar[2].privilegesUnion(),
				ObjType:    yyDollar[4].objectTypeUnion(),
				Level:      yyDollar[5].privilegeLevelUnion(),
				Users:      yyDollar[7].usersUnion(),
				Roles:      nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:910
		{
			yyLOCAL = &tree.Revoke{
				IsRevokeRole:      true,
				RolesInRevokeRole: yyDollar[2].rolesUnion(),
				Users:             yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:920
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_DATABASE,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:926
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_GLOBAL,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:932
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:955
		{
			yyLOCAL = tree.OBJECT_TYPE_NONE
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:959
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:963
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:967
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:973
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:977
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:983
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:990
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:999
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1003
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1009
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1013
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1017
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1021
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1025
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1029
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1033
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1037
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1041
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1045
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1049
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1053
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1057
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1061
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1065
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1069
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1073
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1077
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1081
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1085
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1089
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1093
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1097
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1101
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1105
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1109
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1113
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1117
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1121
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1125
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1129
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1133
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1137
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1149
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1155
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1163
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1167
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1171
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1175
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1179
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1185
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1189
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1193
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1199
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1205
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1209
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1216
		{
			yyVAL.str = yyDollar[3].str
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1222
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1226
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1232
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1240
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1249
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1257
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1265
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1288
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1295
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1302
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
				Reserved: tree.NewNumVal(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1310
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1317
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1324
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1345
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1351
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1355
		{
			yyVAL.str = yyDollar[1].str
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1362
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1373
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1379
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1384
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1388
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1392
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1396
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1400
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1404
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1408
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1412
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1418
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1422
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1426
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1430
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1435
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1440
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1446
		{
			yyLOCAL = &tree.Use{Name: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1450
		{
			yyLOCAL = &tree.Use{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1456
		{
			yyLOCAL = &tree.Update{
				Table:   yyDollar[2].tableExprUnion(),
				Exprs:   yyDollar[4].updateExprsUnion(),
				Where:   yyDollar[5].whereUnion(),
				OrderBy: yyDollar[6].orderByUnion(),
				Limit:   yyDollar[7].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1469
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1473
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1479
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1488
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1494
		{
			st := &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
			yyLOCAL = tree.NewExplainStmt(st, "")
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1499
		{
			st := &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
			yyLOCAL = tree.NewExplainStmt(st, "")
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1504
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1508
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1512
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "row")
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1516
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[5].statementUnion(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1520
		{
			yyLOCAL = tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "")
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1531
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1541
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:   yyDollar[3].boolValUnion(),
				IsUserFunc: false,
				Users:      yyDollar[4].usersUnion(),
				TlsOpts:    yyDollar[5].tlsOptionsUnion(),
				ResOpts:    yyDollar[6].resourceOptionsUnion(),
				MiscOpts:   yyDollar[7].userMiscOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1552
		{
			auth := &tree.User{
				AuthString: yyDollar[9].str,
				ByAuth:     true,
			}
			yyLOCAL = &tree.AlterUser{
				IfExists:   yyDollar[3].boolValUnion(),
				IsUserFunc: true,
				UserFunc:   auth,
			}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1565
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1569
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1574
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1578
		{
			yyLOCAL = yyDollar[1].userMiscOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1584
		{
			yyLOCAL = []tree.UserMiscOption{yyDollar[1].userMiscOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1588
		{
			yyLOCAL = append(yyDollar[1].userMiscOptionsUnion(), yyDollar[2].userMiscOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1594
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1598
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1602
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1606
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1620
		{
			yyVAL.item = nil
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1625
		{
			yyVAL.item = nil
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1646
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[4].tableNameUnion(),
				Where:     yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1660
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1670
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1679
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1683
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1687
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1693
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1699
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1705
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1711
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1721
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1733
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1739
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1751
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:1764
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1773
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:1777
		{
			yyVAL.str = yyDollar[2].str
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1783
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1796
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1800
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1806
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1810
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1853
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1862
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1871
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1881
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1887
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1893
		{
			yyLOCAL = &tree.Delete{
				Table:   yyDollar[3].tableExprUnion(),
				Where:   yyDollar[4].whereUnion(),
				OrderBy: yyDollar[5].orderByUnion(),
				Limit:   yyDollar[6].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1908
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1917
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1924
		{
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(yyDollar[1].selectUnion(), nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1930
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1938
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1945
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(yyDollar[4].selectUnion(), nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1952
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:1971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:1975
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:1979
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:1985
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1994
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1998
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2004
		{
			yyVAL.str = yyDollar[1].str
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2008
		{
			yyVAL.str = yyDollar[3].str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2014
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2018
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2024
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2029
		{
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2040
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2044
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2060
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2066
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2070
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2076
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2080
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2089
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2102
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2109
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2116
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2134
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2153
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2159
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2166
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2170
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2183
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2187
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2192
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2196
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2203
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2208
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2215
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2221
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2225
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2229
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2233
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2237
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2241
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2247
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2254
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2263
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2267
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2273
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2285
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2290
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2294
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2300
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2304
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2308
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2317
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2323
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2329
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2333
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:2339
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2344
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2348
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2352
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2359
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2363
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2369
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2373
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2383
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2393
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2403
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2415
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2423
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2431
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2441
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2453
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2457
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2461
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2470
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2474
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:2479
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:2483
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2492
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:2498
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:2502
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2508
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2512
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2516
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2520
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2526
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier("dual"), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2534
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2540
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2548
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2552
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2562
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2571
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2581
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2590
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2600
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2604
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2614
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2618
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2622
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2626
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2636
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2642
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2648
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2652
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2656
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2666
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2672
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2676
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2682
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2686
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2692
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2696
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:2709
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2714
		{
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2715
		{
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:2719
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2731
		{
			yyVAL.str = ""
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2735
		{
			yyVAL.str = yyDollar[1].str
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2739
		{
			yyVAL.str = yyDollar[2].str
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2748
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2752
		{
			yyVAL.str = yyDollar[1].str
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2756
		{
			yyVAL.str = yyDollar[2].str
		}
	case 437:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2785
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Users:       yyDollar[4].usersUnion(),
				TlsOpts:     yyDollar[5].tlsOptionsUnion(),
				ResOpts:     yyDollar[6].resourceOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2799
		{
			yyLOCAL = yyDollar[2].resourceOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2805
		{
			yyLOCAL = []tree.ResourceOption{yyDollar[1].resourceOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2809
		{
			yyLOCAL = append(yyDollar[1].resourceOptionsUnion(), yyDollar[2].resourceOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2815
		{
			yyLOCAL = &tree.ResourceOptionMaxQueriesPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2819
		{
			yyLOCAL = &tree.ResourceOptionMaxUpdatesPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2823
		{
			yyLOCAL = &tree.ResourceOptionMaxConnectionPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2827
		{
			yyLOCAL = &tree.ResourceOptionMaxUserConnections{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2833
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2840
		{
			t := &tree.TlsOptionNone{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2845
		{
			t := &tree.TlsOptionSSL{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2850
		{
			t := &tree.TlsOptionX509{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2855
		{
			yyLOCAL = yyDollar[2].tlsOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2861
		{
			yyLOCAL = []tree.TlsOption{yyDollar[1].tlsOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2865
		{
			yyLOCAL = append(yyDollar[1].tlsOptionsUnion(), yyDollar[3].tlsOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2869
		{
			yyLOCAL = append(yyDollar[1].tlsOptionsUnion(), yyDollar[2].tlsOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.TlsOptionIssuer{Issuer: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.TlsOptionSubject{Subject: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2883
		{
			yyLOCAL = &tree.TlsOptionCipher{Cipher: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.TlsOptionSan{San: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2893
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2897
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2903
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthPlugin: yyDollar[2].authRecordUnion().AuthPlugin,
				AuthString: yyDollar[2].authRecordUnion().AuthString,
				HashString: yyDollar[2].authRecordUnion().HashString,
				ByAuth:     yyDollar[2].authRecordUnion().ByAuth,
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2916
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2920
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2924
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.AuthRecord{}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2933
		{
			yyLOCAL = &tree.AuthRecord{
				AuthString: yyDollar[3].str,
				ByAuth:     true,
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2946
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
				AuthString: yyDollar[5].str,
				ByAuth:     true,
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2954
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
				HashString: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2961
		{
			yyLOCAL = &tree.AuthRecord{
				HashString: yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2973
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2982
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2986
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2992
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: "%"}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3000
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3009
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3013
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3017
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3021
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3027
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3050
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3072
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3076
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3094
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3098
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3104
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3109
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3114
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3118
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3122
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3126
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3130
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3150
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3154
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3163
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3169
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3173
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3179
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3183
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3202
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3214
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3223
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3227
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3254
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3260
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3264
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:3270
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:3279
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3289
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3293
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3299
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3303
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:3309
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:3316
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3325
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3329
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:3334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:3338
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3343
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3347
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3357
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3361
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3372
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3388
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3396
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3407
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3417
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3427
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3431
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3449
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3455
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3459
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3463
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3469
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3473
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3477
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3481
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3485
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3489
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3493
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3497
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3501
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3505
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3509
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3513
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3517
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3521
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3525
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3529
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3533
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3537
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3541
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3545
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3549
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3553
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3557
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3561
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3565
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3569
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3573
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3577
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:3588
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:3592
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:3598
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3603
		{
			yyVAL.str = ""
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3607
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3611
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3617
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3621
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3625
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3629
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3633
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3637
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:3653
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:3657
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3666
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3671
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3677
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3684
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3688
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3694
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3698
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3704
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3714
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3729
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3738
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3761
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3770
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3780
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3788
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3794
		{
			yyVAL.str = ""
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3798
		{
			yyVAL.str = yyDollar[1].str
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3808
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3814
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3820
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3834
		{
			yyVAL.str = ""
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:3841
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3847
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3851
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3855
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3866
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3870
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3874
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3883
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3889
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3893
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3899
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3903
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3907
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3911
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3915
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3919
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false))
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3923
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3927
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3931
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3935
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3939
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3943
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3947
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3957
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3961
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3966
		{
			yyVAL.str = ""
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3970
		{
			yyVAL.str = yyDollar[1].str
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3976
		{
			yyVAL.str = ""
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3980
		{
			yyVAL.str = yyDollar[2].str
		}
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:3986
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3997
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4007
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4014
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4021
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4028
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4037
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4043
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4049
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4053
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4057
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4061
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4065
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4070
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4077
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4081
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4085
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4094
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4099
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4103
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:4119
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4125
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4129
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4133
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4137
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4141
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4145
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4149
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4153
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4157
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4161
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4165
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4169
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4173
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4179
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4183
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4187
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4191
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4195
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4199
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4203
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4207
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4211
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4215
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4219
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4223
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4228
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4236
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4240
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4244
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumVal(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4253
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4257
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4261
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4265
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4270
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4274
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4279
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4283
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:4289
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:4293
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:4299
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4309
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4322
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4335
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4347
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4361
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4376
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4391
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4404
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4419
		{
		}
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4425
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4434
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4442
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4450
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4459
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4468
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4477
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4486
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumVal(constant.MakeString("*"), "*", false)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4495
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4504
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4513
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4522
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4531
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4540
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4549
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4565
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4573
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4581
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4589
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4597
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4612
		{
			yyVAL.str = yyDollar[1].str
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4648
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4660
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4674
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4682
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4689
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4701
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4709
		{
			cn := tree.NewNumVal(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4720
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4729
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4738
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4747
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4755
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4765
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4773
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4782
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4786
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4792
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4796
		{
			yyLOCAL = yyDollar[2].numValUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4809
		{
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4811
		{
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4851
		{
			name := tree.SetUnresolvedName("interval")
			es := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4860
		{
			name := tree.SetUnresolvedName("interval")
			ival := util.GetUint64(yyDollar[2].item)
			ustr := strconv.FormatUint(ival, 10)
			e1 := tree.NewNumVal(constant.MakeUint64(ival), ustr, false)
			e2 := tree.NewNumVal(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{e1, e2},
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4873
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4877
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4881
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:4887
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4892
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4896
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4902
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4906
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4913
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4917
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4921
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4925
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4929
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4935
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4939
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4943
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4950
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4954
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4958
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4962
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4966
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4970
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4974
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4978
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4984
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4988
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4994
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4998
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5005
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5009
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5013
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5017
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5021
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5032
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5036
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5040
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5044
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.NumVal
//line mysql_sql.y:5050
		{
			ival, errStr := util.GetInt64(yyDollar[1].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			if ival > 0 {
				yyLOCAL = tree.NewNumValWithResInt(constant.MakeInt64(ival), yylex.(*Lexer).scanner.LastToken, false, ival)
			} else {
				yyLOCAL = tree.NewNumValWithResInt(constant.MakeInt64(ival), yylex.(*Lexer).scanner.LastToken, true, ival)
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5065
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5069
		{
			ival := util.GetUint64(yyDollar[1].item)
			yyLOCAL = tree.NewNumVal(constant.MakeUint64(ival), yylex.(*Lexer).scanner.LastToken, false)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5074
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithResFoalt(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, fval)
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5079
		{
			yyLOCAL = tree.NewNumVal(constant.MakeBool(true), "", false)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5083
		{
			yyLOCAL = tree.NewNumVal(constant.MakeBool(false), "", false)
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5087
		{
			yyLOCAL = tree.NewNumVal(constant.MakeUnknown(), "", false)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5091
		{
			ival := util.GetUint64(yyDollar[1].item)
			yyLOCAL = tree.NewNumVal(constant.MakeUint64(ival), yylex.(*Lexer).scanner.LastToken, false)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5101
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5112
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5117
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5123
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5135
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5147
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5159
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5172
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5185
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5198
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5211
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5224
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5237
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5250
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5263
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5276
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5289
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5304
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5327
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5364
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 18 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5412
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5429
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5441
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5456
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5471
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5486
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5502
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5515
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5528
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5541
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5554
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5566
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5578
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5590
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5602
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5614
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5626
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5638
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5650
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5662
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5675
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5690
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5713
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5718
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:5724
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:5730
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:5734
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:5740
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5746
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5753
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5760
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5769
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 10, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5776
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5783
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5792
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5796
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5800
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5806
		{
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5808
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5818
		{
			yyVAL.str = ""
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5822
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

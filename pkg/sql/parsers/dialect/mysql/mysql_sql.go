// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const VALUES = 57389
const NEXT = 57390
const VALUE = 57391
const SHARE = 57392
const MODE = 57393
const SQL_NO_CACHE = 57394
const SQL_CACHE = 57395
const JOIN = 57396
const STRAIGHT_JOIN = 57397
const LEFT = 57398
const RIGHT = 57399
const INNER = 57400
const OUTER = 57401
const CROSS = 57402
const NATURAL = 57403
const USE = 57404
const FORCE = 57405
const LOWER_THAN_ON = 57406
const ON = 57407
const USING = 57408
const SUBQUERY_AS_EXPR = 57409
const LOWER_THAN_STRING = 57410
const ID = 57411
const AT_ID = 57412
const AT_AT_ID = 57413
const STRING = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const QUOTE_ID = 57419
const INTEGRAL = 57420
const HEX = 57421
const BIT_LITERAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const NULL = 57425
const TRUE = 57426
const FALSE = 57427
const LOWER_THAN_CHARSET = 57428
const CHARSET = 57429
const UNIQUE = 57430
const KEY = 57431
const OR = 57432
const PIPE_CONCAT = 57433
const XOR = 57434
const AND = 57435
const NOT = 57436
const BETWEEN = 57437
const CASE = 57438
const WHEN = 57439
const THEN = 57440
const ELSE = 57441
const END = 57442
const ELSEIF = 57443
const LOWER_THAN_EQ = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT = 57453
const ILIKE = 57454
const SHIFT_LEFT = 57455
const SHIFT_RIGHT = 57456
const DIV = 57457
const MOD = 57458
const UNARY = 57459
const COLLATE = 57460
const BINARY = 57461
const UNDERSCORE_BINARY = 57462
const INTERVAL = 57463
const OUT = 57464
const INOUT = 57465
const BEGIN = 57466
const START = 57467
const TRANSACTION = 57468
const COMMIT = 57469
const ROLLBACK = 57470
const WORK = 57471
const CONSISTENT = 57472
const SNAPSHOT = 57473
const CHAIN = 57474
const NO = 57475
const RELEASE = 57476
const PRIORITY = 57477
const QUICK = 57478
const BIT = 57479
const TINYINT = 57480
const SMALLINT = 57481
const MEDIUMINT = 57482
const INT = 57483
const INTEGER = 57484
const BIGINT = 57485
const INTNUM = 57486
const REAL = 57487
const DOUBLE = 57488
const FLOAT_TYPE = 57489
const DECIMAL = 57490
const NUMERIC = 57491
const DECIMAL_VALUE = 57492
const TIME = 57493
const TIMESTAMP = 57494
const DATETIME = 57495
const YEAR = 57496
const CHAR = 57497
const VARCHAR = 57498
const BOOL = 57499
const CHARACTER = 57500
const VARBINARY = 57501
const NCHAR = 57502
const TEXT = 57503
const TINYTEXT = 57504
const MEDIUMTEXT = 57505
const LONGTEXT = 57506
const BLOB = 57507
const TINYBLOB = 57508
const MEDIUMBLOB = 57509
const LONGBLOB = 57510
const JSON = 57511
const ENUM = 57512
const UUID = 57513
const GEOMETRY = 57514
const POINT = 57515
const LINESTRING = 57516
const POLYGON = 57517
const GEOMETRYCOLLECTION = 57518
const MULTIPOINT = 57519
const MULTILINESTRING = 57520
const MULTIPOLYGON = 57521
const INT1 = 57522
const INT2 = 57523
const INT3 = 57524
const INT4 = 57525
const INT8 = 57526
const S3OPTION = 57527
const SQL_SMALL_RESULT = 57528
const SQL_BIG_RESULT = 57529
const SQL_BUFFER_RESULT = 57530
const LOW_PRIORITY = 57531
const HIGH_PRIORITY = 57532
const DELAYED = 57533
const CREATE = 57534
const ALTER = 57535
const DROP = 57536
const RENAME = 57537
const ANALYZE = 57538
const ADD = 57539
const RETURNS = 57540
const SCHEMA = 57541
const TABLE = 57542
const SEQUENCE = 57543
const INDEX = 57544
const VIEW = 57545
const TO = 57546
const IGNORE = 57547
const IF = 57548
const PRIMARY = 57549
const COLUMN = 57550
const CONSTRAINT = 57551
const SPATIAL = 57552
const FULLTEXT = 57553
const FOREIGN = 57554
const KEY_BLOCK_SIZE = 57555
const SHOW = 57556
const DESCRIBE = 57557
const EXPLAIN = 57558
const DATE = 57559
const ESCAPE = 57560
const REPAIR = 57561
const OPTIMIZE = 57562
const TRUNCATE = 57563
const MAXVALUE = 57564
const PARTITION = 57565
const REORGANIZE = 57566
const LESS = 57567
const THAN = 57568
const PROCEDURE = 57569
const TRIGGER = 57570
const STATUS = 57571
const VARIABLES = 57572
const ROLE = 57573
const PROXY = 57574
const AVG_ROW_LENGTH = 57575
const STORAGE = 57576
const DISK = 57577
const MEMORY = 57578
const CHECKSUM = 57579
const COMPRESSION = 57580
const DATA = 57581
const DIRECTORY = 57582
const DELAY_KEY_WRITE = 57583
const ENCRYPTION = 57584
const ENGINE = 57585
const MAX_ROWS = 57586
const MIN_ROWS = 57587
const PACK_KEYS = 57588
const ROW_FORMAT = 57589
const STATS_AUTO_RECALC = 57590
const STATS_PERSISTENT = 57591
const STATS_SAMPLE_PAGES = 57592
const DYNAMIC = 57593
const COMPRESSED = 57594
const REDUNDANT = 57595
const COMPACT = 57596
const FIXED = 57597
const COLUMN_FORMAT = 57598
const AUTO_RANDOM = 57599
const ENGINE_ATTRIBUTE = 57600
const SECONDARY_ENGINE_ATTRIBUTE = 57601
const INSERT_METHOD = 57602
const RESTRICT = 57603
const CASCADE = 57604
const ACTION = 57605
const PARTIAL = 57606
const SIMPLE = 57607
const CHECK = 57608
const ENFORCED = 57609
const RANGE = 57610
const LIST = 57611
const ALGORITHM = 57612
const LINEAR = 57613
const PARTITIONS = 57614
const SUBPARTITION = 57615
const SUBPARTITIONS = 57616
const CLUSTER = 57617
const TYPE = 57618
const ANY = 57619
const SOME = 57620
const EXTERNAL = 57621
const LOCALFILE = 57622
const URL = 57623
const PREPARE = 57624
const DEALLOCATE = 57625
const RESET = 57626
const EXTENSION = 57627
const INCREMENT = 57628
const CYCLE = 57629
const MINVALUE = 57630
const PUBLICATION = 57631
const SUBSCRIPTIONS = 57632
const PUBLICATIONS = 57633
const PROPERTIES = 57634
const PARSER = 57635
const VISIBLE = 57636
const INVISIBLE = 57637
const BTREE = 57638
const HASH = 57639
const RTREE = 57640
const BSI = 57641
const ZONEMAP = 57642
const LEADING = 57643
const BOTH = 57644
const TRAILING = 57645
const UNKNOWN = 57646
const EXPIRE = 57647
const ACCOUNT = 57648
const ACCOUNTS = 57649
const UNLOCK = 57650
const DAY = 57651
const NEVER = 57652
const PUMP = 57653
const MYSQL_COMPATIBILITY_MODE = 57654
const SECOND = 57655
const ASCII = 57656
const COALESCE = 57657
const COLLATION = 57658
const HOUR = 57659
const MICROSECOND = 57660
const MINUTE = 57661
const MONTH = 57662
const QUARTER = 57663
const REPEAT = 57664
const REVERSE = 57665
const ROW_COUNT = 57666
const WEEK = 57667
const REVOKE = 57668
const FUNCTION = 57669
const PRIVILEGES = 57670
const TABLESPACE = 57671
const EXECUTE = 57672
const SUPER = 57673
const GRANT = 57674
const OPTION = 57675
const REFERENCES = 57676
const REPLICATION = 57677
const SLAVE = 57678
const CLIENT = 57679
const USAGE = 57680
const RELOAD = 57681
const FILE = 57682
const TEMPORARY = 57683
const ROUTINE = 57684
const EVENT = 57685
const SHUTDOWN = 57686
const NULLX = 57687
const AUTO_INCREMENT = 57688
const APPROXNUM = 57689
const SIGNED = 57690
const UNSIGNED = 57691
const ZEROFILL = 57692
const ENGINES = 57693
const LOW_CARDINALITY = 57694
const AUTOEXTEND_SIZE = 57695
const ADMIN_NAME = 57696
const RANDOM = 57697
const SUSPEND = 57698
const ATTRIBUTE = 57699
const HISTORY = 57700
const REUSE = 57701
const CURRENT = 57702
const OPTIONAL = 57703
const FAILED_LOGIN_ATTEMPTS = 57704
const PASSWORD_LOCK_TIME = 57705
const UNBOUNDED = 57706
const SECONDARY = 57707
const RESTRICTED = 57708
const USER = 57709
const IDENTIFIED = 57710
const CIPHER = 57711
const ISSUER = 57712
const X509 = 57713
const SUBJECT = 57714
const SAN = 57715
const REQUIRE = 57716
const SSL = 57717
const NONE = 57718
const PASSWORD = 57719
const MAX_QUERIES_PER_HOUR = 57720
const MAX_UPDATES_PER_HOUR = 57721
const MAX_CONNECTIONS_PER_HOUR = 57722
const MAX_USER_CONNECTIONS = 57723
const FORMAT = 57724
const VERBOSE = 57725
const CONNECTION = 57726
const TRIGGERS = 57727
const PROFILES = 57728
const LOAD = 57729
const INFILE = 57730
const TERMINATED = 57731
const OPTIONALLY = 57732
const ENCLOSED = 57733
const ESCAPED = 57734
const STARTING = 57735
const LINES = 57736
const ROWS = 57737
const IMPORT = 57738
const MODUMP = 57739
const OVER = 57740
const PRECEDING = 57741
const FOLLOWING = 57742
const GROUPS = 57743
const DATABASES = 57744
const TABLES = 57745
const SEQUENCES = 57746
const EXTENDED = 57747
const FULL = 57748
const PROCESSLIST = 57749
const FIELDS = 57750
const COLUMNS = 57751
const OPEN = 57752
const ERRORS = 57753
const WARNINGS = 57754
const INDEXES = 57755
const SCHEMAS = 57756
const NODE = 57757
const LOCKS = 57758
const ROLES = 57759
const TABLE_NUMBER = 57760
const COLUMN_NUMBER = 57761
const TABLE_VALUES = 57762
const TABLE_SIZE = 57763
const NAMES = 57764
const GLOBAL = 57765
const PERSIST = 57766
const SESSION = 57767
const ISOLATION = 57768
const LEVEL = 57769
const READ = 57770
const WRITE = 57771
const ONLY = 57772
const REPEATABLE = 57773
const COMMITTED = 57774
const UNCOMMITTED = 57775
const SERIALIZABLE = 57776
const LOCAL = 57777
const EVENTS = 57778
const PLUGINS = 57779
const CURRENT_TIMESTAMP = 57780
const DATABASE = 57781
const CURRENT_TIME = 57782
const LOCALTIME = 57783
const LOCALTIMESTAMP = 57784
const UTC_DATE = 57785
const UTC_TIME = 57786
const UTC_TIMESTAMP = 57787
const REPLACE = 57788
const CONVERT = 57789
const SEPARATOR = 57790
const TIMESTAMPDIFF = 57791
const CURRENT_DATE = 57792
const CURRENT_USER = 57793
const CURRENT_ROLE = 57794
const SECOND_MICROSECOND = 57795
const MINUTE_MICROSECOND = 57796
const MINUTE_SECOND = 57797
const HOUR_MICROSECOND = 57798
const HOUR_SECOND = 57799
const HOUR_MINUTE = 57800
const DAY_MICROSECOND = 57801
const DAY_SECOND = 57802
const DAY_MINUTE = 57803
const DAY_HOUR = 57804
const YEAR_MONTH = 57805
const SQL_TSI_HOUR = 57806
const SQL_TSI_DAY = 57807
const SQL_TSI_WEEK = 57808
const SQL_TSI_MONTH = 57809
const SQL_TSI_QUARTER = 57810
const SQL_TSI_YEAR = 57811
const SQL_TSI_SECOND = 57812
const SQL_TSI_MINUTE = 57813
const RECURSIVE = 57814
const CONFIG = 57815
const DRAINER = 57816
const MATCH = 57817
const AGAINST = 57818
const BOOLEAN = 57819
const LANGUAGE = 57820
const WITH = 57821
const QUERY = 57822
const EXPANSION = 57823
const ADDDATE = 57824
const BIT_AND = 57825
const BIT_OR = 57826
const BIT_XOR = 57827
const CAST = 57828
const COUNT = 57829
const APPROX_COUNT_DISTINCT = 57830
const APPROX_PERCENTILE = 57831
const CURDATE = 57832
const CURTIME = 57833
const DATE_ADD = 57834
const DATE_SUB = 57835
const EXTRACT = 57836
const GROUP_CONCAT = 57837
const MAX = 57838
const MID = 57839
const MIN = 57840
const NOW = 57841
const POSITION = 57842
const SESSION_USER = 57843
const STD = 57844
const STDDEV = 57845
const MEDIAN = 57846
const STDDEV_POP = 57847
const STDDEV_SAMP = 57848
const SUBDATE = 57849
const SUBSTR = 57850
const SUBSTRING = 57851
const SUM = 57852
const SYSDATE = 57853
const SYSTEM_USER = 57854
const TRANSLATE = 57855
const TRIM = 57856
const VARIANCE = 57857
const VAR_POP = 57858
const VAR_SAMP = 57859
const AVG = 57860
const RANK = 57861
const ROW_NUMBER = 57862
const DENSE_RANK = 57863
const NEXTVAL = 57864
const SETVAL = 57865
const CURRVAL = 57866
const LASTVAL = 57867
const ARROW = 57868
const ROW = 57869
const OUTFILE = 57870
const HEADER = 57871
const MAX_FILE_SIZE = 57872
const FORCE_QUOTE = 57873
const PARALLEL = 57874
const UNUSED = 57875
const BINDINGS = 57876
const DO = 57877
const DECLARE = 57878
const LOOP = 57879
const WHILE = 57880
const LEAVE = 57881
const ITERATE = 57882
const UNTIL = 57883
const CALL = 57884
const SPBEGIN = 57885
const BACKEND = 57886
const SERVERS = 57887
const KILL = 57888
const QUERY_RESULT = 57889

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9788

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 111,
	21, 650,
	-2, 631,
	-1, 125,
	219, 870,
	-2, 941,
	-1, 147,
	42, 472,
	219, 472,
	246, 479,
	247, 479,
	430, 472,
	-2, 505,
	-1, 183,
	566, 1636,
	-2, 390,
	-1, 508,
	298, 130,
	405, 130,
	-2, 1548,
	-1, 571,
	68, 1347,
	-2, 1690,
	-1, 572,
	68, 1365,
	-2, 1661,
	-1, 576,
	68, 1366,
	-2, 1689,
	-1, 601,
	68, 1277,
	-2, 1752,
	-1, 602,
	68, 1278,
	-2, 1751,
	-1, 603,
	68, 1279,
	-2, 1741,
	-1, 604,
	68, 1716,
	-2, 1736,
	-1, 605,
	68, 1717,
	-2, 1737,
	-1, 606,
	68, 1718,
	-2, 1743,
	-1, 607,
	68, 1719,
	-2, 1726,
	-1, 608,
	68, 1720,
	-2, 1734,
	-1, 609,
	68, 1721,
	-2, 1744,
	-1, 610,
	68, 1722,
	-2, 1745,
	-1, 611,
	68, 1723,
	-2, 1750,
	-1, 612,
	68, 1724,
	-2, 1755,
	-1, 613,
	68, 1725,
	-2, 1756,
	-1, 615,
	68, 1344,
	-2, 1537,
	-1, 619,
	68, 1349,
	-2, 1549,
	-1, 622,
	68, 1353,
	-2, 1567,
	-1, 626,
	68, 1357,
	-2, 1607,
	-1, 627,
	68, 1358,
	-2, 1685,
	-1, 635,
	68, 1368,
	-2, 1670,
	-1, 636,
	68, 1369,
	-2, 1715,
	-1, 637,
	68, 1370,
	-2, 1680,
	-1, 638,
	68, 1371,
	-2, 1705,
	-1, 649,
	68, 1255,
	-2, 1746,
	-1, 650,
	68, 1256,
	-2, 1747,
	-1, 651,
	68, 1257,
	-2, 1748,
	-1, 655,
	21, 651,
	-2, 614,
	-1, 725,
	425, 505,
	426, 505,
	-2, 473,
	-1, 768,
	106, 1537,
	117, 1537,
	137, 1537,
	-2, 1512,
	-1, 870,
	21, 651,
	-2, 614,
	-1, 970,
	21, 650,
	-2, 1155,
	-1, 1323,
	68, 1415,
	-2, 1687,
	-1, 1324,
	68, 1416,
	-2, 1688,
	-1, 1458,
	69, 794,
	-2, 800,
	-1, 1803,
	69, 1498,
	138, 1498,
	-2, 1672,
	-1, 1804,
	69, 1498,
	138, 1498,
	-2, 1671,
	-1, 1805,
	69, 1476,
	138, 1476,
	-2, 1658,
	-1, 1806,
	69, 1477,
	138, 1477,
	-2, 1663,
	-1, 1807,
	69, 1478,
	138, 1478,
	-2, 1595,
	-1, 1808,
	69, 1479,
	138, 1479,
	-2, 1589,
	-1, 1809,
	69, 1480,
	138, 1480,
	-2, 1528,
	-1, 1810,
	69, 1481,
	138, 1481,
	-2, 1660,
	-1, 1811,
	69, 1482,
	138, 1482,
	-2, 1593,
	-1, 1812,
	69, 1483,
	138, 1483,
	-2, 1588,
	-1, 1813,
	69, 1484,
	138, 1484,
	-2, 1581,
	-1, 1815,
	69, 1487,
	138, 1487,
	-2, 1705,
	-1, 1816,
	69, 1467,
	138, 1467,
	-2, 1690,
	-1, 1817,
	69, 1496,
	138, 1496,
	-2, 1661,
	-1, 1818,
	69, 1496,
	138, 1496,
	-2, 1689,
	-1, 1819,
	69, 1496,
	138, 1496,
	-2, 1550,
	-1, 1820,
	69, 1494,
	138, 1494,
	-2, 1680,
	-1, 1821,
	69, 1491,
	138, 1491,
	-2, 1572,
	-1, 1822,
	68, 1448,
	69, 1448,
	138, 1448,
	365, 1448,
	366, 1448,
	367, 1448,
	-2, 1527,
	-1, 1823,
	68, 1449,
	69, 1449,
	138, 1449,
	365, 1449,
	366, 1449,
	367, 1449,
	-2, 1529,
	-1, 1824,
	68, 1452,
	69, 1452,
	138, 1452,
	365, 1452,
	366, 1452,
	367, 1452,
	-2, 1662,
	-1, 1825,
	68, 1454,
	69, 1454,
	138, 1454,
	365, 1454,
	366, 1454,
	367, 1454,
	-2, 1645,
	-1, 1826,
	68, 1456,
	69, 1456,
	138, 1456,
	365, 1456,
	366, 1456,
	367, 1456,
	-2, 1594,
	-1, 1827,
	68, 1458,
	69, 1458,
	138, 1458,
	365, 1458,
	366, 1458,
	367, 1458,
	-2, 1577,
	-1, 1828,
	68, 1459,
	69, 1459,
	138, 1459,
	365, 1459,
	366, 1459,
	367, 1459,
	-2, 1578,
	-1, 1829,
	68, 1461,
	69, 1461,
	138, 1461,
	365, 1461,
	366, 1461,
	367, 1461,
	-2, 1526,
	-1, 1830,
	69, 1501,
	138, 1501,
	365, 1501,
	366, 1501,
	367, 1501,
	-2, 1555,
	-1, 1831,
	69, 1501,
	138, 1501,
	365, 1501,
	366, 1501,
	367, 1501,
	-2, 1568,
	-1, 1832,
	69, 1504,
	138, 1504,
	365, 1504,
	366, 1504,
	367, 1504,
	-2, 1551,
	-1, 1833,
	69, 1504,
	138, 1504,
	365, 1504,
	366, 1504,
	367, 1504,
	-2, 1610,
	-1, 1834,
	69, 1501,
	138, 1501,
	365, 1501,
	366, 1501,
	367, 1501,
	-2, 1630,
	-1, 1847,
	89, 905,
	133, 905,
	172, 905,
	175, 905,
	259, 905,
	-2, 898,
	-1, 1968,
	21, 650,
	-2, 744,
	-1, 2157,
	89, 905,
	133, 905,
	172, 905,
	175, 905,
	259, 905,
	-2, 899,
	-1, 2169,
	66, 560,
	138, 560,
	-2, 1044,
	-1, 2191,
	175, 905,
	283, 1123,
	-2, 1097,
	-1, 2472,
	175, 905,
	283, 1123,
	-2, 1098,
	-1, 2608,
	89, 905,
	133, 905,
	172, 905,
	175, 905,
	-2, 987,
	-1, 2611,
	89, 905,
	133, 905,
	172, 905,
	175, 905,
	-2, 987,
	-1, 2621,
	66, 560,
	138, 560,
	-2, 1045,
	-1, 2721,
	89, 905,
	133, 905,
	172, 905,
	175, 905,
	-2, 988,
	-1, 3039,
	69, 959,
	138, 959,
	-2, 905,
	-1, 3043,
	69, 959,
	138, 959,
	-2, 905,
	-1, 3057,
	69, 963,
	138, 963,
	-2, 905,
	-1, 3062,
	69, 964,
	138, 964,
	-2, 905,
}

const yyPrivate = 57344

const yyLast = 36872

var yyAct = [...]int{
	538, 1242, 1521, 3042, 3043, 2715, 174, 3051, 1304, 3022,
	519, 2981, 2925, 540, 2860, 2947, 527, 517, 2849, 2745,
	2969, 2486, 2693, 2877, 2688, 2878, 2756, 1781, 2841, 2864,
	1107, 2714, 2564, 2778, 2713, 2565, 656, 2805, 1001, 425,
	2691, 1232, 2768, 1479, 2850, 2852, 568, 2172, 431, 2720,
	436, 436, 1307, 2683, 1165, 2444, 436, 452, 461, 2266,
	2631, 461, 1597, 2592, 2267, 2251, 2473, 159, 1562, 2259,
	1962, 1526, 2501, 521, 1300, 2061, 1689, 1886, 1801, 2562,
	1658, 2550, 1889, 2288, 2533, 2262, 2417, 2420, 2415, 864,
	2187, 2265, 1065, 472, 1946, 2500, 767, 1609, 466, 1594,
	1856, 2158, 1799, 1791, 2364, 516, 1666, 2442, 510, 2102,
	511, 2325, 1667, 2060, 1659, 1228, 1440, 1632, 2010, 1907,
	1223, 1590, 1684, 773, 2308, 1963, 1685, 1565, 702, 2135,
	1081, 1158, 2140, 1508, 2193, 1951, 1887, 1517, 1466, 170,
	8, 1855, 6, 36, 1236, 53, 169, 7, 2027, 1298,
	818, 425, 761, 1686, 1717, 1303, 1233, 1448, 1990, 520,
	1197, 1797, 1241, 2445, 1174, 110, 1563, 1840, 430, 35,
	1144, 2447, 1696, 2446, 174, 509, 174, 1353, 809, 810,
	1337, 2103, 1289, 528, 1491, 1490, 881, 511, 1039, 1662,
	771, 424, 1665, 1204, 26, 1648, 760, 1622, 15, 1297,
	458, 13, 1083, 1970, 1465, 1115, 14, 701, 1143, 1116,
	1141, 1092, 445, 1358, 653, 32, 1359, 474, 23, 448,
	1096, 16, 10, 160, 1108, 1196, 475, 460, 1063, 153,
	1002, 156, 2358, 720, 1703, 655, 684, 699, 2063, 1693,
	2358, 805, 2557, 807, 732, 2016, 2014, 2013, 2011, 1211,
	1207, 457, 806, 801, 802, 453, 802, 802, 455, 158,
	432, 1128, 2681, 456, 2321, 1209, 939, 940, 941, 938,
	518, 2319, 454, 939, 940, 941, 938, 1637, 2774, 2769,
	2684, 2563, 1444, 441, 996, 2854, 1661, 654, 464, 157,
	664, 49, 149, 126, 1379, 2815, 157, 1481, 8, 157,
	777, 800, 2916, 2706, 902, 7, 2048, 2056, 1055, 1690,
	2705, 2825, 157, 157, 49, 149, 126, 2387, 157, 1256,
	774, 157, 470, 1701, 776, 157, 1844, 49, 149, 126,
	157, 512, 157, 109, 917, 471, 1253, 918, 1249, 2816,
	1988, 786, 783, 778, 782, 784, 936, 154, 1124, 746,
	2340, 1125, 745, 1274, 154, 1246, 1989, 1255, 2333, 1056,
	1976, 2295, 2296, 1975, 2294, 920, 1977, 109, 1574, 789,
	154, 154, 1145, 781, 1147, 1607, 1248, 741, 644, 154,
	643, 645, 646, 154, 647, 648, 665, 657, 154, 910,
	154, 2028, 912, 2701, 1290, 1575, 1576, 1294, 1452, 1453,
	1111, 2965, 2137, 1104, 1110, 1113, 1114, 1113, 1114, 1504,
	1393, 1306, 2138, 929, 934, 2881, 2882, 770, 769, 2857,
	913, 1293, 2857, 2912, 787, 2856, 2911, 2855, 2910, 2856,
	2855, 790, 1772, 2951, 2952, 436, 2776, 1127, 750, 2326,
	915, 2843, 2327, 2963, 2328, 436, 874, 2846, 779, 1375,
	2772, 873, 2566, 1372, 2915, 747, 2136, 1374, 1371, 1373,
	1377, 1378, 1309, 461, 461, 1376, 436, 884, 2043, 788,
	2779, 2780, 2781, 2782, 875, 2859, 2575, 1581, 869, 871,
	1210, 1208, 2566, 2593, 2429, 1585, 2843, 1285, 125, 1697,
	155, 2600, 1941, 2143, 1591, 906, 1645, 2711, 1839, 884,
	1295, 916, 812, 803, 804, 2431, 1217, 1216, 808, 780,
	147, 693, 2127, 2351, 2421, 2797, 749, 2353, 908, 2053,
	2700, 1292, 2800, 931, 972, 505, 2702, 868, 507, 2790,
	911, 914, 2791, 506, 2496, 2918, 2919, 2426, 2427, 2790,
	905, 772, 2791, 932, 933, 2682, 2320, 2785, 2255, 1944,
	1943, 2708, 1947, 2428, 2958, 922, 907, 2880, 923, 2152,
	2153, 2154, 2155, 897, 1702, 2441, 870, 2509, 2510, 1308,
	874, 2812, 2451, 919, 2869, 1006, 2165, 2425, 2655, 463,
	1102, 785, 2865, 462, 3036, 2793, 925, 1126, 748, 1136,
	3052, 2990, 2927, 458, 458, 2793, 2967, 777, 2923, 2924,
	469, 2927, 1091, 2962, 1382, 1383, 1384, 1385, 1386, 1387,
	1380, 1381, 927, 928, 1605, 1606, 2792, 774, 2997, 2832,
	2646, 776, 3001, 1918, 2972, 2635, 2792, 1917, 909, 1315,
	1318, 1319, 2758, 1291, 1706, 1708, 1709, 888, 2149, 2641,
	1316, 1938, 1939, 1005, 457, 457, 2235, 1154, 453, 453,
	1153, 455, 455, 886, 885, 742, 456, 456, 1106, 1105,
	1089, 921, 1691, 2579, 1691, 454, 454, 1691, 777, 877,
	878, 2357, 895, 2423, 1088, 1061, 431, 1064, 2746, 2747,
	2748, 2750, 2749, 1992, 1087, 886, 885, 3053, 774, 1036,
	890, 891, 776, 3023, 894, 3047, 3059, 926, 2806, 2439,
	865, 702, 879, 2403, 802, 2613, 459, 802, 802, 802,
	1718, 2814, 802, 978, 2679, 802, 1892, 1066, 470, 459,
	2917, 2840, 924, 2290, 2292, 2813, 2012, 2049, 1704, 1142,
	1980, 1906, 1694, 1212, 1692, 1905, 1071, 2356, 744, 1075,
	1074, 743, 1073, 1112, 2973, 902, 465, 436, 2411, 1138,
	1109, 1895, 1705, 2648, 425, 425, 1267, 1268, 1113, 1114,
	654, 2366, 2365, 425, 425, 50, 1078, 1169, 1169, 2126,
	436, 1067, 1068, 1069, 1070, 127, 1072, 2142, 50, 2707,
	1076, 1785, 127, 2057, 1059, 127, 1455, 1570, 461, 1064,
	431, 1103, 1200, 1200, 974, 975, 976, 977, 127, 127,
	1113, 1114, 1176, 174, 127, 896, 2432, 127, 1014, 1015,
	2422, 127, 425, 2798, 1592, 2354, 127, 1456, 127, 2968,
	2757, 3046, 1171, 2305, 2306, 2440, 2786, 1454, 901, 772,
	2787, 2146, 2147, 2226, 2227, 2712, 2786, 435, 435, 1582,
	2851, 1167, 1167, 443, 1062, 942, 2145, 1584, 1271, 1286,
	1891, 2642, 2643, 2637, 971, 1893, 1270, 2636, 1784, 1218,
	666, 1240, 980, 1243, 2424, 1317, 1930, 3058, 1251, 742,
	1707, 667, 2970, 2971, 2236, 2238, 2239, 2240, 2237, 1896,
	2728, 1041, 694, 2291, 985, 696, 697, 698, 1272, 1043,
	793, 798, 799, 1787, 1786, 3002, 1163, 1164, 937, 655,
	1257, 2170, 1169, 1482, 1169, 874, 1149, 1151, 658, 1894,
	1305, 1090, 670, 1912, 3065, 1161, 1162, 1287, 1100, 1057,
	1058, 1093, 1097, 1097, 1097, 1794, 1118, 1119, 2456, 1121,
	1122, 1123, 3064, 1137, 1098, 1099, 3055, 658, 1080, 2225,
	1221, 2530, 1224, 1225, 1093, 1093, 1129, 1130, 1795, 1796,
	3037, 902, 744, 1230, 1231, 743, 1117, 1482, 1193, 1120,
	2030, 2526, 3032, 669, 1213, 2609, 1625, 672, 671, 1775,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1152, 937, 1357, 3026, 1348, 1349, 1749, 3025,
	900, 1748, 3006, 1396, 1397, 1398, 2983, 1406, 1960, 2048,
	2171, 937, 2941, 1238, 1177, 3056, 1412, 441, 1247, 1413,
	777, 1961, 1254, 1235, 777, 1191, 1239, 1192, 1201, 1699,
	1187, 1420, 1421, 458, 2171, 1961, 1202, 937, 2892, 1415,
	1302, 3033, 751, 1281, 953, 952, 962, 963, 955, 956,
	957, 958, 959, 960, 961, 954, 2883, 2834, 1842, 1779,
	1320, 2132, 1283, 1751, 1699, 2129, 1037, 1299, 1699, 1258,
	937, 1699, 795, 796, 797, 2984, 436, 1438, 1464, 1169,
	1468, 2942, 1470, 1471, 457, 2833, 2830, 436, 453, 2530,
	702, 455, 899, 1480, 1280, 2829, 456, 1169, 1277, 1623,
	2035, 1276, 2828, 1138, 655, 454, 1259, 2802, 452, 1263,
	1992, 1441, 1288, 1690, 1094, 2827, 1961, 2801, 1279, 1405,
	1573, 1278, 1275, 2660, 1879, 2802, 2835, 1503, 1296, 939,
	940, 941, 938, 1199, 1199, 1509, 1509, 1780, 1138, 1301,
	1138, 1138, 2516, 1753, 436, 2285, 1464, 1464, 1681, 2108,
	1169, 1560, 1572, 1507, 1860, 2802, 1841, 2064, 1339, 1388,
	1389, 1728, 1392, 1603, 2802, 900, 425, 1079, 1169, 1463,
	1407, 2802, 2046, 1351, 1469, 1778, 1472, 1473, 1474, 939,
	940, 941, 938, 1414, 2802, 1416, 2802, 939, 940, 941,
	938, 1155, 1992, 436, 1464, 1169, 2039, 1614, 3020, 436,
	1617, 1618, 2985, 2037, 2624, 2457, 1621, 2032, 2025, 2023,
	1627, 2517, 1391, 2599, 1961, 1095, 2310, 174, 937, 2173,
	174, 174, 2051, 174, 2555, 2385, 937, 2050, 2042, 1511,
	1876, 1744, 866, 1727, 1467, 902, 867, 1555, 1556, 2021,
	1445, 1860, 872, 1417, 2019, 1729, 1680, 1346, 1347, 1630,
	1460, 1260, 1485, 983, 887, 867, 862, 860, 1586, 1406,
	1406, 1669, 1439, 893, 1859, 2033, 1406, 1406, 1602, 1510,
	1776, 1676, 2038, 1600, 1601, 954, 2033, 2026, 2024, 1310,
	1311, 1312, 1313, 1314, 1636, 1611, 2461, 1639, 1640, 1613,
	1642, 1578, 2348, 1580, 1593, 1480, 1616, 1477, 1476, 1169,
	1688, 1488, 1489, 1598, 1599, 1467, 3015, 1093, 2020, 1487,
	1757, 3003, 1492, 2020, 1494, 1495, 1756, 1747, 1498, 1499,
	1493, 1497, 1512, 1355, 1356, 1513, 1514, 1500, 2452, 1390,
	1738, 1737, 1097, 1860, 1736, 1094, 1698, 1400, 1682, 1775,
	1159, 1264, 1908, 1501, 1670, 1972, 1395, 1394, 668, 1084,
	1299, 1160, 1711, 1085, 1559, 1561, 1133, 2639, 1135, 2638,
	1139, 1140, 1587, 2531, 2521, 1483, 1484, 1577, 2870, 1579,
	2518, 1664, 1715, 1716, 1157, 1608, 2729, 2616, 1664, 937,
	1442, 2614, 2359, 2011, 1446, 937, 937, 1449, 2453, 1182,
	1183, 1184, 1185, 1186, 1612, 1188, 1189, 1190, 2257, 937,
	937, 1195, 2071, 937, 777, 1699, 2036, 1633, 1496, 1631,
	1265, 777, 2871, 1982, 867, 876, 2005, 1354, 458, 1724,
	2730, 2617, 1354, 1502, 774, 2615, 1505, 1506, 776, 1634,
	1754, 774, 2454, 1650, 2312, 776, 1095, 1761, 1418, 1419,
	1426, 1462, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 2909, 1671, 1674, 1156, 1675, 1673,
	938, 1205, 1679, 1634, 2650, 673, 941, 938, 510, 457,
	874, 1835, 2649, 453, 2329, 1802, 455, 2205, 2874, 2204,
	1683, 456, 2199, 436, 436, 436, 3000, 1857, 2197, 2628,
	454, 3041, 3029, 1345, 1678, 2991, 777, 1864, 1138, 2986,
	1442, 939, 940, 941, 938, 1442, 1442, 2928, 1869, 1342,
	1344, 1341, 1719, 1343, 2709, 1710, 774, 2900, 2597, 2247,
	776, 2872, 1138, 957, 958, 959, 960, 961, 954, 874,
	1900, 2999, 1712, 3030, 1885, 1339, 939, 940, 941, 938,
	1723, 2817, 2770, 505, 1134, 2556, 507, 1635, 2737, 2732,
	1638, 506, 2819, 1641, 2710, 2731, 1643, 1726, 2598, 2246,
	541, 550, 939, 940, 941, 938, 542, 1175, 549, 543,
	547, 546, 544, 545, 939, 940, 941, 938, 1965, 1965,
	1572, 1965, 1205, 953, 952, 962, 963, 955, 956, 957,
	958, 959, 960, 961, 954, 939, 940, 941, 938, 425,
	425, 2618, 1836, 2957, 2245, 2596, 2558, 874, 939, 940,
	941, 938, 1006, 1169, 436, 939, 940, 941, 938, 2015,
	2430, 551, 2243, 1713, 1714, 2344, 436, 1771, 1773, 1774,
	874, 431, 2324, 1911, 1200, 1802, 1572, 2323, 2230, 2000,
	2229, 2002, 2232, 1788, 2244, 174, 2228, 2220, 1969, 1967,
	1843, 1971, 2214, 548, 1909, 1910, 1878, 1913, 1914, 1915,
	1916, 2378, 2242, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1410, 1931, 1932, 1933, 1934, 1935,
	1005, 1936, 2231, 1865, 2211, 1411, 2210, 1986, 1978, 2209,
	1979, 2044, 1881, 1721, 1688, 1653, 1725, 1652, 1651, 1647,
	1884, 1169, 1883, 1169, 1999, 1169, 1877, 2377, 1983, 1984,
	874, 1646, 2006, 1872, 1261, 2058, 1054, 1873, 2260, 2416,
	1874, 2689, 2953, 1994, 2913, 777, 2838, 1097, 2799, 2771,
	939, 940, 941, 938, 2783, 1735, 2736, 1945, 1875, 1169,
	2089, 2735, 2719, 1742, 2687, 774, 2685, 2664, 2662, 776,
	2252, 1149, 1151, 2630, 1973, 2096, 2595, 2594, 2591, 2584,
	1169, 1755, 2578, 2062, 1758, 1759, 1760, 2611, 2525, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 2054, 1987, 2098,
	952, 962, 963, 955, 956, 957, 958, 959, 960, 961,
	954, 1995, 2523, 2088, 1998, 2514, 1866, 1867, 1615, 1996,
	2513, 2100, 2408, 2407, 874, 2355, 1870, 1871, 2322, 2130,
	2610, 2299, 2241, 1167, 2097, 2075, 955, 956, 957, 958,
	959, 960, 961, 954, 1861, 2233, 1740, 2055, 939, 940,
	941, 938, 2223, 2221, 1167, 2217, 2069, 2073, 1782, 1783,
	2216, 2215, 1777, 2041, 600, 599, 2608, 2047, 2119, 1655,
	2052, 2045, 1169, 1649, 1451, 2150, 1299, 1262, 1013, 1464,
	1009, 1008, 984, 1461, 863, 2169, 939, 940, 941, 938,
	2583, 2175, 2570, 2561, 1475, 2007, 2560, 2104, 2065, 2066,
	1739, 2549, 2109, 939, 940, 941, 938, 2184, 2079, 2548,
	2462, 2133, 1206, 874, 939, 940, 941, 938, 1885, 2383,
	2863, 2196, 2376, 939, 940, 941, 938, 2368, 2363, 2201,
	2202, 2307, 2203, 2131, 2128, 157, 2206, 1509, 149, 126,
	1442, 2022, 1442, 939, 940, 941, 938, 2018, 2017, 2159,
	1997, 1515, 1965, 1762, 1752, 1225, 2120, 1750, 1746, 2004,
	1442, 1442, 2166, 1745, 1230, 1231, 2248, 1743, 2123, 1734,
	2160, 1731, 1730, 1654, 425, 1437, 1436, 1435, 1464, 874,
	1572, 1572, 1572, 1572, 2268, 1199, 1409, 2176, 1408, 2139,
	2695, 874, 1572, 154, 2191, 1965, 2268, 1399, 157, 1181,
	1610, 2194, 1179, 3054, 3014, 2194, 1610, 3008, 1238, 2998,
	2148, 1169, 2195, 939, 940, 941, 938, 2995, 1235, 2068,
	2993, 1239, 2899, 436, 436, 2836, 2168, 1467, 8, 1003,
	1220, 2174, 2754, 2742, 2738, 7, 2673, 2671, 174, 2657,
	2656, 2653, 2652, 174, 2645, 2603, 1229, 2186, 1222, 1082,
	2281, 2249, 2200, 2192, 2163, 2162, 154, 2198, 2161, 1234,
	1237, 2212, 2213, 1226, 1406, 2118, 1406, 2218, 2219, 2339,
	2208, 2031, 1981, 2343, 1937, 1858, 2190, 2222, 1340, 1169,
	154, 1619, 2350, 1459, 1458, 1284, 2072, 1250, 1227, 1038,
	1035, 2254, 1034, 1033, 2090, 2091, 1032, 1031, 2177, 1030,
	2253, 1029, 2093, 2094, 1028, 2313, 2181, 2182, 2258, 2179,
	2317, 2183, 1027, 1026, 1025, 2099, 1024, 1023, 1022, 2282,
	2284, 1021, 655, 2283, 1441, 2280, 2256, 1020, 1019, 2338,
	1018, 1017, 1016, 2297, 2300, 1012, 1011, 1442, 1010, 2095,
	2121, 2122, 1449, 1007, 1000, 2336, 2269, 2270, 2271, 2272,
	999, 2342, 997, 996, 995, 2371, 2314, 2373, 2315, 2311,
	994, 993, 2352, 874, 992, 2293, 991, 990, 1802, 989,
	2419, 988, 2337, 2347, 987, 2330, 2335, 986, 2332, 982,
	2434, 981, 436, 945, 946, 947, 948, 949, 950, 951,
	943, 904, 874, 874, 874, 861, 2178, 1885, 1885, 1885,
	2180, 1572, 1857, 2361, 2460, 2346, 2334, 2360, 777, 2891,
	2464, 2889, 2367, 2341, 2887, 777, 939, 940, 941, 938,
	874, 2374, 2375, 2885, 2499, 2469, 2502, 2654, 2502, 2502,
	2372, 2369, 2370, 2534, 2535, 2507, 1863, 1846, 892, 2410,
	2933, 2388, 2931, 1169, 1169, 2389, 2390, 2391, 2392, 2879,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2537, 2159,
	2151, 1993, 2404, 2409, 1657, 2412, 903, 2277, 2275, 2458,
	2540, 2539, 2278, 2276, 1732, 2435, 2279, 2274, 1957, 1958,
	436, 2694, 553, 111, 2273, 2419, 2438, 2455, 111, 2437,
	1849, 1850, 1851, 2492, 1464, 1464, 2498, 2511, 2512, 2497,
	2448, 2449, 2459, 96, 939, 940, 941, 938, 2414, 433,
	777, 2470, 2676, 52, 2675, 1868, 51, 1167, 1167, 2659,
	3040, 2040, 2505, 2503, 2504, 962, 963, 955, 956, 957,
	958, 959, 960, 961, 954, 2188, 442, 2189, 1553, 111,
	2581, 2089, 939, 940, 941, 938, 2034, 2405, 2406, 2674,
	2559, 939, 940, 941, 938, 2125, 2029, 438, 2381, 2468,
	437, 777, 2413, 939, 940, 941, 938, 439, 1214, 2059,
	440, 2520, 2519, 2316, 1040, 2318, 2524, 2515, 1244, 2527,
	2528, 939, 940, 941, 938, 2380, 2538, 436, 1953, 1956,
	1957, 1958, 1954, 1442, 1955, 1959, 1782, 1783, 1442, 1837,
	1620, 2542, 2379, 2545, 2546, 2547, 2117, 898, 939, 940,
	941, 938, 2858, 2185, 690, 2134, 2467, 1853, 2522, 1478,
	1457, 1175, 2944, 2554, 2116, 939, 940, 941, 938, 939,
	940, 941, 938, 1610, 2740, 2362, 2115, 775, 1942, 3012,
	1558, 111, 1395, 1394, 2571, 2080, 1132, 939, 940, 941,
	938, 2572, 1052, 1053, 2574, 1131, 111, 2382, 111, 939,
	940, 941, 938, 2544, 2577, 1050, 1051, 930, 2585, 2573,
	1048, 1049, 2607, 859, 855, 856, 857, 858, 2114, 2085,
	1991, 2084, 2083, 2081, 1046, 1047, 1965, 1572, 2621, 953,
	952, 962, 963, 955, 956, 957, 958, 959, 960, 961,
	954, 939, 940, 941, 938, 2463, 2113, 1042, 1677, 2465,
	2466, 1169, 1086, 3009, 2587, 2921, 2906, 2590, 2904, 2866,
	2589, 2848, 2847, 2112, 2629, 2845, 2837, 436, 2765, 939,
	940, 941, 938, 2764, 2686, 2602, 2499, 2586, 2623, 2568,
	692, 2567, 687, 2552, 677, 2082, 939, 940, 941, 938,
	1045, 689, 688, 2111, 658, 2620, 2619, 1464, 2551, 2309,
	1482, 874, 2506, 2935, 2934, 2934, 2268, 2345, 675, 2627,
	1848, 1733, 681, 889, 2492, 2935, 939, 940, 941, 938,
	2497, 1101, 2647, 2569, 2678, 2632, 2301, 174, 2604, 2605,
	2606, 161, 3, 60, 2529, 2, 2667, 1146, 1974, 1604,
	874, 1173, 1, 1450, 663, 2268, 2286, 2287, 2658, 2541,
	2543, 2289, 1695, 2661, 2663, 1940, 686, 1838, 2703, 2433,
	685, 1077, 695, 1401, 2669, 2668, 674, 1269, 792, 883,
	680, 1266, 2110, 882, 874, 1169, 1169, 2107, 880, 1352,
	874, 2722, 555, 1660, 2722, 1885, 2250, 678, 2666, 2224,
	2761, 2943, 2665, 2980, 2680, 939, 940, 941, 938, 2690,
	939, 940, 941, 938, 2898, 2946, 1282, 539, 676, 2839,
	2775, 2704, 2167, 2902, 2777, 2692, 2086, 2087, 1700, 935,
	2331, 716, 693, 874, 874, 591, 566, 874, 874, 2717,
	998, 2726, 1252, 2725, 1245, 2723, 2718, 2386, 794, 2623,
	565, 2601, 1480, 2144, 2762, 2751, 2304, 2811, 679, 1167,
	2632, 791, 2766, 2767, 717, 1644, 2773, 2743, 2744, 1215,
	1219, 2752, 2753, 2696, 2739, 2106, 2727, 2612, 2759, 2450,
	2164, 3050, 111, 111, 775, 3039, 2796, 965, 3021, 969,
	2580, 3007, 2926, 3035, 2961, 2760, 2789, 2582, 939, 940,
	941, 938, 2996, 2699, 2808, 966, 968, 964, 2105, 967,
	953, 952, 962, 963, 955, 956, 957, 958, 959, 960,
	961, 954, 2697, 874, 2784, 2788, 2698, 2794, 2101, 2989,
	691, 939, 940, 941, 938, 874, 2622, 2803, 2922, 2092,
	476, 1583, 2625, 423, 2810, 2626, 2809, 758, 2755, 1656,
	2818, 939, 940, 941, 938, 970, 477, 2826, 2821, 1862,
	2302, 2303, 939, 940, 941, 938, 2914, 704, 2741, 2831,
	953, 952, 962, 963, 955, 956, 957, 958, 959, 960,
	961, 954, 2853, 874, 2070, 659, 660, 661, 662, 682,
	2867, 2844, 2842, 659, 660, 661, 662, 1845, 658, 683,
	2157, 2156, 1321, 2875, 944, 1338, 658, 939, 940, 941,
	938, 2862, 1350, 2401, 2861, 2402, 2893, 2896, 979, 515,
	2868, 1722, 2884, 2886, 2888, 2890, 2141, 2487, 2298, 2873,
	742, 1948, 59, 58, 1442, 939, 940, 941, 938, 57,
	2822, 56, 2897, 1442, 1626, 182, 2670, 557, 1180, 2672,
	2905, 2903, 2907, 2908, 2901, 1953, 1956, 1957, 1958, 1954,
	181, 1955, 1959, 2677, 2895, 2948, 537, 536, 535, 534,
	533, 2920, 1952, 1950, 1949, 1567, 1566, 1624, 2508, 2207,
	2950, 2929, 2932, 2930, 1904, 2936, 1897, 2937, 1516, 2938,
	1044, 2939, 2876, 2949, 2940, 2823, 2824, 2733, 2734, 2644,
	2234, 2640, 874, 2634, 1550, 2721, 2853, 2959, 2955, 2471,
	2472, 2954, 2478, 744, 1852, 817, 743, 813, 815, 2436,
	816, 814, 2078, 2979, 2074, 1880, 2964, 2966, 2443, 1793,
	1792, 2975, 2976, 2977, 2978, 2982, 2974, 1790, 1789, 2987,
	1060, 874, 2795, 2588, 1800, 1798, 1305, 2536, 2532, 2988,
	729, 1668, 1447, 2124, 1568, 1564, 1847, 87, 705, 86,
	94, 2992, 138, 2994, 46, 2950, 3005, 166, 1379, 165,
	168, 167, 164, 2008, 874, 2009, 874, 163, 2949, 1305,
	3004, 1305, 3011, 1203, 3013, 707, 162, 2724, 652, 37,
	33, 12, 11, 2982, 3017, 874, 3016, 34, 21, 22,
	1305, 3031, 3024, 3028, 3034, 1178, 20, 1273, 19, 25,
	442, 31, 30, 104, 103, 2956, 29, 1610, 102, 101,
	100, 99, 3045, 3038, 98, 28, 3049, 3048, 2804, 2067,
	18, 41, 40, 3057, 39, 111, 3060, 9, 93, 91,
	3045, 3063, 3062, 27, 3061, 3049, 92, 89, 728, 727,
	2820, 90, 88, 953, 952, 962, 963, 955, 956, 957,
	958, 959, 960, 961, 954, 726, 71, 70, 69, 84,
	83, 82, 81, 80, 703, 79, 77, 78, 715, 68,
	67, 66, 65, 64, 833, 706, 737, 75, 85, 76,
	74, 73, 72, 63, 62, 3010, 61, 111, 123, 124,
	122, 111, 121, 120, 119, 985, 118, 117, 42, 733,
	43, 44, 111, 45, 134, 133, 135, 137, 139, 136,
	131, 129, 111, 1375, 2576, 132, 130, 1372, 128, 54,
	17, 1374, 1371, 1373, 1377, 1378, 24, 4, 0, 1376,
	0, 0, 0, 734, 738, 953, 952, 962, 963, 955,
	956, 957, 958, 959, 960, 961, 954, 0, 0, 0,
	723, 0, 721, 725, 741, 0, 0, 0, 722, 719,
	718, 0, 724, 709, 710, 708, 711, 712, 713, 714,
	0, 739, 0, 740, 0, 0, 0, 0, 821, 0,
	0, 0, 833, 0, 735, 736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 841, 845,
	847, 849, 851, 852, 854, 0, 859, 855, 856, 857,
	858, 0, 836, 837, 838, 839, 819, 820, 842, 0,
	822, 731, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 834, 840, 0, 0, 0, 0, 0, 0,
	0, 844, 846, 848, 850, 853, 0, 0, 0, 0,
	0, 0, 0, 0, 2651, 0, 0, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1382, 1383,
	1384, 1385, 1386, 1387, 1380, 1381, 0, 0, 835, 0,
	0, 0, 0, 0, 0, 0, 821, 0, 0, 0,
	811, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3019, 841, 845, 847, 849,
	851, 852, 854, 0, 859, 855, 856, 857, 858, 2384,
	836, 837, 838, 839, 819, 820, 842, 0, 822, 0,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	834, 840, 0, 0, 0, 0, 0, 0, 0, 844,
	846, 848, 850, 853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 1571, 0, 0, 0, 0, 953,
	952, 962, 963, 955, 956, 957, 958, 959, 960, 961,
	954, 0, 0, 0, 0, 0, 835, 953, 952, 962,
	963, 955, 956, 957, 958, 959, 960, 961, 954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2076,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	0, 0, 111, 111, 0, 111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 775, 0, 529, 0, 0, 0, 266, 775, 0,
	291, 0, 0, 0, 0, 564, 0, 111, 350, 305,
	0, 0, 0, 0, 623, 631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 0, 0, 554,
	600, 599, 541, 550, 0, 0, 244, 180, 542, 0,
	549, 543, 547, 546, 544, 545, 0, 615, 0, 0,
	0, 0, 0, 0, 513, 526, 0, 530, 843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 970, 0, 0, 0, 574, 0, 525,
	0, 0, 569, 551, 552, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 548, 572, 576, 260, 637,
	570, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 638, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 843, 0, 0, 0,
	0, 0, 0, 0, 567, 0, 0, 0, 381, 0,
	0, 621, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 571, 0, 341, 323, 634, 514, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 1403, 1402, 1404, 393,
	273, 227, 228, 429, 619, 319, 0, 0, 633, 614,
	616, 617, 620, 624, 625, 626, 627, 628, 630, 632,
	636, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 575, 309, 310, 311, 312, 622, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 1571, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 398, 399,
	272, 278, 417, 280, 248, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 246, 373, 349,
	298, 0, 833, 644, 618, 643, 645, 646, 642, 647,
	648, 629, 532, 0, 579, 640, 639, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 292, 0, 333, 271, 607, 584, 585,
	586, 531, 587, 582, 583, 608, 577, 604, 605, 556,
	580, 588, 603, 589, 606, 609, 610, 649, 650, 595,
	651, 592, 611, 602, 601, 590, 578, 612, 613, 563,
	558, 593, 594, 581, 596, 597, 598, 559, 560, 561,
	562, 0, 0, 0, 389, 390, 391, 413, 375, 0,
	426, 0, 0, 0, 0, 0, 821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 841, 845, 847, 849,
	851, 852, 854, 0, 859, 855, 856, 857, 858, 0,
	836, 837, 838, 839, 819, 820, 842, 0, 822, 0,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	834, 840, 2476, 0, 0, 0, 0, 0, 0, 844,
	846, 848, 850, 853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2488, 0, 0,
	0, 111, 0, 0, 0, 0, 0, 0, 0, 0,
	2479, 0, 0, 0, 0, 0, 835, 2474, 0, 0,
	0, 0, 2494, 2495, 0, 0, 0, 0, 2475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1571, 1571, 1571, 1571, 0, 0, 0, 0,
	0, 0, 0, 0, 1571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 111, 2493, 0, 1890, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 0, 0, 0, 0,
	0, 0, 111, 2484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2481, 2485, 2483, 2482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 2490, 2491, 0, 266, 1443, 0, 291,
	0, 0, 0, 0, 564, 0, 0, 350, 305, 0,
	0, 0, 0, 623, 631, 0, 0, 0, 0, 0,
	0, 0, 1595, 0, 0, 522, 843, 111, 554, 600,
	599, 541, 550, 2496, 0, 244, 180, 542, 0, 549,
	543, 547, 546, 544, 545, 2477, 615, 0, 0, 0,
	0, 2489, 0, 513, 526, 0, 530, 0, 0, 0,
	0, 0, 0, 1571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	523, 524, 0, 0, 0, 0, 574, 0, 525, 0,
	0, 1596, 551, 552, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 548, 572, 576, 260, 637, 570,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 638, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 0, 0, 0, 381, 0, 0,
	621, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 571, 0, 341, 323, 634, 514, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 619, 319, 0, 0, 633, 614, 616,
	617, 620, 624, 625, 626, 627, 628, 630, 632, 636,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 385, 0, 0, 0, 1571,
	0, 575, 309, 310, 311, 312, 622, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 644, 618, 643, 645, 646, 642, 647, 648,
	629, 532, 0, 579, 640, 639, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	229, 0, 292, 0, 333, 271, 607, 584, 585, 586,
	531, 587, 582, 583, 608, 577, 604, 605, 556, 580,
	588, 603, 589, 606, 609, 610, 649, 650, 595, 651,
	592, 611, 602, 601, 590, 578, 612, 613, 563, 558,
	593, 594, 581, 596, 597, 598, 559, 560, 561, 562,
	157, 358, 573, 389, 390, 391, 413, 375, 0, 426,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 973, 0, 0,
	350, 305, 0, 0, 0, 0, 623, 631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 0,
	0, 554, 600, 599, 541, 550, 0, 0, 244, 180,
	542, 0, 549, 543, 547, 546, 544, 545, 0, 615,
	0, 0, 0, 0, 0, 0, 513, 526, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 524, 0, 0, 0, 0, 574,
	0, 525, 0, 0, 569, 551, 552, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 548, 572, 576,
	260, 637, 570, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 638, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 0, 0, 0,
	381, 0, 0, 621, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 571, 0, 341, 323, 634, 514,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 619, 319, 0, 0,
	633, 614, 616, 617, 620, 624, 625, 626, 627, 628,
	630, 632, 636, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 575, 309, 310, 311, 312, 622,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 248, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 246,
	373, 349, 298, 0, 0, 644, 618, 643, 645, 646,
	642, 647, 648, 629, 532, 0, 579, 640, 639, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 292, 127, 333, 271, 607,
	584, 585, 586, 531, 587, 582, 583, 608, 577, 604,
	605, 556, 580, 588, 603, 589, 606, 609, 610, 649,
	650, 595, 651, 592, 611, 602, 601, 590, 578, 612,
	613, 563, 558, 593, 594, 581, 596, 597, 598, 559,
	560, 561, 562, 358, 573, 0, 389, 390, 391, 413,
	375, 0, 426, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 266, 3018, 0, 291, 0, 0, 0, 0, 564,
	0, 0, 350, 305, 0, 0, 0, 0, 623, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 0, 0, 554, 600, 599, 541, 550, 0, 0,
	244, 180, 542, 0, 549, 543, 547, 546, 544, 545,
	0, 615, 0, 0, 0, 0, 0, 0, 513, 526,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 523, 524, 0, 0, 0,
	0, 574, 0, 525, 0, 0, 569, 551, 552, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 548,
	572, 576, 260, 637, 570, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	638, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 567, 0,
	0, 0, 381, 0, 0, 621, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 571, 0, 341, 323,
	634, 514, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 619, 319,
	0, 0, 633, 614, 616, 617, 620, 624, 625, 626,
	627, 628, 630, 632, 636, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 575, 309, 310, 311,
	312, 622, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 248, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 246, 373, 349, 298, 0, 0, 644, 618, 643,
	645, 646, 642, 647, 648, 629, 532, 0, 579, 640,
	639, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 292, 0, 333,
	271, 607, 584, 585, 586, 531, 587, 582, 583, 608,
	577, 604, 605, 556, 580, 588, 603, 589, 606, 609,
	610, 649, 650, 595, 651, 592, 611, 602, 601, 590,
	578, 612, 613, 563, 558, 593, 594, 581, 596, 597,
	598, 559, 560, 561, 562, 358, 573, 0, 389, 390,
	391, 413, 375, 0, 426, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 266, 1443, 0, 291, 0, 0, 0,
	0, 564, 0, 0, 350, 305, 0, 0, 0, 0,
	623, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 522, 0, 0, 554, 600, 599, 541, 550,
	0, 0, 244, 180, 542, 0, 549, 543, 547, 546,
	544, 545, 0, 615, 0, 0, 0, 0, 0, 0,
	513, 526, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 524, 0,
	0, 0, 0, 574, 0, 525, 0, 0, 569, 551,
	552, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 548, 572, 576, 260, 637, 570, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 638, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 0, 0, 0, 381, 0, 0, 621, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 571, 0,
	341, 323, 634, 514, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	619, 319, 0, 0, 633, 614, 616, 617, 620, 624,
	625, 626, 627, 628, 630, 632, 636, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 575, 309,
	310, 311, 312, 622, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	248, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 246, 373, 349, 298, 0, 0, 644,
	618, 643, 645, 646, 642, 647, 648, 629, 532, 0,
	579, 640, 639, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 292,
	0, 333, 271, 607, 584, 585, 586, 531, 587, 582,
	583, 608, 577, 604, 605, 556, 580, 588, 603, 589,
	606, 609, 610, 649, 650, 595, 651, 592, 611, 602,
	601, 590, 578, 612, 613, 563, 558, 593, 594, 581,
	596, 597, 598, 559, 560, 561, 562, 358, 573, 0,
	389, 390, 391, 413, 375, 0, 426, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 564, 0, 0, 350, 305, 0, 0,
	0, 0, 623, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 0, 0, 554, 600, 599,
	541, 550, 0, 0, 244, 180, 542, 0, 549, 543,
	547, 546, 544, 545, 0, 615, 0, 0, 0, 0,
	0, 0, 513, 526, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 1198, 0, 0, 0, 574, 0, 525, 0, 0,
	569, 551, 552, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 548, 572, 576, 260, 637, 570, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 638, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 0, 0, 0, 381, 0, 0, 621,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	571, 0, 341, 323, 634, 514, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 619, 319, 0, 0, 633, 614, 616, 617,
	620, 624, 625, 626, 627, 628, 630, 632, 636, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	635, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	575, 309, 310, 311, 312, 622, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 644, 618, 643, 645, 646, 642, 647, 648, 629,
	532, 0, 579, 640, 639, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 607, 584, 585, 586, 531,
	587, 582, 583, 608, 577, 604, 605, 556, 580, 588,
	603, 589, 606, 609, 610, 649, 650, 595, 651, 592,
	611, 602, 601, 590, 578, 612, 613, 563, 558, 593,
	594, 581, 596, 597, 598, 559, 560, 561, 562, 0,
	0, 0, 389, 390, 391, 413, 375, 0, 426, 358,
	573, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 564, 0, 0, 350, 305,
	0, 0, 0, 0, 623, 631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 0, 0, 554,
	600, 599, 541, 550, 0, 0, 244, 180, 542, 0,
	549, 543, 547, 546, 544, 545, 0, 615, 0, 0,
	0, 0, 0, 0, 513, 526, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 0, 0, 0, 0, 574, 0, 525,
	0, 0, 569, 551, 552, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 548, 572, 576, 260, 637,
	570, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 638, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 0, 0, 0, 381, 0,
	0, 621, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 571, 0, 341, 323, 634, 514, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 619, 319, 0, 0, 633, 614,
	616, 617, 620, 624, 625, 626, 627, 628, 630, 632,
	636, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 575, 309, 310, 311, 312, 622, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 248, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 246, 373, 349,
	298, 0, 0, 644, 618, 643, 645, 646, 642, 647,
	648, 629, 532, 0, 579, 640, 639, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 292, 0, 333, 271, 607, 584, 585,
	586, 531, 587, 582, 583, 608, 577, 604, 605, 556,
	580, 588, 603, 589, 606, 609, 610, 649, 650, 595,
	651, 592, 611, 602, 601, 590, 578, 612, 613, 563,
	558, 593, 594, 581, 596, 597, 598, 559, 560, 561,
	562, 358, 573, 0, 389, 390, 391, 413, 375, 0,
	426, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 564, 0, 0,
	350, 305, 0, 0, 0, 0, 623, 631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 0,
	0, 554, 600, 599, 541, 550, 0, 0, 244, 180,
	542, 0, 549, 543, 547, 546, 544, 545, 0, 615,
	0, 0, 0, 0, 0, 0, 513, 526, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 524, 0, 0, 0, 0, 574,
	0, 525, 0, 0, 569, 551, 552, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 548, 572, 576,
	260, 637, 570, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 638, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 0, 0, 0,
	381, 0, 0, 621, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 571, 0, 341, 323, 634, 514,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 619, 319, 0, 0,
	633, 614, 616, 617, 620, 624, 625, 626, 627, 628,
	630, 632, 636, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 575, 309, 310, 311, 312, 622,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 248, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 246,
	373, 349, 298, 0, 0, 644, 618, 643, 645, 646,
	642, 647, 648, 629, 532, 0, 579, 640, 639, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 292, 0, 333, 271, 607,
	584, 585, 586, 531, 587, 582, 583, 608, 577, 604,
	605, 556, 580, 588, 603, 589, 606, 609, 610, 649,
	650, 595, 651, 592, 611, 602, 601, 590, 578, 612,
	613, 563, 558, 593, 594, 581, 596, 597, 598, 559,
	560, 561, 562, 358, 573, 0, 389, 390, 391, 413,
	375, 0, 426, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 1322, 0, 0, 0, 529, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 564,
	0, 0, 350, 305, 0, 0, 0, 0, 623, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 0, 0, 554, 600, 599, 541, 550, 0, 0,
	244, 180, 542, 0, 549, 543, 547, 546, 544, 545,
	0, 615, 0, 0, 0, 0, 0, 0, 0, 526,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 523, 524, 0, 0, 0,
	0, 574, 0, 525, 0, 0, 569, 551, 552, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 548,
	572, 576, 260, 637, 570, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	638, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 567, 0,
	0, 0, 381, 0, 0, 621, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 571, 0, 341, 323,
	634, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 1323, 1324, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 619, 319,
	0, 0, 633, 614, 616, 617, 620, 624, 625, 626,
	627, 628, 630, 632, 636, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 575, 309, 310, 311,
	312, 622, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 248, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 246, 373, 349, 298, 0, 0, 644, 618, 643,
	645, 646, 642, 647, 648, 629, 532, 0, 579, 640,
	639, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 292, 0, 333,
	271, 607, 584, 585, 586, 531, 587, 582, 583, 608,
	577, 604, 605, 556, 580, 588, 603, 589, 606, 609,
	610, 649, 650, 595, 651, 592, 611, 602, 601, 590,
	578, 612, 613, 563, 558, 593, 594, 581, 596, 597,
	598, 559, 560, 561, 562, 358, 573, 0, 389, 390,
	391, 413, 375, 0, 426, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 564, 0, 0, 350, 305, 0, 0, 0, 0,
	623, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 600, 599, 541, 550,
	0, 0, 244, 180, 542, 0, 549, 543, 547, 546,
	544, 545, 0, 615, 0, 0, 0, 0, 0, 0,
	513, 526, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 524, 0,
	0, 0, 0, 574, 0, 525, 0, 0, 569, 551,
	552, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 548, 572, 576, 260, 637, 570, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 638, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 0, 0, 0, 381, 0, 0, 621, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 571, 0,
	341, 323, 634, 514, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	619, 319, 0, 0, 633, 614, 616, 617, 620, 624,
	625, 626, 627, 628, 630, 632, 636, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 575, 309,
	310, 311, 312, 622, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	248, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 246, 373, 349, 298, 0, 0, 644,
	618, 643, 645, 646, 642, 647, 648, 629, 532, 0,
	579, 640, 639, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 292,
	0, 333, 271, 607, 584, 585, 586, 531, 587, 582,
	583, 608, 577, 604, 605, 556, 580, 588, 603, 589,
	606, 609, 610, 649, 650, 595, 651, 592, 611, 602,
	601, 590, 578, 612, 613, 563, 558, 593, 594, 581,
	596, 597, 598, 559, 560, 561, 562, 358, 573, 0,
	389, 390, 391, 413, 375, 0, 426, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 564, 0, 0, 350, 305, 0, 0,
	0, 0, 623, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 0, 0, 554, 600, 599,
	541, 550, 0, 0, 244, 180, 542, 0, 549, 543,
	547, 546, 544, 545, 0, 615, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 0, 0, 0, 0, 574, 0, 525, 0, 0,
	569, 551, 552, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 548, 572, 576, 260, 637, 570, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 638, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 0, 0, 0, 381, 0, 0, 621,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	571, 0, 341, 323, 634, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 619, 319, 0, 0, 633, 614, 616, 617,
	620, 624, 625, 626, 627, 628, 630, 632, 636, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	635, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	575, 309, 310, 311, 312, 622, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 644, 618, 643, 645, 646, 642, 647, 648, 629,
	532, 0, 579, 640, 639, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 607, 584, 585, 586, 531,
	587, 582, 583, 608, 577, 604, 605, 556, 580, 588,
	603, 589, 606, 609, 610, 649, 650, 595, 651, 592,
	611, 602, 601, 590, 578, 612, 613, 563, 558, 593,
	594, 581, 596, 597, 598, 559, 560, 561, 562, 0,
	0, 0, 389, 390, 391, 413, 375, 0, 426, 157,
	358, 49, 149, 126, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 0, 0, 0, 0, 0, 142, 0, 266, 0,
	151, 291, 0, 0, 0, 0, 109, 0, 0, 350,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 154, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 244, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 0, 368, 396, 260,
	387, 0, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 412, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 125, 148,
	155, 0, 95, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 172, 0, 0, 0, 354, 0, 0, 290,
	147, 141, 140, 397, 0, 341, 323, 55, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 0, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 143, 144,
	145, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 376, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 175, 0,
	0, 422, 183, 0, 0, 0, 146, 0, 184, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 402, 309, 310, 311, 312, 276, 0,
	249, 405, 334, 107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 48, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 127, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 0, 0, 0, 389, 390, 391, 413, 375,
	358, 185, 38, 173, 176, 178, 177, 0, 47, 5,
	0, 321, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 350,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1004, 0, 0,
	179, 0, 0, 541, 550, 0, 0, 244, 180, 542,
	0, 549, 543, 547, 546, 544, 545, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 0, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 548, 368, 396, 260,
	387, 0, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 412, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 397, 0, 341, 323, 0, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 0, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 429, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 428, 0, 0, 0, 0, 0, 427, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 402, 309, 310, 311, 312, 276, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 0, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 157, 358, 49, 149, 126, 0, 0, 0,
	0, 0, 0, 0, 321, 446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	451, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 447, 449, 249, 405, 334, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 248, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 246, 373, 349, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 292, 127, 333,
	271, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 0, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 0,
	0, 223, 224, 225, 226, 358, 0, 0, 389, 390,
	391, 413, 375, 0, 426, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 833, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 821, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 1822, 1824,
	1825, 1826, 1827, 1828, 1829, 0, 1834, 1830, 1831, 1832,
	1833, 0, 1817, 1818, 1819, 1820, 819, 1803, 1823, 0,
	1804, 317, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1821, 329, 295, 330, 282, 307, 306,
	308, 844, 846, 848, 850, 853, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 1816, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	248, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 246, 373, 349, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 843, 292,
	0, 333, 271, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 0, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 0, 0, 223, 224, 225, 226, 358, 0, 0,
	389, 390, 391, 413, 375, 0, 426, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 1892, 1895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1896, 381, 0, 0, 0,
	1891, 1882, 1890, 354, 1888, 1893, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 1894,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 0, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 0, 0, 223, 224, 225, 226, 358,
	0, 0, 389, 390, 391, 413, 375, 0, 426, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 1892, 1895,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1896, 381, 0,
	0, 0, 1891, 0, 1890, 354, 1888, 1893, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 1894, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 248, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 246, 373, 349,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 292, 0, 333, 271, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	426, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 1629, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 939, 940, 941, 938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 248, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 246,
	373, 349, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 292, 0, 333, 271, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 0, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 0, 0, 223,
	224, 225, 226, 358, 0, 0, 389, 390, 391, 413,
	375, 0, 426, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 757, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 764, 765, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 752, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 744, 379, 239, 743, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	755, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 756, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 759, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 248, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 766, 753, 762, 754, 288, 294, 337, 382, 322,
	342, 246, 373, 349, 763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 292, 0, 333,
	271, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 0, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 0,
	0, 223, 224, 225, 226, 358, 0, 0, 389, 390,
	391, 413, 375, 0, 426, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 1899, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1898, 381, 0, 0, 0, 1903, 1901,
	0, 354, 0, 1902, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	248, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 246, 373, 349, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 292,
	0, 333, 271, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 0, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 0, 0, 223, 224, 225, 226, 157, 358, 0,
	389, 390, 391, 413, 375, 0, 426, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 109, 0, 0, 350, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 1672, 0, 179, 0,
	0, 0, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 0, 368, 396, 260, 387, 0,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 412, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 397, 0, 341, 323, 0, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 402, 309, 310, 311, 312, 276, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 127, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	157, 358, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 109, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 1663,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 248, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 246,
	373, 349, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 292, 127, 333, 271, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 0, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 0, 0, 223,
	224, 225, 226, 157, 358, 0, 389, 390, 391, 413,
	375, 0, 426, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	109, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1569, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 309, 310,
	311, 312, 276, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 127,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 764, 765, 0,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 744, 379, 239,
	743, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 402,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 766, 1588, 762, 1589, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 2261, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 350, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 0, 368, 396, 260, 387, 0,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 412, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 2264, 0,
	0, 2263, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 397, 0, 341, 323, 0, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 402, 309, 310, 311, 312, 276, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 1172,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 350,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 1170, 0, 0, 0, 244, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1168, 0, 0, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 0, 368, 396, 260,
	387, 0, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 412, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 397, 0, 341, 323, 0, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 0, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 429, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 428, 0, 0, 0, 0, 0, 427, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 402, 309, 310, 311, 312, 276, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 1166, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 350, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 1170, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1168, 0, 0, 0, 0,
	0, 0, 235, 355, 371, 245, 346, 384, 250, 353,
	240, 320, 343, 0, 0, 237, 369, 352, 302, 285,
	286, 236, 0, 338, 264, 277, 261, 318, 0, 368,
	396, 260, 387, 0, 379, 239, 0, 378, 317, 365,
	370, 303, 297, 238, 367, 301, 296, 289, 268, 412,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 397, 0, 341, 323, 0,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 230, 357, 263, 304, 241, 243, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	251, 340, 252, 279, 253, 231, 255, 254, 256, 347,
	257, 233, 327, 364, 0, 275, 336, 300, 234, 299,
	328, 363, 362, 242, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 227, 228, 429, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 428, 0, 0, 0, 0, 0,
	427, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 0, 232, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 402, 309, 310, 311, 312,
	276, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2945, 0, 179, 600, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 309, 310,
	311, 312, 276, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 1170,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2633,
	0, 0, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 0, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 402,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 350, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 1170, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1168, 0, 0, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 0, 368, 396, 260, 387, 0,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 412, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 397, 0, 341, 323, 0, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 402, 309, 310, 311, 312, 276, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 350,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 1966, 0, 0, 0, 244, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 0, 368, 396, 260,
	387, 0, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 412, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 397, 0, 341, 323, 0, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 0, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 429, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 428, 0, 0, 0, 0, 0, 427, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 402, 309, 310, 311, 312, 276, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 1985, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 350, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 1170, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 355, 371, 245, 346, 384, 250, 353,
	240, 320, 343, 0, 0, 237, 369, 352, 302, 285,
	286, 236, 0, 338, 264, 277, 261, 318, 0, 368,
	396, 260, 387, 0, 379, 239, 0, 378, 317, 365,
	370, 303, 297, 238, 367, 301, 296, 289, 268, 412,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 397, 0, 341, 323, 0,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 230, 357, 263, 304, 241, 243, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	251, 340, 252, 279, 253, 231, 255, 254, 256, 347,
	257, 233, 327, 364, 0, 275, 336, 300, 234, 299,
	328, 363, 362, 242, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 227, 228, 429, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 428, 0, 0, 0, 0, 0,
	427, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 0, 232, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 402, 309, 310, 311, 312,
	276, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3027, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 309, 310,
	311, 312, 276, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 600, 0, 0,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 0, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 402,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 350, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2960, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 0, 368, 396, 260, 387, 0,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 412, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 397, 0, 341, 323, 0, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 402, 309, 310, 311, 312, 276, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 350,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 244, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 0, 368, 396, 260,
	387, 0, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 412, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 2894, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 397, 0, 341, 323, 0, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 0, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 429, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 428, 0, 0, 0, 0, 0, 427, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 402, 309, 310, 311, 312, 276, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 350, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2716,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 355, 371, 245, 346, 384, 250, 353,
	240, 320, 343, 0, 0, 237, 369, 352, 302, 285,
	286, 236, 0, 338, 264, 277, 261, 318, 0, 368,
	396, 260, 387, 0, 379, 239, 0, 378, 317, 365,
	370, 303, 297, 238, 367, 301, 296, 289, 268, 412,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 397, 0, 341, 323, 0,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 230, 357, 263, 304, 241, 243, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	251, 340, 252, 279, 253, 231, 255, 254, 256, 347,
	257, 233, 327, 364, 0, 275, 336, 300, 234, 299,
	328, 363, 362, 242, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 227, 228, 429, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 428, 0, 0, 0, 0, 0,
	427, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 0, 232, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 402, 309, 310, 311, 312,
	276, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 2763, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 309, 310,
	311, 312, 276, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 0, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 402,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 350, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1569, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 0, 368, 396, 260, 387, 0,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 412, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 397, 0, 341, 323, 0, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 402, 309, 310, 311, 312, 276, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 350,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 244, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 0, 368, 396, 260,
	387, 0, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 412, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 397, 0, 341, 323, 0, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 0, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 429, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 428, 0, 0, 0, 0, 0, 427, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 402, 309, 310, 311, 312, 276, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 350, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 2418, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 355, 371, 245, 346, 384, 250, 353,
	240, 320, 343, 0, 0, 237, 369, 352, 302, 285,
	286, 236, 0, 338, 264, 277, 261, 318, 0, 368,
	396, 260, 387, 0, 379, 239, 0, 378, 317, 365,
	370, 303, 297, 238, 367, 301, 296, 289, 268, 412,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 397, 0, 341, 323, 0,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 230, 357, 263, 304, 241, 243, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	251, 340, 252, 279, 253, 231, 255, 254, 256, 347,
	257, 233, 327, 364, 0, 275, 336, 300, 234, 299,
	328, 363, 362, 242, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 227, 228, 429, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 428, 0, 0, 0, 0, 0,
	427, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 0, 232, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 402, 309, 310, 311, 312,
	276, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 309, 310,
	311, 312, 276, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 1170,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 0, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 402,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 350, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 1966, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 0, 368, 396, 260, 387, 0,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 412, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 397, 0, 341, 323, 0, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 402, 309, 310, 311, 312, 276, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 350,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 244, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 0, 368, 396, 260,
	387, 0, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 412, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 397, 0, 341, 323, 0, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 0, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 429, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 428, 0, 0, 0, 0, 0, 427, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 402, 309, 310, 311, 312, 276, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 350, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2003, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 355, 371, 245, 346, 384, 250, 353,
	240, 320, 343, 0, 0, 237, 369, 352, 302, 285,
	286, 236, 0, 338, 264, 277, 261, 318, 0, 368,
	396, 260, 387, 0, 379, 239, 0, 378, 317, 365,
	370, 303, 297, 238, 367, 301, 296, 289, 268, 412,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 397, 0, 341, 323, 0,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 230, 357, 263, 304, 241, 243, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	251, 340, 252, 279, 253, 231, 255, 254, 256, 347,
	257, 233, 327, 364, 0, 275, 336, 300, 234, 299,
	328, 363, 362, 242, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 227, 228, 429, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 428, 0, 0, 0, 0, 0,
	427, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 0, 232, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 402, 309, 310, 311, 312,
	276, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 2001, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 309, 310,
	311, 312, 276, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 0, 0, 0, 389,
	390, 391, 413, 375, 358, 426, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 309, 310,
	311, 312, 276, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 1557, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 0, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 402,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 350, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 1170, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 0, 368, 396, 260, 387, 0,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 412, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 397, 0, 341, 323, 0, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 1486, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 402, 309, 310, 311, 312, 276, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 350,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 244, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 0, 368, 396, 260,
	387, 0, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 412, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 1194, 0, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 397, 0, 341, 323, 0, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 0, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 429, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 428, 0, 0, 0, 0, 0, 427, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 402, 309, 310, 311, 312, 276, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 350, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 355, 371, 245, 346, 384, 250, 353,
	240, 320, 343, 0, 0, 237, 369, 352, 302, 285,
	286, 236, 0, 338, 264, 277, 261, 318, 0, 368,
	396, 260, 387, 0, 379, 239, 0, 378, 317, 365,
	370, 303, 297, 238, 367, 301, 296, 289, 268, 412,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 397, 0, 341, 323, 0,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 230, 357, 263, 304, 241, 243, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	251, 340, 252, 279, 253, 231, 255, 254, 256, 347,
	257, 233, 327, 364, 0, 275, 336, 300, 234, 299,
	328, 363, 362, 242, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 227, 228, 429, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 428, 0, 0, 0, 0, 0,
	427, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 0, 232, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 402, 309, 310, 311, 312,
	276, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	700, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 467, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 468, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 309, 310,
	311, 312, 276, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 0, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 444, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 402,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 350, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 0, 368, 396, 260, 387, 0,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 412, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 397, 0, 341, 323, 0, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 402, 309, 310, 311, 312, 276, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 350,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 244, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 0, 368, 396, 260,
	387, 0, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 412, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 397, 0, 341, 323, 0, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 0, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 429, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 428, 0, 0, 0, 0, 0, 427, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 402, 309, 310, 311, 312, 276, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 350, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 355, 1150, 245, 346, 384, 250, 353,
	240, 320, 343, 0, 0, 237, 369, 352, 302, 285,
	286, 236, 0, 338, 264, 277, 261, 318, 0, 368,
	396, 260, 387, 0, 379, 239, 0, 378, 317, 365,
	370, 303, 297, 238, 367, 301, 296, 289, 268, 412,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 397, 0, 341, 323, 0,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 230, 357, 263, 304, 241, 243, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	251, 340, 252, 279, 253, 231, 255, 254, 256, 347,
	257, 233, 327, 364, 0, 275, 336, 300, 234, 299,
	328, 363, 362, 242, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 227, 228, 429, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 428, 0, 0, 0, 0, 0,
	427, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 0, 232, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 402, 309, 310, 311, 312,
	276, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 1148, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 309, 310,
	311, 312, 276, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 0, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 508, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 157, 0, 49, 149, 126, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 150, 0, 0, 0, 0, 0, 0, 142, 377,
	0, 0, 151, 385, 0, 0, 0, 0, 109, 402,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 114, 0, 115, 116, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 0, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 0,
	125, 148, 155, 0, 95, 0, 0, 939, 940, 941,
	938, 0, 0, 0, 0, 0, 157, 0, 49, 149,
	126, 0, 147, 141, 140, 0, 0, 0, 0, 55,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 142, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1551, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1379, 0, 0, 0,
	143, 144, 145, 0, 0, 0, 0, 0, 1553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 1528, 0, 146, 0,
	106, 0, 0, 0, 0, 0, 0, 113, 114, 0,
	115, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 107, 0, 0, 0, 0,
	1544, 0, 0, 0, 0, 48, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 148, 155, 0, 95,
	0, 0, 1551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 141, 140,
	0, 1375, 0, 0, 55, 1372, 0, 0, 0, 1374,
	1371, 1373, 1377, 1378, 50, 0, 1553, 1376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 1519,
	1522, 0, 1518, 0, 0, 0, 0, 1532, 0, 0,
	0, 0, 0, 0, 3044, 0, 0, 127, 1538, 0,
	0, 0, 0, 0, 1528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 144, 145, 1525, 1554,
	0, 0, 1527, 1529, 1531, 0, 1533, 1534, 1535, 1539,
	1540, 1541, 1543, 1546, 1547, 1548, 0, 0, 0, 0,
	0, 152, 0, 1536, 1545, 1537, 0, 0, 0, 0,
	0, 0, 0, 108, 38, 0, 0, 0, 0, 105,
	47, 5, 0, 146, 112, 106, 0, 0, 1544, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	0, 1551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1382, 1383, 1384, 1385,
	1386, 1387, 1380, 1381, 1549, 1553, 0, 0, 0, 0,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	48, 1524, 0, 0, 0, 0, 0, 0, 1523, 0,
	0, 0, 0, 0, 1551, 1532, 0, 0, 0, 0,
	0, 0, 0, 1528, 0, 0, 1538, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 1525, 1554, 1553, 50,
	1527, 1529, 1531, 0, 1533, 1534, 1535, 1539, 1540, 1541,
	1543, 1546, 1547, 1548, 0, 0, 0, 0, 0, 0,
	0, 1536, 1545, 1537, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 2807, 0, 0, 1528, 1544, 0, 0,
	0, 0, 0, 487, 0, 486, 493, 483, 0, 0,
	0, 0, 0, 0, 0, 1552, 0, 490, 491, 0,
	492, 496, 0, 0, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 38,
	0, 0, 1549, 0, 0, 47, 0, 0, 0, 112,
	1544, 0, 0, 0, 505, 0, 0, 507, 0, 1524,
	0, 0, 506, 0, 1532, 0, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 1538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1542, 0, 0, 0, 0, 1525, 1554, 1530, 0, 1527,
	1529, 1531, 0, 1533, 1534, 1535, 1539, 1540, 1541, 1543,
	1546, 1547, 1548, 0, 0, 0, 0, 0, 0, 0,
	1536, 1545, 1537, 0, 0, 0, 0, 1532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1552, 0, 0, 0, 1525, 1554,
	0, 0, 1527, 1529, 1531, 0, 1533, 1534, 1535, 1539,
	1540, 1541, 1543, 1546, 1547, 1548, 0, 0, 0, 0,
	0, 0, 0, 1536, 1545, 1537, 0, 0, 0, 0,
	0, 1549, 479, 481, 480, 487, 0, 486, 493, 483,
	0, 0, 485, 0, 0, 0, 0, 0, 1524, 490,
	491, 0, 492, 496, 489, 1523, 478, 1552, 0, 0,
	487, 504, 486, 493, 483, 0, 501, 0, 482, 0,
	0, 0, 473, 0, 490, 491, 0, 492, 496, 1542,
	0, 478, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 501, 0, 0, 1549, 0, 505, 0, 0, 507,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 1524, 0, 0, 0, 0, 0, 0, 1523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	484, 488, 494, 0, 495, 497, 0, 0, 498, 499,
	500, 0, 0, 502, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 479, 481, 480, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 489, 0, 0, 479,
	481, 480, 0, 504, 0, 0, 0, 0, 0, 485,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 0, 0, 0, 0, 0, 0, 504, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 488, 494, 0, 495, 497, 0, 0,
	498, 499, 500, 0, 0, 502, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 488, 494,
	0, 495, 497, 0, 0, 498, 499, 500, 0, 0,
	502, 503,
}

var yyPact = [...]int{
	35571, -1000, -1000, -1000, -306, 9659, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33629, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33629, -304, 33097,
	33097, -1000, -1000, 1895, -1000, 32565, 10742, 33629, 284, 280,
	33629, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 529, -1000, 32033, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 495, 36283, 35225, 7520, -257,
	-1000, 2807, -111, 714, 728, 817, 817, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2294, 679, 31501, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2761, 132, 679,
	13402, -2, -3, 2807, 320, 125, -1000, 859, 35786, 150,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7520, 7520, 9659, -314, 9659, 7520, 33629, 33629, -1000,
	-1000, -1000, -1000, 495, 36283, 7520, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -3, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3182, -1000, 1110, -1000, -1000, -1000, -1000,
	2097, 1109, 1780, 460, 33629, -1000, 1108, 460, -1000, -1000,
	-1000, 2807, 2807, -1000, 33629, 33629, 73, 1299, -1000, 315,
	302, 286, 1107, -1000, -1000, -1000, -1000, -1000, -1000, 381,
	2528, -1000, 33629, 33629, 2142, 33629, -1000, 1462, 424, 36485,
	2342, 1017, 607, 2171, -1000, -1000, 2093, -1000, 195, 172,
	117, 338, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 193,
	-1000, 2411, -1000, -1000, 173, -1000, -1000, 190, -1000, -1000,
	-1000, -6, -1000, -1000, -1000, -1000, -1000, -1000, -106, -1000,
	-1000, 760, 1460, 7520, -1000, 2047, -1000, 2611, -1000, -1000,
	-1000, -1000, 4850, 9116, 9116, 9116, 9116, -1000, -1000, 1982,
	7520, 2083, 2081, -1000, -1000, -1000, -1000, -1000, 1106, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1778, 8584, -1000, 2079, 2076, 2073, 2071, 2069, 2068,
	2066, 2063, 2062, 2056, 2055, 2054, 2052, 2046, 1931, 10199,
	2045, 1777, 1776, 2040, 2038, 2037, 1774, 1931, 1931, 2034,
	2033, 2032, 2030, 2029, 2023, 2020, 2019, 2018, 2016, 2015,
	2014, 2006, 2003, 2001, 1999, 1998, 1995, 1994, 1992, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 918, -1000, 1991, 2306, 2456, 1958, 2500, 2423,
	2409, 2404, 2391, 1626, -1000, -1000, -1000, -137, -1000, -1000,
	770, -1000, 633, -1000, 33629, 33629, 33629, 494, 494, 494,
	494, 494, 517, 494, 525, 523, 522, 494, -1000, -1000,
	-1000, -1000, -1000, -1000, 613, -1000, -1000, -1000, -1000, 1019,
	33629, -1000, 1951, 1225, 2459, 438, 428, 414, 1225, 316,
	-1000, 1310, 1310, 1310, 1310, 1225, 361, 412, 2456, 2456,
	-20, 1310, -46, 1225, 1225, -46, 1225, 1225, 1225, 131,
	-301, -1000, -1000, -1000, 1310, 1310, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2395, 2386, 495, 33629, 99, 33629, 495,
	495, 507, -71, 34693, 34161, 1462, 402, 399, 1043, 1341,
	-1000, 1224, 33629, 33629, 1224, 1224, 17661, 17129, -1000, 33629,
	-1000, 2456, 1958, -1000, 1903, 2799, 1900, 1958, 495, 495,
	495, 495, 495, 153, 495, 495, 495, 33629, 33629, 30969,
	495, 6446, 6446, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9659, 1472, 1781, 147, -74, -309, 181, -1000,
	-1000, 33629, 2298, 141, -1000, -1000, -1000, 1932, -1000, 1950,
	1950, 1950, 1950, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1965, 1990, -1000, -1000, 1948, 1948, 1948, 1932,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1961, 1961, 1962, 1962, 1961,
	33629, 7520, 33629, 2310, 308, 1989, -1000, 33629, 289, 2456,
	2306, 2456, -1000, -1000, 1104, 1624, 1773, -1000, -1000, 315,
	1262, -1000, 670, -1000, -1000, -1000, -1000, 33629, -106, 279,
	-1000, -1000, 1762, 1987, -1000, 456, 852, 1087, -1000, 177,
	36510, 26705, 1462, 26705, 33629, -1000, -1000, -1000, -1000, -1000,
	-1000, -9, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 164, -1000, 7520, 7520, 7520,
	7520, 7520, -1000, 544, 8052, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9116, 9116, 9116, 9116, 9116, 9116, 9116, 9116,
	9116, 9116, 9116, 9116, 1980, 1385, 9116, 9116, 9116, 9116,
	2799, 2763, 1025, 216, -1000, -1000, -1000, -1000, -1000, 1312,
	1460, 7520, 7520, 33629, -1000, 35695, 7520, 7520, 2817, 7520,
	2381, 7520, 7520, 7520, 1898, 3468, 33629, 7520, -1000, 1889,
	1887, -1000, -1000, 1595, 7520, -1000, -1000, 7520, -1000, -1000,
	7520, 9116, 7520, -1000, -1000, -1000, 123, 2381, 2381, 7520,
	7520, 2381, 2381, 2381, 1305, 2381, 2381, 2381, 2381, 2381,
	2381, 2381, 2381, 1878, 1877, 1876, 2456, -257, 5914, -1000,
	-263, 2306, 7520, -1000, -1000, 7520, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1770, -48, 680, 636, 668, -1000,
	2356, -1000, 1986, 1985, 1103, 33629, 1335, 33629, 26705, 33629,
	1462, 33629, 33629, 494, 494, 494, 33629, 507, -1000, 33629,
	1019, 2355, 33629, 2514, 9116, 9116, 30437, 1310, 1225, 1225,
	-1000, -1000, 33629, -1000, -1000, -1000, 1310, 33629, 1310, 1310,
	2514, 1310, -1000, -1000, -1000, 1225, 1225, -1000, -1000, -1000,
	-1000, 1310, 1310, -1000, -1000, 2514, 33629, -11, 2514, 2514,
	-18, -1000, -1000, -1000, 33629, 33629, 494, 33629, -1000, 33629,
	33629, -1000, -1000, 33629, 35838, 33629, 29905, 2380, -1000, 26705,
	33629, 24577, -1000, 972, -1000, -76, -1000, -51, -71, 1224,
	-71, 1224, -1000, 446, 454, 16065, 420, 26705, 4317, -1000,
	-1000, 1224, 1224, 4317, 4317, 1125, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1015, -1000, 169, 2306, -1000, -1000, -1000,
	-1000, -1000, 33629, 33629, 26705, 1462, 33629, 495, 33629, 33629,
	33629, -1000, 1983, -1000, 2335, 33629, 951, -1000, -1000, 12870,
	1102, 951, -1000, 1351, -1000, 7520, 9659, -277, 7520, 9659,
	9659, 7520, 9659, -1000, 7520, 129, -1000, -1000, -1000, -1000,
	1621, -1000, 1609, -1000, -1000, -1000, 1769, 1769, -1000, 1608,
	-1000, -1000, -1000, -1000, 1607, -1000, -1000, 1605, -1000, -1000,
	-1000, 1874, 760, -1000, 1765, 2169, -258, -1000, 15000, 33629,
	33629, -1000, -1000, -258, -1000, 14467, 33629, 2306, -1000, 2306,
	33629, -1000, 2455, -1000, 315, 254, -1000, -1000, -1000, -1000,
	-1000, -1000, 1099, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1000, -1000, 33629, -1000, -1000, 177, 26705, 27769,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 171, -1000, -1000,
	167, -1000, 511, 104, 1257, -1000, -1000, 101, 160, 550,
	1460, -1000, 1362, 1362, 1355, -1000, 549, -1000, -1000, -1000,
	-1000, 1982, -1000, -1000, -1000, 2174, 1650, -1000, 1388, 1388,
	1135, 1135, 1135, 1135, 1135, 1683, 1683, -1000, -1000, -1000,
	4850, 1980, 9116, 9116, 9116, 9116, 475, 475, 2671, 3298,
	-1000, 7520, 1307, -1000, 7520, 1513, 1085, 1098, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1873, 1872,
	2229, 2526, 1870, 7520, -1000, -1000, 1255, 1252, 1251, -1000,
	1801, 6988, -1000, -1000, -1000, 1868, 1084, 1864, -1000, -1000,
	-1000, 1859, 1238, 922, 1858, 915, 1855, 995, 7520, 7520,
	1237, 1231, 7520, 7520, 7520, 7520, 1854, 7520, 7520, 7520,
	7520, 7520, 7520, 7520, 7520, 17, 17, 17, -1000, -1000,
	1191, -1000, 1460, -1000, 1758, -1000, 1027, 989, -1000, 1792,
	-1000, -1000, -1000, -1000, 710, 630, 743, 33629, 809, 11274,
	33629, 1951, 2334, 127, -1000, 1008, -1000, 104, -130, 813,
	2141, 2525, 33629, 33629, 33629, 2353, 29373, -1000, 1977, 1185,
	-1000, -1000, 7520, -1000, -1000, 2140, 33629, 33629, 2514, 2514,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33629, 2514, 2514,
	1225, 1310, -1000, -1000, 1310, -1000, -1000, 1310, -1000, 1083,
	-1000, 33629, -1000, -1000, -1000, 1951, 976, -1000, 11806, 13934,
	516, -1000, 510, 1226, 1226, 1226, 780, 1226, 1226, 1226,
	1226, 370, 366, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 723, 1226, 1226, 1226, 1226, 1226,
	-1000, 1226, 1976, -1000, 389, 121, 2378, 221, 220, 1008,
	229, 2821, 968, -1000, -1000, -1000, -1000, 19789, 19789, 15533,
	19789, -1000, 1267, -71, -85, -1000, -1000, 972, 4317, 972,
	4317, -1000, -1000, 509, -1000, -1000, 813, -1000, 33629, 33629,
	-1000, -1000, 1974, 1297, -1000, -1000, 10199, -1000, 4317, 4317,
	-1000, -1000, 20321, 33629, -1000, -112, -1000, -90, 2427, 962,
	-1000, -1000, 965, 813, 2166, 33629, 962, -1000, -1000, 11274,
	33629, -1000, 2514, 6446, -1000, 24577, -1000, -1000, 28833, -1000,
	28301, 2514, 1303, -1000, 9659, 1764, 144, -1000, 174, -311,
	143, 1506, 142, 1460, -1000, -1000, 1849, 1848, 1165, -1000,
	1160, 1842, 1130, 1129, -1000, -34, -1000, 2287, 822, -1000,
	1973, -1000, 1128, 2269, -1000, 952, -1000, 1290, 1124, -1000,
	822, 1117, 2244, 952, 2427, -1000, 1081, 67, -1000, -1000,
	33629, 1762, 1093, 27769, 861, -1000, 506, 1080, 1075, -1000,
	26705, 170, 26705, -1000, 26705, -1000, -1000, 287, -1000, 33629,
	2301, -1000, -1000, -1000, 1679, -330, -1000, -1000, -1000, -1000,
	-1000, 1078, -1000, 475, 475, 2671, 2954, -1000, 9116, -1000,
	9116, 2735, 1289, -1000, 7520, 1726, 3074, 2281, 19257, 33629,
	-1000, -1000, 7520, 7520, -1000, 2690, -1000, -1000, -1000, -1000,
	7520, 7520, 2094, -1000, 33629, -1000, -1000, -1000, -1000, 19257,
	-1000, 9116, -1000, 7520, 889, 2679, 17, 17, 2659, 2626,
	2538, 1070, 17, 2533, 2454, 2424, 2407, 2379, 2337, 2325,
	2307, -1000, 1967, -1000, -1000, 5914, -1000, -34, 7520, 7520,
	7520, 2282, -1000, -1000, -1000, -1000, -1000, 618, 155, 1835,
	917, -1000, -1000, 33629, -1000, -1000, -1000, 1834, 913, -1000,
	-1000, -1000, 3892, 1950, 1950, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1965, -1000, -1000, 1948, 1948, 1948,
	1932, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1961, 1961, 1962, 1962, 1961, -1000, 2351, -1000, 29, 1226,
	452, 26705, 390, -1000, 33629, 2165, 246, 2268, 33629, 1960,
	1957, 1956, 273, 3892, 33629, 886, -1000, 1072, 35786, -1000,
	33629, 1460, -1000, 1462, -1000, 1225, -1000, -1000, 2514, 1089,
	-1000, -1000, 2514, 1225, 1225, 1310, 33629, -1000, 2349, 35838,
	-1000, 2261, 33629, -1000, -1000, 3892, 626, -1000, 660, 494,
	33629, 1387, 660, 1381, 1954, -1000, -1000, -1000, 33629, 33629,
	-1000, 33629, 1378, 1376, -1000, 33629, 33629, 1599, -1000, 1596,
	1594, 1226, 1226, 1562, 1757, 1756, 1751, 1226, 1226, 1557,
	1749, 27237, 1748, 789, 1556, 1550, 1548, 1592, 1741, 606,
	-1000, 1728, 1572, 1554, 1469, 33629, 1953, 1666, -1000, -1000,
	29, 1226, 219, 33629, 1282, 452, 1630, 16597, 33629, 24577,
	24577, 24577, 24577, -1000, 2200, 2193, -1000, 2184, 2183, 2192,
	33629, 24577, 1951, -1000, 27237, -1000, -1000, -1000, 2799, 1066,
	2304, 661, 7520, -1000, -1000, -81, -88, -1000, -1000, -1000,
	26705, 1727, 420, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2543, 33629, 33629, 545, 1832, -1000, 2512, -1000, 873,
	-1000, -1000, 1069, -1000, 2512, 1325, -308, 9659, 1317, 1269,
	-1000, 7520, 9659, 7520, -283, 207, -291, -1000, -1000, -1000,
	1724, -1000, -1000, -1000, 1547, -1000, 1542, 28, 36, 1373,
	-258, 5914, 311, 33629, -258, 33629, 5914, -1000, 33629, 303,
	-258, -1000, 33629, 1535, -1000, -1000, -1000, 2522, 26705, 1462,
	1157, 26173, -1000, 163, -1000, 168, 443, 1721, -1000, 520,
	102, -1000, 1266, 1679, -1000, -1000, -1000, 9116, -1000, -1000,
	-1000, -1000, 1460, 7520, 1829, -1000, 603, 603, 1828, -1000,
	1950, 1950, -1000, 1932, 1948, 1932, 603, 603, 1823, -1000,
	1628, 2303, -1000, 2286, 2259, 7520, -1000, 1820, 3280, 1077,
	-148, 17, -1000, -1000, -1000, 17, 17, 17, 17, -1000,
	17, 17, 17, 17, 17, 17, 17, 17, 463, -1000,
	28, 1460, 1460, -1000, -1000, 2273, -1000, 1719, 1718, 809,
	3892, 533, 11274, 2292, 322, 1631, -1000, -1000, -1000, 25641,
	436, -1000, -1000, -1000, 537, 162, 1530, 425, -1000, 33629,
	229, 33629, -1000, -1000, -1000, -1000, -1000, 2268, -1000, 566,
	259, 12338, 12338, 12338, 267, 1298, -1000, 460, 862, 1058,
	24577, 33629, -1000, 24045, 1811, -1000, 813, 2514, -1000, 33629,
	-1000, 2514, 2514, 1225, -1000, 322, -1000, -1000, -1000, 33629,
	2261, 4042, -1000, 33629, -1000, 33629, -1000, 33629, 33629, 494,
	7520, -1000, -1000, -1000, 33629, -1000, 256, -1000, -1000, -1000,
	-1000, -1000, 19257, 19257, -1000, -1000, -1000, -1000, 1716, 1711,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33629,
	1063, -1000, 1254, 1631, 25641, 1248, 1224, 1708, 436, -1000,
	1684, -1000, 823, 33629, 33629, -1000, 941, -1000, 1247, 2138,
	2163, 2138, -1000, -1000, -1000, -1000, 2187, -1000, 2186, -1000,
	-1000, 941, -1000, -1000, -1000, -1000, -1000, 661, -1000, 2410,
	660, 660, 660, 1810, -1000, -1000, -1000, 861, 1802, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2510, 2493,
	25109, 2510, -1000, -308, 1111, -1000, 1434, 139, 1493, 33629,
	-1000, -1000, -1000, 1797, 1794, -265, 46, 2491, 2489, 2540,
	-1000, 1793, 831, -258, -1000, -1000, 822, -1000, -1000, -1000,
	-258, -1000, 822, -1000, -1000, 1462, -1000, 166, -1000, -1000,
	-1000, -1000, -1000, -1000, 82, -1000, 33629, -1000, 1679, 1678,
	94, -1000, 1460, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7520, -1000,
	-1000, -1000, 2241, -1000, -1000, 7520, 1791, 1675, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2505, -1000, 2487, -265, -1000, -1000, -1000, -1000, -1000,
	-1000, 3892, -1000, 1476, -1000, -1000, 1674, 98, -1000, -1000,
	-1000, 1673, 1672, 1515, -1000, -1000, 1468, 1067, 114, -1000,
	-1000, -1000, -1000, -1000, -1000, 1630, 1947, -1000, 1226, 1226,
	1226, 33629, 1767, 827, -1000, -1000, -1000, -1000, 1731, 1688,
	466, 1291, 1287, -1000, 1511, 19789, 24577, 24045, 887, -1000,
	1057, -1000, -1000, -1000, 2514, -1000, -1000, 2514, -1000, -1000,
	-1000, -1000, 4042, -1000, -1000, 1394, 9116, -1000, -1000, 1669,
	18725, 585, 1243, 1241, 599, 1946, -1000, 337, 2539, -1000,
	-1000, -1000, 578, 1371, 1363, -1000, 33629, -1000, 1944, -1000,
	1943, 2131, 285, 1942, 1941, 33629, 2220, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1044, -1000, 1666, 1664, -1000,
	98, 1663, 4317, -1000, -1000, -1000, 33629, 823, 823, 2505,
	33629, 5914, -1000, -1000, 7520, 1939, -1000, 7520, -1000, -1000,
	-1000, -1000, -1000, 1938, 2265, -1000, -1000, -1000, -1000, -1000,
	-1000, 7520, 7520, -1000, -1000, 491, 9659, -293, 206, -1000,
	-1000, -1000, -267, 1662, -1000, -1000, 2484, 1660, 1637, 33629,
	-1000, 822, 822, 813, -1000, -1000, -18, -1000, -1000, -1000,
	2182, -1000, 1891, 17, -1000, 108, 7520, -267, -185, -1000,
	-1000, -1000, -1000, 283, -1000, -1000, 225, -1000, -1000, 1464,
	457, -1000, -1000, 22981, 19257, 18725, 1658, -1000, 36208, 12338,
	164, 36208, 738, 1286, -1000, 1465, -1000, 1459, -1000, 2514,
	887, 1057, -1000, -1000, 1151, -1000, -1000, -1000, -1000, 2671,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1657, 1652,
	-1000, -1000, -1000, -1000, -1000, 1458, 1936, -77, 2374, -1000,
	-1000, 1935, 22981, 22981, 365, 365, 22981, 22981, 1934, 536,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2456, -1000, -1000,
	1460, 33629, 1460, 23513, -1000, 2483, 2478, 1460, 760, -1000,
	-308, 33629, 33629, -269, 1452, -1000, 1645, 42, -1000, -1000,
	803, -271, 25, 64, -1000, -1000, -1000, 1655, -1000, 449,
	-1000, -1000, -1000, 760, -269, 33629, 441, 1644, -1000, -1000,
	196, -1000, -1000, 1038, -1000, 1932, 7520, -1000, -1000, -1000,
	458, 36145, -1000, -1000, -1000, -18, 458, 421, 215, -1000,
	1451, -1000, -1000, 2505, -1000, -1000, -1000, 1473, 7520, 1931,
	1226, -181, 22981, 1036, 1023, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1016, 1007, 22981, -1000, -1000, -1000, 335, -1000,
	1006, 978, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1927,
	-1000, -1000, 2476, -1000, 1642, 499, 76, 64, -1000, 2475,
	39, 2472, 2471, -1000, -1000, 459, -259, 14, 13, 3,
	-1000, -1000, -1000, 7520, -1000, 2348, -1000, -1000, 81, -1000,
	-1000, -1000, 22981, 2330, 1821, 290, 2469, 36208, -1000, -1000,
	290, -1000, 270, -1000, 1278, -1000, 1431, -1000, 2456, -1000,
	1399, -1000, 33629, 2154, -1000, 134, 977, 2127, 2118, 2115,
	2113, 959, -1000, -1000, -1000, 22449, 33629, 1637, -1000, 1924,
	1427, 46, 31, 2468, -1000, 1637, 2466, 1637, 1637, 1349,
	-1000, 11, 9, 6, -1000, -1000, -1000, -1000, 1640, -1000,
	224, -1000, -1000, 2330, -1000, 2465, 313, -1000, -1000, -1000,
	-1000, 1417, -1000, -1000, 536, -1000, -1000, 2147, 2145, 2520,
	-1000, -1000, -1000, -1000, 224, 365, 224, 365, 224, 365,
	224, 365, 183, -1000, -1000, 933, -1000, -1000, 2362, 18193,
	22, -1000, -1000, -1000, 1638, -1000, 1637, -1000, -1000, 459,
	-1000, -1000, -1000, -1000, -1000, 1226, 1519, 244, -1000, -1000,
	-1000, 21917, 314, 375, 333, -1000, 505, -1000, -1000, -1000,
	-1000, 2532, -1000, 2521, 594, 594, -1000, -1000, -1000, -1000,
	-1000, -1000, 33629, -1000, 33629, -1000, 927, -1000, -1000, -1000,
	1055, -1000, -1000, -1000, -1000, -1000, 1409, -1000, 33629, -1000,
	33629, 301, 1405, 9116, 1922, 9116, 1919, 331, 1911, -1000,
	-1000, -1000, 1436, 342, -1000, 224, 224, 224, 224, -1000,
	757, -1000, 1195, -1000, 21385, 33629, -1000, -1000, 923, 1909,
	2463, -1000, 3046, 33629, 2340, 33629, 1906, 1190, 9116, -1000,
	-1000, -1000, 33629, 5382, -1000, 1051, -1000, -1000, 453, 304,
	-1000, 920, -1000, 916, 20853, 1402, 1454, -1000, -1000, 1460,
	33629, 893, -1000, 33629, 293, -1000, -1000, -1000, 881, -1000,
	-1000, -1000, -1000, 453, 2243, -1000, 1401, -1000, -1000, 35996,
	579, -1000, -1000, 35996, 300, -1000, 444, 1905, -1000, -1000,
	867, -1000, 33629, 628, 7520, -1000, 300, 36208, -1000, 7520,
	863, -1000, 36208, 845, -1000, -1000,
}

var yyPgo = [...]int{
	0, 142, 2561, 223, 146, 3157, 67, 222, 201, 198,
	221, 3156, 3150, 2286, 2283, 3149, 3148, 3146, 3145, 3141,
	3140, 3139, 3138, 3137, 3136, 3135, 3134, 3133, 3131, 3130,
	3128, 3127, 3126, 3124, 3123, 3122, 3120, 3119, 3118, 218,
	3116, 3114, 3113, 3112, 3111, 3110, 3109, 3108, 3107, 3103,
	3102, 3101, 3100, 3099, 3098, 3097, 3096, 3095, 3093, 3092,
	3091, 3090, 3089, 3088, 3087, 3086, 3072, 3071, 3067, 3066,
	194, 3063, 2273, 3059, 3058, 3057, 3054, 3052, 3051, 3050,
	219, 3045, 3044, 3041, 3040, 3039, 3038, 3036, 3034, 3033,
	3032, 3031, 215, 3029, 3028, 3027, 3026, 3019, 3018, 206,
	3017, 139, 169, 3012, 3011, 3010, 3009, 3008, 214, 188,
	52, 3007, 40, 3006, 193, 3003, 117, 2997, 118, 2995,
	2993, 2992, 2991, 2990, 2989, 2987, 2984, 2982, 2980, 2979,
	2977, 69, 2976, 94, 143, 165, 229, 2252, 231, 225,
	160, 141, 68, 2975, 2279, 2974, 166, 203, 127, 27,
	2973, 157, 2972, 123, 36, 30, 224, 112, 43, 130,
	89, 2971, 189, 85, 84, 2968, 2967, 158, 228, 161,
	2965, 102, 2964, 2963, 2962, 2960, 175, 168, 2958, 2957,
	103, 2950, 2949, 107, 2948, 55, 173, 136, 171, 2945,
	787, 100, 97, 163, 2944, 2942, 78, 2941, 2940, 2938,
	2937, 150, 2935, 2934, 104, 66, 2932, 2930, 2929, 49,
	2925, 54, 2924, 60, 2923, 2921, 2920, 2919, 53, 2916,
	2915, 20, 23, 25, 2912, 21, 2908, 137, 2906, 2904,
	2899, 90, 2898, 2, 2897, 197, 297, 81, 124, 2896,
	387, 2895, 2894, 2893, 135, 2892, 410, 2890, 2889, 2888,
	2887, 2886, 5, 2885, 195, 42, 2884, 75, 113, 96,
	184, 185, 2880, 2867, 2865, 119, 70, 74, 0, 2864,
	125, 2861, 2859, 2853, 227, 2852, 212, 220, 133, 202,
	233, 205, 2848, 2847, 77, 2846, 132, 73, 45, 105,
	17, 16, 270, 2841, 331, 154, 2839, 180, 2838, 162,
	1, 114, 2835, 2833, 38, 230, 2825, 2824, 2822, 101,
	2821, 2820, 92, 71, 2819, 2817, 2809, 34, 2788, 31,
	14, 2786, 93, 2779, 226, 2776, 155, 126, 149, 138,
	122, 199, 204, 64, 59, 2769, 1338, 121, 76, 26,
	2768, 196, 2767, 152, 131, 2763, 99, 2761, 217, 335,
	182, 2760, 153, 8, 37, 29, 2758, 12, 2749, 109,
	181, 2746, 2742, 18, 44, 2723, 22, 2722, 2714, 2713,
	2712, 9, 2711, 2708, 2705, 4, 7, 2701, 3, 183,
	2700, 2699, 2697, 2696, 41, 120, 2690, 115, 156, 144,
	2689, 79, 2686, 2685, 2684, 600, 2681, 236, 2677, 2676,
	2673, 2671, 2670, 2668, 2667, 2664, 2662, 80, 46, 2660,
	2656, 2655, 2651, 62, 116, 2650, 2649, 2648, 2645, 33,
	148, 2644, 24, 2643, 32, 28, 35, 2640, 111, 2639,
	13, 159, 2637, 2636, 15, 2635, 2634, 10, 11, 2623,
	2621, 95, 2620, 72, 19, 134, 82, 2619, 2616, 65,
	192, 106, 2613, 2612, 213, 216, 177, 2609, 145, 207,
	237, 2608, 186, 2603, 2601, 2599, 2598, 2597, 2593, 882,
	2592, 2591, 210, 47, 91, 86, 2589, 2587, 2585, 63,
	129, 88, 87, 172, 2582, 167, 2581, 2580, 83, 2577,
	2576, 2574, 2573, 2572, 164, 2571, 2569, 170, 208, 2568,
	2567, 2565, 2563, 211, 209, 2551,
}

//line mysql_sql.y:9788
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 493, 501, 501, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 106, 491, 491, 491, 492, 492, 103, 123,
	122, 125, 125, 124, 124, 121, 121, 117, 120, 120,
	119, 119, 118, 113, 115, 115, 114, 116, 116, 104,
	92, 105, 440, 440, 439, 439, 438, 438, 392, 392,
	437, 437, 437, 436, 436, 436, 435, 435, 434, 434,
	433, 433, 431, 431, 432, 430, 429, 429, 429, 427,
	427, 427, 423, 423, 425, 424, 424, 426, 418, 418,
	421, 421, 419, 419, 419, 419, 422, 417, 417, 417,
	416, 416, 91, 91, 91, 338, 338, 90, 90, 352,
	352, 352, 352, 352, 350, 350, 350, 350, 350, 350,
	349, 349, 348, 348, 353, 353, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 81, 81, 81, 81,
	81, 86, 86, 86, 498, 498, 497, 497, 499, 499,
	499, 499, 500, 500, 84, 84, 84, 85, 347, 347,
	347, 82, 83, 83, 337, 337, 342, 342, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 346, 346, 346, 344, 344, 343, 343, 345, 345,
	75, 75, 75, 78, 77, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 76, 76, 76, 76, 76, 76,
	71, 71, 71, 71, 71, 70, 70, 72, 72, 334,
	334, 333, 87, 87, 88, 495, 495, 494, 496, 496,
	496, 496, 89, 95, 95, 95, 95, 95, 95, 95,
	94, 94, 97, 97, 96, 98, 80, 80, 80, 80,
	80, 80, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 465, 465, 465, 467, 467, 272, 273, 502, 275,
	271, 271, 271, 461, 461, 462, 463, 464, 464, 464,
	93, 11, 11, 11, 11, 11, 11, 69, 74, 226,
	226, 227, 227, 227, 227, 227, 227, 227, 231, 231,
	231, 230, 228, 228, 228, 228, 228, 228, 229, 232,
	232, 67, 73, 73, 73, 478, 478, 68, 485, 485,
	395, 395, 286, 286, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	400, 401, 282, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 46, 45, 45, 45, 323, 323, 44, 503, 503,
	261, 261, 56, 55, 48, 57, 58, 59, 60, 61,
	62, 43, 54, 54, 54, 54, 54, 54, 54, 54,
	65, 65, 412, 412, 505, 505, 505, 63, 64, 394,
	394, 394, 53, 52, 51, 50, 49, 49, 42, 42,
	41, 41, 47, 129, 130, 279, 279, 279, 281, 281,
	277, 504, 504, 366, 366, 280, 280, 40, 40, 40,
	40, 66, 278, 278, 260, 276, 276, 276, 12, 12,
	10, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 23, 24, 26, 331, 331, 328, 25,
	18, 17, 20, 16, 16, 19, 21, 22, 22, 9,
	9, 9, 9, 13, 13, 14, 141, 141, 191, 191,
	473, 473, 469, 469, 470, 470, 470, 471, 471, 472,
	472, 99, 406, 406, 406, 406, 406, 406, 8, 163,
	163, 405, 405, 405, 405, 405, 405, 335, 335, 450,
	450, 450, 451, 162, 162, 157, 157, 407, 407, 301,
	452, 452, 415, 415, 414, 414, 413, 413, 160, 160,
	161, 161, 144, 144, 109, 109, 420, 420, 420, 420,
	428, 428, 391, 391, 218, 218, 255, 255, 256, 256,
	134, 134, 135, 135, 135, 135, 135, 135, 458, 458,
	460, 460, 459, 159, 159, 155, 155, 156, 156, 156,
	154, 154, 153, 152, 152, 151, 149, 149, 149, 150,
	150, 150, 167, 167, 137, 137, 137, 136, 136, 136,
	136, 136, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 138, 138, 466, 466, 466, 396,
	396, 396, 403, 403, 237, 237, 238, 238, 236, 236,
	139, 139, 140, 140, 140, 140, 235, 235, 234, 142,
	142, 148, 147, 147, 143, 143, 143, 143, 245, 245,
	244, 244, 244, 244, 102, 107, 107, 108, 166, 166,
	243, 242, 242, 242, 165, 165, 164, 164, 158, 158,
	146, 146, 146, 146, 241, 145, 239, 490, 490, 489,
	489, 488, 486, 486, 486, 487, 487, 487, 487, 442,
	442, 442, 442, 442, 266, 266, 266, 270, 270, 269,
	269, 269, 269, 269, 274, 7, 7, 7, 7, 7,
	30, 30, 30, 30, 30, 30, 30, 30, 36, 175,
	176, 37, 177, 177, 178, 178, 179, 179, 180, 181,
	182, 182, 182, 182, 35, 168, 168, 169, 169, 170,
	170, 171, 172, 172, 172, 174, 173, 34, 27, 474,
	477, 475, 475, 479, 479, 479, 480, 480, 480, 480,
	481, 481, 28, 126, 131, 131, 128, 133, 133, 133,
	133, 133, 127, 476, 482, 482, 482, 332, 332, 329,
	330, 330, 327, 326, 326, 326, 484, 484, 483, 483,
	483, 267, 267, 29, 322, 322, 324, 325, 325, 325,
	316, 316, 316, 316, 33, 320, 320, 321, 321, 321,
	321, 321, 317, 317, 319, 319, 315, 315, 315, 315,
	315, 32, 132, 132, 314, 314, 312, 312, 310, 310,
	311, 311, 309, 309, 309, 313, 313, 31, 31, 31,
	111, 110, 110, 110, 258, 258, 257, 257, 112, 38,
	203, 203, 380, 380, 380, 380, 380, 398, 398, 398,
	381, 381, 381, 382, 382, 382, 383, 383, 383, 383,
	383, 397, 397, 399, 399, 399, 354, 354, 355, 355,
	355, 358, 358, 372, 372, 373, 373, 371, 371, 378,
	378, 377, 377, 376, 376, 375, 375, 374, 374, 374,
	374, 369, 369, 368, 368, 356, 356, 356, 356, 356,
	357, 357, 357, 367, 367, 370, 370, 209, 209, 210,
	210, 210, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 448, 448, 449,
	212, 212, 216, 216, 216, 216, 216, 216, 211, 211,
	213, 213, 192, 192, 190, 190, 183, 183, 184, 184,
	185, 185, 185, 189, 189, 188, 188, 188, 188, 186,
	186, 187, 187, 187, 187, 187, 187, 340, 340, 445,
	445, 446, 446, 441, 441, 441, 444, 444, 444, 444,
	444, 447, 447, 447, 443, 443, 193, 253, 253, 253,
	268, 268, 268, 268, 252, 252, 252, 208, 208, 207,
	207, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 339, 339, 283, 283, 284, 284, 225, 224, 224,
	224, 224, 224, 222, 223, 221, 221, 221, 221, 221,
	220, 220, 219, 219, 219, 318, 318, 217, 217, 215,
	215, 215, 214, 214, 214, 379, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	251, 251, 251, 293, 293, 298, 298, 457, 457, 456,
	194, 194, 194, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 204, 204, 204, 363, 363, 363, 363, 364,
	364, 364, 364, 365, 365, 365, 361, 361, 362, 362,
	302, 303, 303, 404, 404, 359, 359, 360, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 411, 411, 411, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 468, 468, 468, 453, 453, 453,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 249,
	249, 249, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 304, 304, 305,
	305, 408, 408, 408, 408, 408, 408, 409, 409, 410,
	410, 410, 410, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 291, 246, 246, 246, 306, 299, 299, 300,
	300, 294, 294, 294, 294, 294, 294, 294, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	295, 295, 297, 297, 308, 308, 308, 307, 307, 307,
	307, 307, 307, 307, 206, 206, 206, 206, 288, 288,
	288, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 196, 196, 196, 196, 200, 200, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 201, 201, 201, 201, 201, 199, 199, 199,
	199, 199, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 100, 101,
	101, 198, 254, 254, 384, 384, 387, 387, 385, 385,
	386, 388, 388, 388, 389, 389, 389, 390, 390, 390,
	393, 393, 259, 259, 259, 265, 265, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 7, 4, 1,
	3, 2, 2, 2, 1, 3, 3, 4, 0, 1,
	2, 1, 2, 2, 1, 2, 3, 2, 3, 1,
	1, 7, 7, 8, 8, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 2, 5, 5, 0, 2, 7, 0, 1,
	0, 1, 5, 5, 3, 3, 2, 4, 4, 4,
	4, 4, 1, 1, 1, 3, 3, 1, 1, 1,
	6, 8, 0, 1, 1, 1, 1, 5, 5, 0,
	1, 1, 3, 3, 3, 4, 6, 7, 4, 4,
	7, 8, 3, 3, 3, 0, 2, 2, 0, 2,
	2, 1, 1, 1, 1, 0, 1, 4, 4, 5,
	4, 3, 1, 3, 1, 1, 3, 5, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 6, 4, 4, 4, 3, 6, 3, 5, 1,
	1, 2, 2, 11, 8, 9, 1, 3, 2, 4,
	0, 2, 0, 1, 1, 1, 1, 0, 1, 0,
	1, 4, 2, 1, 5, 4, 4, 2, 5, 1,
	3, 2, 1, 5, 4, 4, 2, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 5, 3, 4, 6, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 0, 2, 3, 3, 3, 1, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 7, 7, 1, 1, 1, 0,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 2,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 4, 1, 3, 4, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 3, 2, 3, 1, 4, 3, 0, 1, 1,
	2, 5, 2, 2, 2, 0, 2, 3, 3, 0,
	1, 3, 1, 3, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 7, 1,
	1, 7, 1, 3, 0, 1, 1, 3, 1, 3,
	0, 1, 1, 1, 12, 1, 3, 0, 1, 1,
	3, 1, 1, 2, 4, 1, 1, 7, 7, 1,
	4, 1, 1, 3, 4, 3, 0, 1, 1, 1,
	0, 2, 7, 8, 0, 2, 6, 0, 2, 2,
	3, 3, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 6, 0, 4, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 11, 9, 11,
	2, 2, 4, 5, 1, 3, 0, 3, 5, 10,
	0, 2, 0, 3, 2, 4, 3, 0, 2, 1,
	0, 2, 3, 0, 2, 3, 0, 3, 2, 4,
	3, 0, 1, 0, 1, 1, 0, 6, 0, 3,
	5, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 4, 6,
	5, 0, 2, 0, 2, 4, 5, 4, 5, 1,
	5, 6, 5, 0, 3, 0, 1, 0, 1, 1,
	3, 2, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 5, 4, 1, 3, 3,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 1, 1, 1, 1, 7, 9, 7, 9, 2,
	1, 7, 9, 7, 9, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 3, 1, 3, 5,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	2, 1, 2, 2, 1, 1, 2, 2, 2, 3,
	3, 2, 2, 1, 5, 6, 4, 1, 1, 1,
	5, 1, 2, 0, 1, 1, 2, 5, 0, 1,
	1, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 3, 5, 2, 2, 2, 2, 1, 1,
	2, 5, 6, 6, 6, 1, 1, 1, 1, 1,
	4, 4, 4, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 5, 0, 1,
	3, 0, 1, 0, 2, 0, 1, 6, 8, 6,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 4, 4, 4, 3, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 2, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -493, -501, -2, -5, 560, -1, -4, -101, -75,
	-7, -103, -104, -8, -99, -9, -10, -12, -79, -94,
	-96, -98, -97, -39, -11, -93, -70, -71, -81, -87,
	-90, -91, -92, -105, -100, -102, -134, -106, 553, -76,
	-77, -78, -30, -29, -28, -27, -126, 559, 414, 12,
	463, -13, -14, -458, -15, 238, -271, -272, -273, -275,
	-502, -40, -41, -42, -49, -50, -51, -52, -53, -63,
	-64, -65, -43, -44, -45, -48, -46, -56, -55, -57,
	-58, -59, -60, -61, -62, -47, -129, -130, -66, -68,
	-67, -73, -69, -74, -128, 213, -72, 62, -82, -83,
	-84, -85, -86, -88, -89, 343, 349, 404, 552, 47,
	-135, -137, 563, 141, 142, 144, 145, -31, -32, -33,
	-34, -35, -36, -38, -37, 209, 14, 496, -16, -19,
	-17, -20, -18, -25, -26, -24, -21, -23, -127, -22,
	233, 232, 37, 299, 300, 301, 347, 231, 210, 13,
	30, 41, 325, -136, 68, 211, -138, 10, 565, -6,
	-3, -2, -113, -117, -121, -124, -125, -122, -123, -4,
	-101, 99, 223, 554, -268, 339, 555, 557, 556, 71,
	79, -262, -264, 343, 349, 552, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 466, 539, 540, 541, 542, 323, 324, 493,
	250, 274, 374, 280, 287, 141, 160, 154, 182, 174,
	149, 254, 292, 255, 78, 144, 449, 89, 426, 401,
	147, 269, 271, 273, 276, 275, 277, 279, 256, 326,
	170, 165, 268, 252, 163, 257, 39, 258, 187, 259,
	260, 498, 422, 322, 428, 284, 399, 164, 423, 272,
	425, 189, 193, 440, 441, 158, 159, 430, 443, 186,
	230, 42, 495, 242, 444, 191, 185, 181, 452, 288,
	286, 184, 157, 180, 253, 51, 195, 194, 196, 395,
	396, 397, 398, 261, 262, 337, 439, 177, 166, 327,
	150, 22, 447, 237, 427, 350, 263, 281, 289, 190,
	192, 244, 249, 497, 403, 248, 285, 445, 162, 241,
	270, 236, 448, 151, 352, 264, 145, 278, 442, 451,
	50, 365, 156, 148, 227, 142, 246, 251, 11, 265,
	266, 267, 291, 290, 282, 178, 243, 183, 168, 155,
	179, 143, 245, 450, 366, 550, 325, 384, 176, 173,
	247, 220, 446, 429, 146, 388, 367, 171, 293, 546,
	547, 548, 338, 321, 294, 295, 169, 234, 420, 421,
	296, 298, 394, 314, 368, 402, 375, 369, 202, 302,
	432, 434, 188, 549, 303, 304, 305, 424, 306, 307,
	308, 309, 342, -345, -343, -268, 552, 349, 343, 325,
	-177, -268, 564, -144, 38, -190, -268, -144, -72, -14,
	-13, -136, -137, -190, 217, -276, 23, 399, -80, 400,
	213, 68, -268, -9, -92, -8, -99, -70, -134, 404,
	-274, -268, 299, 299, -274, 217, -268, 248, 382, -395,
	223, -349, -322, 249, -348, -324, -351, -325, 31, 209,
	211, 210, 245, 14, 347, 219, 12, 10, 348, 231,
	24, 25, 27, 13, 349, 351, 28, 352, 355, 356,
	357, 41, 360, 361, 238, 71, 79, 74, 256, -176,
	-268, -300, -294, 96, 239, -296, -289, -290, -292, -437,
	-431, -287, 68, 123, 124, 131, 97, -291, -379, 35,
	99, 503, 464, -247, -248, -249, -250, -251, -268, -432,
	-430, 74, 80, 83, 86, 87, 85, 84, 167, 82,
	75, 135, 136, -137, 71, -453, 511, -263, 532, 539,
	540, 541, 542, 531, 47, -402, -410, 216, -408, 134,
	172, 234, 168, 12, 129, 394, 169, 508, 528, 466,
	512, 535, 505, 506, 500, 501, 502, 504, 513, 515,
	527, -411, 523, 533, 534, 521, 536, 537, 538, 73,
	72, 526, 525, 514, 509, 510, 516, 499, 507, 517,
	518, 524, 529, 530, 331, 89, 332, 333, 456, 326,
	334, 223, 399, 56, 335, 336, 337, 338, 339, 463,
	340, 57, 341, 330, 238, 384, 342, 171, 188, 468,
	467, 469, 460, 457, 455, 458, 459, 461, 462, 519,
	520, 522, -107, -108, 544, -153, -154, -240, 19, 6,
	7, 8, 9, -491, 401, 497, 146, 143, -336, 146,
	95, 151, 150, -336, 302, 244, 344, 220, 323, 384,
	306, 248, -316, -314, -397, 296, 292, 218, 228, 227,
	90, 456, 216, 358, -469, -470, 206, 207, 208, -460,
	489, -459, -268, 333, 26, 217, 344, 244, 434, 432,
	433, 435, 436, 437, 438, -54, -412, -394, 429, 428,
	-280, 421, 427, 419, 431, 422, 324, 308, 307, 209,
	561, 490, -259, 368, 402, 453, 454, 345, 403, 440,
	442, 423, 89, 175, 172, 220, 217, 323, 456, 384,
	306, -469, 143, 440, 442, 248, 382, 40, -342, 394,
	-341, -343, 441, 452, 72, 73, 439, -259, 89, 420,
	420, -154, -240, -153, -135, -137, -102, -458, 218, 323,
	384, 248, 219, 217, 220, 456, 216, 299, 344, 244,
	306, -396, -466, 31, -403, 203, 204, 205, 32, 33,
	-1, 103, 565, -294, -294, -6, 566, -6, -294, -268,
	-268, 138, -196, -200, -197, -199, -198, -202, -201, 172,
	173, 134, 176, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 30, 188, 234, 168, 169, 170, 171,
	189, 154, 174, 494, 197, 155, 198, 156, 199, 157,
	200, 158, 159, 201, 160, 163, 164, 165, 166, 162,
	137, 68, 137, 74, -160, 240, -190, 137, -160, -154,
	-153, -154, -190, -252, -268, 401, 106, -80, -80, 400,
	-461, -462, -463, -465, 213, 400, 399, 137, 256, 15,
	-274, -274, 66, -190, -324, 248, -349, -322, 35, 65,
	138, 221, 138, 65, 68, 345, 323, 384, 346, 456,
	217, 358, 220, 248, 359, 323, 384, 217, 220, 456,
	248, 323, 217, 220, 384, 248, 359, 419, 420, 220,
	26, 350, 353, 354, 420, -416, 452, 138, 95, 92,
	93, 94, -294, 113, -307, 106, 107, 108, 109, 110,
	111, 112, 120, 119, 130, 123, 124, 125, 126, 127,
	128, 129, 121, 122, 116, 96, 114, 118, 115, 98,
	-137, -294, -300, 47, -292, -292, -292, -292, -379, -298,
	-294, 68, 68, 137, 74, -294, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, -409, 68,
	68, -304, -305, 68, 68, -287, -252, 68, 74, 74,
	68, 68, 68, 74, -305, -305, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, -154, 138, 68, -109,
	38, -156, 21, -138, -137, 20, 31, 32, 31, 32,
	31, 32, 31, 32, 80, 445, 496, 149, 150, 151,
	-175, -268, -177, -168, -268, -312, 223, -312, -312, -312,
	-312, 219, -312, 217, 217, 217, -312, -471, 153, 138,
	-460, -159, 68, -279, 114, 118, 23, 246, 246, 246,
	-279, 286, -503, -504, 15, 116, -277, -504, -277, -277,
	-279, -505, 219, 430, 42, 247, 246, -155, -156, -155,
	424, 420, -366, 425, 426, -281, -504, -280, -279, -279,
	-280, -279, -279, -279, 217, 220, 456, 306, 562, -503,
	-503, 30, 30, -395, -190, -395, 490, -260, -268, -395,
	-395, -472, 222, -498, -497, 443, -500, 445, 143, -343,
	143, -343, -324, 248, 248, 138, 106, 23, -344, 106,
	117, -343, -343, -344, -344, -211, 40, -267, 134, -268,
	74, -211, 40, -495, -494, -190, -155, -138, -137, 69,
	69, 69, -395, -395, -395, -395, -395, -397, -395, -395,
	-395, -274, -168, -177, 223, -395, -139, -140, 125, -294,
	-268, -139, -3, -115, -114, 100, 101, 103, 555, 339,
	554, 558, 552, -343, 40, -390, 366, 365, -384, -386,
	68, -385, 68, -385, -385, -385, 68, 68, -387, 68,
	-387, -387, -384, -388, 68, -388, -389, 68, -389, -388,
	-268, -299, -300, -268, 38, -405, 47, -134, 68, 30,
	68, -268, -406, 47, -134, 68, 30, -155, -109, -156,
	137, 80, 74, -80, 69, 138, -464, 86, 87, -467,
	186, 178, -268, -95, 74, -7, -8, -9, -10, -39,
	-70, -134, -433, -431, 68, 31, 393, 65, 15, -350,
	217, 456, 344, 244, 220, 323, -348, -331, -328, -326,
	-267, -324, -327, -326, -353, -252, 420, -110, 405, 298,
	-294, -294, -294, -294, -294, 85, 96, 321, 86, 87,
	-289, -308, 31, 294, 295, -290, -290, -290, -290, -290,
	-290, -290, -290, -290, -290, -290, -290, -297, -306, -379,
	68, 116, 114, 118, 115, 98, -292, -292, -290, -290,
	69, 138, -457, -456, 100, -294, -294, -268, -454, -455,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 335, 330, 336, 334, 326, 342, 337, 338, 171,
	487, 488, 481, 482, 483, 484, 485, 486, -299, -299,
	-294, -454, -299, -246, 32, 31, -300, -300, -300, 69,
	-294, -468, 319, 318, 320, -157, -268, -299, 69, 69,
	69, 80, -300, -300, -299, -290, -299, -455, -246, -246,
	-300, -300, -246, -246, -246, -246, 125, -246, -246, -246,
	-246, -246, -246, -246, -246, 69, 69, 69, -155, -108,
	-414, -413, -294, 40, 545, -109, -294, -152, -151, -294,
	-492, 74, 446, 447, 147, 150, 149, 34, 68, 68,
	137, -190, 96, -474, -268, -332, -329, -326, -268, -322,
	-268, -268, -312, -312, -312, -190, -472, -459, 34, -158,
	-268, -236, 16, -292, -292, -326, 248, -503, -279, -279,
	-261, -260, -281, -276, -281, -281, -236, -504, -279, -279,
	-281, -277, -236, -268, 420, -236, -236, -366, -278, -268,
	-278, -312, -260, -261, -261, -190, -226, -227, 214, 211,
	210, -233, 212, 370, 363, 250, -313, 254, 78, 255,
	401, 256, 219, 258, 259, 260, 275, 277, 230, 261,
	262, 263, 394, 264, 142, 276, 265, 266, 267, 346,
	-212, 6, 309, 40, 251, -474, -474, 30, 30, -332,
	-268, -147, -142, -146, -143, -148, -239, -241, -145, 68,
	-190, -137, -268, 138, 444, 446, 447, -498, -344, -498,
	-344, 31, 393, -347, 393, 31, -322, -341, 440, 442,
	-337, 74, 394, -327, -346, 65, 134, -413, -344, -344,
	-346, -346, 133, 138, -496, 445, 446, 206, -109, -192,
	-190, -474, -331, -322, -268, -395, -192, -268, -268, 68,
	35, -268, -235, 138, -234, 15, -269, -268, 34, 74,
	137, -235, -116, -114, 102, -294, -6, 554, -294, -6,
	-6, -294, -6, -294, -393, 367, 80, 80, -254, 74,
	-254, 80, 80, 80, 69, 74, -335, 65, -407, -301,
	-452, 544, -162, 69, -157, -450, -451, -157, -161, -268,
	-407, -162, 69, -450, -109, -109, -268, 23, -80, -462,
	137, 138, -158, -350, -330, -327, -352, 125, -268, -338,
	138, 496, 567, 72, 221, -484, -483, 385, 69, 138,
	-417, 222, 463, 74, 568, 202, 85, 321, 86, 87,
	-379, -300, -297, -292, -292, -290, -290, -295, 235, -295,
	95, -294, -293, -456, 102, -294, 34, 138, 66, 137,
	69, 69, 15, 15, 69, -294, 69, 69, 69, 69,
	15, 15, -294, 69, 137, 69, 69, 69, 69, 66,
	69, 138, 69, 138, -300, -294, 69, 69, -294, -294,
	-294, -300, 69, -294, -294, -294, -294, -294, -294, -294,
	-294, -360, 415, -360, -360, 138, 69, 74, 138, 22,
	138, -149, 36, 37, 148, 151, 151, 150, -176, -178,
	-179, -180, -181, -182, 116, 139, 140, -169, -170, -171,
	-172, -196, -252, 173, 176, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 234, 168, 169, 170,
	171, 189, 154, 174, 155, 156, 157, 158, 159, 160,
	163, 164, 165, 166, 162, -268, -159, 35, -477, 371,
	-485, 138, 40, -483, 456, -315, 66, -132, 15, -190,
	-190, -190, -203, 34, 15, -141, -191, -268, 68, 69,
	138, -294, -323, 66, -268, -261, -236, -236, -190, -268,
	-236, -236, -279, -281, -281, -277, 137, -260, -159, 138,
	-189, -193, 225, -186, -188, -252, -284, -187, 228, -446,
	226, 224, 90, 229, 283, 91, 219, -228, 219, 91,
	-268, 225, 229, 224, -229, 219, 221, -265, 106, -265,
	-265, -259, 133, -265, -265, -265, -265, 257, 257, -265,
	-265, -265, -265, -265, -265, -265, -265, -265, -265, -265,
	143, -265, -265, -265, -265, -265, -265, 68, 252, 253,
	-478, 371, 30, 329, 329, -485, -133, 323, 30, -242,
	-243, -244, -245, 54, 58, 60, 55, 56, 57, 61,
	30, 138, -266, -270, 34, -268, 74, -266, -137, -142,
	-147, -266, 68, -497, -499, 448, 445, 451, -346, -346,
	221, 68, 106, -346, -346, 40, -267, -494, 452, 446,
	-167, 23, 138, 65, -192, -169, -177, -236, -140, -142,
	-268, 74, -268, 125, -236, 103, -6, 101, -120, -119,
	-118, 104, 552, 558, 103, 103, 103, 69, 69, 69,
	138, 69, 69, 69, 138, 69, 138, -420, 425, 39,
	138, 68, 69, 138, 47, 138, 106, 69, 138, 69,
	47, -167, 137, 401, -268, -431, 69, -352, 138, 221,
	137, 137, -328, 349, -267, -330, 20, 496, -252, 38,
	-258, -257, 74, 568, 69, -295, -295, 95, -292, -289,
	69, 103, -294, 101, -194, -196, 365, 366, -195, -201,
	134, 172, 234, 171, 170, 168, 365, 366, -211, -268,
	-294, -294, 69, -294, -294, 15, -268, -211, -290, -294,
	-154, 69, -359, -360, -359, 69, 69, 69, 69, -359,
	69, 69, 69, 69, 69, 69, 69, 69, 68, -413,
	-420, -294, -294, -151, -150, 43, 151, 357, 69, 138,
	-252, 69, 138, -196, 34, -480, 427, 373, 383, -265,
	-286, -285, 325, 41, -400, 394, 379, 380, -329, 248,
	-268, 65, 313, 314, 315, 316, -310, -311, -309, -313,
	-474, 68, 68, 68, -380, 303, -196, -190, -141, -268,
	15, 138, -473, 137, -1, -268, -322, -279, -236, -504,
	-236, -279, -279, -281, -268, 34, -227, -231, 44, 46,
	-193, -196, -187, -445, -446, -312, -268, 91, -445, 91,
	68, -268, -268, -268, 91, 91, -268, -230, -278, 80,
	80, 80, -265, -265, 80, 74, 74, 74, -265, -265,
	80, 74, -270, 74, -447, 150, 44, 45, 80, 80,
	80, 80, 40, 74, -216, 40, 268, 272, 269, 270,
	271, 74, 80, 40, 80, 40, 80, 40, -268, 68,
	-448, -449, 74, -480, -265, 329, -343, 106, -286, -131,
	78, 31, -163, 214, 211, -474, -334, -333, -252, -146,
	-146, -146, -146, 54, 54, 54, 59, 54, 59, 54,
	-244, -334, -148, -159, -270, 69, -490, -489, -488, -486,
	62, 222, 63, -299, 445, 449, 450, -330, -282, 74,
	-337, 13, -190, -190, -399, 278, 279, 69, -238, 17,
	137, -238, 99, -6, -116, -118, -294, -6, -294, 554,
	339, 555, 74, 80, 80, -428, 411, 406, 408, 91,
	-301, -415, -414, 47, -134, -157, -407, -451, -413, -268,
	47, -134, -407, -268, 80, 15, -327, -322, 125, 125,
	-268, 350, -338, 74, 372, 74, 217, 569, 138, 106,
	-258, -289, -294, 69, -204, 159, 158, -204, 69, -385,
	-385, -384, -387, -384, -204, -204, 69, 69, 23, 69,
	69, 69, -294, 69, 69, 138, -404, 465, -359, -359,
	-359, -359, -359, -359, -359, -359, -359, -359, -359, -359,
	-359, -303, -302, 240, -428, 44, 45, 74, 74, -180,
	-196, 215, -171, 40, -134, -481, 78, -475, 74, -268,
	-482, 78, 374, 136, 327, 40, 375, 376, 391, 322,
	80, 80, 381, -476, -268, -133, -190, -309, -259, 133,
	259, 306, -183, -184, -185, -193, -186, -188, -183, -183,
	-381, 305, 20, 80, 124, -160, 66, 137, -142, -191,
	-268, 125, 69, -236, -268, -236, -236, -279, -134, -252,
	-231, -208, -207, -205, 85, 96, 40, 363, -206, 78,
	133, 273, 276, 275, 251, 274, -225, -283, 65, 369,
	311, 312, -313, 224, 90, 91, 351, -284, -443, -268,
	-441, -443, -268, -441, -441, -312, -294, -268, -232, 311,
	312, -211, -211, 74, 74, -192, 69, 138, 106, -481,
	-475, 106, -344, 74, -482, 74, 138, -163, -163, -236,
	138, 106, -165, -164, 65, 66, -166, 65, -164, 54,
	54, -236, -488, -487, 23, -446, -446, -446, 69, 69,
	-237, 18, 20, 125, -237, 103, 101, 103, 103, -268,
	69, 69, -391, 546, -424, -426, 406, 20, 20, 13,
	69, -407, -407, -322, -338, 394, -190, -257, 74, 569,
	-294, 69, -294, 69, 74, -154, 20, -391, -173, -196,
	-287, 74, -479, 385, 74, 74, 80, 40, 80, 136,
	377, -401, -131, 68, -265, -265, -265, -268, 69, 138,
	69, 69, -382, 239, 80, 124, 80, 124, 80, -266,
	-142, -268, -236, -473, 137, -236, -236, -205, 85, -290,
	74, -213, -267, 134, -214, 40, 272, 268, 106, 106,
	-215, 40, 252, 253, -217, 68, 283, 13, 175, 91,
	91, -190, 68, 68, 66, 293, 68, 68, -443, 69,
	69, -449, 74, -479, 74, -346, -474, -154, -333, -413,
	-294, 68, -294, 68, 54, 19, 17, -294, -300, 223,
	-6, 555, 339, -218, 547, 74, 20, 74, -422, 74,
	-334, -112, -418, -366, 69, 69, -359, -362, -361, -365,
	412, 285, 418, -300, -218, 495, 20, 496, 326, 40,
	80, 40, 378, -317, -319, -252, 68, -211, -213, 74,
	-209, -210, -233, -185, -111, -110, -209, -383, 142, 80,
	124, 80, 80, -236, -236, 74, 74, 80, 68, -408,
	30, -318, 68, -317, -317, -444, 313, 314, 315, 317,
	316, -444, -317, -317, 68, -340, -339, 284, 96, -155,
	-158, -442, -268, 224, 20, 20, -268, -268, -255, 548,
	80, 74, 408, -392, 549, -427, 411, -421, -419, 406,
	407, 408, 409, 69, -364, 98, 377, 381, -288, -291,
	80, 83, 167, 136, -255, -174, -268, 74, 372, 74,
	326, 69, 138, -384, -294, -354, 240, 138, -233, -112,
	-354, -398, 150, 304, 496, 80, 124, 80, -154, 69,
	-294, -304, -265, -220, -219, 492, -317, 69, 69, 69,
	69, -317, 284, 69, 69, 138, 68, 20, 74, -429,
	222, -425, -426, 410, -419, 20, 408, 20, 20, -363,
	-364, 381, -288, -291, 544, 416, 416, 416, 34, 394,
	-320, -319, -149, 69, -355, 292, 20, -233, -355, 304,
	80, 124, 80, -155, 69, -268, -224, -222, -223, 65,
	423, 281, 282, 69, -320, 66, -320, 66, -320, 66,
	-320, 66, 69, -268, 224, -256, -268, -422, -436, 68,
	80, -424, -423, -425, 20, -422, 20, -422, -422, 95,
	417, 417, 417, 74, -321, 230, 78, 496, 311, 312,
	-149, 20, -356, 285, 286, -357, -370, 288, 80, -339,
	-223, 65, -222, 65, 14, 13, -444, -444, -444, -444,
	-225, 69, 138, -440, 30, 69, -435, -434, -253, -430,
	-268, 411, 412, 74, -422, -363, -265, 74, 310, -252,
	68, -368, 289, 68, -366, 68, -366, 91, 314, -221,
	278, 279, 30, 150, -221, -320, -320, -320, -320, -268,
	-439, -438, -437, 69, 138, 137, 80, -268, -353, -358,
	290, 80, -290, 68, -290, 68, -367, 287, 68, 85,
	40, 280, 138, 106, -434, -268, 69, -372, 68, 20,
	69, -353, 69, -353, 68, 106, -290, -438, 40, -294,
	137, -373, -371, 240, -357, 69, 69, 69, -353, 80,
	69, -268, 69, 138, -268, -369, 291, 69, -371, -374,
	47, 80, -378, -375, 68, -233, 242, 116, -378, -233,
	-377, -376, 290, 243, 68, 69, 138, -268, 239, 68,
	-300, -376, -375, -300, 69, 69,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 775, 776, 777, 778, 779, 0, 0, 0,
	0, 549, 550, 0, 520, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 351,
	352, 353, 354, 355, 356, 0, 285, 281, 206, 207,
	208, 209, 210, 292, 293, 390, 0, 0, 0, 0,
	630, -2, 53, 274, 0, 265, 265, 780, 781, 782,
	783, 784, 785, 786, 787, -2, 562, 0, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	340, 341, 342, 336, 337, 339, 338, -2, 0, 562,
	0, 0, 0, 650, 0, 0, 667, 689, 23, 0,
	7, 9, 10, 11, 12, 13, 14, 15, 16, 17,
	18, 0, 0, 19, 0, 19, 0, 0, 0, 1090,
	1091, 1092, 1093, -2, 1576, 1554, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 0, 258, 256, 1554, 1576, 1636, 1669,
	0, 792, 0, 608, 0, 613, 1044, 608, 286, 551,
	552, 650, 650, 518, 0, 322, 0, 1567, 326, 0,
	0, 0, 515, 316, 317, 318, 319, 320, 321, 0,
	0, 774, 0, 0, 312, 0, 280, 1627, 0, 0,
	0, 0, 0, 0, 150, 864, 152, 866, 156, 163,
	0, 0, 168, 169, 172, 173, 174, 175, 176, 0,
	180, 0, 182, 185, 0, 187, 188, 0, 191, 192,
	193, 0, 203, 204, 205, 867, 868, 869, -2, 81,
	790, 1488, 1379, 0, 1386, 1387, 1398, 1409, 1168, 1169,
	1170, 1171, 0, 0, 0, 0, 0, 1178, 1179, 0,
	1195, 1730, 0, 1185, 1186, 1187, 1188, 1189, 90, 102,
	103, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 0, 1352, 1155, 1090, 0, 1738, 0, 1758, 1763,
	1764, 1765, 1766, 1757, 0, 0, 1337, 0, 1327, 0,
	0, -2, -2, 0, 0, 1695, -2, 1735, 1754, 1762,
	1739, 1761, 1732, 1733, 1727, 1728, 1729, 1731, 1740, 1742,
	1753, 0, 1749, 1759, 1760, 0, 0, 0, 0, 104,
	105, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1343, -2, 1345, 1346, 1348, -2,
	1350, 1351, -2, 1354, 1355, 1356, -2, -2, 1359, 1360,
	1361, 1362, 1363, 1364, 1367, -2, -2, -2, -2, 1339,
	1340, 1341, 1342, 1331, 1332, 1333, 1334, 1335, 1336, -2,
	-2, -2, 650, 725, 0, -2, 0, 0, 0, 672,
	675, 678, 681, 0, 54, 55, 275, 276, 264, 266,
	0, 270, 0, 263, 0, 0, 0, 896, 896, 896,
	896, 896, 0, 896, 0, 0, 0, 896, 871, 872,
	873, 894, 895, 942, 567, 563, 564, 565, 566, 638,
	0, 640, 643, 495, 442, 0, 0, 0, 495, 0,
	456, 448, 0, 0, 0, 495, 0, 0, 645, 645,
	0, 498, 505, 495, 495, -2, 495, 495, 495, 0,
	0, 462, 463, 464, 448, 448, 467, 468, 469, 480,
	481, 506, 1512, 0, 0, 390, 0, 390, 0, 390,
	390, 569, 1664, 1574, 1641, 1627, 0, 0, 231, 1695,
	236, 0, 1575, 1590, 0, 0, 1608, 0, -2, 0,
	302, 645, 0, 651, 0, 650, 0, 0, 390, 390,
	390, 390, 390, 941, 390, 390, 390, 0, 0, 0,
	390, 0, 0, 690, 691, 686, 687, 688, 692, 693,
	5, 6, 19, 0, 0, 0, 0, 0, 0, 60,
	59, 0, 1489, 1507, 1443, 1444, 1445, 1494, 1447, 1498,
	1498, 1498, 1498, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 0, 0, 1487, 1467, 1496, 1496, 1496, 1494,
	1491, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1501, 1501, 1504, 1504, 1501,
	0, 1377, 0, 0, 0, 0, 612, 0, 0, 645,
	-2, 0, 519, 323, 1094, 0, 0, 327, 328, 0,
	0, 343, 0, 346, 331, 332, 333, 0, 130, 0,
	314, 315, 0, 0, 282, 0, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 160, 157, 164, 167, 177,
	184, 0, 196, 198, 201, 158, 165, 170, 171, 178,
	199, 159, 161, 162, 166, 200, 202, 179, 183, 197,
	181, 186, 189, 190, 195, 0, 131, 0, 0, 0,
	0, 0, 1385, 0, 0, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1379, 0, 0, 1174, 1175, 1176, 1177, 1180, 0,
	1196, 0, 0, 0, 1441, 0, 1377, 1377, 0, 1377,
	1373, 0, 0, 0, 0, 0, 0, 1377, 1313, 0,
	0, 1315, 1328, 0, 0, 1317, 1318, 0, 1321, 1322,
	1377, 0, 1377, 1326, 1309, 1310, 0, 1373, 1373, 0,
	0, 1373, 1373, 1373, 1373, 1373, 1373, 1373, 1373, 1373,
	1373, 1373, 1373, 0, 0, 0, 645, 0, 0, 633,
	0, 614, 0, 669, 671, 0, 673, 674, 676, 677,
	679, 680, 682, 683, 56, 0, 0, 268, 0, 273,
	0, 789, 0, 0, 805, 0, 0, 0, 0, 0,
	0, 0, 0, 896, 896, 896, 0, 569, 568, 0,
	639, 0, 0, 698, 0, 0, 0, 448, 495, 495,
	454, 455, 450, 449, 501, 502, 498, 0, 498, 498,
	698, 0, 474, 475, 476, 495, 495, 482, 646, 483,
	484, 498, 0, 503, 504, 698, 0, 0, 698, 698,
	0, 492, 493, 494, 0, 0, 896, 0, 511, 450,
	450, 1513, 1514, 0, 905, 0, 0, 0, 514, 0,
	0, 0, 570, 211, 214, 0, 217, 0, 1664, 0,
	1664, 0, 224, 0, 0, 0, 0, 0, 0, 254,
	255, 0, 0, 0, 0, 245, 248, 1038, 1039, 861,
	862, 249, 250, 294, 295, 0, 614, 668, 670, 664,
	665, 666, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 545, 0, 547, 0, 0, 706, 700, 702, 769,
	90, 706, 8, 77, 74, 0, 19, 0, 0, 19,
	19, 0, 19, 259, 0, 1510, 1508, 1509, 1446, 1495,
	0, 1472, 0, 1473, 1474, 1475, 0, 0, 1468, 0,
	1469, 1470, 1471, 1462, 0, 1463, 1464, 0, 1465, 1466,
	257, 0, 1378, 793, 0, 587, 600, 582, 0, 589,
	0, 1045, 571, 600, 573, 0, 589, 614, 636, 614,
	0, 324, 0, 329, 0, 0, 345, 347, 348, 349,
	334, 335, 516, 310, 311, 303, 304, 305, 306, 307,
	308, 309, 313, 100, 0, 283, 284, 0, 0, 0,
	144, 145, 146, 147, 148, 149, 151, 135, 536, 538,
	853, 865, 0, 856, 0, 154, 194, 127, 0, 0,
	1380, 1381, 1382, 1383, 1384, 1388, 0, 1390, 1392, 1394,
	1396, 0, 1414, -2, -2, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1399, 1412, 1413,
	0, 0, 0, 0, 0, 0, 1410, 1410, 1405, 0,
	1172, 0, 1193, 1197, 0, 0, 0, 91, 1372, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 0, 0,
	1379, 0, 0, 0, 1374, 1375, 0, 0, 0, 1268,
	0, 0, 1274, 1275, 1276, 0, 595, 0, 1338, 1314,
	1329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 724, 726,
	0, 604, 606, 607, 0, 634, 647, 652, 653, 656,
	52, 57, 277, 278, 0, 0, 272, 0, -2, 807,
	0, 643, 0, 0, 819, 388, 847, 0, 0, 863,
	886, 892, 0, 0, 0, 920, 0, 641, 0, 0,
	738, 441, 0, 496, 497, 445, 1627, 450, 698, 698,
	457, 451, 458, 500, 459, 460, 461, 0, 698, 698,
	495, 498, 485, 499, 498, 488, 489, 0, 507, 512,
	508, 0, 510, 465, 466, 643, 358, 359, 0, 0,
	0, 364, 0, 1515, 1515, 1515, 0, 1515, 1515, 1515,
	1515, 0, 0, 1515, 1515, 1515, 1515, 1515, 1515, 1515,
	1515, 1515, 1515, 1515, 0, 1515, 1515, 1515, 1515, 1515,
	1024, 1515, 0, 906, 0, 385, 0, 0, 0, 388,
	837, 711, 0, 712, 713, 709, 740, 764, 764, 0,
	764, 744, 1044, 0, 0, 222, 223, 212, 0, 213,
	0, 225, 226, 0, 228, 229, 230, 237, 1574, 1641,
	232, 234, 0, 0, 238, 251, 252, 253, 0, 0,
	243, 244, 0, 0, 297, 298, 300, 0, 662, 533,
	1042, 534, 535, 539, 0, 0, 542, 543, 544, 807,
	0, 842, 698, 0, 707, 0, 703, 770, 0, 772,
	0, 698, 0, 75, 19, 0, 68, 65, 0, 0,
	0, 0, 0, 1490, 1442, 1511, 0, 0, 0, 1492,
	0, 0, 0, 0, 58, 616, 578, 0, 581, 597,
	0, 601, 0, 0, 593, 586, 590, 0, 0, 610,
	572, 0, 0, 577, 662, 637, 1095, 0, 330, 344,
	0, 0, 0, 0, 138, 850, 0, 139, 143, 133,
	0, 0, 0, 855, 0, 852, 857, 0, 153, 0,
	0, 128, 129, 911, 916, 0, 1389, 1391, 1393, 1395,
	1397, 0, 1400, 1410, 1410, 1406, 0, 1401, 0, 1403,
	0, 1380, 0, 1198, 0, 0, 0, 0, 0, 0,
	1258, 1259, 0, 0, 1263, 0, 1265, 1266, 1267, 1269,
	0, 0, 0, 1273, 0, 1312, 1330, 1316, 1319, 0,
	1323, 0, 1325, 0, 650, 0, 1235, 1235, 0, 0,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 1190, 0, 1191, 1192, 0, 727, 616, 0, 0,
	0, 659, 657, 658, 279, 267, 269, 0, 0, 0,
	795, 796, 798, 0, 801, 802, 803, 0, 808, 809,
	811, 812, 0, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1559, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 806, 0, 897, 826, 1515,
	392, 0, 0, 849, 0, 0, 0, -2, 0, 0,
	0, 0, 922, 0, 0, 0, 556, 560, 23, 644,
	0, 699, 443, 0, 444, 495, 452, 453, 698, 1044,
	477, 478, 698, 495, 495, 498, 0, 509, 0, 905,
	361, 368, 0, 1053, 1054, 0, 0, 1060, 1069, 896,
	1125, 0, 1069, 0, 0, 1071, 1072, 362, 0, 0,
	374, 0, 0, 0, 363, 0, 0, 0, 1516, 0,
	0, 1515, 1515, 0, 0, 0, 0, 1515, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1015, 0, 0, 0, 0, 0, 0, 0, 1030, 1031,
	826, 1515, 0, 0, 0, 392, 834, 0, 0, 0,
	0, 0, 0, 731, 0, 0, 730, 0, 0, 0,
	0, 0, 643, 765, 0, 767, 768, 742, -2, 0,
	711, 747, 1377, 215, 216, 0, 0, 221, 239, 241,
	0, 0, 0, 240, 242, 246, 247, 296, 299, 301,
	632, 0, 0, 0, 943, 0, 548, 696, 701, 708,
	771, 773, 91, 704, 696, 0, 78, 19, 77, 69,
	70, 0, 19, 0, 0, 0, 0, 1500, 1499, 1485,
	0, 1486, 1497, 1502, 0, 1505, 0, 620, 0, 0,
	600, 602, 0, 0, 600, 0, 0, 609, 0, 0,
	600, 635, 0, 0, 517, 101, 350, 0, 0, 0,
	0, 0, 537, 0, 854, 135, 0, 0, 155, 0,
	0, 914, 0, 916, 1376, 1402, 1404, 0, 1411, 1407,
	1173, 1181, 1194, 0, 0, 1200, 1212, 1212, 0, 1203,
	1498, 1498, 1206, 1494, 1496, 1494, 1212, 1212, 0, 92,
	0, 0, 1264, 0, 0, 0, 596, 0, 0, 0,
	1233, 1235, 1240, 1236, 1241, 1235, 1235, 1235, 1235, 1246,
	1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235, 1231, 605,
	620, 648, 649, 654, 655, 0, 271, 0, 0, 800,
	0, 0, 0, 813, 0, 830, 827, 828, 829, 0,
	844, 393, 394, 395, 396, 0, 0, 0, 848, 0,
	837, 0, 887, 888, 889, 890, 891, -2, 900, 0,
	0, 1046, 1046, 1046, 930, 0, 921, 608, 0, -2,
	0, 0, 558, 0, 0, 739, 446, 698, 470, 0,
	486, 698, 698, 495, 513, 0, 360, 366, 369, 0,
	368, -2, 1059, 1084, 1070, 1084, 1126, 1084, 1084, 896,
	0, 372, 373, 375, 0, 377, 0, 365, 371, 992,
	993, 994, 0, 0, 997, 998, 999, 1000, 0, 0,
	1003, 1004, 1005, 1006, 1007, 1081, 1082, 1083, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1032, 1033, 1034, 1035, 1036,
	1037, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 0,
	0, 1027, 0, 830, 0, 0, 0, 0, 844, 836,
	0, 838, 839, 0, 0, 579, 698, 289, 0, 734,
	728, 0, 717, 732, 733, 720, 0, 722, 0, 718,
	719, 698, 710, 741, 766, 743, 746, 748, 749, 755,
	0, 0, 0, 0, 218, 219, 220, 227, 0, 412,
	233, 663, 1043, 540, 541, 944, 945, 546, 694, 0,
	0, 694, 73, 76, 0, 71, 0, 0, 0, 0,
	63, 61, 1493, 0, 0, 622, 115, 0, 0, 0,
	598, 0, 603, 600, 585, 594, 584, 591, 592, 611,
	600, 576, 575, 1096, 325, 0, 851, 135, 140, 141,
	142, 136, 134, 858, 0, 860, 0, 912, 916, 0,
	0, 1408, 1199, 1182, 1201, 1213, 1214, 1202, 1183, 1204,
	1205, 1207, 1208, 1209, 1210, 1211, 1184, 1260, 0, 1262,
	1270, 1271, 0, 1320, 1324, 0, 0, 0, 1239, 1242,
	1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 650, 1232, 0, 622, 660, 661, 788, 791, 797,
	799, 0, 810, 0, 817, 818, 0, 0, 821, 822,
	832, 0, 0, 0, 398, 399, 0, 0, 0, 411,
	407, 408, 409, 389, 843, 834, 0, 901, 1515, 1515,
	1515, 0, 0, 1047, 1048, 1050, 1051, 1052, 0, 0,
	933, 0, 0, 924, 0, 764, 0, 0, 698, 557,
	560, 561, 642, 447, 698, 490, 487, 698, 357, 370,
	367, 1086, -2, 1099, 1101, 0, 906, 1104, 1105, 0,
	0, 0, 0, 0, 0, 1147, 1113, 0, 0, 1117,
	1118, 1119, 0, 0, 1426, 1427, 0, 1124, 0, 1085,
	0, 1073, 1085, 0, 0, 1084, 0, 376, 378, 379,
	380, 995, 996, 1001, 1002, 0, 1026, 0, 0, 381,
	0, 0, 0, 382, 387, 835, 0, 840, 841, 650,
	0, 0, 714, 735, 0, 0, 715, 0, 716, 721,
	723, 288, 750, 0, 0, 752, 753, 754, 745, 235,
	684, 0, 0, 705, 685, 0, 19, 0, 0, 66,
	1503, 1506, 624, 0, 621, 116, 0, 0, 0, 0,
	599, 583, 574, 137, 132, 859, 118, 915, 917, 913,
	0, 1272, 0, 1235, 1234, 1228, 0, 624, 0, 816,
	814, 831, 820, 0, 845, 846, 0, 400, 401, 0,
	404, 410, 833, 0, 0, 0, 0, 893, -2, 0,
	0, -2, 936, 0, 931, 0, 923, 0, 926, 698,
	698, -2, 554, 559, 0, 471, 491, 1100, 1102, 1103,
	1106, 1107, 1040, 1041, 1108, 1152, 1153, 1154, 0, 0,
	1111, 1149, 1150, 1151, 1112, 0, 0, 0, 0, 1424,
	1425, 1145, 0, 0, 0, 0, 0, 0, 0, 1067,
	1025, 1028, 1029, 386, 383, 384, 580, 645, 290, 291,
	736, 0, 729, 759, 756, 0, 0, 695, 697, 67,
	72, 0, 0, 626, 0, 623, 0, 617, 619, 126,
	588, 88, 109, 0, 1261, 1311, 1238, 0, 1229, 0,
	1223, 1224, 1225, 1230, 626, 0, 0, 0, 397, 402,
	0, 405, 406, 0, 882, 1494, 0, 902, 903, 904,
	946, -2, 989, 1049, 908, 118, 946, 927, 0, 934,
	0, 932, 925, 650, 555, 1109, 1110, 0, 0, 1327,
	1515, 1140, 0, 0, 0, 1074, 1076, 1077, 1078, 1079,
	1080, 1075, 0, 0, 0, 1066, 1068, 1121, 0, 287,
	0, 0, 760, 762, 757, 758, 62, 64, 79, 0,
	625, 117, 0, 80, 0, 106, 0, 119, 120, 0,
	0, 0, 0, 1237, 1226, 0, 0, 0, 0, 0,
	1428, 1429, 1430, 0, 615, 0, 815, 823, 0, 825,
	403, 875, 0, 656, 0, 948, 0, 905, 991, 910,
	948, 919, 0, 929, 0, 938, 0, 935, 645, 1148,
	0, 1116, 0, 1128, 1141, 0, 0, 875, 875, 875,
	875, 0, 1122, 737, 751, 0, 0, 0, 89, 93,
	0, 115, 112, 0, 121, 0, 0, 0, 0, 0,
	1215, 0, 0, 0, 1219, 1220, 1221, 1222, 0, 824,
	874, 883, 884, 656, 907, 0, 985, 990, 909, 928,
	937, 0, 940, 553, 1114, 1120, 1127, 1129, 1130, 0,
	1142, 1143, 1144, 1146, 1055, 0, 1057, 0, 1061, 0,
	1063, 0, 0, 761, 763, 0, 628, 618, 82, 0,
	0, 110, 111, 113, 0, 122, 0, 124, 125, 0,
	1216, 1217, 1218, 804, 876, 1515, 0, 0, 880, 881,
	885, 0, 973, 0, 0, 979, 0, 986, 939, 1115,
	1131, 0, 1132, 0, 0, 0, 875, 875, 875, 875,
	1065, 627, 0, 918, 0, 94, 0, 96, 98, 99,
	1087, 107, 108, 114, 123, 1227, 0, 878, 0, 949,
	0, 951, 0, 0, 0, 0, 0, 983, 0, 1133,
	1135, 1136, 0, 0, 1134, 1056, 1058, 1062, 1064, 629,
	83, 84, 0, 95, 0, 0, 877, 879, 0, 953,
	0, 974, 0, 0, 0, 0, 0, 0, 0, 1137,
	1139, 1138, 0, 0, 97, 1088, 950, 947, 0, 985,
	975, 0, 977, 0, 0, 0, 0, 85, 86, 87,
	0, 0, 955, 0, 971, 976, 978, 980, 0, 984,
	982, 1089, 954, 0, 967, 952, 0, 981, 956, -2,
	0, 972, 957, -2, 0, 965, 0, 0, 958, 966,
	0, 961, 0, 0, 0, 960, 0, -2, 968, 0,
	0, 962, -2, 0, 970, 969,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 97, 3, 3, 3, 128, 120, 3,
	68, 69, 125, 123, 138, 124, 137, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 566, 565,
	107, 106, 108, 3, 567, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 568, 119, 569, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 98, 99, 100, 101, 102, 103, 104,
	105, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 121, 122, 127, 129, 132, 133, 134, 135, 136,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:724
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:731
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:737
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:745
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:751
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:755
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:770
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:774
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:780
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:785
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:789
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:821
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:828
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:848
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:854
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:861
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:869
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:875
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:884
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:894
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:902
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:910
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:918
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:928
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:936
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:946
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:953
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:962
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:976
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:982
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:986
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1001
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1011
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1015
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1021
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1034
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1040
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1061
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1074
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1085
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1091
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1095
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1101
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1108
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1120
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1134
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1138
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1142
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1155
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1161
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1170
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1181
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1185
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1191
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1195
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1201
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1205
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1211
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1235
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1254
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1258
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1262
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1271
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1278
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1286
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1293
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1298
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1305
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1314
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1338
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1342
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1348
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1354
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1372
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1389
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1412
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1416
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1420
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1425
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1429
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1435
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1448
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1459
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1472
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1476
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1486
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1499
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1518
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1531
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1539
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1548
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1552
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1556
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1560
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1564
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1568
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1575
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1579
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1592
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1601
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1605
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1611
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1615
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1619
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1623
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1627
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1631
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1635
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1675
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1679
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1683
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1807
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1820
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1827
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1834
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1844
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1848
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1854
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1861
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1873
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1877
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1881
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1887
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1891
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1920
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1954
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1958
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1964
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1970
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1981
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1987
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1991
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1997
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2005
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2014
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2031
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2039
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2062
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2085
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2092
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2099
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2107
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2114
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2121
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2130
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2134
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2138
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2144
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2148
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2154
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2158
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2164
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2168
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2179
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2190
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2194
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2198
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2202
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2206
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2210
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2214
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2218
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2222
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2240
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2245
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2250
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2263
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2276
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2283
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2322
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2326
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2332
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2348
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2352
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2358
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2364
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2368
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2372
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2376
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2382
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2394
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2400
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2410
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2420
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2426
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2437
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2447
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2451
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2463
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2530
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2534
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2540
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2546
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2551
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2552
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2553
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2573
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2584
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2593
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2597
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2603
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2610
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2614
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2618
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2622
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2626
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2635
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2645
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2651
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2657
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2667
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2675
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2682
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2689
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2696
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2703
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2710
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2718
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2727
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2731
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2738
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2750
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2758
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2766
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2779
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2796
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2811
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2816
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2820
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2829
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2845
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2849
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2853
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2857
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2861
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2865
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2869
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2873
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2877
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2881
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2885
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2897
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2901
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2905
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2911
		{
			yyVAL.item = nil
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2916
		{
			yyVAL.item = nil
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2955
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2960
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2964
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2977
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2981
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2987
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2992
		{
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2996
		{
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3001
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3011
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3029
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3035
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3041
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3047
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3053
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3059
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3065
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3074
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3082
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3086
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3094
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3098
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3102
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3115
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3125
		{
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3127
		{
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3146
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3155
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3159
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3163
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3169
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3175
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3196
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3206
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3218
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3222
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3254
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3260
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3267
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3272
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3276
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3280
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3285
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3289
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3295
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3308
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3312
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3331
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3337
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3343
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3347
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3353
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3359
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3363
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3367
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3373
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3377
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3400
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3409
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3427
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3431
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3437
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3446
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3455
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3465
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3471
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3477
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3481
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3487
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3493
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3502
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3509
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3520
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3525
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3532
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3548
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3561
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3572
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3576
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3582
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3587
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3594
		{
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3596
		{
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3599
		{
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3608
		{
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3612
		{
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3617
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3626
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3633
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3639
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3647
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3654
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3661
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3681
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3691
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3695
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3701
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3708
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3714
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3722
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3729
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3736
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3755
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3759
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3764
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3768
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3772
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3778
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3787
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3791
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3797
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3801
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3807
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3811
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3817
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3822
		{
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3833
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3837
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3844
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3853
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3859
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3863
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3869
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3873
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3878
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3882
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3895
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3902
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3909
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3927
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3946
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3952
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3959
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3963
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3976
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3980
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3985
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3989
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3996
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4001
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4008
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4014
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4018
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4022
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4026
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4030
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4034
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4040
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4047
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4056
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4060
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4066
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4078
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4087
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4093
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4097
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4101
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4106
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4110
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4116
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4122
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4126
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4132
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4137
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4141
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4145
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4150
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4154
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4158
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4167
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4175
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4179
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4183
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4197
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4201
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4211
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4221
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4231
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4243
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4251
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4259
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4268
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4276
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4284
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4292
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4300
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4308
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4316
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4324
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4332
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4342
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4353
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4367
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4371
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4375
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4380
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4401
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4406
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4410
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4419
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4425
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4429
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4435
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4439
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4444
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4448
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4453
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4461
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4467
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4475
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4483
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4493
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4499
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4508
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4517
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4526
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4536
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4540
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4550
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4554
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4558
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4562
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4568
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4578
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4582
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4588
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4598
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4604
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4610
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4614
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4618
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4628
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4634
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4638
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4644
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4648
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4654
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4658
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4668
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4681
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4687
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4693
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4706
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4724
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4728
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4734
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4744
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4748
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4752
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4757
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4761
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4765
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4769
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4774
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4778
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4782
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4786
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4790
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4795
		{
			yyVAL.str = ""
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4799
		{
			yyVAL.str = yyDollar[1].str
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4803
		{
			yyVAL.str = yyDollar[2].str
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4809
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4815
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4819
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4823
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4827
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4831
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4837
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 788:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4870
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4880
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4886
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 791:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4892
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4902
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4907
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4913
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4920
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4924
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4930
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4936
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4941
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4945
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4949
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4953
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4960
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4972
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4977
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4983
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4990
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4994
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5000
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5006
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5010
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5014
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5020
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5026
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5032
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5043
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5055
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5061
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5071
		{
			yyVAL.str = yyDollar[1].str
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5075
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5081
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5088
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5094
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5102
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5108
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5115
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5122
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5130
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5136
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5145
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5157
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5168
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5172
		{
			yyVAL.str = yyDollar[2].str
		}
	case 836:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5178
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5192
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5198
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5204
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5210
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5219
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5228
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5233
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5239
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5247
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5353
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5357
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5363
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5373
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5377
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5383
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5393
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5397
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5401
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5406
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5410
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5416
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5423
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5429
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5438
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5445
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5454
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5458
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5464
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5478
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5482
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5486
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5491
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5495
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5499
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5503
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5509
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5528
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5532
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5554
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5558
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5562
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5566
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5570
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5576
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5580
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5586
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5591
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5596
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5600
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5604
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5608
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5612
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5618
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5633
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5643
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5647
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5652
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5656
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5662
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5666
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5672
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5676
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5680
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5685
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5695
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5707
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5716
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5729
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5736
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5746
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5754
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5765
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5769
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5774
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5778
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5785
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5796
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5809
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5823
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5827
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5831
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5838
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5845
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5852
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5859
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5863
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5867
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5871
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5875
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5882
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5893
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5900
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5911
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5918
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5925
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5932
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5939
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5943
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5948
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5952
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5956
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5965
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5979
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5986
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5993
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5997
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6010
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6016
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6020
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6026
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6035
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6049
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6055
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6059
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6065
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6072
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6081
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6085
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6094
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6099
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6103
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6108
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6112
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6122
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6126
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6137
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6145
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6153
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6161
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6172
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6181
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6191
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6201
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6205
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6210
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6214
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6223
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6229
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6233
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6237
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6243
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6247
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6251
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6255
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6259
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6263
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6267
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6272
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6276
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6284
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6288
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6292
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6296
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6300
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6304
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6308
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6312
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6316
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6320
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6324
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6328
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6332
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6336
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6340
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6344
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6348
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6352
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6356
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6360
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6364
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6368
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6372
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6376
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6380
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6386
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6390
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6396
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6402
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6406
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6412
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6416
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6420
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6424
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6428
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6432
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6446
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6450
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6459
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6464
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6470
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6477
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6481
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6487
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6491
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6495
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6501
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6505
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6511
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6520
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6529
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6552
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6577
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6591
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6597
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6606
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6615
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6624
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6633
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6643
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6651
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6657
		{
			yyVAL.str = ""
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6661
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6671
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6677
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6683
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6702
		{
			yyVAL.str = ""
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6706
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6712
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6718
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6722
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6726
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6732
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6736
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6740
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6744
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6750
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6754
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6758
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6763
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6767
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6773
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6777
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6783
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6787
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6791
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6795
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6799
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6803
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6808
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6812
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6824
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6828
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6832
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6836
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6840
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6844
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6857
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6861
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6865
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6869
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6875
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6879
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6884
		{
			yyVAL.str = ""
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6888
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6894
		{
			yyVAL.str = ""
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6898
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6904
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6916
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6923
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6930
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6937
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6944
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6953
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6959
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6965
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6969
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6973
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6977
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6981
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6986
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6993
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6997
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7001
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7010
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7015
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7019
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7035
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7041
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7045
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7049
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7053
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7057
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7061
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7065
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7069
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7073
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7077
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7081
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7085
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7089
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7095
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7099
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7103
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7107
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7111
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7115
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7119
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7123
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7127
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7131
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7135
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7139
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7144
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7152
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7157
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7161
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7170
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7174
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7178
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7182
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7186
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7192
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7200
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7208
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7221
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7226
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7230
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7236
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7240
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7246
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7255
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7267
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7284
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7301
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7314
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7327
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7339
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7353
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7368
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7383
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7400
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7415
		{
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7422
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7426
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7430
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7436
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7440
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7444
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7448
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7454
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7458
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7462
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7468
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7476
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7490
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7497
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7506
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7511
		{
			yyVAL.str = ","
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7515
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7527
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7553
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7564
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7574
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7583
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7592
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7602
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7612
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7622
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7632
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7642
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7652
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7662
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7672
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7682
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7692
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7702
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7712
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7729
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7737
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7745
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7753
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7761
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7771
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7779
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7788
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7796
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7804
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7812
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7820
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7831
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7841
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7853
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7864
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7886
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7922
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7934
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7946
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7957
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7965
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7972
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7979
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7991
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7999
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8009
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8019
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8027
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8038
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8047
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8056
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8064
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8074
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8082
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8092
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8096
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8106
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8125
		{
		}
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8127
		{
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8168
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8179
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8183
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8187
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8193
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8202
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8208
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8212
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8219
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8223
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8227
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8235
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8239
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8243
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8247
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8253
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8257
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8261
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8265
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8269
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8273
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8277
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8281
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8285
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8289
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8297
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8301
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8305
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8309
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8313
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8317
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8321
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8325
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8329
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8333
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8343
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8349
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8353
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8360
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8364
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8368
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8374
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8378
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8382
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8386
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8390
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8394
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8398
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8404
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8408
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8412
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8416
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8422
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8435
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8440
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8446
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8450
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8463
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8468
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8472
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8476
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8480
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8484
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8488
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8502
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8506
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8513
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8524
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8529
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8535
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8547
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8559
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8571
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8584
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8597
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8610
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8623
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8636
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8649
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8662
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8675
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8688
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8701
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8716
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8743
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8785
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8821
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8857
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8874
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8886
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8906
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8926
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8946
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8962
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8975
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8988
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9001
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9014
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9026
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9038
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9050
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9062
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9074
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9086
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9098
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9122
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9135
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9148
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9163
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9171
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9180
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9190
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9213
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9218
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9224
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9231
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9235
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9240
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9244
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9250
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9256
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9263
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9270
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9279
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9286
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9293
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9302
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9306
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9310
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9316
		{
		}
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9318
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9328
		{
			yyVAL.str = ""
		}
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

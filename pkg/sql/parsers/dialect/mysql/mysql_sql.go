// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const SQL_SMALL_RESULT = 57521
const SQL_BIG_RESULT = 57522
const SQL_BUFFER_RESULT = 57523
const LOW_PRIORITY = 57524
const HIGH_PRIORITY = 57525
const DELAYED = 57526
const CREATE = 57527
const ALTER = 57528
const DROP = 57529
const RENAME = 57530
const ANALYZE = 57531
const ADD = 57532
const SCHEMA = 57533
const TABLE = 57534
const INDEX = 57535
const VIEW = 57536
const TO = 57537
const IGNORE = 57538
const IF = 57539
const PRIMARY = 57540
const COLUMN = 57541
const CONSTRAINT = 57542
const SPATIAL = 57543
const FULLTEXT = 57544
const FOREIGN = 57545
const KEY_BLOCK_SIZE = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const MAXVALUE = 57555
const PARTITION = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const STATUS = 57562
const VARIABLES = 57563
const ROLE = 57564
const PROXY = 57565
const AVG_ROW_LENGTH = 57566
const STORAGE = 57567
const DISK = 57568
const MEMORY = 57569
const CHECKSUM = 57570
const COMPRESSION = 57571
const DATA = 57572
const DIRECTORY = 57573
const DELAY_KEY_WRITE = 57574
const ENCRYPTION = 57575
const ENGINE = 57576
const MAX_ROWS = 57577
const MIN_ROWS = 57578
const PACK_KEYS = 57579
const ROW_FORMAT = 57580
const STATS_AUTO_RECALC = 57581
const STATS_PERSISTENT = 57582
const STATS_SAMPLE_PAGES = 57583
const DYNAMIC = 57584
const COMPRESSED = 57585
const REDUNDANT = 57586
const COMPACT = 57587
const FIXED = 57588
const COLUMN_FORMAT = 57589
const AUTO_RANDOM = 57590
const RESTRICT = 57591
const CASCADE = 57592
const ACTION = 57593
const PARTIAL = 57594
const SIMPLE = 57595
const CHECK = 57596
const ENFORCED = 57597
const RANGE = 57598
const LIST = 57599
const ALGORITHM = 57600
const LINEAR = 57601
const PARTITIONS = 57602
const SUBPARTITION = 57603
const SUBPARTITIONS = 57604
const TYPE = 57605
const ANY = 57606
const SOME = 57607
const EXTERNAL = 57608
const LOCALFILE = 57609
const URL = 57610
const PREPARE = 57611
const DEALLOCATE = 57612
const PROPERTIES = 57613
const PARSER = 57614
const VISIBLE = 57615
const INVISIBLE = 57616
const BTREE = 57617
const HASH = 57618
const RTREE = 57619
const BSI = 57620
const ZONEMAP = 57621
const LEADING = 57622
const BOTH = 57623
const TRAILING = 57624
const UNKNOWN = 57625
const EXPIRE = 57626
const ACCOUNT = 57627
const UNLOCK = 57628
const DAY = 57629
const NEVER = 57630
const PUMP = 57631
const SECOND = 57632
const ASCII = 57633
const COALESCE = 57634
const COLLATION = 57635
const HOUR = 57636
const MICROSECOND = 57637
const MINUTE = 57638
const MONTH = 57639
const QUARTER = 57640
const REPEAT = 57641
const REVERSE = 57642
const ROW_COUNT = 57643
const WEEK = 57644
const REVOKE = 57645
const FUNCTION = 57646
const PRIVILEGES = 57647
const TABLESPACE = 57648
const EXECUTE = 57649
const SUPER = 57650
const GRANT = 57651
const OPTION = 57652
const REFERENCES = 57653
const REPLICATION = 57654
const SLAVE = 57655
const CLIENT = 57656
const USAGE = 57657
const RELOAD = 57658
const FILE = 57659
const TEMPORARY = 57660
const ROUTINE = 57661
const EVENT = 57662
const SHUTDOWN = 57663
const NULLX = 57664
const AUTO_INCREMENT = 57665
const APPROXNUM = 57666
const SIGNED = 57667
const UNSIGNED = 57668
const ZEROFILL = 57669
const ENGINES = 57670
const ADMIN_NAME = 57671
const RANDOM = 57672
const SUSPEND = 57673
const ATTRIBUTE = 57674
const HISTORY = 57675
const REUSE = 57676
const CURRENT = 57677
const OPTIONAL = 57678
const FAILED_LOGIN_ATTEMPTS = 57679
const PASSWORD_LOCK_TIME = 57680
const UNBOUNDED = 57681
const SECONDARY = 57682
const USER = 57683
const IDENTIFIED = 57684
const CIPHER = 57685
const ISSUER = 57686
const X509 = 57687
const SUBJECT = 57688
const SAN = 57689
const REQUIRE = 57690
const SSL = 57691
const NONE = 57692
const PASSWORD = 57693
const MAX_QUERIES_PER_HOUR = 57694
const MAX_UPDATES_PER_HOUR = 57695
const MAX_CONNECTIONS_PER_HOUR = 57696
const MAX_USER_CONNECTIONS = 57697
const FORMAT = 57698
const VERBOSE = 57699
const CONNECTION = 57700
const TRIGGERS = 57701
const PROFILES = 57702
const LOAD = 57703
const INFILE = 57704
const TERMINATED = 57705
const OPTIONALLY = 57706
const ENCLOSED = 57707
const ESCAPED = 57708
const STARTING = 57709
const LINES = 57710
const ROWS = 57711
const IMPORT = 57712
const FROM_JSONLINE = 57713
const DATABASES = 57714
const TABLES = 57715
const EXTENDED = 57716
const FULL = 57717
const PROCESSLIST = 57718
const FIELDS = 57719
const COLUMNS = 57720
const OPEN = 57721
const ERRORS = 57722
const WARNINGS = 57723
const INDEXES = 57724
const SCHEMAS = 57725
const NAMES = 57726
const GLOBAL = 57727
const SESSION = 57728
const ISOLATION = 57729
const LEVEL = 57730
const READ = 57731
const WRITE = 57732
const ONLY = 57733
const REPEATABLE = 57734
const COMMITTED = 57735
const UNCOMMITTED = 57736
const SERIALIZABLE = 57737
const LOCAL = 57738
const EVENTS = 57739
const PLUGINS = 57740
const CURRENT_TIMESTAMP = 57741
const DATABASE = 57742
const CURRENT_TIME = 57743
const LOCALTIME = 57744
const LOCALTIMESTAMP = 57745
const UTC_DATE = 57746
const UTC_TIME = 57747
const UTC_TIMESTAMP = 57748
const REPLACE = 57749
const CONVERT = 57750
const SEPARATOR = 57751
const TIMESTAMPDIFF = 57752
const CURRENT_DATE = 57753
const CURRENT_USER = 57754
const CURRENT_ROLE = 57755
const SECOND_MICROSECOND = 57756
const MINUTE_MICROSECOND = 57757
const MINUTE_SECOND = 57758
const HOUR_MICROSECOND = 57759
const HOUR_SECOND = 57760
const HOUR_MINUTE = 57761
const DAY_MICROSECOND = 57762
const DAY_SECOND = 57763
const DAY_MINUTE = 57764
const DAY_HOUR = 57765
const YEAR_MONTH = 57766
const SQL_TSI_HOUR = 57767
const SQL_TSI_DAY = 57768
const SQL_TSI_WEEK = 57769
const SQL_TSI_MONTH = 57770
const SQL_TSI_QUARTER = 57771
const SQL_TSI_YEAR = 57772
const SQL_TSI_SECOND = 57773
const SQL_TSI_MINUTE = 57774
const RECURSIVE = 57775
const CONFIG = 57776
const DRAINER = 57777
const MATCH = 57778
const AGAINST = 57779
const BOOLEAN = 57780
const LANGUAGE = 57781
const WITH = 57782
const QUERY = 57783
const EXPANSION = 57784
const ADDDATE = 57785
const BIT_AND = 57786
const BIT_OR = 57787
const BIT_XOR = 57788
const CAST = 57789
const COUNT = 57790
const APPROX_COUNT_DISTINCT = 57791
const APPROX_PERCENTILE = 57792
const CURDATE = 57793
const CURTIME = 57794
const DATE_ADD = 57795
const DATE_SUB = 57796
const EXTRACT = 57797
const GROUP_CONCAT = 57798
const MAX = 57799
const MID = 57800
const MIN = 57801
const NOW = 57802
const POSITION = 57803
const SESSION_USER = 57804
const STD = 57805
const STDDEV = 57806
const STDDEV_POP = 57807
const STDDEV_SAMP = 57808
const SUBDATE = 57809
const SUBSTR = 57810
const SUBSTRING = 57811
const SUM = 57812
const SYSDATE = 57813
const SYSTEM_USER = 57814
const TRANSLATE = 57815
const TRIM = 57816
const VARIANCE = 57817
const VAR_POP = 57818
const VAR_SAMP = 57819
const AVG = 57820
const JSON_EXTRACT = 57821
const UNNEST = 57822
const ROW = 57823
const OUTFILE = 57824
const HEADER = 57825
const MAX_FILE_SIZE = 57826
const FORCE_QUOTE = 57827
const UNUSED = 57828
const BINDINGS = 57829
const DO = 57830
const DECLARE = 57831

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"FROM_JSONLINE",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"UNNEST",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7634

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 73,
	21, 477,
	-2, 458,
	-1, 78,
	210, 641,
	-2, 685,
	-1, 95,
	42, 326,
	210, 326,
	237, 333,
	238, 333,
	399, 326,
	-2, 354,
	-1, 445,
	67, 1029,
	-2, 1527,
	-1, 446,
	67, 1047,
	-2, 1498,
	-1, 451,
	67, 1048,
	-2, 1526,
	-1, 472,
	67, 962,
	-2, 1572,
	-1, 473,
	67, 963,
	-2, 1571,
	-1, 474,
	67, 1535,
	-2, 1556,
	-1, 475,
	67, 1536,
	-2, 1557,
	-1, 476,
	67, 1537,
	-2, 1563,
	-1, 477,
	67, 1538,
	-2, 1546,
	-1, 478,
	67, 1539,
	-2, 1554,
	-1, 479,
	67, 1540,
	-2, 1564,
	-1, 480,
	67, 1541,
	-2, 1565,
	-1, 481,
	67, 1542,
	-2, 1570,
	-1, 482,
	67, 1543,
	-2, 1575,
	-1, 483,
	67, 1544,
	-2, 1576,
	-1, 486,
	67, 1026,
	-2, 1380,
	-1, 493,
	67, 1035,
	-2, 1406,
	-1, 497,
	67, 1039,
	-2, 1445,
	-1, 498,
	67, 1040,
	-2, 1522,
	-1, 506,
	67, 1050,
	-2, 1507,
	-1, 508,
	67, 1052,
	-2, 1517,
	-1, 520,
	67, 942,
	-2, 1566,
	-1, 521,
	67, 943,
	-2, 1567,
	-1, 522,
	67, 944,
	-2, 1568,
	-1, 529,
	21, 478,
	-2, 441,
	-1, 570,
	394, 354,
	395, 354,
	-2, 327,
	-1, 612,
	103, 1380,
	114, 1380,
	133, 1380,
	-2, 1187,
	-1, 642,
	21, 478,
	-2, 441,
	-1, 739,
	21, 477,
	-2, 870,
	-1, 1033,
	67, 1095,
	-2, 1524,
	-1, 1034,
	67, 1096,
	-2, 1525,
	-1, 1191,
	1, 667,
	68, 667,
	507, 667,
	-2, 674,
	-1, 1301,
	133, 1197,
	-2, 1195,
	-1, 1303,
	133, 585,
	-2, 1192,
	-1, 1304,
	133, 586,
	-2, 1193,
	-1, 1591,
	1, 668,
	68, 668,
	507, 668,
	-2, 674,
	-1, 1797,
	65, 396,
	134, 396,
	-2, 776,
	-1, 2011,
	87, 674,
	129, 674,
	166, 674,
	169, 674,
	-2, 724,
	-1, 2013,
	271, 838,
	-2, 818,
	-1, 2043,
	65, 396,
	134, 396,
	-2, 777,
	-1, 2074,
	87, 674,
	129, 674,
	166, 674,
	169, 674,
	-2, 725,
	-1, 2102,
	271, 838,
	-2, 819,
	-1, 2482,
	68, 697,
	134, 697,
	-2, 674,
	-1, 2487,
	68, 697,
	134, 697,
	-2, 674,
	-1, 2503,
	68, 701,
	134, 701,
	-2, 674,
	-1, 2508,
	68, 702,
	134, 702,
	-2, 674,
}

const yyPrivate = 57344

const yyLast = 22723

var yyAct = [...]int{
	417, 2487, 1097, 2489, 2496, 2486, 2460, 396, 1014, 2140,
	2326, 398, 2448, 2406, 419, 2363, 1641, 2114, 2391, 2301,
	2390, 2305, 2281, 2059, 1575, 2070, 1266, 2138, 765, 2005,
	2139, 2289, 112, 1010, 1637, 933, 2123, 337, 343, 887,
	343, 2151, 1919, 443, 2036, 115, 2103, 2057, 1196, 341,
	26, 1800, 1144, 611, 1232, 530, 1017, 864, 347, 1915,
	875, 2122, 1291, 1815, 1636, 2017, 1482, 1225, 1254, 1924,
	1984, 525, 390, 795, 1920, 1284, 1972, 1930, 353, 1934,
	1598, 558, 637, 1879, 1913, 1200, 111, 1155, 395, 1478,
	1773, 431, 73, 879, 1147, 1292, 1298, 1301, 1228, 1293,
	1814, 1247, 1168, 525, 1477, 1623, 1226, 1775, 1285, 2078,
	3, 112, 1842, 1592, 1184, 1770, 618, 34, 801, 1206,
	1509, 340, 15, 1597, 1008, 1479, 329, 1176, 73, 397,
	399, 955, 1251, 1584, 72, 1219, 1581, 338, 6, 615,
	1207, 339, 5, 1269, 1218, 330, 1208, 1489, 1563, 573,
	1061, 407, 1493, 34, 1047, 999, 1639, 652, 26, 613,
	333, 1013, 1272, 1180, 925, 639, 846, 1007, 1664, 603,
	1183, 1214, 902, 557, 912, 527, 1067, 1066, 356, 391,
	604, 1159, 355, 888, 12, 7, 4, 954, 566, 2473,
	555, 103, 342, 2500, 2372, 2061, 617, 1496, 1486, 1096,
	73, 107, 108, 31, 97, 79, 2158, 2066, 2004, 1172,
	1287, 106, 528, 529, 107, 2131, 350, 671, 107, 636,
	107, 102, 31, 97, 79, 34, 328, 1694, 91, 107,
	15, 107, 345, 31, 97, 79, 1686, 71, 107, 616,
	31, 97, 79, 1483, 2354, 914, 6, 2344, 766, 964,
	5, 524, 57, 107, 1850, 1494, 862, 515, 104, 514,
	516, 517, 705, 518, 519, 961, 1000, 899, 1004, 900,
	1087, 104, 1235, 1236, 1772, 104, 2379, 104, 893, 894,
	884, 1761, 583, 623, 622, 624, 963, 2377, 104, 1210,
	1016, 547, 1003, 703, 984, 104, 915, 2149, 686, 891,
	687, 698, 890, 893, 894, 704, 1906, 2394, 2395, 2234,
	104, 2006, 2237, 621, 2367, 2368, 2152, 2153, 2154, 2155,
	2161, 1907, 1771, 1908, 1018, 1681, 98, 99, 689, 100,
	101, 645, 655, 646, 2304, 1248, 1994, 2025, 1490, 1240,
	644, 995, 587, 1945, 1244, 343, 2032, 112, 352, 1582,
	1560, 2120, 2220, 1935, 1868, 2136, 1143, 1142, 1870, 1005,
	626, 701, 702, 531, 700, 1691, 674, 2223, 2133, 1939,
	2381, 1102, 344, 2404, 2214, 679, 619, 681, 1002, 2478,
	1778, 2497, 2414, 386, 641, 643, 387, 2376, 2353, 1943,
	2328, 684, 2421, 78, 96, 105, 2207, 55, 588, 2303,
	2351, 662, 2451, 2470, 741, 682, 2176, 2324, 2325, 1083,
	2328, 549, 1080, 95, 90, 89, 1082, 1079, 1081, 1085,
	1086, 546, 545, 78, 1084, 105, 73, 73, 617, 666,
	2393, 2175, 620, 1025, 1028, 1029, 1925, 1928, 1940, 1941,
	389, 388, 540, 95, 1026, 2383, 2384, 685, 882, 655,
	1784, 34, 34, 1942, 2202, 2334, 921, 2356, 2357, 886,
	885, 1937, 1499, 1501, 1502, 2198, 1495, 614, 675, 642,
	920, 616, 664, 906, 1001, 901, 878, 92, 93, 696,
	697, 2498, 691, 2505, 692, 2461, 543, 2164, 638, 677,
	1510, 625, 865, 739, 351, 648, 649, 863, 2491, 657,
	656, 680, 683, 2266, 2232, 538, 688, 1786, 1787, 1788,
	1789, 65, 694, 913, 671, 94, 2452, 66, 2290, 2291,
	2292, 2294, 2293, 1687, 676, 872, 1651, 663, 1487, 1178,
	1928, 868, 742, 743, 744, 745, 616, 660, 544, 1875,
	1484, 1873, 870, 346, 552, 553, 554, 1090, 1091, 1092,
	1093, 1094, 1095, 1088, 1089, 1881, 1880, 558, 1929, 1484,
	746, 539, 1835, 1922, 1648, 2472, 1484, 1923, 1926, 67,
	2371, 2060, 712, 918, 2382, 690, 1238, 2302, 68, 1239,
	774, 740, 843, 678, 650, 1647, 1650, 1649, 1237, 748,
	892, 590, 670, 916, 917, 591, 2433, 866, 867, 1201,
	869, 1955, 997, 893, 894, 889, 525, 525, 525, 695,
	752, 937, 937, 1676, 893, 894, 657, 656, 2490, 1927,
	548, 1946, 707, 851, 2355, 1936, 2221, 343, 958, 958,
	1249, 693, 1871, 1497, 1938, 1485, 671, 883, 2449, 2450,
	1632, 966, 1777, 1671, 935, 935, 2504, 939, 80, 2511,
	1027, 1929, 2132, 941, 2510, 2501, 1798, 2203, 2204, 982,
	2012, 80, 896, 897, 1695, 80, 1586, 80, 2137, 1569,
	1799, 937, 669, 937, 645, 1241, 80, 996, 80, 1500,
	1243, 967, 2479, 1015, 2200, 80, 584, 962, 2199, 629,
	634, 635, 614, 1781, 1782, 706, 69, 70, 2474, 665,
	80, 776, 777, 977, 978, 1201, 943, 1780, 1686, 991,
	329, 584, 2464, 2463, 848, 707, 903, 1633, 903, 2408,
	707, 2502, 2267, 2269, 2270, 2271, 2268, 1633, 1792, 73,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 73, 850, 1633, 1056, 1057, 874, 1492, 2401,
	907, 73, 1065, 2170, 2396, 1537, 895, 529, 1536, 898,
	1585, 1112, 1012, 1019, 2475, 586, 594, 34, 585, 2385,
	1660, 1118, 1483, 931, 932, 1799, 34, 919, 1492, 1492,
	1120, 990, 2373, 1124, 1125, 2409, 928, 929, 930, 668,
	586, 981, 993, 585, 1573, 525, 1574, 987, 1557, 980,
	1541, 986, 1275, 1030, 910, 911, 1474, 957, 957, 968,
	328, 973, 873, 593, 2349, 2225, 959, 596, 595, 953,
	2225, 998, 1059, 1969, 707, 922, 942, 969, 2457, 532,
	2410, 2348, 1009, 2347, 2031, 1660, 946, 947, 948, 949,
	950, 951, 952, 1165, 989, 988, 985, 724, 2374, 1793,
	1011, 2046, 1006, 1956, 631, 632, 633, 1150, 1151, 669,
	1111, 2346, 709, 710, 711, 708, 1055, 937, 1519, 2336,
	1191, 1844, 1154, 1801, 558, 1158, 2230, 1197, 937, 529,
	2225, 2224, 1689, 1166, 1688, 1187, 1049, 1020, 1021, 1022,
	1023, 1024, 1680, 709, 710, 711, 708, 2225, 1149, 2225,
	1215, 1215, 1982, 1220, 1757, 1260, 1572, 1616, 1220, 1157,
	1755, 1753, 937, 112, 1169, 1751, 709, 710, 711, 708,
	1179, 1273, 1213, 525, 1740, 937, 1700, 2225, 1192, 1063,
	1064, 1684, 1533, 1100, 1099, 2337, 1678, 1518, 1673, 1106,
	671, 1601, 1602, 1570, 844, 1544, 1186, 2225, 937, 1520,
	1265, 112, 112, 1473, 1098, 1122, 1101, 1280, 1277, 1217,
	1900, 1113, 970, 842, 1112, 1112, 1295, 1960, 707, 1270,
	1758, 1119, 1543, 1121, 1491, 1139, 1756, 1752, 1268, 1204,
	1205, 1752, 1211, 1212, 974, 751, 658, 1303, 640, 880,
	707, 1867, 707, 1481, 2485, 1197, 924, 1602, 1271, 937,
	1245, 1865, 1679, 2446, 1674, 1267, 1267, 1602, 904, 1569,
	1202, 707, 2437, 926, 1250, 1173, 1304, 1104, 1103, 903,
	1167, 1161, 1203, 1164, 927, 1170, 592, 1264, 1185, 1174,
	2434, 1774, 1177, 1209, 2338, 2240, 1970, 1874, 707, 1198,
	1492, 1054, 1866, 1475, 1480, 1677, 1193, 1194, 1706, 1653,
	975, 1199, 1221, 1504, 647, 617, 1052, 1053, 1051, 1062,
	1768, 1507, 1508, 1290, 1258, 1259, 73, 1062, 550, 1515,
	1182, 2193, 1216, 1185, 1222, 708, 923, 711, 708, 2210,
	559, 1224, 1223, 725, 726, 727, 728, 729, 730, 731,
	724, 34, 1246, 1255, 1256, 1257, 2209, 2021, 616, 727,
	728, 729, 730, 731, 724, 1170, 905, 1130, 1261, 1009,
	1262, 1170, 1170, 1576, 1577, 1263, 709, 710, 711, 708,
	1893, 1529, 1281, 2016, 1846, 1708, 2484, 1302, 597, 2466,
	1105, 2431, 1548, 1472, 1296, 1471, 1297, 709, 710, 711,
	708, 584, 739, 715, 716, 717, 718, 719, 720, 721,
	713, 1123, 2415, 1476, 1126, 1127, 1128, 1129, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1892, 589, 709, 710, 711,
	708, 2277, 1498, 2312, 1528, 1931, 1116, 2283, 2469, 112,
	112, 2261, 1506, 1503, 2275, 616, 1117, 709, 710, 711,
	708, 2388, 2260, 112, 1599, 2106, 709, 710, 711, 708,
	1220, 2492, 2273, 1049, 112, 2308, 1505, 2263, 2134, 2276,
	337, 1514, 2029, 709, 710, 711, 708, 2259, 1220, 2116,
	586, 2468, 2274, 585, 1270, 2480, 2256, 709, 710, 711,
	708, 2250, 2109, 1578, 1580, 2247, 2246, 2159, 2104, 1512,
	2272, 2028, 1516, 2118, 2119, 2262, 2135, 1595, 1944, 2105,
	2030, 1904, 1903, 1271, 1861, 1568, 571, 1567, 1607, 1731,
	1566, 937, 1562, 560, 732, 733, 725, 726, 727, 728,
	729, 730, 731, 724, 958, 1561, 112, 1642, 1642, 1665,
	971, 1667, 1526, 386, 2110, 1527, 387, 1531, 2458, 576,
	1608, 1609, 2411, 2403, 1658, 2387, 2282, 1643, 2071, 2219,
	1610, 1593, 1565, 1542, 2503, 2369, 1545, 1546, 1547, 1523,
	2332, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 2331, 2319,
	1558, 709, 710, 711, 708, 1645, 2264, 2257, 1612, 2253,
	1614, 2252, 2251, 1587, 709, 710, 711, 708, 2222, 2064,
	1188, 1189, 1190, 1663, 1605, 2195, 2160, 2156, 2069, 2067,
	2039, 1611, 2027, 1617, 1209, 1613, 2026, 1619, 1661, 1618,
	1615, 709, 710, 711, 708, 1517, 1715, 1669, 1644, 2023,
	2117, 1996, 1921, 1933, 1902, 1872, 579, 1838, 1748, 1698,
	1571, 1606, 1564, 774, 709, 710, 711, 708, 1654, 1655,
	1656, 1138, 841, 838, 839, 840, 972, 2112, 1720, 574,
	1719, 1718, 1716, 775, 2063, 1662, 723, 722, 732, 733,
	725, 726, 727, 728, 729, 730, 731, 724, 770, 2111,
	2113, 709, 710, 711, 708, 1539, 709, 710, 711, 708,
	575, 580, 471, 470, 2476, 1170, 1170, 1170, 769, 1948,
	1999, 1181, 2339, 568, 2040, 570, 583, 2011, 1896, 2002,
	567, 565, 564, 957, 569, 1895, 581, 582, 2001, 2467,
	1990, 1717, 709, 710, 711, 708, 1983, 1894, 577, 578,
	709, 710, 711, 708, 1682, 2443, 1747, 709, 710, 711,
	708, 1961, 1901, 2120, 937, 1898, 937, 1891, 937, 709,
	710, 711, 708, 645, 1883, 2107, 1878, 1833, 709, 710,
	711, 708, 1696, 1754, 1750, 572, 723, 722, 732, 733,
	725, 726, 727, 728, 729, 730, 731, 724, 1746, 1692,
	937, 1724, 723, 722, 732, 733, 725, 726, 727, 728,
	729, 730, 731, 724, 1732, 1702, 1749, 1549, 937, 1540,
	709, 710, 711, 708, 1538, 1535, 1534, 1734, 1532, 1525,
	1522, 1521, 1745, 935, 1115, 1723, 1114, 723, 722, 732,
	733, 725, 726, 727, 728, 729, 730, 731, 724, 107,
	944, 935, 2499, 1733, 709, 710, 711, 708, 1721, 1722,
	2445, 533, 534, 535, 536, 2439, 937, 1744, 2422, 2419,
	2417, 1710, 1693, 767, 532, 2311, 2299, 1797, 2287, 2284,
	1704, 2279, 1685, 1803, 2241, 1683, 1146, 2217, 1690, 709,
	710, 711, 708, 1979, 2216, 2215, 2212, 1811, 2206, 2191,
	876, 645, 112, 112, 112, 112, 104, 1701, 2052, 2034,
	1816, 1743, 2022, 645, 112, 1831, 1156, 1714, 1759, 1767,
	1703, 1148, 1816, 945, 1794, 1009, 1769, 1791, 1672, 1834,
	26, 1795, 937, 709, 710, 711, 708, 1652, 1646, 1600,
	112, 112, 722, 732, 733, 725, 726, 727, 728, 729,
	730, 731, 724, 1832, 1050, 1112, 104, 1112, 1160, 1163,
	1856, 1153, 1152, 1804, 1642, 994, 107, 937, 965, 97,
	79, 845, 73, 1806, 793, 1707, 1807, 1859, 792, 1805,
	1783, 1593, 1764, 1725, 1726, 1790, 1808, 791, 1809, 1729,
	1730, 1802, 790, 789, 1840, 1841, 788, 34, 787, 786,
	1796, 1735, 15, 1851, 785, 784, 1860, 1813, 1817, 1818,
	1819, 1820, 1830, 1829, 1812, 1810, 783, 1828, 6, 1742,
	782, 1169, 5, 104, 781, 780, 1855, 1185, 779, 1170,
	778, 1853, 1762, 1763, 1177, 1839, 1836, 773, 772, 771,
	1869, 709, 710, 711, 708, 73, 1864, 768, 1884, 764,
	645, 1886, 1854, 1888, 1852, 1849, 1863, 1857, 1858, 1918,
	1847, 763, 1845, 761, 760, 529, 112, 759, 758, 2213,
	1741, 1876, 757, 756, 755, 645, 1882, 754, 753, 112,
	1599, 735, 1959, 738, 1918, 1889, 1890, 1887, 750, 749,
	673, 1885, 709, 710, 711, 708, 1973, 1974, 736, 737,
	734, 1604, 723, 722, 732, 733, 725, 726, 727, 728,
	729, 730, 731, 724, 1589, 661, 1739, 2427, 2425, 2392,
	1949, 1976, 1978, 1785, 1659, 1724, 1738, 1625, 1628, 1629,
	1630, 1626, 1170, 1627, 1631, 1283, 672, 1170, 709, 710,
	711, 708, 1825, 1822, 1821, 1766, 1957, 1826, 709, 710,
	711, 708, 1823, 2483, 112, 1675, 112, 1824, 1954, 1953,
	1958, 1594, 1950, 1951, 1952, 1737, 1909, 1910, 1877, 1140,
	1966, 1962, 1981, 1967, 1963, 1964, 1977, 1670, 1699, 1827,
	1968, 1629, 1630, 1697, 1965, 1576, 1577, 709, 710, 711,
	708, 1897, 1736, 112, 847, 1980, 1988, 2360, 1912, 1583,
	1728, 667, 2015, 56, 1727, 33, 1991, 2162, 1995, 1911,
	1997, 1993, 1635, 32, 709, 710, 711, 708, 1195, 909,
	1705, 1992, 709, 710, 711, 708, 709, 710, 711, 708,
	1058, 937, 937, 1104, 1103, 908, 112, 2043, 325, 699,
	326, 2009, 709, 710, 711, 708, 1470, 2010, 327, 877,
	645, 849, 709, 710, 711, 708, 859, 860, 2440, 1816,
	857, 858, 2019, 2316, 935, 2037, 2035, 855, 856, 2055,
	1112, 2020, 2013, 2018, 2014, 2018, 853, 854, 2314, 2244,
	1642, 2242, 1620, 73, 2239, 2238, 2236, 2068, 2008, 2007,
	2441, 2045, 1986, 645, 852, 2075, 532, 2124, 2126, 2041,
	2124, 2124, 1918, 2042, 2048, 1625, 1628, 1629, 1630, 1626,
	1985, 1627, 1631, 2049, 1843, 645, 1201, 2429, 2428, 2050,
	1862, 1524, 659, 2044, 2428, 2062, 2429, 2208, 1989, 1634,
	881, 2047, 2056, 1197, 2125, 39, 2121, 723, 722, 732,
	733, 725, 726, 727, 728, 729, 730, 731, 724, 1,
	1488, 2072, 2100, 1998, 533, 534, 535, 536, 2166, 2129,
	2000, 2127, 2128, 2024, 1947, 1932, 871, 532, 2146, 551,
	1107, 861, 979, 628, 654, 2045, 976, 2143, 653, 651,
	1060, 2147, 433, 1286, 2280, 2359, 2405, 2310, 2362, 992,
	418, 937, 2231, 1905, 2194, 2148, 2233, 2150, 1760, 2058,
	1848, 112, 562, 465, 441, 762, 1282, 2144, 2145, 960,
	2126, 630, 2169, 440, 2033, 1779, 537, 627, 563, 1559,
	2003, 1141, 1162, 1145, 2037, 2121, 2495, 2482, 2459, 2192,
	1170, 2438, 2327, 2051, 2477, 2196, 2053, 2375, 2420, 2413,
	2323, 2163, 357, 1242, 523, 2054, 2218, 2167, 2168, 2245,
	2171, 2172, 2173, 2174, 601, 2211, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	2278, 2228, 2235, 2226, 2300, 358, 1603, 2352, 2286, 541,
	2229, 1588, 2130, 542, 1591, 1511, 1590, 1031, 714, 1048,
	747, 394, 2243, 645, 2258, 1513, 645, 645, 645, 406,
	400, 1776, 2115, 1837, 38, 1642, 645, 723, 722, 732,
	733, 725, 726, 727, 728, 729, 730, 731, 724, 37,
	2288, 36, 2321, 2296, 2297, 2298, 2295, 1276, 1299, 937,
	937, 2307, 2285, 435, 73, 114, 2306, 1300, 2320, 2157,
	2248, 2249, 2315, 2313, 2317, 2318, 2254, 2255, 2322, 2309,
	2364, 416, 415, 414, 413, 412, 1624, 1622, 1621, 1230,
	112, 1229, 935, 935, 2329, 2330, 1274, 2389, 645, 2342,
	2343, 2065, 2205, 2265, 2201, 2197, 2333, 2074, 2073, 2101,
	645, 2102, 2108, 800, 796, 798, 2335, 799, 797, 1713,
	1709, 1916, 2366, 1917, 2341, 2345, 1914, 1975, 1971, 1288,
	1294, 2227, 1175, 1765, 1231, 109, 2365, 2350, 1227, 2142,
	526, 25, 24, 2358, 1267, 23, 11, 10, 983, 9,
	14, 1899, 2370, 22, 21, 20, 19, 64, 2378, 2380,
	63, 62, 61, 18, 8, 60, 59, 58, 17, 16,
	2386, 53, 54, 49, 48, 47, 561, 46, 2397, 2398,
	2399, 2400, 2407, 45, 44, 2412, 43, 52, 51, 50,
	42, 41, 40, 77, 76, 2416, 75, 2418, 723, 722,
	732, 733, 725, 726, 727, 728, 729, 730, 731, 724,
	74, 27, 28, 29, 30, 87, 86, 88, 2423, 2424,
	2366, 2436, 2426, 84, 82, 85, 83, 81, 645, 2430,
	645, 2432, 35, 13, 2365, 2435, 2442, 1015, 2444, 1015,
	2447, 2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2453, 0, 2402, 2407, 645, 2454, 0, 0,
	0, 2462, 0, 0, 2465, 1015, 0, 0, 2471, 0,
	0, 0, 0, 0, 2340, 723, 722, 732, 733, 725,
	726, 727, 728, 729, 730, 731, 724, 0, 0, 0,
	0, 0, 2481, 0, 0, 0, 0, 0, 0, 0,
	0, 2494, 0, 2493, 0, 0, 0, 0, 0, 0,
	0, 0, 2506, 0, 0, 2508, 0, 2507, 2509, 0,
	0, 0, 2494, 1415, 1457, 0, 0, 1404, 0, 1362,
	1417, 1335, 1351, 1425, 1352, 1353, 1390, 1314, 1372, 241,
	1349, 0, 0, 0, 0, 0, 0, 1407, 1306, 1338,
	1339, 1308, 1345, 1309, 1336, 1364, 186, 1334, 1375, 211,
	1387, 1348, 1369, 1423, 0, 0, 271, 225, 0, 0,
	1367, 1409, 1370, 1395, 1361, 1391, 1322, 1383, 1418, 1350,
	0, 1388, 1419, 0, 0, 0, 0, 1188, 1189, 1190,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	1386, 1413, 1347, 0, 170, 1416, 1368, 1389, 0, 0,
	1307, 1384, 0, 1312, 1315, 1424, 1411, 1342, 1343, 0,
	0, 0, 0, 0, 2456, 0, 0, 1365, 1371, 1392,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1340, 0, 1380, 0, 0, 0, 1317, 1313, 0, 1363,
	0, 0, 159, 276, 291, 168, 267, 304, 173, 274,
	164, 240, 263, 0, 1456, 161, 289, 273, 222, 205,
	206, 160, 0, 258, 184, 197, 180, 238, 0, 288,
	316, 179, 307, 1316, 299, 163, 1451, 298, 237, 285,
	290, 223, 217, 162, 287, 221, 216, 209, 188, 0,
	201, 249, 215, 250, 202, 227, 226, 228, 1435, 1436,
	1437, 1438, 1439, 1447, 1448, 0, 1452, 1453, 1454, 1321,
	0, 1341, 1393, 0, 1305, 1402, 1410, 1360, 301, 1412,
	1357, 1356, 1442, 0, 1441, 275, 1443, 1444, 210, 1408,
	1337, 1346, 317, 1344, 261, 243, 1414, 1379, 1455, 259,
	213, 286, 251, 292, 277, 300, 255, 252, 155, 278,
	182, 224, 165, 166, 178, 185, 187, 189, 190, 233,
	234, 246, 266, 279, 280, 281, 181, 174, 260, 175,
	199, 176, 156, 268, 177, 157, 247, 284, 1440, 195,
	256, 220, 158, 219, 248, 283, 282, 308, 314, 315,
	319, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 1449, 0, 1450, 313, 193, 153,
	296, 0, 239, 0, 1405, 1310, 1320, 1318, 1354, 1381,
	1382, 235, 312, 1397, 1401, 1398, 1426, 264, 0, 0,
	0, 0, 0, 204, 245, 1399, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1311, 0, 272,
	294, 306, 323, 1458, 1459, 1460, 1461, 0, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 297, 1355, 1328, 1366, 305,
	1331, 1329, 1396, 1330, 1385, 321, 229, 230, 231, 232,
	196, 0, 172, 324, 254, 1376, 1359, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1377, 0, 1333, 318, 192, 198,
	0, 200, 171, 244, 194, 303, 207, 1403, 236, 203,
	269, 208, 214, 257, 302, 242, 262, 169, 293, 270,
	218, 0, 0, 1327, 1332, 1326, 1373, 1374, 1420, 1421,
	1422, 1394, 1319, 1406, 0, 1323, 1325, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1400, 0, 447,
	1378, 154, 0, 212, 1427, 253, 191, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 186, 0, 0, 211,
	0, 0, 0, 439, 0, 0, 271, 225, 0, 0,
	0, 0, 494, 502, 0, 1445, 1446, 309, 310, 311,
	295, 0, 183, 1469, 401, 0, 0, 432, 471, 470,
	420, 429, 0, 0, 167, 421, 0, 428, 422, 426,
	425, 423, 424, 0, 486, 0, 0, 0, 0, 0,
	0, 392, 405, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 403, 0, 0,
	0, 0, 448, 0, 404, 0, 0, 450, 0, 430,
	0, 0, 159, 276, 291, 168, 267, 304, 173, 274,
	164, 240, 263, 0, 0, 161, 289, 273, 222, 205,
	206, 160, 0, 258, 184, 197, 180, 238, 427, 446,
	451, 179, 508, 444, 299, 163, 0, 298, 237, 285,
	290, 223, 217, 162, 287, 221, 216, 209, 188, 509,
	201, 249, 215, 250, 202, 227, 226, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 0, 0, 301, 0,
	0, 492, 0, 0, 0, 275, 0, 0, 210, 0,
	0, 0, 445, 0, 261, 243, 505, 393, 0, 259,
	213, 286, 251, 292, 277, 300, 255, 252, 155, 278,
	182, 224, 165, 166, 178, 185, 187, 189, 190, 233,
	234, 246, 266, 279, 280, 281, 181, 174, 260, 175,
	199, 176, 156, 268, 177, 157, 247, 284, 0, 195,
	256, 220, 158, 219, 248, 283, 282, 308, 314, 315,
	319, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 1109, 1108, 1110, 313, 193, 153,
	296, 490, 239, 0, 504, 485, 487, 488, 491, 495,
	496, 497, 498, 499, 501, 503, 507, 264, 0, 0,
	0, 0, 0, 204, 245, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	294, 306, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 449, 229, 230, 231, 232,
	493, 0, 172, 324, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 192, 198,
	0, 200, 171, 244, 194, 303, 207, 0, 236, 203,
	269, 208, 214, 257, 302, 242, 262, 169, 293, 270,
	218, 0, 0, 515, 489, 514, 516, 517, 513, 518,
	519, 500, 411, 0, 454, 511, 510, 512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 212, 0, 253, 191, 477, 458, 459,
	460, 410, 461, 456, 457, 478, 452, 474, 475, 434,
	437, 462, 131, 463, 476, 479, 480, 520, 521, 522,
	466, 481, 473, 472, 464, 453, 482, 483, 438, 436,
	467, 468, 455, 469, 484, 447, 0, 309, 310, 311,
	295, 0, 183, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 186, 1171, 0, 211, 0, 0, 0, 439,
	0, 0, 271, 225, 0, 0, 0, 0, 494, 502,
	0, 0, 0, 0, 0, 0, 0, 1252, 0, 0,
	401, 0, 0, 432, 471, 470, 420, 429, 0, 0,
	167, 421, 0, 428, 422, 426, 425, 423, 424, 0,
	486, 0, 0, 0, 0, 0, 0, 392, 405, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 403, 0, 0, 0, 0, 448, 0,
	404, 0, 0, 1253, 0, 430, 0, 0, 159, 276,
	291, 168, 267, 304, 173, 274, 164, 240, 263, 0,
	0, 161, 289, 273, 222, 205, 206, 160, 0, 258,
	184, 197, 180, 238, 427, 446, 451, 179, 508, 444,
	299, 163, 0, 298, 237, 285, 290, 223, 217, 162,
	287, 221, 216, 209, 188, 509, 201, 249, 215, 250,
	202, 227, 226, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 0, 0, 301, 0, 0, 492, 0, 0,
	0, 275, 0, 0, 210, 0, 0, 0, 445, 0,
	261, 243, 505, 393, 0, 259, 213, 286, 251, 292,
	277, 300, 255, 252, 155, 278, 182, 224, 165, 166,
	178, 185, 187, 189, 190, 233, 234, 246, 266, 279,
	280, 281, 181, 174, 260, 175, 199, 176, 156, 268,
	177, 157, 247, 284, 0, 195, 256, 220, 158, 219,
	248, 283, 282, 308, 314, 315, 319, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 313, 193, 153, 296, 490, 239, 0,
	504, 485, 487, 488, 491, 495, 496, 497, 498, 499,
	501, 503, 507, 264, 0, 0, 0, 0, 0, 204,
	245, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 294, 306, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 449, 229, 230, 231, 232, 493, 0, 172, 324,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 192, 198, 0, 200, 171, 244,
	194, 303, 207, 0, 236, 203, 269, 208, 214, 257,
	302, 242, 262, 169, 293, 270, 218, 0, 0, 515,
	489, 514, 516, 517, 513, 518, 519, 500, 411, 0,
	454, 511, 510, 512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 212,
	0, 253, 191, 477, 458, 459, 460, 410, 461, 456,
	457, 478, 452, 474, 475, 434, 437, 462, 131, 463,
	476, 479, 480, 520, 521, 522, 466, 481, 473, 472,
	464, 453, 482, 483, 438, 436, 467, 468, 455, 469,
	484, 0, 0, 309, 310, 311, 295, 107, 183, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 186, 0, 0, 211,
	0, 0, 0, 439, 0, 0, 271, 225, 0, 0,
	0, 0, 494, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 0, 0, 432, 471, 470,
	420, 429, 0, 0, 167, 421, 0, 428, 422, 426,
	425, 423, 424, 0, 486, 0, 0, 0, 0, 0,
	0, 392, 405, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 403, 0, 0,
	0, 0, 448, 0, 404, 0, 0, 450, 0, 430,
	0, 0, 159, 276, 291, 168, 267, 304, 173, 274,
	164, 240, 263, 0, 0, 161, 289, 273, 222, 205,
	206, 160, 0, 258, 184, 197, 180, 238, 427, 446,
	451, 179, 508, 444, 299, 163, 0, 298, 237, 285,
	290, 223, 217, 162, 287, 221, 216, 209, 188, 509,
	201, 249, 215, 250, 202, 227, 226, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 0, 0, 301, 0,
	0, 492, 0, 0, 0, 275, 0, 0, 210, 0,
	0, 0, 445, 0, 261, 243, 505, 393, 0, 259,
	213, 286, 251, 292, 277, 300, 255, 252, 155, 278,
	182, 224, 165, 166, 178, 185, 187, 189, 190, 233,
	234, 246, 266, 279, 280, 281, 181, 174, 260, 175,
	199, 176, 156, 268, 177, 157, 247, 284, 0, 195,
	256, 220, 158, 219, 248, 283, 282, 308, 314, 315,
	319, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 0, 0, 0, 313, 193, 153,
	296, 490, 239, 0, 504, 485, 487, 488, 491, 495,
	496, 497, 498, 499, 501, 503, 507, 264, 0, 0,
	0, 0, 0, 204, 245, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	294, 306, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 449, 229, 230, 231, 232,
	493, 0, 172, 324, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 192, 198,
	0, 200, 171, 244, 194, 303, 207, 0, 236, 203,
	269, 208, 214, 257, 302, 242, 262, 169, 293, 270,
	218, 0, 0, 515, 489, 514, 516, 517, 513, 518,
	519, 500, 411, 0, 454, 511, 510, 512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 212, 80, 253, 191, 477, 458, 459,
	460, 410, 461, 456, 457, 478, 452, 474, 475, 434,
	437, 462, 131, 463, 476, 479, 480, 520, 521, 522,
	466, 481, 473, 472, 464, 453, 482, 483, 438, 436,
	467, 468, 455, 469, 484, 447, 0, 309, 310, 311,
	295, 0, 183, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 186, 2455, 0, 211, 0, 0, 0, 439,
	0, 0, 271, 225, 0, 0, 0, 0, 494, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	401, 0, 0, 432, 471, 470, 420, 429, 0, 0,
	167, 421, 0, 428, 422, 426, 425, 423, 424, 0,
	486, 0, 0, 0, 0, 0, 0, 392, 405, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 403, 0, 0, 0, 0, 448, 0,
	404, 0, 0, 450, 0, 430, 0, 0, 159, 276,
	291, 168, 267, 304, 173, 274, 164, 240, 263, 0,
	0, 161, 289, 273, 222, 205, 206, 160, 0, 258,
	184, 197, 180, 238, 427, 446, 451, 179, 508, 444,
	299, 163, 0, 298, 237, 285, 290, 223, 217, 162,
	287, 221, 216, 209, 188, 509, 201, 249, 215, 250,
	202, 227, 226, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 0, 0, 301, 0, 0, 492, 0, 0,
	0, 275, 0, 0, 210, 0, 0, 0, 445, 0,
	261, 243, 505, 393, 0, 259, 213, 286, 251, 292,
	277, 300, 255, 252, 155, 278, 182, 224, 165, 166,
	178, 185, 187, 189, 190, 233, 234, 246, 266, 279,
	280, 281, 181, 174, 260, 175, 199, 176, 156, 268,
	177, 157, 247, 284, 0, 195, 256, 220, 158, 219,
	248, 283, 282, 308, 314, 315, 319, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 313, 193, 153, 296, 490, 239, 0,
	504, 485, 487, 488, 491, 495, 496, 497, 498, 499,
	501, 503, 507, 264, 0, 0, 0, 0, 0, 204,
	245, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 294, 306, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 449, 229, 230, 231, 232, 493, 0, 172, 324,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 192, 198, 0, 200, 171, 244,
	194, 303, 207, 0, 236, 203, 269, 208, 214, 257,
	302, 242, 262, 169, 293, 270, 218, 0, 0, 515,
	489, 514, 516, 517, 513, 518, 519, 500, 411, 0,
	454, 511, 510, 512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 212,
	0, 253, 191, 477, 458, 459, 460, 410, 461, 456,
	457, 478, 452, 474, 475, 434, 437, 462, 131, 463,
	476, 479, 480, 520, 521, 522, 466, 481, 473, 472,
	464, 453, 482, 483, 438, 436, 467, 468, 455, 469,
	484, 447, 0, 309, 310, 311, 295, 0, 183, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 186, 1171,
	0, 211, 0, 0, 0, 439, 0, 0, 271, 225,
	0, 0, 0, 0, 494, 502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 0, 0, 432,
	471, 470, 420, 429, 0, 0, 167, 421, 0, 428,
	422, 426, 425, 423, 424, 0, 486, 0, 0, 0,
	0, 0, 0, 392, 405, 0, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	0, 0, 0, 0, 448, 0, 404, 0, 0, 450,
	0, 430, 0, 0, 159, 276, 291, 168, 267, 304,
	173, 274, 164, 240, 263, 0, 0, 161, 289, 273,
	222, 205, 206, 160, 0, 258, 184, 197, 180, 238,
	427, 446, 451, 179, 508, 444, 299, 163, 0, 298,
	237, 285, 290, 223, 217, 162, 287, 221, 216, 209,
	188, 509, 201, 249, 215, 250, 202, 227, 226, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 0, 0,
	301, 0, 0, 492, 0, 0, 0, 275, 0, 0,
	210, 0, 0, 0, 445, 0, 261, 243, 505, 393,
	0, 259, 213, 286, 251, 292, 277, 300, 255, 252,
	155, 278, 182, 224, 165, 166, 178, 185, 187, 189,
	190, 233, 234, 246, 266, 279, 280, 281, 181, 174,
	260, 175, 199, 176, 156, 268, 177, 157, 247, 284,
	0, 195, 256, 220, 158, 219, 248, 283, 282, 308,
	314, 315, 319, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 313,
	193, 153, 296, 490, 239, 0, 504, 485, 487, 488,
	491, 495, 496, 497, 498, 499, 501, 503, 507, 264,
	0, 0, 0, 0, 0, 204, 245, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 294, 306, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 449, 229, 230,
	231, 232, 493, 0, 172, 324, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	192, 198, 0, 200, 171, 244, 194, 303, 207, 0,
	236, 203, 269, 208, 214, 257, 302, 242, 262, 169,
	293, 270, 218, 0, 0, 515, 489, 514, 516, 517,
	513, 518, 519, 500, 411, 0, 454, 511, 510, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 212, 0, 253, 191, 477,
	458, 459, 460, 410, 461, 456, 457, 478, 452, 474,
	475, 434, 437, 462, 131, 463, 476, 479, 480, 520,
	521, 522, 466, 481, 473, 472, 464, 453, 482, 483,
	438, 436, 467, 468, 455, 469, 484, 447, 0, 309,
	310, 311, 295, 0, 183, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 186, 0, 0, 211, 0, 0,
	0, 439, 0, 0, 271, 225, 0, 0, 0, 0,
	494, 502, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 401, 0, 0, 432, 471, 470, 420, 429,
	0, 0, 167, 421, 0, 428, 422, 426, 425, 423,
	424, 0, 486, 0, 0, 0, 0, 0, 0, 392,
	405, 0, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 956, 0, 0, 0,
	448, 0, 404, 0, 0, 450, 0, 430, 0, 0,
	159, 276, 291, 168, 267, 304, 173, 274, 164, 240,
	263, 0, 0, 161, 289, 273, 222, 205, 206, 160,
	0, 258, 184, 197, 180, 238, 427, 446, 451, 179,
	508, 444, 299, 163, 0, 298, 237, 285, 290, 223,
	217, 162, 287, 221, 216, 209, 188, 509, 201, 249,
	215, 250, 202, 227, 226, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 0, 0, 301, 0, 0, 492,
	0, 0, 0, 275, 0, 0, 210, 0, 0, 0,
	445, 0, 261, 243, 505, 393, 0, 259, 213, 286,
	251, 292, 277, 300, 255, 252, 155, 278, 182, 224,
	165, 166, 178, 185, 187, 189, 190, 233, 234, 246,
	266, 279, 280, 281, 181, 174, 260, 175, 199, 176,
	156, 268, 177, 157, 247, 284, 0, 195, 256, 220,
	158, 219, 248, 283, 282, 308, 314, 315, 319, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 0, 313, 193, 153, 296, 490,
	239, 0, 504, 485, 487, 488, 491, 495, 496, 497,
	498, 499, 501, 503, 507, 264, 0, 0, 0, 0,
	0, 204, 245, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 294, 306,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 449, 229, 230, 231, 232, 493, 0,
	172, 324, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 192, 198, 0, 200,
	171, 244, 194, 303, 207, 0, 236, 203, 269, 208,
	214, 257, 302, 242, 262, 169, 293, 270, 218, 0,
	0, 515, 489, 514, 516, 517, 513, 518, 519, 500,
	411, 0, 454, 511, 510, 512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 212, 0, 253, 191, 477, 458, 459, 460, 410,
	461, 456, 457, 478, 452, 474, 475, 434, 437, 462,
	131, 463, 476, 479, 480, 520, 521, 522, 466, 481,
	473, 472, 464, 453, 482, 483, 438, 436, 467, 468,
	455, 469, 484, 0, 0, 309, 310, 311, 295, 447,
	183, 0, 1530, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 186, 0, 0, 211,
	0, 0, 0, 439, 0, 0, 271, 225, 0, 0,
	0, 0, 494, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 0, 0, 432, 471, 470,
	420, 429, 0, 0, 167, 421, 0, 428, 422, 426,
	425, 423, 424, 0, 486, 0, 0, 0, 0, 0,
	0, 392, 405, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 403, 0, 0,
	0, 0, 448, 0, 404, 0, 0, 450, 0, 430,
	0, 0, 159, 276, 291, 168, 267, 304, 173, 274,
	164, 240, 263, 0, 0, 161, 289, 273, 222, 205,
	206, 160, 0, 258, 184, 197, 180, 238, 427, 446,
	451, 179, 508, 444, 299, 163, 0, 298, 237, 285,
	290, 223, 217, 162, 287, 221, 216, 209, 188, 509,
	201, 249, 215, 250, 202, 227, 226, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 0, 0, 301, 0,
	0, 492, 0, 0, 0, 275, 0, 0, 210, 0,
	0, 0, 445, 0, 261, 243, 505, 393, 0, 259,
	213, 286, 251, 292, 277, 300, 255, 252, 155, 278,
	182, 224, 165, 166, 178, 185, 187, 189, 190, 233,
	234, 246, 266, 279, 280, 281, 181, 174, 260, 175,
	199, 176, 156, 268, 177, 157, 247, 284, 0, 195,
	256, 220, 158, 219, 248, 283, 282, 308, 314, 315,
	319, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 0, 0, 0, 313, 193, 153,
	296, 490, 239, 0, 504, 485, 487, 488, 491, 495,
	496, 497, 498, 499, 501, 503, 507, 264, 0, 0,
	0, 0, 0, 204, 245, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	294, 306, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 449, 229, 230, 231, 232,
	493, 0, 172, 324, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 192, 198,
	0, 200, 171, 244, 194, 303, 207, 0, 236, 203,
	269, 208, 214, 257, 302, 242, 262, 169, 293, 270,
	218, 0, 0, 515, 489, 514, 516, 517, 513, 518,
	519, 500, 411, 0, 454, 511, 510, 512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 212, 0, 253, 191, 477, 458, 459,
	460, 410, 461, 456, 457, 478, 452, 474, 475, 434,
	437, 462, 131, 463, 476, 479, 480, 520, 521, 522,
	466, 481, 473, 472, 464, 453, 482, 483, 438, 436,
	467, 468, 455, 469, 484, 447, 0, 309, 310, 311,
	295, 0, 183, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 186, 0, 0, 211, 0, 0, 0, 439,
	0, 0, 271, 225, 0, 0, 0, 0, 494, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	401, 0, 0, 432, 471, 470, 420, 429, 0, 0,
	167, 421, 0, 428, 422, 426, 425, 423, 424, 0,
	486, 0, 0, 0, 0, 0, 0, 392, 405, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 403, 0, 0, 0, 0, 448, 0,
	404, 0, 0, 450, 0, 430, 0, 0, 159, 276,
	291, 168, 267, 304, 173, 274, 164, 240, 263, 0,
	0, 161, 289, 273, 222, 205, 206, 160, 0, 258,
	184, 197, 180, 238, 427, 446, 451, 179, 508, 444,
	299, 163, 0, 298, 237, 285, 290, 223, 217, 162,
	287, 221, 216, 209, 188, 509, 201, 249, 215, 250,
	202, 227, 226, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 0, 0, 301, 0, 0, 492, 0, 0,
	0, 275, 0, 0, 210, 0, 0, 0, 445, 0,
	261, 243, 505, 393, 0, 259, 213, 286, 251, 292,
	277, 300, 255, 252, 155, 278, 182, 224, 165, 166,
	178, 185, 187, 189, 190, 233, 234, 246, 266, 279,
	280, 281, 181, 174, 260, 175, 199, 176, 156, 268,
	177, 157, 247, 284, 0, 195, 256, 220, 158, 219,
	248, 283, 282, 308, 314, 315, 319, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 313, 193, 153, 296, 490, 239, 0,
	504, 485, 487, 488, 491, 495, 496, 497, 498, 499,
	501, 503, 507, 264, 0, 0, 0, 0, 0, 204,
	245, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 294, 306, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 449, 229, 230, 231, 232, 493, 0, 172, 324,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 192, 198, 0, 200, 171, 244,
	194, 303, 207, 0, 236, 203, 269, 208, 214, 257,
	302, 242, 262, 169, 293, 270, 218, 0, 0, 515,
	489, 514, 516, 517, 513, 518, 519, 500, 411, 0,
	454, 511, 510, 512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 212,
	0, 253, 191, 477, 458, 459, 460, 410, 461, 456,
	457, 478, 452, 474, 475, 434, 437, 462, 131, 463,
	476, 479, 480, 520, 521, 522, 466, 481, 473, 472,
	464, 453, 482, 483, 438, 436, 467, 468, 455, 469,
	484, 447, 0, 309, 310, 311, 295, 0, 183, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	1032, 0, 0, 0, 408, 0, 0, 0, 186, 0,
	0, 211, 0, 0, 0, 439, 0, 0, 271, 225,
	0, 0, 0, 0, 494, 502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 0, 0, 432,
	471, 470, 420, 429, 0, 0, 167, 421, 0, 428,
	422, 426, 425, 423, 424, 0, 486, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	0, 0, 0, 0, 448, 0, 404, 0, 0, 450,
	0, 430, 0, 0, 159, 276, 291, 168, 267, 304,
	173, 274, 164, 240, 263, 0, 0, 161, 289, 273,
	222, 205, 206, 160, 0, 258, 184, 197, 180, 238,
	427, 446, 451, 179, 508, 444, 299, 163, 0, 298,
	237, 285, 290, 223, 217, 162, 287, 221, 216, 209,
	188, 509, 201, 249, 215, 250, 202, 227, 226, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 0, 0,
	301, 0, 0, 492, 0, 0, 0, 275, 0, 0,
	210, 0, 0, 0, 445, 0, 261, 243, 505, 0,
	0, 259, 213, 286, 251, 292, 277, 300, 255, 252,
	155, 278, 182, 224, 165, 166, 178, 185, 187, 189,
	190, 233, 234, 246, 266, 279, 280, 281, 181, 174,
	260, 175, 199, 176, 156, 268, 177, 157, 247, 284,
	0, 195, 256, 220, 158, 219, 248, 283, 282, 308,
	1033, 1034, 319, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 313,
	193, 153, 296, 490, 239, 0, 504, 485, 487, 488,
	491, 495, 496, 497, 498, 499, 501, 503, 507, 264,
	0, 0, 0, 0, 0, 204, 245, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 294, 306, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 449, 229, 230,
	231, 232, 493, 0, 172, 324, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	192, 198, 0, 200, 171, 244, 194, 303, 207, 0,
	236, 203, 269, 208, 214, 257, 302, 242, 262, 169,
	293, 270, 218, 0, 0, 515, 489, 514, 516, 517,
	513, 518, 519, 500, 411, 0, 454, 511, 510, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 212, 0, 253, 191, 477,
	458, 459, 460, 410, 461, 456, 457, 478, 452, 474,
	475, 434, 437, 462, 131, 463, 476, 479, 480, 520,
	521, 522, 466, 481, 473, 472, 464, 453, 482, 483,
	438, 436, 467, 468, 455, 469, 484, 447, 0, 309,
	310, 311, 295, 0, 183, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 186, 0, 0, 211, 0, 0,
	0, 439, 0, 0, 271, 225, 0, 0, 0, 0,
	494, 502, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 432, 471, 470, 420, 429,
	0, 0, 167, 421, 0, 428, 422, 426, 425, 423,
	424, 0, 486, 0, 0, 0, 0, 0, 0, 392,
	405, 0, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 0, 0, 0, 0,
	448, 0, 404, 0, 0, 450, 0, 430, 0, 0,
	159, 276, 291, 168, 267, 304, 173, 274, 164, 240,
	263, 0, 0, 161, 289, 273, 222, 205, 206, 160,
	0, 258, 184, 197, 180, 238, 427, 446, 451, 179,
	508, 444, 299, 163, 0, 298, 237, 285, 290, 223,
	217, 162, 287, 221, 216, 209, 188, 509, 201, 249,
	215, 250, 202, 227, 226, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 0, 0, 301, 0, 0, 492,
	0, 0, 0, 275, 0, 0, 210, 0, 0, 0,
	445, 0, 261, 243, 505, 393, 0, 259, 213, 286,
	251, 292, 277, 300, 255, 252, 155, 278, 182, 224,
	165, 166, 178, 185, 187, 189, 190, 233, 234, 246,
	266, 279, 280, 281, 181, 174, 260, 175, 199, 176,
	156, 268, 177, 157, 247, 284, 0, 195, 256, 220,
	158, 219, 248, 283, 282, 308, 314, 315, 319, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 0, 313, 193, 153, 296, 490,
	239, 0, 504, 485, 487, 488, 491, 495, 496, 497,
	498, 499, 501, 503, 507, 264, 0, 0, 0, 0,
	0, 204, 245, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 294, 306,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 449, 229, 230, 231, 232, 493, 0,
	172, 324, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 192, 198, 0, 200,
	171, 244, 194, 303, 207, 0, 236, 203, 269, 208,
	214, 257, 302, 242, 262, 169, 293, 270, 218, 0,
	0, 515, 489, 514, 516, 517, 513, 518, 519, 500,
	411, 0, 454, 511, 510, 512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 212, 0, 253, 191, 477, 458, 459, 460, 410,
	461, 456, 457, 478, 452, 474, 475, 434, 437, 462,
	131, 463, 476, 479, 480, 520, 521, 522, 466, 481,
	473, 472, 464, 453, 482, 483, 438, 436, 467, 468,
	455, 469, 484, 447, 0, 309, 310, 311, 295, 0,
	183, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	186, 0, 0, 211, 0, 0, 0, 439, 0, 0,
	271, 225, 0, 0, 0, 0, 494, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 0,
	0, 432, 471, 470, 420, 429, 0, 0, 167, 421,
	0, 428, 422, 426, 425, 423, 424, 0, 486, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 0, 0, 0, 0, 448, 0, 404, 0,
	0, 450, 0, 430, 0, 0, 159, 276, 291, 168,
	267, 304, 173, 274, 164, 240, 263, 0, 0, 161,
	289, 273, 222, 205, 206, 160, 0, 258, 184, 197,
	180, 238, 427, 446, 451, 179, 508, 444, 299, 163,
	0, 298, 237, 285, 290, 223, 217, 162, 287, 221,
	216, 209, 188, 509, 201, 249, 215, 250, 202, 227,
	226, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	0, 0, 301, 0, 0, 492, 0, 0, 0, 275,
	0, 0, 210, 0, 0, 0, 445, 0, 261, 243,
	505, 0, 0, 259, 213, 286, 251, 292, 277, 300,
	255, 252, 155, 278, 182, 224, 165, 166, 178, 185,
	187, 189, 190, 233, 234, 246, 266, 279, 280, 281,
	181, 174, 260, 175, 199, 176, 156, 268, 177, 157,
	247, 284, 0, 195, 256, 220, 158, 219, 248, 283,
	282, 308, 314, 315, 319, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 0, 0, 0,
	0, 313, 193, 153, 296, 490, 239, 0, 504, 485,
	487, 488, 491, 495, 496, 497, 498, 499, 501, 503,
	507, 264, 0, 0, 0, 0, 0, 204, 245, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 294, 306, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 305, 0, 0, 0, 0, 0, 449,
	229, 230, 231, 232, 493, 0, 172, 324, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 192, 198, 0, 200, 171, 244, 194, 303,
	207, 0, 236, 203, 269, 208, 214, 257, 302, 242,
	262, 169, 293, 270, 218, 0, 0, 515, 489, 514,
	516, 517, 513, 518, 519, 500, 411, 0, 454, 511,
	510, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 212, 0, 253,
	191, 477, 458, 459, 460, 410, 461, 456, 457, 478,
	452, 474, 475, 434, 437, 462, 131, 463, 476, 479,
	480, 520, 521, 522, 466, 481, 473, 472, 464, 453,
	482, 483, 438, 436, 467, 468, 455, 469, 484, 0,
	0, 309, 310, 311, 295, 107, 183, 31, 97, 79,
	0, 0, 0, 0, 0, 0, 0, 241, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 271, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 113, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 276, 291, 168, 267, 304, 173, 274, 164, 240,
	263, 0, 0, 161, 289, 273, 222, 205, 206, 160,
	0, 258, 184, 197, 180, 238, 0, 288, 316, 179,
	307, 0, 299, 163, 0, 298, 237, 285, 290, 223,
	217, 162, 287, 221, 216, 209, 188, 0, 201, 249,
	215, 250, 202, 227, 226, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 210, 0, 0, 0,
	317, 0, 261, 243, 0, 0, 0, 259, 213, 286,
	251, 292, 277, 300, 255, 252, 155, 278, 182, 224,
	165, 166, 178, 185, 187, 189, 190, 233, 234, 246,
	266, 279, 280, 281, 181, 174, 260, 175, 199, 176,
	156, 268, 177, 157, 247, 284, 0, 195, 256, 220,
	158, 219, 248, 283, 282, 308, 314, 315, 319, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 0, 1087, 0, 313, 193, 153, 296, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	312, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 204, 245, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 294, 306,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 321, 229, 230, 231, 232, 332, 334,
	172, 324, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 192, 198, 0, 200,
	171, 244, 194, 303, 207, 0, 236, 203, 269, 208,
	214, 257, 302, 242, 262, 169, 293, 270, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1083, 0, 0, 1080, 0, 0, 0, 1082,
	1079, 1081, 1085, 1086, 0, 0, 0, 1084, 0, 154,
	0, 212, 80, 253, 191, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 241, 0, 0, 0, 309, 310, 311, 295, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 271, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 1925, 1928, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1090, 1091, 1092, 1093, 1094, 1095, 1088, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 276, 291, 168, 267, 304,
	173, 274, 164, 240, 263, 0, 0, 161, 289, 273,
	222, 205, 206, 160, 0, 258, 184, 197, 180, 238,
	0, 288, 316, 179, 307, 0, 299, 163, 0, 298,
	237, 285, 290, 223, 217, 162, 287, 221, 216, 209,
	188, 0, 201, 249, 215, 250, 202, 227, 226, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1929,
	301, 0, 0, 0, 1922, 0, 1921, 275, 1923, 1926,
	210, 0, 0, 0, 317, 0, 261, 243, 0, 0,
	0, 259, 213, 286, 251, 292, 277, 300, 255, 252,
	155, 278, 182, 224, 165, 166, 178, 185, 187, 189,
	190, 233, 234, 246, 266, 279, 280, 281, 181, 174,
	260, 175, 199, 176, 156, 268, 177, 157, 247, 284,
	1927, 195, 256, 220, 158, 219, 248, 283, 282, 308,
	314, 315, 319, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 313,
	193, 153, 296, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 312, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 204, 245, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 294, 306, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 321, 229, 230,
	231, 232, 196, 0, 172, 324, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	192, 198, 0, 200, 171, 244, 194, 303, 207, 0,
	236, 203, 269, 208, 214, 257, 302, 242, 262, 169,
	293, 270, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 212, 0, 253, 191, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 241, 0, 0, 0, 309,
	310, 311, 295, 0, 183, 0, 0, 1278, 0, 0,
	0, 0, 186, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 271, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 0, 0, 1279, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 709, 710, 711, 708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 276,
	291, 168, 267, 304, 173, 274, 164, 240, 263, 0,
	0, 161, 289, 273, 222, 205, 206, 160, 0, 258,
	184, 197, 180, 238, 0, 288, 316, 179, 307, 0,
	299, 163, 0, 298, 237, 285, 290, 223, 217, 162,
	287, 221, 216, 209, 188, 0, 201, 249, 215, 250,
	202, 227, 226, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 210, 0, 0, 0, 317, 0,
	261, 243, 0, 0, 0, 259, 213, 286, 251, 292,
	277, 300, 255, 252, 155, 278, 182, 224, 165, 166,
	178, 185, 187, 189, 190, 233, 234, 246, 266, 279,
	280, 281, 181, 174, 260, 175, 199, 176, 156, 268,
	177, 157, 247, 284, 0, 195, 256, 220, 158, 219,
	248, 283, 282, 308, 314, 315, 319, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 313, 193, 153, 296, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 312, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 204,
	245, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 294, 306, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 321, 229, 230, 231, 232, 196, 0, 172, 324,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 192, 198, 0, 200, 171, 244,
	194, 303, 207, 0, 236, 203, 269, 208, 214, 257,
	302, 242, 262, 169, 293, 270, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 212,
	0, 253, 191, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 241,
	0, 0, 0, 309, 310, 311, 295, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 186, 600, 0, 211,
	0, 0, 0, 0, 0, 0, 271, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 608, 609,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 276, 291, 168, 267, 304, 173, 274,
	164, 240, 263, 0, 0, 161, 289, 273, 222, 205,
	206, 160, 0, 258, 184, 197, 180, 238, 0, 288,
	316, 179, 307, 586, 299, 163, 585, 298, 237, 285,
	290, 223, 217, 162, 287, 221, 216, 209, 188, 0,
	201, 249, 215, 250, 202, 227, 226, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 210, 0,
	0, 0, 317, 0, 261, 243, 0, 0, 0, 259,
	213, 286, 251, 292, 277, 300, 598, 252, 155, 278,
	182, 224, 165, 166, 178, 185, 187, 189, 190, 233,
	234, 246, 266, 279, 280, 281, 181, 174, 260, 175,
	199, 176, 156, 268, 177, 157, 247, 284, 0, 195,
	256, 220, 158, 219, 248, 283, 282, 308, 314, 315,
	319, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 0, 0, 0, 313, 193, 153,
	296, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 312, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 204, 245, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	294, 306, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 599, 297, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 602, 229, 230, 231, 232,
	196, 0, 172, 324, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 192, 198,
	0, 200, 171, 244, 194, 303, 207, 0, 610, 605,
	606, 208, 214, 257, 302, 242, 262, 169, 293, 270,
	607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 212, 0, 253, 191, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 107, 0, 0, 0, 309, 310, 311,
	295, 0, 183, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 271, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	104, 1289, 0, 113, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 276,
	291, 168, 267, 304, 173, 274, 164, 240, 263, 0,
	0, 161, 289, 273, 222, 205, 206, 160, 0, 258,
	184, 197, 180, 238, 0, 288, 316, 179, 307, 0,
	299, 163, 0, 298, 237, 285, 290, 223, 217, 162,
	287, 221, 216, 209, 188, 0, 201, 249, 215, 250,
	202, 227, 226, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 210, 0, 0, 0, 317, 0,
	261, 243, 0, 0, 0, 259, 213, 286, 251, 292,
	277, 300, 255, 252, 155, 278, 182, 224, 165, 166,
	178, 185, 187, 189, 190, 233, 234, 246, 266, 279,
	280, 281, 181, 174, 260, 175, 199, 176, 156, 268,
	177, 157, 247, 284, 0, 195, 256, 220, 158, 219,
	248, 283, 282, 308, 314, 315, 319, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 313, 193, 153, 296, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 312, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 204,
	245, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 294, 306, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 321, 229, 230, 231, 232, 196, 0, 172, 324,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 192, 198, 0, 200, 171, 244,
	194, 303, 207, 0, 236, 203, 269, 208, 214, 257,
	302, 242, 262, 169, 293, 270, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 212,
	80, 253, 191, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 241,
	0, 0, 0, 309, 310, 311, 295, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 271, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 608, 609,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 276, 291, 168, 267, 304, 173, 274,
	164, 240, 263, 0, 0, 161, 289, 273, 222, 205,
	206, 160, 0, 258, 184, 197, 180, 238, 0, 288,
	316, 179, 307, 586, 299, 163, 585, 298, 237, 285,
	290, 223, 217, 162, 287, 221, 216, 209, 188, 0,
	201, 249, 215, 250, 202, 227, 226, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 210, 0,
	0, 0, 317, 0, 261, 243, 0, 0, 0, 259,
	213, 286, 251, 292, 277, 300, 255, 252, 155, 278,
	182, 224, 165, 166, 178, 185, 187, 189, 190, 233,
	234, 246, 266, 279, 280, 281, 181, 174, 260, 175,
	199, 176, 156, 268, 177, 157, 247, 284, 0, 195,
	256, 220, 158, 219, 248, 283, 282, 308, 314, 315,
	319, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 0, 0, 0, 313, 193, 153,
	296, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 312, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 204, 245, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	294, 306, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 321, 229, 230, 231, 232,
	196, 0, 172, 324, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 192, 198,
	0, 200, 171, 244, 194, 303, 207, 0, 610, 605,
	606, 208, 214, 257, 302, 242, 262, 169, 293, 270,
	607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 212, 0, 253, 191, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 241, 0, 0, 0, 309, 310, 311,
	295, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	186, 940, 0, 211, 0, 0, 0, 0, 0, 0,
	271, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 938, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 936, 0, 0, 0, 0, 159, 276, 291, 168,
	267, 304, 173, 274, 164, 240, 263, 0, 0, 161,
	289, 273, 222, 205, 206, 160, 0, 258, 184, 197,
	180, 238, 0, 288, 316, 179, 307, 0, 299, 163,
	0, 298, 237, 285, 290, 223, 217, 162, 287, 221,
	216, 209, 188, 0, 201, 249, 215, 250, 202, 227,
	226, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 210, 0, 0, 0, 317, 0, 261, 243,
	0, 0, 0, 259, 213, 286, 251, 292, 277, 300,
	255, 252, 155, 278, 182, 224, 165, 166, 178, 185,
	187, 189, 190, 233, 234, 246, 266, 279, 280, 281,
	181, 174, 260, 175, 199, 176, 156, 268, 177, 157,
	247, 284, 0, 195, 256, 220, 158, 219, 248, 283,
	282, 308, 314, 315, 319, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 0, 0, 0,
	0, 313, 193, 153, 296, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 312, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 204, 245, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 294, 306, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 0, 305, 0, 0, 0, 0, 0, 321,
	229, 230, 231, 232, 196, 0, 172, 324, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 192, 198, 0, 200, 171, 244, 194, 303,
	207, 0, 236, 203, 269, 208, 214, 257, 302, 242,
	262, 169, 293, 270, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 212, 0, 253,
	191, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 241, 0, 0,
	0, 309, 310, 311, 295, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 186, 934, 0, 211, 0, 0,
	0, 0, 0, 0, 271, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 0, 0, 938, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 936, 0, 0, 0, 0,
	159, 276, 291, 168, 267, 304, 173, 274, 164, 240,
	263, 0, 0, 161, 289, 273, 222, 205, 206, 160,
	0, 258, 184, 197, 180, 238, 0, 288, 316, 179,
	307, 0, 299, 163, 0, 298, 237, 285, 290, 223,
	217, 162, 287, 221, 216, 209, 188, 0, 201, 249,
	215, 250, 202, 227, 226, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 210, 0, 0, 0,
	317, 0, 261, 243, 0, 0, 0, 259, 213, 286,
	251, 292, 277, 300, 255, 252, 155, 278, 182, 224,
	165, 166, 178, 185, 187, 189, 190, 233, 234, 246,
	266, 279, 280, 281, 181, 174, 260, 175, 199, 176,
	156, 268, 177, 157, 247, 284, 0, 195, 256, 220,
	158, 219, 248, 283, 282, 308, 314, 315, 319, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 0, 313, 193, 153, 296, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	312, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 204, 245, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 294, 306,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 321, 229, 230, 231, 232, 196, 0,
	172, 324, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 192, 198, 0, 200,
	171, 244, 194, 303, 207, 0, 236, 203, 269, 208,
	214, 257, 302, 242, 262, 169, 293, 270, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 212, 0, 253, 191, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 241, 0, 0, 0, 309, 310, 311, 295, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 271, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2361, 0, 113,
	471, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 276, 291, 168, 267, 304,
	173, 274, 164, 240, 263, 0, 0, 161, 289, 273,
	222, 205, 206, 160, 0, 258, 184, 197, 180, 238,
	0, 288, 316, 179, 307, 0, 299, 163, 0, 298,
	237, 285, 290, 223, 217, 162, 287, 221, 216, 209,
	188, 0, 201, 249, 215, 250, 202, 227, 226, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	210, 0, 0, 0, 317, 0, 261, 243, 0, 0,
	0, 259, 213, 286, 251, 292, 277, 300, 255, 252,
	155, 278, 182, 224, 165, 166, 178, 185, 187, 189,
	190, 233, 234, 246, 266, 279, 280, 281, 181, 174,
	260, 175, 199, 176, 156, 268, 177, 157, 247, 284,
	0, 195, 256, 220, 158, 219, 248, 283, 282, 308,
	314, 315, 319, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 313,
	193, 153, 296, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 312, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 204, 245, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 294, 306, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 321, 229, 230,
	231, 232, 196, 0, 172, 324, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	192, 198, 0, 200, 171, 244, 194, 303, 207, 0,
	236, 203, 269, 208, 214, 257, 302, 242, 262, 169,
	293, 270, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 212, 0, 253, 191, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 241, 0, 0, 0, 309,
	310, 311, 295, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 271, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 0, 0, 938, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 936, 0, 0, 0, 0, 159, 276,
	291, 168, 267, 304, 173, 274, 164, 240, 263, 0,
	0, 161, 289, 273, 222, 205, 206, 160, 0, 258,
	184, 197, 180, 238, 0, 288, 316, 179, 307, 0,
	299, 163, 0, 298, 237, 285, 290, 223, 217, 162,
	287, 221, 216, 209, 188, 0, 201, 249, 215, 250,
	202, 227, 226, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 210, 0, 0, 0, 317, 0,
	261, 243, 0, 0, 0, 259, 213, 286, 251, 292,
	277, 300, 255, 252, 155, 278, 182, 224, 165, 166,
	178, 185, 187, 189, 190, 233, 234, 246, 266, 279,
	280, 281, 181, 174, 260, 175, 199, 176, 156, 268,
	177, 157, 247, 284, 0, 195, 256, 220, 158, 219,
	248, 283, 282, 308, 314, 315, 319, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 313, 193, 153, 296, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 312, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 204,
	245, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 294, 306, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 321, 229, 230, 231, 232, 196, 0, 172, 324,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 192, 198, 0, 200, 171, 244,
	194, 303, 207, 0, 236, 203, 269, 208, 214, 257,
	302, 242, 262, 169, 293, 270, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 212,
	0, 253, 191, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 241,
	0, 0, 0, 309, 310, 311, 295, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 271, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 0, 0,
	938, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 159, 276, 291, 168, 267, 304, 173, 274,
	164, 240, 263, 0, 0, 161, 289, 273, 222, 205,
	206, 160, 0, 258, 184, 197, 180, 238, 0, 288,
	316, 179, 307, 0, 299, 163, 0, 298, 237, 285,
	290, 223, 217, 162, 287, 221, 216, 209, 188, 0,
	201, 249, 215, 250, 202, 227, 226, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 210, 0,
	0, 0, 317, 0, 261, 243, 0, 0, 0, 259,
	213, 286, 251, 292, 277, 300, 255, 252, 155, 278,
	182, 224, 165, 166, 178, 185, 187, 189, 190, 233,
	234, 246, 266, 279, 280, 281, 181, 174, 260, 175,
	199, 176, 156, 268, 177, 157, 247, 284, 0, 195,
	256, 220, 158, 219, 248, 283, 282, 308, 314, 315,
	319, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 0, 0, 0, 313, 193, 153,
	296, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 312, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 204, 245, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	294, 306, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 321, 229, 230, 231, 232,
	196, 0, 172, 324, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 192, 198,
	0, 200, 171, 244, 194, 303, 207, 0, 236, 203,
	269, 208, 214, 257, 302, 242, 262, 169, 293, 270,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 212, 0, 253, 191, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 241, 0, 0, 0, 309, 310, 311,
	295, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 211, 0, 0, 0, 0, 0, 0,
	271, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1233, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 276, 291, 168,
	267, 304, 173, 274, 164, 240, 263, 0, 0, 161,
	289, 273, 222, 205, 206, 160, 0, 258, 184, 197,
	180, 238, 0, 288, 316, 179, 307, 0, 299, 163,
	0, 298, 237, 285, 290, 223, 217, 162, 287, 221,
	216, 209, 188, 0, 201, 249, 215, 250, 202, 227,
	226, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 210, 0, 0, 0, 317, 0, 261, 243,
	0, 0, 0, 259, 213, 286, 251, 292, 277, 300,
	255, 252, 155, 278, 182, 224, 165, 166, 178, 185,
	187, 189, 190, 233, 234, 246, 266, 279, 280, 281,
	181, 174, 260, 175, 199, 176, 156, 268, 177, 157,
	247, 284, 0, 195, 256, 220, 158, 219, 248, 283,
	282, 308, 314, 315, 319, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 0, 0, 0,
	0, 313, 193, 153, 296, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 312, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 204, 245, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 294, 306, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 0, 305, 0, 0, 0, 0, 0, 321,
	229, 230, 231, 232, 196, 0, 172, 324, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 192, 198, 0, 200, 171, 244, 194, 303,
	207, 0, 236, 203, 269, 208, 214, 257, 302, 242,
	262, 169, 293, 270, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 212, 0, 253,
	191, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 241, 1234, 0,
	0, 309, 310, 311, 295, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 186, 1657, 0, 211, 0, 0,
	0, 0, 0, 0, 271, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 0, 0, 938, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 276, 291, 168, 267, 304, 173, 274, 164, 240,
	263, 0, 0, 161, 289, 273, 222, 205, 206, 160,
	0, 258, 184, 197, 180, 238, 0, 288, 316, 179,
	307, 0, 299, 163, 0, 298, 237, 285, 290, 223,
	217, 162, 287, 221, 216, 209, 188, 0, 201, 249,
	215, 250, 202, 227, 226, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 210, 0, 0, 0,
	317, 0, 261, 243, 0, 0, 0, 259, 213, 286,
	251, 292, 277, 300, 255, 252, 155, 278, 182, 224,
	165, 166, 178, 185, 187, 189, 190, 233, 234, 246,
	266, 279, 280, 281, 181, 174, 260, 175, 199, 176,
	156, 268, 177, 157, 247, 284, 0, 195, 256, 220,
	158, 219, 248, 283, 282, 308, 314, 315, 319, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 0, 313, 193, 153, 296, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	312, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 204, 245, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 294, 306,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 321, 229, 230, 231, 232, 196, 0,
	172, 324, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 192, 198, 0, 200,
	171, 244, 194, 303, 207, 0, 236, 203, 269, 208,
	214, 257, 302, 242, 262, 169, 293, 270, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 212, 0, 253, 191, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 241, 0, 0, 0, 309, 310, 311, 295, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 271, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	471, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 276, 291, 168, 267, 304,
	173, 274, 164, 240, 263, 0, 0, 161, 289, 273,
	222, 205, 206, 160, 0, 258, 184, 197, 180, 238,
	0, 288, 316, 179, 307, 0, 299, 163, 0, 298,
	237, 285, 290, 223, 217, 162, 287, 221, 216, 209,
	188, 0, 201, 249, 215, 250, 202, 227, 226, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	210, 0, 0, 0, 317, 0, 261, 243, 0, 0,
	0, 259, 213, 286, 251, 292, 277, 300, 255, 252,
	155, 278, 182, 224, 165, 166, 178, 185, 187, 189,
	190, 233, 234, 246, 266, 279, 280, 281, 181, 174,
	260, 175, 199, 176, 156, 268, 177, 157, 247, 284,
	0, 195, 256, 220, 158, 219, 248, 283, 282, 308,
	314, 315, 319, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 313,
	193, 153, 296, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 312, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 204, 245, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 294, 306, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 321, 229, 230,
	231, 232, 196, 0, 172, 324, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	192, 198, 0, 200, 171, 244, 194, 303, 207, 0,
	236, 203, 269, 208, 214, 257, 302, 242, 262, 169,
	293, 270, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 212, 0, 253, 191, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 241, 0, 0, 0, 309,
	310, 311, 295, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 271, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2141, 0, 0, 113, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 276,
	291, 168, 267, 304, 173, 274, 164, 240, 263, 0,
	0, 161, 289, 273, 222, 205, 206, 160, 0, 258,
	184, 197, 180, 238, 0, 288, 316, 179, 307, 0,
	299, 163, 0, 298, 237, 285, 290, 223, 217, 162,
	287, 221, 216, 209, 188, 0, 201, 249, 215, 250,
	202, 227, 226, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 210, 0, 0, 0, 317, 0,
	261, 243, 0, 0, 0, 259, 213, 286, 251, 292,
	277, 300, 255, 252, 155, 278, 182, 224, 165, 166,
	178, 185, 187, 189, 190, 233, 234, 246, 266, 279,
	280, 281, 181, 174, 260, 175, 199, 176, 156, 268,
	177, 157, 247, 284, 0, 195, 256, 220, 158, 219,
	248, 283, 282, 308, 314, 315, 319, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 313, 193, 153, 296, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 312, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 204,
	245, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 294, 306, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 321, 229, 230, 231, 232, 196, 0, 172, 324,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 192, 198, 0, 200, 171, 244,
	194, 303, 207, 0, 236, 203, 269, 208, 214, 257,
	302, 242, 262, 169, 293, 270, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 212,
	0, 253, 191, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 241,
	0, 0, 0, 309, 310, 311, 295, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 271, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 276, 291, 168, 267, 304, 173, 274,
	164, 240, 263, 0, 0, 161, 289, 273, 222, 205,
	206, 160, 0, 258, 184, 197, 180, 238, 0, 288,
	316, 179, 307, 0, 299, 163, 0, 298, 237, 285,
	290, 223, 217, 162, 287, 221, 216, 209, 188, 0,
	201, 249, 215, 250, 202, 227, 226, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 210, 0,
	0, 0, 317, 0, 261, 243, 0, 0, 0, 259,
	213, 286, 251, 292, 277, 300, 255, 252, 155, 278,
	182, 224, 165, 166, 178, 185, 187, 189, 190, 233,
	234, 246, 266, 279, 280, 281, 181, 174, 260, 175,
	199, 176, 156, 268, 177, 157, 247, 284, 0, 195,
	256, 220, 158, 219, 248, 283, 282, 308, 314, 315,
	319, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 0, 0, 0, 313, 193, 153,
	296, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 312, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 204, 245, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	294, 306, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 321, 229, 230, 231, 232,
	196, 0, 172, 324, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 192, 198,
	0, 200, 171, 244, 194, 303, 207, 0, 236, 203,
	269, 208, 214, 257, 302, 242, 262, 169, 293, 270,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 212, 0, 253, 191, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 241, 0, 0, 0, 309, 310, 311,
	295, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 211, 0, 0, 0, 0, 0, 0,
	271, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 276, 291, 168,
	267, 304, 173, 274, 164, 240, 263, 0, 0, 161,
	289, 273, 222, 205, 206, 160, 0, 258, 184, 197,
	180, 238, 0, 288, 316, 179, 307, 0, 299, 163,
	0, 298, 237, 285, 290, 223, 217, 162, 287, 221,
	216, 209, 188, 0, 201, 249, 215, 250, 202, 227,
	226, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 210, 0, 0, 0, 317, 0, 261, 243,
	0, 0, 0, 259, 213, 286, 251, 292, 277, 300,
	255, 252, 155, 278, 182, 224, 165, 166, 178, 185,
	187, 189, 190, 233, 234, 246, 266, 279, 280, 281,
	181, 174, 260, 175, 199, 176, 156, 268, 177, 157,
	247, 284, 0, 195, 256, 220, 158, 219, 248, 283,
	282, 308, 314, 315, 319, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 0, 0, 0,
	0, 313, 193, 153, 296, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 312, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 204, 245, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 294, 306, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 0, 305, 0, 0, 0, 0, 0, 321,
	229, 230, 231, 232, 196, 0, 172, 324, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 192, 198, 0, 200, 171, 244, 194, 303,
	207, 0, 236, 203, 269, 208, 214, 257, 302, 242,
	262, 169, 293, 270, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 212, 0, 253,
	191, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 241, 0, 0,
	0, 309, 310, 311, 295, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 271, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 0, 0, 938, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 276, 291, 168, 267, 304, 173, 274, 164, 240,
	263, 0, 0, 161, 289, 273, 222, 205, 206, 160,
	0, 258, 184, 197, 180, 238, 0, 288, 316, 179,
	307, 0, 299, 163, 0, 298, 237, 285, 290, 223,
	217, 162, 287, 221, 216, 209, 188, 0, 201, 249,
	215, 250, 202, 227, 226, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 210, 0, 0, 0,
	317, 0, 261, 243, 0, 0, 0, 259, 213, 286,
	251, 292, 277, 300, 255, 252, 155, 278, 182, 224,
	165, 166, 178, 185, 187, 189, 190, 233, 234, 246,
	266, 279, 280, 281, 181, 174, 260, 175, 199, 176,
	156, 268, 177, 157, 247, 284, 0, 195, 256, 220,
	158, 219, 248, 283, 282, 308, 314, 315, 319, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 0, 313, 193, 153, 296, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	312, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 204, 245, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 294, 306,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 321, 229, 230, 231, 232, 196, 0,
	172, 324, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 192, 198, 0, 200,
	171, 244, 194, 303, 207, 0, 236, 203, 269, 208,
	214, 257, 302, 242, 262, 169, 293, 270, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 212, 0, 253, 191, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 241, 0, 0, 0, 309, 310, 311, 295, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 271, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 276, 291, 168, 267, 304,
	173, 274, 164, 240, 263, 0, 0, 161, 289, 273,
	222, 205, 206, 160, 0, 258, 184, 197, 180, 238,
	0, 288, 316, 179, 307, 0, 299, 163, 0, 298,
	237, 285, 290, 223, 217, 162, 287, 221, 216, 209,
	188, 0, 201, 249, 215, 250, 202, 227, 226, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	210, 0, 0, 0, 317, 0, 261, 243, 0, 0,
	0, 259, 213, 286, 251, 292, 277, 300, 255, 252,
	155, 278, 182, 224, 165, 166, 178, 185, 187, 189,
	190, 233, 234, 246, 266, 279, 280, 281, 181, 174,
	260, 175, 199, 176, 156, 268, 177, 157, 247, 284,
	0, 195, 256, 220, 158, 219, 248, 283, 282, 308,
	314, 315, 319, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 313,
	193, 153, 296, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 312, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 204, 245, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 294, 306, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 321, 229, 230,
	231, 232, 196, 0, 172, 324, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	192, 198, 0, 200, 171, 244, 194, 303, 207, 0,
	236, 203, 269, 208, 214, 257, 302, 242, 262, 169,
	293, 270, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 212, 0, 253, 191, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 241, 0, 0, 0, 309,
	310, 311, 295, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 271, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 0, 0, 1666, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 276,
	291, 168, 267, 304, 173, 274, 164, 240, 263, 0,
	0, 161, 289, 273, 222, 205, 206, 160, 0, 258,
	184, 197, 180, 238, 0, 288, 316, 179, 307, 0,
	299, 163, 0, 298, 237, 285, 290, 223, 217, 162,
	287, 221, 216, 209, 188, 0, 201, 249, 215, 250,
	202, 227, 226, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 210, 0, 0, 0, 317, 0,
	261, 243, 0, 0, 0, 259, 213, 286, 251, 292,
	277, 300, 255, 252, 155, 278, 182, 224, 165, 166,
	178, 185, 187, 189, 190, 233, 234, 246, 266, 279,
	280, 281, 181, 174, 260, 175, 199, 176, 156, 268,
	177, 157, 247, 284, 0, 195, 256, 220, 158, 219,
	248, 283, 282, 308, 314, 315, 319, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 313, 193, 153, 296, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 312, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 204,
	245, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 294, 306, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 321, 229, 230, 231, 232, 196, 0, 172, 324,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 192, 198, 0, 200, 171, 244,
	194, 303, 207, 0, 236, 203, 269, 208, 214, 257,
	302, 242, 262, 169, 293, 270, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 212,
	0, 253, 191, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 0,
	1596, 0, 0, 309, 310, 311, 295, 241, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 271, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 276, 291, 168, 267, 304, 173, 274, 164, 240,
	263, 0, 0, 161, 289, 273, 222, 205, 206, 160,
	0, 258, 184, 197, 180, 238, 0, 288, 316, 179,
	307, 0, 299, 163, 0, 298, 237, 285, 290, 223,
	217, 162, 287, 221, 216, 209, 188, 0, 201, 249,
	215, 250, 202, 227, 226, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 210, 0, 0, 0,
	317, 0, 261, 243, 0, 0, 0, 259, 213, 286,
	251, 292, 277, 300, 255, 252, 155, 278, 182, 224,
	165, 166, 178, 185, 187, 189, 190, 233, 234, 246,
	266, 279, 280, 281, 181, 174, 260, 175, 199, 176,
	156, 268, 177, 157, 247, 284, 0, 195, 256, 220,
	158, 219, 248, 283, 282, 308, 314, 315, 319, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 0, 313, 193, 153, 296, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	312, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 204, 245, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 294, 306,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 321, 229, 230, 231, 232, 196, 0,
	172, 324, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 192, 198, 0, 200,
	171, 244, 194, 303, 207, 0, 236, 203, 269, 208,
	214, 257, 302, 242, 262, 169, 293, 270, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 212, 0, 253, 191, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 241, 0, 0, 0, 309, 310, 311, 295, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 271, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 276, 291, 168, 267, 304,
	173, 274, 164, 240, 263, 0, 0, 161, 289, 273,
	222, 205, 206, 160, 0, 258, 184, 197, 180, 238,
	0, 288, 316, 179, 307, 0, 299, 163, 0, 298,
	237, 285, 290, 223, 217, 162, 287, 221, 216, 209,
	188, 0, 201, 249, 215, 250, 202, 227, 226, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 0, 0, 1579, 0, 0, 0, 275, 0, 0,
	210, 0, 0, 0, 317, 0, 261, 243, 0, 0,
	0, 259, 213, 286, 251, 292, 277, 300, 255, 252,
	155, 278, 182, 224, 165, 166, 178, 185, 187, 189,
	190, 233, 234, 246, 266, 279, 280, 281, 181, 174,
	260, 175, 199, 176, 156, 268, 177, 157, 247, 284,
	0, 195, 256, 220, 158, 219, 248, 283, 282, 308,
	314, 315, 319, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 313,
	193, 153, 296, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 312, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 204, 245, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 294, 306, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 321, 229, 230,
	231, 232, 196, 0, 172, 324, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	192, 198, 0, 200, 171, 244, 194, 303, 207, 0,
	236, 203, 269, 208, 214, 257, 302, 242, 262, 169,
	293, 270, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 212, 0, 253, 191, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 241, 0, 0, 0, 309,
	310, 311, 295, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 271, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 276,
	291, 168, 267, 304, 173, 274, 164, 240, 263, 0,
	0, 161, 289, 273, 222, 205, 206, 160, 0, 258,
	184, 197, 180, 238, 0, 288, 316, 179, 307, 0,
	299, 163, 0, 298, 237, 285, 290, 223, 217, 162,
	287, 221, 216, 209, 188, 0, 201, 249, 215, 250,
	202, 227, 226, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 210, 0, 0, 0, 317, 0,
	261, 243, 0, 0, 0, 259, 213, 286, 251, 292,
	277, 300, 255, 252, 155, 278, 182, 224, 165, 166,
	178, 185, 187, 189, 190, 233, 234, 246, 266, 279,
	280, 281, 181, 174, 260, 175, 199, 176, 156, 268,
	177, 157, 247, 284, 0, 195, 256, 220, 158, 219,
	248, 283, 282, 308, 314, 315, 319, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 313, 193, 153, 296, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 312, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 204,
	245, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 294, 306, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 321, 229, 230, 231, 232, 196, 0, 172, 324,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 192, 198, 0, 200, 171, 244,
	194, 303, 207, 0, 236, 203, 269, 208, 214, 257,
	302, 242, 262, 169, 293, 270, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 556, 0, 0, 0, 154, 0, 212,
	0, 253, 191, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 241,
	0, 0, 0, 309, 310, 311, 295, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 271, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 276, 291, 168, 267, 304, 173, 274,
	164, 240, 263, 0, 0, 161, 289, 273, 222, 205,
	206, 160, 0, 258, 184, 197, 180, 238, 0, 288,
	316, 179, 307, 0, 299, 163, 0, 298, 237, 285,
	290, 223, 217, 162, 287, 221, 216, 209, 188, 0,
	201, 249, 215, 250, 202, 227, 226, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 210, 0,
	0, 0, 317, 0, 261, 243, 0, 0, 0, 259,
	213, 286, 251, 292, 277, 300, 348, 252, 155, 278,
	182, 224, 165, 166, 178, 185, 187, 189, 190, 233,
	234, 246, 266, 279, 280, 281, 181, 174, 260, 175,
	199, 176, 156, 268, 177, 157, 247, 284, 0, 195,
	256, 220, 158, 219, 248, 283, 282, 308, 314, 315,
	319, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 0, 0, 0, 313, 193, 153,
	296, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 312, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 204, 245, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	294, 306, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 297, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 321, 229, 230, 231, 232,
	196, 0, 172, 324, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 192, 198,
	0, 200, 171, 244, 194, 303, 207, 0, 236, 203,
	269, 208, 214, 257, 302, 242, 262, 169, 293, 270,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 212, 0, 253, 191, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 241, 0, 0, 0, 309, 310, 311,
	295, 0, 183, 0, 0, 0, 0, 0, 0, 110,
	186, 0, 0, 211, 0, 0, 0, 0, 0, 0,
	271, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 276, 291, 168,
	267, 304, 173, 274, 164, 240, 263, 0, 0, 161,
	289, 273, 222, 205, 206, 160, 0, 258, 184, 197,
	180, 238, 0, 288, 316, 179, 307, 0, 299, 163,
	0, 298, 237, 285, 290, 223, 217, 162, 287, 221,
	216, 209, 188, 0, 201, 249, 215, 250, 202, 227,
	226, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 210, 0, 0, 0, 317, 0, 261, 243,
	0, 0, 0, 259, 213, 286, 251, 292, 277, 300,
	255, 252, 155, 278, 182, 224, 165, 166, 178, 185,
	187, 189, 190, 233, 234, 246, 266, 279, 280, 281,
	181, 174, 260, 175, 199, 176, 156, 268, 177, 157,
	247, 284, 0, 195, 256, 220, 158, 219, 248, 283,
	282, 308, 314, 315, 319, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 0, 0, 0,
	0, 313, 193, 153, 296, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 312, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 204, 245, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 294, 306, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 0, 305, 0, 0, 0, 0, 0, 321,
	229, 230, 231, 232, 196, 0, 172, 324, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 192, 198, 0, 200, 171, 244, 194, 303,
	207, 0, 236, 203, 269, 208, 214, 257, 302, 242,
	262, 169, 293, 270, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 212, 0, 253,
	191, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 241, 0, 0,
	0, 309, 310, 311, 295, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 271, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 276, 291, 168, 267, 304, 173, 274, 164, 240,
	263, 0, 0, 161, 289, 273, 222, 205, 206, 160,
	0, 258, 184, 197, 180, 238, 0, 288, 316, 179,
	307, 0, 299, 163, 0, 298, 237, 285, 290, 223,
	217, 162, 287, 221, 216, 209, 188, 0, 201, 249,
	215, 250, 202, 227, 226, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 210, 0, 0, 0,
	317, 0, 261, 243, 0, 0, 0, 259, 213, 286,
	251, 292, 277, 300, 255, 252, 155, 278, 182, 224,
	165, 166, 178, 185, 187, 189, 190, 233, 234, 246,
	266, 279, 280, 281, 181, 174, 260, 175, 199, 176,
	156, 268, 177, 157, 247, 284, 0, 195, 256, 220,
	158, 219, 248, 283, 282, 308, 314, 315, 319, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 0, 313, 193, 153, 296, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	312, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 204, 245, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 294, 306,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 321, 229, 230, 231, 232, 196, 0,
	172, 324, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 192, 198, 0, 200,
	171, 244, 194, 303, 207, 0, 236, 203, 269, 208,
	214, 257, 302, 242, 262, 169, 293, 270, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 212, 0, 253, 191, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 241, 0, 0, 0, 309, 310, 311, 295, 0,
	183, 0, 0, 1638, 0, 0, 0, 0, 186, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 271, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1188,
	1189, 1190, 1640, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 276, 291, 168, 267, 304,
	173, 274, 164, 240, 263, 0, 0, 161, 289, 273,
	222, 205, 206, 160, 0, 258, 184, 197, 180, 238,
	0, 288, 316, 179, 307, 0, 299, 163, 0, 298,
	237, 285, 290, 223, 217, 162, 287, 221, 216, 209,
	188, 0, 201, 249, 215, 250, 202, 227, 226, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	210, 0, 0, 0, 317, 0, 261, 243, 0, 0,
	0, 259, 213, 286, 251, 292, 277, 300, 255, 252,
	155, 278, 182, 224, 165, 166, 178, 185, 187, 189,
	190, 233, 234, 246, 266, 279, 280, 281, 181, 174,
	260, 175, 199, 176, 156, 268, 177, 157, 247, 284,
	0, 195, 256, 220, 158, 219, 248, 283, 282, 308,
	314, 315, 319, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 313,
	193, 153, 296, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 312, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 204, 245, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 294, 306, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 321, 229, 230,
	231, 232, 196, 0, 172, 324, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	192, 198, 0, 200, 171, 244, 194, 303, 207, 241,
	236, 203, 269, 208, 214, 257, 302, 242, 262, 169,
	293, 270, 218, 0, 0, 0, 186, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 271, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1188, 1189, 1190,
	1640, 0, 0, 154, 167, 212, 0, 253, 191, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	310, 311, 295, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 159, 276, 291, 168, 267, 304, 173, 274,
	164, 240, 263, 0, 0, 161, 289, 273, 222, 205,
	206, 160, 0, 258, 184, 197, 180, 238, 0, 288,
	316, 179, 307, 0, 299, 163, 0, 298, 237, 285,
	290, 223, 217, 162, 287, 221, 216, 209, 188, 0,
	201, 249, 215, 250, 202, 227, 226, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 210, 0,
	0, 0, 317, 0, 261, 243, 0, 0, 0, 259,
	213, 286, 251, 292, 277, 300, 255, 252, 155, 278,
	182, 224, 165, 166, 178, 185, 187, 189, 190, 233,
	234, 246, 266, 279, 280, 281, 181, 174, 260, 175,
	199, 176, 156, 268, 177, 157, 247, 284, 0, 195,
	256, 220, 158, 219, 248, 283, 282, 308, 314, 315,
	319, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 0, 0, 0, 0, 313, 193, 153,
	296, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 312, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 204, 245, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	294, 306, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 321, 229, 230, 231, 232,
	196, 0, 172, 324, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 192, 198,
	0, 200, 171, 244, 194, 303, 207, 241, 236, 203,
	269, 208, 214, 257, 302, 242, 262, 169, 293, 270,
	218, 0, 0, 0, 186, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 271, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1188, 1189, 1190, 0, 0,
	0, 154, 167, 212, 0, 253, 191, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 310, 311,
	295, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	159, 276, 291, 168, 267, 304, 173, 274, 164, 240,
	263, 0, 0, 161, 289, 273, 222, 205, 206, 160,
	0, 258, 184, 197, 180, 238, 0, 288, 316, 179,
	307, 0, 299, 163, 0, 298, 237, 285, 290, 223,
	217, 162, 287, 221, 216, 209, 188, 0, 201, 249,
	215, 250, 202, 227, 226, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 210, 0, 0, 0,
	317, 0, 261, 243, 0, 0, 0, 259, 213, 286,
	251, 292, 277, 300, 255, 252, 155, 278, 182, 224,
	165, 166, 178, 185, 187, 189, 190, 233, 234, 246,
	266, 279, 280, 281, 181, 174, 260, 175, 199, 176,
	156, 268, 177, 157, 247, 284, 0, 195, 256, 220,
	158, 219, 248, 283, 282, 308, 314, 315, 319, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 0, 313, 193, 153, 296, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	312, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 204, 245, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 294, 306,
	323, 816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 321, 229, 230, 231, 232, 196, 0,
	172, 324, 254, 709, 710, 711, 708, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 192, 198, 0, 200,
	171, 244, 194, 303, 207, 0, 236, 203, 269, 208,
	214, 257, 302, 242, 262, 169, 293, 270, 218, 0,
	0, 816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 804, 0, 0, 0, 0, 0, 0, 1087, 154,
	0, 212, 0, 253, 191, 0, 0, 0, 0, 824,
	828, 830, 832, 834, 835, 837, 0, 841, 838, 839,
	840, 0, 0, 819, 820, 821, 822, 802, 803, 825,
	0, 805, 0, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 817, 823, 309, 310, 311, 295, 816,
	183, 0, 827, 829, 831, 833, 836, 0, 0, 0,
	0, 804, 0, 0, 0, 794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	828, 830, 832, 834, 835, 837, 818, 841, 838, 839,
	840, 0, 0, 819, 820, 821, 822, 802, 803, 825,
	0, 805, 0, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 817, 823, 0, 0, 0, 0, 2098,
	0, 0, 827, 829, 831, 833, 836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1083, 0, 0,
	1080, 0, 0, 0, 1082, 1079, 1081, 1085, 1086, 804,
	0, 0, 1084, 1594, 0, 0, 818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 824, 828, 830,
	832, 834, 835, 837, 2098, 841, 838, 839, 840, 0,
	2488, 819, 820, 821, 822, 802, 803, 825, 0, 805,
	2080, 806, 807, 808, 809, 810, 811, 812, 813, 814,
	815, 817, 823, 1711, 1712, 0, 0, 0, 1594, 0,
	827, 829, 831, 833, 836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 818, 2080, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2098, 0, 0, 0, 0,
	0, 0, 0, 0, 1068, 1069, 1070, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 1078, 1090, 1091, 1092, 1093, 1094,
	1095, 1088, 1089, 0, 0, 0, 0, 0, 0, 1594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 826, 0, 0, 0,
	0, 0, 0, 2084, 0, 0, 2080, 0, 0, 0,
	0, 0, 0, 0, 2088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2077, 0, 0, 0, 2079, 2081,
	2083, 0, 2085, 2086, 2087, 2089, 2090, 2091, 2093, 2094,
	2095, 2096, 0, 0, 0, 0, 0, 0, 2084, 0,
	0, 368, 0, 367, 374, 364, 826, 0, 0, 2088,
	0, 0, 0, 0, 0, 371, 372, 0, 373, 377,
	0, 2099, 359, 0, 0, 0, 0, 0, 0, 2077,
	0, 0, 382, 2079, 2081, 2083, 0, 2085, 2086, 2087,
	2089, 2090, 2091, 2093, 2094, 2095, 2096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 0, 0,
	0, 386, 0, 0, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 2076, 0, 0, 2099, 0, 368, 2084,
	367, 374, 364, 0, 0, 0, 0, 0, 0, 0,
	2088, 0, 371, 372, 826, 373, 377, 0, 0, 359,
	0, 2092, 0, 0, 0, 0, 0, 0, 2082, 382,
	2077, 2097, 0, 0, 2079, 2081, 2083, 0, 2085, 2086,
	2087, 2089, 2090, 2091, 2093, 2094, 2095, 2096, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 387, 0, 0, 368, 0, 367, 374, 364, 0,
	0, 0, 0, 0, 0, 0, 2092, 2099, 371, 372,
	0, 373, 377, 2082, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2097, 360, 362, 361, 0, 0, 0, 0,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 2092, 0, 0,
	0, 0, 0, 0, 2082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 362, 361, 0, 0, 0, 0, 0, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 369, 375, 0, 376,
	378, 0, 0, 379, 380, 381, 0, 0, 383, 384,
	0, 0, 0, 0, 0, 0, 360, 362, 361, 0,
	0, 0, 0, 0, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 369, 375, 0, 376, 378, 0, 0,
	379, 380, 381, 0, 0, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 369,
	375, 0, 376, 378, 0, 0, 379, 380, 381, 0,
	0, 383, 384,
}

var yyPact = [...]int{
	191, -1000, -305, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19711, -1000, -1000, 1676, -1000, 8315, 20185, 86, 20185,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 334, -1000, 19237, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 280, 22241, 194, 193, 6363,
	20185, -286, -1000, 2068, -1000, -1000, -1000, -1000, 203, 345,
	18763, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1054, 40, 345, 451, 458,
	673, 673, 9737, 2068, 204, 74, -1000, 658, 191, 257,
	20185, -1000, 855, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2068, 2068,
	20185, -42, 951, -1000, 228, 210, 243, 853, -1000, -1000,
	-1000, -1000, 2027, -1000, 20185, 1770, 20185, -1000, 1213, 233,
	22318, 1886, 725, 380, 1792, -1000, -1000, 1743, -1000, 44,
	166, 89, 273, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	90, -1000, 1933, -1000, -1000, 37, -1000, -1000, 31, -1000,
	-1000, -1000, -97, -1000, -1000, -1000, -1000, -1000, -151, -151,
	488, 1047, 6363, -1000, 1040, -1000, 1707, -1000, -1000, -1000,
	-1000, 3927, 7821, 7821, 7821, 7821, -1000, -1000, 1609, 6363,
	1742, 1741, -1000, -1000, -1000, -1000, -1000, 852, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7335, -1000, 1731, 1730, 1727, 1726, 1725, 1721, 1720, 1717,
	1716, 1714, 1702, 1526, 1700, 1365, 1345, 1692, 1691, 1690,
	7821, 1330, 1526, 1526, 1683, 1681, 1678, 1677, 1673, 1669,
	1658, 1657, 1652, 1651, 1649, 1646, 1645, 1640, 1631, 1627,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21801, -1000, 830, 810, -1000, 1624, 1876,
	1950, 1559, 1994, 1965, 1956, 1949, 1945, 47, 278, 278,
	278, 321, 278, 333, -1000, -1000, -1000, -1000, -1000, -1000,
	378, -1000, -1000, -1000, -1000, 678, 20185, -1000, 1553, 1946,
	239, 878, 238, 222, 1950, 1950, -91, -110, 878, 878,
	-110, 58, -1000, -1000, -1000, 993, 236, 993, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1925, 1909, 280, 280, 300,
	-1000, -161, -1000, -1000, 450, -1000, 428, -1000, 1213, 231,
	217, 691, 973, -1000, 910, 20185, 20185, 20185, 910, 910,
	11645, 11171, -1000, 1950, 1559, -1000, 1502, 1575, 1559, 280,
	280, 280, 280, 280, 280, 280, 20185, 5385, 5385, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 219, 1621, -1000,
	20185, 1950, 1876, 1950, -1000, 829, 1202, 1323, -1000, -1000,
	228, 916, -1000, 619, -1000, -1000, -1000, -1000, 20185, 221,
	-1000, 1361, 1618, -1000, 310, 538, 806, -1000, 57, 22384,
	16385, 1213, 16385, 20185, -1000, -1000, -1000, -1000, -1000, -1000,
	-100, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -55, -1000, -55, 6363, 6363, 6363,
	6363, 6363, -1000, 350, 6849, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7821, 7821, 7821, 7821, 7821, 7821, 7821, 7821,
	7821, 7821, 7821, 7821, 1607, 945, 7821, 7821, 7821, 1575,
	1882, 688, -1000, -1000, -1000, -1000, -1000, 961, 1047, 6363,
	6363, 20185, 21703, 6363, 6363, 8448, 6363, 1922, 1922, 2947,
	20185, 6363, -1000, 1488, 1486, -1000, -1000, 1108, 6363, -1000,
	-1000, 6363, 7821, 6363, -1000, -1000, -1000, -1000, 105, 1922,
	6363, 6363, 1922, 1922, 1922, 986, 1922, 1922, 1922, 1922,
	1922, 1922, 1922, 1318, 20185, 1849, 14, -1000, -1000, -1000,
	1539, -1000, 1574, 1574, 1539, 1539, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1615, 1614, -1000, -1000, 1539,
	1569, 1569, 1539, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1611, 1611,
	1612, 1611, 20185, 1950, -286, 4899, -1000, -290, 1876, 6363,
	-1000, -1000, 6363, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 318, 278, -1000, 1371, 976, 16385, 1213, 1270, 20185,
	278, 300, -1000, 20185, 678, 1904, 20185, 16385, 993, 2020,
	7821, 993, -1000, -1000, -1000, 878, 878, -1000, -1000, -1000,
	-1000, 993, 993, -1000, -1000, -101, 2020, 2020, -116, 20185,
	20185, 278, 20185, -1000, -1000, -1000, -1000, 20185, -1000, -1000,
	1371, 16385, 13541, -1000, -135, 447, 432, 436, -1000, -1000,
	308, 313, 10697, 262, 16385, 3433, -1000, -1000, 910, 910,
	910, 3433, 3433, 776, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1876, -1000, -1000, -1000, -1000, 1371, 16385, 1213, 20185,
	20185, 20185, 21415, -1000, 787, -1000, -1000, 9263, 824, 787,
	1791, -288, -1000, 10223, 20185, 20185, -1000, 1876, -1000, 1876,
	2507, -1000, 1943, -1000, 228, 126, -1000, -1000, -1000, -1000,
	-1000, -1000, 820, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 672, -1000, 20185, -1000, -1000, 57, 16385, 923,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 109, -1000, -1000,
	127, -1000, 316, -21, 906, -1000, -1000, 42, 124, 42,
	1047, -1000, 985, 985, 982, -1000, 379, -1000, -1000, -1000,
	-1000, 1609, -1000, -1000, -1000, 1147, 1546, -1000, 978, 978,
	721, 721, 721, 721, 721, 964, 964, -1000, -1000, -1000,
	3927, 1607, 7821, 7821, 7821, 264, 2350, 2112, -1000, 6363,
	969, -1000, 6363, 1331, 803, 816, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1483, 488, 1482, 1294,
	2026, 1481, 6363, -1000, -1000, 6363, 1106, 5877, -1000, -1000,
	-1000, 1480, 799, 1478, -1000, -1000, -1000, 1477, 690, 1476,
	1291, 1471, 666, 6363, 904, 877, 6363, 6363, 6363, 6363,
	1469, 6363, 6363, 6363, 6363, 6363, 6363, 6363, 664, -1000,
	6363, 6, -1000, -1000, -1000, -1000, 1197, -1000, 1184, -1000,
	-1000, -1000, 1309, 1309, -1000, -1000, 1182, -1000, -1000, -1000,
	1179, -1000, -1000, 1177, -1000, -1000, -1000, -1000, 875, -1000,
	1047, -1000, 1307, -1000, 772, 662, -1000, 1077, 18289, 20185,
	3, -1000, 1884, 626, -1000, -21, 502, 1769, -1000, -1000,
	-1000, 1841, 20185, 17815, -1000, 1592, 873, -1000, 1756, 20185,
	-1000, 6363, -1000, 20185, 2020, 2020, 878, 21415, 993, 20185,
	993, -1000, -1000, 993, -1000, 774, -1000, 20185, -1000, -1000,
	-1000, -1000, 3, 626, 1972, 610, -1000, -1000, -1000, -1000,
	1898, 20659, 20659, 204, 1591, -1000, -1000, 443, 419, 442,
	-1000, -1000, 314, -1000, -1000, 502, -1000, -1000, -1000, 1590,
	946, -1000, -1000, 7821, -1000, 3433, 3433, 3433, -1000, -1000,
	14015, -1000, -1000, 638, 502, 1780, 636, -1000, 636, -1000,
	-1000, -1000, 2020, 5385, -1000, 13541, -1000, -1000, 17333, -1000,
	16859, 2020, -1000, 1858, 509, -1000, 1581, -1000, 870, 1829,
	-1000, 479, -1000, 942, 868, -1000, -1000, -1000, -1000, 759,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-50, -1000, -1000, 20185, 1361, 863, 923, 574, -1000, 311,
	751, 749, -1000, 16385, 39, 16385, -1000, 16385, -1000, -1000,
	207, -1000, 20185, 1865, -1000, -1000, -1000, 1306, 1860, -1000,
	-1000, -1000, -1000, -1000, 858, -1000, 264, 2350, 1442, -1000,
	7821, 7821, 1872, 947, -1000, 6363, 1026, 21731, 1236, 12593,
	20185, -1000, -1000, 6363, 6363, -1000, 1856, 1852, -1000, 6363,
	6363, 1244, -1000, 20185, -1000, -1000, -1000, 12593, -1000, 7821,
	-1000, 6363, 1844, -1000, -1000, 1817, 1778, 1768, 856, -1000,
	1722, 1671, 1563, 1519, 1484, 1450, 1408, 1305, 1047, -1000,
	-1000, 1468, 1436, 847, -1000, 843, 1435, 842, 836, 4899,
	-1000, -113, 6363, 6363, 6363, 1822, -1000, -1000, 1553, 966,
	1579, -74, 928, -1000, 339, 16385, 211, -1000, 1779, 215,
	-1000, 1841, -1000, 599, -1000, 1577, 20185, 641, -1000, 740,
	191, -1000, 20185, -1000, 1213, 878, 1047, 2020, -1000, -1000,
	2020, -1000, 878, -1000, 878, 993, 20185, -1000, -74, 339,
	20185, 13541, 13541, 13541, 13541, -1000, 1811, 1810, -1000, 1819,
	1809, 1846, 20185, 13541, 20185, -1000, -1000, -1000, 21037, -1000,
	-1000, -1000, -1000, -1000, 1429, 2068, 6363, -1000, -1000, -1000,
	417, 16385, 1304, 262, -1000, -1000, -1000, -1000, -1000, 20185,
	20185, 2017, -1000, 593, 1794, -1000, -1000, 738, -1000, 2017,
	1035, -288, 4899, 208, 20185, -288, 20185, 4899, -1000, 20185,
	2507, 1176, -1000, -1000, -1000, 2025, 16385, 1213, 880, 921,
	-1000, 27, -1000, 102, 285, 1302, -1000, 332, 934, 330,
	-1000, -1000, 7821, -1000, -1000, -1000, -1000, 1047, 6363, 1428,
	-1000, 403, 403, 1426, -1000, 1539, 1574, -1000, 1539, 1569,
	1539, 403, 403, 1419, -1000, 1097, 1399, -1000, -1000, 1387,
	1380, 6363, -1000, 1417, 2273, 826, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1414, -1000,
	-1000, -1000, 1301, -1000, -1000, -1000, 1174, -1000, 1173, -1000,
	-79, -59, 1047, 1047, -1000, -1000, 1842, 1895, 1883, 8789,
	1098, -1000, -1000, 1300, -1000, 276, -1000, -1000, -1000, 329,
	88, 1170, 265, -1000, 1369, 20185, -1000, -1000, -1000, -1000,
	-1000, 928, 928, 928, 8789, 257, 536, 720, 13541, 20185,
	-1000, 15437, 1413, -1000, 502, 2020, -1000, -1000, 2020, 2020,
	878, -1000, 1098, 276, 689, -1000, 933, 1752, 1777, 1752,
	-1000, -1000, -1000, -1000, 1789, -1000, 1560, -1000, -1000, 689,
	-1000, 1553, -1000, -1000, 834, -1000, 574, 1398, -1000, -1000,
	-1000, -1000, 2012, 1992, 15911, 2012, 2035, -1000, 1392, 535,
	-288, -1000, -1000, 509, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1213, -1000, 83, -1000, -1000, -1000, -1000, -1000,
	-1000, -32, -1000, 20185, 1298, 20185, -1000, 1047, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6363, -1000, -1000, -1000, 1372, -1000, -1000,
	6363, -1000, -1000, 1390, 1381, -292, -69, 1989, 1988, -1000,
	-1000, 204, 20185, 1379, 526, -1000, -1000, -1000, 21889, 348,
	-1000, 20185, 1034, 441, 278, 441, 1008, 1565, -1000, -1000,
	-1000, 1296, -22, -1000, -1000, 1283, 1279, 1163, -1000, -1000,
	1172, 702, -6, -1000, -1000, -1000, -1000, -1000, -1000, 1562,
	12593, 13067, 1277, 1376, 20659, 13541, 15437, 583, -1000, 718,
	-1000, -1000, -1000, -1000, -1000, 2020, -1000, -1000, 1997, 20185,
	4899, -1000, -1000, 6363, 1561, -1000, 6363, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 6363, 6363, -1000, -1000, 20185,
	-1000, 509, 502, -1000, -1000, -116, 61, -116, 1336, -1000,
	1271, -1000, -1000, -294, 1276, -1000, 1987, 1275, 1225, -1000,
	1553, 22119, 8789, 1155, -1000, -1000, 20185, 20185, -1000, 20185,
	20185, 278, 6363, -1000, -1000, 195, -1000, -1000, 64, -1000,
	-1000, 1168, 315, -1000, 14963, -1000, -1000, -1000, -1000, -1000,
	-55, 2020, 583, 718, -1000, -1000, 846, -1000, 1950, -1000,
	-1000, 1047, 20185, 1047, 1047, 488, 479, -1000, -88, -64,
	-1000, 1274, -1000, -1000, -1000, -296, 1159, -1000, 1273, -62,
	-1000, -1000, 1893, 256, 22038, -1000, 928, 928, 624, 928,
	928, 928, 928, 183, 158, 928, 928, 928, 928, 928,
	928, 928, 928, 928, 928, 928, 928, 928, 928, 1552,
	-1000, -1000, 1155, -1000, -1000, 988, 7821, -1000, -1000, 1272,
	13067, 425, 414, 1551, -1000, 125, 2034, 1007, 990, -1000,
	20185, -1000, 1549, 1724, 94, 1548, -1000, 1547, 1540, 20185,
	1231, 279, 1265, -1000, -1000, 63, -1000, -1000, 813, -1000,
	1539, 6363, -1000, -116, 1997, -1000, -1000, 808, 291, -75,
	-64, -1000, 1986, -70, 1985, 1984, 932, -1000, 1537, -1000,
	-1000, 1981, 204, -1000, 1979, 22119, -1000, 1158, 1157, 928,
	928, 1153, 1259, 1258, 1256, 928, 928, 1148, 1254, 21037,
	1139, 1114, 1103, 1167, 1253, 463, 1162, 1144, 1131, 20185,
	1534, 1223, -1000, -1000, 2350, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1099, 1532, -159, -1000,
	-1000, 1531, 14963, 226, 226, 14963, 14963, 14963, 1529, 305,
	-1000, -34, -1000, -1000, -1000, 14963, 1869, 1137, -1000, 1950,
	-1000, 1528, 1095, -69, 1978, -1000, 1225, 1963, 1225, 1225,
	1246, 20185, 1225, -1000, 134, -1000, -1000, -1000, 12593, 12593,
	-1000, -1000, -1000, -1000, 1245, 1237, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 213, 20185,
	801, -1000, 931, 1374, 6363, 1526, -206, 14963, 793, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 765, 763, 746, 14963,
	-1000, -1000, -1000, 128, -1000, 167, -1000, -1000, 1869, -1000,
	1887, 12119, -71, -1000, 1232, -1000, 1225, -1000, -1000, 60,
	714, -1000, -1000, 110, 220, 209, -1000, 281, -1000, -1000,
	-1000, -1000, -1000, -1000, 202, 701, -1000, 1223, 1222, -1000,
	1123, -1000, 1775, -1000, 38, 686, -1000, -1000, -1000, -1000,
	681, -1000, -1000, 928, 1220, 84, -1000, -1000, -1000, -1000,
	20185, -1000, 651, -1000, -1000, -1000, 697, -1000, -1000, -1000,
	-1000, -1000, 1219, -1000, 20185, 104, 1074, 7821, 1523, 7821,
	1522, 117, 1521, -1000, -1000, -1000, -1000, -1000, 305, -1000,
	1774, 1773, 2024, -1000, -1000, -1000, -1000, 167, 167, 167,
	167, 23, 1053, -1000, 1270, 462, -1000, 927, -1000, 14489,
	20185, 909, -1000, 1518, 1958, -1000, 1942, 20185, 1407, 20185,
	1513, 900, 7821, -1000, -1000, 2033, -1000, 2030, 372, 372,
	-1000, -1000, -1000, 20185, 4413, -1000, 695, 1215, -1000, 254,
	114, -1000, 645, -1000, 644, 20185, 1051, 1391, -1000, -1000,
	-1000, 1138, 135, -1000, -1000, -1000, 1047, 20185, 55, 630,
	-1000, 1364, 100, -1000, -1000, 614, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1152, -1000, 254, 1827, -1000, 1048, -1000,
	891, -1000, 21983, 385, -1000, 1128, -1000, 21983, 103, -1000,
	247, 1505, -317, -1000, -1000, 587, -1000, 1234, 416, 6363,
	-1000, -1000, 103, 22119, -1000, 6363, 586, -1000, 22119, 581,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 110, 2431, 186, 141, 137, 185, 2423, 1933, 1925,
	2422, 2417, 2416, 2415, 2414, 2413, 2407, 2406, 2405, 2404,
	2403, 2402, 2401, 2400, 2386, 2384, 2383, 184, 2382, 2381,
	2380, 2379, 2378, 2377, 2376, 2374, 2373, 2367, 2366, 2365,
	2364, 2363, 2362, 2361, 121, 2359, 1923, 2358, 2357, 2356,
	2355, 2354, 160, 2353, 2352, 2351, 2350, 2347, 2346, 2345,
	2344, 2343, 2340, 2339, 2338, 2337, 2336, 2335, 2332, 2331,
	2330, 175, 166, 56, 2329, 47, 49, 134, 191, 91,
	211, 187, 131, 67, 123, 168, 106, 2328, 2325, 98,
	2324, 24, 2323, 127, 2322, 139, 55, 39, 183, 99,
	48, 60, 82, 2320, 2319, 76, 2318, 2317, 84, 2316,
	59, 2313, 74, 54, 80, 26, 2311, 2310, 2309, 73,
	2308, 2307, 2305, 2304, 118, 2303, 83, 46, 2302, 2301,
	2299, 2298, 2297, 35, 2296, 44, 2295, 2294, 2293, 2292,
	2291, 2290, 2289, 12, 20, 18, 2287, 17, 3, 2286,
	162, 85, 70, 112, 2281, 363, 2279, 2278, 2277, 105,
	2276, 371, 2275, 2274, 2273, 2272, 2271, 9, 2270, 148,
	2259, 2258, 2257, 53, 135, 144, 2255, 2253, 97, 45,
	90, 96, 2248, 2247, 64, 156, 16, 33, 0, 143,
	34, 2241, 2239, 2224, 192, 145, 146, 171, 93, 188,
	119, 2223, 2222, 42, 2221, 107, 2220, 88, 7, 2219,
	129, 2215, 179, 120, 2211, 154, 2210, 199, 2, 108,
	28, 248, 2209, 2208, 2207, 113, 2206, 2204, 57, 109,
	2203, 2201, 2199, 27, 2198, 30, 21, 2197, 78, 2196,
	178, 2195, 161, 89, 124, 114, 104, 167, 170, 63,
	100, 1026, 101, 66, 19, 2194, 169, 2174, 180, 164,
	2164, 132, 2163, 182, 348, 155, 2162, 125, 8, 2161,
	2160, 10, 2159, 23, 2158, 2157, 2154, 2152, 6, 2151,
	2148, 2147, 1, 4, 2146, 5, 151, 52, 94, 2143,
	87, 181, 2142, 2141, 2140, 2139, 2138, 216, 2137, 2136,
	2135, 2134, 2133, 2131, 2129, 2126, 75, 43, 2125, 2124,
	2123, 2122, 68, 102, 2120, 305, 152, 2119, 41, 2118,
	2117, 25, 2116, 29, 2115, 2113, 2112, 14, 130, 2110,
	2109, 15, 2108, 2107, 11, 13, 2106, 2105, 61, 36,
	31, 65, 69, 2104, 22, 62, 95, 2103, 2102, 177,
	176, 150, 2100, 116, 173, 190, 2099, 157, 2098, 2096,
	2094, 2093, 2092, 2091, 2090, 1068, 2089, 2086, 174, 51,
	163, 2085, 2084, 136, 2083, 115, 77, 79, 147, 2070,
	133, 2069, 2055, 172, 140, 2050, 2049,
}

//line mysql_sql.y:7634
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 381, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 61, 60,
	337, 337, 336, 336, 335, 335, 334, 334, 334, 333,
	333, 333, 332, 332, 331, 331, 330, 330, 328, 328,
	329, 327, 326, 326, 326, 324, 324, 322, 322, 323,
	323, 317, 317, 320, 320, 318, 318, 318, 318, 321,
	316, 316, 316, 315, 315, 59, 59, 59, 253, 253,
	58, 58, 267, 267, 267, 267, 267, 265, 265, 265,
	265, 265, 265, 264, 264, 263, 263, 268, 268, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 53,
	53, 53, 53, 56, 56, 56, 57, 262, 262, 262,
	54, 55, 55, 252, 252, 257, 257, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 261,
	261, 261, 259, 259, 258, 258, 260, 260, 47, 47,
	47, 50, 49, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 48, 48, 48, 48, 48, 48, 45, 45,
	45, 45, 45, 44, 44, 46, 46, 250, 250, 249,
	64, 64, 64, 64, 64, 64, 64, 63, 63, 66,
	66, 65, 52, 52, 52, 52, 51, 51, 51, 51,
	51, 51, 51, 51, 51, 360, 360, 360, 362, 362,
	192, 193, 382, 191, 191, 191, 356, 356, 357, 358,
	359, 359, 359, 62, 7, 7, 42, 43, 380, 380,
	297, 297, 205, 205, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	300, 301, 201, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 33, 33, 239, 239,
	32, 383, 383, 175, 175, 31, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 41, 311, 311, 385, 385,
	385, 39, 40, 296, 296, 296, 37, 36, 35, 34,
	34, 30, 30, 29, 29, 198, 198, 200, 200, 196,
	384, 384, 273, 273, 199, 199, 28, 28, 28, 197,
	197, 174, 195, 195, 195, 6, 10, 10, 10, 10,
	10, 10, 10, 10, 16, 18, 247, 247, 244, 17,
	13, 12, 15, 11, 14, 5, 5, 5, 5, 8,
	8, 9, 84, 84, 114, 114, 369, 369, 365, 365,
	366, 366, 366, 367, 367, 368, 368, 4, 304, 304,
	304, 304, 304, 304, 305, 305, 345, 345, 345, 346,
	104, 104, 99, 99, 306, 306, 219, 347, 347, 314,
	314, 313, 313, 312, 312, 102, 102, 103, 103, 88,
	88, 72, 72, 319, 319, 319, 319, 325, 325, 294,
	294, 140, 140, 170, 170, 171, 171, 76, 76, 77,
	77, 77, 77, 77, 77, 353, 353, 355, 355, 354,
	101, 101, 97, 97, 98, 98, 98, 96, 96, 95,
	94, 94, 93, 91, 91, 91, 92, 92, 92, 79,
	79, 78, 78, 78, 78, 78, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 80, 80,
	361, 361, 361, 298, 298, 298, 303, 303, 152, 152,
	153, 153, 151, 151, 81, 81, 82, 82, 82, 82,
	150, 150, 149, 83, 83, 89, 85, 85, 87, 87,
	87, 87, 160, 160, 159, 159, 159, 159, 69, 70,
	70, 71, 107, 107, 158, 157, 157, 157, 106, 106,
	105, 105, 100, 100, 86, 86, 86, 156, 90, 386,
	386, 154, 184, 184, 184, 190, 190, 183, 183, 183,
	183, 183, 194, 189, 189, 185, 185, 186, 186, 186,
	3, 3, 3, 3, 22, 22, 22, 22, 26, 26,
	363, 363, 19, 370, 373, 371, 374, 374, 374, 375,
	375, 375, 376, 376, 20, 372, 377, 377, 377, 248,
	248, 245, 246, 246, 243, 242, 242, 242, 379, 379,
	378, 378, 378, 187, 187, 21, 238, 238, 240, 241,
	241, 232, 232, 232, 232, 25, 236, 236, 237, 237,
	237, 237, 237, 233, 233, 235, 235, 231, 231, 231,
	231, 231, 24, 230, 230, 228, 228, 226, 226, 227,
	227, 225, 225, 225, 229, 229, 23, 23, 74, 73,
	73, 73, 73, 73, 75, 299, 299, 269, 269, 272,
	272, 279, 279, 280, 280, 278, 278, 285, 285, 284,
	284, 283, 283, 282, 282, 281, 281, 281, 281, 276,
	276, 275, 275, 270, 270, 270, 270, 270, 271, 271,
	274, 274, 277, 277, 131, 131, 132, 132, 132, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 343, 343,
	344, 134, 134, 134, 138, 138, 138, 138, 138, 138,
	133, 133, 135, 135, 115, 115, 113, 113, 108, 108,
	109, 109, 110, 110, 111, 111, 112, 112, 112, 112,
	112, 112, 255, 255, 341, 341, 342, 342, 338, 338,
	338, 340, 340, 340, 340, 340, 339, 339, 116, 168,
	168, 168, 188, 188, 188, 167, 167, 167, 130, 130,
	129, 129, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 254, 254, 202, 202,
	203, 203, 147, 146, 146, 146, 146, 146, 144, 145,
	143, 143, 143, 143, 143, 142, 142, 141, 141, 141,
	234, 234, 139, 139, 137, 137, 137, 136, 136, 136,
	286, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 211, 211, 216, 216, 352,
	352, 351, 117, 117, 117, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 126, 126, 126, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 310, 310, 310, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 166, 364,
	364, 364, 348, 348, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 164, 164, 164, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 220,
	220, 221, 221, 307, 307, 307, 307, 307, 307, 308,
	308, 309, 309, 309, 309, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 209, 161, 161, 161, 222, 217,
	217, 218, 218, 212, 212, 212, 212, 212, 212, 212,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	213, 213, 215, 215, 224, 224, 224, 223, 223, 223,
	223, 223, 223, 223, 128, 128, 128, 128, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 119, 119,
	119, 119, 123, 123, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 124, 124,
	124, 124, 122, 122, 122, 122, 122, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 67, 68, 68, 121, 169, 169, 287,
	287, 290, 290, 288, 288, 289, 291, 291, 291, 292,
	292, 292, 293, 293, 293, 295, 295, 173, 173, 173,
	180, 180, 172, 172, 181, 181, 182, 182, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 9, 9,
	0, 2, 1, 3, 3, 3, 1, 3, 5, 0,
	2, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 0, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 2,
	4, 3, 1, 1, 1, 1, 2, 3, 4, 7,
	2, 3, 3, 4, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 7, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 5, 0, 2,
	7, 0, 1, 0, 1, 4, 1, 1, 1, 3,
	2, 3, 1, 1, 1, 6, 0, 1, 1, 1,
	1, 5, 5, 0, 1, 1, 3, 3, 3, 6,
	7, 4, 4, 7, 8, 0, 2, 0, 2, 2,
	1, 1, 1, 1, 0, 1, 4, 4, 5, 1,
	3, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 1, 1, 2, 2, 11,
	8, 9, 1, 3, 2, 4, 0, 2, 0, 1,
	1, 1, 1, 0, 1, 0, 1, 5, 2, 1,
	5, 4, 4, 2, 0, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 1, 3, 4, 0, 1, 0,
	1, 1, 3, 1, 1, 0, 4, 1, 3, 2,
	1, 0, 8, 0, 4, 7, 4, 0, 2, 0,
	2, 0, 2, 0, 4, 1, 3, 1, 1, 4,
	3, 4, 5, 4, 5, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 3,
	3, 1, 3, 3, 3, 3, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 7, 7,
	1, 1, 1, 0, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 2, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 4,
	4, 3, 2, 2, 2, 3, 2, 3, 4, 1,
	3, 4, 0, 2, 1, 1, 2, 2, 0, 1,
	2, 4, 1, 3, 1, 4, 2, 3, 4, 0,
	1, 2, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 11,
	0, 1, 7, 1, 4, 1, 3, 4, 3, 0,
	1, 1, 0, 2, 7, 1, 0, 2, 2, 1,
	3, 2, 1, 3, 2, 1, 3, 2, 0, 1,
	3, 4, 3, 1, 1, 4, 1, 3, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 5, 1, 1, 0, 3, 0, 1, 1,
	2, 4, 4, 4, 0, 1, 10, 9, 2, 2,
	6, 10, 14, 18, 5, 0, 1, 0, 6, 0,
	4, 0, 3, 1, 3, 4, 5, 0, 3, 1,
	3, 2, 3, 1, 2, 0, 4, 6, 5, 0,
	2, 0, 2, 4, 5, 4, 5, 1, 6, 5,
	0, 3, 0, 1, 0, 1, 1, 3, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 4, 1, 3,
	3, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 1, 7, 7, 7, 7,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 2,
	2, 2, 1, 5, 6, 4, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 5, 4, 4,
	5, 5, 5, 5, 4, 5, 5, 5, 5, 5,
	5, 5, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 5, 4, 6, 6, 7, 4, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 8, 4, 2, 3, 2,
	4, 6, 2, 2, 4, 6, 4, 2, 2, 0,
	1, 2, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 1, 1,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	1, 3, 4, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 2, 3, 5, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -381, -2, -1, -3, -4, -5, -6, -51, -63,
	-65, -66, -27, -7, -62, -44, -45, -47, -53, -58,
	-59, -60, -61, -67, -68, -69, -76, -22, -21, -20,
	-19, 12, -8, -9, -353, -10, -191, -192, -193, -382,
	-28, -29, -30, -34, -35, -36, -37, -39, -40, -41,
	-31, -32, -33, -43, -42, 206, -46, 61, -48, -49,
	-50, -54, -55, -56, -57, 320, 326, 378, 387, 505,
	506, 46, -77, -79, -23, -24, -25, -26, 202, 14,
	457, -11, -14, -12, -15, -13, -17, -18, -16, 224,
	223, 37, 286, 287, 324, 222, 203, 13, 135, 136,
	138, 139, 30, -78, 67, 204, -80, 10, 507, -88,
	38, -113, -188, 70, -176, -179, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 427, 302, 454, 241, 265, 268, 275, 135,
	154, 148, 176, 168, 143, 245, 246, 77, 138, 410,
	87, 395, 375, 141, 260, 262, 264, 267, 247, 164,
	159, 259, 243, 505, 157, 248, 39, 249, 181, 250,
	251, 459, 391, 301, 397, 272, 373, 158, 392, 263,
	394, 183, 187, 402, 326, 152, 153, 399, 404, 180,
	221, 42, 456, 233, 405, 185, 179, 175, 413, 276,
	274, 178, 151, 174, 244, 50, 189, 188, 190, 369,
	370, 371, 372, 252, 253, 314, 401, 171, 160, 305,
	144, 22, 408, 228, 396, 327, 254, 269, 277, 184,
	186, 235, 240, 458, 377, 239, 273, 406, 156, 232,
	261, 227, 409, 145, 320, 329, 255, 139, 266, 403,
	412, 49, 342, 150, 142, 218, 136, 237, 242, 256,
	257, 258, 279, 278, 270, 172, 234, 177, 162, 149,
	173, 137, 236, 411, 343, 503, 303, 358, 170, 167,
	238, 211, 407, 398, 140, 362, 344, 165, 280, 500,
	501, 502, 315, 300, 281, 282, 163, 225, 390, 283,
	285, 368, 293, 345, 376, -46, -9, -8, -78, -79,
	-195, 23, 373, -52, 374, 206, 67, -188, -5, -4,
	-44, -76, -194, -188, 286, -194, 209, -188, 239, 357,
	-297, 214, -264, -238, 240, -263, -240, -266, -241, 31,
	202, 204, 203, 236, 14, 324, 210, 12, 10, 325,
	222, 24, 25, 27, 13, 326, 328, 28, 329, 332,
	333, 334, 41, 337, 338, 229, 70, 73, 247, 247,
	-218, -212, 94, 230, -214, -207, -208, -210, -334, -328,
	-206, 67, 119, 120, 127, 95, -209, -286, 35, 97,
	464, 425, -162, -163, -164, -165, -166, -188, -329, -327,
	73, 78, 81, 84, 85, 83, 82, 161, 80, 74,
	132, -79, 70, -348, 472, -177, 492, 473, 491, 46,
	-302, -309, 208, -307, 166, 225, 162, 12, 125, 368,
	130, 163, 469, 488, 427, 495, 466, 467, 461, 462,
	463, 465, 474, 476, 487, -310, 483, 493, 494, 496,
	72, 71, 486, 485, 470, 471, 477, 460, 468, 478,
	479, 484, 489, 490, 497, 308, 87, 309, 310, 417,
	304, 311, 214, 373, 55, 312, 313, 314, 315, 316,
	424, 317, 56, 318, 307, 229, 358, 319, 165, 182,
	429, 428, 430, 421, 418, 416, 419, 420, 422, 423,
	480, 481, 482, -260, -258, -188, -70, -71, 498, -95,
	-96, -155, 19, 6, 7, 8, 9, -299, 302, 358,
	239, -232, -230, 283, 335, 219, 218, 88, 417, 208,
	-365, -366, 199, 200, 201, -355, 450, -354, -188, 26,
	209, -38, -311, -296, 398, 397, -199, 396, 389, 400,
	391, 202, 451, -173, 345, 376, 235, 414, 415, 322,
	377, 402, 403, 392, 87, 169, 166, 302, 358, -365,
	140, 137, -251, 140, 93, 145, 144, -251, 239, 357,
	40, -257, 368, -256, -258, 402, 403, 413, 71, 72,
	401, -173, 87, -96, -155, -95, -77, -79, -353, 302,
	358, 239, 210, 209, 211, 417, 286, -298, -361, 31,
	-303, 196, 197, 198, 32, 33, -1, -102, 231, -113,
	133, -96, -95, -96, -167, -188, 375, 103, -52, -52,
	374, -356, -357, -358, -360, 206, 374, 373, 133, 15,
	-194, 65, -113, -240, 239, -264, -238, 35, 64, 134,
	212, 134, 64, 67, 322, 302, 358, 323, 417, 209,
	335, 211, 239, 336, 302, 358, 209, 211, 417, 239,
	302, 209, 211, 358, 239, 336, 389, 390, 211, 26,
	327, 330, 331, 390, -315, 413, -315, 134, 93, 90,
	91, 92, -212, 110, -223, 103, 104, 105, 106, 107,
	108, 109, 116, 115, 126, 119, 120, 121, 122, 123,
	124, 125, 117, 118, 113, 94, 111, 112, 96, -79,
	-212, -218, -210, -210, -210, -210, -286, -216, -212, 67,
	67, 133, -212, 67, 67, 67, 67, 67, 67, 67,
	67, 67, -308, 67, 67, -220, -221, 67, 67, 73,
	73, 67, 67, 67, -210, 73, -221, -221, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 134, -119, -123, -120, -122, -121,
	-125, -124, 166, 167, 130, 170, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 30, 182, 225, 162,
	163, 164, 165, 183, 148, 168, 455, 191, 149, 192,
	150, 193, 151, 194, 152, 153, 195, 154, 157, 158,
	159, 156, 133, -96, 134, 67, -72, 38, -98, 21,
	-80, -79, 20, 31, 32, 31, 32, 31, 32, 31,
	32, -363, 209, 450, -228, 214, -228, -228, 210, -228,
	209, -367, 147, 134, -355, -101, 67, 23, 237, -198,
	111, -385, 210, 399, 42, 238, 237, -97, -98, -97,
	393, 390, -273, 394, 395, -199, -198, -198, -199, 209,
	211, 417, -383, -384, 15, 113, 237, -383, 30, 30,
	-297, -297, -368, 213, 406, 457, 143, 144, 145, -240,
	239, 239, 134, 103, 23, -259, 103, 114, -258, -258,
	-258, -259, -259, -133, 40, -187, 130, -188, 73, -133,
	40, -97, -80, -79, 68, 68, -297, -297, -297, -297,
	-297, -297, -297, -194, -81, -82, 121, -212, -188, -81,
	-304, 46, -76, 67, 30, 67, -188, -97, -72, -98,
	133, 78, 73, -52, 68, 134, -359, 84, 85, -362,
	180, 172, -188, -64, 73, -3, -4, -5, -6, -27,
	-44, -76, -330, -328, 67, 31, 367, 64, 15, -265,
	209, 417, 321, 235, 211, 302, -263, -247, -244, -242,
	-187, -240, -243, -242, -268, -167, 390, -73, 379, -73,
	-212, -212, -212, -212, -212, 83, 94, 300, 84, 85,
	-207, -224, 31, 281, 282, -208, -208, -208, -208, -208,
	-208, -208, -208, -208, -208, -208, -208, -215, -222, -286,
	67, 113, 111, 112, 96, -210, -208, -208, 68, 134,
	-352, -351, 98, -212, -212, -188, -349, -350, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 312,
	307, 313, 311, 304, 319, 314, 315, 165, 448, 449,
	442, 443, 444, 445, 446, 447, -217, -218, -217, -212,
	-349, -217, -161, 32, 31, -161, -212, -364, 298, 297,
	299, -99, -188, -217, 68, 68, 68, 78, -218, -217,
	-208, -217, -350, -161, -218, -218, -161, -161, -161, -161,
	121, -161, -161, -161, -161, -161, -161, -161, 73, -258,
	40, -293, 343, 342, -287, -289, 67, -288, 67, -288,
	-287, -287, 67, 67, -287, -290, 67, -290, -287, -291,
	67, -291, -292, 67, -291, -188, -97, -71, -313, -312,
	-212, 40, 499, -72, -212, -94, -93, -212, 211, -228,
	-370, 70, 94, -248, -245, -242, -238, -186, 70, 71,
	72, -188, -228, -368, -354, 34, -100, -188, -242, -383,
	-151, 16, -210, -384, -198, -198, -200, -384, -196, -384,
	390, -151, -151, -273, -197, -188, -197, -228, -175, -174,
	-188, -175, -370, -248, -85, -83, -86, -87, -89, -154,
	-156, -90, -113, 67, 497, 407, 408, 141, 144, 143,
	31, 367, -262, 367, 31, -238, -256, -252, 73, 368,
	-243, -261, 64, 130, -312, -259, -259, -259, -261, -261,
	129, -72, -370, -247, -238, -188, -115, -113, -115, -189,
	-186, -179, -150, 134, -149, 15, -183, -188, 34, 73,
	133, -150, -305, 64, -306, -219, -347, 498, -104, 68,
	-99, -345, -346, -99, -103, -188, -72, -72, -181, -182,
	-172, -178, -185, -186, -179, 207, 31, 93, 34, 36,
	308, 340, 96, 130, 20, 97, 166, 129, 310, 425,
	309, 202, 59, 428, 430, 429, 418, 416, 360, 364,
	366, 363, 417, 389, 40, 14, 37, 223, 32, 33,
	123, 204, 100, 101, 226, 35, 224, 85, 44, 23,
	62, 15, 17, 18, 311, 359, 214, 213, 113, 379,
	210, 57, 12, 132, 38, 110, 361, 53, 89, 45,
	55, 111, 21, 419, 420, 41, 378, 387, 453, 230,
	125, 312, 313, 60, 94, 367, 83, 43, 64, 90,
	19, 58, 112, 205, 424, 56, 365, 316, 318, 328,
	450, 317, 208, 400, 10, 307, 426, 30, 222, 54,
	209, 99, 212, 84, 229, 6, 88, 13, 61, 65,
	421, 422, 423, 46, 98, 16, 319, 457, 380, 381,
	382, 383, 384, 385, 386, 191, 192, 193, 194, 195,
	271, 217, 215, 219, 220, 498, 499, 196, 197, 297,
	299, 169, 199, 200, 201, 231, 147, 7, 346, 347,
	348, 349, 351, 352, 353, 354, 355, 356, 357, 506,
	23, -52, -357, 133, 134, -100, -265, -246, -243, -267,
	121, 70, -253, 134, 457, 508, 71, 212, -379, -378,
	359, 68, 134, -316, 213, 424, 73, 509, -316, 83,
	300, 84, 85, -286, -218, -215, -210, -208, -208, -213,
	226, 93, -212, -211, -351, 100, -212, 34, 134, 65,
	133, 68, 68, 15, 15, 68, -212, -212, 68, 15,
	15, -212, 68, 133, 68, 68, 68, 65, 68, 134,
	68, 134, -212, 68, 68, -212, -212, -212, -218, 68,
	-212, -212, -212, -212, -212, -212, -212, 134, -212, -295,
	344, 78, 78, -169, 73, -169, 78, 78, 78, 134,
	68, 73, 134, 22, 134, -91, 36, 37, -113, 214,
	-113, -373, 346, 35, -380, 134, 40, -378, -231, 65,
	-226, -227, -225, -229, 40, -113, 15, -84, -114, -188,
	67, 68, 134, -239, 65, -175, -212, -113, -151, -151,
	-198, -189, -200, -195, -200, -196, 133, -174, -373, -380,
	30, -157, -158, -159, -160, 53, 57, 59, 54, 55,
	56, 60, 30, 134, -386, 34, -184, -190, 34, -185,
	73, -186, -179, -184, -77, -79, 67, 142, 145, 145,
	144, 212, 67, 103, -261, -261, -261, 40, -187, 64,
	134, -151, -82, -83, -85, -188, 73, -188, 121, -151,
	39, 134, 67, 68, 134, 46, 134, 103, 68, 134,
	133, 375, -188, -328, 68, -267, 134, 212, 133, 133,
	-244, 326, -187, -246, 20, 457, -167, 38, 73, 38,
	68, -213, 93, -210, -207, 68, 101, -212, 99, -117,
	-119, 342, 343, -118, -124, 130, 166, 225, 165, 164,
	162, 342, 343, -133, -188, -212, -212, 68, 68, -212,
	-212, 15, -188, -133, -208, -212, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 73, 68,
	68, 68, 134, 68, 68, 68, 134, 68, 134, -312,
	-319, 394, -212, -212, -93, -92, 43, -101, 94, 67,
	-375, 396, 348, -180, 103, -205, -204, 303, 41, -300,
	368, 354, 355, -245, 239, 64, 292, 293, 294, 295,
	-225, -173, 129, 250, 67, -113, -84, -188, 15, 134,
	-369, 133, -1, -188, -238, -198, -151, -151, -198, -198,
	-200, -188, -375, -205, -250, -249, -167, -86, -86, -86,
	-86, 53, 53, 53, 58, 53, 58, 53, -159, -250,
	-89, -188, -190, 68, -218, 145, -246, -201, 73, -252,
	-113, -113, -153, 17, 133, -153, 89, -219, -314, -313,
	46, -76, -99, -306, -346, -312, -188, -181, -178, -186,
	-179, 78, 15, -243, -238, 121, 121, 70, 327, -253,
	73, 347, 73, 209, 103, 209, -207, -212, 68, -126,
	153, 152, -126, 68, -287, -288, -287, -290, -287, -126,
	-126, 68, 68, 23, 68, 68, 68, -212, 68, 68,
	134, 68, 73, 78, 78, -325, 385, 380, 382, 44,
	45, 34, 35, -108, -109, -110, -116, -111, -167, -203,
	-112, 217, 215, 219, -342, 88, 220, 271, 89, 210,
	-376, 77, -371, 73, -377, 77, 349, 132, 305, 40,
	350, 351, 365, 301, 78, 78, 356, -372, 70, -113,
	-180, -180, -180, -108, -102, 65, 133, -83, -114, -188,
	121, 68, -151, -151, -151, -198, -376, -377, -151, 134,
	103, -106, -105, 64, 65, -107, 64, -105, 53, 53,
	-151, -101, 68, 68, -152, 18, 20, 121, -152, 13,
	68, -306, -238, -253, 368, -113, 73, -113, -212, 68,
	-212, 68, 68, -294, 500, -323, 380, 20, 20, -76,
	-113, 68, 134, -119, -112, -188, 89, -341, -342, -228,
	-341, 89, 67, 73, -374, 359, 73, 73, 78, 40,
	78, 132, 352, -301, 67, -133, -135, -187, 130, 73,
	68, -184, -83, -188, -151, -369, 133, -151, -96, -249,
	-312, -212, 67, -212, -212, -218, -345, -75, -317, -273,
	510, 134, -75, 68, 68, -140, 501, 73, 20, 73,
	-321, 73, -101, -131, -132, -148, 340, 241, -229, 245,
	77, 246, 375, 247, 210, 249, 250, 251, 221, 252,
	253, 254, 368, 255, 256, 257, 258, 323, 6, 288,
	-110, -130, -129, -127, 83, 94, 40, 340, -128, 77,
	129, 264, 242, 265, -147, -202, 64, 215, 88, 89,
	328, -203, -338, -339, -188, -339, -188, -338, -338, -228,
	-212, 20, 457, 304, 40, 78, 40, 353, -233, -235,
	-167, 67, -74, -73, -151, -151, -97, -100, -324, 385,
	-320, -318, 380, 381, 382, 383, 73, -170, 502, 78,
	73, 382, 34, -269, 231, 134, -148, -180, -180, -173,
	129, -180, -180, -180, -180, 248, 248, -180, -180, -180,
	-180, -180, -180, -180, -180, -180, -180, -180, -180, -180,
	-180, 67, -127, 83, -208, 73, -135, -136, 40, 263,
	259, -137, 40, 243, 244, -139, 67, 271, 13, 89,
	89, -113, 67, 65, 280, 67, 67, 67, -339, 68,
	73, 347, 73, 304, 68, 134, -287, -212, -75, -96,
	68, -326, 213, -322, 384, -318, 20, 382, 20, 20,
	103, 67, 20, -76, 20, -148, 78, 78, -180, -180,
	78, 73, 73, 73, -180, -180, 78, 73, -190, 78,
	78, 78, 78, 40, 73, -138, 40, 259, 263, 260,
	261, 262, 78, 40, 78, 40, 78, 40, -188, 67,
	-343, -344, 73, 78, 67, -307, -234, 67, -233, -340,
	292, 293, 294, 296, 295, -340, -233, -233, -233, 67,
	-255, -254, 272, 94, 368, -236, -235, -91, 68, -97,
	-333, 67, 78, -323, 20, -321, 20, -321, -321, 73,
	-171, -188, -321, -270, 273, 274, -271, -277, 276, -133,
	-133, 73, 73, -134, 242, -115, 68, 134, 103, 68,
	-212, -220, -142, -141, 453, -233, 68, 68, 68, 68,
	-233, 272, -237, 221, 77, 457, 290, 291, -91, -337,
	30, 68, -332, -331, -168, -327, -188, 385, 386, 73,
	-321, 510, 134, 68, 134, -275, 277, 67, -273, 67,
	-273, 89, 293, 243, 244, 68, -344, 73, 68, -146,
	-144, -145, 64, 392, 269, 270, 68, -236, -236, -236,
	-236, 68, -180, 73, 289, -336, -335, -334, 68, 134,
	133, 73, -188, -272, 278, 78, -208, 67, -208, 67,
	-274, 275, 67, -254, -145, 64, -144, 64, 14, 13,
	-147, 78, -186, 134, 103, -331, -188, 103, -279, 67,
	20, 68, -268, 68, -268, 67, 103, -208, -143, 266,
	267, 30, 144, -143, -335, 40, -212, 133, 73, -280,
	-278, 231, -271, 68, 68, -268, 78, 68, 83, 40,
	268, -188, 510, 134, 68, 134, 70, -276, 279, 68,
	73, -278, -281, 46, 78, 103, -285, -282, 67, -148,
	233, 113, 73, -285, -148, -284, -283, 278, 234, 67,
	510, 68, 134, 70, 230, 67, -218, -283, -282, -218,
	68, 68,
}

var yyDef = [...]int{
	27, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 590, 591, 592,
	593, 0, 385, 386, 0, 365, 0, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 302,
	303, 304, 305, 264, 265, 0, 213, 209, 188, 189,
	190, 149, 150, 151, 152, 270, 0, 0, 0, 0,
	0, 0, 457, -2, 594, 595, 596, 597, -2, 398,
	0, 366, 367, 368, 369, 370, 371, 372, 373, 253,
	254, 255, 250, 251, 252, -2, 0, 398, 202, 0,
	193, 193, 0, 477, 0, 0, 491, 513, 27, 435,
	0, 440, 776, 812, 813, 814, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 214, 387, 388, 477, 477,
	236, 0, 1406, 240, 0, 0, 0, 362, 232, 233,
	234, 235, 0, 582, 0, 229, 0, 208, 1465, 0,
	0, 0, 0, 0, 0, 93, 636, 95, 638, 99,
	106, 0, 0, 111, 112, 115, 116, 117, 118, 119,
	0, 123, 0, 125, 128, 0, 130, 131, 0, 134,
	135, 136, 0, 146, 147, 148, 639, 640, 73, 73,
	1163, 1061, 0, 1068, 1069, 1080, 1089, 883, 884, 885,
	886, 0, 0, 0, 0, 0, 893, 894, 0, 907,
	1550, 0, 900, 901, 902, 903, 904, 36, 48, 49,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1034, 870, 812, 0, 1558, 0, 1578, 1559, 1577, 0,
	0, 1019, 0, 1009, 0, -2, -2, 0, 0, 1531,
	0, -2, 1555, 1574, 1582, 1581, 1552, 1553, 1547, 1548,
	1549, 1551, 1560, 1562, 1573, 0, 1569, 1579, 1580, 0,
	50, 51, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1545, 1025, -2, 1027, 1028, 1030,
	1031, 1032, 1033, -2, 1036, 1037, 1038, -2, -2, 1041,
	1042, 1043, 1044, 1045, 1046, 1049, -2, 1051, -2, 1053,
	1021, 1022, 1023, 1024, 1013, 1014, 1015, 1016, 1017, 1018,
	-2, -2, -2, 0, 186, 184, 477, 549, 0, -2,
	0, 0, 0, 496, 499, 502, 505, 600, 665, 665,
	665, 0, 665, 0, 686, 642, 643, 644, 663, 664,
	403, 399, 400, 401, 402, 465, 0, 467, 470, 306,
	0, 345, 0, 0, 472, 472, 0, 354, 345, 345,
	-2, 0, 316, 317, 318, 311, 0, 311, 322, 323,
	324, 334, 335, 355, 1187, 0, 0, 270, 270, 405,
	203, 204, 192, 194, 0, 198, 0, 191, 1465, 0,
	0, 160, 1531, 165, 0, 1413, 1479, 1428, 0, 0,
	1446, 0, -2, 472, 0, 478, 0, 477, 0, 270,
	270, 270, 270, 270, 270, 270, 0, 0, 0, 514,
	515, 510, 511, 512, 516, 517, 3, 0, 0, 439,
	0, 472, -2, 0, 237, 815, 0, 0, 241, 242,
	0, 0, 256, 0, 259, 245, 246, 247, 0, 0,
	231, 0, 0, 210, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 103, 100, 107, 110, 120, 127,
	0, 139, 141, 144, 101, 108, 113, 114, 121, 142,
	102, 104, 105, 109, 143, 145, 122, 126, 140, 124,
	129, 132, 133, 138, 0, 74, 0, 0, 0, 0,
	0, 0, 1067, 0, 0, 1097, 1098, 1099, 1100, 1101,
	1102, 1103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	1061, 0, 889, 890, 891, 892, 895, 0, 908, 0,
	0, 0, 0, 1059, 1059, 0, 1059, 1055, 1055, 0,
	0, 1059, 997, 0, 0, 999, 1010, 0, 0, 1002,
	1003, 1059, 0, 1059, 1007, 1008, 993, 994, 0, 1055,
	0, 0, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055,
	1055, 1055, 1055, 0, 0, 1164, 1182, 1119, 1120, 1121,
	1169, 1123, 1173, 1173, 1169, 1169, 1151, 1152, 1153, 1154,
	1155, 1156, 1157, 1158, 1159, 0, 0, 1162, 1142, 1169,
	1171, 1171, 1169, 1166, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1176, 1176,
	1179, 1176, 0, 472, 0, 0, 460, 0, 441, 0,
	493, 495, 0, 497, 498, 500, 501, 503, 504, 506,
	507, 0, 665, 601, 0, 0, 0, 0, 0, 0,
	665, 405, 404, 0, 466, 0, 0, 0, 311, 522,
	0, 0, 328, 329, 330, 345, 345, 336, 473, 337,
	338, 347, 0, 352, 353, 0, 522, 522, 0, 0,
	0, 665, 313, 312, 350, 351, 320, 313, 1188, 1189,
	0, 0, 0, 406, 0, 0, 196, 0, 201, 153,
	0, 0, 0, 0, 0, 0, 182, 183, 0, 0,
	0, 0, 0, 173, 176, 770, 771, 633, 634, 177,
	178, 441, 492, 494, 489, 490, 0, 0, 0, 0,
	0, 0, 0, 384, 530, 524, 526, 577, 36, 530,
	414, 427, 409, 0, 416, 0, 777, 441, 463, 441,
	0, 238, 0, 243, 0, 0, 258, 260, 261, 262,
	248, 249, 363, 227, 228, 220, 221, 222, 223, 224,
	225, 226, 230, 46, 0, 211, 212, 0, 0, 0,
	87, 88, 89, 90, 91, 92, 94, 78, 376, 378,
	625, 637, 0, 628, 0, 97, 137, 70, 0, 70,
	1062, 1063, 1064, 1065, 1066, 1070, 0, 1072, 1074, 1076,
	1078, 0, 1094, -2, -2, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 1081, 1092, 1093,
	0, 0, 0, 0, 0, 1090, 1085, 0, 887, 0,
	905, 909, 0, 0, 0, 37, 1054, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 0, 1060, 0, 1061,
	0, 0, 0, 1056, 1057, 0, 0, 0, 959, 960,
	961, 0, 422, 0, 1020, 998, 1011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 1185, 1183, 1184, 1122, 1170, 0, 1147, 0, 1148,
	1149, 1150, 0, 0, 1143, 1144, 0, 1145, 1146, 1138,
	0, 1139, 1140, 0, 1141, 185, 548, 550, 0, 431,
	433, 434, 0, 461, 474, 479, 480, 483, 0, 0,
	0, 603, 0, 268, 619, 0, 635, 657, 587, 588,
	589, -2, 0, 0, 468, 0, 0, 562, 308, 313,
	315, 0, 346, 0, 522, 522, 345, 0, 347, 0,
	347, 341, 342, 0, 356, 359, 357, 0, 319, 314,
	361, 321, 0, 268, 535, 0, 536, 537, 533, 564,
	569, 572, 572, 0, 0, 205, 206, 0, 0, 200,
	154, 155, 0, 157, 158, 159, 166, 161, 163, 0,
	0, 167, 179, 180, 181, 0, 0, 0, 171, 172,
	0, 459, 374, 375, 379, 0, 381, 774, 382, 383,
	583, 584, 522, 0, 531, 0, 527, 578, 0, 580,
	0, 522, 407, 0, 408, 424, 0, 428, 0, 0,
	420, 413, 417, 0, 0, 437, 462, 464, 816, 0,
	1194, -2, 1196, -2, -2, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	0, 244, 257, 0, 0, 0, 0, 81, 622, 0,
	82, 86, 76, 0, 0, 0, 627, 0, 624, 629,
	0, 96, 0, 0, 71, 72, 679, 0, 0, 1071,
	1073, 1075, 1077, 1079, 0, 1082, 1090, 1086, 0, 1083,
	0, 0, 1062, 0, 910, 0, 0, 0, 0, 0,
	0, 945, 946, 0, 0, 950, 0, 0, 953, 0,
	0, 0, 957, 0, 996, 1012, 1000, 0, 1004, 0,
	1006, 0, 0, 928, 929, 0, 0, 0, 0, 934,
	0, 0, 0, 0, 0, 0, 0, 0, 1165, 1118,
	1186, 0, 0, 0, 1167, 0, 0, 0, 0, 0,
	551, 443, 0, 0, 0, 486, 484, 485, 470, 0,
	0, 609, 1190, 666, 272, 0, 0, 621, 0, 0,
	662, -2, 669, 0, 675, 0, 0, 0, 392, 396,
	27, 471, 0, 307, 0, 345, 523, 522, 331, 332,
	522, 348, 345, 349, 345, 347, 0, 358, 609, 272,
	0, 0, 0, 0, 0, 555, 0, 0, 554, 0,
	0, 0, 0, 0, 0, 570, 566, 573, 0, 575,
	576, 585, 586, 571, 0, 477, 0, 207, 195, 197,
	0, 0, 0, 0, 168, 169, 170, 174, 175, 0,
	0, 520, 525, 532, 535, 579, 581, 37, 528, 520,
	0, 427, 429, 0, 0, 427, 0, 0, 436, 0,
	0, 0, 364, 47, 263, 0, 0, 0, 0, 0,
	377, 0, 626, 78, 0, 0, 98, 0, 0, 0,
	1058, 1084, 0, 1091, 1087, 888, 896, 906, 0, 0,
	912, 924, 924, 0, 915, 1169, 1173, 918, 1169, 1171,
	1169, 924, 924, 0, 38, 0, 0, 951, 952, 0,
	0, 0, 423, 0, 0, 0, 927, 930, 931, 932,
	933, 935, 936, 937, 938, 939, 940, 941, 0, 1175,
	1174, 1160, 0, 1161, 1172, 1177, 0, 1180, 0, 432,
	447, 0, 475, 476, 481, 482, 0, 0, 0, 778,
	612, 610, 611, 0, 1191, 616, 273, 274, 275, 276,
	0, 0, 0, 620, 0, 0, 658, 659, 660, 661,
	670, 1190, 1190, 1190, 778, 435, 0, -2, 0, 0,
	394, 0, 0, 563, 309, 522, 325, 339, 522, 522,
	345, 360, 612, 616, 522, 217, 0, 558, 552, 0,
	541, 556, 557, 544, 0, 546, 0, 542, 543, 522,
	534, 470, 574, 567, 0, 199, 156, 0, 292, 162,
	380, 775, 518, 0, 0, 518, 0, 425, 0, 430,
	427, 412, 421, 411, 418, 419, 438, 817, 1195, 1192,
	1193, 239, 0, 623, 78, 83, 84, 85, 79, 77,
	630, 0, 632, 0, 0, 0, 1088, 911, 897, 913,
	925, 926, 914, 898, 916, 917, 919, 920, 921, 922,
	923, 899, 947, 0, 949, 954, 955, 0, 1001, 1005,
	0, 958, 1168, 0, 0, 449, 59, 0, 0, 487,
	488, 0, 0, 0, 779, 780, 782, 783, 0, 0,
	785, 840, 0, 794, 665, 794, 0, 0, 796, 797,
	602, 0, 0, 605, 614, 0, 0, 0, 278, 279,
	0, 0, 0, 291, 287, 288, 289, 269, 615, 0,
	0, 0, 0, 0, 572, 0, 0, 522, 393, 396,
	397, 469, 310, 343, 340, 522, 266, 267, 477, 0,
	0, 538, 559, 0, 0, 539, 0, 540, 545, 547,
	216, 565, 568, 164, 508, 0, 0, 529, 509, 416,
	426, 410, 80, 75, 631, 61, 0, 61, 0, 956,
	0, 1178, 1181, 451, 0, 448, 0, 0, 0, 598,
	470, -2, 0, -2, 784, 841, 806, 806, 795, 806,
	806, 665, 0, 613, 604, 0, 617, 618, 0, 280,
	281, 0, 284, 290, 0, 671, 672, 772, 773, 673,
	0, 522, 522, -2, 390, 395, 0, 344, 472, 218,
	219, 560, 0, 553, 519, 521, 415, 29, 55, 0,
	680, 0, 28, 948, 995, 453, 0, 450, 0, 444,
	446, 69, 0, 687, -2, 726, 1190, 1190, 0, 1190,
	1190, 1190, 1190, 0, 0, 1190, 1190, 1190, 1190, 1190,
	1190, 1190, 1190, 1190, 1190, 1190, 1190, 1190, 1190, 0,
	781, 808, -2, 820, 822, 0, 0, 825, 826, 0,
	0, 0, 0, 862, 832, 0, 0, 0, 1106, 1107,
	0, 839, 0, 798, 807, 0, 807, 0, 0, 806,
	0, 0, 0, 277, 282, 0, 285, 286, 0, 653,
	1169, 0, 677, 61, 477, 391, 215, 0, 52, 57,
	62, 63, 0, 0, 0, 0, 0, 442, 0, 452,
	60, 0, 0, 676, 0, 674, 728, 0, 0, 1190,
	1190, 0, 0, 0, 0, 1190, 1190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 821, 823, 824, 827, 828, 829, 867, 868,
	869, 830, 864, 865, 866, 831, 0, 0, 0, 1104,
	1105, 860, 0, 0, 0, 0, 0, 0, 0, 792,
	606, 0, 608, 283, 646, 0, 483, 0, 678, 472,
	561, 39, 0, 59, 0, 64, 0, 0, 0, 0,
	0, 0, 0, 599, 722, 727, 729, 730, 0, 0,
	733, 734, 735, 736, 0, 0, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 764, 765, 766, 767,
	768, 769, 749, 750, 751, 752, 753, 754, 761, 0,
	0, 758, 0, 0, 0, 1009, 855, 0, 0, 799,
	801, 802, 803, 804, 805, 800, 0, 0, 0, 0,
	791, 793, 836, 0, 607, 645, 654, 655, 483, 389,
	30, 0, 0, 56, 0, 65, 0, 67, 68, 0,
	0, 455, 445, 711, 0, 0, 717, 0, 723, 731,
	732, 737, 738, 755, 0, 0, 757, 0, 0, 863,
	0, 835, 843, 856, 0, 0, 646, 646, 646, 646,
	0, 837, 647, 1190, 0, 0, 651, 652, 656, 684,
	0, 40, 0, 42, 44, 45, 809, 53, 54, 58,
	66, 681, 0, 454, 0, 689, 0, 0, 0, 0,
	0, 720, 0, 762, 763, 756, 759, 760, 833, 842,
	844, 845, 0, 857, 858, 859, 861, 786, 787, 788,
	789, 0, 0, 649, 0, 31, 32, 0, 41, 0,
	0, 0, 456, 691, 0, 712, 0, 0, 0, 0,
	0, 0, 0, 834, 846, 0, 847, 0, 0, 0,
	790, 648, 650, 0, 0, 43, 810, 0, 688, 0,
	722, 713, 0, 715, 0, 0, 0, 0, 848, 850,
	851, 0, 0, 849, 33, 34, 35, 0, 0, 0,
	693, 0, 709, 714, 716, 0, 721, 719, 852, 854,
	853, 811, 682, 0, 692, 0, 705, 690, 0, 718,
	0, 694, -2, 0, 710, 0, 695, -2, 0, 703,
	0, 0, 0, 696, 704, 0, 699, 0, 0, 0,
	683, 698, 0, -2, 706, 0, 0, 700, -2, 0,
	708, 707,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 507,
	104, 103, 105, 3, 508, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 509, 115, 510, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:564
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:570
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:600
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:604
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:610
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:622
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:633
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:637
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:643
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:647
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:653
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:660
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:669
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:673
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:677
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:690
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:696
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:705
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:716
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:720
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:726
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:730
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:736
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:740
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:746
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:770
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:789
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:793
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:797
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:806
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:814
		{
			yyVAL.str = ""
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:818
		{
			yyVAL.str = yyDollar[3].str
		}
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:823
		{
			yyVAL.str = "\n"
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:827
		{
			yyVAL.str = yyDollar[3].str
		}
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:836
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:860
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:864
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:870
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:876
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:894
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:911
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:934
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:938
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:942
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:947
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:951
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:957
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:970
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:998
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1008
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1021
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1034
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1040
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1046
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1053
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1061
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1070
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1074
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1078
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1082
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1086
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1090
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1097
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1101
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1107
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1114
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1123
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1127
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1133
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1137
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1141
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1145
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1149
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1153
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1157
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1161
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1165
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1169
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1173
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1177
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1181
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1185
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1189
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1193
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1197
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1201
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1205
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1209
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1213
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1217
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1221
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1225
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1229
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1233
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1237
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1241
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1245
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1249
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1253
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1257
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1261
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1265
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1341
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1348
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1355
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1364
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1394
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1398
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1402
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1408
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1414
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1418
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1425
		{
			yyVAL.str = yyDollar[3].str
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1431
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1435
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1441
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1449
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1458
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1474
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1497
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1520
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1527
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1534
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1549
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1556
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1565
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1569
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1573
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1579
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1583
		{
			yyVAL.str = yyDollar[1].str
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1590
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1596
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1600
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1611
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1617
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1622
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1626
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1630
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1634
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1654
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1660
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1664
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1668
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1672
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1677
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1682
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1688
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1695
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1701
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1708
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1715
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1725
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1732
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1743
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1754
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1758
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1764
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1776
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1782
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1786
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1811
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1817
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1821
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1837
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1853
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1901
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1905
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1911
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1917
		{
			yyVAL.str = yyDollar[1].str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1922
		{
			yyVAL.str = "true"
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1923
		{
			yyVAL.str = "false"
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1924
		{
			yyVAL.str = yyDollar[1].str
		}
	case 263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1929
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1940
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1952
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1963
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1967
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1972
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1976
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1985
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2005
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2013
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2017
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2021
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2025
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2033
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2037
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2045
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2049
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2053
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2057
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2061
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2067
		{
			yyVAL.item = nil
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2072
		{
			yyVAL.item = nil
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2096
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2100
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2109
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2115
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2120
		{
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2124
		{
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2129
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2142
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2150
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2154
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2158
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2166
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2170
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2176
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2184
		{
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2186
		{
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2195
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2205
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2214
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2222
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2234
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2246
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2268
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2272
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2307
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2312
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2316
		{
			yyVAL.str = yyDollar[2].str
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2322
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2335
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2339
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2345
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2350
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2360
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2364
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2373
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2377
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2381
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2400
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2409
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2418
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2422
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2437
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2446
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2462
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2494
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2510
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2523
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2534
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2538
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2544
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2549
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2556
		{
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2558
		{
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2561
		{
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2570
		{
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2574
		{
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2579
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2589
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2596
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2602
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2610
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2617
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2624
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2647
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2670
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2674
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2680
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2689
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2693
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2699
		{
			yyVAL.str = yyDollar[1].str
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2703
		{
			yyVAL.str = yyDollar[3].str
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2709
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2713
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2719
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2724
		{
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2735
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2739
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2746
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2755
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2761
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2765
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2771
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2775
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2780
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2784
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2797
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2804
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2811
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2829
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2848
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2854
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2861
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2865
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2878
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2882
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2887
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2891
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2898
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2903
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2910
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2916
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2920
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2924
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2936
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2942
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2949
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2958
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2962
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2980
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2989
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2995
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2999
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3003
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3012
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3018
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3024
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3028
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3039
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3043
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3047
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3052
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3056
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3060
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3066
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3076
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3110
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3122
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3130
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3138
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3147
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3155
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3179
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3195
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3203
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3211
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3221
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3250
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3254
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3258
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3271
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3276
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3280
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3289
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3295
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3299
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3305
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3309
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3313
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3317
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3322
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3330
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3336
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3344
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3348
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3361
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3370
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3389
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3399
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3403
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3413
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3417
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3421
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3425
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3431
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3441
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3445
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3451
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3467
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3473
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3477
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3481
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3491
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3497
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3501
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3507
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3511
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3517
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3521
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3531
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3547
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3553
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3565
		{
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3566
		{
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3570
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3582
		{
			yyVAL.str = ""
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3586
		{
			yyVAL.str = yyDollar[1].str
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3590
		{
			yyVAL.str = yyDollar[2].str
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3599
		{
			yyVAL.str = ""
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3603
		{
			yyVAL.str = yyDollar[1].str
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3607
		{
			yyVAL.str = yyDollar[2].str
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3611
		{
			yyVAL.str = yyDollar[1].str
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3615
		{
			yyVAL.str = yyDollar[2].str
		}
	case 598:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3649
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3659
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3670
		{
		}
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3675
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3687
		{
			yyVAL.str = yyDollar[1].str
		}
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3693
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3703
		{
			yyVAL.str = yyDollar[1].str
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3709
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3716
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3722
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3730
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3736
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3743
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3751
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3757
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3766
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3778
		{
			yyVAL.str = yyDollar[1].str
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3783
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3789
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3797
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3903
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3907
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3913
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3923
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3927
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3933
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3943
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3947
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3951
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3960
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3966
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3973
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3979
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3992
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4001
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4005
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4011
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4028
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4032
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4036
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4040
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4046
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4069
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4091
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4095
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4099
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4103
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4107
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4113
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4117
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4123
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4128
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4133
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4137
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4141
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4145
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4149
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4155
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4169
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4173
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4182
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4188
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4192
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4198
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4202
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4206
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4211
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4215
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4221
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4232
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4243
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4250
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4258
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4270
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4282
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "format" || strings.ToLower(yyDollar[11].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       strings.ToLower(yyDollar[9].str),
				JsonData:     strings.ToLower(yyDollar[13].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-18 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4295
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" || strings.ToLower(yyDollar[11].str) != "format" || strings.ToLower(yyDollar[15].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str, yyDollar[15].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       strings.ToLower(yyDollar[13].str),
				JsonData:     strings.ToLower(yyDollar[17].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4310
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4321
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4325
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4334
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4348
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4361
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4367
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4371
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4377
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4386
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4400
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4406
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4410
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4416
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4423
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4432
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4436
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4445
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4450
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4454
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4459
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4463
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4473
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4477
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4488
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4496
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4504
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4512
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4523
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4533
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4543
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4547
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4552
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4556
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4565
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4571
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4575
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4579
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4585
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4589
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4593
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4597
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4601
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4605
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4609
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4613
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4617
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4621
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4625
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4629
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4633
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4637
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4641
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4645
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4649
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4653
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4657
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4661
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4665
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4669
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4673
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4677
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4681
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4685
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4689
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4693
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4697
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4704
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4708
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4714
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4719
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4723
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4727
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4733
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4737
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4741
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4745
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4749
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4753
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4767
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4771
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4780
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4785
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4791
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4798
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4802
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4808
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4812
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4818
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4828
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4834
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4843
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4852
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4875
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4884
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4894
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4902
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4908
		{
			yyVAL.str = ""
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4912
		{
			yyVAL.str = yyDollar[1].str
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4922
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4928
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4934
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4948
		{
			yyVAL.str = ""
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:4955
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4961
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4965
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4969
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4980
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4984
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4988
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4993
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4997
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5003
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5007
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5013
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5017
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5021
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5029
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5033
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5037
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5041
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5045
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5049
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5053
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5057
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5061
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5065
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5080
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5084
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5089
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5093
		{
			yyVAL.str = yyDollar[1].str
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5099
		{
			yyVAL.str = ""
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5103
		{
			yyVAL.str = yyDollar[2].str
		}
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5109
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5121
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5128
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5135
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5142
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5149
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5158
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5164
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5170
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5174
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5178
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5182
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5186
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5191
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5198
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5202
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5206
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5215
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5220
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5224
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5240
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5246
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5250
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5254
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5258
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5262
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5266
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5270
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5274
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5278
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5282
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5286
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5290
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5294
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5300
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5304
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5308
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5312
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5316
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5320
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5324
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5328
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5332
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5336
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5340
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5344
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5349
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5357
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5361
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5365
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5374
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5378
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5382
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5386
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5390
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5399
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5408
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5414
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5418
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5424
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5434
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5451
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5468
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5481
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5494
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5506
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5520
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5535
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5550
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5567
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5582
		{
		}
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5588
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5597
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5605
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5613
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5622
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5631
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5640
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5649
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5658
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5667
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5676
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5685
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5694
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5703
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5712
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5728
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5736
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5744
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5752
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5760
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5769
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5777
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5786
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5795
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5803
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5811
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5820
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5829
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5840
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5861
		{
			yyVAL.str = yyDollar[1].str
		}
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5897
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5909
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5921
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5931
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5939
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5946
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5953
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5965
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5973
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5984
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5993
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6002
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6010
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6020
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6028
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6036
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6050
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6060
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6079
		{
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6081
		{
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6122
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6132
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6136
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6140
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6146
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6155
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6161
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6165
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6172
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6176
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6180
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6188
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6192
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6196
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6200
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6206
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6210
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6214
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6218
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6222
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6226
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6230
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6234
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6238
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6242
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6250
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6254
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6258
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6262
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6266
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6270
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6274
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6278
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6288
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6294
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6298
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6305
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6309
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6313
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6319
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6323
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6327
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6331
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6335
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6339
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6343
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6349
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6353
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6357
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6361
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6367
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6371
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6384
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6389
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6393
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6397
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6401
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6415
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6419
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6433
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6439
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6450
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6455
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6461
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6473
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6485
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6497
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6510
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6523
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6536
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6549
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6562
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6575
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6588
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6601
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6614
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6627
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6642
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6665
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6702
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6750
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6767
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6779
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6794
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6814
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6834
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6850
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6863
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6876
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6889
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6902
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6914
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6926
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6938
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6950
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6962
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6974
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6986
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6998
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7010
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7023
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7036
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7051
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7059
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7068
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7078
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7101
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7106
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7112
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7119
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7123
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7128
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7132
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7138
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7144
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7151
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7158
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7167
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7174
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7181
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7190
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7194
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7198
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7204
		{
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7206
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7216
		{
			yyVAL.str = ""
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7220
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const MODIFY = 57671
const CHANGE = 57672
const SECOND = 57673
const ASCII = 57674
const COALESCE = 57675
const COLLATION = 57676
const HOUR = 57677
const MICROSECOND = 57678
const MINUTE = 57679
const MONTH = 57680
const QUARTER = 57681
const REPEAT = 57682
const REVERSE = 57683
const ROW_COUNT = 57684
const WEEK = 57685
const REVOKE = 57686
const FUNCTION = 57687
const PRIVILEGES = 57688
const TABLESPACE = 57689
const EXECUTE = 57690
const SUPER = 57691
const GRANT = 57692
const OPTION = 57693
const REFERENCES = 57694
const REPLICATION = 57695
const SLAVE = 57696
const CLIENT = 57697
const USAGE = 57698
const RELOAD = 57699
const FILE = 57700
const TEMPORARY = 57701
const ROUTINE = 57702
const EVENT = 57703
const SHUTDOWN = 57704
const NULLX = 57705
const AUTO_INCREMENT = 57706
const APPROXNUM = 57707
const SIGNED = 57708
const UNSIGNED = 57709
const ZEROFILL = 57710
const ENGINES = 57711
const LOW_CARDINALITY = 57712
const AUTOEXTEND_SIZE = 57713
const ADMIN_NAME = 57714
const RANDOM = 57715
const SUSPEND = 57716
const ATTRIBUTE = 57717
const HISTORY = 57718
const REUSE = 57719
const CURRENT = 57720
const OPTIONAL = 57721
const FAILED_LOGIN_ATTEMPTS = 57722
const PASSWORD_LOCK_TIME = 57723
const UNBOUNDED = 57724
const SECONDARY = 57725
const RESTRICTED = 57726
const USER = 57727
const IDENTIFIED = 57728
const CIPHER = 57729
const ISSUER = 57730
const X509 = 57731
const SUBJECT = 57732
const SAN = 57733
const REQUIRE = 57734
const SSL = 57735
const NONE = 57736
const PASSWORD = 57737
const SHARED = 57738
const EXCLUSIVE = 57739
const MAX_QUERIES_PER_HOUR = 57740
const MAX_UPDATES_PER_HOUR = 57741
const MAX_CONNECTIONS_PER_HOUR = 57742
const MAX_USER_CONNECTIONS = 57743
const FORMAT = 57744
const VERBOSE = 57745
const CONNECTION = 57746
const TRIGGERS = 57747
const PROFILES = 57748
const LOAD = 57749
const INFILE = 57750
const TERMINATED = 57751
const OPTIONALLY = 57752
const ENCLOSED = 57753
const ESCAPED = 57754
const STARTING = 57755
const LINES = 57756
const ROWS = 57757
const IMPORT = 57758
const DISCARD = 57759
const MODUMP = 57760
const OVER = 57761
const PRECEDING = 57762
const FOLLOWING = 57763
const GROUPS = 57764
const DATABASES = 57765
const TABLES = 57766
const SEQUENCES = 57767
const EXTENDED = 57768
const FULL = 57769
const PROCESSLIST = 57770
const FIELDS = 57771
const COLUMNS = 57772
const OPEN = 57773
const ERRORS = 57774
const WARNINGS = 57775
const INDEXES = 57776
const SCHEMAS = 57777
const NODE = 57778
const LOCKS = 57779
const ROLES = 57780
const TABLE_NUMBER = 57781
const COLUMN_NUMBER = 57782
const TABLE_VALUES = 57783
const TABLE_SIZE = 57784
const NAMES = 57785
const GLOBAL = 57786
const PERSIST = 57787
const SESSION = 57788
const ISOLATION = 57789
const LEVEL = 57790
const READ = 57791
const WRITE = 57792
const ONLY = 57793
const REPEATABLE = 57794
const COMMITTED = 57795
const UNCOMMITTED = 57796
const SERIALIZABLE = 57797
const LOCAL = 57798
const EVENTS = 57799
const PLUGINS = 57800
const CURRENT_TIMESTAMP = 57801
const DATABASE = 57802
const CURRENT_TIME = 57803
const LOCALTIME = 57804
const LOCALTIMESTAMP = 57805
const UTC_DATE = 57806
const UTC_TIME = 57807
const UTC_TIMESTAMP = 57808
const REPLACE = 57809
const CONVERT = 57810
const SEPARATOR = 57811
const TIMESTAMPDIFF = 57812
const CURRENT_DATE = 57813
const CURRENT_USER = 57814
const CURRENT_ROLE = 57815
const SECOND_MICROSECOND = 57816
const MINUTE_MICROSECOND = 57817
const MINUTE_SECOND = 57818
const HOUR_MICROSECOND = 57819
const HOUR_SECOND = 57820
const HOUR_MINUTE = 57821
const DAY_MICROSECOND = 57822
const DAY_SECOND = 57823
const DAY_MINUTE = 57824
const DAY_HOUR = 57825
const YEAR_MONTH = 57826
const SQL_TSI_HOUR = 57827
const SQL_TSI_DAY = 57828
const SQL_TSI_WEEK = 57829
const SQL_TSI_MONTH = 57830
const SQL_TSI_QUARTER = 57831
const SQL_TSI_YEAR = 57832
const SQL_TSI_SECOND = 57833
const SQL_TSI_MINUTE = 57834
const RECURSIVE = 57835
const CONFIG = 57836
const DRAINER = 57837
const SOURCE = 57838
const STREAM = 57839
const HEADERS = 57840
const MATCH = 57841
const AGAINST = 57842
const BOOLEAN = 57843
const LANGUAGE = 57844
const WITH = 57845
const QUERY = 57846
const EXPANSION = 57847
const WITHOUT = 57848
const VALIDATION = 57849
const ADDDATE = 57850
const BIT_AND = 57851
const BIT_OR = 57852
const BIT_XOR = 57853
const CAST = 57854
const COUNT = 57855
const APPROX_COUNT = 57856
const APPROX_COUNT_DISTINCT = 57857
const APPROX_PERCENTILE = 57858
const CURDATE = 57859
const CURTIME = 57860
const DATE_ADD = 57861
const DATE_SUB = 57862
const EXTRACT = 57863
const GROUP_CONCAT = 57864
const MAX = 57865
const MID = 57866
const MIN = 57867
const NOW = 57868
const POSITION = 57869
const SESSION_USER = 57870
const STD = 57871
const STDDEV = 57872
const MEDIAN = 57873
const STDDEV_POP = 57874
const STDDEV_SAMP = 57875
const SUBDATE = 57876
const SUBSTR = 57877
const SUBSTRING = 57878
const SUM = 57879
const SYSDATE = 57880
const SYSTEM_USER = 57881
const TRANSLATE = 57882
const TRIM = 57883
const VARIANCE = 57884
const VAR_POP = 57885
const VAR_SAMP = 57886
const AVG = 57887
const RANK = 57888
const ROW_NUMBER = 57889
const DENSE_RANK = 57890
const NEXTVAL = 57891
const SETVAL = 57892
const CURRVAL = 57893
const LASTVAL = 57894
const ARROW = 57895
const ROW = 57896
const OUTFILE = 57897
const HEADER = 57898
const MAX_FILE_SIZE = 57899
const FORCE_QUOTE = 57900
const PARALLEL = 57901
const UNUSED = 57902
const BINDINGS = 57903
const DO = 57904
const DECLARE = 57905
const LOOP = 57906
const WHILE = 57907
const LEAVE = 57908
const ITERATE = 57909
const UNTIL = 57910
const CALL = 57911
const SPBEGIN = 57912
const BACKEND = 57913
const SERVERS = 57914
const KILL = 57915
const QUERY_RESULT = 57916

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'{'",
	"'}'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10296

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 114,
	21, 694,
	-2, 675,
	-1, 129,
	233, 1026,
	235, 950,
	-2, 990,
	-1, 152,
	42, 514,
	235, 514,
	262, 521,
	263, 521,
	451, 514,
	-2, 547,
	-1, 188,
	593, 1732,
	-2, 430,
	-1, 518,
	314, 130,
	425, 130,
	-2, 1644,
	-1, 581,
	81, 1442,
	-2, 1786,
	-1, 582,
	81, 1460,
	-2, 1757,
	-1, 586,
	81, 1461,
	-2, 1785,
	-1, 612,
	81, 1372,
	-2, 1852,
	-1, 613,
	81, 1373,
	-2, 1851,
	-1, 614,
	81, 1374,
	-2, 1841,
	-1, 615,
	81, 1815,
	-2, 1836,
	-1, 616,
	81, 1816,
	-2, 1837,
	-1, 617,
	81, 1817,
	-2, 1843,
	-1, 618,
	81, 1818,
	-2, 1825,
	-1, 619,
	81, 1819,
	-2, 1834,
	-1, 620,
	81, 1820,
	-2, 1844,
	-1, 621,
	81, 1821,
	-2, 1845,
	-1, 622,
	81, 1822,
	-2, 1850,
	-1, 623,
	81, 1823,
	-2, 1855,
	-1, 624,
	81, 1824,
	-2, 1856,
	-1, 626,
	81, 1439,
	-2, 1633,
	-1, 630,
	81, 1444,
	-2, 1645,
	-1, 633,
	81, 1448,
	-2, 1663,
	-1, 637,
	81, 1452,
	-2, 1703,
	-1, 638,
	81, 1453,
	-2, 1781,
	-1, 646,
	81, 1463,
	-2, 1766,
	-1, 647,
	81, 1464,
	-2, 1810,
	-1, 648,
	81, 1465,
	-2, 1776,
	-1, 649,
	81, 1466,
	-2, 1800,
	-1, 660,
	81, 1350,
	-2, 1846,
	-1, 661,
	81, 1351,
	-2, 1847,
	-1, 662,
	81, 1352,
	-2, 1848,
	-1, 666,
	21, 695,
	-2, 658,
	-1, 745,
	446, 547,
	447, 547,
	-2, 515,
	-1, 789,
	122, 1633,
	133, 1633,
	153, 1633,
	-2, 1608,
	-1, 893,
	21, 695,
	-2, 658,
	-1, 993,
	21, 694,
	-2, 1248,
	-1, 1108,
	513, 991,
	514, 991,
	-2, 868,
	-1, 1362,
	81, 1510,
	-2, 1783,
	-1, 1363,
	81, 1511,
	-2, 1784,
	-1, 1499,
	82, 840,
	-2, 846,
	-1, 1878,
	82, 1594,
	154, 1594,
	-2, 1768,
	-1, 1879,
	82, 1594,
	154, 1594,
	-2, 1767,
	-1, 1880,
	82, 1572,
	154, 1572,
	-2, 1754,
	-1, 1881,
	82, 1573,
	154, 1573,
	-2, 1759,
	-1, 1882,
	82, 1574,
	154, 1574,
	-2, 1691,
	-1, 1883,
	82, 1575,
	154, 1575,
	-2, 1685,
	-1, 1884,
	82, 1576,
	154, 1576,
	-2, 1624,
	-1, 1885,
	82, 1577,
	154, 1577,
	-2, 1756,
	-1, 1886,
	82, 1578,
	154, 1578,
	-2, 1689,
	-1, 1887,
	82, 1579,
	154, 1579,
	-2, 1684,
	-1, 1888,
	82, 1580,
	154, 1580,
	-2, 1677,
	-1, 1890,
	82, 1583,
	154, 1583,
	-2, 1800,
	-1, 1891,
	82, 1563,
	154, 1563,
	-2, 1786,
	-1, 1892,
	82, 1592,
	154, 1592,
	-2, 1757,
	-1, 1893,
	82, 1592,
	154, 1592,
	-2, 1785,
	-1, 1894,
	82, 1592,
	154, 1592,
	-2, 1646,
	-1, 1895,
	82, 1590,
	154, 1590,
	-2, 1776,
	-1, 1896,
	82, 1587,
	154, 1587,
	-2, 1668,
	-1, 1897,
	81, 1544,
	82, 1544,
	154, 1544,
	383, 1544,
	384, 1544,
	385, 1544,
	-2, 1623,
	-1, 1898,
	81, 1545,
	82, 1545,
	154, 1545,
	383, 1545,
	384, 1545,
	385, 1545,
	-2, 1625,
	-1, 1899,
	81, 1548,
	82, 1548,
	154, 1548,
	383, 1548,
	384, 1548,
	385, 1548,
	-2, 1758,
	-1, 1900,
	81, 1550,
	82, 1550,
	154, 1550,
	383, 1550,
	384, 1550,
	385, 1550,
	-2, 1741,
	-1, 1901,
	81, 1552,
	82, 1552,
	154, 1552,
	383, 1552,
	384, 1552,
	385, 1552,
	-2, 1690,
	-1, 1902,
	81, 1554,
	82, 1554,
	154, 1554,
	383, 1554,
	384, 1554,
	385, 1554,
	-2, 1673,
	-1, 1903,
	81, 1555,
	82, 1555,
	154, 1555,
	383, 1555,
	384, 1555,
	385, 1555,
	-2, 1674,
	-1, 1904,
	81, 1557,
	82, 1557,
	154, 1557,
	383, 1557,
	384, 1557,
	385, 1557,
	-2, 1622,
	-1, 1905,
	82, 1597,
	154, 1597,
	383, 1597,
	384, 1597,
	385, 1597,
	-2, 1651,
	-1, 1906,
	82, 1597,
	154, 1597,
	383, 1597,
	384, 1597,
	385, 1597,
	-2, 1664,
	-1, 1907,
	82, 1600,
	154, 1600,
	383, 1600,
	384, 1600,
	385, 1600,
	-2, 1647,
	-1, 1908,
	82, 1600,
	154, 1600,
	383, 1600,
	384, 1600,
	385, 1600,
	-2, 1706,
	-1, 1909,
	82, 1597,
	154, 1597,
	383, 1597,
	384, 1597,
	385, 1597,
	-2, 1726,
	-1, 1925,
	105, 985,
	149, 985,
	188, 985,
	191, 985,
	275, 985,
	-2, 978,
	-1, 2063,
	21, 694,
	-2, 788,
	-1, 2258,
	105, 985,
	149, 985,
	188, 985,
	191, 985,
	275, 985,
	-2, 979,
	-1, 2274,
	79, 604,
	154, 604,
	-2, 1135,
	-1, 2606,
	191, 985,
	299, 1216,
	-2, 1188,
	-1, 2746,
	105, 985,
	149, 985,
	188, 985,
	191, 985,
	-2, 1078,
	-1, 2748,
	105, 985,
	149, 985,
	188, 985,
	191, 985,
	-2, 1078,
	-1, 2758,
	79, 604,
	154, 604,
	-2, 1136,
	-1, 2766,
	191, 985,
	299, 1216,
	-2, 1189,
	-1, 2893,
	105, 985,
	149, 985,
	188, 985,
	191, 985,
	-2, 1079,
	-1, 3255,
	82, 1044,
	154, 1044,
	-2, 985,
	-1, 3259,
	82, 1044,
	154, 1044,
	-2, 985,
	-1, 3273,
	82, 1048,
	154, 1048,
	-2, 985,
	-1, 3278,
	82, 1049,
	154, 1049,
	-2, 985,
}

const yyPrivate = 57344

const yyLast = 38037

var yyAct = [...]int{
	548, 1281, 1579, 3258, 3259, 3238, 179, 3267, 1343, 527,
	3130, 529, 550, 3191, 3156, 3209, 3138, 2624, 3139, 537,
	2841, 3050, 2933, 2780, 1856, 3064, 1025, 3042, 2877, 1339,
	1143, 2846, 2687, 3068, 2876, 2968, 2874, 2688, 578, 435,
	3003, 788, 667, 2844, 2263, 2742, 1533, 2958, 3051, 441,
	2729, 446, 446, 1202, 3053, 1965, 1271, 446, 462, 471,
	2892, 531, 471, 1346, 2881, 2767, 2574, 2715, 2836, 2277,
	2390, 2391, 2562, 164, 2895, 2718, 2373, 1668, 2313, 2621,
	2383, 1876, 2603, 2685, 2572, 1665, 2610, 2389, 2156, 482,
	2673, 1762, 2412, 1731, 2656, 2386, 2546, 1968, 2057, 2543,
	2249, 476, 2575, 2541, 2293, 2609, 2259, 1633, 887, 2041,
	1936, 520, 1874, 521, 1195, 1267, 1866, 54, 2449, 526,
	1995, 2155, 1680, 1481, 2488, 1740, 1758, 1739, 1535, 1732,
	1661, 2105, 721, 2432, 1757, 1705, 794, 1262, 1636, 2058,
	2238, 2046, 1562, 1634, 2233, 2295, 1966, 1116, 1509, 1571,
	1935, 1272, 175, 8, 174, 7, 435, 6, 1275, 2122,
	841, 1790, 1489, 1759, 530, 1236, 1337, 1093, 782, 2085,
	1181, 1872, 1961, 1211, 1544, 1916, 36, 2577, 113, 179,
	2576, 179, 1342, 832, 833, 440, 1545, 2198, 1280, 1769,
	519, 35, 521, 1392, 752, 1376, 538, 1132, 1328, 2199,
	458, 792, 1738, 26, 904, 1735, 528, 434, 1721, 15,
	1243, 13, 1118, 1695, 14, 1064, 1336, 781, 32, 2065,
	1180, 1508, 455, 1128, 720, 1398, 1151, 1397, 664, 1178,
	484, 485, 23, 165, 468, 16, 10, 1144, 698, 1088,
	158, 470, 1235, 718, 161, 1766, 702, 2732, 2993, 2482,
	2482, 666, 828, 1776, 830, 2158, 2680, 2111, 1641, 2109,
	1246, 467, 829, 2108, 1250, 2106, 824, 463, 740, 465,
	825, 825, 466, 825, 163, 2770, 464, 798, 442, 1026,
	1164, 1248, 962, 963, 964, 961, 962, 963, 964, 961,
	2834, 2445, 2443, 1710, 2964, 451, 2959, 2837, 2686, 1485,
	1020, 3055, 1734, 474, 665, 162, 50, 154, 130, 445,
	445, 2003, 162, 2782, 162, 453, 8, 162, 7, 675,
	2262, 823, 1152, 2264, 162, 162, 2773, 2863, 162, 3121,
	1295, 162, 162, 50, 154, 130, 2768, 1080, 795, 925,
	2716, 2790, 2791, 1288, 3014, 2151, 2143, 2769, 2858, 3086,
	1763, 797, 1103, 1102, 1517, 480, 2511, 1774, 1503, 1108,
	1292, 940, 112, 1920, 941, 162, 50, 154, 130, 481,
	2083, 522, 2464, 1285, 159, 959, 2457, 1418, 2084, 112,
	1313, 1294, 1160, 159, 2774, 1161, 159, 1329, 3015, 2861,
	1333, 1081, 943, 159, 1287, 2419, 2420, 159, 1678, 2418,
	159, 159, 655, 1645, 654, 656, 657, 2071, 658, 659,
	2070, 1646, 1647, 2072, 1332, 1493, 1494, 3174, 1182, 676,
	1184, 2235, 668, 1147, 2123, 1140, 1558, 1146, 1149, 1150,
	3172, 2236, 761, 933, 159, 1345, 935, 1149, 1150, 3142,
	3143, 952, 957, 791, 2854, 446, 790, 3058, 3117, 3057,
	3116, 3056, 3115, 3058, 813, 446, 897, 3057, 3056, 1847,
	3160, 3161, 2689, 2966, 936, 2450, 3044, 938, 3044, 3047,
	2962, 1163, 770, 471, 471, 2789, 446, 1969, 2234, 2969,
	2970, 2971, 2972, 2451, 3120, 2452, 2689, 1348, 2138, 898,
	907, 3061, 2329, 1334, 892, 894, 1662, 2698, 1656, 1652,
	1324, 2719, 2778, 1770, 945, 1249, 1247, 946, 2726, 2035,
	1915, 1718, 1256, 1255, 2241, 835, 1331, 2555, 129, 2224,
	160, 2557, 709, 3060, 2775, 2779, 2777, 2776, 2547, 2475,
	939, 907, 1414, 2868, 995, 948, 955, 956, 1411, 929,
	152, 2988, 1413, 1410, 1412, 1416, 1417, 2477, 826, 827,
	1415, 515, 2980, 831, 517, 2981, 891, 2792, 2148, 516,
	896, 954, 2784, 2785, 931, 3123, 3124, 2001, 2835, 920,
	2975, 928, 2552, 2553, 2444, 2853, 934, 937, 2377, 798,
	897, 793, 2855, 2991, 2042, 2038, 3141, 2037, 2554, 893,
	2551, 2865, 3167, 808, 804, 799, 803, 806, 1347, 2571,
	2804, 3011, 930, 1775, 2792, 942, 2585, 3176, 2983, 3074,
	944, 2270, 766, 2622, 2623, 765, 2771, 3069, 1138, 473,
	2382, 811, 2783, 472, 1922, 802, 1162, 1172, 3171, 3252,
	2797, 1330, 2253, 2254, 2255, 2256, 468, 468, 3268, 2982,
	795, 1029, 1676, 1677, 3200, 950, 951, 3132, 949, 3207,
	798, 2980, 1127, 797, 2981, 2934, 2935, 2936, 2938, 2937,
	900, 901, 2807, 467, 467, 2626, 1779, 1781, 1782, 463,
	463, 465, 465, 947, 466, 466, 809, 932, 464, 464,
	909, 908, 2913, 812, 1030, 2987, 1086, 441, 1089, 2992,
	2702, 2481, 1421, 1422, 1423, 1424, 1425, 1426, 1419, 1420,
	800, 771, 2549, 889, 2924, 1764, 1061, 2983, 3232, 917,
	911, 795, 1764, 895, 913, 914, 1764, 1125, 767, 2012,
	721, 909, 908, 810, 797, 711, 2011, 712, 2247, 825,
	825, 3269, 825, 825, 916, 1191, 1001, 825, 2982, 825,
	997, 998, 999, 1000, 469, 3128, 3129, 3275, 3132, 1190,
	2788, 2032, 2033, 2107, 918, 3012, 1765, 1251, 3122, 2264,
	1777, 1124, 3212, 801, 1142, 1141, 1123, 446, 3013, 1174,
	1145, 3239, 1148, 902, 2087, 435, 435, 469, 1092, 3004,
	888, 769, 1149, 1150, 435, 435, 2528, 2919, 1206, 1206,
	665, 446, 3263, 2750, 1791, 1149, 1150, 1981, 1964, 2414,
	2416, 2832, 1094, 2862, 51, 480, 1971, 3041, 2787, 1179,
	471, 1089, 441, 131, 2240, 1239, 1239, 1204, 1204, 2618,
	131, 1663, 131, 1213, 2558, 131, 179, 2864, 2357, 2548,
	3177, 2144, 131, 131, 1139, 435, 131, 51, 807, 131,
	131, 925, 1208, 1432, 2989, 2152, 1354, 1357, 1358, 919,
	2478, 2976, 2075, 2625, 1999, 2977, 768, 1355, 1095, 1096,
	1097, 1098, 1099, 2330, 1101, 2331, 2332, 1038, 1039, 1107,
	2244, 2245, 1087, 131, 793, 805, 1767, 2480, 1655, 1653,
	1325, 1100, 1974, 1106, 1279, 2243, 1282, 2622, 2623, 2869,
	1105, 1290, 1104, 2550, 475, 965, 2536, 1257, 3213, 1778,
	1200, 1201, 1780, 1984, 994, 1066, 1090, 2619, 2926, 1964,
	1986, 1311, 1003, 1068, 2429, 2430, 2327, 1113, 3262, 681,
	2223, 3274, 1860, 1296, 924, 1206, 2915, 1206, 897, 1084,
	2914, 1134, 1135, 666, 1009, 1091, 1121, 816, 821, 822,
	1970, 1126, 1496, 1186, 1188, 1972, 2490, 2489, 1136, 1497,
	2976, 1859, 1198, 1199, 3052, 1173, 1154, 1155, 1495, 1157,
	1158, 1159, 2415, 1115, 715, 716, 717, 1985, 2348, 2349,
	680, 1306, 1307, 710, 683, 682, 1269, 1270, 1165, 1166,
	1260, 677, 1263, 1264, 2024, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1231, 762, 1973,
	1980, 1387, 1388, 1252, 1978, 798, 678, 1396, 1189, 798,
	1975, 1153, 1862, 1861, 1156, 2920, 2921, 1435, 1436, 1437,
	2900, 1445, 1082, 1083, 3215, 1170, 3210, 3211, 3281, 960,
	1451, 1274, 1344, 1452, 1278, 2653, 1918, 1536, 1214, 451,
	1277, 3280, 2569, 1224, 925, 1454, 1461, 1462, 3271, 1212,
	1230, 1229, 2275, 1341, 1129, 1133, 1133, 1133, 1240, 1241,
	3236, 762, 1869, 1310, 1286, 2590, 669, 3253, 1293, 1971,
	1974, 1309, 2358, 2360, 2361, 2362, 2359, 1129, 1129, 468,
	1322, 764, 1356, 3248, 763, 1870, 1871, 1359, 1822, 1320,
	2347, 1821, 1479, 3242, 446, 2055, 1507, 1206, 1511, 1512,
	960, 1514, 1515, 1302, 2620, 1998, 467, 1338, 446, 1297,
	669, 1206, 463, 960, 465, 721, 1319, 466, 1534, 3241,
	3272, 464, 1316, 1206, 1315, 818, 819, 820, 2125, 1174,
	666, 1536, 1298, 2649, 462, 962, 963, 964, 961, 1772,
	2276, 1482, 1326, 3219, 764, 1318, 1444, 763, 1317, 1314,
	1917, 2739, 1850, 1557, 1335, 3249, 1698, 1340, 3193, 3150,
	3144, 1563, 1563, 960, 1174, 1772, 1174, 1174, 2570, 3096,
	446, 3035, 1507, 1507, 2056, 3034, 1206, 1630, 1631, 1643,
	922, 2509, 1801, 1506, 1378, 2143, 1238, 1238, 1561, 1513,
	2276, 1772, 3030, 435, 2628, 1206, 1385, 1386, 1975, 1427,
	1428, 2056, 1431, 1970, 1964, 1969, 3029, 1967, 1972, 960,
	1446, 962, 963, 964, 961, 1772, 2229, 2226, 923, 2056,
	446, 1507, 1206, 1453, 1685, 1455, 446, 446, 1689, 1690,
	3194, 3151, 2996, 2130, 1693, 1694, 2087, 3028, 3027, 1700,
	1430, 2996, 1763, 3036, 2995, 1581, 179, 1940, 2887, 179,
	179, 1130, 179, 1062, 1644, 1959, 923, 1800, 1502, 1625,
	1626, 1327, 1973, 1855, 2996, 1550, 1456, 1826, 2653, 1754,
	1516, 2811, 1518, 1519, 1520, 1674, 1114, 1390, 2996, 1510,
	1556, 1657, 1486, 1559, 1560, 2637, 1671, 1672, 1445, 1445,
	1742, 1480, 2409, 1526, 1696, 1445, 1445, 2205, 1192, 2197,
	1749, 1649, 3195, 1651, 1564, 1539, 2159, 2141, 1682, 2996,
	2996, 2761, 1684, 1669, 1670, 713, 2996, 2591, 2134, 1709,
	2888, 1664, 1712, 1713, 1534, 1715, 1537, 1538, 1206, 1761,
	1565, 2132, 1349, 1350, 1351, 1352, 1353, 1542, 1543, 1531,
	1567, 1568, 1530, 2087, 1854, 2434, 1555, 1541, 1687, 1688,
	1566, 2278, 1504, 2146, 1552, 1553, 1547, 2638, 1510, 1546,
	2145, 1548, 1549, 2725, 2056, 2127, 1521, 1131, 2120, 960,
	1755, 960, 2118, 2116, 1554, 2114, 1394, 1395, 960, 1940,
	1939, 1784, 2137, 1429, 1851, 1832, 1743, 2175, 890, 2947,
	2128, 1439, 1831, 1788, 1789, 1820, 1956, 1629, 1632, 925,
	1811, 1817, 1810, 2133, 1338, 798, 1648, 1802, 1650, 1809,
	1658, 1771, 798, 1737, 1753, 882, 878, 879, 880, 881,
	1737, 2180, 1303, 2179, 2178, 2176, 1703, 1501, 1569, 1679,
	962, 963, 964, 961, 2067, 1483, 2809, 2128, 1683, 1487,
	2121, 1299, 1490, 1673, 2119, 2115, 1129, 2115, 1006, 910,
	890, 3075, 1940, 1706, 1704, 2595, 1850, 960, 885, 1827,
	1551, 1829, 883, 977, 960, 2472, 795, 960, 1836, 1194,
	772, 1133, 960, 795, 960, 1723, 1853, 1130, 1681, 797,
	468, 960, 2901, 1772, 1681, 1681, 797, 2177, 980, 981,
	982, 983, 984, 977, 1304, 3076, 2753, 798, 1746, 520,
	1744, 897, 1910, 446, 1751, 2751, 890, 467, 1707, 1752,
	3228, 3216, 1747, 463, 1748, 465, 1196, 446, 466, 446,
	446, 446, 464, 1996, 2586, 1756, 2902, 1197, 1434, 1433,
	2994, 1937, 978, 979, 980, 981, 982, 983, 984, 977,
	2754, 1944, 1174, 1434, 1433, 1384, 1119, 2917, 1792, 2752,
	1120, 2916, 1949, 962, 963, 964, 961, 1783, 795, 2731,
	2654, 1381, 1383, 1380, 2681, 1382, 1174, 1483, 1193, 2647,
	2642, 797, 1483, 1483, 2639, 2564, 1785, 1378, 2483, 1991,
	2379, 2251, 2131, 551, 561, 1796, 2077, 1110, 1786, 1787,
	1109, 2106, 552, 1131, 560, 553, 557, 556, 554, 555,
	2587, 899, 2678, 2166, 2100, 1877, 985, 986, 978, 979,
	980, 981, 982, 983, 984, 977, 1708, 1393, 2436, 1711,
	2181, 2182, 1714, 1997, 3114, 1716, 976, 975, 985, 986,
	978, 979, 980, 981, 982, 983, 984, 977, 1467, 2060,
	2060, 1643, 2060, 679, 2588, 1824, 1505, 558, 962, 963,
	964, 961, 1912, 1460, 962, 963, 964, 961, 961, 2110,
	435, 435, 2929, 2679, 962, 963, 964, 961, 897, 964,
	961, 1946, 1947, 2168, 1206, 446, 1846, 1848, 1849, 559,
	2928, 1950, 1951, 2453, 1393, 1928, 1797, 446, 1244, 1863,
	1707, 2319, 897, 441, 2318, 2301, 2299, 1239, 2908, 1643,
	1919, 3257, 2095, 2081, 2097, 2871, 2872, 2002, 179, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 1945, 1958, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 1029,
	2025, 2026, 2027, 2028, 2029, 2073, 2030, 2074, 2062, 3245,
	2066, 3201, 962, 963, 964, 961, 1976, 1977, 2064, 1982,
	1963, 2102, 1957, 1962, 2139, 2078, 2079, 1761, 798, 1955,
	3231, 1911, 1794, 684, 1206, 1798, 1206, 1952, 1206, 2866,
	1008, 2723, 1030, 897, 3196, 1927, 3134, 1929, 1930, 1931,
	2502, 2101, 1953, 1007, 3105, 1954, 968, 969, 970, 971,
	972, 973, 974, 966, 1449, 2149, 1877, 1799, 962, 963,
	964, 961, 1206, 2184, 1808, 2039, 2094, 1245, 1450, 2089,
	1948, 2190, 1815, 3077, 3020, 2068, 2250, 1813, 2191, 795,
	3016, 3230, 2960, 1206, 2092, 2867, 2369, 2724, 1186, 1188,
	1828, 1204, 797, 2099, 2193, 1833, 1834, 1835, 2904, 2501,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 2082, 2903,
	1857, 1858, 1204, 2730, 2755, 2183, 962, 963, 964, 961,
	2367, 2722, 2093, 2090, 1244, 962, 963, 964, 961, 897,
	2195, 962, 963, 964, 961, 2365, 2192, 2153, 2091, 2556,
	2354, 2170, 2368, 1812, 1133, 1457, 1458, 1459, 2468, 2448,
	1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 2150, 962, 963, 964, 961, 2447, 1941, 962,
	963, 964, 961, 2164, 2352, 2351, 2366, 2136, 1206, 2140,
	2142, 2248, 962, 963, 964, 961, 3135, 1507, 2216, 446,
	2147, 2364, 2350, 1212, 1805, 2274, 2353, 3067, 2342, 2336,
	2384, 2280, 2335, 2334, 2333, 1681, 1338, 1726, 2160, 2161,
	1725, 3083, 962, 963, 964, 961, 1724, 2289, 1720, 2230,
	1719, 2174, 897, 962, 963, 964, 961, 1300, 2848, 1079,
	2298, 2542, 3166, 2227, 2842, 2847, 3162, 897, 897, 897,
	1563, 3118, 3063, 897, 3270, 2309, 2310, 2311, 897, 2875,
	2315, 2316, 3039, 2317, 962, 963, 964, 961, 2163, 3024,
	2260, 962, 963, 964, 961, 962, 963, 964, 961, 1269,
	1270, 3019, 2217, 3018, 2261, 2271, 2060, 1264, 2220, 2200,
	2201, 1483, 2990, 1483, 2801, 2206, 962, 963, 964, 961,
	2370, 2961, 515, 2281, 1581, 517, 2237, 2910, 435, 2884,
	516, 1483, 1483, 1507, 897, 1643, 1643, 1643, 1643, 2870,
	962, 963, 964, 961, 2840, 2838, 897, 1643, 1274, 2231,
	2060, 1278, 2818, 2815, 2292, 2296, 2246, 1277, 1238, 2296,
	2813, 2374, 2721, 2720, 2717, 2707, 1206, 2283, 2704, 2303,
	2701, 2285, 2304, 2305, 2157, 2273, 2648, 2308, 446, 446,
	2644, 8, 2314, 7, 2635, 2634, 2279, 2565, 2533, 2532,
	1510, 2479, 2446, 179, 962, 963, 964, 961, 179, 2291,
	2423, 2363, 2294, 2505, 2355, 2345, 2343, 2300, 2325, 2326,
	2339, 2338, 2307, 2504, 2337, 1852, 2405, 611, 610, 1445,
	1728, 1445, 2340, 2341, 2463, 2503, 2297, 1722, 2467, 962,
	963, 964, 961, 1492, 1206, 2214, 1301, 2474, 2392, 962,
	963, 964, 961, 1037, 1033, 2344, 2376, 1032, 2282, 886,
	2392, 962, 963, 964, 961, 3079, 2286, 2287, 2973, 2167,
	2891, 962, 963, 964, 961, 2748, 2437, 2185, 2186, 2375,
	2380, 2441, 2288, 2747, 2746, 2188, 2189, 2265, 2393, 2394,
	2395, 2396, 2738, 2272, 2706, 2406, 2404, 2693, 2194, 2408,
	666, 2684, 2683, 2672, 1482, 2407, 2378, 2671, 2424, 2462,
	2421, 975, 985, 986, 978, 979, 980, 981, 982, 983,
	984, 977, 1483, 2460, 2596, 2218, 2219, 1490, 2507, 2466,
	897, 2500, 2492, 2435, 2471, 2495, 2439, 2497, 2545, 2438,
	2487, 162, 2476, 154, 130, 798, 2431, 2228, 2560, 2225,
	2456, 2117, 798, 446, 2459, 2454, 2417, 2113, 2461, 2112,
	2213, 1837, 1830, 897, 2212, 1825, 1823, 897, 897, 897,
	2470, 1819, 2284, 1818, 1816, 1807, 1643, 1937, 1804, 2594,
	2484, 1803, 2485, 1727, 1478, 2598, 962, 963, 964, 961,
	962, 963, 964, 961, 2211, 2496, 2608, 2491, 2611, 1477,
	2611, 2611, 2568, 1476, 2458, 897, 2498, 2499, 1448, 2535,
	159, 2465, 1447, 2493, 2494, 1438, 1218, 1216, 3227, 2630,
	962, 963, 964, 961, 3221, 162, 1206, 1206, 3208, 2627,
	3205, 3203, 3104, 2260, 1877, 2210, 2529, 1027, 3037, 2629,
	2209, 3026, 2537, 2534, 3021, 1259, 2426, 2427, 2942, 2927,
	798, 2581, 2582, 2583, 2923, 1204, 1204, 2826, 2561, 2824,
	2799, 962, 963, 964, 961, 2567, 962, 963, 964, 961,
	2798, 2795, 446, 2794, 2733, 2606, 2580, 2545, 2579, 2631,
	2632, 2589, 2607, 2592, 2512, 2513, 2616, 2593, 1507, 1507,
	2514, 2515, 2516, 2517, 159, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2208, 1268, 2612, 2613, 2617, 798, 2540,
	2207, 2597, 1261, 1117, 2371, 2599, 2600, 2302, 2268, 2267,
	2266, 1273, 1276, 988, 1265, 992, 2215, 2126, 2076, 962,
	963, 964, 961, 2031, 1938, 2184, 962, 963, 964, 961,
	1379, 989, 991, 987, 2682, 990, 976, 975, 985, 986,
	978, 979, 980, 981, 982, 983, 984, 977, 3095, 2204,
	563, 114, 159, 1691, 1500, 1499, 114, 2602, 1323, 2614,
	1289, 1266, 1063, 1060, 1059, 1058, 2641, 2645, 2440, 2640,
	2442, 446, 2646, 2650, 2651, 962, 963, 964, 961, 1057,
	2661, 1056, 1055, 2643, 2636, 2203, 1054, 1053, 1483, 1052,
	1051, 2601, 2202, 1483, 2665, 1050, 1049, 1048, 3182, 2196,
	1047, 2566, 2668, 2669, 2670, 452, 2187, 479, 114, 2652,
	2165, 962, 963, 964, 961, 1046, 2677, 1389, 962, 963,
	964, 961, 1045, 1044, 2664, 962, 963, 964, 961, 1043,
	2486, 1042, 962, 963, 964, 961, 962, 963, 964, 961,
	1041, 2694, 1040, 962, 963, 964, 961, 1036, 2695, 2696,
	1035, 1034, 2506, 2697, 2043, 1031, 1024, 1023, 1021, 2708,
	1020, 2700, 2737, 670, 671, 672, 673, 1019, 669, 1018,
	2743, 897, 1017, 1016, 1015, 1014, 1013, 1012, 1011, 1010,
	2060, 1643, 2758, 1005, 1004, 927, 884, 2657, 2658, 3093,
	2713, 2048, 2051, 2052, 2053, 2049, 897, 2050, 2054, 3091,
	3089, 2796, 1943, 2710, 1924, 2608, 915, 3180, 2712, 897,
	796, 3140, 2660, 2252, 114, 2088, 1730, 926, 2401, 897,
	1681, 2399, 2663, 2402, 1206, 2403, 2400, 2052, 2053, 114,
	2662, 114, 2728, 2398, 2397, 3256, 2828, 2135, 2129, 1217,
	1507, 1111, 2563, 2829, 897, 1528, 1529, 798, 1523, 1524,
	1525, 443, 2793, 1204, 2760, 2745, 2048, 2051, 2052, 2053,
	2049, 99, 2050, 2054, 2615, 2222, 53, 2831, 2530, 2531,
	179, 2786, 2604, 52, 2605, 2000, 2806, 2810, 2756, 2734,
	2735, 2736, 1617, 897, 2538, 2820, 798, 2321, 2757, 2805,
	2802, 2800, 2827, 1253, 2322, 2323, 2324, 2808, 2124, 2154,
	2764, 2856, 1065, 447, 1283, 2812, 2714, 2814, 1913, 2817,
	1692, 2759, 921, 2803, 3059, 2821, 448, 2762, 2578, 2816,
	2763, 449, 2822, 2314, 897, 1206, 1206, 2819, 450, 2699,
	897, 1857, 1858, 2539, 2290, 2232, 1933, 1532, 1498, 2894,
	3153, 2894, 3023, 2833, 2633, 2740, 1434, 1433, 2392, 1077,
	1078, 1075, 1076, 2843, 1204, 2882, 1073, 1074, 1071, 1072,
	2040, 2036, 1628, 1168, 1167, 1206, 953, 2667, 2086, 2857,
	2909, 1750, 2859, 2885, 1122, 1067, 3222, 3126, 2880, 3111,
	3109, 3070, 3049, 446, 3048, 897, 897, 2392, 3046, 897,
	897, 3038, 2955, 2954, 2882, 2839, 2886, 2709, 2691, 2898,
	2690, 2897, 2675, 1987, 2945, 1070, 2674, 2433, 1536, 2944,
	2939, 2469, 2793, 3184, 3183, 1534, 1926, 2952, 2760, 2931,
	2932, 1806, 2907, 2940, 2941, 2956, 2957, 912, 2878, 2911,
	3183, 2786, 670, 671, 672, 673, 3184, 669, 2925, 2692,
	669, 2949, 2425, 166, 3, 3246, 1137, 61, 2, 2986,
	1183, 2069, 1675, 1210, 2889, 2890, 1, 1491, 2948, 674,
	2410, 2950, 2979, 2411, 2703, 2666, 2413, 1768, 2381, 2034,
	1914, 2705, 2559, 1112, 714, 2905, 2906, 1440, 1308, 2743,
	815, 906, 1305, 905, 2849, 903, 3006, 1391, 565, 2878,
	2878, 2974, 1733, 2878, 2878, 2984, 2372, 2978, 976, 975,
	985, 986, 978, 979, 980, 981, 982, 983, 984, 977,
	114, 114, 796, 2346, 2951, 3225, 3152, 3190, 3103, 3155,
	2946, 1321, 549, 3040, 2999, 2997, 3002, 3007, 2965, 3009,
	3107, 3008, 2967, 897, 2845, 1773, 958, 1206, 3017, 2455,
	736, 3000, 3001, 602, 576, 1022, 1291, 1284, 2510, 817,
	575, 2727, 2242, 2428, 3022, 3010, 814, 737, 1717, 2963,
	1254, 1258, 2899, 2749, 2584, 2269, 1204, 3031, 976, 975,
	985, 986, 978, 979, 980, 981, 982, 983, 984, 977,
	3266, 3255, 3237, 993, 3220, 3054, 3131, 897, 3251, 3170,
	3032, 3206, 2852, 3045, 3043, 2850, 2851, 3199, 3071, 3127,
	486, 1654, 433, 779, 2943, 1483, 1729, 487, 1942, 3119,
	3025, 695, 3066, 1923, 696, 3065, 1483, 897, 697, 2823,
	3062, 2258, 2825, 2257, 1206, 1360, 967, 3098, 3101, 1377,
	2526, 2527, 1002, 3073, 525, 1795, 2830, 2878, 3078, 3081,
	2239, 2930, 2781, 3088, 3090, 3092, 3094, 2422, 60, 3102,
	59, 3087, 58, 1204, 57, 1699, 187, 3110, 3033, 3112,
	3113, 3108, 567, 1206, 186, 3106, 2873, 3100, 3157, 547,
	546, 545, 544, 3136, 543, 2047, 2045, 3097, 2044, 1638,
	1637, 1697, 3125, 2312, 2306, 1983, 1988, 1570, 3137, 3084,
	3085, 2878, 1204, 2922, 2356, 3159, 724, 1522, 1979, 1587,
	2328, 1584, 3145, 1583, 3146, 2320, 3147, 3158, 3148, 2918,
	3149, 2912, 1614, 2741, 2893, 2765, 3133, 897, 3072, 1069,
	2766, 2878, 3163, 2772, 3054, 1932, 3164, 840, 836, 838,
	839, 837, 2173, 2169, 3082, 1960, 2573, 1868, 1867, 1865,
	1864, 1085, 3189, 3178, 2985, 2711, 3181, 3179, 1875, 1873,
	3173, 3175, 2659, 2655, 1741, 3192, 1488, 2221, 3197, 1639,
	897, 3185, 3186, 3187, 3188, 723, 1635, 1925, 3198, 2860,
	1527, 688, 3202, 1921, 3204, 762, 97, 144, 47, 88,
	87, 96, 142, 46, 171, 3159, 3218, 170, 173, 172,
	3214, 169, 2103, 2104, 897, 168, 897, 3158, 1242, 3217,
	167, 2896, 3224, 663, 3226, 37, 33, 12, 3229, 11,
	34, 21, 22, 20, 1312, 19, 25, 3192, 897, 3233,
	31, 3168, 30, 3240, 107, 106, 3244, 3247, 29, 3223,
	3250, 3165, 105, 104, 103, 102, 101, 28, 18, 41,
	40, 2998, 39, 9, 1215, 3254, 1418, 95, 3261, 452,
	93, 27, 3265, 3264, 962, 963, 964, 961, 764, 3273,
	94, 763, 3276, 91, 1344, 92, 3261, 3279, 3278, 89,
	3277, 3265, 72, 1169, 71, 1171, 114, 1175, 1176, 1177,
	70, 85, 976, 975, 985, 986, 978, 979, 980, 981,
	982, 983, 984, 977, 84, 749, 83, 82, 1344, 81,
	1344, 80, 78, 725, 79, 735, 69, 1219, 1220, 1221,
	1222, 1223, 2508, 1225, 1226, 1227, 1228, 68, 67, 66,
	1233, 1234, 1344, 65, 90, 76, 86, 77, 75, 74,
	727, 73, 64, 1418, 63, 62, 128, 126, 114, 127,
	125, 124, 114, 123, 122, 1009, 121, 120, 42, 43,
	44, 45, 138, 114, 137, 139, 141, 143, 140, 135,
	133, 136, 134, 114, 132, 976, 975, 985, 986, 978,
	979, 980, 981, 982, 983, 984, 977, 55, 17, 24,
	4, 0, 0, 3080, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 748, 747, 0, 0, 0, 0, 0,
	0, 1414, 0, 0, 0, 0, 0, 1411, 0, 0,
	746, 1413, 1410, 1412, 1416, 1417, 0, 0, 0, 1415,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 757, 2162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 0, 856,
	0, 0, 0, 0, 0, 0, 753, 0, 976, 975,
	985, 986, 978, 979, 980, 981, 982, 983, 984, 977,
	976, 975, 985, 986, 978, 979, 980, 981, 982, 983,
	984, 977, 0, 0, 0, 0, 0, 0, 1414, 0,
	0, 0, 754, 758, 1411, 0, 0, 0, 1413, 1410,
	1412, 1416, 1417, 0, 0, 0, 1415, 0, 0, 0,
	743, 0, 741, 745, 761, 0, 0, 0, 742, 739,
	738, 0, 744, 729, 730, 728, 731, 732, 733, 734,
	0, 759, 0, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 755, 756, 0, 0, 0, 0,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1421, 1422, 1423, 1424, 1425, 1426, 1419, 1420, 844,
	0, 0, 0, 0, 0, 0, 0, 0, 3235, 0,
	0, 751, 0, 0, 0, 0, 0, 0, 0, 864,
	868, 870, 872, 874, 875, 877, 0, 882, 878, 879,
	880, 881, 0, 859, 860, 861, 862, 842, 843, 865,
	0, 845, 0, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 857, 863, 0, 0, 0, 0, 1642,
	0, 0, 867, 869, 871, 873, 876, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1421, 1422,
	1423, 1424, 1425, 1426, 1419, 1420, 0, 0, 750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 858,
	976, 975, 985, 986, 978, 979, 980, 981, 982, 983,
	984, 977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 114,
	114, 0, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1686, 583, 0, 0, 0, 0, 796, 0,
	0, 0, 328, 0, 0, 796, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 539, 0, 0, 0, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 430, 0, 0,
	574, 0, 0, 357, 312, 0, 0, 0, 0, 634,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 2171, 2172, 564, 611, 610, 551, 561, 0,
	0, 251, 185, 431, 0, 432, 552, 0, 560, 553,
	557, 556, 554, 555, 0, 626, 0, 0, 0, 0,
	993, 0, 523, 536, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 533,
	534, 0, 0, 0, 0, 584, 0, 535, 0, 0,
	579, 558, 562, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 559, 582, 586, 267, 648, 580, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 649, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 866, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 0, 0, 0, 388, 0, 0, 632,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	581, 0, 348, 330, 645, 524, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 365, 366, 367, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 0, 0, 407, 0, 0, 0, 415, 420,
	421, 422, 424, 425, 426, 427, 0, 0, 0, 0,
	409, 0, 0, 0, 1442, 1441, 1443, 400, 280, 234,
	235, 439, 630, 326, 0, 0, 0, 0, 644, 625,
	627, 628, 631, 635, 636, 637, 638, 639, 641, 643,
	647, 438, 0, 0, 0, 0, 0, 437, 332, 0,
	351, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 410, 413, 0, 0,
	0, 0, 239, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 585, 0, 0, 316, 317, 318, 319, 633,
	0, 256, 411, 341, 0, 0, 0, 0, 0, 1642,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 405, 406, 279, 285, 423, 287, 255, 331, 281,
	390, 294, 0, 416, 0, 417, 0, 0, 856, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 655, 629, 654, 656,
	657, 653, 658, 659, 640, 542, 0, 589, 651, 650,
	652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 233, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 618, 595, 596, 597, 541,
	598, 592, 593, 594, 619, 587, 615, 616, 566, 590,
	599, 614, 600, 617, 620, 621, 660, 661, 606, 662,
	603, 622, 613, 612, 601, 588, 623, 624, 573, 568,
	604, 605, 591, 607, 608, 609, 569, 570, 571, 572,
	0, 0, 0, 396, 397, 398, 419, 382, 844, 436,
	0, 0, 834, 0, 0, 856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 864, 868,
	870, 872, 874, 875, 877, 0, 882, 878, 879, 880,
	881, 0, 859, 860, 861, 862, 842, 843, 865, 0,
	845, 0, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 857, 863, 0, 0, 0, 0, 0, 0,
	0, 867, 869, 871, 873, 876, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 496, 503, 493, 0, 0, 0, 0, 114,
	0, 0, 0, 500, 501, 0, 502, 506, 858, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 864, 868, 870, 872, 874,
	875, 877, 0, 882, 878, 879, 880, 881, 0, 859,
	860, 861, 862, 842, 843, 865, 0, 845, 0, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 857,
	863, 0, 0, 0, 0, 0, 0, 0, 867, 869,
	871, 873, 876, 0, 0, 1642, 1642, 1642, 1642, 0,
	0, 0, 0, 0, 0, 0, 0, 1642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 491, 490, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 514, 0, 0, 0, 0, 0, 583,
	492, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 539, 0, 0, 0, 273, 1484, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 866, 0, 0, 0,
	0, 429, 0, 430, 0, 0, 574, 0, 0, 357,
	312, 0, 0, 114, 0, 634, 642, 0, 0, 0,
	0, 0, 0, 0, 1666, 0, 0, 532, 0, 0,
	564, 611, 610, 551, 561, 0, 0, 251, 185, 431,
	0, 432, 552, 0, 560, 553, 557, 556, 554, 555,
	0, 626, 0, 0, 0, 0, 1642, 0, 523, 536,
	0, 540, 0, 0, 494, 498, 504, 0, 505, 507,
	0, 114, 508, 509, 510, 0, 0, 512, 513, 0,
	0, 0, 0, 0, 0, 533, 534, 0, 0, 0,
	0, 584, 0, 535, 0, 0, 1667, 558, 562, 0,
	0, 0, 0, 242, 362, 378, 252, 353, 391, 257,
	360, 247, 327, 350, 0, 0, 244, 376, 359, 309,
	292, 293, 243, 866, 345, 271, 284, 268, 325, 559,
	582, 586, 267, 648, 580, 386, 246, 0, 385, 324,
	372, 377, 310, 304, 245, 374, 308, 303, 296, 275,
	649, 288, 336, 302, 337, 289, 314, 313, 315, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 577, 0,
	0, 0, 388, 0, 0, 632, 0, 0, 0, 361,
	0, 0, 297, 0, 0, 0, 581, 0, 348, 330,
	645, 524, 0, 346, 300, 373, 338, 379, 363, 387,
	342, 339, 237, 364, 270, 311, 248, 250, 265, 272,
	274, 276, 277, 320, 321, 333, 352, 365, 366, 367,
	269, 258, 347, 259, 286, 260, 238, 262, 261, 263,
	354, 264, 240, 334, 371, 0, 282, 343, 307, 241,
	306, 335, 370, 369, 249, 395, 401, 402, 0, 0,
	407, 0, 0, 0, 415, 420, 421, 422, 424, 425,
	426, 427, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 400, 280, 234, 235, 439, 630, 326,
	0, 0, 0, 0, 644, 625, 627, 628, 631, 635,
	636, 637, 638, 639, 641, 643, 647, 438, 0, 0,
	0, 0, 0, 437, 332, 0, 351, 0, 0, 0,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 410, 413, 0, 0, 0, 0, 239, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 585, 114,
	0, 316, 317, 318, 319, 633, 0, 256, 411, 341,
	0, 1642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 423, 287, 255, 331, 281, 390, 294, 0, 416,
	0, 417, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 655, 629, 654, 656, 657, 653, 658, 659,
	640, 542, 0, 589, 651, 650, 652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	114, 233, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 618, 595, 596, 597, 541, 598, 592, 593, 594,
	619, 587, 615, 616, 566, 590, 599, 614, 600, 617,
	620, 621, 660, 661, 606, 662, 603, 622, 613, 612,
	601, 588, 623, 624, 573, 568, 604, 605, 591, 607,
	608, 609, 569, 570, 571, 572, 162, 583, 0, 396,
	397, 398, 419, 382, 0, 436, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 273, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	0, 430, 0, 0, 996, 0, 0, 357, 312, 0,
	0, 0, 0, 634, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 0, 0, 564, 611,
	610, 551, 561, 0, 0, 251, 185, 431, 0, 432,
	552, 0, 560, 553, 557, 556, 554, 555, 0, 626,
	0, 0, 0, 0, 0, 0, 523, 536, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 533, 534, 0, 0, 0, 0, 584,
	0, 535, 0, 0, 579, 558, 562, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 559, 582, 586,
	267, 648, 580, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 649, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 0, 0, 0,
	388, 0, 0, 632, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 581, 0, 348, 330, 645, 524,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 365, 366, 367, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 0, 0, 407, 0,
	0, 0, 415, 420, 421, 422, 424, 425, 426, 427,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 439, 630, 326, 0, 0,
	0, 0, 644, 625, 627, 628, 631, 635, 636, 637,
	638, 639, 641, 643, 647, 438, 0, 0, 0, 0,
	0, 437, 332, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 381, 393,
	410, 413, 0, 0, 0, 0, 239, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 585, 0, 0, 316,
	317, 318, 319, 633, 0, 256, 411, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 279, 285, 423,
	287, 255, 331, 281, 390, 294, 0, 416, 0, 417,
	0, 0, 0, 0, 323, 290, 291, 355, 295, 301,
	344, 389, 329, 349, 253, 380, 356, 305, 0, 0,
	655, 629, 654, 656, 657, 653, 658, 659, 640, 542,
	0, 589, 651, 650, 652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 233,
	0, 236, 0, 299, 131, 340, 278, 0, 0, 618,
	595, 596, 597, 541, 598, 592, 593, 594, 619, 587,
	615, 616, 566, 590, 599, 614, 600, 617, 620, 621,
	660, 661, 606, 662, 603, 622, 613, 612, 601, 588,
	623, 624, 573, 568, 604, 605, 591, 607, 608, 609,
	569, 570, 571, 572, 0, 583, 0, 396, 397, 398,
	419, 382, 0, 436, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 273, 3234, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 574, 0, 0, 357, 312, 0, 0, 0,
	0, 634, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 0, 0, 564, 611, 610, 551,
	561, 0, 0, 251, 185, 431, 0, 432, 552, 0,
	560, 553, 557, 556, 554, 555, 0, 626, 0, 0,
	0, 0, 0, 0, 523, 536, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 0, 584, 0, 535,
	0, 0, 579, 558, 562, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 559, 582, 586, 267, 648,
	580, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 649, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 0, 0, 0, 388, 0,
	0, 632, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 581, 0, 348, 330, 645, 524, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 630, 326, 0, 0, 0, 0,
	644, 625, 627, 628, 631, 635, 636, 637, 638, 639,
	641, 643, 647, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 585, 0, 0, 316, 317, 318,
	319, 633, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 655, 629,
	654, 656, 657, 653, 658, 659, 640, 542, 0, 589,
	651, 650, 652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 618, 595, 596,
	597, 541, 598, 592, 593, 594, 619, 587, 615, 616,
	566, 590, 599, 614, 600, 617, 620, 621, 660, 661,
	606, 662, 603, 622, 613, 612, 601, 588, 623, 624,
	573, 568, 604, 605, 591, 607, 608, 609, 569, 570,
	571, 572, 0, 583, 0, 396, 397, 398, 419, 382,
	0, 436, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 273,
	1484, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 430, 0, 0,
	574, 0, 0, 357, 312, 0, 0, 0, 0, 634,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 0, 0, 564, 611, 610, 551, 561, 0,
	0, 251, 185, 431, 0, 432, 552, 0, 560, 553,
	557, 556, 554, 555, 0, 626, 0, 0, 0, 0,
	0, 0, 523, 536, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 533,
	534, 0, 0, 0, 0, 584, 0, 535, 0, 0,
	579, 558, 562, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 559, 582, 586, 267, 648, 580, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 649, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 0, 0, 0, 388, 0, 0, 632,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	581, 0, 348, 330, 645, 524, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 365, 366, 367, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 0, 0, 407, 0, 0, 0, 415, 420,
	421, 422, 424, 425, 426, 427, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 439, 630, 326, 0, 0, 0, 0, 644, 625,
	627, 628, 631, 635, 636, 637, 638, 639, 641, 643,
	647, 438, 0, 0, 0, 0, 0, 437, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 410, 413, 0, 0,
	0, 0, 239, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 585, 0, 0, 316, 317, 318, 319, 633,
	0, 256, 411, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 423, 287, 255, 331, 281,
	390, 294, 0, 416, 0, 417, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 655, 629, 654, 656,
	657, 653, 658, 659, 640, 542, 0, 589, 651, 650,
	652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 233, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 618, 595, 596, 597, 541,
	598, 592, 593, 594, 619, 587, 615, 616, 566, 590,
	599, 614, 600, 617, 620, 621, 660, 661, 606, 662,
	603, 622, 613, 612, 601, 588, 623, 624, 573, 568,
	604, 605, 591, 607, 608, 609, 569, 570, 571, 572,
	0, 583, 0, 396, 397, 398, 419, 382, 0, 436,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 539, 0, 0, 0, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 430, 0, 0, 574, 0,
	0, 357, 312, 0, 0, 0, 0, 634, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	0, 0, 564, 611, 610, 551, 561, 0, 0, 251,
	185, 431, 0, 432, 552, 0, 560, 553, 557, 556,
	554, 555, 0, 626, 0, 0, 0, 0, 0, 0,
	523, 536, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 534, 1237,
	0, 0, 0, 584, 0, 535, 0, 0, 579, 558,
	562, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 559, 582, 586, 267, 648, 580, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 649, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 0, 0, 0, 388, 0, 0, 632, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 581, 0,
	348, 330, 645, 524, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 365,
	366, 367, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	0, 0, 407, 0, 0, 0, 415, 420, 421, 422,
	424, 425, 426, 427, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 439,
	630, 326, 0, 0, 0, 0, 644, 625, 627, 628,
	631, 635, 636, 637, 638, 639, 641, 643, 647, 438,
	0, 0, 0, 0, 0, 437, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 410, 413, 0, 0, 0, 0,
	239, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	585, 0, 0, 316, 317, 318, 319, 633, 0, 256,
	411, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 423, 287, 255, 331, 281, 390, 294,
	0, 416, 0, 417, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 655, 629, 654, 656, 657, 653,
	658, 659, 640, 542, 0, 589, 651, 650, 652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 233, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 618, 595, 596, 597, 541, 598, 592,
	593, 594, 619, 587, 615, 616, 566, 590, 599, 614,
	600, 617, 620, 621, 660, 661, 606, 662, 603, 622,
	613, 612, 601, 588, 623, 624, 573, 568, 604, 605,
	591, 607, 608, 609, 569, 570, 571, 572, 0, 0,
	0, 396, 397, 398, 419, 382, 583, 436, 0, 1814,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	430, 0, 0, 574, 0, 0, 357, 312, 0, 0,
	0, 0, 634, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 0, 0, 564, 611, 610,
	551, 561, 0, 0, 251, 185, 431, 0, 432, 552,
	0, 560, 553, 557, 556, 554, 555, 0, 626, 0,
	0, 0, 0, 0, 0, 523, 536, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 0, 584, 0,
	535, 0, 0, 579, 558, 562, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 559, 582, 586, 267,
	648, 580, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 649, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 0, 0, 0, 388,
	0, 0, 632, 0, 0, 0, 361, 0, 0, 297,
	0, 0, 0, 581, 0, 348, 330, 645, 524, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 365, 366, 367, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 0, 0, 407, 0, 0,
	0, 415, 420, 421, 422, 424, 425, 426, 427, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 439, 630, 326, 0, 0, 0,
	0, 644, 625, 627, 628, 631, 635, 636, 637, 638,
	639, 641, 643, 647, 438, 0, 0, 0, 0, 0,
	437, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 410,
	413, 0, 0, 0, 0, 239, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 585, 0, 0, 316, 317,
	318, 319, 633, 0, 256, 411, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 423, 287,
	255, 331, 281, 390, 294, 0, 416, 0, 417, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 655,
	629, 654, 656, 657, 653, 658, 659, 640, 542, 0,
	589, 651, 650, 652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 233, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 618, 595,
	596, 597, 541, 598, 592, 593, 594, 619, 587, 615,
	616, 566, 590, 599, 614, 600, 617, 620, 621, 660,
	661, 606, 662, 603, 622, 613, 612, 601, 588, 623,
	624, 573, 568, 604, 605, 591, 607, 608, 609, 569,
	570, 571, 572, 0, 583, 0, 396, 397, 398, 419,
	382, 0, 436, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 539, 0, 0, 0,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 574, 0, 0, 357, 312, 0, 0, 0, 0,
	634, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 0, 0, 564, 611, 610, 551, 561,
	0, 0, 251, 185, 431, 0, 432, 552, 0, 560,
	553, 557, 556, 554, 555, 0, 626, 0, 0, 0,
	0, 0, 0, 523, 536, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 0, 0, 0, 0, 584, 0, 535, 0,
	0, 579, 558, 562, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 559, 582, 586, 267, 648, 580,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 649, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 0, 0, 0, 388, 0, 0,
	632, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 581, 0, 348, 330, 645, 524, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 630, 326, 0, 0, 0, 0, 644,
	625, 627, 628, 631, 635, 636, 637, 638, 639, 641,
	643, 647, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 585, 0, 0, 316, 317, 318, 319,
	633, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 655, 629, 654,
	656, 657, 653, 658, 659, 640, 542, 0, 589, 651,
	650, 652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 233, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 618, 595, 596, 597,
	541, 598, 592, 593, 594, 619, 587, 615, 616, 566,
	590, 599, 614, 600, 617, 620, 621, 660, 661, 606,
	662, 603, 622, 613, 612, 601, 588, 623, 624, 573,
	568, 604, 605, 591, 607, 608, 609, 569, 570, 571,
	572, 0, 583, 0, 396, 397, 398, 419, 382, 0,
	436, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	1361, 0, 0, 0, 539, 0, 0, 0, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 430, 0, 0, 574,
	0, 0, 357, 312, 0, 0, 0, 0, 634, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 0, 0, 564, 611, 610, 551, 561, 0, 0,
	251, 185, 431, 0, 432, 552, 0, 560, 553, 557,
	556, 554, 555, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	0, 0, 0, 0, 584, 0, 535, 0, 0, 579,
	558, 562, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 559, 582, 586, 267, 648, 580, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 649, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 0, 0, 0, 388, 0, 0, 632, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 581,
	0, 348, 330, 645, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	365, 366, 367, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 1362,
	1363, 0, 0, 407, 0, 0, 0, 415, 420, 421,
	422, 424, 425, 426, 427, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	439, 630, 326, 0, 0, 0, 0, 644, 625, 627,
	628, 631, 635, 636, 637, 638, 639, 641, 643, 647,
	438, 0, 0, 0, 0, 0, 437, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 410, 413, 0, 0, 0,
	0, 239, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 585, 0, 0, 316, 317, 318, 319, 633, 0,
	256, 411, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 423, 287, 255, 331, 281, 390,
	294, 0, 416, 0, 417, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 655, 629, 654, 656, 657,
	653, 658, 659, 640, 542, 0, 589, 651, 650, 652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 233, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 618, 595, 596, 597, 541, 598,
	592, 593, 594, 619, 587, 615, 616, 566, 590, 599,
	614, 600, 617, 620, 621, 660, 661, 606, 662, 603,
	622, 613, 612, 601, 588, 623, 624, 573, 568, 604,
	605, 591, 607, 608, 609, 569, 570, 571, 572, 0,
	583, 0, 396, 397, 398, 419, 382, 0, 436, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 430, 0, 0, 574, 0, 0,
	357, 312, 0, 0, 0, 0, 634, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 611, 610, 551, 561, 0, 0, 251, 185,
	431, 0, 432, 552, 0, 560, 553, 557, 556, 554,
	555, 0, 626, 0, 0, 0, 0, 0, 0, 523,
	536, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 0, 0,
	0, 0, 584, 0, 535, 0, 0, 579, 558, 562,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	559, 582, 586, 267, 648, 580, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 649, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	0, 0, 0, 388, 0, 0, 632, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 581, 0, 348,
	330, 645, 524, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 365, 366,
	367, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 0,
	0, 407, 0, 0, 0, 415, 420, 421, 422, 424,
	425, 426, 427, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 439, 630,
	326, 0, 0, 0, 0, 644, 625, 627, 628, 631,
	635, 636, 637, 638, 639, 641, 643, 647, 438, 0,
	0, 0, 0, 0, 437, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 410, 413, 0, 0, 0, 0, 239,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 585,
	0, 0, 316, 317, 318, 319, 633, 0, 256, 411,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 423, 287, 255, 331, 281, 390, 294, 0,
	416, 0, 417, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 655, 629, 654, 656, 657, 653, 658,
	659, 640, 542, 0, 589, 651, 650, 652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 233, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 618, 595, 596, 597, 541, 598, 592, 593,
	594, 619, 587, 615, 616, 566, 590, 599, 614, 600,
	617, 620, 621, 660, 661, 606, 662, 603, 622, 613,
	612, 601, 588, 623, 624, 573, 568, 604, 605, 591,
	607, 608, 609, 569, 570, 571, 572, 0, 583, 0,
	396, 397, 398, 419, 382, 0, 436, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 0, 430, 0, 0, 574, 0, 0, 357, 312,
	0, 0, 0, 0, 634, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 0, 0, 564,
	611, 610, 551, 561, 0, 0, 251, 185, 431, 0,
	432, 552, 0, 560, 553, 557, 556, 554, 555, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 536, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 0, 0, 0, 0,
	584, 0, 535, 0, 0, 579, 558, 562, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 559, 582,
	586, 267, 648, 580, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 649,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 0, 0,
	0, 388, 0, 0, 632, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 581, 0, 348, 330, 645,
	0, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 365, 366, 367, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 0, 0, 407,
	0, 0, 0, 415, 420, 421, 422, 424, 425, 426,
	427, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 439, 630, 326, 0,
	0, 0, 0, 644, 625, 627, 628, 631, 635, 636,
	637, 638, 639, 641, 643, 647, 438, 0, 0, 0,
	0, 0, 437, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 410, 413, 0, 0, 0, 0, 239, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 585, 0, 0,
	316, 317, 318, 319, 633, 0, 256, 411, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	423, 287, 255, 331, 281, 390, 294, 0, 416, 0,
	417, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 655, 629, 654, 656, 657, 653, 658, 659, 640,
	542, 0, 589, 651, 650, 652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	233, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	618, 595, 596, 597, 541, 598, 592, 593, 594, 619,
	587, 615, 616, 566, 590, 599, 614, 600, 617, 620,
	621, 660, 661, 606, 662, 603, 622, 613, 612, 601,
	588, 623, 624, 573, 568, 604, 605, 591, 607, 608,
	609, 569, 570, 571, 572, 0, 0, 0, 396, 397,
	398, 419, 382, 0, 436, 162, 50, 154, 130, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	147, 0, 273, 0, 156, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	430, 0, 0, 112, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 0, 159, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 251, 185, 431, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 418, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 129, 153,
	160, 0, 98, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 177, 0, 0, 0, 361, 0, 0, 297,
	152, 146, 145, 404, 0, 348, 330, 56, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 365, 366, 367, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 0, 0, 407, 148, 149,
	150, 415, 420, 421, 422, 424, 425, 426, 427, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 383, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	180, 0, 0, 428, 188, 0, 0, 0, 151, 0,
	189, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 410,
	413, 0, 0, 0, 0, 239, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 408, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 411, 341, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 423, 287,
	255, 331, 281, 390, 294, 0, 416, 0, 417, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 233, 0,
	236, 0, 299, 131, 340, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 0, 0, 0, 229,
	230, 231, 232, 0, 328, 0, 396, 397, 398, 419,
	382, 0, 190, 38, 178, 181, 183, 182, 0, 48,
	5, 273, 0, 115, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1028, 0, 0, 184, 0, 0, 551,
	561, 0, 0, 251, 185, 431, 0, 432, 552, 0,
	560, 553, 557, 556, 554, 555, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 559, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 418, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 428, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 408, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 0, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 396, 397, 398, 419, 382,
	0, 436, 162, 50, 154, 130, 0, 0, 0, 0,
	0, 0, 328, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 430, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 461, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 251, 185, 431, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 418, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 460,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 365, 366, 367, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 0, 0, 407, 0, 0, 0, 415, 420,
	421, 422, 424, 425, 426, 427, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 439, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 399, 0, 0, 0,
	428, 438, 0, 0, 0, 0, 0, 437, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 410, 413, 0, 0,
	0, 0, 239, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 408, 0, 0, 316, 317, 318, 319, 457,
	459, 256, 411, 341, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 423, 287, 255, 331, 281,
	390, 294, 0, 416, 0, 417, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 233, 0, 236, 0, 299,
	131, 340, 278, 0, 0, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 0, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 328, 0, 0, 229, 230, 231, 232,
	0, 856, 0, 396, 397, 398, 419, 382, 0, 436,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 251, 185, 431, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 0, 1909,
	1905, 1906, 1907, 1908, 0, 1892, 1893, 1894, 1895, 842,
	1878, 1898, 0, 1879, 324, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1896, 336, 302, 337,
	289, 314, 313, 315, 867, 869, 871, 873, 876, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 1891, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 428, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 408, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 233, 0, 236, 866,
	299, 0, 340, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 328, 0, 0, 229, 230, 231,
	232, 0, 0, 0, 396, 397, 398, 419, 382, 0,
	436, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 251, 185, 431, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 1971, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 418, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 388, 0,
	0, 0, 1970, 0, 1969, 361, 1967, 1972, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 1973, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 428, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 408, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 0, 0, 0, 229, 230,
	231, 232, 328, 0, 0, 396, 397, 398, 419, 382,
	0, 436, 0, 0, 1701, 0, 0, 0, 0, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 430, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 1702, 0, 0,
	0, 251, 185, 431, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 962, 963,
	964, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 418, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 365, 366, 367, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 0, 0, 407, 0, 0, 0, 415, 420,
	421, 422, 424, 425, 426, 427, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 439, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 399, 0, 0, 0,
	428, 438, 0, 0, 0, 0, 0, 437, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 410, 413, 0, 0,
	0, 0, 239, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 408, 0, 0, 316, 317, 318, 319, 283,
	0, 256, 411, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 423, 287, 255, 331, 281,
	390, 294, 0, 416, 0, 417, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 233, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 0, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 328, 0, 0, 229, 230, 231, 232,
	0, 0, 0, 396, 397, 398, 419, 382, 0, 436,
	273, 778, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 785, 786, 0, 0,
	0, 0, 251, 185, 431, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	773, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 764,
	386, 246, 763, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 418, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 776, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 428, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 777, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 780, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 787, 774, 783, 775, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 233, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 328, 0, 0, 229, 230, 231,
	232, 0, 0, 0, 396, 397, 398, 419, 382, 0,
	436, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 251, 185, 431, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 1990,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 418, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 388, 0,
	0, 0, 1994, 1992, 0, 361, 0, 1993, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 428, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 408, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 0, 0, 0, 229, 230,
	231, 232, 162, 0, 0, 396, 397, 398, 419, 382,
	0, 436, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 430, 0, 0,
	112, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 1745, 0, 184, 0, 0, 0, 0, 0,
	0, 251, 185, 431, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 418, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 365, 366, 367, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 0, 0, 407, 0, 0, 0, 415, 420,
	421, 422, 424, 425, 426, 427, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 439, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 399, 0, 0, 0,
	428, 438, 0, 0, 0, 0, 0, 437, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 410, 413, 0, 0,
	0, 0, 239, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 408, 0, 0, 316, 317, 318, 319, 283,
	0, 256, 411, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 423, 287, 255, 331, 281,
	390, 294, 0, 416, 0, 417, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 233, 0, 236, 0, 299,
	131, 340, 278, 0, 0, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 0, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 0, 0, 0, 229, 230, 231, 232,
	162, 0, 0, 396, 397, 398, 419, 382, 0, 436,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 430, 0, 0, 112, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	1736, 0, 184, 0, 0, 0, 0, 0, 0, 251,
	185, 431, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 0, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 418, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 365,
	366, 367, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	0, 0, 407, 0, 0, 0, 415, 420, 421, 422,
	424, 425, 426, 427, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 439,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 428, 438,
	0, 0, 0, 0, 0, 437, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 410, 413, 0, 0, 0, 0,
	239, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	408, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	411, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 423, 287, 255, 331, 281, 390, 294,
	0, 416, 0, 417, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 233, 0, 236, 0, 299, 131, 340,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 0, 0, 0, 229, 230, 231, 232, 162, 0,
	0, 396, 397, 398, 419, 382, 0, 436, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 0, 430, 0, 0, 112, 0, 0, 357,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 251, 185, 431,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 362, 378, 252, 353, 391, 257,
	360, 247, 327, 350, 0, 0, 244, 376, 359, 309,
	292, 293, 243, 0, 345, 271, 284, 268, 325, 0,
	375, 403, 267, 394, 0, 386, 246, 0, 385, 324,
	372, 377, 310, 304, 245, 374, 308, 303, 296, 275,
	418, 288, 336, 302, 337, 289, 314, 313, 315, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 297, 0, 0, 0, 404, 0, 348, 330,
	0, 0, 0, 346, 300, 373, 338, 379, 363, 387,
	342, 339, 237, 364, 270, 311, 248, 250, 265, 272,
	274, 276, 277, 320, 321, 333, 352, 365, 366, 367,
	269, 258, 347, 259, 286, 260, 238, 262, 261, 263,
	354, 264, 240, 334, 371, 0, 282, 343, 307, 241,
	306, 335, 370, 369, 249, 395, 401, 402, 0, 0,
	407, 0, 0, 0, 415, 420, 421, 422, 424, 425,
	426, 427, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 400, 280, 234, 235, 439, 266, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 399, 0, 0, 0, 428, 438, 0, 0,
	0, 0, 0, 437, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 410, 413, 0, 0, 0, 0, 239, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 408, 0,
	0, 316, 317, 318, 319, 283, 0, 256, 411, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 423, 287, 255, 331, 281, 390, 294, 0, 416,
	0, 417, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 233, 0, 236, 0, 299, 131, 340, 278, 0,
	0, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 0, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 328,
	0, 0, 229, 230, 231, 232, 0, 0, 0, 396,
	397, 398, 419, 382, 0, 436, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 430, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 785, 786, 0, 0, 0, 0, 251, 185,
	431, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 764, 386, 246, 763, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 418, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 365, 366,
	367, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 0,
	0, 407, 0, 0, 0, 415, 420, 421, 422, 424,
	425, 426, 427, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 439, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 0, 0, 0, 428, 438, 0,
	0, 0, 0, 0, 437, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 410, 413, 0, 0, 0, 0, 239,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 408,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 411,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 423, 287, 255, 331, 281, 390, 294, 0,
	416, 0, 417, 0, 0, 0, 0, 787, 1659, 783,
	1660, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 233, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 0, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	328, 0, 0, 229, 230, 231, 232, 0, 0, 2385,
	396, 397, 398, 419, 382, 0, 436, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 430, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 251,
	185, 431, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 0, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 418, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 2388, 0, 0, 2387, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 365,
	366, 367, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	0, 0, 407, 0, 0, 0, 415, 420, 421, 422,
	424, 425, 426, 427, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 439,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 428, 438,
	0, 0, 0, 0, 0, 437, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 410, 413, 0, 0, 0, 0,
	239, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	408, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	411, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 423, 287, 255, 331, 281, 390, 294,
	0, 416, 0, 417, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 233, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 328, 0, 0, 229, 230, 231, 232, 0, 0,
	0, 396, 397, 398, 419, 382, 0, 436, 273, 1209,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 430, 0, 0, 0,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 1207, 0, 0, 0,
	251, 185, 431, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1205,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 418, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	365, 366, 367, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 0, 0, 407, 0, 0, 0, 415, 420, 421,
	422, 424, 425, 426, 427, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	439, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 428,
	438, 0, 0, 0, 0, 0, 437, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 410, 413, 0, 0, 0,
	0, 239, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 408, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 411, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 423, 287, 255, 331, 281, 390,
	294, 0, 416, 0, 417, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 233, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 328, 0, 0, 229, 230, 231, 232, 0,
	0, 0, 396, 397, 398, 419, 382, 0, 436, 273,
	1203, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 430, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 1207, 0, 0,
	0, 251, 185, 431, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1205, 0, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 418, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 365, 366, 367, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 0, 0, 407, 0, 0, 0, 415, 420,
	421, 422, 424, 425, 426, 427, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 439, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 399, 0, 0, 0,
	428, 438, 0, 0, 0, 0, 0, 437, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 410, 413, 0, 0,
	0, 0, 239, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 408, 0, 0, 316, 317, 318, 319, 283,
	0, 256, 411, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 423, 287, 255, 331, 281,
	390, 294, 0, 416, 0, 417, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 233, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 0, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 328, 0, 0, 229, 230, 231, 232,
	0, 0, 0, 396, 397, 398, 419, 382, 0, 436,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3154, 0, 184, 611, 0, 0, 0,
	0, 0, 251, 185, 431, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 418, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 428, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 408, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 233, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 328, 0, 0, 229, 230, 231,
	232, 0, 0, 0, 396, 397, 398, 419, 382, 0,
	436, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 1207,
	0, 0, 0, 251, 185, 431, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1205, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 418, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 428, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 408, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 328, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 396, 397, 398, 419, 382,
	0, 436, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	430, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	1207, 0, 0, 0, 251, 185, 431, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2883, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 418, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 365, 366, 367, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 0, 0, 407, 0, 0,
	0, 415, 420, 421, 422, 424, 425, 426, 427, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 439, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 428, 438, 0, 0, 0, 0, 0,
	437, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 410,
	413, 0, 0, 0, 0, 239, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 408, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 411, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 423, 287,
	255, 331, 281, 390, 294, 0, 416, 0, 417, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 233, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 0, 0, 0, 229,
	230, 231, 232, 328, 0, 0, 396, 397, 398, 419,
	382, 0, 436, 0, 0, 2059, 0, 0, 0, 0,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 2061, 0,
	0, 0, 251, 185, 431, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 418, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 428, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 408, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 233, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 328, 0, 0, 229, 230, 231,
	232, 0, 0, 0, 396, 397, 398, 419, 382, 0,
	436, 273, 2080, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 1207,
	0, 0, 0, 251, 185, 431, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 418, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 428, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 408, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 328, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 396, 397, 398, 419, 382,
	0, 436, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	430, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3243, 0, 184, 0, 0,
	0, 0, 0, 0, 251, 185, 431, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 418, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 365, 366, 367, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 0, 0, 407, 0, 0,
	0, 415, 420, 421, 422, 424, 425, 426, 427, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 439, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 428, 438, 0, 0, 0, 0, 0,
	437, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 410,
	413, 0, 0, 0, 0, 239, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 408, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 411, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 423, 287,
	255, 331, 281, 390, 294, 0, 416, 0, 417, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 233, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 328, 0, 0, 229,
	230, 231, 232, 0, 0, 0, 396, 397, 398, 419,
	382, 0, 436, 273, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	0, 430, 0, 0, 0, 0, 0, 357, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 611,
	0, 0, 0, 0, 0, 251, 185, 431, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 0, 375, 403,
	267, 394, 0, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 418, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 404, 0, 348, 330, 0, 0,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 365, 366, 367, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 0, 0, 407, 0,
	0, 0, 415, 420, 421, 422, 424, 425, 426, 427,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 439, 266, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	399, 0, 0, 0, 428, 438, 0, 0, 0, 0,
	0, 437, 332, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 381, 393,
	410, 413, 0, 0, 0, 0, 239, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 408, 0, 0, 316,
	317, 318, 319, 283, 0, 256, 411, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 279, 285, 423,
	287, 255, 331, 281, 390, 294, 0, 416, 0, 417,
	0, 0, 0, 0, 323, 290, 291, 355, 295, 301,
	344, 389, 329, 349, 253, 380, 356, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 233,
	0, 236, 0, 299, 0, 340, 278, 0, 0, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 0, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 328, 0, 0,
	229, 230, 231, 232, 0, 0, 0, 396, 397, 398,
	419, 382, 0, 436, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 0, 430, 0, 0, 0, 0, 0, 357, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3169, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 251, 185, 431, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 0, 375,
	403, 267, 394, 0, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 418,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 404, 0, 348, 330, 0,
	0, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 365, 366, 367, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 0, 0, 407,
	0, 0, 0, 415, 420, 421, 422, 424, 425, 426,
	427, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 439, 266, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 399, 0, 0, 0, 428, 438, 0, 0, 0,
	0, 0, 437, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 410, 413, 0, 0, 0, 0, 239, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 408, 0, 0,
	316, 317, 318, 319, 283, 0, 256, 411, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	423, 287, 255, 331, 281, 390, 294, 0, 416, 0,
	417, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	233, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 0, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 328, 0,
	0, 229, 230, 231, 232, 0, 0, 0, 396, 397,
	398, 419, 382, 0, 436, 273, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 0, 430, 0, 0, 0, 0, 0, 357,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 251, 185, 431,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 362, 378, 252, 353, 391, 257,
	360, 247, 327, 350, 0, 0, 244, 376, 359, 309,
	292, 293, 243, 0, 345, 271, 284, 268, 325, 0,
	375, 403, 267, 394, 0, 386, 246, 0, 385, 324,
	372, 377, 310, 304, 245, 374, 308, 303, 296, 275,
	418, 288, 336, 302, 337, 289, 314, 313, 315, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 3099, 0, 0, 361,
	0, 0, 297, 0, 0, 0, 404, 0, 348, 330,
	0, 0, 0, 346, 300, 373, 338, 379, 363, 387,
	342, 339, 237, 364, 270, 311, 248, 250, 265, 272,
	274, 276, 277, 320, 321, 333, 352, 365, 366, 367,
	269, 258, 347, 259, 286, 260, 238, 262, 261, 263,
	354, 264, 240, 334, 371, 0, 282, 343, 307, 241,
	306, 335, 370, 369, 249, 395, 401, 402, 0, 0,
	407, 0, 0, 0, 415, 420, 421, 422, 424, 425,
	426, 427, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 400, 280, 234, 235, 439, 266, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 399, 0, 0, 0, 428, 438, 0, 0,
	0, 0, 0, 437, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 410, 413, 0, 0, 0, 0, 239, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 408, 0,
	0, 316, 317, 318, 319, 283, 0, 256, 411, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 423, 287, 255, 331, 281, 390, 294, 0, 416,
	0, 417, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 233, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 0, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 328,
	0, 0, 229, 230, 231, 232, 0, 0, 0, 396,
	397, 398, 419, 382, 0, 436, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 430, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2879, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 251, 185,
	431, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 418, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 365, 366,
	367, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 0,
	0, 407, 0, 0, 0, 415, 420, 421, 422, 424,
	425, 426, 427, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 439, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 0, 0, 0, 428, 438, 0,
	0, 0, 0, 0, 437, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 410, 413, 0, 0, 0, 0, 239,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 408,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 411,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 423, 287, 255, 331, 281, 390, 294, 0,
	416, 0, 417, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 233, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 0, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	328, 0, 0, 229, 230, 231, 232, 0, 0, 0,
	396, 397, 398, 419, 382, 0, 436, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 430, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 2744, 0, 0, 0, 251,
	185, 431, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 0, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 418, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 365,
	366, 367, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	0, 0, 407, 0, 0, 0, 415, 420, 421, 422,
	424, 425, 426, 427, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 439,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 428, 438,
	0, 0, 0, 0, 0, 437, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 410, 413, 0, 0, 0, 0,
	239, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	408, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	411, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 423, 287, 255, 331, 281, 390, 294,
	0, 416, 0, 417, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 233, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 328, 0, 0, 229, 230, 231, 232, 0, 0,
	0, 396, 397, 398, 419, 382, 0, 436, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 430, 0, 0, 0,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	251, 185, 431, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 418, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 2953,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	365, 366, 367, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 0, 0, 407, 0, 0, 0, 415, 420, 421,
	422, 424, 425, 426, 427, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	439, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 428,
	438, 0, 0, 0, 0, 0, 437, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 410, 413, 0, 0, 0,
	0, 239, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 408, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 411, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 423, 287, 255, 331, 281, 390,
	294, 0, 416, 0, 417, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 233, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 328, 0, 0, 229, 230, 231, 232, 0,
	0, 0, 396, 397, 398, 419, 382, 0, 436, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 430, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 251, 185, 431, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 418, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 365, 366, 367, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 0, 0, 407, 0, 0, 0, 415, 420,
	421, 422, 424, 425, 426, 427, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 439, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 399, 0, 0, 0,
	428, 438, 0, 0, 0, 0, 0, 437, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 410, 413, 0, 0,
	0, 0, 239, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 408, 0, 0, 316, 317, 318, 319, 283,
	0, 256, 411, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 423, 287, 255, 331, 281,
	390, 294, 0, 416, 0, 417, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 233, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 0, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 328, 0, 0, 229, 230, 231, 232,
	0, 0, 0, 396, 397, 398, 419, 382, 0, 436,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 251, 185, 431, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 418, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 428, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 408, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 233, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 328, 0, 0, 229, 230, 231,
	232, 0, 0, 0, 396, 397, 398, 419, 382, 0,
	436, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 251, 185, 431, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 418, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 428, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 408, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 328, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 396, 397, 398, 419, 382,
	0, 436, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	430, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	2544, 0, 0, 0, 251, 185, 431, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 418, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 365, 366, 367, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 0, 0, 407, 0, 0,
	0, 415, 420, 421, 422, 424, 425, 426, 427, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 439, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 428, 438, 0, 0, 0, 0, 0,
	437, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 410,
	413, 0, 0, 0, 0, 239, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 408, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 411, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 423, 287,
	255, 331, 281, 390, 294, 0, 416, 0, 417, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 233, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 328, 0, 0, 229,
	230, 231, 232, 0, 0, 0, 396, 397, 398, 419,
	382, 0, 436, 273, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	0, 430, 0, 0, 0, 0, 0, 357, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 251, 185, 431, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 0, 375, 403,
	267, 394, 0, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 418, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 404, 0, 348, 330, 0, 0,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 365, 366, 367, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 0, 0, 407, 0,
	0, 0, 415, 420, 421, 422, 424, 425, 426, 427,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 439, 266, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	399, 0, 0, 0, 428, 438, 0, 0, 0, 0,
	0, 437, 332, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 381, 393,
	410, 413, 0, 0, 0, 0, 239, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 408, 0, 0, 316,
	317, 318, 319, 283, 0, 256, 411, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 279, 285, 423,
	287, 255, 331, 281, 390, 294, 0, 416, 0, 417,
	0, 0, 0, 0, 323, 290, 291, 355, 295, 301,
	344, 389, 329, 349, 253, 380, 356, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 233,
	0, 236, 0, 299, 0, 340, 278, 0, 0, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 0, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 328, 0, 0,
	229, 230, 231, 232, 0, 0, 0, 396, 397, 398,
	419, 382, 0, 436, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 0, 430, 0, 0, 0, 0, 0, 357, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 1207, 0, 0, 0, 251, 185, 431, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 0, 375,
	403, 267, 394, 0, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 418,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 404, 0, 348, 330, 0,
	0, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 365, 366, 367, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 0, 0, 407,
	0, 0, 0, 415, 420, 421, 422, 424, 425, 426,
	427, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 439, 266, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 399, 0, 0, 0, 428, 438, 0, 0, 0,
	0, 0, 437, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 410, 413, 0, 0, 0, 0, 239, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 408, 0, 0,
	316, 317, 318, 319, 283, 0, 256, 411, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	423, 287, 255, 331, 281, 390, 294, 0, 416, 0,
	417, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	233, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 0, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 328, 0,
	0, 229, 230, 231, 232, 0, 0, 0, 396, 397,
	398, 419, 382, 0, 436, 273, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 0, 430, 0, 0, 0, 0, 0, 357,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 2061, 0, 0, 0, 251, 185, 431,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 362, 378, 252, 353, 391, 257,
	360, 247, 327, 350, 0, 0, 244, 376, 359, 309,
	292, 293, 243, 0, 345, 271, 284, 268, 325, 0,
	375, 403, 267, 394, 0, 386, 246, 0, 385, 324,
	372, 377, 310, 304, 245, 374, 308, 303, 296, 275,
	418, 288, 336, 302, 337, 289, 314, 313, 315, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 297, 0, 0, 0, 404, 0, 348, 330,
	0, 0, 0, 346, 300, 373, 338, 379, 363, 387,
	342, 339, 237, 364, 270, 311, 248, 250, 265, 272,
	274, 276, 277, 320, 321, 333, 352, 365, 366, 367,
	269, 258, 347, 259, 286, 260, 238, 262, 261, 263,
	354, 264, 240, 334, 371, 0, 282, 343, 307, 241,
	306, 335, 370, 369, 249, 395, 401, 402, 0, 0,
	407, 0, 0, 0, 415, 420, 421, 422, 424, 425,
	426, 427, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 400, 280, 234, 235, 439, 266, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 399, 0, 0, 0, 428, 438, 0, 0,
	0, 0, 0, 437, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 410, 413, 0, 0, 0, 0, 239, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 408, 0,
	0, 316, 317, 318, 319, 283, 0, 256, 411, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 423, 287, 255, 331, 281, 390, 294, 0, 416,
	0, 417, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 233, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 0, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 328,
	0, 0, 229, 230, 231, 232, 0, 0, 0, 396,
	397, 398, 419, 382, 0, 436, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 430, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 251, 185,
	431, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 418, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 365, 366,
	367, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 0,
	0, 407, 0, 0, 0, 415, 420, 421, 422, 424,
	425, 426, 427, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 439, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 0, 0, 0, 428, 438, 0,
	0, 0, 0, 0, 437, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 410, 413, 0, 0, 0, 0, 239,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 408,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 411,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 423, 287, 255, 331, 281, 390, 294, 0,
	416, 0, 417, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 233, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 0, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	328, 0, 0, 229, 230, 231, 232, 0, 0, 0,
	396, 397, 398, 419, 382, 0, 436, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 430, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 251,
	185, 431, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 0, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 418, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 365,
	366, 367, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	0, 0, 407, 0, 0, 0, 415, 420, 421, 422,
	424, 425, 426, 427, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 439,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 428, 438,
	0, 0, 0, 0, 0, 437, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 410, 413, 0, 0, 0, 0,
	239, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	408, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	411, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 423, 287, 255, 331, 281, 390, 294,
	0, 416, 0, 417, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 233, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 328, 0, 0, 229, 230, 231, 232, 0, 0,
	0, 396, 397, 398, 419, 382, 0, 436, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 430, 0, 0, 0,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 2096, 0, 0, 0,
	251, 185, 431, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 418, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	365, 366, 367, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 0, 0, 407, 0, 0, 0, 415, 420, 421,
	422, 424, 425, 426, 427, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	439, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 428,
	438, 0, 0, 0, 0, 0, 437, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 410, 413, 0, 0, 0,
	0, 239, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 408, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 411, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 423, 287, 255, 331, 281, 390,
	294, 0, 416, 0, 417, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 233, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 0, 1934, 0, 229, 230, 231, 232, 328,
	0, 0, 396, 397, 398, 419, 382, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 430, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 251, 185,
	431, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 418, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 365, 366,
	367, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 0,
	0, 407, 0, 0, 0, 415, 420, 421, 422, 424,
	425, 426, 427, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 439, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 0, 0, 0, 428, 438, 0,
	0, 0, 0, 0, 437, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 410, 413, 0, 0, 0, 0, 239,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 408,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 411,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 423, 287, 255, 331, 281, 390, 294, 0,
	416, 0, 417, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 233, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 0, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	328, 0, 0, 229, 230, 231, 232, 0, 1627, 0,
	396, 397, 398, 419, 382, 0, 436, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 430, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 251,
	185, 431, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 0, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 418, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 365,
	366, 367, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	0, 0, 407, 0, 0, 0, 415, 420, 421, 422,
	424, 425, 426, 427, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 439,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 428, 438,
	0, 0, 0, 0, 0, 437, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 410, 413, 0, 0, 0, 0,
	239, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	408, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	411, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 423, 287, 255, 331, 281, 390, 294,
	0, 416, 0, 417, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 233, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 328, 0, 0, 229, 230, 231, 232, 0, 0,
	0, 396, 397, 398, 419, 382, 0, 436, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 430, 0, 0, 0,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 1207, 0, 0, 0,
	251, 185, 431, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 418, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 1540, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	365, 366, 367, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 0, 0, 407, 0, 0, 0, 415, 420, 421,
	422, 424, 425, 426, 427, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	439, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 428,
	438, 0, 0, 0, 0, 0, 437, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 410, 413, 0, 0, 0,
	0, 239, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 408, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 411, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 423, 287, 255, 331, 281, 390,
	294, 0, 416, 0, 417, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 233, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 328, 0, 0, 229, 230, 231, 232, 0,
	0, 0, 396, 397, 398, 419, 382, 0, 436, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 430, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 251, 185, 431, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 418, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 1232,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 365, 366, 367, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 0, 0, 407, 0, 0, 0, 415, 420,
	421, 422, 424, 425, 426, 427, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 439, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 399, 0, 0, 0,
	428, 438, 0, 0, 0, 0, 0, 437, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 410, 413, 0, 0,
	0, 0, 239, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 408, 0, 0, 316, 317, 318, 319, 283,
	0, 256, 411, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 423, 287, 255, 331, 281,
	390, 294, 0, 416, 0, 417, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 233, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 0, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 328, 0, 0, 229, 230, 231, 232,
	0, 0, 0, 396, 397, 398, 419, 382, 0, 436,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 251, 185, 431, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 418, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 428, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 408, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 0, 0, 368, 0, 233, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 328, 0, 0, 229, 230, 231,
	232, 0, 0, 0, 396, 397, 398, 419, 382, 0,
	436, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 251, 185, 431, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 418, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 477, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 428, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 478, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 408, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 328, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 396, 397, 398, 419, 382,
	0, 436, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	430, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 251, 185, 431, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 418, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 454, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 365, 366, 367, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 0, 0, 407, 0, 0,
	0, 415, 420, 421, 422, 424, 425, 426, 427, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 439, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 428, 438, 0, 0, 0, 0, 0,
	437, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 410,
	413, 0, 0, 0, 0, 239, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 408, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 411, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 423, 287,
	255, 331, 281, 390, 294, 0, 416, 0, 417, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 233, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 0, 328, 0, 229,
	230, 231, 232, 0, 0, 0, 396, 397, 398, 419,
	382, 0, 436, 444, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 0, 430, 0, 0, 0, 0, 0, 357, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 251, 185, 431, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 0, 375,
	403, 267, 394, 0, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 418,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 404, 0, 348, 330, 0,
	0, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 365, 366, 367, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 0, 0, 407,
	0, 0, 0, 415, 420, 421, 422, 424, 425, 426,
	427, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 439, 266, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 399, 0, 0, 0, 428, 438, 0, 0, 0,
	0, 0, 437, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 410, 413, 0, 0, 0, 0, 239, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 408, 0, 0,
	316, 317, 318, 319, 283, 0, 256, 411, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	423, 287, 255, 331, 281, 390, 294, 0, 416, 0,
	417, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	233, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 0, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 328, 0,
	0, 229, 230, 231, 232, 0, 0, 0, 396, 397,
	398, 419, 382, 0, 436, 273, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 0, 430, 0, 0, 0, 0, 0, 357,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 251, 185, 431,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 362, 378, 252, 353, 391, 257,
	360, 247, 327, 350, 0, 0, 244, 376, 359, 309,
	292, 293, 243, 0, 345, 271, 284, 268, 325, 0,
	375, 403, 267, 394, 0, 386, 246, 0, 385, 324,
	372, 377, 310, 304, 245, 374, 308, 303, 296, 275,
	418, 288, 336, 302, 337, 289, 314, 313, 315, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 297, 0, 0, 0, 404, 0, 348, 330,
	0, 0, 0, 346, 300, 373, 338, 379, 363, 387,
	342, 339, 237, 364, 270, 311, 248, 250, 265, 272,
	274, 276, 277, 320, 321, 333, 352, 365, 366, 367,
	269, 258, 347, 259, 286, 260, 238, 262, 261, 263,
	354, 264, 240, 334, 371, 0, 282, 343, 307, 241,
	306, 335, 370, 369, 249, 395, 401, 402, 0, 0,
	407, 0, 0, 0, 415, 420, 421, 422, 424, 425,
	426, 427, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 400, 280, 234, 235, 439, 266, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 399, 0, 0, 0, 428, 438, 0, 0,
	0, 0, 0, 437, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 410, 413, 0, 0, 0, 0, 239, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 408, 0,
	0, 316, 317, 318, 319, 283, 0, 256, 411, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 423, 287, 255, 331, 281, 390, 294, 0, 416,
	0, 417, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 233, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 0, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 328,
	0, 0, 229, 230, 231, 232, 0, 0, 0, 396,
	397, 398, 419, 382, 0, 436, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 430, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 251, 185,
	431, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 1187, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 418, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 365, 366,
	367, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 0,
	0, 407, 0, 0, 0, 415, 420, 421, 422, 424,
	425, 426, 427, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 439, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 0, 0, 0, 428, 438, 0,
	0, 0, 0, 0, 437, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 410, 413, 0, 0, 0, 0, 239,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 408,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 411,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 423, 287, 255, 331, 281, 390, 294, 0,
	416, 0, 417, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 233, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 0, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	328, 0, 0, 229, 230, 231, 232, 0, 0, 0,
	396, 397, 398, 419, 382, 0, 436, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 430, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 251,
	185, 431, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 1185, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 0, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 418, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 365,
	366, 367, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	0, 0, 407, 0, 0, 0, 415, 420, 421, 422,
	424, 425, 426, 427, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 439,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 428, 438,
	0, 0, 0, 0, 0, 437, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 410, 413, 0, 0, 0, 0,
	239, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	408, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	411, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 423, 287, 255, 331, 281, 390, 294,
	0, 416, 0, 417, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 233, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 328, 0, 0, 229, 230, 231, 232, 0, 0,
	0, 396, 397, 398, 419, 382, 0, 436, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 430, 0, 0, 0,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	251, 185, 431, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 418, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 518, 272, 274, 276, 277, 320, 321, 333, 352,
	365, 366, 367, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 0, 0, 407, 0, 0, 0, 415, 420, 421,
	422, 424, 425, 426, 427, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	439, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 428,
	438, 0, 0, 0, 0, 0, 437, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 410, 413, 0, 0, 0,
	0, 239, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 408, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 411, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 423, 287, 255, 331, 281, 390,
	294, 711, 416, 712, 417, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 705, 0, 708, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 233, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 0, 0, 0, 229, 230, 231, 232, 0,
	0, 0, 396, 397, 398, 419, 382, 0, 436, 162,
	50, 154, 130, 0, 0, 0, 0, 0, 162, 50,
	154, 130, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 147, 0, 155, 0, 156, 0,
	0, 0, 0, 147, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 707, 0,
	701, 0, 689, 0, 0, 0, 112, 0, 0, 704,
	703, 0, 100, 0, 0, 0, 0, 0, 159, 0,
	0, 100, 0, 0, 0, 0, 686, 159, 0, 0,
	694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 710,
	0, 0, 0, 0, 700, 0, 0, 0, 699, 0,
	0, 0, 0, 0, 685, 0, 0, 0, 692, 0,
	0, 0, 0, 0, 116, 117, 0, 118, 119, 0,
	0, 0, 0, 116, 117, 690, 118, 119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1615, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 129, 153, 160, 0, 98, 0, 691, 0,
	0, 129, 153, 160, 0, 98, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 146, 145, 0, 0, 0,
	0, 56, 0, 152, 146, 145, 0, 0, 0, 0,
	56, 0, 3260, 1615, 0, 0, 0, 0, 1577, 0,
	0, 0, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1617, 1586, 0,
	0, 0, 0, 706, 0, 0, 0, 1618, 1619, 0,
	0, 0, 148, 149, 150, 0, 0, 0, 0, 0,
	0, 148, 149, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1585, 0, 0, 0, 0, 157, 1608,
	0, 0, 0, 0, 0, 0, 0, 157, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 0,
	0, 0, 151, 0, 109, 0, 0, 108, 0, 0,
	0, 151, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1615, 0, 0, 0, 1608, 1596, 0, 0, 0,
	0, 110, 0, 0, 0, 0, 0, 1602, 0, 0,
	110, 0, 49, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 0, 0, 0, 1617, 0, 1590, 1624, 0,
	0, 1591, 1593, 1595, 0, 1597, 1598, 1599, 1603, 1604,
	1605, 1607, 1610, 1611, 1612, 0, 0, 0, 0, 0,
	0, 0, 1600, 1609, 1601, 0, 0, 0, 0, 1615,
	0, 51, 0, 1576, 1578, 1575, 0, 1572, 0, 0,
	51, 0, 1596, 0, 0, 0, 1592, 0, 0, 0,
	0, 0, 0, 1602, 0, 0, 1616, 0, 0, 0,
	0, 0, 0, 1617, 0, 0, 0, 131, 0, 0,
	0, 0, 0, 1590, 1624, 0, 131, 1591, 1593, 1595,
	0, 1597, 1598, 1599, 1603, 1604, 1605, 1607, 1610, 1611,
	1612, 0, 0, 0, 0, 1613, 0, 0, 1600, 1609,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 3005,
	1580, 0, 1589, 1608, 1592, 0, 0, 0, 0, 1588,
	0, 0, 0, 0, 0, 0, 111, 38, 0, 0,
	0, 0, 1616, 48, 5, 111, 38, 115, 0, 0,
	0, 0, 48, 1606, 0, 0, 115, 0, 0, 0,
	0, 0, 1594, 1573, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 0, 497, 496, 503, 493, 1589, 0,
	1596, 0, 0, 0, 0, 1588, 500, 501, 0, 502,
	506, 1602, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 0, 0, 0, 0, 0, 1606,
	0, 1590, 1624, 0, 0, 1591, 1593, 1595, 1594, 1597,
	1598, 1599, 1603, 1604, 1605, 1607, 1610, 1611, 1612, 0,
	1621, 1620, 0, 0, 0, 0, 1600, 1609, 1601, 0,
	0, 0, 0, 0, 0, 0, 515, 0, 1596, 517,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 1602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1616, 0, 0, 0, 0, 0, 0, 0, 0, 1590,
	1624, 0, 1582, 1591, 1593, 1595, 0, 1597, 1598, 1599,
	1603, 1604, 1605, 1607, 1610, 1611, 1612, 0, 0, 0,
	0, 0, 0, 0, 1600, 1609, 1601, 0, 0, 1613,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	1622, 0, 0, 0, 0, 0, 1589, 0, 0, 0,
	0, 0, 0, 1588, 0, 0, 0, 0, 1616, 497,
	496, 503, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 500, 501, 0, 502, 506, 0, 1606, 488, 0,
	0, 0, 0, 0, 0, 0, 1594, 0, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 489, 491, 490,
	0, 0, 0, 0, 1589, 0, 0, 495, 0, 0,
	0, 1588, 0, 0, 0, 0, 0, 0, 0, 499,
	0, 515, 0, 0, 517, 0, 514, 0, 0, 516,
	0, 0, 0, 492, 0, 1606, 0, 483, 0, 0,
	0, 0, 0, 0, 1594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 498, 504,
	0, 505, 507, 0, 0, 508, 509, 510, 0, 0,
	512, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 489, 491, 490, 0, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 494, 498, 504, 0, 505, 507, 0, 0,
	508, 509, 510, 0, 0, 512, 513,
}

var yyPact = [...]int{
	36867, -1000, -1000, -1000, -318, 10223, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34676, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34676, -313,
	34135, 34135, -1000, -1000, 2229, -1000, 33593, 11340, 34676, 308,
	304, 34676, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 661, -1000,
	33052, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 566, 37492,
	36299, 7981, -267, -1000, 2836, -102, 819, 847, 808, 808,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36696,
	742, 32511, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3080, 379, 742, 13511, 5, 2, 2836, 319,
	361, -1000, 906, 36876, 147, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 7981, 7981, 10223, -331,
	10223, 7981, 34676, 34676, -1000, -1000, -1000, -1000, 566, 37492,
	7981, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4158, -1000, 1309, -1000, -1000, -1000, -1000,
	2515, 1305, 2072, 524, 34676, -1000, 1297, 524, -1000, -1000,
	-1000, 2836, 2836, -1000, 34676, 34676, 68, 1479, -1000, 320,
	353, 302, 1296, -1000, -1000, -1000, -1000, -1000, -1000, 438,
	2821, -1000, 34676, 34676, 2537, 34676, -1000, 1948, 490, 37657,
	2687, 1102, 687, 2549, -1000, -1000, 2514, -1000, 208, 200,
	128, 271, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 205,
	-1000, 2750, -1000, -1000, 193, -1000, -1000, 165, -1000, -1000,
	-1000, 1, -1000, -1000, -1000, -1000, -1000, -1000, -98, -1000,
	-1000, 875, 1897, 7981, -1000, 1664, -1000, 2311, -1000, -1000,
	-1000, -1000, 5184, 9655, 9655, 9655, 9655, -1000, -1000, 2381,
	7981, 2513, 2512, -1000, -1000, -1000, -1000, -1000, 1295, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1683, -1000,
	-1000, -1000, 9097, -1000, 2508, 2507, 2506, 2505, 2504, 2503,
	2502, 2501, 2498, 2496, 2489, 2487, 2486, 2485, 2256, 10772,
	2484, 2070, 2067, 2480, 2479, 2476, 2066, 2256, 2256, 2471,
	2469, 2460, 2458, 2452, 2451, 2444, 2429, 2426, 2425, 2424,
	2419, 2418, 2416, 2415, 2411, 2410, 2408, 2394, 2393, 2392,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1099, -1000, 2391, 2674, 2764, 2313, 2795,
	2737, 2735, 2730, 2728, 1873, -1000, -1000, -1000, -129, -1000,
	-1000, 857, -1000, 762, -1000, 34676, 34676, 34676, 670, 563,
	563, 563, 563, 563, 563, 646, 563, -161, 659, 657,
	650, 563, -1000, -1000, -1000, -1000, -1000, -1000, -125, -1000,
	1468, 1465, 2593, 748, -1000, -1000, -1000, -1000, 1122, 34676,
	-1000, 2332, 1416, 1416, 2761, 504, 499, 455, 1416, 350,
	-1000, 1461, 1461, 1461, 1461, 1416, 383, 502, 2764, 2764,
	-18, 1461, -12, 1416, 1416, -12, 1416, 1416, 1416, 149,
	-309, -1000, -1000, -1000, 1461, 1461, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2744, 2743, 566, 34676, 116, 34676, 566,
	566, 566, 571, -46, 35758, 35217, 1948, 485, 471, 1144,
	1446, -1000, 1394, 34676, 34676, 1394, 1394, 17890, 17349, -1000,
	34676, -1000, 2764, 2313, -1000, 2235, 2567, 2234, 2313, 566,
	566, 566, 566, 566, 146, 566, 566, 566, 566, 34676,
	34676, 31970, 566, 566, 6858, 6858, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 10223, 1748, 1690, 141, -76,
	-321, 178, -1000, -1000, 34676, 2663, 129, -1000, -1000, -1000,
	2264, -1000, 2331, 2331, 2331, 2331, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2343, 2390, -1000, -1000, 2323,
	2323, 2323, 2264, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2340, 2340,
	2341, 2341, 2340, 34676, 7981, 34676, 2676, 313, 2389, -1000,
	34676, 300, 2764, 2674, 2764, -1000, -1000, 1288, 1871, 2059,
	-1000, -1000, 320, 1340, -1000, 869, -1000, -1000, -1000, -1000,
	34676, -98, 293, -1000, -1000, 2042, 2387, -1000, 469, 1064,
	1245, -1000, 154, 4379, 27635, 1948, 27635, 34676, -1000, -1000,
	-1000, -1000, -1000, -1000, -6, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 173, -1000,
	7981, 7981, 7981, 7981, 7981, -1000, 745, 8539, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 9655, 9655, 9655, 9655, 9655,
	9655, 9655, 9655, 9655, 9655, 9655, 9655, 2359, 1431, 9655,
	9655, 9655, 9655, 2567, 2445, 1123, 219, -1000, -1000, -1000,
	-1000, -1000, 1501, 1897, 7981, 7981, 34676, -1000, -1000, 3156,
	7981, 7981, 3069, 7981, 2725, 7981, 7981, 7981, 2233, 3730,
	34676, 7981, -1000, 2230, 2226, -1000, -1000, 1712, 7981, -1000,
	-1000, 7981, -1000, -1000, 7981, 9655, 7981, -1000, -1000, -1000,
	190, 2725, 2725, 1512, 7981, 7981, 2725, 2725, 2725, 1497,
	2725, 2725, 2725, 2725, 2725, 2725, 2725, 2725, 2221, 2217,
	2202, 2764, -267, 6300, -1000, -273, 2674, 7981, -1000, -1000,
	7981, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2056,
	-52, 795, 776, 784, -1000, 2714, -1000, 2384, 2383, 1274,
	563, -1000, -126, 34676, 1534, 34676, 27635, 34676, 34676, 1948,
	34676, 34676, 563, -160, 563, 563, 563, 34676, -1000, 2606,
	27635, 2600, 571, -1000, 34676, 1122, 2713, 34676, 2801, 9655,
	9655, -1000, 31429, 1461, 1416, 1416, -1000, -1000, 34676, -1000,
	-1000, -1000, 1461, 34676, 1461, 1461, 2801, 1461, -1000, -1000,
	-1000, 1416, 1416, -1000, -1000, -1000, -1000, 1461, 1461, -1000,
	-1000, 2801, 34676, -15, 2801, 2801, -9, -1000, -1000, -1000,
	34676, 34676, 563, 34676, -1000, 34676, 34676, -1000, -1000, 34676,
	37127, 34676, 30888, 2742, -1000, 27635, 34676, 34676, 25471, -1000,
	1100, -1000, -62, -1000, -56, -46, 1394, -46, 1394, -1000,
	468, 467, 16267, 409, 27635, 4626, -1000, -1000, 1394, 1394,
	4626, 4626, 1294, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1121, -1000, 176, 2674, -1000, -1000, -1000, -1000, -1000, 34676,
	34676, 27635, 1948, 34676, 566, 34676, 34676, 34676, 34676, -1000,
	2382, -1000, 2685, 34676, 34676, 1140, -1000, -1000, 12970, 1273,
	1140, -1000, 1572, -1000, 7981, 10223, -288, 7981, 10223, 10223,
	7981, 10223, -1000, 7981, 126, -1000, -1000, -1000, -1000, 1864,
	-1000, 1862, -1000, -1000, -1000, 2050, 2050, -1000, 1860, -1000,
	-1000, -1000, -1000, 1854, -1000, -1000, 1851, -1000, -1000, -1000,
	2201, 875, -1000, 2043, 2548, -269, -1000, 15168, 34676, 34676,
	-1000, -1000, -269, -1000, 14610, 34676, 2674, -1000, 2674, 34676,
	-1000, 2758, -1000, 320, 261, -1000, -1000, -1000, -1000, -1000,
	-1000, 1261, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1115, -1000, 34676, -1000, -1000, 154, 27635, 28717, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 196, -1000, -1000, 160,
	-1000, 639, 100, 1329, -1000, -1000, 119, 166, 681, 1897,
	-1000, 1559, 1559, 1547, -1000, 565, -1000, -1000, -1000, -1000,
	2381, -1000, -1000, -1000, 1469, 2075, -1000, 1347, 1347, 1317,
	1317, 1317, 1317, 1317, 1393, 1393, -1000, -1000, -1000, 5184,
	2359, 9655, 9655, 9655, 9655, 543, 543, 3545, 3345, -1000,
	7981, 1568, -1000, 7981, 1763, 1103, 1254, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2199, 2196, 1918,
	2815, 2193, 7981, -1000, -1000, 1327, 1320, 1318, -1000, 1801,
	7423, -1000, -1000, -1000, 2192, 1248, 2191, -1000, -1000, -1000,
	2189, 1313, 1009, 2184, 1491, 2183, 1113, 7981, 7981, 7981,
	2180, 1310, 1303, 7981, 7981, 7981, 7981, 2179, 7981, 7981,
	7981, 7981, 7981, 7981, 7981, 7981, 23, 23, 23, -1000,
	-1000, 1302, -1000, 1897, -1000, 2038, -1000, 1322, 1109, -1000,
	1814, -1000, -1000, -1000, -1000, 787, 755, 846, 34676, 930,
	11881, 34676, 34676, -1000, 2332, 2683, 121, -1000, 996, -1000,
	100, -114, 310, 890, 2535, 2810, 34676, 563, 34676, 34676,
	34676, 2712, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	30347, -1000, 2353, 1298, -1000, -1000, 7981, -1000, -1000, 2533,
	34676, 34676, 2801, 2801, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 34676, 2801, 2801, 1416, 1461, -1000, -1000, 1461, -1000,
	-1000, 1461, -1000, 1243, -1000, 34676, -1000, -1000, -1000, 2332,
	1101, -1000, 963, 557, 557, 763, 668, 2793, 14052, -1000,
	1401, 956, 617, 2643, 203, -1000, 1401, -213, 1401, 1401,
	1401, 1401, 1401, 1401, 1401, 453, 446, 1401, 1401, 1401,
	1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 825, 1401,
	1401, 1401, 1401, 1401, -1000, 1401, 2352, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 483, 120, 2741, 242, 240, 996,
	2740, 245, 2534, 1065, -1000, -1000, -1000, -1000, 20061, 20061,
	15726, 20061, -1000, 1353, -46, -59, -1000, -1000, 1100, 4626,
	1100, 4626, -1000, -1000, 615, -1000, -1000, 890, -1000, 34676,
	34676, -1000, -1000, 2347, 1464, -1000, -1000, 10772, -1000, 4626,
	4626, -1000, -1000, 20602, 34676, -1000, -103, -1000, -89, 2755,
	1082, -1000, -1000, 1088, 890, 2547, 34676, 1082, 1082, -1000,
	-1000, 11881, 34676, -1000, -1000, 2801, 6858, -1000, 25471, -1000,
	-1000, 29799, -1000, 29258, 2801, 1485, -1000, 10223, 1634, 145,
	-1000, 174, -322, 140, 1540, 138, 1897, -1000, -1000, 2177,
	2175, 1293, -1000, 1291, 2169, 1290, 1286, -1000, -22, -1000,
	2669, 974, -1000, 2346, -1000, 1283, 2588, -1000, 1079, -1000,
	1460, 1249, -1000, 974, 1236, 2587, 1079, 2755, -1000, 1229,
	67, -1000, -1000, 34676, 2042, 1225, 28717, 1031, -1000, 594,
	1207, 1200, -1000, 27635, 191, 27635, -1000, 27635, -1000, -1000,
	325, -1000, 34676, 2671, -1000, -1000, -1000, 1997, -339, -1000,
	-1000, -1000, -1000, -1000, 1224, -1000, 543, 543, 3545, 3333,
	-1000, 9655, -1000, 9655, 2438, 1484, -1000, 7981, 1556, 3429,
	1237, 18972, 34676, -1000, -1000, 7981, 7981, -1000, 2434, -1000,
	-1000, -1000, -1000, 7981, 7981, 1795, -1000, 34676, -1000, -1000,
	-1000, -1000, 18972, -1000, 9655, -1000, 7981, 1055, 2427, 1217,
	23, 23, 23, 2420, 2413, 2377, 1215, 23, 2328, 2321,
	2258, 2253, 2212, 2182, 2178, 2063, -1000, 2345, -1000, -1000,
	6300, -1000, -22, 7981, 7981, 7981, 2632, -1000, -1000, -1000,
	-1000, -1000, 753, 144, 2167, 1063, -1000, -1000, 34676, -1000,
	-1000, -1000, 2165, 1062, -1000, -1000, -1000, 4285, 2331, 2331,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2343,
	-1000, -1000, 2323, 2323, 2323, 2264, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2340, 2340, 2341, 2341, 2340,
	-1000, 2332, 2711, -1000, 30, 1401, 473, 27635, 464, -1000,
	34676, 1722, 1459, 2545, 303, 2652, 34676, 239, 34676, 2339,
	2338, 2337, 292, 4285, 34676, 1036, -1000, 1198, 36876, -1000,
	34676, 1897, -1000, 1948, -1000, 1416, -1000, -1000, 2801, 1235,
	-1000, -1000, 2801, 1416, 1416, 1461, 34676, -1000, 2710, 37127,
	-1000, 34676, -1000, -1000, -1000, 700, -1000, 775, 563, 34676,
	1589, 775, 1588, 2336, -1000, -1000, 34676, 34676, 34676, 34676,
	-1000, -1000, 34676, -1000, 34676, 34676, 34676, 34676, -1000, 34676,
	34676, -1000, 34676, 1587, 1584, 2657, -1000, 1401, 1401, 725,
	-1000, -1000, 452, -1000, 1848, 1847, 1846, 1843, 2037, 2034,
	2033, 1401, 1401, 1842, 2029, 28176, 2028, 924, 1836, 1819,
	1818, 1840, 2027, 788, -1000, 2024, 1835, 1820, 1786, 34676,
	2333, 1984, -1000, -1000, 30, 1401, 233, 34676, 1458, 473,
	306, 1849, 16808, 34676, 25471, 25471, 25471, 25471, -1000, 2577,
	2576, -1000, 2564, 2561, 2568, 34676, 25471, 2332, -1000, 28176,
	-1000, -1000, -1000, 2567, 1210, 2599, 724, 7981, -1000, -1000,
	-67, -75, -1000, -1000, -1000, 27635, 2023, 409, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2838, 34676, 34676, 620,
	2164, -1000, 2799, -1000, 1047, -1000, -1000, 1192, -1000, 2799,
	1503, -319, 10223, 1390, 1471, -1000, 7981, 10223, 7981, -289,
	217, -291, -1000, -1000, -1000, 2015, -1000, -1000, -1000, 1811,
	-1000, 1793, 34, 57, 1576, -269, 6300, 316, 34676, -269,
	34676, 6300, -1000, 34676, 312, -269, -1000, 34676, 1792, -1000,
	-1000, -1000, 2805, 27635, 1948, 1324, 27094, -1000, 161, -1000,
	192, 460, 2014, -1000, 644, 96, -1000, 1456, 1997, -1000,
	-1000, -1000, 9655, -1000, -1000, -1000, -1000, 1897, 7981, 2158,
	-1000, 772, 772, 2150, -1000, 2331, 2331, -1000, 2264, 2323,
	2264, 772, 772, 2149, -1000, 1757, 2053, -1000, 2041, 2031,
	7981, -1000, 2146, 3240, 1027, -130, 23, 23, -1000, -1000,
	-1000, -1000, 23, 23, 23, 23, -1000, 23, 23, 23,
	23, 23, 23, 23, 23, 530, -1000, 34, 1897, 1897,
	-1000, -1000, 2634, -1000, 2012, 2011, 930, 4285, 665, 11881,
	2654, 2709, 305, 1880, -1000, -1000, -1000, 26553, 437, -1000,
	-1000, -1000, 550, 179, 1783, 425, -1000, 34676, 245, 2601,
	1453, 2010, 34676, -1000, -1000, -1000, -1000, -1000, 2652, -1000,
	893, 277, 12422, 2694, 2297, 2295, 12422, 12422, 12422, 285,
	1504, -1000, 524, 986, 1164, 25471, 34676, -1000, 24930, 2142,
	-1000, 890, 2801, -1000, 34676, -1000, 2801, 2801, 1416, -1000,
	305, -1000, 2638, 4285, -1000, 34676, -1000, 34676, -1000, 34676,
	34676, 563, 7981, 2638, 34676, 582, -1000, -1000, 877, 286,
	553, 553, 1040, -1000, 2705, -1000, -1000, -1000, 34676, -1000,
	-1000, -1000, -1000, -1000, -1000, 18972, 18972, 2724, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2008, 2007, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 34676, 1203, -1000, 1452, 1880, 26553, 1448, 1394, 2003,
	437, 1722, 1447, -1000, 1999, -1000, 979, 34676, 34676, -1000,
	1114, -1000, 1438, 2519, 2544, 2519, -1000, -1000, -1000, -1000,
	2573, -1000, 2565, -1000, -1000, 1114, -1000, -1000, -1000, -1000,
	-1000, 724, -1000, 2754, 775, 775, 775, 2125, -1000, -1000,
	-1000, 1031, 2121, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2797, 2792, 26012, 2797, -1000, -319, 1483, -1000,
	1546, 137, 1445, 34676, -1000, -1000, -1000, 2120, 2119, -275,
	60, 2790, 2788, 2835, -1000, 2115, 998, -269, -1000, -1000,
	974, -1000, -1000, -1000, -269, -1000, 974, -1000, -1000, 1948,
	-1000, 185, -1000, -1000, -1000, -1000, -1000, -1000, 85, -1000,
	34676, -1000, 1997, 1993, 95, -1000, 1897, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7981, -1000, -1000, -1000, 1996, -1000, -1000, 7981,
	2112, 1988, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2839, -1000, 2787, -275,
	-1000, -1000, -1000, -1000, -1000, -1000, 4285, -1000, 1496, 305,
	-180, -1000, 1987, 98, -1000, -1000, -1000, 1986, 1985, 1765,
	-1000, -1000, 1731, 1211, 113, -1000, -1000, -1000, -1000, -1000,
	-1000, 1849, 1762, 1437, -347, -1000, 2293, -1000, 1401, 1401,
	1401, 34676, 2110, 997, -1000, -1000, -1000, -1000, 305, 23848,
	12422, 2102, 2101, 2093, 538, 1409, 1400, -1000, 1758, 20061,
	25471, 24930, 1020, -1000, 1158, -1000, -1000, -1000, 2801, -1000,
	-1000, 2801, -1000, -1000, -1000, 34676, 235, 2292, -1000, 2290,
	2532, 321, 2289, 2279, 34676, 1942, -1000, 2638, 34676, 560,
	2646, -1000, -1000, -1000, -1000, -1000, 362, -1000, 34676, -1000,
	-1000, 1287, -1000, 18972, -1000, -1000, 1189, -1000, 1984, 1983,
	-1000, 98, 1976, 4626, -1000, -1000, 2601, 1975, -1000, 34676,
	979, 979, 2839, 34676, 6300, -1000, -1000, 7981, 2278, -1000,
	7981, -1000, -1000, -1000, -1000, -1000, 2276, 2635, -1000, -1000,
	-1000, -1000, -1000, -1000, 7981, 7981, -1000, -1000, 562, 10223,
	-292, 211, -1000, -1000, -1000, -277, 1968, -1000, -1000, 2785,
	1967, 1887, 34676, -1000, 974, 974, 890, -1000, -1000, -9,
	-1000, -1000, -1000, 1893, -1000, 1886, 23, -1000, 143, 7981,
	-277, -171, -1000, -1000, -180, -1000, 330, -1000, -1000, 307,
	-1000, -1000, 249, -1000, -1000, 1729, 493, -1000, -1000, -1000,
	1962, 1603, 1902, 23307, 18972, 19513, 1952, -1000, -197, 12422,
	-1000, 1166, -1000, 1401, 1401, 2088, 37343, 173, 37343, 862,
	1386, -1000, 1753, -1000, 1742, -1000, 2801, 1020, 1158, -1000,
	-1000, 1314, -1000, -1000, -1000, -1000, 235, -1000, -1000, 1597,
	9655, -1000, -1000, 1950, 19513, 642, 1429, 1425, 747, 2273,
	-1000, 405, 2834, -1000, -1000, -1000, 717, 2268, -1000, 1573,
	1555, -1000, 34676, -1000, 23307, 23307, 326, 326, 23307, 23307,
	2267, 553, -1000, -1000, 9655, -1000, -1000, -1000, -1000, 1401,
	1240, -1000, -1000, -1000, -1000, -1000, -1000, 1762, -1000, -1000,
	2764, -1000, -1000, 1897, 34676, 1897, 24389, -1000, 2783, 2782,
	1897, 875, -1000, -319, 34676, 34676, -279, 1726, -1000, 1944,
	42, -1000, -1000, 881, -282, 32, 53, -1000, -1000, -1000,
	2086, -1000, 456, -1000, -1000, -1000, 875, -279, 34676, -1000,
	386, -1000, -1000, 454, 1935, -1000, -1000, 241, -1000, -1000,
	-1000, -1000, -1000, 94, -1000, 1408, 1162, -1000, 2264, 7981,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23848, 1496,
	1496, -197, 523, 37275, -1000, 956, -1000, -9, 523, 435,
	248, -1000, 1724, -1000, -1000, 2839, -1000, -1000, -1000, 3545,
	-1000, -1000, -1000, -1000, -1000, -1000, 1926, 1924, -1000, -1000,
	-1000, -1000, -1000, 1718, 2263, -74, 2722, 1912, -1000, -1000,
	2260, 1156, 1155, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1124, 1110, 23307, -1000, -1000, 3545, 18972, 1401, -1000, -1000,
	1093, 1089, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2257,
	-1000, -1000, 2781, -1000, 1905, 569, 36, 53, -1000, 2778,
	41, 2774, 2772, -1000, -1000, 555, -270, 21, 20, 16,
	-1000, -1000, -1000, 7981, -1000, 2690, -1000, 155, -1000, 79,
	-1000, -1000, -1000, 1902, 1895, -1000, 23307, 2705, 1855, -1000,
	-1000, -1000, -1000, 309, 2771, 37343, -1000, 1401, -1000, 309,
	-1000, 289, -1000, 1355, -1000, 1717, -1000, 2764, -1000, -1000,
	2083, 7981, 2256, 1401, 1869, -167, 23307, 2531, 2530, 2520,
	2379, 1087, -1000, 18972, -1000, -1000, 22766, 34676, 1887, -1000,
	2251, 1688, 60, 38, 2770, -1000, 1887, 2769, 1887, 1887,
	1513, -1000, 14, 12, 10, -1000, -1000, -1000, -1000, 1894,
	-1000, -1000, -1000, -1000, 238, -1000, -1000, 2705, -1000, 2767,
	444, -1000, 18972, -1000, -1000, -1000, 1680, -1000, -1000, -1000,
	1844, -1000, 34676, -1000, 2543, -1000, 142, 1078, 238, 326,
	238, 326, 238, 326, 238, 326, 188, -1000, -1000, -1000,
	1077, -1000, -1000, 2720, 18431, 29, -1000, -1000, -1000, 1889,
	-1000, 1887, -1000, -1000, 555, -1000, -1000, -1000, -1000, -1000,
	1401, 1885, 266, -1000, -1000, -1000, 22225, 323, 349, 336,
	-1000, 500, -1000, -1000, -1000, 553, -1000, -1000, 2539, 2430,
	2809, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 34676, -1000, 34676, -1000, 1076, -1000, -1000, -1000, 1149,
	-1000, -1000, -1000, -1000, -1000, 1678, -1000, 34676, -1000, 34676,
	338, 1645, 9655, 2250, 9655, 2249, 346, 2247, -1000, -1000,
	2832, -1000, 2825, 732, 732, 238, 238, 238, 238, -1000,
	870, -1000, 1389, -1000, 21684, 34676, -1000, -1000, 1061, 2243,
	2766, -1000, 3157, 34676, 2843, 34676, 2237, 1388, 9655, -1000,
	-1000, -1000, 1720, 412, -1000, 34676, 5742, -1000, 907, -1000,
	-1000, 515, 343, -1000, 1037, -1000, 1011, 21143, 1643, 2773,
	-1000, -1000, -1000, -1000, -1000, 1897, 34676, 1001, -1000, 34676,
	322, -1000, -1000, -1000, 985, -1000, -1000, -1000, -1000, 515,
	2585, -1000, 1605, -1000, -1000, 37051, 660, -1000, -1000, 37051,
	332, -1000, 472, 1903, -1000, -1000, 966, -1000, 34676, 666,
	7981, -1000, 332, 37343, -1000, 7981, 959, -1000, 37343, 946,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 157, 2853, 233, 154, 3390, 73, 236, 211, 209,
	235, 3389, 3388, 2683, 2676, 3387, 3374, 3372, 3371, 3370,
	3369, 3368, 3367, 3366, 3365, 3364, 3362, 3361, 3360, 3359,
	3358, 3357, 3356, 3354, 3353, 3351, 3350, 3349, 3347, 3346,
	232, 3345, 3344, 3342, 3341, 3339, 3338, 3337, 3336, 3335,
	3334, 3333, 3329, 3328, 3327, 3316, 3315, 3314, 3312, 3311,
	3309, 3307, 3306, 3304, 3291, 3290, 3284, 3282, 3279, 3275,
	3273, 3270, 203, 3261, 2671, 3260, 3257, 3253, 3252, 3250,
	3249, 3248, 200, 3247, 3246, 3245, 3244, 3243, 3242, 3238,
	3235, 3234, 3232, 3230, 218, 3226, 3225, 3224, 3223, 3222,
	3221, 214, 3220, 152, 191, 3219, 3217, 3216, 3215, 3213,
	228, 215, 63, 3211, 43, 3210, 210, 3208, 135, 3205,
	131, 3203, 3202, 3201, 3199, 3198, 3197, 3194, 3193, 3192,
	3191, 3190, 3189, 3188, 3187, 3186, 3183, 80, 3181, 246,
	3180, 67, 3179, 3177, 109, 176, 178, 240, 2460, 244,
	242, 165, 150, 107, 3176, 2661, 3169, 143, 219, 138,
	24, 3167, 162, 3166, 136, 42, 30, 237, 125, 46,
	147, 108, 3164, 205, 95, 94, 3163, 3162, 169, 239,
	171, 3159, 112, 3158, 3155, 3154, 3151, 190, 185, 3150,
	3149, 116, 3148, 3147, 84, 3146, 66, 180, 146, 177,
	3145, 258, 110, 122, 102, 3143, 3142, 81, 3141, 3140,
	3139, 3138, 160, 3137, 3135, 124, 65, 3133, 3130, 3125,
	60, 3124, 44, 3123, 53, 3122, 64, 3121, 3119, 3115,
	3113, 3111, 3110, 3109, 3108, 3107, 3104, 3103, 68, 3100,
	3099, 15, 16, 18, 3098, 23, 3097, 149, 3096, 3095,
	3094, 82, 78, 3093, 79, 2, 45, 3091, 213, 128,
	90, 133, 3090, 422, 3089, 3088, 3086, 141, 3085, 843,
	3084, 3082, 3081, 3080, 3079, 104, 3078, 208, 47, 3077,
	88, 121, 3076, 36, 41, 186, 174, 3074, 3072, 3066,
	120, 172, 98, 29, 0, 3065, 139, 3064, 3062, 3060,
	241, 3058, 222, 197, 142, 212, 268, 226, 3057, 3052,
	55, 3050, 140, 61, 54, 119, 9, 19, 206, 3045,
	371, 161, 3044, 195, 3042, 188, 1, 129, 3041, 3040,
	26, 279, 3039, 3036, 3035, 106, 3033, 3031, 167, 74,
	3028, 3024, 3023, 3021, 34, 3020, 28, 25, 3019, 89,
	3018, 231, 3017, 182, 126, 166, 148, 134, 216, 221,
	71, 70, 3016, 1643, 130, 91, 17, 3014, 217, 3013,
	168, 114, 3012, 85, 3011, 230, 369, 198, 3010, 163,
	8, 40, 33, 3009, 10, 3007, 187, 199, 3006, 3005,
	21, 48, 3002, 31, 3001, 2999, 2998, 2996, 5, 2994,
	2992, 2991, 4, 7, 2990, 3, 196, 2975, 2974, 2973,
	2972, 56, 137, 2971, 115, 151, 158, 2970, 83, 2969,
	2968, 2967, 2517, 2966, 238, 2965, 2963, 2962, 2961, 2960,
	2959, 2958, 2957, 2956, 93, 38, 2955, 2954, 2953, 2950,
	77, 123, 2949, 2946, 2945, 2944, 35, 159, 2942, 20,
	2940, 32, 27, 37, 2938, 118, 2933, 12, 164, 2932,
	2931, 14, 2929, 2928, 11, 13, 2927, 2926, 105, 2924,
	86, 22, 145, 97, 2923, 2906, 76, 202, 127, 2902,
	2898, 227, 225, 193, 2897, 117, 224, 243, 2895, 204,
	2893, 2892, 2891, 2890, 2888, 2887, 1315, 2884, 2883, 229,
	69, 87, 99, 2882, 2880, 2879, 75, 144, 103, 96,
	50, 72, 2878, 100, 189, 2877, 175, 2876, 2875, 92,
	2873, 2870, 2869, 2867, 2866, 173, 2863, 2862, 170, 220,
	2861, 2860, 2858, 2857, 223, 322, 2856,
}

//line mysql_sql.y:10296
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 524, 532, 532, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 108, 522, 522, 522, 523, 523, 105, 125,
	124, 127, 127, 126, 126, 123, 123, 119, 122, 122,
	121, 121, 120, 115, 117, 117, 116, 118, 118, 106,
	94, 107, 467, 467, 466, 466, 465, 465, 419, 419,
	464, 464, 464, 463, 463, 463, 462, 462, 461, 461,
	460, 460, 458, 458, 459, 457, 456, 456, 456, 454,
	454, 454, 450, 450, 452, 451, 451, 453, 445, 445,
	448, 448, 446, 446, 446, 446, 449, 444, 444, 444,
	443, 443, 93, 93, 93, 365, 365, 92, 92, 379,
	379, 379, 379, 379, 377, 377, 377, 377, 377, 377,
	376, 376, 375, 375, 380, 380, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 83, 83, 83, 83,
	83, 88, 88, 88, 529, 529, 528, 528, 530, 530,
	530, 530, 531, 531, 86, 86, 86, 87, 374, 374,
	374, 84, 85, 85, 364, 364, 369, 369, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 373, 373, 373, 371, 371, 370, 370, 372, 372,
	77, 77, 77, 80, 79, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 78, 78, 78, 78, 78, 78,
	73, 73, 73, 73, 73, 72, 72, 74, 74, 361,
	361, 360, 89, 89, 90, 526, 526, 525, 527, 527,
	527, 527, 91, 97, 97, 97, 97, 97, 97, 97,
	96, 96, 99, 99, 98, 100, 82, 82, 82, 82,
	82, 82, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 492, 492, 492, 494, 494, 298, 299, 533, 301,
	297, 297, 297, 488, 488, 489, 490, 491, 491, 491,
	95, 11, 11, 11, 11, 11, 11, 11, 71, 76,
	246, 246, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 234, 234, 234, 229, 229, 229,
	229, 230, 230, 231, 231, 232, 232, 232, 232, 233,
	233, 291, 291, 251, 251, 251, 253, 253, 252, 250,
	248, 248, 248, 248, 248, 248, 249, 249, 249, 254,
	254, 69, 75, 75, 75, 505, 505, 70, 516, 516,
	422, 422, 312, 312, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	427, 428, 308, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 47, 50, 46, 46, 46, 350, 350, 45,
	534, 534, 286, 286, 58, 57, 49, 59, 60, 61,
	62, 63, 64, 44, 56, 56, 56, 56, 56, 56,
	56, 56, 67, 67, 439, 439, 536, 536, 536, 65,
	66, 421, 421, 421, 55, 54, 53, 52, 51, 51,
	43, 43, 42, 42, 48, 131, 132, 305, 305, 305,
	307, 307, 303, 535, 535, 393, 393, 306, 306, 41,
	41, 41, 41, 68, 304, 304, 285, 302, 302, 302,
	12, 12, 10, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 23, 24, 26, 358,
	358, 355, 25, 18, 17, 17, 20, 16, 16, 19,
	21, 22, 22, 9, 9, 9, 9, 13, 13, 14,
	152, 152, 202, 202, 500, 500, 496, 496, 497, 497,
	497, 498, 498, 499, 499, 101, 433, 433, 433, 433,
	433, 433, 8, 174, 174, 432, 432, 432, 432, 432,
	432, 362, 362, 477, 477, 477, 478, 173, 173, 168,
	168, 434, 434, 327, 479, 479, 442, 442, 441, 441,
	440, 440, 171, 171, 172, 172, 155, 155, 111, 111,
	447, 447, 447, 447, 455, 455, 418, 418, 238, 238,
	278, 278, 279, 279, 145, 145, 146, 146, 146, 146,
	146, 146, 485, 485, 487, 487, 486, 170, 170, 166,
	166, 167, 167, 167, 165, 165, 164, 163, 163, 162,
	160, 160, 160, 161, 161, 161, 178, 178, 148, 148,
	148, 147, 147, 147, 147, 147, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 149, 149,
	493, 493, 493, 423, 423, 423, 430, 430, 260, 260,
	261, 261, 259, 259, 150, 150, 151, 151, 151, 151,
	258, 258, 257, 153, 153, 159, 158, 158, 154, 154,
	154, 154, 268, 268, 267, 267, 267, 267, 104, 109,
	109, 110, 177, 177, 266, 265, 265, 265, 176, 176,
	175, 175, 169, 169, 157, 157, 157, 157, 264, 156,
	262, 521, 521, 520, 520, 519, 517, 517, 517, 518,
	518, 518, 518, 469, 469, 469, 469, 469, 292, 292,
	292, 296, 296, 295, 295, 295, 295, 295, 300, 7,
	7, 7, 7, 7, 7, 30, 30, 30, 30, 30,
	30, 30, 30, 30, 36, 186, 187, 37, 188, 188,
	189, 189, 190, 190, 191, 192, 193, 193, 193, 193,
	35, 179, 179, 180, 180, 181, 181, 182, 183, 183,
	183, 185, 184, 34, 34, 27, 138, 138, 139, 139,
	139, 139, 141, 141, 235, 235, 235, 140, 140, 142,
	142, 142, 501, 504, 502, 502, 506, 506, 506, 507,
	507, 507, 507, 508, 508, 28, 128, 133, 511, 511,
	511, 510, 510, 512, 512, 513, 513, 282, 282, 283,
	283, 136, 137, 137, 135, 130, 144, 144, 144, 144,
	144, 129, 134, 503, 509, 509, 509, 359, 359, 356,
	357, 357, 354, 353, 353, 353, 515, 515, 514, 514,
	514, 293, 293, 29, 349, 349, 351, 352, 352, 352,
	343, 343, 343, 343, 33, 347, 347, 348, 348, 348,
	348, 348, 344, 344, 346, 346, 342, 342, 342, 342,
	342, 32, 143, 143, 341, 341, 338, 338, 336, 336,
	337, 337, 335, 335, 335, 339, 339, 39, 39, 39,
	340, 340, 31, 31, 31, 113, 112, 112, 112, 281,
	281, 280, 280, 114, 38, 214, 214, 407, 407, 407,
	407, 407, 425, 425, 425, 408, 408, 408, 409, 409,
	409, 410, 410, 410, 410, 410, 424, 424, 426, 426,
	426, 381, 381, 382, 382, 382, 385, 385, 399, 399,
	400, 400, 398, 398, 405, 405, 404, 404, 403, 403,
	402, 402, 401, 401, 401, 401, 396, 396, 395, 395,
	383, 383, 383, 383, 383, 384, 384, 384, 394, 394,
	397, 397, 222, 222, 223, 223, 256, 256, 220, 220,
	221, 221, 221, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 475, 475,
	476, 225, 225, 236, 236, 236, 236, 236, 236, 224,
	224, 226, 226, 203, 203, 201, 201, 194, 194, 195,
	195, 196, 196, 196, 200, 200, 199, 199, 199, 199,
	197, 197, 198, 198, 198, 198, 198, 198, 367, 367,
	472, 472, 473, 473, 468, 468, 468, 471, 471, 471,
	471, 471, 474, 474, 474, 470, 470, 204, 276, 276,
	276, 294, 294, 294, 294, 275, 275, 275, 219, 219,
	218, 218, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 366, 366, 309, 309, 310, 310,
	245, 244, 244, 244, 244, 244, 242, 243, 241, 241,
	241, 241, 241, 240, 240, 239, 239, 239, 345, 345,
	237, 237, 228, 228, 228, 227, 227, 227, 406, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 274, 274, 274, 319, 319, 324, 324,
	484, 484, 483, 205, 205, 205, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 215, 215, 215, 390, 390,
	390, 390, 391, 391, 391, 391, 392, 392, 392, 388,
	388, 389, 389, 328, 329, 329, 431, 431, 386, 386,
	387, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	438, 438, 438, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 495,
	495, 495, 480, 480, 480, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 272, 272, 272, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 330, 330, 331, 331, 435, 435, 435, 435,
	435, 435, 436, 436, 437, 437, 437, 437, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 317, 269, 269,
	269, 332, 325, 325, 326, 326, 320, 320, 320, 320,
	320, 320, 320, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 321, 321, 323, 323, 334,
	334, 334, 333, 333, 333, 333, 333, 333, 333, 217,
	217, 217, 217, 314, 314, 314, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 207, 207,
	207, 207, 211, 211, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 212, 212,
	212, 212, 212, 210, 210, 210, 210, 210, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 102, 103, 103, 209, 277, 277,
	411, 411, 414, 414, 412, 412, 413, 415, 415, 415,
	416, 416, 416, 417, 417, 417, 420, 420, 284, 284,
	284, 290, 290, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 1, 7, 4,
	1, 3, 2, 4, 5, 5, 6, 5, 5, 3,
	2, 2, 1, 3, 4, 3, 7, 5, 8, 2,
	2, 1, 3, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 2, 1, 3, 2, 1,
	2, 2, 1, 2, 3, 2, 3, 3, 3, 1,
	1, 7, 7, 8, 8, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 2, 5, 5, 0, 2, 7,
	0, 1, 0, 1, 5, 5, 3, 3, 2, 4,
	4, 4, 4, 4, 1, 1, 1, 3, 3, 1,
	1, 1, 6, 8, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 4, 6, 7,
	4, 4, 7, 8, 3, 3, 3, 0, 2, 2,
	0, 2, 2, 1, 1, 1, 1, 0, 1, 4,
	4, 5, 4, 3, 1, 3, 1, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 4, 1,
	3, 1, 4, 6, 6, 4, 4, 4, 4, 3,
	6, 3, 5, 1, 1, 2, 2, 11, 8, 9,
	1, 3, 2, 4, 0, 2, 0, 1, 1, 1,
	1, 0, 1, 0, 1, 4, 2, 1, 5, 4,
	4, 2, 5, 1, 3, 2, 1, 5, 4, 4,
	2, 0, 5, 0, 1, 3, 3, 1, 3, 1,
	3, 1, 3, 4, 0, 1, 0, 1, 1, 3,
	1, 1, 0, 4, 1, 3, 2, 1, 0, 8,
	0, 4, 7, 4, 0, 2, 0, 2, 0, 2,
	0, 4, 1, 3, 1, 1, 5, 3, 4, 6,
	4, 5, 2, 3, 1, 3, 6, 0, 3, 0,
	1, 2, 4, 4, 0, 1, 3, 1, 3, 3,
	0, 1, 1, 0, 2, 2, 0, 2, 3, 3,
	3, 1, 3, 3, 3, 3, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 7, 7,
	1, 1, 1, 0, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 2, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 4,
	4, 3, 2, 2, 2, 3, 2, 3, 4, 1,
	3, 4, 0, 2, 1, 1, 2, 2, 0, 1,
	2, 4, 1, 3, 1, 3, 2, 3, 1, 4,
	3, 0, 1, 1, 2, 5, 2, 2, 2, 0,
	2, 3, 3, 0, 1, 3, 1, 3, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 7, 1, 1, 7, 1, 3,
	0, 1, 1, 3, 1, 3, 0, 1, 1, 1,
	12, 1, 3, 0, 1, 1, 3, 1, 1, 2,
	4, 1, 1, 9, 8, 7, 1, 2, 2, 3,
	3, 3, 0, 4, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 1, 0, 2, 7, 8, 8, 0, 3,
	3, 0, 2, 0, 3, 0, 5, 1, 3, 0,
	3, 3, 0, 2, 9, 6, 0, 2, 2, 3,
	3, 4, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 6, 0, 4, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 9, 10, 8,
	0, 2, 11, 9, 11, 2, 2, 4, 5, 1,
	3, 0, 3, 5, 10, 0, 2, 0, 3, 2,
	4, 3, 0, 2, 1, 0, 2, 3, 0, 2,
	3, 0, 3, 2, 4, 3, 0, 1, 0, 1,
	1, 0, 6, 0, 3, 5, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 5, 6, 5, 0, 3,
	0, 1, 0, 4, 1, 3, 3, 3, 0, 1,
	1, 3, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 5, 4, 1, 3,
	3, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 1, 1, 1, 7, 9, 7, 9,
	2, 1, 7, 9, 7, 9, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 3, 1, 3,
	5, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 2,
	3, 3, 2, 2, 1, 5, 6, 4, 1, 1,
	1, 5, 4, 1, 1, 2, 0, 1, 1, 2,
	5, 0, 1, 1, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 2, 2, 0, 3,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 3, 5, 2, 2, 2,
	2, 1, 1, 2, 5, 6, 6, 6, 1, 1,
	1, 1, 1, 4, 4, 4, 0, 2, 0, 1,
	1, 2, 4, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 2,
	5, 0, 1, 3, 0, 1, 0, 2, 0, 1,
	6, 8, 6, 6, 5, 5, 5, 6, 6, 6,
	6, 5, 6, 6, 6, 6, 6, 6, 6, 6,
	1, 1, 1, 4, 4, 6, 8, 6, 4, 5,
	4, 4, 4, 3, 4, 6, 6, 7, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 8, 4, 2, 3,
	2, 4, 2, 2, 4, 6, 2, 2, 4, 6,
	4, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 2, 3, 5, 1, 1, 3,
	0, 1, 0, 3, 0, 3, 3, 0, 3, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -524, -532, -2, -5, 587, -1, -4, -103, -77,
	-7, -105, -106, -8, -101, -9, -10, -12, -81, -96,
	-98, -100, -99, -40, -11, -95, -72, -73, -83, -89,
	-92, -93, -94, -107, -102, -104, -145, -108, 580, -78,
	-79, -80, -30, -29, -28, -27, -128, -133, 586, 435,
	13, 484, -13, -14, -485, -15, 254, -297, -298, -299,
	-301, -533, -41, -42, -43, -51, -52, -53, -54, -55,
	-65, -66, -67, -44, -45, -46, -49, -47, -58, -57,
	-59, -60, -61, -62, -63, -64, -48, -131, -132, -68,
	-50, -70, -69, -75, -71, -76, -130, -135, 229, -74,
	75, -84, -85, -86, -87, -88, -90, -91, 361, 367,
	424, 579, 60, -146, -148, 590, 157, 158, 160, 161,
	-31, -32, -33, -34, -35, -36, -38, -37, -39, 225,
	15, 520, -16, -19, -17, -20, -18, -25, -26, -24,
	-21, -23, -129, -22, -134, 249, 248, 37, 315, 316,
	317, 365, 247, 226, 14, 30, 41, 341, -147, 81,
	227, -149, 12, 592, -6, -3, -2, -115, -119, -123,
	-126, -127, -124, -125, -4, -103, 115, 239, 581, -294,
	357, 582, 584, 583, 84, 92, -287, -289, 361, 367,
	579, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 487, 566,
	567, 568, 569, 515, 339, 340, 517, 266, 290, 392,
	296, 303, 157, 176, 170, 198, 190, 165, 270, 308,
	271, 91, 160, 470, 105, 447, 421, 163, 285, 287,
	289, 292, 291, 293, 295, 272, 342, 186, 181, 284,
	268, 179, 273, 39, 274, 203, 275, 276, 522, 443,
	338, 449, 300, 419, 180, 444, 288, 446, 205, 209,
	461, 462, 174, 175, 451, 464, 202, 246, 42, 519,
	258, 465, 207, 201, 197, 473, 304, 302, 200, 173,
	196, 269, 64, 211, 210, 212, 415, 416, 417, 418,
	277, 278, 355, 460, 193, 182, 343, 166, 22, 468,
	253, 448, 368, 279, 297, 305, 206, 208, 260, 265,
	521, 423, 264, 301, 466, 178, 257, 286, 252, 469,
	167, 370, 280, 161, 294, 463, 472, 63, 383, 172,
	164, 243, 158, 262, 267, 281, 282, 283, 513, 307,
	306, 298, 194, 259, 199, 184, 171, 195, 159, 261,
	471, 384, 577, 341, 402, 192, 189, 263, 236, 467,
	450, 162, 406, 385, 187, 309, 573, 574, 575, 356,
	337, 310, 311, 185, 250, 441, 442, 314, 412, 330,
	386, 422, 393, 387, 218, 318, 453, 455, 204, 576,
	319, 320, 321, 445, 322, 323, 324, 325, 360, 55,
	57, 93, 95, -372, -370, -294, 579, 367, 361, 341,
	-188, -294, 591, -155, 38, -201, -294, -155, -74, -14,
	-13, -147, -148, -201, 233, -302, 23, 419, -82, 420,
	229, 81, -294, -9, -94, -8, -101, -72, -145, 424,
	-300, -294, 315, 315, -300, 233, -294, 264, 400, -422,
	239, -376, -349, 265, -375, -351, -378, -352, 31, 225,
	227, 226, 261, 15, 365, 235, 13, 12, 366, 247,
	24, 25, 27, 14, 367, 369, 28, 370, 373, 374,
	375, 41, 378, 379, 254, 84, 92, 87, 272, -187,
	-294, -326, -320, 112, 255, -322, -315, -316, -318, -464,
	-458, -313, 81, 139, 140, 147, 113, -317, -406, 35,
	115, 529, 485, -270, -271, -272, -273, -274, -294, -459,
	-457, 87, 96, 99, 102, 103, 101, 100, 151, 183,
	98, 88, 152, -148, 84, -480, 538, -288, 559, 566,
	567, 568, 569, 558, 60, -429, -437, 232, -435, 150,
	188, 250, 184, 13, 145, 412, 185, 535, 555, 487,
	539, 562, 531, 532, 533, 526, 527, 528, 530, 540,
	542, 554, -438, 550, 560, 561, 548, 563, 564, 565,
	86, 85, 553, 552, 541, 536, 537, 543, 525, 534,
	544, 545, 551, 556, 557, 349, 105, 350, 351, 477,
	342, 352, 239, 419, 69, 353, 354, 355, 356, 357,
	484, 358, 70, 359, 348, 254, 402, 360, 187, 204,
	489, 488, 490, 481, 478, 476, 479, 480, 482, 483,
	546, 547, 549, -109, -110, 571, -164, -165, -263, 11,
	6, 7, 8, 9, -522, 421, 521, 162, 159, -363,
	162, 111, 167, 166, -363, 318, 260, 362, -138, 236,
	339, 402, 322, 93, 264, -343, -341, -340, -424, 312,
	308, 234, -139, 244, 243, 106, 477, 232, 108, 376,
	303, 55, 57, -496, -497, 222, 223, 224, -487, 510,
	-486, -294, 351, 95, 26, 233, 362, 260, 455, 453,
	454, 456, 457, 458, 459, -56, -439, -421, 450, 449,
	-306, 442, 448, 440, 452, 443, 340, 324, 323, 225,
	588, 511, -284, 386, 422, 474, 475, 363, 423, 461,
	463, 444, 105, 191, 188, 236, 233, 339, 477, 402,
	93, 322, -496, 159, 461, 463, 264, 400, 40, -369,
	412, -368, -370, 462, 473, 85, 86, 460, -284, 105,
	441, 441, -165, -263, -164, -146, -148, -104, -485, 234,
	339, 402, 264, 235, 233, 514, 236, 477, 232, 315,
	362, 260, 322, 93, -423, -493, 31, -430, 219, 220,
	221, 32, 33, -1, 119, 592, -320, -320, -6, 593,
	-6, -320, -294, -294, 154, -207, -211, -208, -210, -209,
	-213, -212, 188, 189, 150, 192, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 30, 204, 250, 184,
	185, 186, 187, 205, 170, 190, 518, 213, 171, 214,
	172, 215, 173, 216, 174, 175, 217, 176, 179, 180,
	181, 182, 178, 153, 81, 153, 87, -171, 256, -201,
	153, -171, -165, -164, -165, -201, -275, -294, 421, 122,
	-82, -82, 420, -488, -489, -490, -492, 229, 420, 419,
	153, 272, 16, -300, -300, 79, -201, -351, 264, -376,
	-349, 35, 78, 154, 237, 154, 78, 81, 363, 339,
	402, 364, 477, 233, 376, 236, 264, 377, 339, 402,
	233, 236, 477, 264, 339, 233, 236, 402, 264, 377,
	440, 441, 236, 26, 368, 371, 372, 441, -443, 473,
	154, 111, 108, 109, 110, -320, 129, -333, 122, 123,
	124, 125, 126, 127, 128, 136, 135, 146, 139, 140,
	141, 142, 143, 144, 145, 137, 138, 132, 112, 130,
	134, 131, 114, -148, -320, -326, 60, -318, -318, -318,
	-318, -406, -324, -320, 81, 81, 153, 100, 87, -320,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, -436, 81, 81, -330, -331, 81, 81, -313,
	-275, 81, 87, 87, 81, 81, 81, 87, -331, -331,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, -165, 154, 81, -111, 38, -167, 21, -149, -148,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 96,
	466, 520, 165, 166, 167, -186, -294, -188, -179, -294,
	236, -139, 108, -338, 239, -338, -338, -338, -338, -338,
	235, -338, 514, 513, 233, 233, 233, -338, 484, 122,
	122, 58, -498, 169, 154, -487, -170, 81, -305, 130,
	134, -305, 23, 262, 262, 262, -305, 302, -534, -535,
	16, 132, -303, -535, -303, -303, -305, -536, 235, 451,
	42, 263, 262, -166, -167, -166, 445, 441, -393, 446,
	447, -307, -535, -306, -305, -305, -306, -305, -305, -305,
	233, 236, 477, 322, 589, -534, -534, 30, 30, -422,
	-201, -422, 511, -285, -294, -422, -422, -422, -499, 238,
	-529, -528, 464, -531, 466, 159, -370, 159, -370, -351,
	264, 264, 154, 122, 23, -371, 122, 133, -370, -370,
	-371, -371, -224, 40, -293, 150, -294, 87, -224, 40,
	-526, -525, -201, -166, -149, -148, 82, 82, 82, -422,
	-422, -422, -422, -422, -424, -422, -422, -422, -422, -300,
	-179, -188, 239, -422, -422, -150, -151, 141, -320, -294,
	-150, -3, -117, -116, 116, 117, 119, 582, 357, 581,
	585, 579, -370, 40, -417, 384, 383, -411, -413, 81,
	-412, 81, -412, -412, -412, 81, 81, -414, 81, -414,
	-414, -411, -415, 81, -415, -416, 81, -416, -415, -294,
	-325, -326, -294, 38, -432, 60, -145, 81, 30, 81,
	-294, -433, 60, -145, 81, 30, -166, -111, -167, 153,
	96, 87, -82, 82, 154, -491, 102, 103, -494, 202,
	194, -294, -97, 87, -7, -8, -9, -10, -40, -72,
	-145, -460, -458, 81, 31, 411, 78, 16, -377, 233,
	477, 362, 260, 236, 339, -375, -358, -355, -353, -293,
	-351, -354, -353, -380, -275, 441, -112, 425, 314, -320,
	-320, -320, -320, -320, 101, 112, 337, 102, 103, -315,
	-334, 31, 310, 311, -316, -316, -316, -316, -316, -316,
	-316, -316, -316, -316, -316, -316, -323, -332, -406, 81,
	132, 130, 134, 131, 114, -318, -318, -316, -316, 82,
	154, -484, -483, 116, -320, -320, -294, -481, -482, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	353, 348, 354, 352, 342, 360, 355, 356, 187, 508,
	509, 502, 503, 504, 505, 506, 507, -325, -325, -320,
	-481, -325, -269, 32, 31, -326, -326, -326, 82, -320,
	-495, 335, 334, 336, -168, -294, -325, 82, 82, 82,
	96, -326, -326, -325, -316, -325, -482, -269, -269, -269,
	141, -326, -326, -269, -269, -269, -269, 141, -269, -269,
	-269, -269, -269, -269, -269, -269, 82, 82, 82, -166,
	-110, -441, -440, -320, 40, 572, -111, -320, -163, -162,
	-320, -523, 87, 467, 468, 163, 166, 165, 34, 81,
	81, 153, -338, 484, -201, 112, -501, -294, -359, -356,
	-353, -294, -294, -349, -294, -294, -338, 514, -338, -338,
	-338, -201, -235, 52, 53, 54, -353, -140, 55, 56,
	-499, -486, 34, -169, -294, -259, 17, -318, -318, -353,
	264, -534, -305, -305, -286, -285, -307, -302, -307, -307,
	-259, -535, -305, -305, -307, -303, -259, -294, 441, -259,
	-259, -393, -304, -294, -304, -338, -285, -286, -286, -201,
	-246, -247, 230, 346, 347, 228, 226, 11, 227, -255,
	303, -339, 485, -230, -231, 76, 41, -233, 388, 381,
	266, 270, 91, 271, 421, 272, 235, 274, 275, 276,
	291, 293, 246, 277, 278, 279, 412, 280, 158, 292,
	281, 282, 283, 364, -225, 6, 325, 40, 50, 51,
	434, 433, 523, 520, 267, -501, -501, 30, 30, -359,
	-294, -294, -158, -153, -157, -154, -159, -262, -264, -156,
	81, -201, -148, -294, 154, 465, 467, 468, -529, -371,
	-529, -371, 31, 411, -374, 411, 31, -349, -368, 461,
	463, -364, 87, 412, -354, -373, 78, 150, -440, -371,
	-371, -373, -373, 149, 154, -527, 466, 467, 222, -111,
	-203, -201, -501, -358, -349, -294, -422, -203, -203, -294,
	-294, 81, 35, -294, -294, -258, 154, -257, 16, -295,
	-294, 34, 87, 153, -258, -118, -116, 118, -320, -6,
	581, -320, -6, -6, -320, -6, -320, -420, 385, 96,
	96, -277, 87, -277, 96, 96, 96, 82, 87, -362,
	78, -434, -327, -479, 571, -173, 82, -168, -477, -478,
	-168, -172, -294, -434, -173, 82, -477, -111, -111, -294,
	23, -82, -489, 153, 154, -169, -377, -357, -354, -379,
	141, -294, -365, 154, 520, 596, 85, 237, -515, -514,
	403, 82, 154, -444, 238, 484, 87, 594, 218, 101,
	337, 102, 103, -406, -326, -323, -318, -318, -316, -316,
	-321, 251, -321, 111, -320, -319, -483, 118, -320, 34,
	154, 79, 153, 82, 82, 16, 16, 82, -320, 82,
	82, 82, 82, 16, 16, -320, 82, 153, 82, 82,
	82, 82, 79, 82, 154, 82, 154, -326, -320, -326,
	82, 82, 82, -320, -320, -320, -326, 82, -320, -320,
	-320, -320, -320, -320, -320, -320, -387, 436, -387, -387,
	154, 82, 87, 154, 22, 154, -160, 36, 37, 164,
	167, 167, 166, -187, -189, -190, -191, -192, -193, 132,
	155, 156, -180, -181, -182, -183, -207, -275, 189, 192,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 250, 184, 185, 186, 187, 205, 170, 190, 171,
	172, 173, 174, 175, 176, 179, 180, 181, 182, 178,
	-294, -201, -170, 35, -504, 389, -516, 154, 40, -514,
	477, -136, 314, -342, 79, -143, 16, -201, -338, -201,
	-201, -201, -214, 34, 16, -152, -202, -294, 81, 82,
	154, -320, -350, 79, -294, -286, -259, -259, -201, -294,
	-259, -259, -305, -307, -307, -303, 153, -285, -170, 154,
	-200, -291, -197, -199, 241, -310, -198, 244, -473, 242,
	240, 106, 245, 299, 107, 235, -291, -291, 241, -234,
	237, 34, -291, -249, 235, 299, 242, 20, -248, 235,
	107, -294, 241, 245, 240, -290, 122, -284, 149, 237,
	42, 364, -290, 524, -290, -290, -290, -290, -290, -290,
	-290, 273, 273, -290, -290, -290, -290, -290, -290, -290,
	-290, -290, -290, -290, 159, -290, -290, -290, -290, -290,
	-290, 81, 268, 269, -505, 389, 30, 345, 345, -516,
	30, -144, 339, 30, -265, -266, -267, -268, 67, 71,
	73, 68, 69, 70, 74, 30, 154, -292, -296, 34,
	-294, 87, -292, -148, -153, -158, -292, 81, -528, -530,
	469, 466, 472, -373, -373, 237, 81, 122, -373, -373,
	40, -293, -525, 473, 467, -178, 23, 154, 78, -203,
	-180, -188, -259, -151, -153, -294, 87, -294, 141, -259,
	119, -6, 117, -122, -121, -120, 120, 579, 585, 119,
	119, 119, 82, 82, 82, 154, 82, 82, 82, 154,
	82, 154, -447, 446, 39, 154, 81, 82, 154, 60,
	154, 122, 82, 154, 82, 60, -178, 153, 421, -294,
	-458, 82, -379, 154, 237, 153, 153, -355, 367, -293,
	-357, 20, 520, -275, 38, -281, -280, 87, 594, 82,
	-321, -321, 111, -318, -315, 82, 119, -320, 117, -205,
	-207, 383, 384, -206, -212, 150, 188, 250, 187, 186,
	184, 383, 384, -224, -294, -320, -320, 82, -320, -320,
	16, -294, -224, -316, -320, -165, 82, 82, -386, -387,
	-386, -386, 82, 82, 82, 82, -386, 82, 82, 82,
	82, 82, 82, 82, 82, 81, -440, -447, -320, -320,
	-162, -161, 43, 167, 375, 82, 154, -275, 82, 154,
	-207, -170, 34, -507, 448, 391, 401, -290, -312, -311,
	341, 41, -427, 412, 397, 398, -356, 264, -294, -513,
	94, 122, 78, 329, 330, 331, 332, -336, -337, -335,
	-339, -501, 81, -222, 520, -201, 81, 81, 81, -407,
	319, -207, -201, -152, -294, 16, 154, -500, 153, -1,
	-294, -349, -305, -259, -535, -259, -305, -305, -307, -294,
	34, -247, -204, -275, -198, -472, -473, -338, -294, 107,
	-472, 107, 81, -204, -275, -275, -250, -304, -275, -294,
	-294, -294, -253, -252, -275, -294, -294, -294, 107, 107,
	-229, 40, 47, 48, 49, -290, -290, 191, -232, 40,
	411, 413, 414, 96, 96, 96, 96, 87, 87, 87,
	-290, -290, 96, 87, -296, 87, -474, 166, 44, 45,
	96, 96, 96, 96, 40, 87, -236, 40, 284, 288,
	285, 286, 287, 87, 96, 40, 96, 40, 96, 40,
	-294, 81, -475, -476, 87, -507, -290, 345, -370, 122,
	-312, -512, 314, -137, 91, 31, -174, 230, 227, -501,
	-361, -360, -275, -157, -157, -157, -157, 67, 67, 67,
	72, 67, 72, 67, -267, -361, -159, -170, -296, 82,
	-521, -520, -519, -517, 75, 238, 76, -325, 466, 470,
	471, -357, -308, 87, -364, 14, -201, -201, -426, 294,
	295, 82, -261, 18, 153, -261, 115, -6, -118, -120,
	-320, -6, -320, 581, 357, 582, 87, 96, 96, -455,
	431, 426, 428, 107, -327, -442, -441, 60, -145, -168,
	-434, -478, -440, -294, 60, -145, -434, -294, 96, 16,
	-354, -349, 141, 141, -294, 368, -365, 87, 390, 87,
	233, 595, 154, 122, -281, -315, -320, 82, -215, 175,
	174, -215, 82, -412, -412, -411, -414, -411, -215, -215,
	82, 82, 23, 82, 82, 82, -320, 82, 82, 154,
	-431, 486, -386, -386, -386, -386, -386, -386, -386, -386,
	-386, -386, -386, -386, -386, -386, -329, -328, 256, -455,
	44, 45, 87, 87, -191, -207, 231, -182, 40, 34,
	-145, -508, 91, -502, 87, -294, -509, 91, 392, 152,
	343, 40, 393, 394, 409, 338, 96, 96, 399, -503,
	-294, -144, -511, 51, 122, 87, -201, -335, -284, 149,
	275, 322, -194, -195, -196, -204, -197, -199, 34, 81,
	81, -194, -194, -194, -408, 321, 20, 96, 140, -171,
	79, 153, -153, -202, -294, 141, 82, -259, -294, -259,
	-259, -305, -145, -251, 44, 46, -207, -470, -294, -468,
	-470, -294, -468, -468, -338, -320, -251, -204, 237, 30,
	227, -254, 327, 328, -366, 300, 112, -366, 154, -160,
	-294, -224, -224, 30, 87, 87, -203, 82, 154, 122,
	-508, -502, 122, -371, 87, -509, -513, 122, 87, 154,
	-174, -174, -259, 154, 122, -176, -175, 78, 79, -177,
	78, -175, 67, 67, -259, -519, -518, 23, -473, -473,
	-473, 82, 82, -260, 19, 20, 141, -260, 119, 117,
	119, 119, -294, 82, 82, -418, 573, -451, -453, 426,
	20, 20, 14, 82, -434, -434, -349, -365, 412, -201,
	-280, 87, 595, -320, 82, -320, 82, 87, -165, 20,
	-418, -184, -207, -313, -145, -141, 520, 87, -506, 403,
	87, 87, 96, 40, 96, 152, 395, -428, -137, -510,
	91, 122, 594, 81, -290, -290, -290, -294, 82, 154,
	-145, -223, -256, -294, 87, -194, 82, 82, 82, -409,
	255, 96, 140, 96, 140, 96, -292, -153, -294, -259,
	-500, 153, -259, -259, -275, -219, -218, -216, 101, 112,
	40, 381, -217, 91, 149, 289, 292, 291, 267, 290,
	-245, -309, 78, 387, 327, 328, -339, 573, 515, 240,
	106, 107, 369, -310, 81, 81, 79, 309, 81, 81,
	-470, 82, -251, -275, 40, -254, 40, 300, -252, 149,
	-224, 82, -476, 87, -506, 87, -373, -511, 87, -501,
	-165, -360, -440, -320, 81, -320, 81, 67, 11, 18,
	-320, -326, 239, -6, 582, 357, -238, 574, 87, 20,
	87, -449, 87, -361, -114, -445, -393, 82, 82, -386,
	-389, -388, -392, 432, 301, 439, -326, -238, 519, -141,
	-142, 59, 473, 20, 520, 342, 40, 96, 40, 396,
	87, 102, 103, -282, -283, 87, -344, -346, -275, 81,
	-224, -226, -293, 150, 87, -222, -196, 82, 154, -290,
	-290, 82, -220, -221, -255, -339, -113, -112, -220, -410,
	158, 96, 140, 96, 96, -259, -259, -216, 101, -316,
	87, -226, -227, 40, 288, 284, 122, 122, -228, 40,
	268, 269, -237, 81, 299, 14, 191, 81, 107, 107,
	-201, -344, -344, -471, 329, 330, 331, 333, 332, -471,
	-344, -344, 81, -367, -366, -316, -290, 149, -510, -166,
	-169, -469, -294, 240, 20, 20, -294, -294, -278, 575,
	96, 87, 428, -419, 576, -454, 431, -448, -446, 426,
	427, 428, 429, 82, -391, 114, 395, 399, -314, -317,
	96, 99, 183, 152, -278, -185, -294, 299, 87, 390,
	87, 342, 595, 154, 122, 82, 154, -411, -320, -256,
	-313, -313, -222, -381, 256, 154, -255, -284, -114, -381,
	-425, 166, 320, 520, 96, 140, 96, -165, 87, 87,
	96, 81, -435, 30, 87, -345, 81, 82, 82, 82,
	82, -344, -224, -290, 82, 82, 154, 81, 20, 87,
	-456, 238, -452, -453, 430, -446, 20, 428, 20, 20,
	-390, -391, 399, -314, -317, 571, 437, 437, 437, 34,
	368, 412, -283, 87, -347, -346, -160, 82, -382, 308,
	20, -255, -290, -382, 320, 96, 140, 96, -166, 82,
	-320, -330, -290, 82, -240, -239, 516, -344, -347, 79,
	-347, 79, -347, 79, -347, 79, 82, -224, -294, 240,
	-279, -294, -449, -463, 81, 96, -451, -450, -452, 20,
	-449, 20, -449, -449, 111, 438, 438, 438, 87, -348,
	246, 91, 520, 327, 328, -160, 20, -383, 301, 302,
	-384, -397, 304, -224, 96, 82, -294, -244, -242, -243,
	78, 444, 297, 298, 82, -471, -471, -471, -471, -245,
	82, 154, -467, 30, 82, -462, -461, -276, -457, -294,
	431, 432, 87, -449, -390, -290, 87, 326, -275, 81,
	-395, 305, 81, -393, 81, -393, 107, 330, -366, -243,
	78, -242, 78, 15, 14, -347, -347, -347, -347, -294,
	-466, -465, -464, 82, 154, 153, 96, -294, -380, -385,
	306, 96, -316, 81, -316, 81, -394, 303, 81, -241,
	294, 295, 30, 166, -241, 154, 122, -461, -294, 82,
	-399, 81, 20, 82, -380, 82, -380, 81, 122, -316,
	101, 40, 296, -465, 40, -320, 153, -400, -398, 256,
	-384, 82, 82, 82, -380, 96, 82, -294, 82, 154,
	-294, -396, 307, 82, -398, -401, 60, 96, -405, -402,
	81, -255, 258, 132, -405, -255, -404, -403, 306, 259,
	81, 82, 154, -294, 255, 81, -326, -403, -402, -326,
	82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 819, 820, 821, 822, 823, 824, 0, 0,
	0, 0, 593, 594, 0, 562, 0, 0, 0, 0,
	0, 0, 453, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 351, 352, 353, 354, 355, 356, 357, 0, 285,
	281, 206, 207, 208, 209, 210, 292, 293, 430, 0,
	0, 0, 0, 674, -2, 53, 274, 0, 265, 265,
	825, 826, 827, 828, 829, 830, 831, 832, 833, -2,
	606, 0, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 340, 341, 342, 336, 337,
	339, 338, -2, 0, 606, 0, 0, 0, 694, 0,
	0, 711, 733, 23, 0, 7, 9, 10, 11, 12,
	13, 14, 15, 16, 17, 18, 0, 0, 19, 0,
	19, 0, 0, 0, 1181, 1182, 1183, 1184, -2, 1672,
	1650, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811,
	1812, 1813, 1814, 0, 258, 256, 1650, 1672, 1732, 1765,
	0, 838, 0, 652, 0, 657, 1135, 652, 286, 595,
	596, 694, 694, 560, 0, 322, 0, 1663, 326, 0,
	0, 0, 557, 316, 317, 318, 319, 320, 321, 0,
	0, 818, 0, 0, 312, 0, 280, 1723, 0, 0,
	0, 0, 0, 0, 150, 944, 152, 946, 156, 163,
	0, 0, 168, 169, 172, 173, 174, 175, 176, 0,
	180, 0, 182, 185, 0, 187, 188, 0, 191, 192,
	193, 0, 203, 204, 205, 947, 948, 949, -2, 81,
	836, 1584, 1474, 0, 1481, 1482, 1493, 1504, 1261, 1262,
	1263, 1264, 0, 0, 0, 0, 0, 1271, 1272, 0,
	1288, 1829, 0, 1278, 1279, 1280, 1281, 1282, 90, 102,
	103, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 0, 1534,
	1535, 1536, 1447, 1248, 1181, 0, 1838, 0, 1858, 1863,
	1864, 1865, 1866, 1857, 0, 0, 1432, 0, 1422, 0,
	0, -2, -2, 0, 0, 1790, -2, 1835, 1854, 1862,
	1839, 1861, 1831, 1832, 1833, 1826, 1827, 1828, 1830, 1840,
	1842, 1853, 0, 1849, 1859, 1860, 0, 0, 0, 0,
	104, 105, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1438, -2, 1440, 1441, 1443,
	-2, 1445, 1446, -2, 1449, 1450, 1451, -2, -2, 1454,
	1455, 1456, 1457, 1458, 1459, 1462, -2, -2, -2, -2,
	1434, 1435, 1436, 1437, 1426, 1427, 1428, 1429, 1430, 1431,
	-2, -2, -2, 694, 769, 0, -2, 0, 0, 0,
	716, 719, 722, 725, 0, 54, 55, 275, 276, 264,
	266, 0, 270, 0, 263, 0, 0, 0, 0, 976,
	976, 976, 976, 976, 976, 0, 976, 0, 0, 0,
	0, 976, 866, 951, 952, 953, 974, 975, 0, 1027,
	0, 0, 0, 611, 607, 608, 609, 610, 682, 0,
	684, 687, 537, 537, 484, 0, 0, 0, 537, 0,
	498, 490, 0, 0, 0, 537, 0, 0, 689, 689,
	0, 540, 547, 537, 537, -2, 537, 537, 537, 0,
	0, 504, 505, 506, 490, 490, 509, 510, 511, 522,
	523, 548, 1608, 0, 0, 430, 0, 430, 0, 430,
	430, 430, 613, 1760, 1670, 1737, 1723, 0, 0, 231,
	1790, 236, 0, 1671, 1686, 0, 0, 1704, 0, -2,
	0, 302, 689, 0, 695, 0, 694, 0, 0, 430,
	430, 430, 430, 430, 1026, 430, 430, 430, 430, 0,
	0, 0, 430, 430, 0, 0, 734, 735, 730, 731,
	732, 736, 737, 5, 6, 19, 0, 0, 0, 0,
	0, 0, 60, 59, 0, 1585, 1603, 1539, 1540, 1541,
	1590, 1543, 1594, 1594, 1594, 1594, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 0, 0, 1583, 1563, 1592,
	1592, 1592, 1590, 1587, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1597, 1597,
	1600, 1600, 1597, 0, 1472, 0, 0, 0, 0, 656,
	0, 0, 689, -2, 0, 561, 323, 1185, 0, 0,
	327, 328, 0, 0, 343, 0, 346, 331, 332, 333,
	0, 130, 0, 314, 315, 0, 0, 282, 0, 0,
	0, 431, 0, 0, 0, 0, 0, 0, 160, 157,
	164, 167, 177, 184, 0, 196, 198, 201, 158, 165,
	170, 171, 178, 199, 159, 161, 162, 166, 200, 202,
	179, 183, 197, 181, 186, 189, 190, 195, 0, 131,
	0, 0, 0, 0, 0, 1480, 0, 0, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 1474, 0, 0, 1267, 1268, 1269,
	1270, 1273, 0, 1289, 0, 0, 0, 1533, 1537, 0,
	1472, 1472, 0, 1472, 1468, 0, 0, 0, 0, 0,
	0, 1472, 1408, 0, 0, 1410, 1423, 0, 0, 1412,
	1413, 0, 1416, 1417, 1472, 0, 1472, 1421, 1404, 1405,
	0, 1468, 1468, 1468, 0, 0, 1468, 1468, 1468, 1468,
	1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468, 0, 0,
	0, 689, 0, 0, 677, 0, 658, 0, 713, 715,
	0, 717, 718, 720, 721, 723, 724, 726, 727, 56,
	0, 0, 268, 0, 273, 0, 835, 0, 0, 851,
	976, 867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 976, 0, 976, 976, 976, 0, -2, 0,
	0, 0, 613, 612, 0, 683, 0, 0, 742, 0,
	0, 483, 0, 490, 537, 537, 496, 497, 492, 491,
	543, 544, 540, 0, 540, 540, 742, 0, 516, 517,
	518, 537, 537, 524, 690, 525, 526, 540, 0, 545,
	546, 742, 0, 0, 742, 742, 0, 534, 535, 536,
	0, 0, 976, 0, 553, 492, 492, 1609, 1610, 0,
	985, 0, 0, 0, 556, 0, 0, 0, 0, 614,
	211, 214, 0, 217, 0, 1760, 0, 1760, 0, 224,
	0, 0, 0, 0, 0, 0, 254, 255, 0, 0,
	0, 0, 245, 248, 1129, 1130, 941, 942, 249, 250,
	294, 295, 0, 658, 712, 714, 708, 709, 710, 0,
	0, 0, 0, 0, 430, 0, 0, 0, 0, 589,
	0, 591, 0, 0, 0, 750, 744, 746, 813, 90,
	750, 8, 77, 74, 0, 19, 0, 0, 19, 19,
	0, 19, 259, 0, 1606, 1604, 1605, 1542, 1591, 0,
	1568, 0, 1569, 1570, 1571, 0, 0, 1564, 0, 1565,
	1566, 1567, 1558, 0, 1559, 1560, 0, 1561, 1562, 257,
	0, 1473, 839, 0, 631, 644, 626, 0, 633, 0,
	1136, 615, 644, 617, 0, 633, 658, 680, 658, 0,
	324, 0, 329, 0, 0, 345, 347, 348, 349, 334,
	335, 558, 310, 311, 303, 304, 305, 306, 307, 308,
	309, 313, 100, 0, 283, 284, 0, 0, 0, 144,
	145, 146, 147, 148, 149, 151, 135, 579, 581, 933,
	945, 0, 936, 0, 154, 194, 127, 0, 0, 1475,
	1476, 1477, 1478, 1479, 1483, 0, 1485, 1487, 1489, 1491,
	0, 1509, -2, -2, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1494, 1507, 1508, 0,
	0, 0, 0, 0, 0, 1505, 1505, 1500, 0, 1265,
	0, 1286, 1290, 0, 0, 0, 91, 1467, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 0, 0, 1474,
	0, 0, 0, 1469, 1470, 0, 0, 0, 1363, 0,
	0, 1369, 1370, 1371, 0, 639, 0, 1433, 1409, 1424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 768,
	770, 0, 648, 650, 651, 0, 678, 691, 696, 697,
	700, 52, 57, 277, 278, 0, 0, 272, 0, -2,
	853, 0, 0, 868, 687, 0, 0, 882, 428, 927,
	0, 0, 0, 943, 966, 972, 0, 976, 0, 0,
	0, 1005, 869, 874, 875, 876, 870, 871, 877, 878,
	0, 685, 0, 0, 782, 482, 0, 538, 539, 487,
	1723, 492, 742, 742, 499, 493, 500, 542, 501, 502,
	503, 0, 742, 742, 537, 540, 527, 541, 540, 530,
	531, 0, 549, 554, 550, 0, 552, 507, 508, 687,
	359, 360, 401, 401, 401, 384, 401, 0, 0, 372,
	1611, 0, 0, 0, 0, 381, 1611, 0, 1611, 1611,
	1611, 1611, 1611, 1611, 1611, 0, 0, 1611, 1611, 1611,
	1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611, 0, 1611,
	1611, 1611, 1611, 1611, 1115, 1611, 0, 986, 391, 392,
	393, 394, 399, 400, 0, 425, 0, 0, 0, 428,
	0, 916, 755, 0, 756, 757, 753, 784, 808, 808,
	0, 808, 788, 1135, 0, 0, 222, 223, 212, 0,
	213, 0, 225, 226, 0, 228, 229, 230, 237, 1670,
	1737, 232, 234, 0, 0, 238, 251, 252, 253, 0,
	0, 243, 244, 0, 0, 297, 298, 300, 0, 706,
	576, 1133, 577, 578, 582, 0, 0, 585, 586, 587,
	588, 853, 0, 921, 922, 742, 0, 751, 0, 747,
	814, 0, 816, 0, 742, 0, 75, 19, 0, 68,
	65, 0, 0, 0, 0, 0, 1586, 1538, 1607, 0,
	0, 0, 1588, 0, 0, 0, 0, 58, 660, 622,
	0, 625, 641, 0, 645, 0, 0, 637, 630, 634,
	0, 0, 654, 616, 0, 0, 621, 706, 681, 1186,
	0, 330, 344, 0, 0, 0, 0, 138, 930, 0,
	139, 143, 133, 0, 0, 0, 935, 0, 932, 937,
	0, 153, 0, 0, 128, 129, 996, 1001, 0, 1484,
	1486, 1488, 1490, 1492, 0, 1495, 1505, 1505, 1501, 0,
	1496, 0, 1498, 0, 1475, 0, 1291, 0, 0, 0,
	0, 0, 0, 1353, 1354, 0, 0, 1358, 0, 1360,
	1361, 1362, 1364, 0, 0, 0, 1368, 0, 1407, 1425,
	1411, 1414, 0, 1418, 0, 1420, 0, 694, 0, 0,
	1328, 1328, 1328, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 1283, 0, 1284, 1285,
	0, 771, 660, 0, 0, 0, 703, 701, 702, 279,
	267, 269, 0, 0, 0, 841, 842, 844, 0, 847,
	848, 849, 0, 854, 855, 857, 858, 0, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1655,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	852, 687, 0, 977, 889, 1611, 432, 0, 0, 929,
	0, 905, 0, 0, 0, -2, 0, 1072, 0, 0,
	0, 0, 1007, 0, 0, 0, 600, 604, 23, 688,
	0, 743, 485, 0, 486, 537, 494, 495, 742, 1135,
	519, 520, 742, 537, 537, 540, 0, 551, 0, 985,
	362, 0, 1144, 1145, 402, 0, 1151, 1160, 976, 1218,
	0, 1160, 0, 0, 1162, 1163, 0, 0, 0, 0,
	385, 386, 0, 371, 0, 0, 0, 0, 370, 0,
	0, 412, 0, 0, 0, 0, 1612, 1611, 1611, 0,
	379, 380, 0, 383, 0, 0, 0, 0, 0, 0,
	0, 1611, 1611, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1106, 0, 0, 0, 0, 0,
	0, 0, 1121, 1122, 889, 1611, 0, 0, 0, 432,
	903, 912, 0, 0, 0, 0, 0, 0, 775, 0,
	0, 774, 0, 0, 0, 0, 0, 687, 809, 0,
	811, 812, 786, -2, 0, 755, 791, 1472, 215, 216,
	0, 0, 221, 239, 241, 0, 0, 0, 240, 242,
	246, 247, 296, 299, 301, 676, 0, 0, 0, 1028,
	0, 592, 740, 745, 752, 815, 817, 91, 748, 740,
	0, 78, 19, 77, 69, 70, 0, 19, 0, 0,
	0, 0, 1596, 1595, 1581, 0, 1582, 1593, 1598, 0,
	1601, 0, 664, 0, 0, 644, 646, 0, 0, 644,
	0, 0, 653, 0, 0, 644, 679, 0, 0, 559,
	101, 350, 0, 0, 0, 0, 0, 580, 0, 934,
	135, 0, 0, 155, 0, 0, 999, 0, 1001, 1471,
	1497, 1499, 0, 1506, 1502, 1266, 1274, 1287, 0, 0,
	1293, 1305, 1305, 0, 1296, 1594, 1594, 1299, 1590, 1592,
	1590, 1305, 1305, 0, 92, 0, 0, 1359, 0, 0,
	0, 640, 0, 0, 0, 1326, 1328, 1328, 1334, 1329,
	1335, 1336, 1328, 1328, 1328, 1328, 1341, 1328, 1328, 1328,
	1328, 1328, 1328, 1328, 1328, 1324, 649, 664, 692, 693,
	698, 699, 0, 271, 0, 0, 846, 0, 0, 0,
	859, 0, 0, 893, 890, 891, 892, 0, 924, 433,
	434, 435, 436, 0, 0, 0, 928, 0, 916, 898,
	0, 0, 0, 967, 968, 969, 970, 971, -2, 980,
	0, 0, 1137, 0, 0, 0, 1137, 1137, 1137, 1015,
	0, 1006, 652, 0, -2, 0, 0, 602, 0, 0,
	783, 488, 742, 512, 0, 528, 742, 742, 537, 555,
	0, 361, 403, 0, 1150, 1175, 1161, 1175, 1219, 1175,
	1175, 976, 0, 403, 0, 0, 373, 409, 0, 0,
	0, 0, 369, 406, 700, 410, 411, 413, 0, 415,
	375, 387, 388, 389, 390, 0, 0, 0, 382, 395,
	396, 397, 398, 1083, 1084, 1085, 1088, 1089, 1090, 1091,
	0, 0, 1094, 1095, 1096, 1097, 1098, 1172, 1173, 1174,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1123, 1124, 1125,
	1126, 1127, 1128, 1107, 1108, 1109, 1110, 1111, 1112, 1113,
	1114, 0, 0, 1118, 0, 893, 0, 0, 0, 0,
	924, 905, 0, 915, 0, 917, 918, 0, 0, 623,
	742, 289, 0, 778, 772, 0, 761, 776, 777, 764,
	0, 766, 0, 762, 763, 742, 754, 785, 810, 787,
	790, 792, 793, 799, 0, 0, 0, 0, 218, 219,
	220, 227, 0, 452, 233, 707, 1134, 583, 584, 1029,
	1030, 590, 738, 0, 0, 738, 73, 76, 0, 71,
	0, 0, 0, 0, 63, 61, 1589, 0, 0, 666,
	115, 0, 0, 0, 642, 0, 647, 644, 629, 638,
	628, 635, 636, 655, 644, 620, 619, 1187, 325, 0,
	931, 135, 140, 141, 142, 136, 134, 938, 0, 940,
	0, 997, 1001, 0, 0, 1503, 1292, 1275, 1294, 1306,
	1307, 1295, 1276, 1297, 1298, 1300, 1301, 1302, 1303, 1304,
	1277, 1355, 0, 1357, 1365, 1366, 0, 1415, 1419, 0,
	0, 0, 1332, 1333, 1337, 1338, 1339, 1340, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 694, 1325, 0, 666,
	704, 705, 834, 837, 843, 845, 0, 856, 0, 0,
	872, 865, 0, 0, 884, 885, 895, 0, 0, 0,
	438, 439, 0, 0, 0, 451, 447, 448, 449, 429,
	923, 912, 901, 0, 0, 911, 0, 981, 1611, 1611,
	1611, 0, 0, 1138, 1139, 1141, 1142, 1143, 0, 0,
	1137, 0, 0, 0, 1018, 0, 0, 1009, 0, 808,
	0, 0, 742, 601, 604, 605, 686, 489, 742, 532,
	529, 742, 358, 374, 404, 0, -2, 0, 1176, 0,
	1164, 1176, 0, 0, 1175, 0, 363, 403, 0, 0,
	0, 416, 419, 420, 417, 1214, 0, 418, 0, 408,
	414, 1086, 1087, 0, 1092, 1093, 0, 1117, 0, 0,
	421, 0, 0, 0, 422, 427, 898, 0, 913, 0,
	919, 920, 694, 0, 0, 758, 779, 0, 0, 759,
	0, 760, 765, 767, 288, 794, 0, 0, 796, 797,
	798, 789, 235, 728, 0, 0, 749, 729, 0, 19,
	0, 0, 66, 1599, 1602, 668, 0, 665, 116, 0,
	0, 0, 0, 643, 627, 618, 137, 132, 939, 118,
	1000, 1002, 998, 0, 1367, 0, 1328, 1327, 1321, 0,
	668, 0, 862, 860, 872, 864, 879, 894, 883, 0,
	925, 926, 0, 440, 441, 0, 444, 450, 896, 897,
	0, 0, 909, 0, 0, 0, 0, 973, 1072, 0,
	989, 0, 1074, 1611, 1611, 0, -2, 0, -2, 1021,
	0, 1016, 0, 1008, 0, 1011, 742, 742, -2, 598,
	603, 0, 513, 533, 405, 1177, -2, 1190, 1192, 0,
	986, 1195, 1196, 0, 0, 0, 0, 0, 0, 1240,
	1204, 0, 0, 1208, 1209, 1210, 0, 0, 1213, 0,
	1521, 1522, 0, 1217, 0, 0, 0, 0, 0, 0,
	0, 1158, 364, 365, 0, 367, 368, 1215, 407, 1611,
	377, 1116, 1119, 1120, 426, 423, 424, 901, 904, 624,
	689, 290, 291, 780, 0, 773, 803, 800, 0, 0,
	739, 741, 67, 72, 0, 0, 670, 0, 667, 0,
	661, 663, 126, 632, 88, 109, 0, 1356, 1406, 1331,
	0, 1322, 0, 1316, 1317, 1318, 1323, 670, 0, 863,
	0, 880, 881, 0, 0, 437, 442, 0, 445, 446,
	902, 899, 900, 0, 907, 0, 0, 962, 1590, 0,
	982, 983, 1131, 1132, 984, 987, 1140, 1073, 0, 0,
	0, 1072, 1031, -2, 1080, 0, 993, 118, 1031, 1012,
	0, 1019, 0, 1017, 1010, 694, 599, 1191, 1193, 1194,
	1197, 1198, 1199, 1245, 1246, 1247, 0, 0, 1202, 1242,
	1243, 1244, 1203, 0, 0, 0, 0, 0, 1519, 1520,
	1238, 0, 0, 1165, 1167, 1168, 1169, 1170, 1171, 1166,
	0, 0, 0, 1157, 1159, 366, 0, 1611, 914, 287,
	0, 0, 804, 806, 801, 802, 62, 64, 79, 0,
	669, 117, 0, 80, 0, 106, 0, 119, 120, 0,
	0, 0, 0, 1330, 1319, 0, 0, 0, 0, 0,
	1523, 1524, 1525, 0, 659, 0, 861, 0, 886, 0,
	888, 443, 906, 909, 0, 955, 0, 700, 0, 1075,
	1076, 1077, 988, 1033, 0, 985, 1082, 1611, 995, 1033,
	1004, 0, 1014, 0, 1023, 0, 1020, 689, 1200, 1201,
	0, 0, 1422, 1611, 0, 1233, 0, 955, 955, 955,
	955, 0, 376, 0, 781, 795, 0, 0, 0, 89,
	93, 0, 115, 112, 0, 121, 0, 0, 0, 0,
	0, 1308, 0, 0, 0, 1312, 1313, 1314, 1315, 0,
	873, 887, 908, 910, 954, 963, 964, 700, 992, 0,
	1070, 1081, 0, 994, 1013, 1022, 0, 1025, 597, 1241,
	0, 1207, 0, 1212, 1221, 1234, 0, 0, 1146, 0,
	1148, 0, 1152, 0, 1154, 0, 0, 378, 805, 807,
	0, 672, 662, 82, 0, 0, 110, 111, 113, 0,
	122, 0, 124, 125, 0, 1309, 1310, 1311, 850, 956,
	1611, 0, 0, 960, 961, 965, 0, 1058, 0, 0,
	1064, 0, 1071, 1086, 1024, 1205, 1211, 1220, 1222, 1223,
	0, 1235, 1236, 1237, 1239, 955, 955, 955, 955, 1156,
	671, 0, 1003, 0, 94, 0, 96, 98, 99, 1178,
	107, 108, 114, 123, 1320, 0, 958, 0, 1034, 0,
	1036, 0, 0, 0, 0, 0, 1068, 0, 1206, 1224,
	0, 1225, 0, 0, 0, 1147, 1149, 1153, 1155, 673,
	83, 84, 0, 95, 0, 0, 957, 959, 0, 1038,
	0, 1059, 0, 0, 0, 0, 0, 0, 0, 1226,
	1228, 1229, 0, 0, 1227, 0, 0, 97, 1179, 1035,
	1032, 0, 1070, 1060, 0, 1062, 0, 0, 0, 0,
	1230, 1232, 1231, 85, 86, 87, 0, 0, 1040, 0,
	1056, 1061, 1063, 1065, 0, 1069, 1067, 1180, 1039, 0,
	1052, 1037, 0, 1066, 1041, -2, 0, 1057, 1042, -2,
	0, 1050, 0, 0, 1043, 1051, 0, 1046, 0, 0,
	0, 1045, 0, -2, 1053, 0, 0, 1047, -2, 0,
	1055, 1054,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 593, 592,
	123, 122, 124, 3, 596, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 594, 135, 595, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:748
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:755
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:761
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:769
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:775
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:779
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:794
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:798
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:804
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:813
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:845
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:852
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:872
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:878
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:885
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:893
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:899
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:908
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:918
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:926
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:934
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:942
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:952
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:960
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:970
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:977
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:986
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1000
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1006
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1010
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1016
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1025
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1035
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1039
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1045
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1058
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1064
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1085
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1098
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1109
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1115
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1119
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1125
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1132
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1140
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1144
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1158
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1162
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1166
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1179
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1185
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1194
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1205
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1209
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1215
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1219
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1225
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1229
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1235
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1259
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1278
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1282
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1286
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1291
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1295
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1302
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1310
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1317
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1322
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1329
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1338
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1362
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1366
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1372
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1378
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1396
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1413
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1436
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1440
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1444
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1449
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1453
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1459
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1472
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1483
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1496
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1500
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1510
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1523
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1536
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1548
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1555
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1572
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1576
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1580
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1584
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1588
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1592
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1599
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1603
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1609
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1616
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1625
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1629
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1635
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1675
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1679
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1683
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1807
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1811
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1815
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1819
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1823
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1827
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1831
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1844
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1851
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1858
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1868
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1872
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1878
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1885
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1893
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1897
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1901
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1905
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1911
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1915
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1921
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1928
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1935
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1944
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1978
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1982
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1994
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1998
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2005
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2011
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2015
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2021
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2038
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2047
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2055
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2063
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2086
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2109
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2116
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2123
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2154
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2158
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2162
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2168
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2172
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2178
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2182
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2188
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2192
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2203
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2209
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2214
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2218
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2222
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2226
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2230
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2234
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2238
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2242
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2246
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2264
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2280
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2287
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2307
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2335
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2346
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2350
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2356
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2372
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2376
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2382
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2388
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2392
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2396
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2400
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2406
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2418
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2424
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2434
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2438
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2444
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2450
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2461
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2467
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2475
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2495
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2513
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2554
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2558
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2564
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2570
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2575
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2576
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2577
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2582
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2598
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2609
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2618
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2622
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2628
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2635
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2644
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2654
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2663
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2673
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2683
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2692
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2700
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2704
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2708
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2712
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2716
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2725
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2731
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2735
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2739
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2743
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2747
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2751
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2755
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2759
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2764
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2795
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2799
		{
			yyVAL.str = string("COLUMN")
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2804
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2810
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2816
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2825
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2829
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2835
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2842
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2850
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2857
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2878
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2885
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2916
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2920
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2939
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2955
		{
			assignments := []*tree.VarAssignmentExpr{
				{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2968
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2974
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3000
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3005
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3009
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3018
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3038
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3042
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3046
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3050
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3054
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3058
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3062
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3066
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3074
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3082
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3086
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3094
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3100
		{
			yyVAL.item = nil
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3105
		{
			yyVAL.item = nil
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3145
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3151
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3159
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3167
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3176
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3180
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3186
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3191
		{
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3195
		{
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3200
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3210
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3220
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3246
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3252
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3264
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3273
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3277
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3285
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3289
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3293
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3297
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3301
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3314
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3324
		{
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3326
		{
		}
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3354
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3358
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3362
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3368
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3374
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3386
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3395
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3405
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3417
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3421
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3427
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3459
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3466
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3471
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3475
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3479
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3484
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3488
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3494
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3507
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3511
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3517
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3522
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3526
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3530
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3536
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3542
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3546
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3552
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3558
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3562
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3566
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3572
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3576
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3600
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3609
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3618
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3627
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3631
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3637
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3646
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3655
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3665
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3669
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3676
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3682
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3686
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3692
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3698
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3707
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3714
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3725
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3730
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3737
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3753
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3766
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3777
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3781
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3787
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3792
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3799
		{
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3801
		{
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3804
		{
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3813
		{
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3817
		{
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3822
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3831
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3838
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3844
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3852
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3859
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3866
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3886
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3896
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3900
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3906
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3913
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3919
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3927
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3934
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3941
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3960
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3964
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3969
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3973
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3977
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3983
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3992
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3996
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4002
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4006
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4012
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4016
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4022
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4027
		{
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4031
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4038
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4042
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4049
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4058
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4064
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4068
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4074
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4078
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4087
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4100
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4107
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4114
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4132
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4151
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4157
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4164
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4168
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4181
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4185
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4190
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4194
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4201
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4206
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4213
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4219
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4223
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4227
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4231
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4235
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4239
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4245
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4252
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4261
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4265
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4271
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4279
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4283
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4288
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4292
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4298
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4302
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4306
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4315
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4321
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4327
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4331
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4337
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4342
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4346
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4350
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4355
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4359
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4363
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4368
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4372
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4380
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4384
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4388
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4402
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4406
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4416
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4426
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4436
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4448
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4456
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4464
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4473
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4481
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4489
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4497
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4505
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4513
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4521
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4529
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4537
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4547
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4558
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4572
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4576
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4580
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4585
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4589
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4593
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4602
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4606
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4615
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4624
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4630
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4634
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4640
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4644
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4649
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4653
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4658
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4666
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4672
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4680
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4688
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4698
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4704
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4713
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4722
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4731
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4741
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4745
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4755
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4759
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4763
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4767
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4773
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4783
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4787
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4793
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4799
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4803
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4809
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4815
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4819
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4823
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4833
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4839
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4843
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4849
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4853
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4859
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4863
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4873
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4886
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4892
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4898
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4911
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4922
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4929
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4933
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4939
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4949
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4953
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4957
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4962
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4966
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4970
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4974
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4983
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4987
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4991
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4995
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5000
		{
			yyVAL.str = ""
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5004
		{
			yyVAL.str = yyDollar[1].str
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5008
		{
			yyVAL.str = yyDollar[2].str
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5014
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5020
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5024
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5028
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5032
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5036
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5042
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 834:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5077
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5087
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5093
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 837:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5099
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5109
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5114
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5120
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5127
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5131
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5137
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5143
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5148
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5152
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5156
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5160
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5167
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5179
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5184
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5190
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5197
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5201
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5207
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5213
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5217
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5221
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5227
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5233
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5239
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5248
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5259
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5271
		{
			yyVAL.str = yyDollar[1].str
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5275
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5281
		{
			yyVAL.str = "OR REPLACE"
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5285
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5289
		{
			yyVAL.str = "DEFINER = "
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5293
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5298
		{
			yyVAL.str = ""
		}
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5302
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5316
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5324
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5330
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5340
		{
			yyVAL.str = yyDollar[1].str
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5344
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5350
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5357
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5363
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5371
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5377
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5384
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5414
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5426
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5438
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5450
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5456
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5463
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5471
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5477
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5485
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5491
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5499
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5505
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5514
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5518
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5523
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5527
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5534
		{
			yyVAL.str = yyDollar[3].str
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5539
		{
			yyVAL.str = ""
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5543
		{
			yyVAL.str = yyDollar[2].str
		}
	case 914:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5549
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5563
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5573
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5577
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5583
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5589
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5595
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5604
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5613
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5622
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5627
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5633
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5641
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5747
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5751
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5757
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5767
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5771
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5777
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5787
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5791
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5795
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5804
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5810
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5817
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5823
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5832
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5839
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5848
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5852
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5858
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5872
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5876
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5880
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5885
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5889
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5893
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5897
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5903
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5922
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5926
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5948
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5952
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5956
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5960
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5964
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5970
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5974
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5980
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5985
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5990
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5994
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5998
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6002
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6006
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6012
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6027
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6037
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6041
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6050
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6056
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6060
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6066
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6070
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6074
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6079
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6083
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6089
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6100
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6111
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6122
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6126
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6132
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6144
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6153
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6166
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6173
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6183
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6191
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6202
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6206
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6211
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6215
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6222
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6233
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6246
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6260
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6264
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6268
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6275
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6282
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6289
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6296
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6300
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6304
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6308
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6312
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6319
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6326
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6330
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6337
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6348
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6355
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6362
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6369
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6376
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6385
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6389
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6393
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6398
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6402
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6412
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6416
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6423
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6430
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6434
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6447
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6453
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6457
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6463
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6472
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6482
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6486
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6492
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6496
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6502
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6509
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6518
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6522
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6531
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6536
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6540
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6545
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6549
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6559
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6563
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6574
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6582
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6590
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6598
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6609
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6618
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6628
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6638
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6642
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6647
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6651
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6660
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6666
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6670
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6676
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6680
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6689
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6695
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6699
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6703
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6709
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6713
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6717
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6721
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6725
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6729
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6733
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6738
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6742
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6746
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6750
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6754
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6758
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6762
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6766
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6770
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6786
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6790
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6798
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6802
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6806
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6810
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6814
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6818
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6822
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6826
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6830
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6834
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6838
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6842
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6846
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6852
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6856
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6862
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6868
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6872
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6878
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6882
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6886
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6890
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6894
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6898
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6912
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6916
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6925
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6930
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6936
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6947
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6953
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6957
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6961
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6967
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6971
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6977
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6986
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6995
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7018
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7043
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7057
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7063
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7072
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7081
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7090
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7099
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7109
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7117
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7123
		{
			yyVAL.str = ""
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7127
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7137
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7143
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7149
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7168
		{
			yyVAL.str = ""
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7172
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7178
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7184
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7188
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7192
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7198
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7202
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7206
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7210
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7216
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7220
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7224
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7233
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7239
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7243
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7249
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7253
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7257
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7261
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7265
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7269
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7274
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7278
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7282
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7286
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7290
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7294
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7298
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7302
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7306
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7310
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7323
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7327
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7331
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7335
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7339
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7343
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7349
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7353
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7358
		{
			yyVAL.str = ""
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7362
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7368
		{
			yyVAL.str = ""
		}
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7372
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7378
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7390
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7397
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7404
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7411
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7418
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7427
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7433
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7439
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7443
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7447
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7451
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7455
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7460
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7467
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7471
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7475
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7480
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7484
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7489
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7493
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7509
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7515
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7519
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7523
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7527
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7531
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7535
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7539
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7543
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7547
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7551
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7555
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7559
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7563
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7569
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7573
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7577
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7581
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7585
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7589
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7593
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7597
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7601
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7605
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7609
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7613
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7618
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7626
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7631
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7635
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7644
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7648
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7652
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7656
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7660
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7666
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7674
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7682
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7695
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7704
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7710
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7714
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7720
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7729
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7741
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7758
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7775
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7788
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7801
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7813
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7827
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7842
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7857
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7874
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7889
		{
		}
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7896
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7900
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7904
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7910
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7914
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7918
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7922
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7928
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7932
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7936
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7942
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7950
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7964
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7971
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7980
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7985
		{
			yyVAL.str = ","
		}
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7989
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8001
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8027
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8038
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8048
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8058
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8068
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8077
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8086
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8096
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8106
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8116
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8126
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8136
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8146
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8156
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8166
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8176
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8186
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8196
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8206
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8225
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8233
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8241
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8249
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8257
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8267
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8275
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8284
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8292
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8300
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8308
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8316
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8327
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8337
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8349
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8360
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8382
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8418
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8430
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8442
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8453
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8461
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8468
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8475
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8487
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8495
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8505
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8515
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8523
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8534
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8543
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8552
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8560
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8570
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8578
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8588
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8592
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8602
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8621
		{
		}
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8623
		{
		}
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8664
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8675
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8679
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8683
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8689
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8698
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8704
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8708
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8715
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8719
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8723
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8731
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8735
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8739
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8743
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8749
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8753
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8757
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8761
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8765
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8769
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8773
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8777
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8781
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8785
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8793
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8797
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8801
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8805
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8809
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8813
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8817
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8821
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8825
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8829
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8839
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8845
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8849
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8856
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8860
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8864
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8870
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8874
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8878
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8882
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8886
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8890
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8894
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8900
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8904
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8908
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8912
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8918
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8931
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8936
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8942
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8946
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8959
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8964
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8968
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8972
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8976
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8980
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8987
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8991
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9005
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9009
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9016
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9027
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9032
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9038
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9050
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9062
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9074
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9087
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9100
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9113
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9126
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9139
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9152
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9165
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9178
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9191
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9204
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9219
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9246
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9288
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9324
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9360
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9377
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9389
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9409
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9429
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9449
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9465
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9478
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9491
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9504
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9517
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9529
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9541
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9553
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9565
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9577
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9589
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9601
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9613
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9625
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9638
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9651
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9666
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9674
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9683
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9693
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9716
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9721
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9727
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9734
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9738
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9743
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9747
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9753
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9759
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9766
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9773
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9782
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9789
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9796
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9805
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9809
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9813
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9819
		{
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9821
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9831
		{
			yyVAL.str = ""
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9835
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

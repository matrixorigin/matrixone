// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const STAGEOPTION = 57546
const SQL_SMALL_RESULT = 57547
const SQL_BIG_RESULT = 57548
const SQL_BUFFER_RESULT = 57549
const LOW_PRIORITY = 57550
const HIGH_PRIORITY = 57551
const DELAYED = 57552
const CREATE = 57553
const ALTER = 57554
const DROP = 57555
const RENAME = 57556
const ANALYZE = 57557
const ADD = 57558
const RETURNS = 57559
const SCHEMA = 57560
const TABLE = 57561
const SEQUENCE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const CONSTRAINT = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const FOREIGN = 57573
const KEY_BLOCK_SIZE = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const MAXVALUE = 57583
const PARTITION = 57584
const REORGANIZE = 57585
const LESS = 57586
const THAN = 57587
const PROCEDURE = 57588
const TRIGGER = 57589
const STATUS = 57590
const VARIABLES = 57591
const ROLE = 57592
const PROXY = 57593
const AVG_ROW_LENGTH = 57594
const STORAGE = 57595
const DISK = 57596
const MEMORY = 57597
const CHECKSUM = 57598
const COMPRESSION = 57599
const DATA = 57600
const DIRECTORY = 57601
const DELAY_KEY_WRITE = 57602
const ENCRYPTION = 57603
const ENGINE = 57604
const MAX_ROWS = 57605
const MIN_ROWS = 57606
const PACK_KEYS = 57607
const ROW_FORMAT = 57608
const STATS_AUTO_RECALC = 57609
const STATS_PERSISTENT = 57610
const STATS_SAMPLE_PAGES = 57611
const DYNAMIC = 57612
const COMPRESSED = 57613
const REDUNDANT = 57614
const COMPACT = 57615
const FIXED = 57616
const COLUMN_FORMAT = 57617
const AUTO_RANDOM = 57618
const ENGINE_ATTRIBUTE = 57619
const SECONDARY_ENGINE_ATTRIBUTE = 57620
const INSERT_METHOD = 57621
const RESTRICT = 57622
const CASCADE = 57623
const ACTION = 57624
const PARTIAL = 57625
const SIMPLE = 57626
const CHECK = 57627
const ENFORCED = 57628
const RANGE = 57629
const LIST = 57630
const ALGORITHM = 57631
const LINEAR = 57632
const PARTITIONS = 57633
const SUBPARTITION = 57634
const SUBPARTITIONS = 57635
const CLUSTER = 57636
const TYPE = 57637
const ANY = 57638
const SOME = 57639
const EXTERNAL = 57640
const LOCALFILE = 57641
const URL = 57642
const PREPARE = 57643
const DEALLOCATE = 57644
const RESET = 57645
const EXTENSION = 57646
const INCREMENT = 57647
const CYCLE = 57648
const MINVALUE = 57649
const PUBLICATION = 57650
const SUBSCRIPTIONS = 57651
const PUBLICATIONS = 57652
const PROPERTIES = 57653
const PARSER = 57654
const VISIBLE = 57655
const INVISIBLE = 57656
const BTREE = 57657
const HASH = 57658
const RTREE = 57659
const BSI = 57660
const ZONEMAP = 57661
const LEADING = 57662
const BOTH = 57663
const TRAILING = 57664
const UNKNOWN = 57665
const EXPIRE = 57666
const ACCOUNT = 57667
const ACCOUNTS = 57668
const UNLOCK = 57669
const DAY = 57670
const NEVER = 57671
const PUMP = 57672
const MYSQL_COMPATIBILITY_MODE = 57673
const MODIFY = 57674
const CHANGE = 57675
const SECOND = 57676
const ASCII = 57677
const COALESCE = 57678
const COLLATION = 57679
const HOUR = 57680
const MICROSECOND = 57681
const MINUTE = 57682
const MONTH = 57683
const QUARTER = 57684
const REPEAT = 57685
const REVERSE = 57686
const ROW_COUNT = 57687
const WEEK = 57688
const REVOKE = 57689
const FUNCTION = 57690
const PRIVILEGES = 57691
const TABLESPACE = 57692
const EXECUTE = 57693
const SUPER = 57694
const GRANT = 57695
const OPTION = 57696
const REFERENCES = 57697
const REPLICATION = 57698
const SLAVE = 57699
const CLIENT = 57700
const USAGE = 57701
const RELOAD = 57702
const FILE = 57703
const TEMPORARY = 57704
const ROUTINE = 57705
const EVENT = 57706
const SHUTDOWN = 57707
const NULLX = 57708
const AUTO_INCREMENT = 57709
const APPROXNUM = 57710
const SIGNED = 57711
const UNSIGNED = 57712
const ZEROFILL = 57713
const ENGINES = 57714
const LOW_CARDINALITY = 57715
const AUTOEXTEND_SIZE = 57716
const ADMIN_NAME = 57717
const RANDOM = 57718
const SUSPEND = 57719
const ATTRIBUTE = 57720
const HISTORY = 57721
const REUSE = 57722
const CURRENT = 57723
const OPTIONAL = 57724
const FAILED_LOGIN_ATTEMPTS = 57725
const PASSWORD_LOCK_TIME = 57726
const UNBOUNDED = 57727
const SECONDARY = 57728
const RESTRICTED = 57729
const USER = 57730
const IDENTIFIED = 57731
const CIPHER = 57732
const ISSUER = 57733
const X509 = 57734
const SUBJECT = 57735
const SAN = 57736
const REQUIRE = 57737
const SSL = 57738
const NONE = 57739
const PASSWORD = 57740
const SHARED = 57741
const EXCLUSIVE = 57742
const MAX_QUERIES_PER_HOUR = 57743
const MAX_UPDATES_PER_HOUR = 57744
const MAX_CONNECTIONS_PER_HOUR = 57745
const MAX_USER_CONNECTIONS = 57746
const FORMAT = 57747
const VERBOSE = 57748
const CONNECTION = 57749
const TRIGGERS = 57750
const PROFILES = 57751
const LOAD = 57752
const INLINE = 57753
const INFILE = 57754
const TERMINATED = 57755
const OPTIONALLY = 57756
const ENCLOSED = 57757
const ESCAPED = 57758
const STARTING = 57759
const LINES = 57760
const ROWS = 57761
const IMPORT = 57762
const DISCARD = 57763
const MODUMP = 57764
const OVER = 57765
const PRECEDING = 57766
const FOLLOWING = 57767
const GROUPS = 57768
const DATABASES = 57769
const TABLES = 57770
const SEQUENCES = 57771
const EXTENDED = 57772
const FULL = 57773
const PROCESSLIST = 57774
const FIELDS = 57775
const COLUMNS = 57776
const OPEN = 57777
const ERRORS = 57778
const WARNINGS = 57779
const INDEXES = 57780
const SCHEMAS = 57781
const NODE = 57782
const LOCKS = 57783
const ROLES = 57784
const TABLE_NUMBER = 57785
const COLUMN_NUMBER = 57786
const TABLE_VALUES = 57787
const TABLE_SIZE = 57788
const NAMES = 57789
const GLOBAL = 57790
const PERSIST = 57791
const SESSION = 57792
const ISOLATION = 57793
const LEVEL = 57794
const READ = 57795
const WRITE = 57796
const ONLY = 57797
const REPEATABLE = 57798
const COMMITTED = 57799
const UNCOMMITTED = 57800
const SERIALIZABLE = 57801
const LOCAL = 57802
const EVENTS = 57803
const PLUGINS = 57804
const CURRENT_TIMESTAMP = 57805
const DATABASE = 57806
const CURRENT_TIME = 57807
const LOCALTIME = 57808
const LOCALTIMESTAMP = 57809
const UTC_DATE = 57810
const UTC_TIME = 57811
const UTC_TIMESTAMP = 57812
const REPLACE = 57813
const CONVERT = 57814
const SEPARATOR = 57815
const TIMESTAMPDIFF = 57816
const CURRENT_DATE = 57817
const CURRENT_USER = 57818
const CURRENT_ROLE = 57819
const SECOND_MICROSECOND = 57820
const MINUTE_MICROSECOND = 57821
const MINUTE_SECOND = 57822
const HOUR_MICROSECOND = 57823
const HOUR_SECOND = 57824
const HOUR_MINUTE = 57825
const DAY_MICROSECOND = 57826
const DAY_SECOND = 57827
const DAY_MINUTE = 57828
const DAY_HOUR = 57829
const YEAR_MONTH = 57830
const SQL_TSI_HOUR = 57831
const SQL_TSI_DAY = 57832
const SQL_TSI_WEEK = 57833
const SQL_TSI_MONTH = 57834
const SQL_TSI_QUARTER = 57835
const SQL_TSI_YEAR = 57836
const SQL_TSI_SECOND = 57837
const SQL_TSI_MINUTE = 57838
const RECURSIVE = 57839
const CONFIG = 57840
const DRAINER = 57841
const SOURCE = 57842
const STREAM = 57843
const HEADERS = 57844
const CONNECTOR = 57845
const CONNECTORS = 57846
const DAEMON = 57847
const PAUSE = 57848
const CANCEL = 57849
const TASK = 57850
const RESUME = 57851
const MATCH = 57852
const AGAINST = 57853
const BOOLEAN = 57854
const LANGUAGE = 57855
const WITH = 57856
const QUERY = 57857
const EXPANSION = 57858
const WITHOUT = 57859
const VALIDATION = 57860
const ADDDATE = 57861
const BIT_AND = 57862
const BIT_OR = 57863
const BIT_XOR = 57864
const CAST = 57865
const COUNT = 57866
const APPROX_COUNT = 57867
const APPROX_COUNT_DISTINCT = 57868
const APPROX_PERCENTILE = 57869
const CURDATE = 57870
const CURTIME = 57871
const DATE_ADD = 57872
const DATE_SUB = 57873
const EXTRACT = 57874
const GROUP_CONCAT = 57875
const MAX = 57876
const MID = 57877
const MIN = 57878
const NOW = 57879
const POSITION = 57880
const SESSION_USER = 57881
const STD = 57882
const STDDEV = 57883
const MEDIAN = 57884
const CLUSTER_CENTERS = 57885
const SPHERICAL_KMEANS = 57886
const STDDEV_POP = 57887
const STDDEV_SAMP = 57888
const SUBDATE = 57889
const SUBSTR = 57890
const SUBSTRING = 57891
const SUM = 57892
const SYSDATE = 57893
const SYSTEM_USER = 57894
const TRANSLATE = 57895
const TRIM = 57896
const VARIANCE = 57897
const VAR_POP = 57898
const VAR_SAMP = 57899
const AVG = 57900
const RANK = 57901
const ROW_NUMBER = 57902
const DENSE_RANK = 57903
const BIT_CAST = 57904
const NEXTVAL = 57905
const SETVAL = 57906
const CURRVAL = 57907
const LASTVAL = 57908
const ARROW = 57909
const ROW = 57910
const OUTFILE = 57911
const HEADER = 57912
const MAX_FILE_SIZE = 57913
const FORCE_QUOTE = 57914
const PARALLEL = 57915
const UNUSED = 57916
const BINDINGS = 57917
const DO = 57918
const DECLARE = 57919
const LOOP = 57920
const WHILE = 57921
const LEAVE = 57922
const ITERATE = 57923
const UNTIL = 57924
const CALL = 57925
const PREV = 57926
const SLIDING = 57927
const FILL = 57928
const SPBEGIN = 57929
const BACKEND = 57930
const SERVERS = 57931
const HANDLER = 57932
const KILL = 57933
const BACKUP = 57934
const FILESYSTEM = 57935
const QUERY_RESULT = 57936

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"CLUSTER_CENTERS",
	"SPHERICAL_KMEANS",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10711

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	11, 690,
	21, 690,
	-2, 683,
	-1, 137,
	236, 1068,
	238, 980,
	-2, 1025,
	-1, 161,
	42, 519,
	238, 519,
	265, 526,
	266, 526,
	455, 519,
	-2, 552,
	-1, 200,
	615, 1792,
	-2, 435,
	-1, 550,
	317, 133,
	428, 133,
	429, 133,
	-2, 1700,
	-1, 614,
	81, 1492,
	-2, 1847,
	-1, 615,
	81, 1510,
	-2, 1818,
	-1, 619,
	81, 1511,
	-2, 1846,
	-1, 646,
	81, 1422,
	-2, 1919,
	-1, 647,
	81, 1423,
	-2, 1918,
	-1, 648,
	81, 1424,
	-2, 1908,
	-1, 649,
	81, 1880,
	-2, 1901,
	-1, 650,
	81, 1881,
	-2, 1902,
	-1, 651,
	81, 1882,
	-2, 1910,
	-1, 652,
	81, 1883,
	-2, 1890,
	-1, 653,
	81, 1884,
	-2, 1899,
	-1, 654,
	81, 1885,
	-2, 1911,
	-1, 655,
	81, 1886,
	-2, 1912,
	-1, 656,
	81, 1887,
	-2, 1917,
	-1, 657,
	81, 1888,
	-2, 1922,
	-1, 658,
	81, 1889,
	-2, 1923,
	-1, 660,
	81, 1489,
	-2, 1686,
	-1, 664,
	81, 1494,
	-2, 1701,
	-1, 667,
	81, 1498,
	-2, 1719,
	-1, 671,
	81, 1502,
	-2, 1761,
	-1, 672,
	81, 1503,
	-2, 1842,
	-1, 680,
	81, 1513,
	-2, 1827,
	-1, 681,
	81, 1514,
	-2, 1872,
	-1, 682,
	81, 1515,
	-2, 1837,
	-1, 683,
	81, 1516,
	-2, 1862,
	-1, 694,
	81, 1400,
	-2, 1913,
	-1, 695,
	81, 1401,
	-2, 1914,
	-1, 696,
	81, 1402,
	-2, 1915,
	-1, 780,
	450, 552,
	451, 552,
	-2, 520,
	-1, 826,
	122, 1686,
	133, 1686,
	153, 1686,
	-2, 1660,
	-1, 935,
	21, 717,
	-2, 666,
	-1, 1036,
	11, 690,
	21, 690,
	-2, 1294,
	-1, 1110,
	21, 717,
	-2, 666,
	-1, 1421,
	81, 1560,
	-2, 1844,
	-1, 1422,
	81, 1561,
	-2, 1845,
	-1, 1562,
	82, 866,
	-2, 872,
	-1, 1966,
	105, 1015,
	149, 1015,
	188, 1015,
	191, 1015,
	278, 1015,
	-2, 1008,
	-1, 2106,
	11, 690,
	21, 690,
	-2, 810,
	-1, 2138,
	82, 1646,
	154, 1646,
	-2, 1829,
	-1, 2139,
	82, 1646,
	154, 1646,
	-2, 1828,
	-1, 2140,
	82, 1622,
	154, 1622,
	-2, 1815,
	-1, 2141,
	82, 1623,
	154, 1623,
	-2, 1820,
	-1, 2142,
	82, 1624,
	154, 1624,
	-2, 1749,
	-1, 2143,
	82, 1625,
	154, 1625,
	-2, 1743,
	-1, 2144,
	82, 1626,
	154, 1626,
	-2, 1676,
	-1, 2145,
	82, 1627,
	154, 1627,
	-2, 1817,
	-1, 2146,
	82, 1628,
	154, 1628,
	-2, 1747,
	-1, 2147,
	82, 1629,
	154, 1629,
	-2, 1742,
	-1, 2148,
	82, 1630,
	154, 1630,
	-2, 1733,
	-1, 2149,
	82, 1646,
	154, 1646,
	-2, 1734,
	-1, 2150,
	82, 1646,
	154, 1646,
	-2, 1735,
	-1, 2152,
	82, 1635,
	154, 1635,
	-2, 1862,
	-1, 2153,
	82, 1613,
	154, 1613,
	-2, 1847,
	-1, 2154,
	82, 1644,
	154, 1644,
	-2, 1818,
	-1, 2155,
	82, 1644,
	154, 1644,
	-2, 1846,
	-1, 2156,
	82, 1644,
	154, 1644,
	-2, 1702,
	-1, 2157,
	82, 1642,
	154, 1642,
	-2, 1837,
	-1, 2158,
	82, 1639,
	154, 1639,
	-2, 1724,
	-1, 2159,
	81, 1594,
	82, 1594,
	154, 1594,
	386, 1594,
	387, 1594,
	388, 1594,
	-2, 1675,
	-1, 2160,
	81, 1595,
	82, 1595,
	154, 1595,
	386, 1595,
	387, 1595,
	388, 1595,
	-2, 1677,
	-1, 2161,
	81, 1598,
	82, 1598,
	154, 1598,
	386, 1598,
	387, 1598,
	388, 1598,
	-2, 1819,
	-1, 2162,
	81, 1600,
	82, 1600,
	154, 1600,
	386, 1600,
	387, 1600,
	388, 1600,
	-2, 1801,
	-1, 2163,
	81, 1602,
	82, 1602,
	154, 1602,
	386, 1602,
	387, 1602,
	388, 1602,
	-2, 1748,
	-1, 2164,
	81, 1604,
	82, 1604,
	154, 1604,
	386, 1604,
	387, 1604,
	388, 1604,
	-2, 1729,
	-1, 2165,
	81, 1605,
	82, 1605,
	154, 1605,
	386, 1605,
	387, 1605,
	388, 1605,
	-2, 1730,
	-1, 2166,
	81, 1607,
	82, 1607,
	154, 1607,
	386, 1607,
	387, 1607,
	388, 1607,
	-2, 1674,
	-1, 2167,
	82, 1649,
	154, 1649,
	386, 1649,
	387, 1649,
	388, 1649,
	-2, 1707,
	-1, 2168,
	82, 1649,
	154, 1649,
	386, 1649,
	387, 1649,
	388, 1649,
	-2, 1720,
	-1, 2169,
	82, 1652,
	154, 1652,
	386, 1652,
	387, 1652,
	388, 1652,
	-2, 1703,
	-1, 2170,
	82, 1652,
	154, 1652,
	386, 1652,
	387, 1652,
	388, 1652,
	-2, 1764,
	-1, 2171,
	82, 1649,
	154, 1649,
	386, 1649,
	387, 1649,
	388, 1649,
	-2, 1785,
	-1, 2355,
	105, 1015,
	149, 1015,
	188, 1015,
	191, 1015,
	278, 1015,
	-2, 1009,
	-1, 2368,
	79, 611,
	154, 611,
	-2, 1181,
	-1, 2718,
	191, 1015,
	302, 1262,
	-2, 1234,
	-1, 2869,
	105, 1015,
	149, 1015,
	188, 1015,
	191, 1015,
	-2, 1124,
	-1, 2871,
	105, 1015,
	149, 1015,
	188, 1015,
	191, 1015,
	-2, 1124,
	-1, 2881,
	79, 611,
	154, 611,
	-2, 1182,
	-1, 2889,
	191, 1015,
	302, 1262,
	-2, 1235,
	-1, 3024,
	105, 1015,
	149, 1015,
	188, 1015,
	191, 1015,
	-2, 1125,
	-1, 3405,
	82, 1086,
	154, 1086,
	-2, 1015,
	-1, 3409,
	82, 1086,
	154, 1086,
	-2, 1015,
	-1, 3423,
	82, 1090,
	154, 1090,
	-2, 1015,
	-1, 3428,
	82, 1091,
	154, 1091,
	-2, 1015,
}

const yyPrivate = 57344

const yyLast = 39429

var yyAct = [...]int{
	581, 1643, 3409, 3408, 3417, 3388, 191, 1401, 3275, 559,
	561, 3337, 3358, 583, 554, 3301, 3283, 2736, 3284, 3205,
	569, 2965, 3190, 3065, 2903, 2221, 2802, 1190, 1251, 2971,
	3181, 1069, 3209, 3012, 1397, 3009, 1337, 3101, 3090, 3011,
	463, 2803, 611, 3138, 936, 825, 1327, 2969, 2326, 2839,
	473, 3191, 478, 478, 3193, 2960, 1595, 2856, 478, 494,
	503, 2890, 3030, 503, 2008, 3016, 563, 3023, 2988, 1404,
	2371, 2690, 2800, 2650, 3026, 2487, 1732, 2486, 2488, 2679,
	2845, 2136, 2287, 2733, 2470, 2872, 2715, 2410, 2480, 1835,
	1705, 176, 2648, 2549, 1697, 2722, 1457, 2788, 2509, 514,
	1800, 2134, 2011, 2768, 508, 2483, 2346, 1597, 2660, 2663,
	2658, 2721, 2696, 929, 552, 2100, 2651, 1244, 1934, 2356,
	1747, 1976, 1729, 1943, 2084, 1820, 1808, 36, 2390, 2204,
	2592, 1542, 2522, 1933, 1831, 1801, 2187, 2532, 2038, 1774,
	756, 558, 477, 477, 1323, 1331, 1725, 1830, 485, 2101,
	1336, 553, 1328, 1163, 1698, 1700, 2335, 1316, 2089, 2330,
	2392, 2009, 1635, 2363, 6, 463, 1625, 187, 8, 186,
	7, 881, 1975, 1572, 2132, 2256, 1865, 819, 1395, 1142,
	562, 1809, 1832, 1260, 116, 1290, 500, 35, 1957, 1230,
	1842, 191, 1200, 191, 2653, 872, 873, 2652, 472, 1607,
	1451, 551, 2288, 866, 867, 570, 1435, 788, 871, 1400,
	2004, 1386, 1804, 26, 1790, 15, 1606, 462, 13, 1807,
	1297, 1199, 14, 947, 1764, 1394, 32, 1179, 818, 2108,
	1571, 1229, 490, 487, 1175, 698, 1353, 516, 1283, 553,
	755, 1458, 23, 16, 517, 1191, 1227, 10, 177, 1289,
	733, 560, 502, 173, 753, 738, 1070, 1839, 167, 869,
	3132, 2316, 1108, 1849, 2859, 2244, 2316, 2316, 775, 2795,
	2193, 2191, 499, 2190, 495, 2188, 1555, 497, 1304, 1300,
	864, 498, 868, 865, 870, 496, 865, 175, 474, 3344,
	1127, 865, 2309, 2307, 1212, 1549, 1123, 1302, 2958, 2893,
	1005, 1006, 1007, 1004, 2545, 2543, 1779, 3097, 1165, 1005,
	1006, 1007, 1004, 3091, 483, 506, 2961, 2801, 1817, 1064,
	3195, 1803, 699, 2618, 174, 51, 163, 138, 174, 2046,
	710, 2998, 2311, 2238, 3266, 968, 2230, 2905, 174, 1836,
	863, 3149, 174, 8, 174, 7, 174, 2325, 174, 1478,
	2896, 1128, 174, 831, 2327, 2989, 833, 1968, 3118, 3228,
	2891, 1270, 1351, 1269, 1344, 2913, 2914, 1268, 837, 835,
	836, 2892, 174, 51, 163, 138, 115, 174, 51, 163,
	138, 1566, 512, 513, 2616, 3150, 2564, 1847, 1155, 700,
	2557, 1961, 1348, 168, 1341, 701, 115, 168, 1137, 1371,
	2126, 1208, 1002, 976, 1209, 1742, 978, 168, 2897, 3120,
	2127, 168, 1129, 1350, 2515, 1343, 689, 168, 688, 690,
	691, 168, 692, 693, 2205, 2114, 2516, 2517, 2113, 1709,
	55, 2115, 1710, 1711, 979, 1556, 1557, 2332, 711, 1387,
	3320, 168, 1391, 1231, 1195, 1233, 168, 2333, 1194, 1197,
	1198, 1187, 983, 1197, 1198, 984, 3287, 3288, 797, 1621,
	3318, 1403, 1000, 828, 827, 3198, 1390, 3197, 2981, 3198,
	3259, 3197, 3258, 3196, 3257, 3196, 1924, 478, 3261, 3099,
	995, 3305, 3306, 986, 2550, 2804, 3183, 478, 940, 3183,
	1211, 2551, 3265, 2552, 3186, 2331, 3102, 3103, 3104, 3105,
	3094, 2804, 2912, 1407, 2012, 503, 503, 1474, 478, 972,
	950, 2225, 941, 1471, 1851, 3202, 2426, 1473, 1470, 1472,
	1476, 1477, 1720, 2817, 1136, 1475, 2846, 1716, 2338, 2901,
	1726, 1382, 1303, 1301, 974, 1843, 2853, 2664, 2312, 3003,
	137, 2672, 172, 875, 2319, 1392, 977, 980, 950, 2078,
	807, 2898, 2902, 2900, 2899, 1955, 1787, 829, 981, 1310,
	1309, 2915, 161, 830, 998, 999, 3114, 931, 1389, 3115,
	1008, 2044, 973, 3268, 3269, 547, 2674, 938, 549, 1037,
	3263, 744, 2580, 548, 3109, 997, 971, 1046, 2235, 2907,
	2908, 3126, 988, 933, 2582, 989, 2669, 2670, 959, 834,
	2980, 1038, 2959, 2474, 3286, 2081, 2544, 2982, 2080, 3129,
	1053, 963, 2671, 940, 1406, 1405, 939, 2668, 3000, 500,
	500, 982, 3117, 991, 2085, 3066, 3067, 3068, 3070, 3069,
	3313, 2915, 2734, 2735, 1848, 2688, 2364, 1854, 1856, 1857,
	2927, 3154, 2697, 2894, 3146, 2310, 1210, 1185, 975, 2906,
	1740, 1741, 3220, 3116, 3322, 1221, 3215, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1481, 1482,
	1483, 1484, 1485, 1486, 1479, 1480, 1139, 1138, 831, 1073,
	1126, 833, 505, 2479, 1388, 993, 994, 2350, 2351, 2352,
	2353, 504, 1963, 803, 801, 2920, 802, 985, 987, 3210,
	952, 951, 3402, 3418, 3349, 499, 499, 495, 495, 3317,
	497, 497, 1837, 1837, 498, 498, 1837, 3277, 496, 496,
	3131, 2820, 1134, 473, 943, 944, 2586, 2315, 3356, 2666,
	1174, 2930, 3201, 1413, 1416, 1417, 992, 3056, 952, 951,
	3382, 1074, 1106, 2738, 1414, 1111, 2972, 935, 3361, 831,
	2055, 746, 833, 747, 960, 756, 954, 956, 957, 3045,
	2129, 990, 865, 865, 865, 3273, 3274, 865, 3277, 2054,
	2344, 1172, 865, 865, 3267, 1240, 3148, 1044, 2911, 1239,
	2014, 3051, 808, 945, 961, 2189, 1171, 501, 1838, 1850,
	2075, 2076, 501, 1170, 1305, 1189, 1188, 2327, 3155, 804,
	3419, 3147, 1193, 3413, 478, 1196, 1223, 2014, 2017, 1197,
	1198, 3425, 463, 463, 3389, 3139, 930, 1040, 1041, 1042,
	1043, 463, 463, 699, 2635, 1255, 1255, 3121, 478, 1197,
	1198, 2337, 2308, 2873, 1866, 169, 170, 2007, 171, 2956,
	1143, 2665, 2999, 139, 2239, 512, 2910, 139, 52, 2024,
	503, 1284, 473, 52, 1257, 1293, 1293, 139, 1727, 1253,
	1253, 139, 806, 139, 1186, 139, 191, 139, 3110, 1292,
	1292, 139, 3111, 934, 1262, 463, 1855, 1082, 1083, 830,
	3323, 3262, 2675, 3180, 3362, 1228, 3114, 2341, 2342, 3115,
	2427, 139, 2428, 2429, 1219, 962, 139, 3127, 3004, 968,
	2583, 2807, 2340, 2527, 2528, 1719, 1144, 1145, 1146, 1147,
	1717, 1149, 2730, 2027, 1383, 1148, 1154, 2013, 1261, 2007,
	2029, 1135, 2015, 2667, 834, 2231, 1335, 1311, 1338, 2118,
	2734, 2735, 3412, 1346, 2737, 1140, 2585, 2042, 805, 2018,
	1249, 1250, 3117, 1840, 2013, 2007, 2012, 1153, 2010, 2015,
	2511, 2513, 1152, 1151, 1369, 1112, 507, 2833, 3058, 1176,
	1180, 1180, 1180, 1110, 2017, 2424, 2731, 1160, 1255, 2318,
	1255, 940, 1415, 3116, 1852, 1853, 2016, 2028, 1937, 1352,
	1141, 2594, 2593, 1176, 1176, 967, 2445, 2446, 3424, 1235,
	1237, 750, 751, 752, 1132, 834, 1181, 1182, 1247, 1248,
	1559, 2454, 745, 2016, 1560, 1222, 3047, 1939, 1938, 1162,
	3046, 1936, 3052, 3053, 1558, 3359, 3360, 713, 1408, 1409,
	1410, 1411, 1412, 748, 798, 1213, 1214, 2067, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1314, 714, 1317, 1318, 1446, 1447, 1201, 1325, 1326, 1204,
	1285, 1456, 1306, 1319, 1320, 2023, 3031, 1342, 1238, 2021,
	3431, 1349, 1453, 1454, 1455, 1505, 717, 1168, 2686, 1333,
	1489, 798, 1173, 500, 1330, 1364, 1365, 1334, 1499, 1183,
	1130, 1131, 3364, 1378, 1263, 1003, 1959, 1202, 1203, 1514,
	1205, 1206, 1207, 483, 1276, 2018, 1495, 1496, 1497, 1402,
	1598, 3430, 1282, 1598, 1399, 1294, 1946, 800, 2444, 1511,
	799, 3421, 1512, 3403, 1295, 2041, 2512, 716, 3398, 3392,
	2369, 719, 718, 2765, 1544, 940, 1522, 1523, 2808, 1947,
	1948, 968, 1003, 2098, 1540, 2207, 2761, 1284, 2836, 1380,
	2819, 1927, 2702, 1569, 2230, 1255, 1574, 1575, 1767, 1577,
	1578, 478, 1418, 1490, 800, 478, 1384, 799, 1255, 499,
	1898, 495, 756, 1897, 497, 1596, 2732, 1368, 498, 1377,
	1255, 1374, 496, 1003, 1373, 1367, 1223, 1396, 1360, 2740,
	1992, 494, 1355, 3422, 965, 1845, 1543, 809, 3110, 3391,
	3399, 1845, 3192, 1005, 1006, 1007, 1004, 2687, 1376, 1375,
	1958, 1620, 2639, 1372, 1393, 1487, 1488, 1616, 1491, 1626,
	1626, 3369, 1223, 1398, 1223, 1223, 1506, 2370, 478, 478,
	1568, 1569, 1569, 3339, 3295, 1255, 1694, 1695, 1707, 1513,
	3289, 1515, 966, 3238, 1624, 1003, 1437, 2099, 937, 2614,
	2765, 1579, 463, 3173, 1255, 1583, 1504, 1576, 2455, 2457,
	2458, 2459, 2456, 1551, 856, 861, 862, 2099, 2370, 1544,
	966, 1845, 3172, 3168, 1544, 1544, 1005, 1006, 1007, 1004,
	2637, 2099, 478, 1569, 1255, 2530, 1752, 3167, 478, 478,
	478, 1757, 1758, 1845, 1444, 1445, 1765, 3166, 1762, 1763,
	1743, 1612, 2321, 1769, 1645, 3340, 3296, 1385, 1689, 1690,
	191, 2313, 3135, 191, 191, 3135, 191, 1619, 1632, 1633,
	1622, 1623, 1991, 1777, 2220, 3174, 1780, 1564, 1565, 1783,
	1567, 3165, 1785, 2212, 3134, 2129, 1516, 703, 704, 705,
	706, 1580, 1581, 1582, 1980, 3135, 2992, 2934, 2865, 937,
	1721, 2749, 1478, 1541, 1505, 1505, 1811, 1546, 2506, 3135,
	1749, 1505, 1505, 1713, 1573, 1715, 1836, 1547, 1822, 3135,
	834, 2294, 1748, 1176, 834, 1733, 1734, 1588, 1748, 1748,
	1748, 1821, 1735, 1736, 1751, 1563, 1627, 1180, 1728, 1601,
	1816, 1003, 1596, 1708, 2286, 2002, 1255, 1834, 1932, 1180,
	1628, 1778, 1902, 3135, 1781, 1782, 3135, 1784, 1754, 1755,
	1756, 1608, 1593, 1610, 1611, 1603, 1592, 2246, 2993, 2129,
	2866, 1629, 1613, 2750, 1609, 2228, 2216, 1617, 1599, 1600,
	2099, 2214, 2209, 1827, 1618, 1738, 1161, 1449, 584, 594,
	1630, 1631, 2202, 1003, 1573, 968, 2200, 585, 1828, 593,
	586, 590, 589, 587, 588, 858, 859, 860, 2198, 1812,
	2196, 1979, 1863, 1864, 1928, 1693, 1003, 1696, 1909, 1241,
	703, 704, 705, 706, 1869, 3386, 1712, 1873, 1714, 3341,
	1722, 1908, 2884, 708, 1492, 1859, 2703, 2534, 2852, 1003,
	1604, 1605, 1107, 1396, 1896, 2372, 1887, 1980, 2210, 500,
	2233, 2232, 591, 2215, 2210, 1886, 2224, 1614, 1615, 1750,
	1474, 1885, 1844, 1020, 2203, 1997, 1471, 1884, 2201, 1893,
	1473, 1470, 1472, 1476, 1477, 1891, 1878, 1775, 1475, 1773,
	2197, 2188, 2197, 1980, 592, 1806, 1927, 1826, 831, 3079,
	1003, 833, 1806, 1361, 1905, 831, 1266, 1792, 833, 1910,
	1911, 1912, 2110, 1003, 1915, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1772, 1760, 1903, 1904, 1003, 1906, 1003, 1357,
	1050, 953, 552, 1813, 1913, 478, 478, 1003, 478, 1877,
	932, 1815, 2707, 1003, 1845, 499, 927, 495, 925, 2932,
	497, 478, 478, 478, 498, 1737, 1825, 2577, 496, 1243,
	3378, 1245, 1818, 1977, 1824, 1177, 1829, 715, 1005, 1006,
	1007, 1004, 1246, 1984, 1223, 1362, 708, 1023, 1024, 1025,
	1026, 1027, 1020, 1981, 932, 3365, 1494, 1493, 2039, 1494,
	1493, 3133, 1867, 831, 1166, 1858, 833, 3106, 1167, 1223,
	1019, 1018, 1028, 1029, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1020, 3216, 2034, 1876, 1437, 1860, 2263, 3049, 1900,
	3048, 1871, 3005, 2858, 2766, 1950, 1951, 2759, 1953, 2698,
	2754, 1481, 1482, 1483, 1484, 1485, 1486, 1479, 1480, 2751,
	3032, 1969, 1970, 1971, 2876, 924, 920, 921, 922, 923,
	2681, 2268, 2476, 2267, 2266, 2264, 3217, 2874, 1242, 2348,
	2317, 2040, 1861, 1862, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1020, 2243, 2103, 2103, 1707, 2103, 1776, 2213, 2120,
	1570, 1178, 1986, 1987, 3033, 1157, 1156, 942, 2877, 2793,
	2253, 720, 1989, 1990, 463, 463, 1528, 1443, 1544, 1521,
	1544, 2875, 940, 2182, 1452, 2699, 1872, 1452, 1255, 478,
	1923, 1925, 1926, 1440, 1442, 1439, 1952, 1441, 1544, 1544,
	2265, 1298, 2536, 1776, 478, 3256, 1005, 1006, 1007, 1004,
	940, 2172, 473, 1940, 1960, 1004, 1293, 2796, 1707, 1007,
	1004, 2177, 2124, 2179, 834, 3061, 3060, 191, 2553, 2700,
	1292, 834, 2416, 2415, 1929, 2398, 2396, 2001, 3040, 2045,
	3407, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 1073, 2107,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 3395, 2068, 2069, 2070, 2071, 2072, 1180, 2073, 2105,
	1985, 2109, 1005, 1006, 1007, 1004, 2278, 2226, 1998, 1261,
	1834, 2006, 3381, 2192, 2005, 1988, 2116, 1255, 2117, 1255,
	1994, 1255, 3350, 1995, 1748, 3345, 940, 1509, 2019, 2020,
	3279, 2025, 1996, 3001, 2245, 2850, 2121, 2122, 3006, 3007,
	1074, 1510, 2176, 1005, 1006, 1007, 1004, 1052, 2183, 834,
	3247, 1298, 2174, 2236, 2131, 3218, 2347, 3158, 1255, 2272,
	1051, 2181, 2082, 2269, 2270, 3151, 3092, 2254, 2137, 831,
	3035, 2466, 833, 3380, 2279, 3034, 2273, 2274, 2111, 1255,
	2878, 1235, 1237, 3280, 2276, 2277, 2271, 2849, 2857, 3002,
	2281, 2851, 1253, 1005, 1006, 1007, 1004, 2282, 1005, 1006,
	1007, 1004, 2125, 2673, 2573, 2548, 1993, 2280, 2547, 1005,
	1006, 1007, 1004, 1253, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1009, 1544, 2464, 2462, 2451, 940, 2465, 2283, 2284,
	940, 2175, 2449, 478, 2448, 2447, 2257, 2257, 2439, 1255,
	2173, 2433, 2345, 1005, 1006, 1007, 1004, 2432, 1569, 2431,
	2430, 2314, 2794, 1931, 2240, 2368, 1005, 1006, 1007, 1004,
	2128, 2374, 1795, 2607, 2242, 2255, 1794, 1793, 2237, 2222,
	2223, 2289, 2290, 1005, 1006, 1007, 1004, 2295, 2384, 2463,
	2461, 2450, 2184, 1789, 2305, 940, 2378, 2379, 2227, 1788,
	2251, 1746, 2229, 2395, 1745, 2234, 1005, 1006, 1007, 1004,
	940, 940, 940, 1626, 1744, 1299, 940, 1358, 2406, 2407,
	2408, 940, 1125, 2412, 2413, 2481, 2414, 2659, 2247, 2248,
	3225, 2357, 2606, 2328, 3368, 2358, 1396, 3420, 2262, 547,
	3312, 2260, 549, 2218, 3310, 2365, 2966, 548, 3307, 2103,
	3204, 1005, 1006, 1007, 1004, 2366, 3010, 3189, 1005, 1006,
	1007, 1004, 3178, 2467, 2322, 3162, 3157, 1645, 2137, 3156,
	3130, 463, 2386, 2375, 3128, 3093, 1569, 940, 1707, 1707,
	1707, 1707, 3042, 3019, 2334, 2964, 2377, 2962, 2941, 940,
	1707, 2380, 2938, 2103, 2324, 1889, 2936, 2329, 2471, 2848,
	2847, 3208, 2844, 2393, 2827, 2825, 3221, 2393, 2250, 1255,
	2760, 2389, 2756, 2747, 2323, 2746, 2682, 2643, 2642, 2984,
	478, 478, 2343, 2641, 3107, 834, 2400, 1005, 1006, 1007,
	1004, 1935, 2587, 2373, 2584, 2546, 8, 2367, 7, 2401,
	2402, 2520, 2460, 2452, 2405, 1005, 1006, 1007, 1004, 2411,
	2442, 2440, 2436, 2385, 2435, 2388, 2434, 2219, 1573, 1797,
	2391, 1888, 645, 644, 2502, 2397, 3328, 1791, 1554, 2422,
	2423, 1553, 1359, 1081, 1077, 191, 1076, 928, 712, 2404,
	191, 2394, 2996, 2437, 2438, 2985, 2871, 1005, 1006, 1007,
	1004, 2870, 2869, 2540, 2835, 2542, 2831, 2826, 2441, 2824,
	2809, 1505, 2799, 1505, 2798, 2489, 2563, 2473, 2383, 2531,
	2524, 2525, 2974, 1544, 2784, 2572, 2783, 2489, 1544, 2708,
	174, 1255, 163, 138, 2579, 1821, 2973, 2472, 2646, 2477,
	2636, 2612, 2490, 2491, 2492, 2493, 2924, 2605, 1005, 1006,
	1007, 1004, 2505, 2597, 2504, 2503, 2501, 2596, 2475, 2591,
	2822, 2514, 1005, 1006, 1007, 1004, 2518, 2521, 2529, 2320,
	2590, 2199, 1005, 1006, 1007, 1004, 2537, 2195, 2194, 1914,
	1907, 2541, 1901, 1899, 1895, 1543, 1005, 1006, 1007, 1004,
	2562, 1894, 1892, 2611, 2376, 1883, 1880, 1318, 1879, 168,
	1325, 1326, 1796, 2381, 2382, 1539, 1538, 1319, 1320, 1537,
	1508, 1507, 2560, 2600, 1881, 2602, 1333, 1498, 2566, 2535,
	1267, 1330, 1265, 2539, 1334, 2538, 940, 2581, 2610, 3377,
	174, 2576, 3371, 3357, 3354, 2662, 3352, 2558, 3246, 2561,
	2556, 1071, 3175, 2554, 2565, 2677, 2569, 3164, 3159, 2568,
	478, 2567, 1313, 3074, 1005, 1006, 1007, 1004, 3059, 3055,
	2691, 940, 940, 940, 2949, 2575, 2947, 2922, 2619, 2620,
	1707, 1977, 2921, 2706, 2621, 2622, 2623, 2624, 2588, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2918, 596, 117,
	2595, 2589, 2559, 2720, 117, 2723, 2917, 2723, 2723, 168,
	2603, 2604, 940, 2685, 2645, 2609, 1005, 1006, 1007, 1004,
	2638, 2860, 2601, 2656, 2727, 2655, 2742, 1324, 1315, 1329,
	1332, 2598, 2599, 1255, 1255, 1321, 2739, 1164, 2468, 1875,
	2357, 1005, 1006, 1007, 1004, 2640, 2399, 2741, 2362, 2361,
	2683, 2360, 2359, 2304, 484, 2644, 2208, 117, 2119, 3237,
	2608, 2743, 2744, 2693, 2694, 2695, 2074, 1253, 1253, 1978,
	1949, 1930, 1438, 168, 2704, 3235, 3396, 2303, 1759, 478,
	2678, 1562, 2718, 2302, 2662, 2684, 1005, 1006, 1007, 1004,
	2701, 1550, 1381, 1345, 2709, 1569, 1569, 2728, 2719, 2710,
	2711, 3233, 2705, 1005, 1006, 1007, 1004, 1322, 2713, 1005,
	1006, 1007, 1004, 1005, 1006, 1007, 1004, 1124, 2724, 2725,
	2301, 1109, 1105, 3231, 2300, 2714, 1104, 1103, 2729, 1019,
	1018, 1028, 1029, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1020, 940, 1102, 1101, 1100, 2272, 1005, 1006, 1007, 1004,
	1005, 1006, 1007, 1004, 2797, 1019, 1018, 1028, 1029, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1020, 832, 1099, 1748,
	1517, 1518, 1519, 1520, 117, 1098, 1524, 1525, 1526, 1527,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 2726, 117,
	1097, 117, 2753, 2752, 1096, 2758, 478, 2757, 1095, 2748,
	2762, 2763, 2299, 2755, 511, 2764, 2773, 1028, 1029, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1020, 2777, 2298, 1094,
	2776, 1874, 1093, 1092, 2780, 2781, 2782, 2297, 1005, 1006,
	1007, 1004, 2821, 1091, 1090, 1089, 1088, 1087, 1086, 2823,
	1085, 1084, 2786, 2792, 1005, 1006, 1007, 1004, 1080, 1079,
	834, 2296, 1078, 1005, 1006, 1007, 1004, 834, 1075, 1068,
	1067, 1065, 2830, 3375, 2293, 1064, 2840, 940, 2810, 2137,
	1063, 1062, 2812, 1061, 1060, 2811, 2816, 1005, 1006, 1007,
	1004, 3326, 2292, 1059, 2815, 1058, 2818, 1057, 2828, 1056,
	1005, 1006, 1007, 1004, 1055, 1005, 1006, 1007, 1004, 2864,
	1054, 1049, 2712, 2291, 1048, 1047, 2919, 3373, 1005, 1006,
	1007, 1004, 2103, 1707, 2881, 970, 1019, 1018, 1028, 1029,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1020, 940, 1005,
	1006, 1007, 1004, 926, 2769, 2770, 1983, 2720, 1965, 958,
	3285, 940, 2772, 2349, 2130, 1799, 2832, 969, 2498, 2496,
	2775, 940, 2774, 2499, 2497, 2500, 1255, 2095, 2096, 2842,
	1019, 1018, 1028, 1029, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1020, 1569, 2285, 2495, 2494, 940, 2855, 3406, 2217,
	1544, 2211, 1158, 2680, 2933, 2834, 102, 2883, 1590, 1591,
	1253, 1544, 2837, 2916, 2946, 2843, 54, 2948, 475, 1005,
	1006, 1007, 1004, 2909, 2571, 191, 2951, 2880, 2418, 2886,
	1585, 1586, 1587, 2952, 2954, 2419, 2420, 2421, 940, 2943,
	2043, 2716, 2882, 2717, 53, 2928, 2925, 2879, 834, 2929,
	2885, 2275, 2923, 2787, 2861, 2862, 2863, 2955, 2931, 2252,
	2867, 2868, 480, 1681, 2937, 2935, 1307, 940, 2940, 2942,
	2206, 479, 481, 2945, 2944, 2241, 2887, 1005, 1006, 1007,
	1004, 1354, 2950, 1339, 2953, 1005, 1006, 1007, 1004, 2926,
	1956, 940, 1255, 1255, 2813, 2814, 2983, 2691, 1761, 2411,
	482, 3025, 964, 3025, 2222, 2223, 2657, 2654, 2939, 2647,
	117, 117, 832, 2967, 2990, 2968, 2957, 2387, 2000, 1973,
	3015, 1594, 1561, 3298, 2489, 3161, 1253, 3017, 1255, 1448,
	1494, 1493, 2745, 3041, 1192, 1120, 1121, 2975, 2083, 2976,
	2991, 2079, 2997, 1118, 1119, 2987, 478, 1692, 940, 940,
	1116, 1117, 940, 940, 1216, 1005, 1006, 1007, 1004, 2086,
	1215, 996, 3017, 2779, 3021, 3022, 2489, 3077, 3020, 3029,
	3028, 2523, 3076, 1823, 3071, 1114, 1115, 1169, 1596, 3038,
	3084, 3039, 2883, 1036, 2916, 2613, 1150, 3063, 3064, 3088,
	3089, 3072, 3073, 3043, 2909, 3372, 2091, 2094, 2095, 2096,
	2092, 3081, 2093, 2097, 3271, 3253, 3251, 3211, 3188, 2994,
	2995, 3187, 3185, 3176, 3087, 3086, 2963, 3036, 3037, 3013,
	2829, 2806, 2805, 2790, 2840, 2030, 1356, 2789, 3080, 2533,
	3113, 1598, 3330, 3329, 3082, 2574, 3062, 1967, 1019, 1018,
	1028, 1029, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1020,
	1882, 955, 3329, 3330, 3095, 3057, 3141, 937, 2785, 3137,
	1184, 3108, 178, 3, 3112, 2091, 2094, 2095, 2096, 2092,
	62, 2093, 2097, 3122, 2, 3125, 3013, 3013, 3342, 3343,
	3013, 3013, 703, 704, 705, 706, 1, 937, 2306, 1548,
	3136, 3123, 3124, 1122, 707, 702, 1232, 2112, 1739, 1259,
	1552, 3078, 3142, 3144, 709, 940, 3143, 2507, 834, 1255,
	2508, 3152, 2778, 2510, 1841, 834, 2478, 2077, 834, 1954,
	1113, 2676, 1159, 749, 1500, 1366, 855, 949, 1363, 948,
	3160, 946, 1450, 598, 1802, 2469, 2443, 3170, 3083, 3297,
	3336, 3245, 3300, 1253, 3169, 1379, 582, 3179, 3098, 3200,
	3249, 3100, 2970, 1846, 1001, 1031, 2555, 1035, 771, 636,
	3194, 609, 1053, 1066, 3177, 1347, 940, 1340, 3184, 2617,
	2615, 3182, 3212, 1032, 1034, 1030, 857, 1033, 1019, 1018,
	1028, 1029, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1020,
	608, 2854, 3207, 2339, 2526, 940, 3145, 854, 3203, 3206,
	772, 1786, 1255, 3096, 3222, 3240, 3243, 3214, 1308, 1312,
	3219, 1999, 3153, 3416, 3405, 3230, 3232, 3234, 3236, 3387,
	3370, 3276, 3223, 3401, 3316, 3355, 2979, 2977, 3244, 2978,
	3239, 3348, 3272, 3013, 3229, 518, 1253, 3252, 3248, 3254,
	3255, 1718, 461, 3250, 1255, 816, 3075, 1798, 3171, 1264,
	519, 1982, 3264, 484, 3163, 3281, 730, 1964, 731, 723,
	2355, 2354, 1419, 1010, 3270, 1436, 2633, 2634, 1045, 557,
	1870, 2336, 3278, 2904, 2519, 61, 60, 3304, 1253, 59,
	58, 1768, 199, 600, 117, 3290, 198, 3291, 3008, 3292,
	3303, 3293, 3242, 3294, 3013, 3302, 580, 1005, 1006, 1007,
	1004, 579, 940, 578, 577, 3308, 576, 3194, 2090, 3309,
	2088, 3213, 2087, 1702, 1701, 1766, 2689, 2409, 2403, 2026,
	759, 2031, 1634, 3013, 3282, 3226, 3227, 3335, 3324, 3054,
	3224, 3327, 3325, 3319, 3321, 2453, 1584, 2022, 1651, 3338,
	3331, 3332, 3333, 3334, 3346, 2425, 940, 1648, 117, 1647,
	2417, 3050, 117, 3347, 3044, 1678, 2838, 3024, 3351, 2888,
	3353, 2889, 2895, 1972, 117, 880, 876, 878, 879, 877,
	2261, 3304, 3367, 3363, 117, 2003, 1478, 2649, 1945, 1944,
	1942, 1941, 1133, 940, 3303, 940, 3366, 3199, 3260, 758,
	3374, 2986, 3376, 2135, 2133, 2771, 2767, 3379, 1810, 798,
	1819, 2570, 1703, 1699, 1966, 3338, 3383, 3119, 940, 1589,
	3385, 3390, 724, 1962, 99, 3394, 152, 3397, 898, 48,
	3400, 89, 88, 98, 150, 47, 1217, 1218, 183, 1220,
	3314, 1224, 1225, 1226, 3311, 3404, 182, 3411, 185, 184,
	181, 3415, 2185, 3414, 2186, 180, 1296, 179, 3027, 3423,
	697, 38, 37, 33, 12, 3411, 3428, 3427, 11, 34,
	3415, 21, 22, 1271, 1272, 1273, 1274, 1275, 20, 1277,
	1278, 1279, 1280, 1281, 1402, 2249, 1370, 1287, 1288, 19,
	25, 31, 800, 30, 110, 799, 109, 3426, 29, 108,
	107, 106, 3429, 105, 104, 28, 18, 42, 41, 1019,
	1018, 1028, 1029, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1020, 1402, 40, 1402, 9, 97, 95, 27, 96, 93,
	94, 92, 784, 90, 73, 72, 71, 86, 85, 84,
	760, 83, 82, 81, 1474, 79, 1402, 80, 884, 770,
	1471, 70, 69, 68, 1473, 1470, 1472, 1476, 1477, 67,
	66, 91, 1475, 77, 87, 78, 76, 762, 906, 910,
	912, 914, 916, 917, 919, 75, 924, 920, 921, 922,
	923, 74, 901, 902, 903, 904, 882, 883, 907, 65,
	885, 64, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 897, 899, 895, 896, 905, 63, 136, 1868, 135,
	134, 133, 132, 909, 911, 913, 915, 918, 1018, 1028,
	1029, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1020, 130,
	783, 782, 1019, 1018, 1028, 1029, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1020, 131, 129, 128, 781, 127, 126,
	125, 900, 124, 43, 44, 45, 1706, 46, 757, 146,
	145, 147, 149, 151, 148, 153, 143, 141, 144, 761,
	793, 142, 140, 56, 100, 17, 24, 4, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 789, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1481, 1482, 1483, 1484, 1485,
	1486, 1479, 1480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 790,
	794, 117, 117, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 778, 0,
	776, 780, 797, 0, 0, 0, 777, 774, 773, 0,
	779, 764, 765, 763, 766, 767, 768, 769, 0, 795,
	0, 796, 832, 0, 0, 0, 0, 0, 0, 832,
	0, 0, 791, 792, 2258, 2259, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 787,
	0, 0, 0, 0, 350, 786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 293, 0, 0, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 455, 0, 456,
	0, 0, 607, 0, 460, 381, 334, 1036, 0, 0,
	0, 668, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 0, 0, 597, 645, 644, 584,
	594, 0, 0, 268, 197, 457, 0, 458, 585, 0,
	593, 586, 590, 589, 587, 588, 0, 660, 0, 785,
	0, 1753, 0, 0, 555, 568, 0, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 565, 566, 0, 0, 0, 0, 617, 0, 567,
	0, 0, 612, 591, 595, 0, 0, 0, 0, 258,
	386, 403, 269, 377, 416, 274, 384, 264, 349, 373,
	0, 0, 260, 401, 383, 331, 312, 313, 259, 0,
	368, 291, 304, 288, 347, 592, 615, 619, 287, 682,
	613, 411, 262, 0, 410, 346, 397, 402, 332, 326,
	261, 399, 330, 325, 316, 295, 683, 317, 318, 308,
	358, 324, 359, 309, 336, 335, 337, 0, 0, 0,
	0, 0, 439, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 610, 0, 0,
	0, 413, 0, 0, 666, 0, 0, 0, 385, 0,
	0, 319, 0, 0, 0, 614, 0, 371, 352, 679,
	556, 0, 369, 322, 398, 360, 404, 387, 412, 365,
	361, 253, 388, 290, 333, 265, 267, 285, 292, 294,
	296, 297, 342, 343, 355, 376, 389, 390, 391, 289,
	275, 370, 276, 306, 277, 254, 281, 280, 282, 378,
	283, 256, 356, 395, 0, 302, 366, 329, 257, 328,
	357, 394, 393, 266, 420, 426, 427, 0, 0, 432,
	0, 0, 0, 441, 446, 447, 448, 450, 451, 452,
	453, 0, 0, 2106, 0, 434, 0, 0, 0, 1502,
	1501, 1503, 425, 300, 250, 251, 470, 664, 348, 0,
	0, 0, 0, 678, 659, 661, 662, 665, 669, 670,
	671, 672, 673, 675, 677, 681, 469, 0, 0, 0,
	0, 0, 466, 354, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 406,
	418, 435, 438, 0, 0, 0, 1706, 255, 437, 0,
	0, 0, 0, 0, 0, 117, 0, 680, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 618, 0, 0,
	338, 339, 340, 341, 667, 0, 273, 436, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 299,
	305, 449, 307, 272, 353, 301, 415, 314, 0, 442,
	0, 443, 0, 0, 0, 0, 345, 310, 311, 379,
	315, 323, 367, 414, 351, 372, 270, 405, 380, 327,
	0, 0, 689, 663, 688, 690, 691, 687, 692, 693,
	674, 575, 0, 622, 685, 684, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 248, 278, 279, 284, 467, 464, 396, 468, 0,
	252, 0, 321, 0, 362, 298, 0, 0, 652, 629,
	630, 631, 573, 632, 626, 627, 628, 653, 620, 649,
	650, 599, 623, 633, 648, 634, 651, 654, 655, 694,
	695, 640, 624, 220, 696, 637, 656, 647, 646, 635,
	621, 657, 658, 606, 601, 638, 639, 625, 641, 642,
	643, 574, 602, 603, 604, 605, 0, 0, 0, 421,
	422, 423, 445, 407, 0, 465, 0, 0, 0, 616,
	0, 0, 0, 0, 0, 0, 0, 117, 350, 0,
	0, 471, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 571, 0, 0, 0, 293, 1545, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 0, 456, 0, 0, 607, 0, 460, 381,
	334, 0, 0, 0, 0, 668, 676, 0, 0, 0,
	0, 0, 0, 0, 1730, 0, 0, 564, 0, 0,
	597, 645, 644, 584, 594, 0, 0, 268, 197, 457,
	0, 458, 585, 0, 593, 586, 590, 589, 587, 588,
	0, 660, 0, 0, 0, 0, 0, 0, 555, 568,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1706, 1706, 1706, 1706,
	0, 0, 0, 0, 0, 565, 566, 0, 1706, 0,
	0, 617, 0, 567, 0, 0, 1731, 591, 595, 0,
	0, 0, 0, 258, 386, 403, 269, 377, 416, 274,
	384, 264, 349, 373, 0, 0, 260, 401, 383, 331,
	312, 313, 259, 0, 368, 291, 304, 288, 347, 592,
	615, 619, 287, 682, 613, 411, 262, 0, 410, 346,
	397, 402, 332, 326, 261, 399, 330, 325, 316, 295,
	683, 317, 318, 308, 358, 324, 359, 309, 336, 335,
	337, 0, 0, 0, 0, 0, 439, 440, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 117, 0,
	0, 610, 0, 0, 0, 413, 0, 0, 666, 0,
	0, 0, 385, 0, 0, 319, 0, 0, 117, 614,
	0, 371, 352, 679, 556, 117, 369, 322, 398, 360,
	404, 387, 412, 365, 361, 253, 388, 290, 333, 265,
	267, 285, 292, 294, 296, 297, 342, 343, 355, 376,
	389, 390, 391, 289, 275, 370, 276, 306, 277, 254,
	281, 280, 282, 378, 283, 256, 356, 395, 0, 302,
	366, 329, 257, 328, 357, 394, 393, 266, 420, 426,
	427, 0, 0, 432, 0, 0, 0, 441, 446, 447,
	448, 450, 451, 452, 453, 0, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 425, 300, 250, 251,
	470, 664, 348, 0, 0, 0, 0, 678, 659, 661,
	662, 665, 669, 670, 671, 672, 673, 675, 677, 681,
	469, 0, 0, 0, 0, 0, 466, 354, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 406, 418, 435, 438, 0, 0, 0,
	0, 255, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 417, 0, 0, 1706, 0,
	0, 618, 0, 0, 338, 339, 340, 341, 667, 0,
	273, 436, 364, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 431, 299, 305, 449, 307, 272, 353, 301,
	415, 314, 0, 442, 0, 443, 0, 0, 0, 0,
	345, 310, 311, 379, 315, 323, 367, 414, 351, 372,
	270, 405, 380, 327, 0, 0, 689, 663, 688, 690,
	691, 687, 692, 693, 674, 575, 0, 622, 685, 684,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 248, 278, 279, 284, 467,
	464, 396, 468, 0, 252, 0, 321, 0, 362, 298,
	0, 0, 652, 629, 630, 631, 573, 632, 626, 627,
	628, 653, 620, 649, 650, 599, 623, 633, 648, 634,
	651, 654, 655, 694, 695, 640, 624, 220, 696, 637,
	656, 647, 646, 635, 621, 657, 658, 606, 601, 638,
	639, 625, 641, 642, 643, 574, 602, 603, 604, 605,
	0, 0, 0, 421, 422, 423, 445, 407, 0, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 293, 0, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 455,
	0, 456, 0, 0, 1039, 0, 460, 381, 334, 0,
	0, 0, 0, 668, 676, 0, 117, 0, 0, 0,
	0, 0, 0, 117, 0, 564, 117, 0, 597, 645,
	644, 584, 594, 0, 0, 268, 197, 457, 0, 458,
	585, 0, 593, 586, 590, 589, 587, 588, 0, 660,
	0, 0, 0, 0, 0, 0, 555, 568, 0, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 566, 0, 0, 0, 0, 617,
	0, 567, 0, 0, 612, 591, 595, 0, 0, 0,
	0, 258, 386, 403, 269, 377, 416, 274, 384, 264,
	349, 373, 0, 0, 260, 401, 383, 331, 312, 313,
	259, 0, 368, 291, 304, 288, 347, 592, 615, 619,
	287, 682, 613, 411, 262, 0, 410, 346, 397, 402,
	332, 326, 261, 399, 330, 325, 316, 295, 683, 317,
	318, 308, 358, 324, 359, 309, 336, 335, 337, 0,
	0, 0, 0, 117, 439, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	0, 0, 0, 413, 0, 0, 666, 0, 0, 0,
	385, 0, 0, 319, 0, 0, 0, 614, 0, 371,
	352, 679, 556, 0, 369, 322, 398, 360, 404, 387,
	412, 365, 361, 253, 388, 290, 333, 265, 267, 285,
	292, 294, 296, 297, 342, 343, 355, 376, 389, 390,
	391, 289, 275, 370, 276, 306, 277, 254, 281, 280,
	282, 378, 283, 256, 356, 395, 0, 302, 366, 329,
	257, 328, 357, 394, 393, 266, 420, 426, 427, 0,
	0, 432, 0, 0, 0, 441, 446, 447, 448, 450,
	451, 452, 453, 0, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 425, 300, 250, 251, 470, 664,
	348, 0, 0, 0, 0, 678, 659, 661, 662, 665,
	669, 670, 671, 672, 673, 675, 677, 681, 469, 0,
	0, 0, 0, 0, 466, 354, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 406, 418, 435, 438, 0, 0, 0, 0, 255,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 618,
	0, 0, 338, 339, 340, 341, 667, 0, 273, 436,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	431, 299, 305, 449, 307, 272, 353, 301, 415, 314,
	0, 442, 0, 443, 0, 0, 0, 0, 345, 310,
	311, 379, 315, 323, 367, 414, 351, 372, 270, 405,
	380, 327, 0, 0, 689, 663, 688, 690, 691, 687,
	692, 693, 674, 575, 0, 622, 685, 684, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 248, 278, 279, 284, 467, 464, 396,
	468, 0, 252, 0, 321, 139, 362, 298, 0, 0,
	652, 629, 630, 631, 573, 632, 626, 627, 628, 653,
	620, 649, 650, 599, 623, 633, 648, 634, 651, 654,
	655, 694, 695, 640, 624, 220, 696, 637, 656, 647,
	646, 635, 621, 657, 658, 606, 601, 638, 639, 625,
	641, 642, 643, 574, 602, 603, 604, 605, 0, 616,
	0, 421, 422, 423, 445, 407, 0, 465, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 571, 0, 471, 459, 293, 3384, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 0, 456, 0, 0, 607, 0, 460, 381,
	334, 0, 0, 0, 0, 668, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 0, 0,
	597, 645, 644, 584, 594, 0, 0, 268, 197, 457,
	0, 458, 585, 0, 593, 586, 590, 589, 587, 588,
	0, 660, 0, 0, 0, 0, 0, 0, 555, 568,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 566, 0, 0, 0,
	0, 617, 0, 567, 0, 0, 612, 591, 595, 0,
	0, 0, 0, 258, 386, 403, 269, 377, 416, 274,
	384, 264, 349, 373, 0, 0, 260, 401, 383, 331,
	312, 313, 259, 0, 368, 291, 304, 288, 347, 592,
	615, 619, 287, 682, 613, 411, 262, 0, 410, 346,
	397, 402, 332, 326, 261, 399, 330, 325, 316, 295,
	683, 317, 318, 308, 358, 324, 359, 309, 336, 335,
	337, 0, 0, 0, 0, 0, 439, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 0, 0, 0, 413, 0, 0, 666, 0,
	0, 0, 385, 0, 0, 319, 0, 0, 0, 614,
	0, 371, 352, 679, 556, 0, 369, 322, 398, 360,
	404, 387, 412, 365, 361, 253, 388, 290, 333, 265,
	267, 285, 292, 294, 296, 297, 342, 343, 355, 376,
	389, 390, 391, 289, 275, 370, 276, 306, 277, 254,
	281, 280, 282, 378, 283, 256, 356, 395, 0, 302,
	366, 329, 257, 328, 357, 394, 393, 266, 420, 426,
	427, 0, 0, 432, 0, 0, 0, 441, 446, 447,
	448, 450, 451, 452, 453, 0, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 425, 300, 250, 251,
	470, 664, 348, 0, 0, 0, 0, 678, 659, 661,
	662, 665, 669, 670, 671, 672, 673, 675, 677, 681,
	469, 0, 0, 0, 0, 0, 466, 354, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 406, 418, 435, 438, 0, 0, 0,
	0, 255, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 618, 0, 0, 338, 339, 340, 341, 667, 0,
	273, 436, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 431, 299, 305, 449, 307, 272, 353, 301,
	415, 314, 0, 442, 0, 443, 0, 0, 0, 0,
	345, 310, 311, 379, 315, 323, 367, 414, 351, 372,
	270, 405, 380, 327, 0, 0, 689, 663, 688, 690,
	691, 687, 692, 693, 674, 575, 0, 622, 685, 684,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 248, 278, 279, 284, 467,
	464, 396, 468, 0, 252, 0, 321, 0, 362, 298,
	0, 0, 652, 629, 630, 631, 573, 632, 626, 627,
	628, 653, 620, 649, 650, 599, 623, 633, 648, 634,
	651, 654, 655, 694, 695, 640, 624, 220, 696, 637,
	656, 647, 646, 635, 621, 657, 658, 606, 601, 638,
	639, 625, 641, 642, 643, 574, 602, 603, 604, 605,
	0, 616, 0, 421, 422, 423, 445, 407, 0, 465,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 571, 0, 471, 459, 293, 1545, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 455, 0, 456, 0, 0, 607, 0,
	460, 381, 334, 0, 0, 0, 0, 668, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 0, 597, 645, 644, 584, 594, 0, 0, 268,
	197, 457, 0, 458, 585, 0, 593, 586, 590, 589,
	587, 588, 0, 660, 0, 0, 0, 0, 0, 0,
	555, 568, 0, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 566, 0,
	0, 0, 0, 617, 0, 567, 0, 0, 612, 591,
	595, 0, 0, 0, 0, 258, 386, 403, 269, 377,
	416, 274, 384, 264, 349, 373, 0, 0, 260, 401,
	383, 331, 312, 313, 259, 0, 368, 291, 304, 288,
	347, 592, 615, 619, 287, 682, 613, 411, 262, 0,
	410, 346, 397, 402, 332, 326, 261, 399, 330, 325,
	316, 295, 683, 317, 318, 308, 358, 324, 359, 309,
	336, 335, 337, 0, 0, 0, 0, 0, 439, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 0, 0, 0, 413, 0, 0,
	666, 0, 0, 0, 385, 0, 0, 319, 0, 0,
	0, 614, 0, 371, 352, 679, 556, 0, 369, 322,
	398, 360, 404, 387, 412, 365, 361, 253, 388, 290,
	333, 265, 267, 285, 292, 294, 296, 297, 342, 343,
	355, 376, 389, 390, 391, 289, 275, 370, 276, 306,
	277, 254, 281, 280, 282, 378, 283, 256, 356, 395,
	0, 302, 366, 329, 257, 328, 357, 394, 393, 266,
	420, 426, 427, 0, 0, 432, 0, 0, 0, 441,
	446, 447, 448, 450, 451, 452, 453, 0, 0, 0,
	0, 434, 0, 0, 0, 0, 0, 0, 425, 300,
	250, 251, 470, 664, 348, 0, 0, 0, 0, 678,
	659, 661, 662, 665, 669, 670, 671, 672, 673, 675,
	677, 681, 469, 0, 0, 0, 0, 0, 466, 354,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 406, 418, 435, 438, 0,
	0, 0, 0, 255, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 618, 0, 0, 338, 339, 340, 341,
	667, 0, 273, 436, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 431, 299, 305, 449, 307, 272,
	353, 301, 415, 314, 0, 442, 0, 443, 0, 0,
	0, 0, 345, 310, 311, 379, 315, 323, 367, 414,
	351, 372, 270, 405, 380, 327, 0, 0, 689, 663,
	688, 690, 691, 687, 692, 693, 674, 575, 0, 622,
	685, 684, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 248, 278, 279,
	284, 467, 464, 396, 468, 0, 252, 0, 321, 0,
	362, 298, 0, 0, 652, 629, 630, 631, 573, 632,
	626, 627, 628, 653, 620, 649, 650, 599, 623, 633,
	648, 634, 651, 654, 655, 694, 695, 640, 624, 220,
	696, 637, 656, 647, 646, 635, 621, 657, 658, 606,
	601, 638, 639, 625, 641, 642, 643, 574, 602, 603,
	604, 605, 0, 616, 0, 421, 422, 423, 445, 407,
	0, 465, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 571, 0, 471, 459, 293,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 455, 0, 456, 0, 0,
	607, 0, 460, 381, 334, 0, 0, 0, 0, 668,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 0, 0, 597, 645, 644, 584, 594, 0,
	0, 268, 197, 457, 0, 458, 585, 0, 593, 586,
	590, 589, 587, 588, 0, 660, 0, 0, 0, 0,
	0, 0, 555, 568, 0, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	566, 1291, 0, 0, 0, 617, 0, 567, 0, 0,
	612, 591, 595, 0, 0, 0, 0, 258, 386, 403,
	269, 377, 416, 274, 384, 264, 349, 373, 0, 0,
	260, 401, 383, 331, 312, 313, 259, 0, 368, 291,
	304, 288, 347, 592, 615, 619, 287, 682, 613, 411,
	262, 0, 410, 346, 397, 402, 332, 326, 261, 399,
	330, 325, 316, 295, 683, 317, 318, 308, 358, 324,
	359, 309, 336, 335, 337, 0, 0, 0, 0, 0,
	439, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 0, 0, 0, 413,
	0, 0, 666, 0, 0, 0, 385, 0, 0, 319,
	0, 0, 0, 614, 0, 371, 352, 679, 556, 0,
	369, 322, 398, 360, 404, 387, 412, 365, 361, 253,
	388, 290, 333, 265, 267, 285, 292, 294, 296, 297,
	342, 343, 355, 376, 389, 390, 391, 289, 275, 370,
	276, 306, 277, 254, 281, 280, 282, 378, 283, 256,
	356, 395, 0, 302, 366, 329, 257, 328, 357, 394,
	393, 266, 420, 426, 427, 0, 0, 432, 0, 0,
	0, 441, 446, 447, 448, 450, 451, 452, 453, 0,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	425, 300, 250, 251, 470, 664, 348, 0, 0, 0,
	0, 678, 659, 661, 662, 665, 669, 670, 671, 672,
	673, 675, 677, 681, 469, 0, 0, 0, 0, 0,
	466, 354, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 406, 418, 435,
	438, 0, 0, 0, 0, 255, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 618, 0, 0, 338, 339,
	340, 341, 667, 0, 273, 436, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 431, 299, 305, 449,
	307, 272, 353, 301, 415, 314, 0, 442, 0, 443,
	0, 0, 0, 0, 345, 310, 311, 379, 315, 323,
	367, 414, 351, 372, 270, 405, 380, 327, 0, 0,
	689, 663, 688, 690, 691, 687, 692, 693, 674, 575,
	0, 622, 685, 684, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 248,
	278, 279, 284, 467, 464, 396, 468, 0, 252, 0,
	321, 0, 362, 298, 0, 0, 652, 629, 630, 631,
	573, 632, 626, 627, 628, 653, 620, 649, 650, 599,
	623, 633, 648, 634, 651, 654, 655, 694, 695, 640,
	624, 220, 696, 637, 656, 647, 646, 635, 621, 657,
	658, 606, 601, 638, 639, 625, 641, 642, 643, 574,
	602, 603, 604, 605, 0, 0, 0, 421, 422, 423,
	445, 407, 616, 465, 0, 1890, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 0, 471,
	459, 0, 0, 0, 571, 0, 0, 0, 293, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 455, 0, 456, 0, 0, 607,
	0, 460, 381, 334, 0, 0, 0, 0, 668, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 0, 0, 597, 645, 644, 584, 594, 0, 0,
	268, 197, 457, 0, 458, 585, 0, 593, 586, 590,
	589, 587, 588, 0, 660, 0, 0, 0, 0, 0,
	0, 555, 568, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 566,
	0, 0, 0, 0, 617, 0, 567, 0, 0, 612,
	591, 595, 0, 0, 0, 0, 258, 386, 403, 269,
	377, 416, 274, 384, 264, 349, 373, 0, 0, 260,
	401, 383, 331, 312, 313, 259, 0, 368, 291, 304,
	288, 347, 592, 615, 619, 287, 682, 613, 411, 262,
	0, 410, 346, 397, 402, 332, 326, 261, 399, 330,
	325, 316, 295, 683, 317, 318, 308, 358, 324, 359,
	309, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 0, 0, 0, 413, 0,
	0, 666, 0, 0, 0, 385, 0, 0, 319, 0,
	0, 0, 614, 0, 371, 352, 679, 556, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 253, 388,
	290, 333, 265, 267, 285, 292, 294, 296, 297, 342,
	343, 355, 376, 389, 390, 391, 289, 275, 370, 276,
	306, 277, 254, 281, 280, 282, 378, 283, 256, 356,
	395, 0, 302, 366, 329, 257, 328, 357, 394, 393,
	266, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 425,
	300, 250, 251, 470, 664, 348, 0, 0, 0, 0,
	678, 659, 661, 662, 665, 669, 670, 671, 672, 673,
	675, 677, 681, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 255, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 618, 0, 0, 338, 339, 340,
	341, 667, 0, 273, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 299, 305, 449, 307,
	272, 353, 301, 415, 314, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 310, 311, 379, 315, 323, 367,
	414, 351, 372, 270, 405, 380, 327, 0, 0, 689,
	663, 688, 690, 691, 687, 692, 693, 674, 575, 0,
	622, 685, 684, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 248, 278,
	279, 284, 467, 464, 396, 468, 0, 252, 0, 321,
	0, 362, 298, 0, 0, 652, 629, 630, 631, 573,
	632, 626, 627, 628, 653, 620, 649, 650, 599, 623,
	633, 648, 634, 651, 654, 655, 694, 695, 640, 624,
	220, 696, 637, 656, 647, 646, 635, 621, 657, 658,
	606, 601, 638, 639, 625, 641, 642, 643, 574, 602,
	603, 604, 605, 0, 616, 0, 421, 422, 423, 445,
	407, 0, 465, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 571, 0, 471, 459,
	293, 0, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 455, 0, 456, 0,
	0, 607, 0, 460, 381, 334, 0, 0, 0, 0,
	668, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 0, 0, 597, 645, 644, 584, 594,
	0, 0, 268, 197, 457, 0, 458, 585, 0, 593,
	586, 590, 589, 587, 588, 0, 660, 0, 0, 0,
	0, 0, 0, 555, 568, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 566, 0, 0, 0, 0, 617, 0, 567, 0,
	0, 612, 591, 595, 0, 0, 0, 0, 258, 386,
	403, 269, 377, 416, 274, 384, 264, 349, 373, 0,
	0, 260, 401, 383, 331, 312, 313, 259, 0, 368,
	291, 304, 288, 347, 592, 615, 619, 287, 682, 613,
	411, 262, 0, 410, 346, 397, 402, 332, 326, 261,
	399, 330, 325, 316, 295, 683, 317, 318, 308, 358,
	324, 359, 309, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 0, 0, 0,
	413, 0, 0, 666, 0, 0, 0, 385, 0, 0,
	319, 0, 0, 0, 614, 0, 371, 352, 679, 556,
	0, 369, 322, 398, 360, 404, 387, 412, 365, 361,
	253, 388, 290, 333, 265, 267, 285, 292, 294, 296,
	297, 342, 343, 355, 376, 389, 390, 391, 289, 275,
	370, 276, 306, 277, 254, 281, 280, 282, 378, 283,
	256, 356, 395, 0, 302, 366, 329, 257, 328, 357,
	394, 393, 266, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 425, 300, 250, 251, 470, 664, 348, 0, 0,
	0, 0, 678, 659, 661, 662, 665, 669, 670, 671,
	672, 673, 675, 677, 681, 469, 0, 0, 0, 0,
	0, 466, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 255, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 618, 0, 0, 338,
	339, 340, 341, 667, 0, 273, 436, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 299, 305,
	449, 307, 272, 353, 301, 415, 314, 0, 442, 0,
	443, 0, 0, 0, 0, 345, 310, 311, 379, 315,
	323, 367, 414, 351, 372, 270, 405, 380, 327, 0,
	0, 689, 663, 688, 690, 691, 687, 692, 693, 674,
	575, 0, 622, 685, 684, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	248, 278, 279, 284, 467, 464, 396, 468, 0, 252,
	0, 321, 0, 362, 298, 0, 0, 652, 629, 630,
	631, 573, 632, 626, 627, 628, 653, 620, 649, 650,
	599, 623, 633, 648, 634, 651, 654, 655, 694, 695,
	640, 624, 220, 696, 637, 656, 647, 646, 635, 621,
	657, 658, 606, 601, 638, 639, 625, 641, 642, 643,
	574, 602, 603, 604, 605, 0, 616, 0, 421, 422,
	423, 445, 407, 0, 465, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 1420, 0, 0, 0, 571, 0,
	471, 459, 293, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 455, 0,
	456, 0, 0, 607, 0, 460, 381, 334, 0, 0,
	0, 0, 668, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 597, 645, 644,
	584, 594, 0, 0, 268, 197, 457, 0, 458, 585,
	0, 593, 586, 590, 589, 587, 588, 0, 660, 0,
	0, 0, 0, 0, 0, 0, 568, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 565, 566, 0, 0, 0, 0, 617, 0,
	567, 0, 0, 612, 591, 595, 0, 0, 0, 0,
	258, 386, 403, 269, 377, 416, 274, 384, 264, 349,
	373, 0, 0, 260, 401, 383, 331, 312, 313, 259,
	0, 368, 291, 304, 288, 347, 592, 615, 619, 287,
	682, 613, 411, 262, 0, 410, 346, 397, 402, 332,
	326, 261, 399, 330, 325, 316, 295, 683, 317, 318,
	308, 358, 324, 359, 309, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 0,
	0, 0, 413, 0, 0, 666, 0, 0, 0, 385,
	0, 0, 319, 0, 0, 0, 614, 0, 371, 352,
	679, 0, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 253, 388, 290, 333, 265, 267, 285, 292,
	294, 296, 297, 342, 343, 355, 376, 389, 390, 391,
	289, 275, 370, 276, 306, 277, 254, 281, 280, 282,
	378, 283, 256, 356, 395, 0, 302, 366, 329, 257,
	328, 357, 394, 393, 266, 420, 1421, 1422, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 425, 300, 250, 251, 470, 664, 348,
	0, 0, 0, 0, 678, 659, 661, 662, 665, 669,
	670, 671, 672, 673, 675, 677, 681, 469, 0, 0,
	0, 0, 0, 466, 354, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	406, 418, 435, 438, 0, 0, 0, 0, 255, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 618, 0,
	0, 338, 339, 340, 341, 667, 0, 273, 436, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	299, 305, 449, 307, 272, 353, 301, 415, 314, 0,
	442, 0, 443, 0, 0, 0, 0, 345, 310, 311,
	379, 315, 323, 367, 414, 351, 372, 270, 405, 380,
	327, 0, 0, 689, 663, 688, 690, 691, 687, 692,
	693, 674, 575, 0, 622, 685, 684, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 248, 278, 279, 284, 467, 464, 396, 468,
	0, 252, 0, 321, 0, 362, 298, 0, 0, 652,
	629, 630, 631, 573, 632, 626, 627, 628, 653, 620,
	649, 650, 599, 623, 633, 648, 634, 651, 654, 655,
	694, 695, 640, 624, 220, 696, 637, 656, 647, 646,
	635, 621, 657, 658, 606, 601, 638, 639, 625, 641,
	642, 643, 574, 602, 603, 604, 605, 0, 616, 0,
	421, 422, 423, 445, 407, 0, 465, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	571, 0, 471, 459, 293, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	455, 0, 456, 0, 0, 607, 0, 460, 381, 334,
	0, 0, 0, 0, 668, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 597,
	645, 644, 584, 594, 0, 0, 268, 197, 457, 0,
	458, 585, 0, 593, 586, 590, 589, 587, 588, 0,
	660, 0, 0, 0, 0, 0, 0, 555, 568, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 565, 566, 0, 0, 0, 0,
	617, 0, 567, 0, 0, 612, 591, 595, 0, 0,
	0, 0, 258, 386, 403, 269, 377, 416, 274, 384,
	264, 349, 373, 0, 0, 260, 401, 383, 331, 312,
	313, 259, 0, 368, 291, 304, 288, 347, 592, 615,
	619, 287, 682, 613, 411, 262, 0, 410, 346, 397,
	402, 332, 326, 261, 399, 330, 325, 316, 295, 683,
	317, 318, 308, 358, 324, 359, 309, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 0, 0, 0, 413, 0, 0, 666, 0, 0,
	0, 385, 0, 0, 319, 0, 0, 0, 614, 0,
	371, 352, 679, 556, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 253, 388, 290, 333, 265, 267,
	285, 292, 294, 296, 297, 342, 343, 355, 376, 389,
	390, 391, 289, 275, 370, 276, 306, 277, 254, 281,
	280, 282, 378, 283, 256, 356, 395, 0, 302, 366,
	329, 257, 328, 357, 394, 393, 266, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 425, 300, 250, 251, 470,
	664, 348, 0, 0, 0, 0, 678, 659, 661, 662,
	665, 669, 670, 671, 672, 673, 675, 677, 681, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	255, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	618, 0, 0, 338, 339, 340, 341, 667, 0, 273,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 299, 305, 449, 307, 272, 353, 301, 415,
	314, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	310, 311, 379, 315, 323, 367, 414, 351, 372, 270,
	405, 380, 327, 0, 0, 689, 663, 688, 690, 691,
	687, 692, 693, 674, 575, 0, 622, 685, 684, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 248, 278, 279, 284, 467, 464,
	396, 468, 0, 252, 0, 321, 0, 362, 298, 0,
	0, 652, 629, 630, 631, 573, 632, 626, 627, 628,
	653, 620, 649, 650, 599, 623, 633, 648, 634, 651,
	654, 655, 694, 695, 640, 624, 220, 696, 637, 656,
	647, 646, 635, 621, 657, 658, 606, 601, 638, 639,
	625, 641, 642, 643, 574, 602, 603, 604, 605, 0,
	616, 0, 421, 422, 423, 445, 407, 0, 465, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 571, 0, 471, 459, 293, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 455, 0, 456, 0, 0, 607, 0, 460,
	381, 334, 0, 0, 0, 0, 668, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 0,
	0, 597, 645, 644, 584, 594, 0, 0, 268, 197,
	457, 0, 458, 585, 0, 593, 586, 590, 589, 587,
	588, 0, 660, 0, 0, 0, 0, 0, 0, 0,
	568, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 566, 0, 0,
	0, 0, 617, 0, 567, 0, 0, 612, 591, 595,
	0, 0, 0, 0, 258, 386, 403, 269, 377, 416,
	274, 384, 264, 349, 373, 0, 0, 260, 401, 383,
	331, 312, 313, 259, 0, 368, 291, 304, 288, 347,
	592, 615, 619, 287, 682, 613, 411, 262, 0, 410,
	346, 397, 402, 332, 326, 261, 399, 330, 325, 316,
	295, 683, 317, 318, 308, 358, 324, 359, 309, 336,
	335, 337, 0, 0, 0, 0, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 0, 0, 0, 413, 0, 0, 666,
	0, 0, 0, 385, 0, 0, 319, 0, 0, 0,
	614, 0, 371, 352, 679, 0, 0, 369, 322, 398,
	360, 404, 387, 412, 365, 361, 253, 388, 290, 333,
	265, 267, 285, 292, 294, 296, 297, 342, 343, 355,
	376, 389, 390, 391, 289, 275, 370, 276, 306, 277,
	254, 281, 280, 282, 378, 283, 256, 356, 395, 0,
	302, 366, 329, 257, 328, 357, 394, 393, 266, 420,
	426, 427, 0, 0, 432, 0, 0, 0, 441, 446,
	447, 448, 450, 451, 452, 453, 0, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 425, 300, 250,
	251, 470, 664, 348, 0, 0, 0, 0, 678, 659,
	661, 662, 665, 669, 670, 671, 672, 673, 675, 677,
	681, 469, 0, 0, 0, 0, 0, 466, 354, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 406, 418, 435, 438, 0, 0,
	0, 0, 255, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 618, 0, 0, 338, 339, 340, 341, 667,
	0, 273, 436, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 299, 305, 449, 307, 272, 353,
	301, 415, 314, 0, 442, 0, 443, 0, 0, 0,
	0, 345, 310, 311, 379, 315, 323, 367, 414, 351,
	372, 270, 405, 380, 327, 0, 0, 689, 663, 688,
	690, 691, 687, 692, 693, 674, 575, 0, 622, 685,
	684, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 248, 278, 279, 284,
	467, 464, 396, 468, 0, 252, 0, 321, 0, 362,
	298, 0, 0, 652, 629, 630, 631, 573, 632, 626,
	627, 628, 653, 620, 649, 650, 599, 623, 633, 648,
	634, 651, 654, 655, 694, 695, 640, 624, 220, 696,
	637, 656, 647, 646, 635, 621, 657, 658, 606, 601,
	638, 639, 625, 641, 642, 643, 574, 602, 603, 604,
	605, 0, 0, 0, 421, 422, 423, 445, 407, 0,
	465, 174, 51, 163, 138, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 471, 459, 0, 164,
	0, 0, 0, 0, 0, 0, 156, 0, 293, 0,
	165, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 455, 0, 456, 0, 0, 115,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	168, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 386, 403, 269,
	377, 416, 274, 384, 264, 349, 373, 0, 0, 260,
	401, 383, 331, 312, 313, 259, 0, 368, 291, 304,
	288, 347, 0, 400, 428, 287, 419, 0, 411, 262,
	0, 410, 346, 397, 402, 332, 326, 261, 399, 330,
	325, 316, 295, 444, 317, 318, 308, 358, 324, 359,
	309, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 137, 162, 172,
	0, 101, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 189, 0, 0, 0, 385, 0, 0, 319, 161,
	155, 154, 429, 0, 371, 352, 57, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 253, 388,
	290, 333, 265, 267, 285, 292, 294, 296, 297, 342,
	343, 355, 376, 389, 390, 391, 289, 275, 370, 276,
	306, 277, 254, 281, 280, 282, 378, 283, 256, 356,
	395, 0, 302, 366, 329, 257, 328, 357, 394, 393,
	266, 420, 426, 427, 0, 0, 432, 157, 158, 159,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 425,
	300, 250, 251, 408, 286, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 192,
	0, 0, 454, 200, 0, 0, 0, 160, 0, 201,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 255, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 303, 0, 273, 436, 364, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 0,
	0, 0, 0, 0, 430, 431, 299, 305, 449, 307,
	272, 353, 301, 415, 314, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 310, 311, 379, 315, 323, 367,
	414, 351, 372, 270, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 248, 278,
	279, 284, 363, 263, 396, 374, 0, 252, 0, 321,
	139, 362, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 0, 350, 0, 421, 422, 423, 445,
	407, 0, 202, 39, 190, 193, 195, 194, 0, 49,
	0, 293, 0, 5, 320, 0, 0, 118, 203, 459,
	0, 0, 0, 0, 0, 0, 0, 455, 0, 456,
	0, 0, 0, 0, 460, 381, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1072, 0, 0, 196, 0, 0, 584,
	594, 0, 0, 268, 197, 457, 0, 458, 585, 0,
	593, 586, 590, 589, 587, 588, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 591, 0, 0, 0, 0, 0, 258,
	386, 403, 269, 377, 416, 274, 384, 264, 349, 373,
	0, 0, 260, 401, 383, 331, 312, 313, 259, 0,
	368, 291, 304, 288, 347, 592, 400, 428, 287, 419,
	0, 411, 262, 0, 410, 346, 397, 402, 332, 326,
	261, 399, 330, 325, 316, 295, 444, 317, 318, 308,
	358, 324, 359, 309, 336, 335, 337, 0, 0, 0,
	0, 0, 439, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 319, 0, 0, 0, 429, 0, 371, 352, 0,
	0, 0, 369, 322, 398, 360, 404, 387, 412, 365,
	361, 253, 388, 290, 333, 265, 267, 285, 292, 294,
	296, 297, 342, 343, 355, 376, 389, 390, 391, 289,
	275, 370, 276, 306, 277, 254, 281, 280, 282, 378,
	283, 256, 356, 395, 0, 302, 366, 329, 257, 328,
	357, 394, 393, 266, 420, 426, 427, 0, 0, 432,
	0, 0, 0, 441, 446, 447, 448, 450, 451, 452,
	453, 0, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 425, 300, 250, 251, 470, 286, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 424, 0, 0, 0, 454, 469, 0, 0, 0,
	0, 0, 466, 354, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 406,
	418, 435, 438, 0, 0, 0, 0, 255, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 433, 0, 0,
	338, 339, 340, 341, 303, 0, 273, 436, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 299,
	305, 449, 307, 272, 353, 301, 415, 314, 0, 442,
	0, 443, 0, 0, 0, 0, 345, 310, 311, 379,
	315, 323, 367, 414, 351, 372, 270, 405, 380, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 248, 278, 279, 284, 467, 464, 396, 468, 0,
	252, 0, 321, 0, 362, 298, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 0, 0, 0, 421,
	422, 423, 445, 407, 0, 465, 174, 51, 163, 138,
	0, 0, 0, 0, 0, 0, 350, 488, 0, 0,
	0, 471, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 455,
	0, 456, 0, 0, 0, 0, 460, 381, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 457, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 386, 403, 269, 377, 416, 274, 384, 264,
	349, 373, 0, 0, 260, 401, 383, 331, 312, 313,
	259, 0, 368, 291, 304, 288, 347, 0, 400, 428,
	287, 419, 0, 411, 262, 0, 410, 346, 397, 402,
	332, 326, 261, 399, 330, 325, 316, 295, 444, 317,
	318, 308, 358, 324, 359, 309, 336, 335, 337, 0,
	0, 0, 0, 0, 439, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 319, 0, 0, 0, 429, 0, 371,
	352, 0, 0, 0, 369, 322, 398, 360, 404, 387,
	412, 365, 361, 253, 388, 290, 333, 265, 267, 285,
	292, 294, 296, 297, 342, 343, 355, 376, 389, 390,
	391, 289, 275, 370, 276, 306, 277, 254, 281, 280,
	282, 378, 283, 256, 356, 395, 0, 302, 366, 329,
	257, 328, 357, 394, 393, 266, 420, 426, 427, 0,
	0, 432, 0, 0, 0, 441, 446, 447, 448, 450,
	451, 452, 453, 0, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 425, 300, 250, 251, 470, 286,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 424, 0, 0, 0, 454, 469, 0,
	0, 0, 0, 0, 466, 354, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 406, 418, 435, 438, 0, 0, 0, 0, 255,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 433,
	0, 0, 338, 339, 340, 341, 489, 491, 273, 436,
	364, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	431, 299, 305, 449, 307, 272, 353, 301, 415, 314,
	0, 442, 0, 443, 0, 0, 0, 0, 345, 310,
	311, 379, 315, 323, 367, 414, 351, 372, 270, 405,
	380, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 248, 278, 279, 284, 467, 464, 396,
	468, 0, 252, 0, 321, 139, 362, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 350, 249, 244, 245, 246, 247, 0, 0,
	898, 421, 422, 423, 445, 407, 0, 465, 0, 293,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 459, 455, 0, 456, 0, 0,
	0, 0, 460, 381, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 457, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	884, 0, 0, 0, 0, 0, 0, 258, 386, 403,
	269, 377, 416, 274, 384, 264, 349, 373, 0, 0,
	2159, 2161, 2162, 2163, 2164, 2165, 2166, 0, 2171, 2167,
	2168, 2169, 2170, 0, 2154, 2155, 2156, 2157, 882, 2138,
	2160, 0, 2139, 346, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2151, 2152, 2149, 2150, 2158, 358, 324,
	359, 309, 336, 335, 337, 909, 911, 913, 915, 918,
	439, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 319,
	0, 0, 0, 2153, 0, 371, 352, 0, 0, 0,
	369, 322, 398, 360, 404, 387, 412, 365, 361, 253,
	388, 290, 333, 265, 267, 285, 292, 294, 296, 297,
	342, 343, 355, 376, 389, 390, 391, 289, 275, 370,
	276, 306, 277, 254, 281, 280, 282, 378, 283, 256,
	356, 395, 0, 302, 366, 329, 257, 328, 357, 394,
	393, 266, 420, 426, 427, 0, 0, 432, 0, 0,
	0, 441, 446, 447, 448, 450, 451, 452, 453, 0,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	425, 300, 250, 251, 470, 286, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 424,
	0, 0, 0, 454, 469, 0, 0, 0, 0, 0,
	466, 354, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 406, 418, 435,
	438, 0, 0, 0, 0, 255, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 433, 0, 0, 338, 339,
	340, 341, 303, 0, 273, 436, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 431, 299, 305, 449,
	307, 272, 353, 301, 415, 314, 0, 442, 0, 443,
	0, 0, 0, 0, 345, 310, 311, 379, 315, 323,
	367, 414, 351, 372, 270, 405, 380, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 248,
	278, 279, 284, 467, 464, 396, 468, 0, 252, 908,
	321, 0, 362, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 350, 249,
	244, 245, 246, 247, 0, 0, 0, 421, 422, 423,
	445, 407, 0, 465, 0, 293, 0, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	459, 455, 0, 456, 0, 0, 0, 0, 460, 381,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 457,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 2014, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 386, 403, 269, 377, 416, 274,
	384, 264, 349, 373, 0, 0, 260, 401, 383, 331,
	312, 313, 259, 0, 368, 291, 304, 288, 347, 0,
	400, 428, 287, 419, 0, 411, 262, 0, 410, 346,
	397, 402, 332, 326, 261, 399, 330, 325, 316, 295,
	444, 317, 318, 308, 358, 324, 359, 309, 336, 335,
	337, 0, 0, 0, 0, 0, 439, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 413, 0, 0, 0, 2013,
	0, 2012, 385, 2010, 2015, 319, 0, 0, 0, 429,
	0, 371, 352, 0, 0, 0, 369, 322, 398, 360,
	404, 387, 412, 365, 361, 253, 388, 290, 333, 265,
	267, 285, 292, 294, 296, 297, 342, 343, 355, 376,
	389, 390, 391, 289, 275, 370, 276, 306, 277, 254,
	281, 280, 282, 378, 283, 256, 356, 395, 2016, 302,
	366, 329, 257, 328, 357, 394, 393, 266, 420, 426,
	427, 0, 0, 432, 0, 0, 0, 441, 446, 447,
	448, 450, 451, 452, 453, 0, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 425, 300, 250, 251,
	470, 286, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 424, 0, 0, 0, 454,
	469, 0, 0, 0, 0, 0, 466, 354, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 406, 418, 435, 438, 0, 0, 0,
	0, 255, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 433, 0, 0, 338, 339, 340, 341, 303, 0,
	273, 436, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 431, 299, 305, 449, 307, 272, 353, 301,
	415, 314, 0, 442, 0, 443, 0, 0, 0, 0,
	345, 310, 311, 379, 315, 323, 367, 414, 351, 372,
	270, 405, 380, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 248, 278, 279, 284, 467,
	464, 396, 468, 0, 252, 0, 321, 0, 362, 298,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	350, 0, 0, 421, 422, 423, 445, 407, 0, 465,
	0, 0, 1770, 0, 0, 0, 0, 293, 0, 0,
	320, 0, 0, 0, 0, 471, 459, 0, 0, 0,
	0, 0, 0, 455, 0, 456, 0, 0, 0, 0,
	460, 381, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 1771, 0, 0, 0, 268,
	197, 457, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 1005, 1006, 1007, 1004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 386, 403, 269, 377,
	416, 274, 384, 264, 349, 373, 0, 0, 260, 401,
	383, 331, 312, 313, 259, 0, 368, 291, 304, 288,
	347, 0, 400, 428, 287, 419, 0, 411, 262, 0,
	410, 346, 397, 402, 332, 326, 261, 399, 330, 325,
	316, 295, 444, 317, 318, 308, 358, 324, 359, 309,
	336, 335, 337, 0, 0, 0, 0, 0, 439, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 319, 0, 0,
	0, 429, 0, 371, 352, 0, 0, 0, 369, 322,
	398, 360, 404, 387, 412, 365, 361, 253, 388, 290,
	333, 265, 267, 285, 292, 294, 296, 297, 342, 343,
	355, 376, 389, 390, 391, 289, 275, 370, 276, 306,
	277, 254, 281, 280, 282, 378, 283, 256, 356, 395,
	0, 302, 366, 329, 257, 328, 357, 394, 393, 266,
	420, 426, 427, 0, 0, 432, 0, 0, 0, 441,
	446, 447, 448, 450, 451, 452, 453, 0, 0, 0,
	0, 434, 0, 0, 0, 0, 0, 0, 425, 300,
	250, 251, 470, 286, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 424, 0, 0,
	0, 454, 469, 0, 0, 0, 0, 0, 466, 354,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 406, 418, 435, 438, 0,
	0, 0, 0, 255, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 433, 0, 0, 338, 339, 340, 341,
	303, 0, 273, 436, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 431, 299, 305, 449, 307, 272,
	353, 301, 415, 314, 0, 442, 0, 443, 0, 0,
	0, 0, 345, 310, 311, 379, 315, 323, 367, 414,
	351, 372, 270, 405, 380, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 248, 278, 279,
	284, 467, 464, 396, 468, 0, 252, 0, 321, 0,
	362, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 350, 249, 244, 245,
	246, 247, 0, 0, 0, 421, 422, 423, 445, 407,
	0, 465, 0, 293, 815, 0, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 459, 455,
	0, 456, 0, 0, 0, 0, 460, 381, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 822,
	823, 0, 0, 0, 0, 268, 197, 457, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 386, 810, 269, 377, 416, 274, 384, 264,
	349, 373, 0, 0, 260, 401, 383, 331, 312, 313,
	259, 0, 368, 291, 304, 288, 347, 0, 400, 428,
	287, 419, 800, 411, 262, 799, 410, 346, 397, 402,
	332, 326, 261, 399, 330, 325, 316, 295, 444, 317,
	318, 308, 358, 324, 359, 309, 336, 335, 337, 0,
	0, 0, 0, 0, 439, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 319, 0, 0, 0, 429, 0, 371,
	352, 0, 0, 0, 369, 322, 398, 360, 404, 387,
	412, 813, 361, 253, 388, 290, 333, 265, 267, 285,
	292, 294, 296, 297, 342, 343, 355, 376, 389, 390,
	391, 289, 275, 370, 276, 306, 277, 254, 281, 280,
	282, 378, 283, 256, 356, 395, 0, 302, 366, 329,
	257, 328, 357, 394, 393, 266, 420, 426, 427, 0,
	0, 432, 0, 0, 0, 441, 446, 447, 448, 450,
	451, 452, 453, 0, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 425, 300, 250, 251, 470, 286,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 424, 0, 0, 0, 454, 469, 0,
	0, 0, 0, 0, 466, 354, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 406, 418, 435, 438, 0, 0, 0, 0, 255,
	437, 0, 0, 0, 0, 0, 0, 814, 0, 409,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 817,
	0, 0, 338, 339, 340, 341, 303, 0, 273, 436,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	431, 299, 305, 449, 307, 272, 353, 301, 415, 314,
	0, 442, 0, 443, 0, 0, 0, 0, 824, 811,
	820, 812, 315, 323, 367, 414, 351, 372, 270, 405,
	380, 821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 248, 278, 279, 284, 467, 464, 396,
	468, 0, 252, 0, 321, 0, 362, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 350, 249, 244, 245, 246, 247, 0, 0,
	0, 421, 422, 423, 445, 407, 0, 465, 0, 293,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 459, 455, 0, 456, 0, 0,
	0, 0, 460, 381, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 457, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 386, 403,
	269, 377, 416, 274, 384, 264, 349, 373, 0, 0,
	260, 401, 383, 331, 312, 313, 259, 0, 368, 291,
	304, 288, 347, 0, 400, 428, 287, 419, 0, 411,
	262, 0, 410, 346, 397, 402, 332, 326, 261, 399,
	330, 325, 316, 295, 444, 317, 318, 308, 358, 324,
	359, 309, 336, 335, 337, 0, 0, 0, 0, 0,
	439, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 413,
	0, 0, 0, 2037, 2035, 0, 385, 0, 2036, 319,
	0, 0, 0, 429, 0, 371, 352, 0, 0, 0,
	369, 322, 398, 360, 404, 387, 412, 365, 361, 253,
	388, 290, 333, 265, 267, 285, 292, 294, 296, 297,
	342, 343, 355, 376, 389, 390, 391, 289, 275, 370,
	276, 306, 277, 254, 281, 280, 282, 378, 283, 256,
	356, 395, 0, 302, 366, 329, 257, 328, 357, 394,
	393, 266, 420, 426, 427, 0, 0, 432, 0, 0,
	0, 441, 446, 447, 448, 450, 451, 452, 453, 0,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	425, 300, 250, 251, 470, 286, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 424,
	0, 0, 0, 454, 469, 0, 0, 0, 0, 0,
	466, 354, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 406, 418, 435,
	438, 0, 0, 0, 0, 255, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 433, 0, 0, 338, 339,
	340, 341, 303, 0, 273, 436, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 431, 299, 305, 449,
	307, 272, 353, 301, 415, 314, 0, 442, 0, 443,
	0, 0, 0, 0, 345, 310, 311, 379, 315, 323,
	367, 414, 351, 372, 270, 405, 380, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 248,
	278, 279, 284, 467, 464, 396, 468, 0, 252, 0,
	321, 0, 362, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 174, 0, 0, 249,
	244, 245, 246, 247, 0, 0, 350, 421, 422, 423,
	445, 407, 0, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 320, 0, 0, 471,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 455,
	0, 456, 0, 0, 115, 0, 460, 381, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 1814, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 457, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 386, 403, 269, 377, 416, 274, 384, 264,
	349, 373, 0, 0, 260, 401, 383, 331, 312, 313,
	259, 0, 368, 291, 304, 288, 347, 0, 400, 428,
	287, 419, 0, 411, 262, 0, 410, 346, 397, 402,
	332, 326, 261, 399, 330, 325, 316, 295, 444, 317,
	318, 308, 358, 324, 359, 309, 336, 335, 337, 0,
	0, 0, 0, 0, 439, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 319, 0, 0, 0, 429, 0, 371,
	352, 0, 0, 0, 369, 322, 398, 360, 404, 387,
	412, 365, 361, 253, 388, 290, 333, 265, 267, 285,
	292, 294, 296, 297, 342, 343, 355, 376, 389, 390,
	391, 289, 275, 370, 276, 306, 277, 254, 281, 280,
	282, 378, 283, 256, 356, 395, 0, 302, 366, 329,
	257, 328, 357, 394, 393, 266, 420, 426, 427, 0,
	0, 432, 0, 0, 0, 441, 446, 447, 448, 450,
	451, 452, 453, 0, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 425, 300, 250, 251, 470, 286,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 424, 0, 0, 0, 454, 469, 0,
	0, 0, 0, 0, 466, 354, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 406, 418, 435, 438, 0, 0, 0, 0, 255,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 433,
	0, 0, 338, 339, 340, 341, 303, 0, 273, 436,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	431, 299, 305, 449, 307, 272, 353, 301, 415, 314,
	0, 442, 0, 443, 0, 0, 0, 0, 345, 310,
	311, 379, 315, 323, 367, 414, 351, 372, 270, 405,
	380, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 248, 278, 279, 284, 467, 464, 396,
	468, 0, 252, 0, 321, 139, 362, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	174, 0, 0, 249, 244, 245, 246, 247, 0, 0,
	350, 421, 422, 423, 445, 407, 0, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	320, 0, 0, 471, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 455, 0, 456, 0, 0, 115, 0,
	460, 381, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	1805, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 457, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 386, 403, 269, 377,
	416, 274, 384, 264, 349, 373, 0, 0, 260, 401,
	383, 331, 312, 313, 259, 0, 368, 291, 304, 288,
	347, 0, 400, 428, 287, 419, 0, 411, 262, 0,
	410, 346, 397, 402, 332, 326, 261, 399, 330, 325,
	316, 295, 444, 317, 318, 308, 358, 324, 359, 309,
	336, 335, 337, 0, 0, 0, 0, 0, 439, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 319, 0, 0,
	0, 429, 0, 371, 352, 0, 0, 0, 369, 322,
	398, 360, 404, 387, 412, 365, 361, 253, 388, 290,
	333, 265, 267, 285, 292, 294, 296, 297, 342, 343,
	355, 376, 389, 390, 391, 289, 275, 370, 276, 306,
	277, 254, 281, 280, 282, 378, 283, 256, 356, 395,
	0, 302, 366, 329, 257, 328, 357, 394, 393, 266,
	420, 426, 427, 0, 0, 432, 0, 0, 0, 441,
	446, 447, 448, 450, 451, 452, 453, 0, 0, 0,
	0, 434, 0, 0, 0, 0, 0, 0, 425, 300,
	250, 251, 470, 286, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 424, 0, 0,
	0, 454, 469, 0, 0, 0, 0, 0, 466, 354,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 406, 418, 435, 438, 0,
	0, 0, 0, 255, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 433, 0, 0, 338, 339, 340, 341,
	303, 0, 273, 436, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 431, 299, 305, 449, 307, 272,
	353, 301, 415, 314, 0, 442, 0, 443, 0, 0,
	0, 0, 345, 310, 311, 379, 315, 323, 367, 414,
	351, 372, 270, 405, 380, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 248, 278, 279,
	284, 467, 464, 396, 468, 0, 252, 0, 321, 139,
	362, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 174, 0, 0, 249, 244, 245,
	246, 247, 0, 0, 350, 421, 422, 423, 445, 407,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 320, 0, 0, 471, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 455, 0, 456,
	0, 0, 115, 0, 460, 381, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1704, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 457, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	386, 403, 269, 377, 416, 274, 384, 264, 349, 373,
	0, 0, 260, 401, 383, 331, 312, 313, 259, 0,
	368, 291, 304, 288, 347, 0, 400, 428, 287, 419,
	0, 411, 262, 0, 410, 346, 397, 402, 332, 326,
	261, 399, 330, 325, 316, 295, 444, 317, 318, 308,
	358, 324, 359, 309, 336, 335, 337, 0, 0, 0,
	0, 0, 439, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 319, 0, 0, 0, 429, 0, 371, 352, 0,
	0, 0, 369, 322, 398, 360, 404, 387, 412, 365,
	361, 253, 388, 290, 333, 265, 267, 285, 292, 294,
	296, 297, 342, 343, 355, 376, 389, 390, 391, 289,
	275, 370, 276, 306, 277, 254, 281, 280, 282, 378,
	283, 256, 356, 395, 0, 302, 366, 329, 257, 328,
	357, 394, 393, 266, 420, 426, 427, 0, 0, 432,
	0, 0, 0, 441, 446, 447, 448, 450, 451, 452,
	453, 0, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 425, 300, 250, 251, 470, 286, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 424, 0, 0, 0, 454, 469, 0, 0, 0,
	0, 0, 466, 354, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 406,
	418, 435, 438, 0, 0, 0, 0, 255, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 433, 0, 0,
	338, 339, 340, 341, 303, 0, 273, 436, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 299,
	305, 449, 307, 272, 353, 301, 415, 314, 0, 442,
	0, 443, 0, 0, 0, 0, 345, 310, 311, 379,
	315, 323, 367, 414, 351, 372, 270, 405, 380, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 248, 278, 279, 284, 467, 464, 396, 468, 0,
	252, 0, 321, 139, 362, 298, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	350, 249, 244, 245, 246, 247, 0, 0, 0, 421,
	422, 423, 445, 407, 0, 465, 0, 293, 0, 0,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 459, 455, 0, 456, 0, 0, 0, 0,
	460, 381, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 822, 823, 0, 0, 0, 0, 268,
	197, 457, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 386, 403, 269, 377,
	416, 274, 384, 264, 349, 373, 0, 0, 260, 401,
	383, 331, 312, 313, 259, 0, 368, 291, 304, 288,
	347, 0, 400, 428, 287, 419, 800, 411, 262, 799,
	410, 346, 397, 402, 332, 326, 261, 399, 330, 325,
	316, 295, 444, 317, 318, 308, 358, 324, 359, 309,
	336, 335, 337, 0, 0, 0, 0, 0, 439, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 319, 0, 0,
	0, 429, 0, 371, 352, 0, 0, 0, 369, 322,
	398, 360, 404, 387, 412, 365, 361, 253, 388, 290,
	333, 265, 267, 285, 292, 294, 296, 297, 342, 343,
	355, 376, 389, 390, 391, 289, 275, 370, 276, 306,
	277, 254, 281, 280, 282, 378, 283, 256, 356, 395,
	0, 302, 366, 329, 257, 328, 357, 394, 393, 266,
	420, 426, 427, 0, 0, 432, 0, 0, 0, 441,
	446, 447, 448, 450, 451, 452, 453, 0, 0, 0,
	0, 434, 0, 0, 0, 0, 0, 0, 425, 300,
	250, 251, 470, 286, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 424, 0, 0,
	0, 454, 469, 0, 0, 0, 0, 0, 466, 354,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 406, 418, 435, 438, 0,
	0, 0, 0, 255, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 433, 0, 0, 338, 339, 340, 341,
	303, 0, 273, 436, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 431, 299, 305, 449, 307, 272,
	353, 301, 415, 314, 0, 442, 0, 443, 0, 0,
	0, 0, 824, 1723, 820, 1724, 315, 323, 367, 414,
	351, 372, 270, 405, 380, 821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 248, 278, 279,
	284, 467, 464, 396, 468, 0, 252, 0, 321, 0,
	362, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 0, 350, 0, 421, 422, 423, 445, 407,
	0, 465, 2482, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 320, 0, 0, 0, 471, 459, 0,
	0, 0, 0, 0, 0, 0, 455, 0, 456, 0,
	0, 0, 0, 460, 381, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 457, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 386,
	403, 269, 377, 416, 274, 384, 264, 349, 373, 0,
	0, 260, 401, 383, 331, 312, 313, 259, 0, 368,
	291, 304, 288, 347, 0, 400, 428, 287, 419, 0,
	411, 262, 0, 410, 346, 397, 402, 332, 326, 261,
	399, 330, 325, 316, 295, 444, 317, 318, 308, 358,
	324, 359, 309, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 2485, 0, 0, 2484, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	319, 0, 0, 0, 429, 0, 371, 352, 0, 0,
	0, 369, 322, 398, 360, 404, 387, 412, 365, 361,
	253, 388, 290, 333, 265, 267, 285, 292, 294, 296,
	297, 342, 343, 355, 376, 389, 390, 391, 289, 275,
	370, 276, 306, 277, 254, 281, 280, 282, 378, 283,
	256, 356, 395, 0, 302, 366, 329, 257, 328, 357,
	394, 393, 266, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 425, 300, 250, 251, 470, 286, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	424, 0, 0, 0, 454, 469, 0, 0, 0, 0,
	0, 466, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 255, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 433, 0, 0, 338,
	339, 340, 341, 303, 0, 273, 436, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 299, 305,
	449, 307, 272, 353, 301, 415, 314, 0, 442, 0,
	443, 0, 0, 0, 0, 345, 310, 311, 379, 315,
	323, 367, 414, 351, 372, 270, 405, 380, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	248, 278, 279, 284, 467, 464, 396, 468, 0, 252,
	0, 321, 0, 362, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 350,
	249, 244, 245, 246, 247, 0, 0, 0, 421, 422,
	423, 445, 407, 0, 465, 0, 293, 1258, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 459, 455, 0, 456, 0, 0, 0, 0, 460,
	381, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1256, 0, 0, 0, 268, 197,
	457, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1254, 0, 0,
	0, 0, 0, 0, 258, 386, 403, 269, 377, 416,
	274, 384, 264, 349, 373, 0, 0, 260, 401, 383,
	331, 312, 313, 259, 0, 368, 291, 304, 288, 347,
	0, 400, 428, 287, 419, 0, 411, 262, 0, 410,
	346, 397, 402, 332, 326, 261, 399, 330, 325, 316,
	295, 444, 317, 318, 308, 358, 324, 359, 309, 336,
	335, 337, 0, 0, 0, 0, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 319, 0, 0, 0,
	429, 0, 371, 352, 0, 0, 0, 369, 322, 398,
	360, 404, 387, 412, 365, 361, 253, 388, 290, 333,
	265, 267, 285, 292, 294, 296, 297, 342, 343, 355,
	376, 389, 390, 391, 289, 275, 370, 276, 306, 277,
	254, 281, 280, 282, 378, 283, 256, 356, 395, 0,
	302, 366, 329, 257, 328, 357, 394, 393, 266, 420,
	426, 427, 0, 0, 432, 0, 0, 0, 441, 446,
	447, 448, 450, 451, 452, 453, 0, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 425, 300, 250,
	251, 470, 286, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 424, 0, 0, 0,
	454, 469, 0, 0, 0, 0, 0, 466, 354, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 406, 418, 435, 438, 0, 0,
	0, 0, 255, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 433, 0, 0, 338, 339, 340, 341, 303,
	0, 273, 436, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 299, 305, 449, 307, 272, 353,
	301, 415, 314, 0, 442, 0, 443, 0, 0, 0,
	0, 345, 310, 311, 379, 315, 323, 367, 414, 351,
	372, 270, 405, 380, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 248, 278, 279, 284,
	467, 464, 396, 468, 0, 252, 0, 321, 0, 362,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 350, 249, 244, 245, 246,
	247, 0, 0, 0, 421, 422, 423, 445, 407, 0,
	465, 0, 293, 1252, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 459, 455, 0,
	456, 0, 0, 0, 0, 460, 381, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1256, 0, 0, 0, 268, 197, 457, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1254, 0, 0, 0, 0, 0, 0,
	258, 386, 403, 269, 377, 416, 274, 384, 264, 349,
	373, 0, 0, 260, 401, 383, 331, 312, 313, 259,
	0, 368, 291, 304, 288, 347, 0, 400, 428, 287,
	419, 0, 411, 262, 0, 410, 346, 397, 402, 332,
	326, 261, 399, 330, 325, 316, 295, 444, 317, 318,
	308, 358, 324, 359, 309, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 319, 0, 0, 0, 429, 0, 371, 352,
	0, 0, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 253, 388, 290, 333, 265, 267, 285, 292,
	294, 296, 297, 342, 343, 355, 376, 389, 390, 391,
	289, 275, 370, 276, 306, 277, 254, 281, 280, 282,
	378, 283, 256, 356, 395, 0, 302, 366, 329, 257,
	328, 357, 394, 393, 266, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 425, 300, 250, 251, 470, 286, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 424, 0, 0, 0, 454, 469, 0, 0,
	0, 0, 0, 466, 354, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	406, 418, 435, 438, 0, 0, 0, 0, 255, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 433, 0,
	0, 338, 339, 340, 341, 303, 0, 273, 436, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	299, 305, 449, 307, 272, 353, 301, 415, 314, 0,
	442, 0, 443, 0, 0, 0, 0, 345, 310, 311,
	379, 315, 323, 367, 414, 351, 372, 270, 405, 380,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 248, 278, 279, 284, 467, 464, 396, 468,
	0, 252, 0, 321, 0, 362, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 350, 249, 244, 245, 246, 247, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 0, 293, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 459, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3299, 0, 196, 645, 0, 0, 0, 0, 0,
	268, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 386, 403, 269,
	377, 416, 274, 384, 264, 349, 373, 0, 0, 260,
	401, 383, 331, 312, 313, 259, 0, 368, 291, 304,
	288, 347, 0, 400, 428, 287, 419, 0, 411, 262,
	0, 410, 346, 397, 402, 332, 326, 261, 399, 330,
	325, 316, 295, 444, 317, 318, 308, 358, 324, 359,
	309, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 319, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 253, 388,
	290, 333, 265, 267, 285, 292, 294, 296, 297, 342,
	343, 355, 376, 389, 390, 391, 289, 275, 370, 276,
	306, 277, 254, 281, 280, 282, 378, 283, 256, 356,
	395, 0, 302, 366, 329, 257, 328, 357, 394, 393,
	266, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 425,
	300, 250, 251, 470, 286, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 255, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 303, 0, 273, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 299, 305, 449, 307,
	272, 353, 301, 415, 314, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 310, 311, 379, 315, 323, 367,
	414, 351, 372, 270, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 248, 278,
	279, 284, 467, 464, 396, 468, 0, 252, 0, 321,
	0, 362, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 350, 249, 244,
	245, 246, 247, 0, 0, 0, 421, 422, 423, 445,
	407, 0, 465, 0, 293, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 459,
	455, 0, 456, 0, 0, 0, 0, 460, 381, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1256, 0, 0, 0, 268, 197, 457, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1254, 0, 0, 0, 0,
	0, 0, 258, 386, 403, 269, 377, 416, 274, 384,
	264, 349, 373, 0, 0, 260, 401, 383, 331, 312,
	313, 259, 0, 368, 291, 304, 288, 347, 0, 400,
	428, 287, 419, 0, 411, 262, 0, 410, 346, 397,
	402, 332, 326, 261, 399, 330, 325, 316, 295, 444,
	317, 318, 308, 358, 324, 359, 309, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 319, 0, 0, 0, 429, 0,
	371, 352, 0, 0, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 253, 388, 290, 333, 265, 267,
	285, 292, 294, 296, 297, 342, 343, 355, 376, 389,
	390, 391, 289, 275, 370, 276, 306, 277, 254, 281,
	280, 282, 378, 283, 256, 356, 395, 0, 302, 366,
	329, 257, 328, 357, 394, 393, 266, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 425, 300, 250, 251, 470,
	286, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	255, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 303, 0, 273,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 299, 305, 449, 307, 272, 353, 301, 415,
	314, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	310, 311, 379, 315, 323, 367, 414, 351, 372, 270,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 248, 278, 279, 284, 467, 464,
	396, 468, 0, 252, 0, 321, 0, 362, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 350, 249, 244, 245, 246, 247, 0,
	0, 0, 421, 422, 423, 445, 407, 0, 465, 0,
	293, 0, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 459, 455, 0, 456, 0,
	0, 0, 0, 460, 381, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 1256, 0,
	0, 0, 268, 197, 457, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3018, 0, 0, 0, 0, 0, 0, 258, 386,
	403, 269, 377, 416, 274, 384, 264, 349, 373, 0,
	0, 260, 401, 383, 331, 312, 313, 259, 0, 368,
	291, 304, 288, 347, 0, 400, 428, 287, 419, 0,
	411, 262, 0, 410, 346, 397, 402, 332, 326, 261,
	399, 330, 325, 316, 295, 444, 317, 318, 308, 358,
	324, 359, 309, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	319, 0, 0, 0, 429, 0, 371, 352, 0, 0,
	0, 369, 322, 398, 360, 404, 387, 412, 365, 361,
	253, 388, 290, 333, 265, 267, 285, 292, 294, 296,
	297, 342, 343, 355, 376, 389, 390, 391, 289, 275,
	370, 276, 306, 277, 254, 281, 280, 282, 378, 283,
	256, 356, 395, 0, 302, 366, 329, 257, 328, 357,
	394, 393, 266, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 425, 300, 250, 251, 470, 286, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	424, 0, 0, 0, 454, 469, 0, 0, 0, 0,
	0, 466, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 255, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 433, 0, 0, 338,
	339, 340, 341, 303, 0, 273, 436, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 299, 305,
	449, 307, 272, 353, 301, 415, 314, 0, 442, 0,
	443, 0, 0, 0, 0, 345, 310, 311, 379, 315,
	323, 367, 414, 351, 372, 270, 405, 380, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	248, 278, 279, 284, 467, 464, 396, 468, 0, 252,
	0, 321, 0, 362, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 350, 0, 0, 421, 422,
	423, 445, 407, 0, 465, 0, 0, 2102, 0, 0,
	0, 0, 293, 0, 0, 320, 0, 0, 0, 0,
	471, 459, 0, 0, 0, 0, 0, 0, 455, 0,
	456, 0, 0, 0, 0, 460, 381, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2104, 0, 0, 0, 268, 197, 457, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 386, 403, 269, 377, 416, 274, 384, 264, 349,
	373, 0, 0, 260, 401, 383, 331, 312, 313, 259,
	0, 368, 291, 304, 288, 347, 0, 400, 428, 287,
	419, 0, 411, 262, 0, 410, 346, 397, 402, 332,
	326, 261, 399, 330, 325, 316, 295, 444, 317, 318,
	308, 358, 324, 359, 309, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 319, 0, 0, 0, 429, 0, 371, 352,
	0, 0, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 253, 388, 290, 333, 265, 267, 285, 292,
	294, 296, 297, 342, 343, 355, 376, 389, 390, 391,
	289, 275, 370, 276, 306, 277, 254, 281, 280, 282,
	378, 283, 256, 356, 395, 0, 302, 366, 329, 257,
	328, 357, 394, 393, 266, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 425, 300, 250, 251, 470, 286, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 424, 0, 0, 0, 454, 469, 0, 0,
	0, 0, 0, 466, 354, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	406, 418, 435, 438, 0, 0, 0, 0, 255, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 433, 0,
	0, 338, 339, 340, 341, 303, 0, 273, 436, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	299, 305, 449, 307, 272, 353, 301, 415, 314, 0,
	442, 0, 443, 0, 0, 0, 0, 345, 310, 311,
	379, 315, 323, 367, 414, 351, 372, 270, 405, 380,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 248, 278, 279, 284, 467, 464, 396, 468,
	0, 252, 0, 321, 0, 362, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 350, 249, 244, 245, 246, 247, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 0, 293, 2123,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 459, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 1256, 0, 0, 0,
	268, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 386, 403, 269,
	377, 416, 274, 384, 264, 349, 373, 0, 0, 260,
	401, 383, 331, 312, 313, 259, 0, 368, 291, 304,
	288, 347, 0, 400, 428, 287, 419, 0, 411, 262,
	0, 410, 346, 397, 402, 332, 326, 261, 399, 330,
	325, 316, 295, 444, 317, 318, 308, 358, 324, 359,
	309, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 319, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 253, 388,
	290, 333, 265, 267, 285, 292, 294, 296, 297, 342,
	343, 355, 376, 389, 390, 391, 289, 275, 370, 276,
	306, 277, 254, 281, 280, 282, 378, 283, 256, 356,
	395, 0, 302, 366, 329, 257, 328, 357, 394, 393,
	266, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 425,
	300, 250, 251, 470, 286, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 255, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 303, 0, 273, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 299, 305, 449, 307,
	272, 353, 301, 415, 314, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 310, 311, 379, 315, 323, 367,
	414, 351, 372, 270, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 248, 278,
	279, 284, 467, 464, 396, 468, 0, 252, 0, 321,
	0, 362, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 350, 249, 244,
	245, 246, 247, 0, 0, 0, 421, 422, 423, 445,
	407, 0, 465, 0, 293, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 459,
	455, 0, 456, 0, 0, 0, 0, 460, 381, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3393, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 457, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 386, 403, 269, 377, 416, 274, 384,
	264, 349, 373, 0, 0, 260, 401, 383, 331, 312,
	313, 259, 0, 368, 291, 304, 288, 347, 0, 400,
	428, 287, 419, 0, 411, 262, 0, 410, 346, 397,
	402, 332, 326, 261, 399, 330, 325, 316, 295, 444,
	317, 318, 308, 358, 324, 359, 309, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 319, 0, 0, 0, 429, 0,
	371, 352, 0, 0, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 253, 388, 290, 333, 265, 267,
	285, 292, 294, 296, 297, 342, 343, 355, 376, 389,
	390, 391, 289, 275, 370, 276, 306, 277, 254, 281,
	280, 282, 378, 283, 256, 356, 395, 0, 302, 366,
	329, 257, 328, 357, 394, 393, 266, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 425, 300, 250, 251, 470,
	286, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	255, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 303, 0, 273,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 299, 305, 449, 307, 272, 353, 301, 415,
	314, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	310, 311, 379, 315, 323, 367, 414, 351, 372, 270,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 248, 278, 279, 284, 467, 464,
	396, 468, 0, 252, 0, 321, 0, 362, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 350, 249, 244, 245, 246, 247, 0,
	0, 0, 421, 422, 423, 445, 407, 0, 465, 0,
	293, 0, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 459, 455, 0, 456, 0,
	0, 0, 0, 460, 381, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 645, 0, 0, 0,
	0, 0, 268, 197, 457, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 386,
	403, 269, 377, 416, 274, 384, 264, 349, 373, 0,
	0, 260, 401, 383, 331, 312, 313, 259, 0, 368,
	291, 304, 288, 347, 0, 400, 428, 287, 419, 0,
	411, 262, 0, 410, 346, 397, 402, 332, 326, 261,
	399, 330, 325, 316, 295, 444, 317, 318, 308, 358,
	324, 359, 309, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	319, 0, 0, 0, 429, 0, 371, 352, 0, 0,
	0, 369, 322, 398, 360, 404, 387, 412, 365, 361,
	253, 388, 290, 333, 265, 267, 285, 292, 294, 296,
	297, 342, 343, 355, 376, 389, 390, 391, 289, 275,
	370, 276, 306, 277, 254, 281, 280, 282, 378, 283,
	256, 356, 395, 0, 302, 366, 329, 257, 328, 357,
	394, 393, 266, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 425, 300, 250, 251, 470, 286, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	424, 0, 0, 0, 454, 469, 0, 0, 0, 0,
	0, 466, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 255, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 433, 0, 0, 338,
	339, 340, 341, 303, 0, 273, 436, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 299, 305,
	449, 307, 272, 353, 301, 415, 314, 0, 442, 0,
	443, 0, 0, 0, 0, 345, 310, 311, 379, 315,
	323, 367, 414, 351, 372, 270, 405, 380, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	248, 278, 279, 284, 467, 464, 396, 468, 0, 252,
	0, 321, 0, 362, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 350,
	249, 244, 245, 246, 247, 0, 0, 0, 421, 422,
	423, 445, 407, 0, 465, 0, 293, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 459, 455, 0, 456, 0, 0, 0, 0, 460,
	381, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3315, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	457, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 386, 403, 269, 377, 416,
	274, 384, 264, 349, 373, 0, 0, 260, 401, 383,
	331, 312, 313, 259, 0, 368, 291, 304, 288, 347,
	0, 400, 428, 287, 419, 0, 411, 262, 0, 410,
	346, 397, 402, 332, 326, 261, 399, 330, 325, 316,
	295, 444, 317, 318, 308, 358, 324, 359, 309, 336,
	335, 337, 0, 0, 0, 0, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 319, 0, 0, 0,
	429, 0, 371, 352, 0, 0, 0, 369, 322, 398,
	360, 404, 387, 412, 365, 361, 253, 388, 290, 333,
	265, 267, 285, 292, 294, 296, 297, 342, 343, 355,
	376, 389, 390, 391, 289, 275, 370, 276, 306, 277,
	254, 281, 280, 282, 378, 283, 256, 356, 395, 0,
	302, 366, 329, 257, 328, 357, 394, 393, 266, 420,
	426, 427, 0, 0, 432, 0, 0, 0, 441, 446,
	447, 448, 450, 451, 452, 453, 0, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 425, 300, 250,
	251, 470, 286, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 424, 0, 0, 0,
	454, 469, 0, 0, 0, 0, 0, 466, 354, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 406, 418, 435, 438, 0, 0,
	0, 0, 255, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 433, 0, 0, 338, 339, 340, 341, 303,
	0, 273, 436, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 299, 305, 449, 307, 272, 353,
	301, 415, 314, 0, 442, 0, 443, 0, 0, 0,
	0, 345, 310, 311, 379, 315, 323, 367, 414, 351,
	372, 270, 405, 380, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 248, 278, 279, 284,
	467, 464, 396, 468, 0, 252, 0, 321, 0, 362,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 350, 249, 244, 245, 246,
	247, 0, 0, 0, 421, 422, 423, 445, 407, 0,
	465, 0, 293, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 459, 455, 0,
	456, 0, 0, 0, 0, 460, 381, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 457, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 386, 403, 269, 377, 416, 274, 384, 264, 349,
	373, 0, 0, 260, 401, 383, 331, 312, 313, 259,
	0, 368, 291, 304, 288, 347, 0, 400, 428, 287,
	419, 0, 411, 262, 0, 410, 346, 397, 402, 332,
	326, 261, 399, 330, 325, 316, 295, 444, 317, 318,
	308, 358, 324, 359, 309, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 3241, 0, 0, 385,
	0, 0, 319, 0, 0, 0, 429, 0, 371, 352,
	0, 0, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 253, 388, 290, 333, 265, 267, 285, 292,
	294, 296, 297, 342, 343, 355, 376, 389, 390, 391,
	289, 275, 370, 276, 306, 277, 254, 281, 280, 282,
	378, 283, 256, 356, 395, 0, 302, 366, 329, 257,
	328, 357, 394, 393, 266, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 425, 300, 250, 251, 470, 286, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 424, 0, 0, 0, 454, 469, 0, 0,
	0, 0, 0, 466, 354, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	406, 418, 435, 438, 0, 0, 0, 0, 255, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 433, 0,
	0, 338, 339, 340, 341, 303, 0, 273, 436, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	299, 305, 449, 307, 272, 353, 301, 415, 314, 0,
	442, 0, 443, 0, 0, 0, 0, 345, 310, 311,
	379, 315, 323, 367, 414, 351, 372, 270, 405, 380,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 248, 278, 279, 284, 467, 464, 396, 468,
	0, 252, 0, 321, 0, 362, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 350, 249, 244, 245, 246, 247, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 0, 293, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 459, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3014, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 386, 403, 269,
	377, 416, 274, 384, 264, 349, 373, 0, 0, 260,
	401, 383, 331, 312, 313, 259, 0, 368, 291, 304,
	288, 347, 0, 400, 428, 287, 419, 0, 411, 262,
	0, 410, 346, 397, 402, 332, 326, 261, 399, 330,
	325, 316, 295, 444, 317, 318, 308, 358, 324, 359,
	309, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 319, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 253, 388,
	290, 333, 265, 267, 285, 292, 294, 296, 297, 342,
	343, 355, 376, 389, 390, 391, 289, 275, 370, 276,
	306, 277, 254, 281, 280, 282, 378, 283, 256, 356,
	395, 0, 302, 366, 329, 257, 328, 357, 394, 393,
	266, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 425,
	300, 250, 251, 470, 286, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 255, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 303, 0, 273, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 299, 305, 449, 307,
	272, 353, 301, 415, 314, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 310, 311, 379, 315, 323, 367,
	414, 351, 372, 270, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 248, 278,
	279, 284, 467, 464, 396, 468, 0, 252, 0, 321,
	0, 362, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 350, 249, 244,
	245, 246, 247, 0, 0, 0, 421, 422, 423, 445,
	407, 0, 465, 0, 293, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 459,
	455, 0, 456, 0, 0, 0, 0, 460, 381, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 2841, 0, 0, 0, 268, 197, 457, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 386, 403, 269, 377, 416, 274, 384,
	264, 349, 373, 0, 0, 260, 401, 383, 331, 312,
	313, 259, 0, 368, 291, 304, 288, 347, 0, 400,
	428, 287, 419, 0, 411, 262, 0, 410, 346, 397,
	402, 332, 326, 261, 399, 330, 325, 316, 295, 444,
	317, 318, 308, 358, 324, 359, 309, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 319, 0, 0, 0, 429, 0,
	371, 352, 0, 0, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 253, 388, 290, 333, 265, 267,
	285, 292, 294, 296, 297, 342, 343, 355, 376, 389,
	390, 391, 289, 275, 370, 276, 306, 277, 254, 281,
	280, 282, 378, 283, 256, 356, 395, 0, 302, 366,
	329, 257, 328, 357, 394, 393, 266, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 425, 300, 250, 251, 470,
	286, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	255, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 303, 0, 273,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 299, 305, 449, 307, 272, 353, 301, 415,
	314, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	310, 311, 379, 315, 323, 367, 414, 351, 372, 270,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 248, 278, 279, 284, 467, 464,
	396, 468, 0, 252, 0, 321, 0, 362, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 350, 249, 244, 245, 246, 247, 0,
	0, 0, 421, 422, 423, 445, 407, 0, 465, 0,
	293, 0, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 459, 455, 0, 456, 0,
	0, 0, 0, 460, 381, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 457, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 386,
	403, 269, 377, 416, 274, 384, 264, 349, 373, 0,
	0, 260, 401, 383, 331, 312, 313, 259, 0, 368,
	291, 304, 288, 347, 0, 400, 428, 287, 419, 0,
	411, 262, 0, 410, 346, 397, 402, 332, 326, 261,
	399, 330, 325, 316, 295, 444, 317, 318, 308, 358,
	324, 359, 309, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 3085, 0, 0, 385, 0, 0,
	319, 0, 0, 0, 429, 0, 371, 352, 0, 0,
	0, 369, 322, 398, 360, 404, 387, 412, 365, 361,
	253, 388, 290, 333, 265, 267, 285, 292, 294, 296,
	297, 342, 343, 355, 376, 389, 390, 391, 289, 275,
	370, 276, 306, 277, 254, 281, 280, 282, 378, 283,
	256, 356, 395, 0, 302, 366, 329, 257, 328, 357,
	394, 393, 266, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 425, 300, 250, 251, 470, 286, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	424, 0, 0, 0, 454, 469, 0, 0, 0, 0,
	0, 466, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 255, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 433, 0, 0, 338,
	339, 340, 341, 303, 0, 273, 436, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 299, 305,
	449, 307, 272, 353, 301, 415, 314, 0, 442, 0,
	443, 0, 0, 0, 0, 345, 310, 311, 379, 315,
	323, 367, 414, 351, 372, 270, 405, 380, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	248, 278, 279, 284, 467, 464, 396, 468, 0, 252,
	0, 321, 0, 362, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 350,
	249, 244, 245, 246, 247, 0, 0, 0, 421, 422,
	423, 445, 407, 0, 465, 0, 293, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 459, 455, 0, 456, 0, 0, 0, 0, 460,
	381, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 2692, 0, 0, 0, 268, 197,
	457, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 386, 403, 269, 377, 416,
	274, 384, 264, 349, 373, 0, 0, 260, 401, 383,
	331, 312, 313, 259, 0, 368, 291, 304, 288, 347,
	0, 400, 428, 287, 419, 0, 411, 262, 0, 410,
	346, 397, 402, 332, 326, 261, 399, 330, 325, 316,
	295, 444, 317, 318, 308, 358, 324, 359, 309, 336,
	335, 337, 0, 0, 0, 0, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 319, 0, 0, 0,
	429, 0, 371, 352, 0, 0, 0, 369, 322, 398,
	360, 404, 387, 412, 365, 361, 253, 388, 290, 333,
	265, 267, 285, 292, 294, 296, 297, 342, 343, 355,
	376, 389, 390, 391, 289, 275, 370, 276, 306, 277,
	254, 281, 280, 282, 378, 283, 256, 356, 395, 0,
	302, 366, 329, 257, 328, 357, 394, 393, 266, 420,
	426, 427, 0, 0, 432, 0, 0, 0, 441, 446,
	447, 448, 450, 451, 452, 453, 0, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 425, 300, 250,
	251, 470, 286, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 424, 0, 0, 0,
	454, 469, 0, 0, 0, 0, 0, 466, 354, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 406, 418, 435, 438, 0, 0,
	0, 0, 255, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 433, 0, 0, 338, 339, 340, 341, 303,
	0, 273, 436, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 299, 305, 449, 307, 272, 353,
	301, 415, 314, 0, 442, 0, 443, 0, 0, 0,
	0, 345, 310, 311, 379, 315, 323, 367, 414, 351,
	372, 270, 405, 380, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 248, 278, 279, 284,
	467, 464, 396, 468, 0, 252, 0, 321, 0, 362,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 350, 249, 244, 245, 246,
	247, 0, 0, 0, 421, 422, 423, 445, 407, 0,
	465, 0, 293, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 459, 455, 0,
	456, 0, 0, 0, 0, 460, 381, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 457, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 386, 403, 269, 377, 416, 274, 384, 264, 349,
	373, 0, 0, 260, 401, 383, 331, 312, 313, 259,
	0, 368, 291, 304, 288, 347, 0, 400, 428, 287,
	419, 0, 411, 262, 0, 410, 346, 397, 402, 332,
	326, 261, 399, 330, 325, 316, 295, 444, 317, 318,
	308, 358, 324, 359, 309, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 319, 0, 0, 0, 429, 0, 371, 352,
	0, 0, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 253, 388, 290, 333, 265, 267, 285, 292,
	294, 296, 297, 342, 343, 355, 376, 389, 390, 391,
	289, 275, 370, 276, 306, 277, 254, 281, 280, 282,
	378, 283, 256, 356, 395, 0, 302, 366, 329, 257,
	328, 357, 394, 393, 266, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 425, 300, 250, 251, 470, 286, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 424, 0, 0, 0, 454, 469, 0, 0,
	0, 0, 0, 466, 354, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	406, 418, 435, 438, 0, 0, 0, 0, 255, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 433, 0,
	0, 338, 339, 340, 341, 303, 0, 273, 436, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	299, 305, 449, 307, 272, 353, 301, 415, 314, 0,
	442, 0, 443, 0, 0, 0, 0, 345, 310, 311,
	379, 315, 323, 367, 414, 351, 372, 270, 405, 380,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 248, 278, 279, 284, 467, 464, 396, 468,
	0, 252, 0, 321, 0, 362, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 350, 249, 244, 245, 246, 247, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 0, 293, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 459, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 386, 403, 269,
	377, 416, 274, 384, 264, 349, 373, 0, 0, 260,
	401, 383, 331, 312, 313, 259, 0, 368, 291, 304,
	288, 347, 0, 400, 428, 287, 419, 0, 411, 262,
	0, 410, 346, 397, 402, 332, 326, 261, 399, 330,
	325, 316, 295, 444, 317, 318, 308, 358, 324, 359,
	309, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 319, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 253, 388,
	290, 333, 265, 267, 285, 292, 294, 296, 297, 342,
	343, 355, 376, 389, 390, 391, 289, 275, 370, 276,
	306, 277, 254, 281, 280, 282, 378, 283, 256, 356,
	395, 0, 302, 366, 329, 257, 328, 357, 394, 393,
	266, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 425,
	300, 250, 251, 470, 286, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 255, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 303, 0, 273, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 299, 305, 449, 307,
	272, 353, 301, 415, 314, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 310, 311, 379, 315, 323, 367,
	414, 351, 372, 270, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 248, 278,
	279, 284, 467, 464, 396, 468, 0, 252, 0, 321,
	0, 362, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 350, 249, 244,
	245, 246, 247, 0, 0, 0, 421, 422, 423, 445,
	407, 0, 465, 0, 293, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 459,
	455, 0, 456, 0, 0, 0, 0, 460, 381, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 457, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 386, 403, 269, 377, 416, 274, 384,
	264, 349, 373, 0, 0, 260, 401, 383, 331, 312,
	313, 259, 0, 368, 291, 304, 288, 347, 0, 400,
	428, 287, 419, 0, 411, 262, 0, 410, 346, 397,
	402, 332, 326, 261, 399, 330, 325, 316, 295, 444,
	317, 318, 308, 358, 324, 359, 309, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 319, 0, 0, 0, 429, 0,
	371, 352, 0, 0, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 253, 388, 290, 333, 265, 267,
	285, 292, 294, 296, 297, 342, 343, 355, 376, 389,
	390, 391, 289, 275, 370, 276, 306, 277, 254, 281,
	280, 282, 378, 283, 256, 356, 395, 0, 302, 366,
	329, 257, 328, 357, 394, 393, 266, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 425, 300, 250, 251, 470,
	286, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	255, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 303, 0, 273,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 299, 305, 449, 307, 272, 353, 301, 415,
	314, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	310, 311, 379, 315, 323, 367, 414, 351, 372, 270,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 248, 278, 279, 284, 467, 464,
	396, 468, 0, 252, 0, 321, 0, 362, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 350, 249, 244, 245, 246, 247, 0,
	0, 0, 421, 422, 423, 445, 407, 0, 465, 0,
	293, 0, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 459, 455, 0, 456, 0,
	0, 0, 0, 460, 381, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 2661, 0,
	0, 0, 268, 197, 457, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 386,
	403, 269, 377, 416, 274, 384, 264, 349, 373, 0,
	0, 260, 401, 383, 331, 312, 313, 259, 0, 368,
	291, 304, 288, 347, 0, 400, 428, 287, 419, 0,
	411, 262, 0, 410, 346, 397, 402, 332, 326, 261,
	399, 330, 325, 316, 295, 444, 317, 318, 308, 358,
	324, 359, 309, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	319, 0, 0, 0, 429, 0, 371, 352, 0, 0,
	0, 369, 322, 398, 360, 404, 387, 412, 365, 361,
	253, 388, 290, 333, 265, 267, 285, 292, 294, 296,
	297, 342, 343, 355, 376, 389, 390, 391, 289, 275,
	370, 276, 306, 277, 254, 281, 280, 282, 378, 283,
	256, 356, 395, 0, 302, 366, 329, 257, 328, 357,
	394, 393, 266, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 425, 300, 250, 251, 470, 286, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	424, 0, 0, 0, 454, 469, 0, 0, 0, 0,
	0, 466, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 255, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 433, 0, 0, 338,
	339, 340, 341, 303, 0, 273, 436, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 299, 305,
	449, 307, 272, 353, 301, 415, 314, 0, 442, 0,
	443, 0, 0, 0, 0, 345, 310, 311, 379, 315,
	323, 367, 414, 351, 372, 270, 405, 380, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	248, 278, 279, 284, 467, 464, 396, 468, 0, 252,
	0, 321, 0, 362, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 350,
	249, 244, 245, 246, 247, 0, 0, 0, 421, 422,
	423, 445, 407, 0, 465, 0, 293, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 459, 455, 0, 456, 0, 0, 0, 0, 460,
	381, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	457, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 386, 403, 269, 377, 416,
	274, 384, 264, 349, 373, 0, 0, 260, 401, 383,
	331, 312, 313, 259, 0, 368, 291, 304, 288, 347,
	0, 400, 428, 287, 419, 0, 411, 262, 0, 410,
	346, 397, 402, 332, 326, 261, 399, 330, 325, 316,
	295, 444, 317, 318, 308, 358, 324, 359, 309, 336,
	335, 337, 0, 0, 0, 0, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 319, 0, 0, 0,
	429, 0, 371, 352, 0, 0, 0, 369, 322, 398,
	360, 404, 387, 412, 365, 361, 253, 388, 290, 333,
	265, 267, 285, 292, 294, 296, 297, 342, 343, 355,
	376, 389, 390, 391, 289, 275, 370, 276, 306, 277,
	254, 281, 280, 282, 378, 283, 256, 356, 395, 0,
	302, 366, 329, 257, 328, 357, 394, 393, 266, 420,
	426, 427, 0, 0, 432, 0, 0, 0, 441, 446,
	447, 448, 450, 451, 452, 453, 0, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 425, 300, 250,
	251, 470, 286, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 424, 0, 0, 0,
	454, 469, 0, 0, 0, 0, 0, 466, 354, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 406, 418, 435, 438, 0, 0,
	0, 0, 255, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 433, 0, 0, 338, 339, 340, 341, 303,
	0, 273, 436, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 299, 305, 449, 307, 272, 353,
	301, 415, 314, 0, 442, 0, 443, 0, 0, 0,
	0, 345, 310, 311, 379, 315, 323, 367, 414, 351,
	372, 270, 405, 380, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 248, 278, 279, 284,
	467, 464, 396, 468, 0, 252, 0, 321, 0, 362,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 350, 249, 244, 245, 246,
	247, 0, 0, 0, 421, 422, 423, 445, 407, 0,
	465, 0, 293, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 459, 455, 0,
	456, 0, 0, 0, 0, 460, 381, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1256, 0, 0, 0, 268, 197, 457, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 386, 403, 269, 377, 416, 274, 384, 264, 349,
	373, 0, 0, 260, 401, 383, 331, 312, 313, 259,
	0, 368, 291, 304, 288, 347, 0, 400, 428, 287,
	419, 0, 411, 262, 0, 410, 346, 397, 402, 332,
	326, 261, 399, 330, 325, 316, 295, 444, 317, 318,
	308, 358, 324, 359, 309, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 319, 0, 0, 0, 429, 0, 371, 352,
	0, 0, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 253, 388, 290, 333, 265, 267, 285, 292,
	294, 296, 297, 342, 343, 355, 376, 389, 390, 391,
	289, 275, 370, 276, 306, 277, 254, 281, 280, 282,
	378, 283, 256, 356, 395, 0, 302, 366, 329, 257,
	328, 357, 394, 393, 266, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 425, 300, 250, 251, 470, 286, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 424, 0, 0, 0, 454, 469, 0, 0,
	0, 0, 0, 466, 354, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	406, 418, 435, 438, 0, 0, 0, 0, 255, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 433, 0,
	0, 338, 339, 340, 341, 303, 0, 273, 436, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	299, 305, 449, 307, 272, 353, 301, 415, 314, 0,
	442, 0, 443, 0, 0, 0, 0, 345, 310, 311,
	379, 315, 323, 367, 414, 351, 372, 270, 405, 380,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 248, 278, 279, 284, 467, 464, 396, 468,
	0, 252, 0, 321, 0, 362, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 350, 249, 244, 245, 246, 247, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 0, 293, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 459, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 2104, 0, 0, 0,
	268, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 386, 403, 269,
	377, 416, 274, 384, 264, 349, 373, 0, 0, 260,
	401, 383, 331, 312, 313, 259, 0, 368, 291, 304,
	288, 347, 0, 400, 428, 287, 419, 0, 411, 262,
	0, 410, 346, 397, 402, 332, 326, 261, 399, 330,
	325, 316, 295, 444, 317, 318, 308, 358, 324, 359,
	309, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 319, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 253, 388,
	290, 333, 265, 267, 285, 292, 294, 296, 297, 342,
	343, 355, 376, 389, 390, 391, 289, 275, 370, 276,
	306, 277, 254, 281, 280, 282, 378, 283, 256, 356,
	395, 0, 302, 366, 329, 257, 328, 357, 394, 393,
	266, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 425,
	300, 250, 251, 470, 286, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 255, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 303, 0, 273, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 299, 305, 449, 307,
	272, 353, 301, 415, 314, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 310, 311, 379, 315, 323, 367,
	414, 351, 372, 270, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 248, 278,
	279, 284, 467, 464, 396, 468, 0, 252, 0, 321,
	0, 362, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 350, 249, 244,
	245, 246, 247, 0, 0, 0, 421, 422, 423, 445,
	407, 0, 465, 0, 293, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 459,
	455, 0, 456, 0, 0, 0, 0, 460, 381, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 457, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 386, 403, 269, 377, 416, 274, 384,
	264, 349, 373, 0, 0, 260, 401, 383, 331, 312,
	313, 259, 0, 368, 291, 304, 288, 347, 0, 400,
	428, 287, 419, 0, 411, 262, 0, 410, 346, 397,
	402, 332, 326, 261, 399, 330, 325, 316, 295, 444,
	317, 318, 308, 358, 324, 359, 309, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 319, 0, 0, 0, 429, 0,
	371, 352, 0, 0, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 253, 388, 290, 333, 265, 267,
	285, 292, 294, 296, 297, 342, 343, 355, 376, 389,
	390, 391, 289, 275, 370, 276, 306, 277, 254, 281,
	280, 282, 378, 283, 256, 356, 395, 0, 302, 366,
	329, 257, 328, 357, 394, 393, 266, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 425, 300, 250, 251, 470,
	286, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	255, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 303, 0, 273,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 299, 305, 449, 307, 272, 353, 301, 415,
	314, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	310, 311, 379, 315, 323, 367, 414, 351, 372, 270,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 248, 278, 279, 284, 467, 464,
	396, 468, 0, 252, 0, 321, 0, 362, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 350, 249, 244, 245, 246, 247, 0,
	0, 0, 421, 422, 423, 445, 407, 0, 465, 0,
	293, 0, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 459, 455, 0, 456, 0,
	0, 0, 0, 460, 381, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 457, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 386,
	403, 269, 377, 416, 274, 384, 264, 349, 373, 0,
	0, 260, 401, 383, 331, 312, 313, 259, 0, 368,
	291, 304, 288, 347, 0, 400, 428, 287, 419, 0,
	411, 262, 0, 410, 346, 397, 402, 332, 326, 261,
	399, 330, 325, 316, 295, 444, 317, 318, 308, 358,
	324, 359, 309, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	319, 0, 0, 0, 429, 0, 371, 352, 0, 0,
	0, 369, 322, 398, 360, 404, 387, 412, 365, 361,
	253, 388, 290, 333, 265, 267, 285, 292, 294, 296,
	297, 342, 343, 355, 376, 389, 390, 391, 289, 275,
	370, 276, 306, 277, 254, 281, 280, 282, 378, 283,
	256, 356, 395, 0, 302, 366, 329, 257, 328, 357,
	394, 393, 266, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 425, 300, 250, 251, 470, 286, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	424, 0, 0, 0, 454, 469, 0, 0, 0, 0,
	0, 466, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 255, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 433, 0, 0, 338,
	339, 340, 341, 303, 0, 273, 436, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 299, 305,
	449, 307, 272, 353, 301, 415, 314, 0, 442, 0,
	443, 0, 0, 0, 0, 345, 310, 311, 379, 315,
	323, 367, 414, 351, 372, 270, 405, 380, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	248, 278, 279, 284, 467, 464, 396, 468, 0, 252,
	0, 321, 0, 362, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 350,
	249, 244, 245, 246, 247, 0, 0, 0, 421, 422,
	423, 445, 407, 0, 465, 0, 293, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 459, 455, 0, 456, 0, 0, 0, 0, 460,
	381, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 2178, 0, 0, 0, 268, 197,
	457, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 386, 403, 269, 377, 416,
	274, 384, 264, 349, 373, 0, 0, 260, 401, 383,
	331, 312, 313, 259, 0, 368, 291, 304, 288, 347,
	0, 400, 428, 287, 419, 0, 411, 262, 0, 410,
	346, 397, 402, 332, 326, 261, 399, 330, 325, 316,
	295, 444, 317, 318, 308, 358, 324, 359, 309, 336,
	335, 337, 0, 0, 0, 0, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 319, 0, 0, 0,
	429, 0, 371, 352, 0, 0, 0, 369, 322, 398,
	360, 404, 387, 412, 365, 361, 253, 388, 290, 333,
	265, 267, 285, 292, 294, 296, 297, 342, 343, 355,
	376, 389, 390, 391, 289, 275, 370, 276, 306, 277,
	254, 281, 280, 282, 378, 283, 256, 356, 395, 0,
	302, 366, 329, 257, 328, 357, 394, 393, 266, 420,
	426, 427, 0, 0, 432, 0, 0, 0, 441, 446,
	447, 448, 450, 451, 452, 453, 0, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 425, 300, 250,
	251, 470, 286, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 424, 0, 0, 0,
	454, 469, 0, 0, 0, 0, 0, 466, 354, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 406, 418, 435, 438, 0, 0,
	0, 0, 255, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 433, 0, 0, 338, 339, 340, 341, 303,
	0, 273, 436, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 299, 305, 449, 307, 272, 353,
	301, 415, 314, 0, 442, 0, 443, 0, 0, 0,
	0, 345, 310, 311, 379, 315, 323, 367, 414, 351,
	372, 270, 405, 380, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 248, 278, 279, 284,
	467, 464, 396, 468, 0, 252, 0, 321, 0, 362,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 1974, 249, 244, 245, 246,
	247, 350, 0, 0, 421, 422, 423, 445, 407, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 320, 0, 0, 0, 0, 471, 459, 0, 0,
	0, 0, 0, 0, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 386, 403, 269,
	377, 416, 274, 384, 264, 349, 373, 0, 0, 260,
	401, 383, 331, 312, 313, 259, 0, 368, 291, 304,
	288, 347, 0, 400, 428, 287, 419, 0, 411, 262,
	0, 410, 346, 397, 402, 332, 326, 261, 399, 330,
	325, 316, 295, 444, 317, 318, 308, 358, 324, 359,
	309, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 319, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 253, 388,
	290, 333, 265, 267, 285, 292, 294, 296, 297, 342,
	343, 355, 376, 389, 390, 391, 289, 275, 370, 276,
	306, 277, 254, 281, 280, 282, 378, 283, 256, 356,
	395, 0, 302, 366, 329, 257, 328, 357, 394, 393,
	266, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 425,
	300, 250, 251, 470, 286, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 255, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 303, 0, 273, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 299, 305, 449, 307,
	272, 353, 301, 415, 314, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 310, 311, 379, 315, 323, 367,
	414, 351, 372, 270, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 248, 278,
	279, 284, 467, 464, 396, 468, 0, 252, 0, 321,
	0, 362, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 350, 249, 244,
	245, 246, 247, 0, 0, 1691, 421, 422, 423, 445,
	407, 0, 465, 0, 293, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 459,
	455, 0, 456, 0, 0, 0, 0, 460, 381, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 457, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 386, 403, 269, 377, 416, 274, 384,
	264, 349, 373, 0, 0, 260, 401, 383, 331, 312,
	313, 259, 0, 368, 291, 304, 288, 347, 0, 400,
	428, 287, 419, 0, 411, 262, 0, 410, 346, 397,
	402, 332, 326, 261, 399, 330, 325, 316, 295, 444,
	317, 318, 308, 358, 324, 359, 309, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 319, 0, 0, 0, 429, 0,
	371, 352, 0, 0, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 253, 388, 290, 333, 265, 267,
	285, 292, 294, 296, 297, 342, 343, 355, 376, 389,
	390, 391, 289, 275, 370, 276, 306, 277, 254, 281,
	280, 282, 378, 283, 256, 356, 395, 0, 302, 366,
	329, 257, 328, 357, 394, 393, 266, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 425, 300, 250, 251, 470,
	286, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	255, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 303, 0, 273,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 299, 305, 449, 307, 272, 353, 301, 415,
	314, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	310, 311, 379, 315, 323, 367, 414, 351, 372, 270,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 248, 278, 279, 284, 467, 464,
	396, 468, 0, 252, 0, 321, 0, 362, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 350, 249, 244, 245, 246, 247, 0,
	0, 0, 421, 422, 423, 445, 407, 0, 465, 0,
	293, 0, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 459, 455, 0, 456, 0,
	0, 0, 0, 460, 381, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 1256, 0,
	0, 0, 268, 197, 457, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 386,
	403, 269, 377, 416, 274, 384, 264, 349, 373, 0,
	0, 260, 401, 383, 331, 312, 313, 259, 0, 368,
	291, 304, 288, 347, 0, 400, 428, 287, 419, 0,
	411, 262, 0, 410, 346, 397, 402, 332, 326, 261,
	399, 330, 325, 316, 295, 444, 317, 318, 308, 358,
	324, 359, 309, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	319, 0, 0, 0, 429, 0, 371, 352, 0, 0,
	0, 369, 322, 398, 360, 404, 387, 412, 1602, 361,
	253, 388, 290, 333, 265, 267, 285, 292, 294, 296,
	297, 342, 343, 355, 376, 389, 390, 391, 289, 275,
	370, 276, 306, 277, 254, 281, 280, 282, 378, 283,
	256, 356, 395, 0, 302, 366, 329, 257, 328, 357,
	394, 393, 266, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 425, 300, 250, 251, 470, 286, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	424, 0, 0, 0, 454, 469, 0, 0, 0, 0,
	0, 466, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 255, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 433, 0, 0, 338,
	339, 340, 341, 303, 0, 273, 436, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 299, 305,
	449, 307, 272, 353, 301, 415, 314, 0, 442, 0,
	443, 0, 0, 0, 0, 345, 310, 311, 379, 315,
	323, 367, 414, 351, 372, 270, 405, 380, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	248, 278, 279, 284, 467, 464, 396, 468, 0, 252,
	0, 321, 0, 362, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 350,
	249, 244, 245, 246, 247, 0, 0, 0, 421, 422,
	423, 445, 407, 0, 465, 0, 293, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 459, 455, 0, 456, 0, 0, 0, 0, 460,
	381, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	457, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 386, 403, 269, 377, 416,
	274, 384, 264, 349, 373, 0, 0, 260, 401, 383,
	331, 312, 313, 259, 0, 368, 291, 304, 288, 347,
	0, 400, 428, 287, 419, 0, 411, 262, 0, 410,
	346, 397, 402, 332, 326, 261, 399, 330, 325, 316,
	295, 444, 317, 318, 308, 358, 324, 359, 309, 336,
	335, 337, 0, 0, 0, 0, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 1286,
	0, 0, 0, 385, 0, 0, 319, 0, 0, 0,
	429, 0, 371, 352, 0, 0, 0, 369, 322, 398,
	360, 404, 387, 412, 365, 361, 253, 388, 290, 333,
	265, 267, 285, 292, 294, 296, 297, 342, 343, 355,
	376, 389, 390, 391, 289, 275, 370, 276, 306, 277,
	254, 281, 280, 282, 378, 283, 256, 356, 395, 0,
	302, 366, 329, 257, 328, 357, 394, 393, 266, 420,
	426, 427, 0, 0, 432, 0, 0, 0, 441, 446,
	447, 448, 450, 451, 452, 453, 0, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 425, 300, 250,
	251, 470, 286, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 424, 0, 0, 0,
	454, 469, 0, 0, 0, 0, 0, 466, 354, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 406, 418, 435, 438, 0, 0,
	0, 0, 255, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 433, 0, 0, 338, 339, 340, 341, 303,
	0, 273, 436, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 299, 305, 449, 307, 272, 353,
	301, 415, 314, 0, 442, 0, 443, 0, 0, 0,
	0, 345, 310, 311, 379, 315, 323, 367, 414, 351,
	372, 270, 405, 380, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 248, 278, 279, 284,
	467, 464, 396, 468, 0, 252, 0, 321, 0, 362,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 350, 249, 244, 245, 246,
	247, 0, 0, 0, 421, 422, 423, 445, 407, 0,
	465, 0, 293, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 459, 455, 0,
	456, 0, 0, 0, 0, 460, 381, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 457, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 386, 403, 269, 377, 416, 274, 384, 264, 349,
	373, 0, 0, 260, 401, 383, 331, 312, 313, 259,
	0, 368, 291, 304, 288, 347, 0, 400, 428, 287,
	419, 0, 411, 262, 0, 410, 346, 397, 402, 332,
	326, 261, 399, 330, 325, 316, 295, 444, 317, 318,
	308, 358, 324, 359, 309, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 319, 0, 0, 0, 429, 0, 371, 352,
	0, 0, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 253, 388, 290, 333, 265, 267, 285, 292,
	294, 296, 297, 342, 343, 355, 376, 389, 390, 391,
	289, 275, 370, 276, 306, 277, 254, 281, 280, 282,
	378, 283, 256, 356, 395, 0, 302, 366, 329, 257,
	328, 357, 394, 393, 266, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 425, 300, 250, 251, 470, 286, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 424, 0, 0, 0, 454, 469, 0, 0,
	0, 0, 0, 466, 354, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	406, 418, 435, 438, 0, 0, 0, 0, 255, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 433, 0,
	0, 338, 339, 340, 341, 303, 0, 273, 436, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	299, 305, 449, 307, 272, 353, 301, 415, 314, 0,
	442, 0, 443, 0, 0, 0, 0, 345, 310, 311,
	379, 315, 323, 367, 414, 351, 372, 270, 405, 380,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 754, 0, 0,
	392, 0, 248, 278, 279, 284, 467, 464, 396, 468,
	0, 252, 0, 321, 0, 362, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 350, 249, 244, 245, 246, 247, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 0, 293, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 459, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 386, 403, 269,
	377, 416, 274, 384, 264, 349, 373, 0, 0, 260,
	401, 383, 331, 312, 313, 259, 0, 368, 291, 304,
	288, 347, 0, 400, 428, 287, 419, 0, 411, 262,
	0, 410, 346, 397, 402, 332, 326, 261, 399, 330,
	325, 316, 295, 444, 317, 318, 308, 358, 324, 359,
	309, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 319, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 509, 361, 253, 388,
	290, 333, 265, 267, 285, 292, 294, 296, 297, 342,
	343, 355, 376, 389, 390, 391, 289, 275, 370, 276,
	306, 277, 254, 281, 280, 282, 378, 283, 256, 356,
	395, 0, 302, 366, 329, 257, 328, 357, 394, 393,
	266, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 425,
	300, 250, 251, 470, 286, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 255, 437, 0, 0, 0, 0,
	0, 0, 510, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 303, 0, 273, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 299, 305, 449, 307,
	272, 353, 301, 415, 314, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 310, 311, 379, 315, 323, 367,
	414, 351, 372, 270, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 248, 278,
	279, 284, 467, 464, 396, 468, 0, 252, 0, 321,
	0, 362, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 350, 249, 244,
	245, 246, 247, 0, 0, 0, 421, 422, 423, 445,
	407, 0, 465, 0, 293, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 459,
	455, 0, 456, 0, 0, 0, 0, 460, 381, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 457, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 386, 403, 269, 377, 416, 274, 384,
	264, 349, 373, 0, 0, 260, 401, 383, 331, 312,
	313, 259, 0, 368, 291, 304, 288, 347, 0, 400,
	428, 287, 419, 0, 411, 262, 0, 410, 346, 397,
	402, 332, 326, 261, 399, 330, 325, 316, 295, 444,
	317, 318, 308, 358, 324, 359, 309, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 319, 0, 0, 0, 429, 0,
	371, 352, 0, 0, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 253, 388, 290, 333, 265, 267,
	285, 292, 294, 296, 297, 342, 343, 355, 376, 389,
	390, 391, 289, 275, 370, 276, 306, 277, 254, 281,
	280, 282, 378, 283, 256, 356, 395, 0, 302, 366,
	329, 257, 328, 357, 394, 393, 266, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 425, 300, 250, 251, 470,
	286, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	255, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 303, 0, 273,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 299, 305, 449, 307, 272, 353, 301, 415,
	314, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	310, 311, 379, 315, 323, 367, 414, 351, 372, 270,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 248, 278, 279, 284, 467, 464,
	396, 468, 0, 252, 0, 321, 0, 362, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 350, 249, 244, 245, 246, 247, 0,
	0, 0, 421, 422, 423, 445, 407, 0, 465, 476,
	293, 0, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 459, 455, 0, 456, 0,
	0, 0, 0, 460, 381, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 457, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 386,
	403, 269, 377, 416, 274, 384, 264, 349, 373, 0,
	0, 260, 401, 383, 331, 312, 313, 259, 0, 368,
	291, 304, 288, 347, 0, 400, 428, 287, 419, 0,
	411, 262, 0, 410, 346, 397, 402, 332, 326, 261,
	399, 330, 325, 316, 295, 444, 317, 318, 308, 358,
	324, 359, 309, 336, 335, 337, 0, 0, 0, 0,
	0, 439, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	319, 0, 0, 0, 429, 0, 371, 352, 0, 0,
	0, 369, 322, 398, 360, 404, 387, 412, 365, 361,
	253, 388, 290, 333, 265, 267, 285, 292, 294, 296,
	297, 342, 343, 355, 376, 389, 390, 391, 289, 275,
	370, 276, 306, 277, 254, 281, 280, 282, 378, 283,
	256, 356, 395, 0, 302, 366, 329, 257, 328, 357,
	394, 393, 266, 420, 426, 427, 0, 0, 432, 0,
	0, 0, 441, 446, 447, 448, 450, 451, 452, 453,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 425, 300, 250, 251, 470, 286, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	424, 0, 0, 0, 454, 469, 0, 0, 0, 0,
	0, 466, 354, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 406, 418,
	435, 438, 0, 0, 0, 0, 255, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 433, 0, 0, 338,
	339, 340, 341, 303, 0, 273, 436, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 299, 305,
	449, 307, 272, 353, 301, 415, 314, 0, 442, 0,
	443, 0, 0, 0, 0, 345, 310, 311, 379, 315,
	323, 367, 414, 351, 372, 270, 405, 380, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	248, 278, 279, 284, 467, 464, 396, 468, 0, 252,
	0, 321, 0, 362, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 350,
	249, 244, 245, 246, 247, 0, 0, 0, 421, 422,
	423, 445, 407, 0, 465, 0, 293, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 459, 455, 0, 456, 0, 0, 0, 0, 460,
	381, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	457, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 386, 403, 269, 377, 416,
	274, 384, 264, 349, 373, 0, 0, 260, 401, 383,
	331, 312, 313, 259, 0, 368, 291, 304, 288, 347,
	0, 400, 428, 287, 419, 0, 411, 262, 0, 410,
	346, 397, 402, 332, 326, 261, 399, 330, 325, 316,
	295, 444, 317, 318, 308, 358, 324, 359, 309, 336,
	335, 337, 0, 0, 0, 0, 0, 439, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 319, 0, 0, 0,
	429, 0, 371, 352, 0, 0, 0, 369, 322, 398,
	360, 404, 387, 412, 365, 361, 253, 388, 290, 333,
	265, 267, 285, 292, 294, 296, 297, 342, 343, 355,
	376, 389, 390, 391, 289, 275, 370, 276, 306, 277,
	254, 281, 280, 282, 378, 283, 256, 356, 395, 0,
	302, 366, 329, 257, 328, 357, 394, 393, 266, 420,
	426, 427, 0, 0, 432, 0, 0, 0, 441, 446,
	447, 448, 450, 451, 452, 453, 0, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 425, 300, 250,
	251, 470, 286, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 424, 0, 0, 0,
	454, 469, 0, 0, 0, 0, 0, 466, 354, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 406, 418, 435, 438, 0, 0,
	0, 0, 255, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 433, 0, 0, 338, 339, 340, 341, 303,
	0, 273, 436, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 299, 305, 449, 307, 272, 353,
	301, 415, 314, 0, 442, 0, 443, 0, 0, 0,
	0, 345, 310, 311, 379, 315, 323, 367, 414, 351,
	372, 270, 405, 380, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 248, 278, 279, 284,
	467, 464, 396, 468, 0, 252, 0, 321, 0, 362,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 350, 249, 244, 245, 246,
	247, 0, 0, 0, 421, 422, 423, 445, 407, 0,
	465, 0, 293, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 459, 455, 0,
	456, 0, 0, 0, 0, 460, 381, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 457, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 386, 1236, 269, 377, 416, 274, 384, 264, 349,
	373, 0, 0, 260, 401, 383, 331, 312, 313, 259,
	0, 368, 291, 304, 288, 347, 0, 400, 428, 287,
	419, 0, 411, 262, 0, 410, 346, 397, 402, 332,
	326, 261, 399, 330, 325, 316, 295, 444, 317, 318,
	308, 358, 324, 359, 309, 336, 335, 337, 0, 0,
	0, 0, 0, 439, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 319, 0, 0, 0, 429, 0, 371, 352,
	0, 0, 0, 369, 322, 398, 360, 404, 387, 412,
	365, 361, 253, 388, 290, 333, 265, 267, 285, 292,
	294, 296, 297, 342, 343, 355, 376, 389, 390, 391,
	289, 275, 370, 276, 306, 277, 254, 281, 280, 282,
	378, 283, 256, 356, 395, 0, 302, 366, 329, 257,
	328, 357, 394, 393, 266, 420, 426, 427, 0, 0,
	432, 0, 0, 0, 441, 446, 447, 448, 450, 451,
	452, 453, 0, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 425, 300, 250, 251, 470, 286, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 424, 0, 0, 0, 454, 469, 0, 0,
	0, 0, 0, 466, 354, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	406, 418, 435, 438, 0, 0, 0, 0, 255, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 433, 0,
	0, 338, 339, 340, 341, 303, 0, 273, 436, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	299, 305, 449, 307, 272, 353, 301, 415, 314, 0,
	442, 0, 443, 0, 0, 0, 0, 345, 310, 311,
	379, 315, 323, 367, 414, 351, 372, 270, 405, 380,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 248, 278, 279, 284, 467, 464, 396, 468,
	0, 252, 0, 321, 0, 362, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 350, 249, 244, 245, 246, 247, 0, 0, 0,
	421, 422, 423, 445, 407, 0, 465, 0, 293, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 459, 455, 0, 456, 0, 0, 0,
	0, 460, 381, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 457, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 386, 1234, 269,
	377, 416, 274, 384, 264, 349, 373, 0, 0, 260,
	401, 383, 331, 312, 313, 259, 0, 368, 291, 304,
	288, 347, 0, 400, 428, 287, 419, 0, 411, 262,
	0, 410, 346, 397, 402, 332, 326, 261, 399, 330,
	325, 316, 295, 444, 317, 318, 308, 358, 324, 359,
	309, 336, 335, 337, 0, 0, 0, 0, 0, 439,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 319, 0,
	0, 0, 429, 0, 371, 352, 0, 0, 0, 369,
	322, 398, 360, 404, 387, 412, 365, 361, 253, 388,
	290, 333, 265, 267, 285, 292, 294, 296, 297, 342,
	343, 355, 376, 389, 390, 391, 289, 275, 370, 276,
	306, 277, 254, 281, 280, 282, 378, 283, 256, 356,
	395, 0, 302, 366, 329, 257, 328, 357, 394, 393,
	266, 420, 426, 427, 0, 0, 432, 0, 0, 0,
	441, 446, 447, 448, 450, 451, 452, 453, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 425,
	300, 250, 251, 470, 286, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 424, 0,
	0, 0, 454, 469, 0, 0, 0, 0, 0, 466,
	354, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 406, 418, 435, 438,
	0, 0, 0, 0, 255, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 433, 0, 0, 338, 339, 340,
	341, 303, 0, 273, 436, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 431, 299, 305, 449, 307,
	272, 353, 301, 415, 314, 0, 442, 0, 443, 0,
	0, 0, 0, 345, 310, 311, 379, 315, 323, 367,
	414, 351, 372, 270, 405, 380, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 248, 278,
	279, 284, 467, 464, 396, 468, 0, 252, 0, 321,
	0, 362, 298, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 350, 249, 244,
	245, 246, 247, 0, 0, 0, 421, 422, 423, 445,
	407, 0, 465, 0, 293, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 459,
	455, 0, 456, 0, 0, 0, 0, 460, 381, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 457, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 386, 403, 269, 377, 416, 274, 384,
	264, 349, 373, 0, 0, 260, 401, 383, 331, 312,
	313, 259, 0, 368, 291, 304, 288, 347, 0, 400,
	428, 287, 419, 0, 411, 262, 0, 410, 346, 397,
	402, 332, 326, 261, 399, 330, 325, 316, 295, 444,
	317, 318, 308, 358, 324, 359, 309, 336, 335, 337,
	0, 0, 0, 0, 0, 439, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 319, 0, 0, 0, 429, 0,
	371, 352, 0, 0, 0, 369, 322, 398, 360, 404,
	387, 412, 365, 361, 253, 388, 290, 333, 265, 267,
	550, 292, 294, 296, 297, 342, 343, 355, 376, 389,
	390, 391, 289, 275, 370, 276, 306, 277, 254, 281,
	280, 282, 378, 283, 256, 356, 395, 0, 302, 366,
	329, 257, 328, 357, 394, 393, 266, 420, 426, 427,
	0, 0, 432, 0, 0, 0, 441, 446, 447, 448,
	450, 451, 452, 453, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 425, 300, 250, 251, 470,
	286, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 424, 0, 0, 0, 454, 469,
	0, 0, 0, 0, 0, 466, 354, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 406, 418, 435, 438, 0, 0, 0, 0,
	255, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	433, 0, 0, 338, 339, 340, 341, 303, 0, 273,
	436, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 299, 305, 449, 307, 272, 353, 301, 415,
	314, 0, 442, 0, 443, 0, 0, 0, 0, 345,
	310, 311, 379, 315, 323, 367, 414, 351, 372, 270,
	405, 380, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 248, 278, 279, 284, 467, 464,
	396, 468, 0, 252, 0, 321, 0, 362, 298, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 898, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 0,
	0, 0, 421, 422, 423, 445, 407, 0, 465, 174,
	51, 163, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 459, 746, 164, 747, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 165, 0,
	174, 51, 163, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 164, 0,
	0, 0, 0, 0, 728, 156, 0, 0, 0, 165,
	853, 0, 103, 0, 0, 0, 0, 741, 168, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 884, 0, 0, 0, 874, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 906, 910, 912, 914, 916, 917,
	919, 0, 924, 920, 921, 922, 923, 0, 901, 902,
	903, 904, 882, 883, 907, 0, 885, 0, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 897, 899, 895,
	896, 905, 0, 0, 120, 121, 0, 122, 123, 909,
	911, 913, 915, 918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 121, 0, 122, 123,
	0, 0, 0, 0, 0, 0, 0, 900, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 0, 736, 0,
	0, 0, 848, 843, 838, 842, 846, 740, 739, 0,
	0, 0, 0, 0, 0, 137, 162, 172, 0, 101,
	0, 0, 0, 0, 722, 0, 0, 0, 729, 0,
	851, 0, 0, 0, 841, 0, 0, 161, 155, 154,
	0, 0, 0, 0, 57, 0, 137, 162, 172, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 161, 155,
	154, 0, 735, 0, 0, 57, 734, 0, 0, 0,
	0, 0, 721, 0, 0, 849, 727, 0, 0, 0,
	0, 0, 852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 725, 0, 157, 158, 159, 0, 839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 850, 0, 0, 0, 157, 158, 159, 0,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 0, 0, 0, 160, 0, 112, 0, 0,
	0, 0, 166, 0, 0, 1679, 726, 0, 0, 0,
	1641, 0, 840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 0, 0, 160, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1681,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 1682,
	1683, 0, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 1649, 0, 0, 0, 0,
	0, 0, 742, 0, 0, 113, 0, 0, 847, 0,
	1656, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	0, 0, 0, 908, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 844, 0, 845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 0,
	169, 170, 0, 171, 0, 0, 0, 1672, 139, 0,
	0, 0, 0, 0, 0, 0, 898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 170, 0, 171, 0, 0, 0, 0, 139,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 39, 0, 0, 0, 0, 0, 49, 1640, 1642,
	1639, 5, 1636, 0, 0, 118, 119, 1660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1666, 0,
	0, 114, 39, 0, 0, 0, 0, 0, 49, 0,
	0, 0, 0, 0, 0, 0, 118, 119, 1654, 1688,
	0, 0, 1655, 1657, 1659, 0, 1661, 1662, 1663, 1667,
	1668, 1669, 1671, 1674, 1675, 1676, 884, 0, 0, 0,
	0, 0, 0, 1664, 1673, 1665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 906, 910, 912, 914,
	916, 917, 919, 1679, 924, 920, 921, 922, 923, 0,
	901, 902, 903, 904, 882, 883, 907, 1680, 885, 0,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 897,
	899, 895, 896, 905, 0, 0, 0, 1681, 1637, 1638,
	0, 909, 911, 913, 915, 918, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1679, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1653, 0, 0, 0, 0, 3410, 900,
	1652, 0, 0, 0, 0, 0, 0, 0, 1656, 1681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1685, 1684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1672, 0, 529, 528, 535,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	533, 0, 534, 538, 0, 0, 520, 0, 1646, 0,
	529, 528, 535, 525, 0, 0, 543, 0, 0, 0,
	0, 0, 532, 533, 0, 534, 538, 0, 0, 520,
	0, 0, 0, 3140, 0, 0, 0, 1672, 0, 543,
	0, 1679, 0, 0, 0, 0, 0, 0, 0, 0,
	1687, 0, 0, 1686, 0, 0, 0, 0, 0, 547,
	0, 0, 549, 0, 0, 1660, 0, 548, 0, 0,
	0, 0, 0, 0, 0, 1681, 1666, 0, 0, 0,
	0, 0, 547, 0, 0, 549, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 0, 1654, 1688, 0, 0,
	1655, 1657, 1659, 0, 1661, 1662, 1663, 1667, 1668, 1669,
	1671, 1674, 1675, 1676, 0, 0, 0, 1660, 0, 0,
	0, 1664, 1673, 1665, 0, 0, 1656, 0, 1666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 1688,
	0, 0, 1655, 1657, 1659, 1680, 1661, 1662, 1663, 1667,
	1668, 1669, 1671, 1674, 1675, 1676, 0, 0, 529, 528,
	535, 525, 0, 1664, 1673, 1665, 0, 0, 0, 0,
	532, 533, 0, 534, 538, 908, 0, 520, 0, 0,
	0, 0, 0, 1672, 1677, 0, 0, 543, 0, 0,
	0, 0, 0, 521, 523, 522, 0, 1680, 0, 0,
	0, 1653, 0, 527, 0, 0, 0, 0, 1652, 0,
	0, 0, 0, 0, 0, 531, 521, 523, 522, 0,
	0, 0, 546, 0, 0, 0, 527, 0, 0, 524,
	0, 0, 1670, 515, 0, 0, 1677, 0, 531, 0,
	0, 1658, 0, 0, 0, 546, 0, 0, 0, 0,
	0, 0, 524, 1653, 0, 0, 0, 0, 0, 0,
	1652, 0, 0, 1660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 1654, 1688, 0, 0, 1655, 1657,
	1659, 0, 1661, 1662, 1663, 1667, 1668, 1669, 1671, 1674,
	1675, 1676, 0, 0, 0, 0, 0, 0, 0, 1664,
	1673, 1665, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 530, 536, 0, 537, 539, 0,
	0, 540, 541, 542, 0, 0, 544, 545, 0, 0,
	0, 0, 0, 1680, 0, 0, 526, 530, 536, 0,
	537, 539, 0, 0, 540, 541, 542, 0, 0, 544,
	545, 0, 0, 0, 521, 523, 522, 0, 0, 0,
	0, 0, 0, 0, 527, 0, 0, 0, 0, 0,
	0, 0, 1677, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 546, 0, 0, 0, 0, 0, 1653,
	524, 0, 0, 0, 0, 0, 1652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 530, 536, 0, 537, 539,
	0, 0, 540, 541, 542, 0, 0, 544, 545,
}

var yyPact = [...]int{
	38037, -1000, -1000, -1000, -325, 10129, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35787,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35787,
	-323, 35231, 35231, -1000, -1000, 2218, -1000, 34675, 11274, 35787,
	373, 364, 35787, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 720, -1000, 34119, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 603, 38865, 37455, 7831, -263, -1000, 1321, -94, 2101,
	855, 882, 955, 955, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 38011, 766, 33563,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3264, 457, 766, 13504, 19, 18, 1321, 336, -153,
	-152, -154, 38017, -1000, 1223, 38068, 161, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7831, 7831,
	10129, -356, 10129, 7831, 35787, 35787, -1000, -1000, -1000, -1000,
	603, 38865, 7831, 2101, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -152, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -153, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -154, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 37984, -1000, 1425, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2642, 1423, 2100, 557, 35787, -1000, 1417, 557,
	-1000, -1000, -1000, 1321, 3046, -1000, 35787, 35787, 88, 1595,
	-1000, 365, 360, 316, 1408, -1000, -1000, -1000, -1000, -1000,
	-1000, 481, 3005, -1000, 35787, 35787, 2650, 35787, -1000, 1965,
	517, 38888, 2837, 1106, 745, 2659, -1000, -1000, 2624, -1000,
	220, 167, 216, 356, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 241, -1000, 2905, -1000, -1000, 214, -1000, -1000, 190,
	-1000, -1000, -1000, 17, -1000, -1000, -1000, -1000, -1000, -1000,
	-75, -1000, -1000, 931, 1805, 7831, -1000, 1812, -1000, 3013,
	-1000, -1000, -1000, -1000, 4964, 9547, 9547, 9547, 9547, -1000,
	-1000, 2382, 7831, 2614, 2613, 2610, -1000, -1000, -1000, -1000,
	-1000, 1407, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1780, -1000, -1000, -1000, 8975, -1000, 2609, 2603, 2598,
	2596, 2594, 2592, 2583, 2582, 2580, 2579, 2574, 2570, 2569,
	2568, 2260, 10692, 2567, 2099, 2097, 2561, 2558, 2557, 2096,
	2260, 2260, 2550, 2549, 2547, 2546, 2545, 2544, 2543, 2542,
	2532, 2531, 2528, 2507, 2503, 2499, 2484, 2477, 2453, 2452,
	2451, 2436, 2435, 2431, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1328, -1000, 2430,
	3016, 2318, -1000, 2914, 2889, 2882, 2874, -306, 2426, 1936,
	-1000, -1000, 70, -1000, -119, -1000, -1000, 915, -1000, 827,
	-1000, 35787, 35787, 159, 696, 598, 598, 598, 598, 598,
	677, 598, 2933, 717, 716, 711, 598, -100, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1594, 1593, 2714, 798, -1000,
	-1000, -1000, -1000, 1272, 35787, -1000, 2346, 1494, 1494, 2924,
	528, 521, 506, 1494, 425, -1000, 1579, 1579, 1579, 1579,
	1494, 409, 530, 2883, 2883, -1, 1579, 10, 1494, 1494,
	10, 1494, 1494, 1494, 165, -312, -1000, -1000, -1000, -1000,
	1579, 1579, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2900,
	2894, 603, 603, 35787, 140, 35787, 603, 603, 603, 644,
	-25, 36899, 36343, 1965, 512, 508, 1305, 1566, -1000, 1469,
	35787, 35787, 1469, 1469, 17983, 17427, -1000, 35787, -1000, 3016,
	2318, 2240, 1454, 2238, 2318, -158, -162, -164, 603, 603,
	603, 603, 603, 202, 603, 603, 603, 603, 603, 35787,
	35787, 33007, 603, 603, 6680, 6680, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 10129, 1755, 1908, 160, -63,
	-321, 201, -1000, -1000, 35787, 2796, 173, -1000, -1000, -1000,
	2271, -1000, 2337, 2337, 2337, 2337, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2337, 2337, 2344, 2416, -1000,
	-1000, 2336, 2336, 2336, 2271, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2338, 2338, 2339, 2339, 2338, 35787, 7831, 35787, 2815, 334,
	2402, -1000, 35787, 332, 3016, 2813, 2883, 2976, -1000, -1000,
	1406, 1931, 2095, -1000, -1000, 365, 1451, -1000, 973, -1000,
	-1000, -1000, -1000, 35787, -75, 312, -1000, -1000, 2087, 2401,
	-1000, 500, 1078, 1281, -1000, 203, 39046, 28553, 1965, 28553,
	35787, -1000, -1000, -1000, -1000, -1000, -1000, 16, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 186, -1000, 7831, 7831, 7831, 7831, 7831, -1000, 632,
	8403, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9547, 9547,
	9547, 9547, 9547, 9547, 9547, 9547, 9547, 9547, 9547, 9547,
	2381, 1613, 9547, 9547, 9547, 9547, 1454, 2817, 1273, 238,
	-1000, -1000, -1000, -1000, -1000, 1621, 1805, 7831, 7831, 7831,
	35787, -1000, -1000, 3159, 7831, 7831, 162, 7831, 2869, 7831,
	7831, 7831, 2235, 3762, 35787, 7831, -1000, 2229, 2228, -1000,
	-1000, 1765, 7831, -1000, -1000, 7831, -1000, -1000, 7831, 9547,
	7831, -1000, -1000, -1000, 1155, 2869, 2869, 2869, 1588, 7831,
	7831, 2869, 2869, 2869, 1585, 2869, 2869, 2869, 2869, 2869,
	2869, 2869, 2869, 2227, 2224, 2223, 2883, -263, -1000, 6108,
	2813, 2883, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -308, 2400, 35787, 2094, 2091, -337, -36, 851,
	834, 839, -1000, 2858, -1000, 2390, 35787, 598, 598, -137,
	598, -1000, 35787, 1598, 28553, 35787, 35787, 1965, 35787, 35787,
	35787, 598, 598, 598, 35787, -1000, 2748, 28553, 2723, 644,
	-1000, 35787, 1272, 2857, 35787, 2984, 9547, 9547, -1000, 32451,
	1579, 1494, 1494, -1000, -1000, 35787, -1000, -1000, -1000, 1579,
	35787, 1579, 1579, 2984, 1579, -1000, -1000, -1000, 1494, 1494,
	-1000, -1000, 7831, -1000, -1000, 1579, 1579, -1000, -1000, 2984,
	35787, 14, 2984, 2984, 3, -1000, -1000, -1000, 35787, 35787,
	598, 35787, -1000, 35787, 35787, -1000, -1000, 35787, 35787, 38409,
	35787, 31895, 2887, -1000, 28553, 35787, 35787, 26329, -1000, 1229,
	-1000, -40, -1000, -39, -25, 1469, -25, 1469, -1000, 496,
	491, 16308, 443, 28553, 4346, -1000, -1000, 1469, 1469, 4346,
	4346, 1436, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1271,
	-1000, 180, 2883, -1000, -1000, -1000, -1000, -1000, 1928, 1918,
	1915, 35787, 35787, 28553, 1965, 35787, 603, 35787, 35787, 35787,
	35787, 35787, -1000, 2387, 1400, -1000, 2833, 35787, 35787, 1132,
	-1000, -1000, 12948, 1399, 1132, -1000, 1635, -1000, 7831, 10129,
	-289, 7831, 10129, 10129, 7831, 10129, -1000, 7831, 168, -1000,
	-1000, -1000, -1000, 1913, -1000, 1907, -1000, -1000, -1000, -1000,
	-1000, 2090, 2090, -1000, 1891, -1000, -1000, -1000, -1000, 1890,
	-1000, -1000, 1886, -1000, -1000, -1000, 2220, 931, -1000, 2082,
	2657, -264, -1000, 15188, 35787, 35787, -1000, -1000, -264, -1000,
	14624, 35787, 2883, -1000, -268, 2813, 7831, 35787, -1000, 2920,
	-1000, 365, 278, -1000, -1000, -1000, -1000, -1000, -1000, 1374,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1269,
	-1000, 35787, -1000, -1000, 203, 28553, 29665, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 185, -1000, -1000, 172, -1000, 703,
	129, 1420, -1000, -1000, 146, 176, 92, 754, 1805, -1000,
	1659, 1659, 1654, -1000, 536, -1000, -1000, -1000, -1000, 2382,
	-1000, -1000, -1000, 2460, 3442, -1000, 1466, 1466, 1357, 1357,
	1357, 1357, 1357, 1555, 1555, -1000, -1000, -1000, 4964, 2381,
	9547, 9547, 9547, 9547, 580, 580, 2410, 3457, -1000, 7831,
	1618, -1000, 7831, 2577, 2395, 1490, 1363, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2216, 2214, 2298,
	3004, 2213, 7831, -1000, -1000, 1419, 1413, 1404, -1000, 2089,
	7259, -1000, -1000, -1000, 2210, 1356, 2209, -1000, -1000, -1000,
	2202, 1402, 1081, 2201, 1495, 2200, 1238, 7831, 7831, 7831,
	7831, 2198, 1389, 1376, 7831, 7831, 7831, 7831, 2197, 7831,
	7831, 7831, 7831, 7831, 7831, 7831, 7831, 36, 36, 36,
	-1000, -1000, 1372, -1000, 1805, -1000, -1000, 2813, -1000, 2380,
	1877, 1234, -1000, -1000, -1000, 2054, -1000, -1000, 847, 811,
	841, 35787, 974, 2379, 35787, 35787, 598, 35787, 163, -1000,
	2825, 1046, -1000, 129, -90, 375, 977, 2649, 2991, -174,
	35787, 35787, 35787, 2855, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 31339, -1000, 2378, 1369, -1000, -1000, 7831, -1000,
	-1000, 2647, 35787, 35787, 2984, 2984, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1579, 2984, 2984, 1158, 1494, 1579, -1000,
	-1000, 1579, -1000, -1000, 1579, -1000, 1352, -1000, 35787, -1000,
	-1000, -1000, 2854, 2346, 1231, -1000, 701, 593, 593, 815,
	675, 2975, 14060, -1000, 1496, 966, 697, 2768, 204, -1000,
	1496, -206, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 493,
	474, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 868, 1496, 1496, 1496, 1496, 1496, -1000, 1496,
	2375, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 519, 157,
	2881, 260, 257, 1046, 2878, 282, 2899, 1103, -1000, -1000,
	-1000, -1000, 20213, 20213, 15752, 20213, -1000, 1461, -25, -45,
	-1000, -1000, 1229, 4346, 1229, 4346, -1000, -1000, 689, -1000,
	-1000, 977, -1000, 35787, 35787, -1000, -1000, 2367, 1587, -1000,
	-1000, 10692, -1000, 4346, 4346, -1000, -1000, 20769, 35787, -1000,
	-77, -1000, -61, 2813, -1000, -1000, -1000, 1171, -1000, -1000,
	1202, 977, 2656, 35787, 1171, 1171, 1171, -1000, -1000, 11830,
	35787, 35787, -1000, -1000, 2984, 6680, -1000, 26329, -1000, -1000,
	30777, -1000, 30221, 2984, 1614, -1000, 10129, 1885, 155, -1000,
	192, -326, 152, 1714, 151, 1805, -1000, -1000, 2196, 2195,
	1368, -1000, 1366, 2189, 1354, 1350, -1000, -26, -1000, 2801,
	981, -1000, 2365, -1000, 1340, 2711, -1000, 1169, -1000, 1586,
	1339, -1000, 981, 1334, 2709, 1169, 2813, 2080, -1000, 1160,
	-1000, 1953, 1343, 87, -1000, -1000, 35787, 2087, 1333, 29665,
	990, -1000, 685, 1338, 1337, -1000, 28553, 218, 28553, -1000,
	28553, -1000, -1000, 313, -1000, 35787, 2807, -1000, -1000, -1000,
	2054, 1580, -348, 35787, -1000, -1000, -1000, -1000, -1000, 1325,
	-1000, 580, 580, 2410, 3334, -1000, 9547, -1000, 9547, 2747,
	1601, -1000, 7831, 1868, 3358, 3358, 1497, 19095, 35787, -1000,
	-1000, 7831, 7831, -1000, 2739, -1000, -1000, -1000, -1000, 7831,
	7831, 1810, -1000, 35787, -1000, -1000, -1000, -1000, 19095, -1000,
	9547, -1000, 7831, 1227, 1227, 2681, 1302, 36, 36, 36,
	2611, 2590, 2572, 1279, 36, 2559, 2535, 2526, 2510, 2432,
	2428, 2391, 2385, -1000, 2362, -1000, -1000, 6108, -1000, -1000,
	231, 1147, 1875, 113, -1000, 1568, -1000, -1000, -1000, 802,
	166, 2187, 1138, -1000, -1000, 35787, -1000, -1000, -1000, 11830,
	2346, 266, 35787, 2346, 43, 1496, -1000, 487, 28553, 503,
	-1000, 35787, 1782, 1567, 2655, 355, 2793, 35787, 2361, 2360,
	2358, 2357, 314, 38546, 35787, 1104, -1000, 1332, 38068, -1000,
	35787, 1805, -1000, 1965, -1000, 1494, -1000, -1000, 2984, -1000,
	-1000, 7831, 7831, 2984, 1494, 1494, 1579, 35787, -1000, 314,
	38546, 2853, 38409, -1000, 35787, -1000, -1000, -1000, 674, -1000,
	857, 598, 35787, 1679, 857, 1678, 2355, -1000, -1000, 35787,
	35787, 35787, 35787, -1000, -1000, 35787, -1000, 35787, 35787, 35787,
	35787, -1000, 35787, 35787, -1000, 35787, 1676, 1675, 2758, -1000,
	1496, 1496, 774, -1000, -1000, 476, -1000, 1874, 1873, 1871,
	1865, 2079, 2077, 2075, 1496, 1496, 1862, 2074, 29109, 2073,
	942, 1859, 1858, 1856, 1905, 2066, 961, -1000, 2065, 1904,
	1903, 1851, 35787, 2347, 2021, -1000, -1000, 43, 1496, 255,
	35787, 1560, 487, 366, 1944, 16871, 35787, 26329, 26329, 26329,
	26329, -1000, 2698, 2697, -1000, 2672, 2671, 2678, 35787, 26329,
	2346, -1000, 29109, -1000, -1000, -1000, 1454, 1266, 2968, 875,
	7831, -1000, -1000, -56, -48, -1000, -1000, -1000, 28553, 2064,
	443, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2918, 35787,
	35787, 606, 2186, 1121, -1000, -1000, -1000, 38546, 2337, 2337,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2337,
	2337, 2344, -1000, -1000, 2336, 2336, 2336, 2271, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2338, 2338, 2339,
	2339, 2338, -1000, -1000, 2981, -1000, 1117, -1000, -1000, 1324,
	-1000, 2981, 1637, -329, 10129, 1589, 1401, -1000, 7831, 10129,
	7831, -290, 246, -292, -1000, -1000, -1000, 2058, -1000, -1000,
	-1000, 1832, -1000, 1829, 49, 61, 1671, -264, 6108, 330,
	35787, -264, 35787, 6108, -1000, 35787, 326, -264, 2918, -26,
	7831, 2751, -1000, -1000, 35787, 1828, -1000, -1000, -1000, 2989,
	28553, 1965, 1446, 27997, -1000, 211, -1000, 182, 507, 2057,
	-1000, 700, 112, 2055, 2054, -1000, -1000, -1000, -1000, 9547,
	-1000, -1000, -1000, -1000, 1805, 7831, 2177, -1000, 807, 807,
	2175, 2171, -1000, 2337, 2337, -1000, 2271, 2336, 2271, 807,
	807, 2165, -1000, 1960, 2368, -1000, 2323, 2246, 7831, -1000,
	2159, 2873, 1085, -106, -238, 36, 36, -1000, -1000, -1000,
	-1000, 36, 36, 36, 36, -1000, 36, 36, 36, 36,
	36, 36, 36, 36, 565, -1000, 2158, 1116, -1000, -1000,
	-1000, -1000, -1000, 162, 1048, -1000, 2054, 2046, -1000, 2041,
	2040, 974, 38546, 2156, 2845, 12386, 2843, 2334, 2332, 2842,
	1946, -1000, -1000, -1000, 27441, 446, -1000, -1000, -1000, 577,
	200, 1827, 480, -1000, 35787, 282, 2722, 1558, 2039, 35787,
	-1000, -1000, -1000, -1000, -1000, 2793, -1000, 919, 310, 25217,
	12386, 12386, 12386, 318, 1639, -1000, 557, 1063, 1323, 26329,
	35787, -1000, 25773, 2147, -1000, 977, 2984, -1000, 1805, 1805,
	-1000, 2984, 2984, 1494, -1000, 318, -1000, 340, -1000, 2767,
	38546, -1000, 35787, -1000, 35787, -1000, 35787, 35787, 598, 7831,
	2767, 35787, 672, -1000, -1000, 936, 302, 631, 631, 1025,
	-1000, 2838, -1000, -1000, -1000, 35787, -1000, -1000, -1000, -1000,
	-1000, -1000, 19095, 19095, 2872, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2038, 2036, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35787, 1259,
	-1000, 1547, 1946, 27441, 1538, 1469, 2035, 446, 1782, 1535,
	-1000, 2033, -1000, 982, 35787, 35787, -1000, 1086, -1000, 1532,
	2646, 2654, 2646, -1000, -1000, -1000, -1000, 2675, -1000, 2673,
	-1000, -1000, 1086, -1000, -1000, -1000, -1000, -1000, 875, -1000,
	2910, 857, 857, 857, 2144, -1000, -1000, -1000, 990, 2142,
	-1000, -1000, -1000, 3014, -1000, -1000, -1000, -1000, -1000, -1000,
	11830, 2783, 2978, 2973, 26885, 2978, -1000, -329, 1600, -1000,
	1855, 150, 1648, 35787, -1000, -1000, -1000, 2132, 2130, -270,
	71, 2972, 2971, 887, -1000, 2128, 987, -264, -1000, -1000,
	981, -1000, -1000, -1000, -264, -1000, 981, -1000, 49, -1000,
	-1000, 2820, -1000, -1000, 1965, -1000, 181, -1000, -1000, -1000,
	-1000, -1000, -1000, 108, -1000, 35787, -1000, 986, 107, -1000,
	1805, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 7831, -1000, -1000,
	-1000, 2178, -1000, -1000, 7831, 2127, 2028, 2125, 2027, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3016, -1000, 2970, -1000, 7831, 2124, 162,
	-1000, -1000, -1000, -1000, -1000, -1000, 723, 340, 2122, 984,
	-1000, -1000, -1000, -1000, 340, 24105, 12386, 340, -1000, 2025,
	120, -1000, -1000, -1000, 2023, 2022, 1811, -1000, -1000, 1815,
	1326, 138, -1000, -1000, -1000, -1000, -1000, -1000, 1944, 1817,
	1531, -349, -1000, 2330, -1000, 1496, 1496, 1496, 35787, 1256,
	-1000, 1496, 1496, 2120, 2119, 2114, 575, 1591, 1578, -1000,
	1804, 20213, 26329, 25773, 1083, -1000, 1319, -1000, -1000, -1000,
	-1000, -1000, 2984, 575, -1000, -1000, -1000, 35787, 259, 2315,
	-1000, 2306, 2617, 383, 2291, 2286, 35787, 2164, -1000, 2767,
	35787, 600, 2779, -1000, -1000, -1000, -1000, -1000, 428, -1000,
	35787, -1000, -1000, 1430, -1000, 19095, -1000, -1000, 1255, -1000,
	2021, 2019, -1000, 120, 2015, 4346, -1000, -1000, 2722, 2011,
	-1000, 35787, 982, 982, 3016, 35787, 6108, -1000, -1000, 7831,
	2285, -1000, 7831, -1000, -1000, -1000, -1000, -1000, 2283, 2785,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1341, -1000, 7831,
	7831, -1000, -1000, 597, 10129, -298, 242, -1000, -1000, -1000,
	-272, 2010, -1000, -1000, 2966, 2008, 1969, 35787, -1000, -1000,
	981, 981, -270, -1000, -1000, 977, -1000, -1000, 3, 471,
	-1000, 2154, -1000, 2140, 36, -1000, 36, -1000, 164, 7831,
	2047, -1000, 2113, 38546, -176, -177, 12386, -1000, 1254, -1000,
	1496, 1496, 2110, -176, -1000, -1000, 311, -1000, -1000, 273,
	-1000, -1000, 1813, 499, -1000, -1000, -1000, 1530, 1756, 1979,
	23549, 19095, 19651, 2006, -1000, -1000, 25217, 1341, 1341, 38925,
	186, 38925, 898, 1574, -1000, 1799, -1000, 1794, -1000, 2984,
	1083, 1319, -1000, -1000, 1431, -1000, 898, -1000, -1000, 259,
	-1000, -1000, 1687, 9547, -1000, -1000, 2005, 19651, 719, 1528,
	1526, 741, 2278, -1000, 435, 3011, -1000, -1000, -1000, 767,
	2277, -1000, 1669, 1668, -1000, 35787, -1000, 23549, 23549, 293,
	293, 23549, 23549, 2272, 631, -1000, -1000, 9547, -1000, -1000,
	-1000, -1000, 1496, 1380, -1000, -1000, -1000, -1000, -1000, -1000,
	1817, -1000, -1000, 2883, -1000, -1000, 1805, 35787, 1805, 24661,
	-1000, 2965, 2964, -1000, 1805, 931, -1000, -329, 35787, 35787,
	-276, 1790, -1000, 1998, 68, -1000, -1000, 969, -272, -283,
	44, 66, 1505, -1000, -1000, -1000, -1000, 2052, -1000, 470,
	-1000, -1000, -1000, 931, -1000, -1000, -172, -1000, -1000, 350,
	-1000, -1000, -1000, 24105, 1341, 1341, -177, -1000, 504, 1997,
	-1000, -1000, 264, -1000, -1000, 1993, -1000, -1000, 106, -1000,
	1499, 1242, -1000, 2271, 7831, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 556, 38769, -1000, 966, -1000, 3, 556,
	478, 245, -1000, 1789, -1000, -1000, 3016, -1000, 475, -1000,
	-1000, 2410, -1000, -1000, -1000, -1000, -1000, -1000, 1992, 1989,
	-1000, -1000, -1000, -1000, -1000, 1781, 2267, -64, 2865, 1988,
	-1000, -1000, 2266, 1239, 1205, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1195, 1181, 23549, -1000, -1000, 2410, 19095, 1496,
	-1000, -1000, 1180, 1161, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2261, -1000, -1000, 2963, -276, -1000, 1985, 642, 55,
	66, -1000, 2962, 62, 2961, 2958, 1980, -1000, -1000, 790,
	-265, 34, 26, 24, -1000, -1000, -1000, 7831, 35787, 430,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 100, -1000, -1000,
	-1000, -1000, 1979, 1973, -1000, 23549, 2838, 2029, 388, 2957,
	38925, -1000, 1496, -1000, 388, -1000, 333, -1000, 1546, -1000,
	1779, -1000, 2883, -1000, 329, -1000, -1000, -1000, 2034, 7831,
	2260, 1496, 1958, -168, 23549, 2434, 2412, 2386, 2370, 1151,
	-1000, 19095, -1000, -1000, 22993, 35787, 1969, -1000, -1000, 2257,
	1774, 71, 52, 2956, -1000, 1969, 2955, 1969, 1969, -1000,
	1644, -1000, 32, 30, 28, -1000, -1000, -1000, -1000, 444,
	-1000, 209, -1000, -1000, -1000, 243, -1000, -1000, 2838, -1000,
	2954, 461, -1000, 19095, -1000, -1000, -1000, 1754, -1000, -1000,
	-1000, -1000, 1821, -1000, 35787, -1000, 2652, -1000, 156, 1148,
	243, 293, 243, 293, 243, 293, 243, 293, 189, -1000,
	-1000, -1000, 1142, -1000, -1000, 2863, 18539, 46, -1000, -1000,
	-1000, 1971, -1000, 1969, -1000, -1000, 790, -1000, -1000, -1000,
	1967, -1000, -1000, -1000, -1000, 1496, 1963, 301, -1000, -1000,
	-1000, 22437, 401, 379, 359, -1000, 547, -1000, -1000, -1000,
	631, -1000, -1000, 2593, 2098, 2988, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 35787, -1000, 35787, -1000,
	1141, -1000, -1000, -1000, 1316, -1000, -1000, -1000, -1000, -1000,
	-318, 1749, -1000, 35787, -1000, 35787, 395, 1746, 9547, 2255,
	9547, 2253, 422, 2252, -1000, -1000, 3009, -1000, 3007, 718,
	718, 243, 243, 243, 243, -1000, 928, -1000, 1493, -1000,
	21881, 35787, -1000, -1000, 1957, -1000, -1000, 1129, 2251, 2945,
	-1000, 2615, 35787, 2571, 35787, 2248, 1468, 9547, -1000, -1000,
	-1000, 1792, 441, -1000, 35787, 5536, -1000, 1312, -1000, -1000,
	-1000, 555, 410, -1000, 1107, -1000, 1037, 21325, 1715, 2384,
	-1000, -1000, -1000, -1000, -1000, 1805, 35787, 1036, -1000, 35787,
	392, -1000, -1000, -1000, 1031, -1000, -1000, -1000, -1000, 555,
	2708, -1000, 1694, -1000, -1000, 38717, 671, -1000, -1000, 38717,
	394, -1000, 538, 1966, -1000, -1000, 1029, -1000, 35787, 730,
	7831, -1000, 394, 38925, -1000, 7831, 1019, -1000, 38925, 978,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 164, 3032, 248, 169, 3637, 91, 247, 218, 215,
	243, 3636, 3635, 3634, 2814, 2786, 3633, 3632, 3631, 3628,
	3627, 3626, 3625, 3624, 3623, 3622, 3621, 3620, 3619, 3617,
	3615, 3614, 3613, 3612, 3610, 3609, 3608, 3606, 3605, 3604,
	3589, 3572, 3571, 3570, 3569, 3567, 242, 3566, 3551, 3549,
	3541, 3535, 3526, 3525, 3524, 3523, 3521, 3520, 3519, 3513,
	3512, 3511, 3509, 3507, 3505, 3503, 3502, 3501, 3499, 3498,
	3497, 3496, 3495, 3494, 3493, 3491, 3490, 3489, 3488, 213,
	3487, 2776, 3486, 3485, 3484, 3482, 3468, 3467, 3466, 232,
	3465, 3464, 3463, 3461, 3460, 3459, 3458, 3456, 3454, 3453,
	3451, 226, 3450, 3449, 3446, 3438, 3432, 3431, 222, 3429,
	167, 187, 3428, 3424, 3423, 3422, 3421, 3420, 235, 236,
	69, 3418, 47, 3417, 220, 3416, 139, 3415, 136, 3414,
	3412, 3410, 3409, 3408, 3406, 3398, 3395, 3394, 3393, 3392,
	3391, 3389, 3386, 3384, 3383, 88, 3382, 255, 3379, 68,
	3377, 3374, 124, 127, 184, 258, 2388, 253, 249, 185,
	172, 94, 3373, 2788, 3372, 154, 229, 155, 25, 3371,
	125, 3370, 262, 44, 27, 245, 181, 56, 153, 113,
	3368, 212, 105, 103, 3366, 3365, 132, 238, 174, 3364,
	101, 3363, 3361, 3358, 3357, 3352, 201, 198, 3351, 3350,
	123, 3349, 3348, 92, 3347, 73, 197, 161, 194, 3345,
	90, 121, 120, 116, 175, 3340, 81, 3339, 3338, 3337,
	3336, 171, 3335, 3333, 130, 61, 3332, 3331, 3329, 67,
	3327, 48, 3326, 28, 3325, 65, 3324, 3321, 3320, 3319,
	3317, 3315, 3308, 3307, 3306, 3305, 3299, 55, 3296, 3295,
	12, 16, 18, 3294, 24, 3292, 162, 3291, 3289, 3288,
	86, 87, 3287, 83, 1, 49, 71, 3286, 3285, 224,
	107, 97, 137, 3284, 395, 3283, 3282, 3280, 158, 3278,
	1474, 3276, 3274, 3273, 3271, 3266, 128, 3265, 214, 38,
	3262, 118, 133, 3258, 35, 45, 199, 216, 3256, 3253,
	3252, 138, 210, 115, 34, 0, 3251, 149, 3250, 3249,
	3246, 252, 3245, 233, 227, 166, 308, 268, 221, 3244,
	3243, 64, 3241, 156, 66, 54, 141, 9, 20, 251,
	3240, 14, 176, 3239, 206, 3238, 150, 36, 135, 3237,
	3236, 31, 256, 3235, 3233, 3232, 119, 3231, 3230, 179,
	74, 3229, 3228, 3227, 3226, 39, 3224, 33, 19, 3222,
	99, 3221, 244, 3220, 209, 134, 178, 173, 147, 225,
	230, 78, 75, 3217, 1597, 146, 89, 17, 3216, 228,
	3215, 177, 117, 3212, 122, 3211, 237, 383, 211, 3205,
	182, 7, 43, 32, 3202, 8, 3201, 82, 202, 3199,
	3197, 22, 51, 3196, 29, 3195, 3194, 3193, 3191, 5,
	3190, 3189, 3184, 2, 4, 3183, 3, 205, 163, 112,
	85, 62, 3182, 3181, 46, 157, 3179, 144, 152, 145,
	3178, 72, 3173, 3171, 3170, 2594, 3167, 250, 3166, 3164,
	3163, 3161, 3160, 3146, 3140, 3139, 3137, 3135, 100, 42,
	3133, 3131, 3129, 3128, 76, 131, 3126, 3124, 3123, 3122,
	37, 129, 3121, 21, 3120, 26, 30, 41, 3118, 93,
	3117, 13, 180, 3116, 3115, 15, 3112, 3111, 10, 11,
	3110, 3109, 111, 3108, 95, 23, 160, 102, 3106, 3105,
	84, 219, 126, 3104, 3103, 96, 241, 200, 3102, 430,
	240, 254, 3101, 223, 3099, 3098, 3097, 3096, 3095, 3094,
	1023, 3093, 3092, 246, 70, 77, 108, 3091, 3089, 3087,
	80, 159, 110, 109, 57, 79, 3086, 106, 190, 3084,
	188, 3083, 3082, 98, 3080, 3077, 3074, 3070, 183, 3069,
	3068, 189, 231, 3067, 3066, 389, 3065, 3064, 3063, 3059,
	3058, 3056, 3049, 3048, 3044, 3040, 234, 192, 3030,
}

//line mysql_sql.y:10711
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 551, 554, 554, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 536, 536, 536, 537,
	537, 112, 133, 132, 135, 135, 134, 134, 131, 131,
	127, 130, 130, 129, 129, 128, 123, 125, 125, 124,
	126, 126, 113, 101, 114, 481, 481, 480, 480, 479,
	479, 432, 432, 478, 478, 478, 477, 477, 477, 476,
	476, 475, 475, 474, 474, 472, 472, 473, 471, 470,
	470, 470, 468, 468, 468, 464, 464, 466, 465, 465,
	467, 459, 459, 462, 462, 460, 460, 460, 460, 463,
	458, 458, 458, 457, 457, 100, 100, 100, 376, 376,
	99, 99, 390, 390, 390, 390, 390, 388, 388, 388,
	388, 388, 388, 387, 387, 386, 386, 391, 391, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 90,
	90, 90, 90, 90, 95, 95, 95, 542, 542, 541,
	541, 543, 543, 543, 543, 544, 544, 93, 93, 93,
	94, 385, 385, 385, 91, 92, 92, 375, 375, 380,
	380, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 384, 384, 384, 382, 382, 381,
	381, 383, 383, 84, 84, 84, 87, 86, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 372, 372, 371, 96, 96, 97, 539, 539,
	538, 540, 540, 540, 540, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 506, 506, 506, 508, 508, 309,
	310, 555, 312, 308, 308, 308, 502, 502, 503, 504,
	505, 505, 505, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 255, 255, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 243,
	243, 243, 238, 238, 238, 238, 239, 239, 240, 240,
	241, 241, 241, 241, 242, 242, 302, 302, 260, 260,
	260, 262, 262, 261, 259, 257, 257, 257, 257, 257,
	257, 258, 258, 258, 263, 263, 76, 82, 82, 82,
	519, 519, 77, 530, 530, 435, 435, 323, 323, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 440, 441, 319, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 53, 56,
	52, 52, 52, 361, 361, 51, 556, 556, 297, 297,
	64, 63, 55, 65, 66, 67, 68, 69, 70, 50,
	62, 62, 62, 62, 62, 62, 62, 62, 73, 453,
	453, 558, 558, 558, 71, 72, 434, 434, 434, 61,
	60, 59, 58, 57, 57, 49, 49, 48, 48, 54,
	139, 140, 316, 316, 316, 318, 318, 314, 557, 557,
	404, 404, 317, 317, 47, 47, 47, 47, 74, 315,
	315, 296, 313, 313, 313, 12, 12, 10, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 25, 26, 28, 369, 369, 366, 27, 19,
	18, 18, 22, 21, 17, 17, 20, 23, 24, 24,
	9, 9, 9, 9, 14, 14, 15, 160, 160, 211,
	211, 514, 514, 510, 510, 511, 511, 511, 512, 512,
	513, 513, 108, 447, 447, 447, 447, 447, 447, 8,
	182, 182, 446, 446, 446, 446, 446, 446, 373, 373,
	373, 491, 491, 491, 492, 181, 181, 176, 176, 448,
	448, 338, 493, 493, 456, 456, 455, 455, 454, 454,
	179, 179, 180, 180, 163, 163, 119, 119, 461, 461,
	461, 461, 469, 469, 431, 431, 247, 247, 289, 289,
	290, 290, 153, 153, 154, 154, 154, 154, 154, 154,
	545, 545, 546, 547, 548, 548, 549, 549, 549, 550,
	550, 550, 550, 550, 499, 499, 501, 501, 500, 178,
	178, 174, 174, 175, 175, 175, 173, 173, 172, 171,
	171, 170, 168, 168, 168, 169, 169, 169, 186, 186,
	156, 156, 156, 155, 155, 155, 155, 155, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	157, 157, 507, 507, 507, 436, 436, 436, 443, 443,
	271, 271, 272, 272, 270, 270, 158, 158, 159, 159,
	159, 159, 269, 269, 268, 161, 161, 167, 166, 166,
	162, 162, 162, 162, 279, 279, 278, 278, 278, 278,
	111, 117, 117, 118, 185, 185, 277, 276, 276, 276,
	184, 184, 183, 183, 177, 177, 165, 165, 165, 165,
	275, 164, 273, 535, 535, 534, 534, 533, 531, 531,
	531, 532, 532, 532, 532, 483, 483, 483, 483, 483,
	303, 303, 303, 307, 307, 306, 306, 306, 306, 306,
	311, 7, 7, 7, 7, 7, 7, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	38, 195, 196, 39, 197, 197, 198, 198, 199, 199,
	200, 201, 202, 202, 202, 202, 37, 187, 187, 188,
	188, 189, 189, 190, 191, 191, 191, 194, 192, 193,
	193, 553, 553, 552, 36, 36, 29, 146, 146, 147,
	147, 147, 149, 149, 244, 244, 244, 148, 148, 150,
	150, 150, 515, 518, 516, 516, 520, 520, 520, 521,
	521, 521, 521, 522, 522, 30, 136, 141, 525, 525,
	525, 524, 524, 526, 526, 527, 527, 293, 293, 294,
	294, 144, 145, 145, 143, 138, 152, 152, 152, 152,
	152, 137, 142, 517, 523, 523, 523, 370, 370, 367,
	368, 368, 365, 364, 364, 364, 529, 529, 528, 528,
	528, 304, 304, 31, 360, 360, 362, 363, 363, 363,
	354, 354, 354, 354, 35, 358, 358, 359, 359, 359,
	359, 359, 355, 355, 357, 357, 353, 353, 353, 353,
	353, 34, 151, 151, 352, 352, 349, 349, 347, 347,
	348, 348, 346, 346, 346, 350, 350, 42, 75, 43,
	44, 45, 41, 41, 41, 351, 351, 33, 33, 33,
	121, 120, 120, 120, 120, 120, 292, 292, 291, 291,
	122, 40, 223, 223, 423, 423, 418, 418, 418, 418,
	418, 438, 438, 438, 419, 419, 419, 420, 420, 420,
	422, 422, 422, 421, 421, 421, 421, 421, 437, 437,
	439, 439, 439, 392, 392, 393, 393, 393, 396, 396,
	410, 410, 411, 411, 409, 409, 416, 416, 415, 415,
	414, 414, 413, 413, 412, 412, 412, 412, 407, 407,
	406, 406, 394, 394, 394, 394, 394, 395, 395, 395,
	405, 405, 408, 408, 267, 267, 266, 266, 231, 231,
	232, 232, 265, 265, 229, 229, 230, 230, 230, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 489, 489, 490, 234, 234, 245,
	245, 245, 245, 245, 245, 233, 233, 235, 235, 212,
	212, 210, 210, 203, 203, 204, 204, 205, 205, 205,
	209, 209, 208, 208, 208, 208, 206, 206, 207, 207,
	207, 207, 207, 207, 378, 378, 486, 486, 487, 487,
	482, 482, 482, 485, 485, 485, 485, 485, 488, 488,
	488, 484, 484, 213, 287, 287, 287, 305, 305, 305,
	305, 286, 286, 286, 228, 228, 227, 227, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	377, 377, 320, 320, 321, 321, 254, 253, 253, 253,
	253, 253, 251, 252, 250, 250, 250, 250, 250, 249,
	249, 248, 248, 248, 356, 356, 246, 246, 237, 237,
	237, 236, 236, 236, 417, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	285, 285, 285, 330, 330, 335, 335, 498, 498, 497,
	214, 214, 214, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 224, 224, 224, 401, 401, 401, 401, 402,
	402, 402, 402, 403, 403, 403, 399, 399, 400, 400,
	339, 340, 340, 444, 444, 445, 445, 397, 397, 398,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	452, 452, 452, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 509,
	509, 509, 494, 494, 494, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 283, 283, 283, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 341, 341, 342, 342, 449, 449, 449, 449,
	449, 449, 450, 450, 451, 451, 451, 451, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 328, 280, 280,
	280, 343, 336, 336, 337, 337, 331, 331, 331, 331,
	331, 331, 331, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 332, 332, 334, 334, 345,
	345, 345, 344, 344, 344, 344, 344, 344, 344, 226,
	226, 226, 226, 325, 325, 325, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 216, 216,
	216, 216, 220, 220, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 221, 221,
	221, 221, 221, 219, 219, 219, 219, 219, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 109, 110, 110, 218,
	288, 288, 424, 424, 427, 427, 425, 425, 426, 428,
	428, 428, 429, 429, 429, 430, 430, 430, 433, 433,
	295, 295, 295, 301, 301, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 5, 3, 3, 2, 4, 4, 4, 4, 4,
	1, 1, 1, 3, 3, 1, 1, 1, 6, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 4, 1, 3, 1, 4, 6,
	6, 4, 4, 4, 4, 4, 3, 6, 3, 5,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	1, 3, 2, 1, 5, 4, 4, 2, 0, 5,
	4, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 6, 4, 5, 7, 4, 5,
	0, 1, 3, 8, 0, 6, 0, 4, 6, 1,
	1, 1, 1, 1, 2, 3, 1, 3, 6, 0,
	3, 0, 1, 2, 4, 4, 0, 1, 3, 1,
	3, 3, 0, 1, 1, 0, 2, 2, 0, 2,
	3, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	7, 7, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 2, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 4, 4, 3, 2, 2, 2, 3, 2, 3,
	4, 1, 3, 4, 0, 2, 1, 1, 2, 2,
	0, 1, 2, 4, 1, 3, 1, 3, 2, 3,
	1, 4, 3, 0, 1, 1, 2, 5, 2, 2,
	2, 0, 2, 3, 3, 0, 1, 3, 1, 3,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 1, 7, 1, 3, 0, 1, 1, 3,
	1, 3, 0, 1, 1, 1, 14, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 1,
	1, 0, 1, 2, 9, 9, 7, 1, 2, 3,
	3, 3, 0, 4, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 1, 0, 2, 7, 8, 8, 0, 3,
	3, 0, 3, 0, 3, 0, 5, 1, 3, 0,
	3, 3, 0, 2, 9, 6, 0, 2, 2, 3,
	3, 4, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 6, 0, 4, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 8, 2, 4,
	4, 4, 9, 10, 8, 0, 2, 11, 9, 11,
	2, 2, 8, 4, 5, 3, 1, 3, 0, 3,
	5, 10, 0, 2, 0, 2, 0, 3, 2, 4,
	3, 0, 2, 1, 0, 2, 3, 0, 2, 3,
	0, 2, 1, 0, 3, 2, 4, 3, 0, 1,
	0, 1, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 1, 3, 3, 3, 0, 4,
	1, 3, 3, 3, 0, 1, 1, 3, 2, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 5, 4, 1, 3, 3, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 1, 1,
	1, 1, 7, 9, 7, 9, 2, 1, 7, 9,
	7, 9, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 3, 3, 2, 2,
	1, 5, 6, 4, 1, 1, 1, 5, 4, 1,
	1, 2, 0, 1, 1, 2, 5, 0, 1, 1,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 3, 5, 2, 2, 2, 2, 1, 1, 2,
	5, 6, 6, 6, 6, 1, 1, 1, 1, 1,
	4, 4, 4, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 5, 0, 1,
	3, 0, 1, 0, 2, 0, 2, 0, 1, 6,
	8, 8, 6, 6, 5, 5, 5, 6, 6, 6,
	6, 5, 6, 6, 6, 6, 6, 6, 6, 6,
	1, 1, 1, 4, 4, 6, 8, 6, 4, 5,
	4, 4, 4, 3, 4, 6, 6, 7, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 8, 4, 2, 3,
	2, 4, 2, 2, 4, 6, 2, 2, 4, 6,
	4, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 4, 4, 1, 2, 3, 5, 1,
	1, 3, 0, 1, 0, 3, 0, 3, 3, 0,
	3, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -551, -554, -2, -5, 604, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -153, -115, -116, 594,
	-85, -86, -87, -32, -31, -30, -29, -136, -141, 600,
	439, 13, 488, -14, -15, -499, -16, 257, -308, -309,
	-310, -312, -555, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -139, -140,
	-74, -56, -75, -77, -76, -82, -78, -83, -138, -143,
	-13, 232, -81, 75, -91, -92, -93, -94, -95, -97,
	-98, 364, 370, 427, 593, 60, -154, -156, 608, 609,
	157, 158, 160, 161, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 228, 15, 531,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-137, -24, -142, -22, 252, 251, 37, 318, 319, 320,
	368, 250, 229, 14, 30, 41, 344, -155, 81, 523,
	524, 526, 230, -157, 12, 612, -6, -3, -2, -123,
	-127, -131, -134, -135, -132, -133, -4, -110, 115, 242,
	595, -305, 360, 596, 598, 597, 84, 92, -298, -300,
	364, 370, 593, 609, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 560,
	561, 551, 552, 553, 554, 555, 556, 557, 558, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 491, 580, 581, 582, 583, 519, 579,
	342, 343, 528, 269, 293, 395, 299, 306, 157, 176,
	170, 198, 190, 524, 165, 273, 311, 274, 91, 160,
	474, 105, 451, 424, 163, 288, 290, 292, 520, 521,
	295, 294, 296, 298, 522, 275, 345, 186, 181, 287,
	271, 179, 276, 39, 277, 203, 278, 279, 533, 447,
	341, 453, 303, 422, 180, 448, 291, 450, 207, 211,
	465, 466, 174, 175, 455, 468, 202, 205, 206, 249,
	42, 530, 261, 469, 209, 201, 197, 477, 307, 305,
	200, 173, 196, 272, 64, 213, 212, 214, 418, 419,
	420, 421, 280, 281, 358, 464, 193, 182, 346, 166,
	22, 472, 256, 452, 371, 282, 300, 308, 208, 210,
	263, 268, 532, 523, 426, 267, 304, 470, 178, 260,
	289, 255, 473, 167, 526, 373, 283, 161, 297, 467,
	476, 63, 386, 172, 164, 246, 158, 265, 270, 284,
	285, 286, 517, 310, 309, 301, 525, 194, 262, 199,
	184, 171, 195, 159, 264, 475, 387, 591, 344, 405,
	192, 189, 266, 239, 471, 454, 162, 409, 388, 187,
	312, 587, 588, 589, 359, 340, 313, 314, 185, 253,
	445, 446, 317, 415, 333, 389, 425, 396, 390, 220,
	221, 321, 457, 459, 204, 590, 322, 323, 324, 449,
	325, 326, 327, 328, 363, 55, 57, 93, 95, 610,
	62, -383, -381, -305, 524, 593, 370, 523, 526, 364,
	344, 609, -197, -305, 611, -163, 38, -210, -305, -163,
	-81, -15, -14, -155, -156, -210, 236, -313, 23, 422,
	-89, 423, 232, 81, -305, -9, -101, -8, -108, -79,
	-153, 427, -311, -305, 318, 318, -311, 236, -305, 267,
	403, -435, 242, -387, -360, 268, -386, -362, -389, -363,
	31, 228, 230, 229, 264, 15, 368, 238, 13, 12,
	369, 250, 24, 25, 27, 14, 370, 372, 28, 373,
	376, 377, 378, 41, 381, 382, 257, 84, 92, 87,
	275, -196, -305, -337, -331, 112, 258, -333, -326, -327,
	-329, -478, -472, -324, 81, 139, 140, 147, 113, -328,
	-417, 35, 115, 540, 579, 489, -281, -282, -283, -284,
	-285, -305, -473, -471, 87, 96, 99, 102, 103, 101,
	100, 151, 183, 98, 88, 152, -156, 84, -494, 549,
	-299, 572, 580, 581, 582, 583, 571, 60, -442, -451,
	235, -449, 150, 188, 253, 184, 13, 145, 415, 185,
	546, 568, 491, 550, 560, 575, 542, 543, 544, 537,
	538, 539, 541, 551, 553, 567, -452, 563, 573, 574,
	559, 576, 577, 578, 86, 85, 566, 565, 552, 547,
	548, 554, 536, 545, 555, 556, 564, 569, 570, 352,
	105, 353, 354, 481, 345, 355, 242, 422, 69, 356,
	357, 358, 359, 360, 488, 361, 70, 362, 351, 257,
	405, 363, 187, 204, 493, 492, 494, 485, 482, 480,
	483, 484, 486, 487, 557, 558, 562, -117, -118, 585,
	-545, -274, -546, 6, 7, 8, 9, -547, 152, -536,
	424, 532, 87, 162, 159, -374, 162, 111, 167, 166,
	-374, 321, 263, -351, -146, 342, 405, 325, 93, 267,
	-354, -352, 520, -437, 315, 311, 237, 108, -147, 247,
	246, 106, 481, 235, 379, 306, 55, 57, -510, -511,
	225, 226, 227, -501, 514, -500, -305, 354, 95, 26,
	236, 365, 263, 459, 457, 458, 460, 461, 462, 463,
	-62, -453, -434, 454, 453, -317, 446, 452, 444, 456,
	447, 343, 327, 326, 228, 605, 521, 515, -295, 389,
	425, 478, 479, 366, 426, 465, 467, 448, 105, 191,
	188, 237, 239, 236, 342, 481, 405, 93, 325, -510,
	159, 465, 467, 267, 403, 40, -380, 415, -379, -381,
	466, 477, 85, 86, 464, -295, 105, 445, 445, -545,
	-274, -154, -156, -111, -499, 522, 522, 522, 237, 342,
	405, 267, 238, 236, 518, 520, 239, 481, 235, 318,
	365, 263, 325, 93, -436, -507, 31, -443, 222, 223,
	224, 32, 33, -1, 119, 612, -331, -331, -6, 615,
	-6, -331, -305, -305, 154, -216, -220, -217, -219, -218,
	-222, -221, 188, 189, 150, 192, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 205, 206, 203, 30, 204,
	253, 184, 185, 186, 187, 207, 170, 190, 529, 215,
	171, 216, 172, 217, 173, 218, 174, 175, 219, 176,
	179, 180, 181, 182, 178, 153, 81, 153, 87, -179,
	259, -210, 153, -179, -545, -172, -173, 11, -210, -286,
	-305, 424, 122, -89, -89, 423, -502, -503, -504, -506,
	232, 423, 422, 153, 275, 16, -311, -311, 79, -210,
	-362, 267, -387, -360, 35, 78, 154, 240, 154, 78,
	81, 366, 342, 405, 367, 481, 236, 379, 239, 267,
	380, 342, 405, 236, 239, 481, 267, 342, 236, 239,
	405, 267, 380, 444, 445, 239, 26, 371, 374, 375,
	445, -457, 477, 154, 111, 108, 109, 110, -331, 129,
	-344, 122, 123, 124, 125, 126, 127, 128, 136, 135,
	146, 139, 140, 141, 142, 143, 144, 145, 137, 138,
	132, 112, 130, 134, 131, 114, -156, -331, -337, 60,
	-329, -329, -329, -329, -417, -335, -331, 81, 81, 81,
	153, 100, 87, -331, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, -450, 81, 81, -341,
	-342, 81, 81, -324, -286, 81, 87, 87, 81, 81,
	81, 87, -342, -342, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, -173, 154, -172, 81,
	-172, -173, -157, -156, 31, 32, 31, 32, 31, 32,
	31, 32, -548, 602, 81, 96, 610, 220, 470, 531,
	165, 166, 167, -195, -305, -197, 365, 239, 518, 517,
	239, -147, -349, 242, -349, -349, -349, -349, 238, -349,
	23, 236, 236, 236, -349, 488, 122, 122, 58, -512,
	169, 154, -501, -178, 81, -316, 130, 134, -316, 23,
	265, 265, 265, -316, 305, -556, -557, 16, 132, -314,
	-557, -314, -314, -316, -558, 238, 455, 42, 266, 265,
	-174, -175, 21, -174, 449, 445, -404, 450, 451, -318,
	-557, -317, -316, -316, -317, -316, -316, -316, 236, 239,
	481, 325, 606, -556, -556, 30, 30, -435, -435, -210,
	-435, 515, -296, -305, -435, -435, -435, -513, 241, -542,
	-541, 468, -544, 470, 159, -381, 159, -381, -362, 267,
	267, 154, 122, 23, -382, 122, 133, -381, -381, -382,
	-382, -233, 40, -304, 150, -305, 87, -233, 40, -539,
	-538, -210, -173, -157, -156, 82, 82, 82, 525, 525,
	525, -435, -435, -435, -435, -435, -437, -435, -435, -435,
	-435, -435, -311, -187, -305, -197, 242, -435, -435, -158,
	-159, 141, -331, -305, -158, -3, -125, -124, 116, 117,
	119, 596, 360, 595, 599, 593, -381, 40, -430, 387,
	386, -424, -426, 81, -425, 81, -425, -425, -425, -425,
	-425, 81, 81, -427, 81, -427, -427, -424, -428, 81,
	-428, -429, 81, -429, -428, -305, -336, -337, -305, 38,
	-446, 60, -153, 81, 30, 81, -305, -447, 60, -153,
	81, 30, -173, -119, 38, -175, 20, 153, 96, 87,
	-89, 82, 154, -505, 102, 103, -508, 202, 194, -305,
	-104, 87, -7, -8, -9, -10, -46, -79, -153, -474,
	-472, 81, 31, 414, 78, 16, -388, 236, 481, 365,
	263, 239, 342, -386, -369, -366, -364, -304, -362, -365,
	-364, -391, -286, 445, -120, 429, 428, 317, -331, -331,
	-331, -331, -331, 101, 112, 340, 102, 103, -326, -345,
	31, 313, 314, -327, -327, -327, -327, -327, -327, -327,
	-327, -327, -327, -327, -327, -334, -343, -417, 81, 132,
	130, 134, 131, 114, -329, -329, -327, -327, 82, 154,
	-498, -497, 116, -331, -331, -331, -305, -495, -496, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	356, 351, 357, 355, 345, 363, 358, 359, 187, 512,
	513, 506, 507, 508, 509, 510, 511, -336, -336, -331,
	-495, -336, -280, 32, 31, -337, -337, -337, 82, -331,
	-509, 338, 337, 339, -176, -305, -336, 82, 82, 82,
	96, -337, -337, -336, -327, -336, -496, -280, -280, -280,
	-280, 141, -337, -337, -280, -280, -280, -280, 141, -280,
	-280, -280, -280, -280, -280, -280, -280, 82, 82, 82,
	-174, -118, -455, -454, -331, 40, -119, -175, -549, 603,
	81, -286, -537, 87, 87, 613, 471, 472, 163, 166,
	165, 34, 81, -187, -349, -349, 518, -349, -515, -305,
	112, -370, -367, -364, -305, -305, -360, -305, -305, -210,
	-349, -349, -349, -210, -244, 52, 53, 54, -364, -148,
	55, 56, -513, -500, 34, -177, -305, -270, 17, -329,
	-329, -364, 267, -556, -316, -316, -297, -296, -318, -313,
	-318, -318, -270, -314, -316, -316, -331, -318, -314, -270,
	-305, 445, -270, -270, -404, -315, -305, -315, -349, -296,
	-297, -297, -210, -210, -255, -256, 233, 349, 350, 231,
	229, 11, 230, -264, 306, -350, 489, -239, -240, 76,
	41, -242, 391, 384, 269, 273, 91, 274, 424, 275,
	238, 277, 278, 279, 294, 296, 249, 280, 281, 282,
	415, 283, 158, 295, 284, 285, 286, 367, -234, 6,
	328, 40, 50, 51, 438, 437, 534, 531, 270, -515,
	-515, 30, 30, -370, -305, -305, -166, -161, -165, -162,
	-167, -273, -275, -164, 81, -210, -156, -305, 154, 469,
	471, 472, -542, -382, -542, -382, 31, 414, -385, 414,
	31, -360, -379, 465, 467, -375, 87, 415, -365, -384,
	78, 150, -454, -382, -382, -384, -384, 149, 154, -540,
	470, 471, 225, -174, 96, 96, 96, -212, -210, -515,
	-369, -360, -305, -435, -212, -212, -212, -305, -305, 81,
	153, 35, -305, -305, -269, 154, -268, 16, -306, -305,
	34, 87, 153, -269, -126, -124, 118, -331, -6, 595,
	-331, -6, -6, -331, -6, -331, -433, 388, 96, 96,
	-288, 87, -288, 96, 96, 96, 82, 87, -373, 78,
	-448, -338, -493, 585, -181, 82, -176, -491, -492, -176,
	-180, -305, -448, -181, 82, -491, -174, 586, -119, -171,
	-170, -331, -305, 23, -89, -503, 153, 154, -177, -388,
	-368, -365, -390, 141, -305, -376, 154, 531, 616, 85,
	240, -529, -528, 406, 82, 154, -458, 241, 488, 87,
	613, 422, 220, 221, 101, 340, 102, 103, -417, -337,
	-334, -329, -329, -327, -327, -332, 254, -332, 111, -331,
	-330, -497, 118, -331, 34, 34, 154, 79, 153, 82,
	82, 16, 16, 82, -331, 82, 82, 82, 82, 16,
	16, -331, 82, 153, 82, 82, 82, 82, 79, 82,
	154, 82, 154, -337, -337, -331, -337, 82, 82, 82,
	-331, -331, -331, -337, 82, -331, -331, -331, -331, -331,
	-331, -331, -331, -398, 440, -398, -398, 154, 82, -119,
	81, 96, 154, -292, -291, 87, 164, 167, 167, 166,
	-196, -198, -199, -200, -201, -202, 132, 155, 156, 81,
	-210, -210, -349, -210, -518, 392, 35, -530, 154, 40,
	-528, 481, -144, 317, -353, 79, -151, 16, 531, -210,
	-210, -210, -223, 34, 16, -160, -211, -305, 81, 82,
	154, -331, -361, 79, -305, -297, -270, -270, -318, -270,
	-270, 154, 22, -316, -318, -318, -314, 153, -296, -423,
	34, -178, 154, -209, -302, -206, -208, 244, -321, -207,
	247, -487, 245, 243, 106, 248, 302, 107, 238, -302,
	-302, 244, -243, 240, 34, -302, -258, 238, 302, 245,
	20, -257, 238, 107, -305, 244, 248, 243, -301, 122,
	-295, 149, 240, 42, 367, -301, 535, -301, -301, -301,
	-301, -301, -301, -301, 276, 276, -301, -301, -301, -301,
	-301, -301, -301, -301, -301, -301, -301, 159, -301, -301,
	-301, -301, -301, -301, 81, 271, 272, -519, 392, 30,
	348, 348, -530, 30, -152, 342, 30, -276, -277, -278,
	-279, 67, 71, 73, 68, 69, 70, 74, 30, 154,
	-303, -307, 34, -305, 87, -303, -156, -161, -166, -303,
	81, -541, -543, 473, 470, 476, -384, -384, 240, 81,
	122, -384, -384, 40, -304, -538, 477, 471, -119, 154,
	78, -212, -188, -189, -190, -191, -216, -286, 189, 192,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 205,
	206, 203, 204, 253, 184, 185, 186, 187, 207, 170,
	190, 171, 172, 173, 174, 175, 176, 179, 180, 181,
	182, 178, -305, -197, -270, -159, -161, -305, 87, -305,
	141, -270, 119, -6, 117, -130, -129, -128, 120, 593,
	599, 119, 119, 119, 82, 82, 82, 154, 82, 82,
	82, 154, 82, 154, -461, 450, 39, 154, 81, 82,
	154, 60, 154, 122, 82, 154, 82, 60, -119, 87,
	154, -168, 36, 37, 153, 424, -305, -472, 82, -390,
	154, 240, 153, 153, -366, 370, -304, -368, 20, 531,
	-286, 38, -292, 122, 613, -305, 82, -332, -332, 111,
	-329, -326, 82, 119, -331, 117, -214, -216, 386, 387,
	-214, -215, -221, 150, 188, 253, 187, 186, 184, 386,
	387, -233, -305, -331, -331, 82, -331, -331, 16, -305,
	-233, -327, -331, -173, -173, 82, 82, -397, -398, -397,
	-397, 82, 82, 82, 82, -397, 82, 82, 82, 82,
	82, 82, 82, 82, 81, -454, -550, 62, 601, 61,
	414, 101, 307, 154, 96, 614, 154, 122, 167, 378,
	82, 154, -286, -188, -178, 81, -231, 531, -210, -178,
	-521, 452, 394, 404, -301, -323, -322, 344, 41, -440,
	415, 400, 401, -367, 267, -305, -527, 94, 122, 78,
	332, 333, 334, 335, -347, -348, -346, -350, -515, 81,
	81, 81, 81, -418, 322, -216, -210, -160, -305, 16,
	154, -514, 153, -1, -305, -360, -316, -270, -331, -331,
	-270, -316, -316, -318, -305, -418, -216, 34, -256, -213,
	-286, -207, -486, -487, -349, -305, 107, -486, 107, 81,
	-213, -286, -286, -259, -315, -286, -305, -305, -305, -262,
	-261, -286, -305, -305, -305, 107, 107, -238, 40, 47,
	48, 49, -301, -301, 191, -241, 40, 414, 416, 417,
	96, 96, 96, 96, 87, 87, 87, -301, -301, 96,
	87, -307, 87, -488, 166, 44, 45, 96, 96, 96,
	96, 40, 87, -245, 40, 287, 291, 288, 289, 290,
	87, 96, 40, 96, 40, 96, 40, -305, 81, -489,
	-490, 87, -521, -301, 348, -381, 122, -323, -526, 317,
	-145, 91, 31, -182, 233, 230, -515, -372, -371, -286,
	-165, -165, -165, -165, 67, 67, 67, 72, 67, 72,
	67, -278, -372, -167, -178, -307, 82, -535, -534, -533,
	-531, 75, 241, 76, -336, 470, 474, 475, -368, -319,
	87, -375, -186, 23, -210, -210, -439, 297, 298, 82,
	154, -216, -272, 18, 153, -272, 115, -6, -126, -128,
	-331, -6, -331, 595, 360, 596, 87, 96, 96, -469,
	435, 430, 432, 107, -338, -456, -455, 60, -153, -176,
	-448, -492, -454, -305, 60, -153, -448, -186, -461, -170,
	-169, 43, -305, 96, 16, -365, -360, 141, 141, -305,
	371, -376, 87, 393, 87, 236, 614, 87, -292, -326,
	-331, 82, -224, 175, 174, -224, 82, 82, -425, -425,
	-424, -427, -424, -224, -224, 82, 82, 23, 82, 82,
	82, -331, 82, 82, 154, -444, 490, -445, 561, -397,
	-397, -397, -397, -397, -397, -397, -397, -397, -397, -397,
	-397, -397, -397, -340, -339, 259, 82, 154, -495, 154,
	-291, 87, 87, 87, -200, -216, 82, 34, -203, -204,
	-205, -213, -206, -208, 34, 81, 81, 34, -522, 91,
	-516, 87, -305, -523, 91, 395, 152, 346, 40, 396,
	397, 412, 341, 96, 96, 402, -517, -305, -152, -525,
	51, 122, 87, -210, -346, -295, 149, 278, 325, -267,
	-266, -305, 87, -203, -203, -203, -419, 324, 20, 96,
	140, -179, 79, 153, -161, -211, -305, 141, 82, -270,
	-270, -270, -316, -419, -153, -260, 44, 46, -216, -484,
	-305, -482, -484, -305, -482, -482, -349, -331, -260, -213,
	240, 30, 230, -263, 330, 331, -377, 303, 112, -377,
	154, -168, -305, -233, -233, 30, 87, 87, -212, 82,
	154, 122, -522, -516, 122, -382, 87, -523, -527, 122,
	87, 154, -182, -182, -270, 154, 122, -184, -183, 78,
	79, -185, 78, -183, 67, 67, -270, -533, -532, 23,
	-487, -487, -487, 82, 82, 14, -190, 40, -271, 19,
	20, 141, -271, 119, 117, 119, 119, -305, 82, 82,
	-431, 587, -465, -467, 430, 20, 20, 14, 241, 82,
	-448, -448, -469, 44, 45, -360, -376, 415, -210, 154,
	614, -331, 82, -331, 82, 87, 82, 87, -173, 20,
	-331, 82, -495, 234, -153, 82, 154, -153, -232, -265,
	-305, 87, -203, -153, 87, -520, 406, 87, 87, 96,
	40, 96, 152, 398, -441, -145, -524, 91, 122, 613,
	81, -301, -301, -301, -305, 82, 154, -301, -301, 82,
	82, 82, -420, 258, 96, 140, 96, 140, 96, -303,
	-161, -305, -270, -514, 153, -270, -420, -286, -228, -227,
	-225, 101, 112, 40, 384, -226, 91, 149, 292, 295,
	294, 270, 293, -254, -320, 78, 390, 330, 331, -350,
	587, 519, 243, 106, 107, 372, -321, 81, 81, 79,
	312, 81, 81, -484, 82, -260, -286, 40, -263, 40,
	303, -261, 149, -233, 82, -490, 87, -520, 87, -384,
	-525, 87, -515, -173, -371, -454, -331, 81, -331, 81,
	67, 11, 18, -324, -331, -337, 242, -6, 596, 360,
	-247, 588, 87, 20, 87, -463, 87, -372, -431, -122,
	-459, -404, 275, 82, 82, -397, -397, -400, -399, -403,
	436, 304, 443, -337, 82, 82, -192, -216, -149, 531,
	-231, -205, 82, 154, -301, -301, 82, -149, 20, 531,
	345, 40, 96, 40, 399, 122, 102, 103, -293, -294,
	87, -355, -357, -286, 81, -233, -235, -304, 150, 87,
	-266, -324, -324, -229, -230, -264, -350, -121, -120, -229,
	-421, 158, 96, 140, 96, 96, -270, -270, -421, -225,
	101, -327, 87, -235, -236, 40, 291, 287, 122, 122,
	-237, 40, 271, 272, -246, 81, 302, 14, 191, 81,
	107, 107, -210, -355, -355, -485, 332, 333, 334, 336,
	335, -485, -355, -355, 81, -378, -377, -327, -301, 149,
	-524, -174, -177, -483, -305, 243, 20, 20, -305, -305,
	-289, 589, 96, 87, 432, -247, -432, 590, -468, 435,
	-462, -460, 430, 431, 432, 433, 122, 82, -402, 114,
	398, 402, -325, -328, 96, 99, 183, 152, 530, -150,
	59, 477, -265, -324, -324, -231, 87, 393, 87, 345,
	87, 614, 154, 122, 82, 154, -424, -331, -392, 259,
	154, -264, -295, -122, -392, -438, 166, 323, 531, 96,
	140, 96, -173, -422, 166, 323, 87, 87, 96, 81,
	-449, 30, 87, -356, 81, 82, 82, 82, 82, -355,
	-233, -301, 82, 82, 154, 81, 20, -289, 87, -470,
	241, -466, -467, 434, -460, 20, 432, 20, 20, 87,
	-401, -402, 402, -325, -328, 585, 441, 441, 441, -194,
	-305, 302, 415, -294, 87, -358, -357, -168, 82, -393,
	311, 20, -264, -301, -393, 323, 96, 140, 96, -174,
	323, 82, -331, -341, -301, 82, -249, -248, 527, -355,
	-358, 79, -358, 79, -358, 79, -358, 79, 82, -233,
	-305, 243, -290, -305, -463, -477, 81, 96, -465, -464,
	-466, 20, -463, 20, -463, -463, 111, 442, 442, 442,
	-193, 34, 437, 371, -359, 249, 91, 531, 330, 331,
	-168, 20, -394, 304, 305, -395, -408, 307, -233, 96,
	82, -305, -253, -251, -252, 78, 448, 300, 301, 82,
	-485, -485, -485, -485, -254, 82, 154, -481, 30, 82,
	-476, -475, -287, -471, -305, 435, 436, 87, -463, -401,
	87, -301, 87, 329, -286, 81, -406, 308, 81, -404,
	81, -404, 107, 333, -377, -252, 78, -251, 78, 15,
	14, -358, -358, -358, -358, -305, -480, -479, -478, 82,
	154, 153, -553, -552, 607, 96, -305, -391, -396, 309,
	96, -327, 81, -327, 81, -405, 306, 81, -250, 297,
	298, 30, 166, -250, 154, 122, -475, -305, 87, 82,
	-410, 81, 20, 82, -391, 82, -391, 81, 122, -327,
	101, 40, 299, -479, 40, -331, 153, -411, -409, 259,
	-395, 82, 82, 82, -391, 96, 82, -305, 82, 154,
	-305, -407, 310, 82, -409, -412, 60, 96, -416, -413,
	81, -264, 261, 132, -416, -264, -415, -414, 309, 262,
	81, 82, 154, -305, 258, 81, -337, -414, -413, -337,
	82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 841, 842, 843, 844, 845, 846, 0,
	0, 0, 0, 600, 601, 0, 567, 0, 0, 0,
	0, 0, 0, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 435, 0, 0, 0, 0, 682, -2, 56, 0,
	277, 0, 268, 268, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, -2, 613, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 613, 0, 0, 0, 690, 0, 0,
	0, 0, 0, 733, 755, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1227, 1228, 1229, 1230,
	-2, 1728, 1706, 1877, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878,
	1879, 0, 261, 259, 1678, 1706, 1728, 1780, 1791, 1792,
	1826, 1877, 0, 864, 0, 660, 0, 665, 1181, 660,
	289, 602, 603, 690, 716, 565, 0, 325, 0, 1719,
	329, 0, 0, 0, 562, 319, 320, 321, 322, 323,
	324, 0, 0, 840, 0, 0, 315, 0, 283, 1782,
	0, 0, 0, 0, 0, 0, 153, 974, 155, 976,
	159, 166, 0, 0, 171, 172, 175, 176, 177, 178,
	179, 0, 183, 0, 185, 188, 0, 190, 191, 0,
	194, 195, 196, 0, 206, 207, 208, 977, 978, 979,
	-2, 84, 862, 1636, 1524, 0, 1531, 1532, 1543, 1554,
	1307, 1308, 1309, 1310, 0, 0, 0, 0, 0, 1317,
	1318, 0, 1335, 1894, 1935, 0, 1325, 1326, 1327, 1328,
	1329, 93, 105, 106, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 0, 1584, 1585, 1586, 1497, 1294, 1227, 0, 1903,
	0, 1925, 1930, 1931, 1932, 1933, 1924, 0, 0, 1482,
	0, 1472, 0, 0, -2, -2, 0, 0, 1851, -2,
	1900, 1921, 1929, 1904, 1905, 1928, 1896, 1897, 1898, 1891,
	1892, 1893, 1895, 1907, 1909, 1920, 0, 1916, 1926, 1927,
	0, 0, 0, 0, 107, 108, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1488,
	-2, 1490, 1491, 1493, -2, 1495, 1496, -2, 1499, 1500,
	1501, -2, -2, 1504, 1505, 1506, 1507, 1508, 1509, 1512,
	-2, -2, -2, -2, 1484, 1485, 1486, 1487, 1476, 1477,
	1478, 1479, 1480, 1481, -2, -2, -2, 716, 791, 0,
	716, 0, 691, 738, 741, 744, 747, 694, 0, 0,
	57, 58, 0, 278, 279, 267, 269, 0, 273, 0,
	266, 0, 0, 0, 0, 1006, 1006, 1006, 1006, 1006,
	0, 1006, 0, 0, 0, 0, 1006, 0, 897, 981,
	982, 983, 1004, 1005, 1069, 0, 0, 0, 618, 614,
	615, 616, 617, 704, 0, 706, 709, 542, 542, 490,
	0, 0, 0, 542, 0, 504, 496, 0, 0, 0,
	542, 0, 0, 711, 711, 0, 545, 552, 542, 542,
	-2, 542, 542, 542, 0, 0, 1018, 510, 511, 512,
	496, 496, 515, 516, 517, 527, 528, 553, 1660, 0,
	0, 435, 435, 0, 435, 0, 435, 435, 435, 620,
	1821, 1726, 1797, 1782, 0, 0, 234, 1851, 239, 0,
	1727, 1744, 0, 0, 1762, 0, -2, 0, 305, 716,
	0, 0, 690, 0, 0, 0, 0, 0, 435, 435,
	435, 435, 435, 1068, 435, 435, 435, 435, 435, 0,
	0, 0, 435, 435, 0, 0, 756, 757, 752, 753,
	754, 758, 759, 5, 6, 19, 0, 0, 0, 0,
	0, 0, 63, 62, 0, 1637, 1655, 1589, 1590, 1591,
	1642, 1593, 1646, 1646, 1646, 1646, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1646, 1646, 0, 0, 1635,
	1613, 1644, 1644, 1644, 1642, 1639, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1649, 1649, 1652, 1652, 1649, 0, 1522, 0, 0, 0,
	0, 664, 0, 0, 716, -2, 0, 0, 566, 326,
	1231, 0, 0, 330, 331, 0, 0, 346, 0, 349,
	334, 335, 336, 0, 133, 0, 317, 318, 0, 0,
	285, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	0, 163, 160, 167, 170, 180, 187, 0, 199, 201,
	204, 161, 168, 173, 174, 181, 202, 162, 164, 165,
	169, 203, 205, 182, 186, 200, 184, 189, 192, 193,
	198, 0, 134, 0, 0, 0, 0, 0, 1530, 0,
	0, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1524, 0, 0,
	1313, 1314, 1315, 1316, 1319, 0, 1336, 0, 0, 0,
	0, 1583, 1587, 0, 1522, 1522, 0, 1522, 1518, 0,
	0, 0, 0, 0, 0, 1522, 1458, 0, 0, 1460,
	1473, 0, 0, 1462, 1463, 0, 1466, 1467, 1522, 0,
	1522, 1471, 1454, 1455, 0, 1518, 1518, 1518, 1518, 0,
	0, 1518, 1518, 1518, 1518, 1518, 1518, 1518, 1518, 1518,
	1518, 1518, 1518, 0, 0, 0, 711, 0, 717, 0,
	-2, 0, 735, 737, 739, 740, 742, 743, 745, 746,
	748, 749, 696, 0, 0, 59, 0, 0, 0, 0,
	271, 0, 276, 0, 861, 0, 0, 1006, 1006, 0,
	1006, 898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1006, 1006, 1006, 0, 1026, 0, 0, 0, 620,
	619, 0, 705, 0, 0, 764, 0, 0, 489, 0,
	496, 542, 542, 502, 503, 498, 497, 548, 549, 545,
	0, 545, 545, 764, 0, 521, 522, 523, 542, 542,
	529, 712, 0, 530, 531, 545, 0, 550, 551, 764,
	0, 0, 764, 764, 0, 539, 540, 541, 0, 0,
	1006, 0, 558, 498, 498, 1661, 1662, 0, 0, 1015,
	0, 0, 0, 561, 0, 0, 0, 0, 621, 214,
	217, 0, 220, 0, 1821, 0, 1821, 0, 227, 0,
	0, 0, 0, 0, 0, 257, 258, 0, 0, 0,
	0, 248, 251, 1175, 1176, 971, 972, 252, 253, 297,
	298, 0, 711, 734, 736, 730, 731, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 596, 0, 877, 598, 0, 0, 0, 772,
	766, 768, 835, 93, 772, 8, 80, 77, 0, 19,
	0, 0, 19, 19, 0, 19, 262, 0, 1658, 1656,
	1657, 1592, 1643, 0, 1618, 0, 1619, 1620, 1621, 1631,
	1632, 0, 0, 1614, 0, 1615, 1616, 1617, 1608, 0,
	1609, 1610, 0, 1611, 1612, 260, 0, 1523, 865, 0,
	638, 652, 633, 0, 641, 0, 1182, 622, 652, 624,
	0, 641, 711, 688, 0, 666, 0, 0, 327, 0,
	332, 0, 0, 348, 350, 351, 352, 337, 338, 563,
	313, 314, 306, 307, 308, 309, 310, 311, 312, 316,
	103, 0, 286, 287, 0, 0, 0, 147, 148, 149,
	150, 151, 152, 154, 138, 585, 587, 963, 975, 0,
	966, 0, 157, 197, 130, 0, 0, 0, 1525, 1526,
	1527, 1528, 1529, 1533, 0, 1535, 1537, 1539, 1541, 0,
	1559, -2, -2, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1544, 1557, 1558, 0, 0,
	0, 0, 0, 0, 1555, 1555, 1550, 0, 1311, 0,
	1333, 1337, 0, 0, 0, 0, 94, 1517, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 0, 0, 1524,
	0, 0, 0, 1519, 1520, 0, 0, 0, 1413, 0,
	0, 1419, 1420, 1421, 0, 647, 0, 1483, 1459, 1474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	790, 792, 0, 656, 658, 659, 685, 666, 692, 0,
	0, 0, 55, 60, 53, 1038, 280, 281, 0, 0,
	275, 0, -2, 0, 0, 0, 1006, 0, 0, 912,
	0, 433, 957, 0, 0, 0, 973, 996, 1002, 0,
	0, 0, 0, 1042, 899, 904, 905, 906, 900, 901,
	907, 908, 0, 707, 0, 0, 804, 488, 0, 543,
	544, 493, 1782, 498, 764, 764, 505, 499, 506, 547,
	507, 508, 509, 545, 764, 764, 713, 542, 545, 532,
	546, 545, 535, 536, 0, 554, 559, 555, 0, 557,
	513, 514, 1044, 709, 364, 365, 406, 406, 406, 389,
	406, 0, 0, 377, 1663, 0, 0, 0, 0, 386,
	1663, 0, 1663, 1663, 1663, 1663, 1663, 1663, 1663, 0,
	0, 1663, 1663, 1663, 1663, 1663, 1663, 1663, 1663, 1663,
	1663, 1663, 0, 1663, 1663, 1663, 1663, 1663, 1161, 1663,
	0, 1016, 396, 397, 398, 399, 404, 405, 0, 430,
	0, 0, 0, 433, 0, 946, 777, 0, 778, 779,
	775, 806, 830, 830, 0, 830, 810, 1181, 0, 0,
	225, 226, 215, 0, 216, 0, 228, 229, 0, 231,
	232, 233, 240, 1726, 1797, 235, 237, 0, 0, 241,
	254, 255, 256, 0, 0, 246, 247, 0, 0, 300,
	301, 303, 0, 666, 1019, 1020, 1021, 582, 1179, 583,
	584, 588, 0, 0, 591, 592, 593, 594, 595, 879,
	0, 0, 951, 952, 764, 0, 773, 0, 769, 836,
	0, 838, 0, 764, 0, 78, 19, 0, 71, 68,
	0, 0, 0, 0, 0, 1638, 1588, 1659, 0, 0,
	0, 1640, 0, 0, 0, 0, 61, 668, 629, 0,
	632, 649, 0, 653, 0, 0, 645, 637, 642, 0,
	0, 662, 623, 0, 0, 628, 666, 0, 689, 718,
	719, 722, 1232, 0, 333, 347, 0, 0, 0, 0,
	141, 960, 0, 142, 146, 136, 0, 0, 0, 965,
	0, 962, 967, 0, 156, 0, 0, 131, 132, 1031,
	1038, 0, 0, 0, 1534, 1536, 1538, 1540, 1542, 0,
	1545, 1555, 1555, 1551, 0, 1546, 0, 1548, 0, 1525,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 1403,
	1404, 0, 0, 1408, 0, 1410, 1411, 1412, 1414, 0,
	0, 0, 1418, 0, 1457, 1475, 1461, 1464, 0, 1468,
	0, 1470, 0, 716, 716, 0, 0, 1377, 1377, 1377,
	0, 0, 0, 0, 1377, 0, 0, 0, 0, 0,
	0, 0, 0, 1330, 0, 1331, 1332, 0, 793, 686,
	0, 0, 0, 0, 1036, 0, 282, 270, 272, 0,
	0, 0, 867, 868, 870, 0, 873, 874, 875, 879,
	709, 1118, 0, 709, 919, 1663, 1007, 437, 0, 0,
	959, 0, 935, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 1046, 0, 0, 0, 607, 611, 23, 710,
	0, 765, 491, 0, 492, 542, 500, 501, 764, 524,
	525, 0, 0, 764, 542, 542, 545, 0, 556, 1046,
	0, 0, 1015, 367, 0, 1190, 1191, 407, 0, 1197,
	1206, 1006, 1264, 0, 1206, 0, 0, 1208, 1209, 0,
	0, 0, 0, 390, 391, 0, 376, 0, 0, 0,
	0, 375, 0, 0, 417, 0, 0, 0, 0, 1664,
	1663, 1663, 0, 384, 385, 0, 388, 0, 0, 0,
	0, 0, 0, 0, 1663, 1663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1152, 0, 0,
	0, 0, 0, 0, 0, 1167, 1168, 919, 1663, 0,
	0, 0, 437, 933, 942, 0, 0, 0, 0, 0,
	0, 797, 0, 0, 796, 0, 0, 0, 0, 0,
	709, 831, 0, 833, 834, 808, -2, 0, 777, 813,
	1522, 218, 219, 0, 0, 224, 242, 244, 0, 0,
	0, 243, 245, 249, 250, 299, 302, 304, 728, 0,
	0, 1070, 0, 880, 881, 883, 884, 0, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1711, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 878, 599, 762, 767, 774, 837, 839, 94,
	770, 762, 0, 81, 19, 80, 72, 73, 0, 19,
	0, 0, 0, 0, 1648, 1647, 1633, 0, 1634, 1645,
	1650, 0, 1653, 0, 672, 0, 0, 652, 654, 0,
	0, 652, 0, 0, 661, 0, 0, 652, 728, 668,
	0, 725, 723, 724, 0, 0, 564, 104, 353, 0,
	0, 0, 0, 0, 586, 0, 964, 138, 0, 0,
	158, 0, 0, 0, 1038, 1035, 1521, 1547, 1549, 0,
	1556, 1552, 1312, 1320, 1334, 0, 0, 1340, 1352, 1352,
	0, 0, 1343, 1646, 1646, 1346, 1642, 1644, 1642, 1352,
	1352, 0, 95, 0, 0, 1409, 0, 0, 0, 648,
	0, 0, 0, 1373, 1375, 1377, 1377, 1384, 1378, 1385,
	1386, 1377, 1377, 1377, 1377, 1391, 1377, 1377, 1377, 1377,
	1377, 1377, 1377, 1377, 1371, 657, 0, 0, 699, 700,
	701, 702, 703, 0, 0, 54, 1038, 0, 274, 0,
	0, 872, 0, 0, 0, 1183, 0, 0, 0, 0,
	923, 920, 921, 922, 0, 954, 438, 439, 440, 441,
	0, 0, 0, 958, 0, 946, 928, 0, 0, 0,
	997, 998, 999, 1000, 1001, -2, 1010, 0, 0, 0,
	1183, 1183, 1183, 1054, 0, 1043, 660, 0, -2, 0,
	0, 609, 0, 0, 805, 494, 764, 518, 714, 715,
	533, 764, 764, 542, 560, 1054, 1045, 0, 366, 408,
	0, 1196, 1221, 1207, 1221, 1265, 1221, 1221, 1006, 0,
	408, 0, 0, 378, 414, 0, 0, 0, 0, 374,
	411, 722, 415, 416, 418, 0, 420, 380, 392, 393,
	394, 395, 0, 0, 0, 387, 400, 401, 402, 403,
	1129, 1130, 1131, 1134, 1135, 1136, 1137, 0, 0, 1140,
	1141, 1142, 1143, 1144, 1218, 1219, 1220, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 1169, 1170, 1171, 1172, 1173, 1174,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 0, 0,
	1164, 0, 923, 0, 0, 0, 0, 954, 935, 0,
	945, 0, 947, 948, 0, 0, 630, 764, 292, 0,
	800, 794, 0, 783, 798, 799, 786, 0, 788, 0,
	784, 785, 764, 776, 807, 832, 809, 812, 814, 815,
	821, 0, 0, 0, 0, 221, 222, 223, 230, 0,
	457, 236, 684, 0, 1180, 589, 590, 1071, 1072, 597,
	0, 885, 760, 0, 0, 760, 76, 79, 0, 74,
	0, 0, 0, 0, 66, 64, 1641, 0, 0, 674,
	118, 0, 0, 0, 650, 0, 655, 652, 636, 646,
	635, 643, 644, 663, 652, 627, 626, 687, 672, 720,
	721, 0, 1233, 328, 0, 961, 138, 143, 144, 145,
	139, 137, 968, 0, 970, 0, 1033, 0, 0, 1553,
	1339, 1321, 1341, 1353, 1354, 1342, 1322, 1323, 1344, 1345,
	1347, 1348, 1349, 1350, 1351, 1324, 1405, 0, 1407, 1415,
	1416, 0, 1465, 1469, 0, 0, 0, 0, 0, 1382,
	1383, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 716, 1372, 0, 697, 0, 0, 0,
	1037, 1039, 860, 863, 869, 871, 0, 0, 0, 1184,
	1185, 1187, 1188, 1189, 0, 0, 1183, 0, 896, 0,
	0, 914, 915, 925, 0, 0, 0, 443, 444, 0,
	0, 0, 456, 452, 453, 454, 434, 953, 942, 931,
	0, 0, 941, 0, 1011, 1663, 1663, 1663, 0, 0,
	1114, 1663, 1663, 0, 0, 0, 1057, 0, 0, 1048,
	0, 830, 0, 0, 764, 608, 611, 612, 708, 495,
	537, 534, 764, 1057, 363, 379, 409, 0, -2, 0,
	1222, 0, 1210, 1222, 0, 0, 1221, 0, 368, 408,
	0, 0, 0, 421, 424, 425, 422, 1260, 0, 423,
	0, 413, 419, 1132, 1133, 0, 1138, 1139, 0, 1163,
	0, 0, 426, 0, 0, 0, 427, 432, 928, 0,
	943, 0, 949, 950, 716, 0, 0, 780, 801, 0,
	0, 781, 0, 782, 787, 789, 291, 816, 0, 0,
	818, 819, 820, 811, 238, 729, 882, 0, 750, 0,
	0, 771, 751, 0, 19, 0, 0, 69, 1651, 1654,
	676, 0, 673, 119, 0, 0, 0, 0, 640, 651,
	634, 625, 674, 726, 727, 140, 135, 969, 121, 0,
	1034, 0, 1417, 0, 1377, 1374, 1377, 1376, 1368, 0,
	0, 695, 0, 0, 902, 1118, 0, 1024, 0, 1120,
	1663, 1663, 0, 902, 924, 913, 0, 955, 956, 0,
	445, 446, 0, 449, 455, 926, 927, 0, 0, 939,
	0, 0, 0, 0, 1003, 1017, 0, 0, 0, -2,
	0, -2, 1063, 0, 1055, 0, 1047, 0, 1050, 764,
	764, -2, 605, 610, 0, 538, 1063, 410, 1223, -2,
	1236, 1238, 0, 1016, 1241, 1242, 0, 0, 0, 0,
	0, 0, 1286, 1250, 0, 0, 1254, 1255, 1256, 0,
	0, 1259, 0, 1571, 1572, 0, 1263, 0, 0, 0,
	0, 0, 0, 0, 1204, 369, 370, 0, 372, 373,
	1261, 412, 1663, 382, 1162, 1165, 1166, 431, 428, 429,
	931, 934, 631, 711, 293, 294, 802, 0, 795, 825,
	822, 0, 0, 886, 761, 763, 70, 75, 0, 0,
	678, 0, 675, 0, 669, 671, 129, 639, 676, 91,
	112, 0, 0, 1406, 1456, 1380, 1381, 0, 1369, 0,
	1363, 1364, 1365, 1370, 698, 693, 0, 888, 895, 909,
	1022, 1186, 1119, 0, 0, 0, 1118, 894, 0, 0,
	442, 447, 0, 450, 451, 0, 929, 930, 0, 937,
	0, 0, 992, 1642, 0, 1012, 1013, 1177, 1178, 1014,
	1115, 1116, 1117, 1073, -2, 1126, 0, 1028, 121, 1073,
	1051, 0, 1058, 0, 1056, 1049, 716, 606, 1060, 1237,
	1239, 1240, 1243, 1244, 1245, 1291, 1292, 1293, 0, 0,
	1248, 1288, 1289, 1290, 1249, 0, 0, 0, 0, 0,
	1569, 1570, 1284, 0, 0, 1211, 1213, 1214, 1215, 1216,
	1217, 1212, 0, 0, 0, 1203, 1205, 371, 0, 1663,
	944, 290, 0, 0, 826, 828, 823, 824, 65, 67,
	82, 0, 677, 120, 0, 678, 83, 0, 109, 0,
	122, 123, 0, 0, 0, 0, 0, 1379, 1366, 0,
	0, 0, 0, 0, 1573, 1574, 1575, 0, 0, 0,
	910, 911, 1121, 1122, 1123, 1023, 916, 0, 918, 448,
	932, 936, 939, 0, 985, 0, 722, 0, 1075, 0,
	1015, 1128, 1663, 1030, 1075, 1041, 0, 1053, 0, 1065,
	0, 1059, 711, 362, 0, 1062, 1246, 1247, 0, 0,
	1472, 1663, 0, 1279, 0, 985, 985, 985, 985, 0,
	381, 0, 803, 817, 0, 0, 0, 667, 92, 96,
	0, 118, 115, 0, 124, 0, 0, 0, 0, 1032,
	0, 1355, 0, 0, 0, 1359, 1360, 1361, 1362, 0,
	887, 0, 917, 938, 940, 984, 993, 994, 722, 1027,
	0, 1112, 1127, 0, 1029, 1052, 1064, 0, 1067, 604,
	1061, 1287, 0, 1253, 0, 1258, 1267, 1280, 0, 0,
	1192, 0, 1194, 0, 1198, 0, 1200, 0, 0, 383,
	827, 829, 0, 680, 670, 85, 0, 0, 113, 114,
	116, 0, 125, 0, 127, 128, 0, 1356, 1357, 1358,
	0, 889, 890, 903, 986, 1663, 0, 0, 990, 991,
	995, 0, 1100, 0, 0, 1106, 0, 1113, 1132, 1066,
	1251, 1257, 1266, 1268, 1269, 0, 1281, 1282, 1283, 1285,
	985, 985, 985, 985, 1202, 679, 0, 1040, 0, 97,
	0, 99, 101, 102, 1224, 110, 111, 117, 126, 1367,
	891, 0, 988, 0, 1076, 0, 1078, 0, 0, 0,
	0, 0, 1110, 0, 1252, 1270, 0, 1271, 0, 0,
	0, 1193, 1195, 1199, 1201, 681, 86, 87, 0, 98,
	0, 0, 876, 892, 0, 987, 989, 0, 1080, 0,
	1101, 0, 0, 0, 0, 0, 0, 0, 1272, 1274,
	1275, 0, 0, 1273, 0, 0, 100, 1225, 893, 1077,
	1074, 0, 1112, 1102, 0, 1104, 0, 0, 0, 0,
	1276, 1278, 1277, 88, 89, 90, 0, 0, 1082, 0,
	1098, 1103, 1105, 1107, 0, 1111, 1109, 1226, 1081, 0,
	1094, 1079, 0, 1108, 1083, -2, 0, 1099, 1084, -2,
	0, 1092, 0, 0, 1085, 1093, 0, 1088, 0, 0,
	0, 1087, 0, -2, 1095, 0, 0, 1089, -2, 0,
	1097, 1096,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 615, 612,
	123, 122, 124, 3, 616, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 613, 135, 614, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:783
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:790
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:796
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:804
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:810
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:814
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:829
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:833
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:839
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:844
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:848
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:880
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:888
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:896
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:906
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:926
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:932
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:939
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:947
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:953
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:962
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:972
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:980
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:988
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:996
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1006
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1014
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1024
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1031
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1040
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1054
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1060
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1064
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1070
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1079
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1089
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1093
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1099
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1108
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1112
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1118
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1139
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1152
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1163
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1169
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1173
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1179
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1186
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1194
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1198
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1212
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1216
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1220
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1225
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1233
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1239
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1248
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1259
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1263
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1269
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1273
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1279
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1283
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1289
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1313
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1332
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1336
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1340
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1349
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1356
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1364
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1371
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1376
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1383
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1388
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1392
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1416
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1420
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1426
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1432
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1450
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1467
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1490
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1494
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1498
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1503
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1507
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1513
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1526
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1537
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1550
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1554
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1564
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1577
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1590
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1596
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1602
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1609
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1617
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1626
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1630
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1634
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1653
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1657
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1663
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1670
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1679
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1683
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1865
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1873
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1877
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1881
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1885
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1898
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1905
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1912
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1922
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1926
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1939
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1947
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1951
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1955
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1959
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1965
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1969
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1975
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1982
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1989
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1998
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2028
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2032
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2036
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2048
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2052
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2059
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2065
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2069
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2075
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2083
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2092
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2101
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2109
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2117
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2140
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2163
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2170
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2177
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2192
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2199
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2208
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2212
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2216
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2222
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2226
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2232
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2236
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2242
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2246
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2263
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2272
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2276
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2280
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2284
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2288
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2292
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2296
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2300
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2306
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2323
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2328
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2334
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2341
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2361
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2371
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2378
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2389
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2400
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2404
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2410
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2420
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2426
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2430
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2436
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2442
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2446
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2450
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2454
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2460
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2478
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2488
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2498
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2515
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2529
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2533
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2541
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2549
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2557
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2567
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2608
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2612
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2618
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2624
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2629
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2630
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2631
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2636
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2653
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2669
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2680
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2689
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2693
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2699
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2706
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2715
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2725
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2734
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2744
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2754
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2763
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2771
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2775
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2779
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2783
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2787
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2796
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2802
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2806
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2810
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2814
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2818
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2822
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2826
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2830
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2835
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2866
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2870
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2881
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2896
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2900
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2913
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2935
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2942
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2949
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2964
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2971
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2978
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2987
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2991
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2998
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3010
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3018
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3026
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3039
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3045
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3076
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3080
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3089
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3105
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3109
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3113
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3121
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3125
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3129
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3133
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3137
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3141
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3145
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3149
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3153
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3157
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3161
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3165
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3171
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3176
		{
			yyVAL.item = nil
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3217
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3223
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3235
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3239
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3252
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3263
		{
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3267
		{
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3272
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3282
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3292
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3312
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3324
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3353
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3357
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3361
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3365
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3369
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3373
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3379
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3388
		{
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3390
		{
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3399
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3409
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3418
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3422
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3426
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3432
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3438
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3444
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3459
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3481
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3485
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3491
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3503
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3517
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3523
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3530
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3539
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3543
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3548
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3552
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3558
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3571
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3575
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3586
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3590
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3594
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3600
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3606
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3610
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3616
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3622
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3626
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3630
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3636
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3640
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3665
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3674
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3683
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3692
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3696
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3702
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3730
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3734
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3740
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3746
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3752
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3756
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3762
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3768
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3777
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3784
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3795
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3800
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3807
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3823
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3836
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3847
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3851
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3857
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3862
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3869
		{
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3871
		{
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3874
		{
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3883
		{
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3887
		{
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3892
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3901
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3908
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3914
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3922
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3929
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3936
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3956
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3966
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3970
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3976
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3983
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3989
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3997
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4004
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4011
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4030
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4034
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4038
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4047
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4051
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4057
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4066
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4070
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4076
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4080
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4086
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4090
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4096
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4101
		{
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4112
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4116
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4123
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4132
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4138
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4142
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4148
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4152
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4161
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4174
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4181
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4188
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4206
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4225
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4231
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4242
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4255
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4259
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4264
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4268
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4275
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4280
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4305
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4309
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4313
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4322
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4328
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line mysql_sql.y:4338
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4357
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4375
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4381
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4390
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4394
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4398
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4402
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4406
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4412
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4419
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4428
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4432
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4438
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4450
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4459
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4465
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4469
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4473
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4478
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4482
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4488
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4494
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4498
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4504
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4509
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4513
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4517
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4522
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4526
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4530
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4539
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4547
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4551
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4555
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4569
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4573
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4583
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4593
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4603
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4615
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4623
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4631
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4648
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4656
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4664
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4672
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4680
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4688
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4696
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4704
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4714
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4725
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4739
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4743
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4747
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4752
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4756
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4760
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4773
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4782
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4791
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4797
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4801
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4807
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4811
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4816
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4820
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4825
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4833
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4839
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4847
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4855
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4865
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4871
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4889
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4908
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4912
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4922
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4926
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4930
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4934
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4940
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4950
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4954
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4960
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4970
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4976
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4982
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4986
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4990
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5000
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5006
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5010
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5016
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5020
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5026
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5030
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5040
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5053
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:5059
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5065
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:5078
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5089
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5096
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5100
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5106
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5116
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5120
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5124
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5129
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5133
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5137
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5141
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5150
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5154
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5158
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5162
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5167
		{
			yyVAL.str = ""
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5171
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5175
		{
			yyVAL.str = yyDollar[2].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5181
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5187
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5191
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5195
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5199
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5203
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5209
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 860:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5248
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5258
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5264
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 863:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5270
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5280
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5285
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5291
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5298
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5302
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5308
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5314
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5319
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5323
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5327
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5331
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5338
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].streamOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5362
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5367
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5373
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5380
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5384
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5390
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5396
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5400
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5404
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5410
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5416
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5422
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5426
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5432
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5439
		{
			yyVAL.str = yyDollar[2].str
		}
	case 894:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5445
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5454
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5466
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5478
		{
			yyVAL.str = yyDollar[1].str
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5482
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5488
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5492
		{
			yyVAL.str = "DEFINER = "
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5496
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5501
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5505
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5519
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5527
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5543
		{
			yyVAL.str = yyDollar[1].str
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5547
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5553
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5560
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5566
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5574
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5580
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5587
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5594
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5602
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5608
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5617
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5629
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5641
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5653
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5659
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5666
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5680
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5688
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5694
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5702
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5708
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5717
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5721
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5726
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5730
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5737
		{
			yyVAL.str = yyDollar[3].str
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5742
		{
			yyVAL.str = ""
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5746
		{
			yyVAL.str = yyDollar[2].str
		}
	case 944:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5752
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5766
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5780
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5786
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5792
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5798
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5807
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5816
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5825
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5830
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5836
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5844
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5950
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5954
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5960
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5970
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5974
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5980
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5990
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5994
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5998
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6007
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6013
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6020
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6026
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6035
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6042
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6051
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6055
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:6061
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6075
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6079
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6083
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6088
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6092
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6096
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6100
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6106
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = &tree.IndexOption{IType: tree.INDEX_TYPE_INVALID}
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6131
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6153
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6157
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6161
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6165
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6169
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6175
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6179
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6185
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6190
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6195
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6199
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6203
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6207
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6211
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6217
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6232
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6242
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6246
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6255
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6261
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6265
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6271
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6275
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6279
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6284
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6288
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6294
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6303
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6309
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6327
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6345
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6363
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6374
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6385
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6396
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6400
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6406
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6418
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6427
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6440
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6447
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6457
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6467
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6475
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6484
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6494
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6498
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6503
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6507
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6514
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6525
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6538
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6552
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6556
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6560
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6566
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6570
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6577
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6584
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6591
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6598
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6602
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6606
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6614
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6621
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6628
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6632
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6639
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6646
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6650
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6656
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6666
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6673
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6680
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6687
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6694
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6703
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6707
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6711
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6720
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6734
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6741
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6752
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6761
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6765
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6771
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6775
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6781
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6790
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6804
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6810
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6814
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6820
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6827
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6836
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6840
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6849
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6854
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6858
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6863
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6867
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6877
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6881
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6892
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6900
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6908
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6916
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6927
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6936
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6946
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6956
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6960
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6965
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6969
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6975
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6979
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:6985
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:6989
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6998
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7004
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7008
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7014
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7018
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7027
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7033
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7037
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7041
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7047
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7051
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7055
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7059
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7063
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7067
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7071
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7076
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7080
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7084
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7088
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7092
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7096
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7100
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7104
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7108
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7112
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7116
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7120
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7124
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7128
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7132
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7136
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7140
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7144
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7148
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7152
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7156
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7160
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7164
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7168
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7172
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7176
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7180
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7184
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7190
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7194
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7200
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7206
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7210
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7216
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7220
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7224
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7228
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7232
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7236
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7250
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7254
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7263
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7268
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7274
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7281
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7285
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7291
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7295
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7299
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7305
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7309
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7315
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7324
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7333
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7362
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7393
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7407
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7413
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7422
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7431
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7440
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7449
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7459
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7467
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7473
		{
			yyVAL.str = ""
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7477
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7487
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7493
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7499
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7518
		{
			yyVAL.str = ""
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7522
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7528
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7534
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7538
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7542
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7548
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7552
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7556
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7560
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7566
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7570
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7574
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7583
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7589
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7593
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7599
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7603
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7607
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7611
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7615
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7619
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7624
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7628
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7640
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7644
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7648
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7652
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7656
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7660
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7673
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7677
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7681
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7689
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7693
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7699
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7703
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7708
		{
			yyVAL.str = ""
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7712
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7718
		{
			yyVAL.str = ""
		}
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7722
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1266:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7728
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7740
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7747
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7754
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7761
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7768
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7777
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7783
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7789
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7793
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7797
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7801
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7805
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7810
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7817
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7821
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7825
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7834
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7839
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7843
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7859
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7865
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7869
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7873
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7877
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7881
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7885
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7889
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7893
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7897
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7901
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7905
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7909
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7913
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7919
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7923
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7927
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7931
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7935
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7939
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7943
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7947
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7951
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7955
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7959
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7963
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7968
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7976
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7980
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7984
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7988
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7997
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8001
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8005
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8009
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8013
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8019
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8027
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8035
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8048
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8057
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8063
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8067
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:8073
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8082
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8094
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8111
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8128
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8141
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8154
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8166
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8180
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8195
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8210
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8227
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8242
		{
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8249
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8253
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8257
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8263
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8267
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8271
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8275
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8281
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8285
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8289
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8295
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8303
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8317
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8324
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8333
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8338
		{
			yyVAL.str = ","
		}
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8342
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8347
		{
			yyVAL.str = "1,vector_cosine_ops"
		}
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8351
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8363
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8389
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8400
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8411
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8421
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8431
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8441
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8450
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8459
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8469
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8479
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8489
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8499
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8509
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8519
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8529
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8539
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8549
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8559
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8569
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8579
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8598
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8606
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8614
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8622
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8630
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8640
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8648
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8657
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8665
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8673
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8681
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8689
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8700
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8710
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8722
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8733
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8755
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8791
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8803
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8815
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8826
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8834
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8841
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8848
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8860
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8868
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8878
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8888
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8896
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8907
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8916
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8925
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8933
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8943
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8951
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8965
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8975
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8994
		{
		}
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8996
		{
		}
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9037
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9048
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9052
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9056
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:9062
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9071
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9077
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9081
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9088
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9092
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9096
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9104
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9108
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9112
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9116
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9122
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9126
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9130
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9134
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9138
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9142
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9146
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9150
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9154
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9158
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9166
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9170
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9174
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9178
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9182
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9186
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9190
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9194
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9198
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9202
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9212
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9218
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9222
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9229
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9233
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9237
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9243
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9247
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9251
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9255
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9259
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9263
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9267
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9273
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9277
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9281
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9285
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9291
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9304
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9309
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9315
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9319
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9332
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9337
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9341
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9345
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9349
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9353
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9360
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9364
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9378
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9382
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9389
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9400
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9405
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9411
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9423
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9435
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9447
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9460
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9473
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9486
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9499
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9512
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9525
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9538
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9551
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9564
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9577
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9592
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9619
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9661
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9697
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9733
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9750
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9762
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9782
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9802
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9822
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9838
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9851
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9864
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9877
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9890
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9902
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9914
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9926
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9938
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9950
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9962
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9974
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9986
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9998
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10011
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10024
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10037
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10050
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10065
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10073
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10082
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10092
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10115
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10120
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10126
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10133
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10137
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10142
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10146
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10152
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10158
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10165
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10172
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10181
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10188
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10195
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10204
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10208
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10212
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10218
		{
		}
	case 1659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10220
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10230
		{
			yyVAL.str = ""
		}
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10234
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

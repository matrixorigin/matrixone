// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const SECOND = 57671
const ASCII = 57672
const COALESCE = 57673
const COLLATION = 57674
const HOUR = 57675
const MICROSECOND = 57676
const MINUTE = 57677
const MONTH = 57678
const QUARTER = 57679
const REPEAT = 57680
const REVERSE = 57681
const ROW_COUNT = 57682
const WEEK = 57683
const REVOKE = 57684
const FUNCTION = 57685
const PRIVILEGES = 57686
const TABLESPACE = 57687
const EXECUTE = 57688
const SUPER = 57689
const GRANT = 57690
const OPTION = 57691
const REFERENCES = 57692
const REPLICATION = 57693
const SLAVE = 57694
const CLIENT = 57695
const USAGE = 57696
const RELOAD = 57697
const FILE = 57698
const TEMPORARY = 57699
const ROUTINE = 57700
const EVENT = 57701
const SHUTDOWN = 57702
const NULLX = 57703
const AUTO_INCREMENT = 57704
const APPROXNUM = 57705
const SIGNED = 57706
const UNSIGNED = 57707
const ZEROFILL = 57708
const ENGINES = 57709
const LOW_CARDINALITY = 57710
const AUTOEXTEND_SIZE = 57711
const ADMIN_NAME = 57712
const RANDOM = 57713
const SUSPEND = 57714
const ATTRIBUTE = 57715
const HISTORY = 57716
const REUSE = 57717
const CURRENT = 57718
const OPTIONAL = 57719
const FAILED_LOGIN_ATTEMPTS = 57720
const PASSWORD_LOCK_TIME = 57721
const UNBOUNDED = 57722
const SECONDARY = 57723
const RESTRICTED = 57724
const USER = 57725
const IDENTIFIED = 57726
const CIPHER = 57727
const ISSUER = 57728
const X509 = 57729
const SUBJECT = 57730
const SAN = 57731
const REQUIRE = 57732
const SSL = 57733
const NONE = 57734
const PASSWORD = 57735
const SHARED = 57736
const EXCLUSIVE = 57737
const MAX_QUERIES_PER_HOUR = 57738
const MAX_UPDATES_PER_HOUR = 57739
const MAX_CONNECTIONS_PER_HOUR = 57740
const MAX_USER_CONNECTIONS = 57741
const FORMAT = 57742
const VERBOSE = 57743
const CONNECTION = 57744
const TRIGGERS = 57745
const PROFILES = 57746
const LOAD = 57747
const INFILE = 57748
const TERMINATED = 57749
const OPTIONALLY = 57750
const ENCLOSED = 57751
const ESCAPED = 57752
const STARTING = 57753
const LINES = 57754
const ROWS = 57755
const IMPORT = 57756
const DISCARD = 57757
const MODUMP = 57758
const OVER = 57759
const PRECEDING = 57760
const FOLLOWING = 57761
const GROUPS = 57762
const DATABASES = 57763
const TABLES = 57764
const SEQUENCES = 57765
const EXTENDED = 57766
const FULL = 57767
const PROCESSLIST = 57768
const FIELDS = 57769
const COLUMNS = 57770
const OPEN = 57771
const ERRORS = 57772
const WARNINGS = 57773
const INDEXES = 57774
const SCHEMAS = 57775
const NODE = 57776
const LOCKS = 57777
const ROLES = 57778
const TABLE_NUMBER = 57779
const COLUMN_NUMBER = 57780
const TABLE_VALUES = 57781
const TABLE_SIZE = 57782
const NAMES = 57783
const GLOBAL = 57784
const PERSIST = 57785
const SESSION = 57786
const ISOLATION = 57787
const LEVEL = 57788
const READ = 57789
const WRITE = 57790
const ONLY = 57791
const REPEATABLE = 57792
const COMMITTED = 57793
const UNCOMMITTED = 57794
const SERIALIZABLE = 57795
const LOCAL = 57796
const EVENTS = 57797
const PLUGINS = 57798
const CURRENT_TIMESTAMP = 57799
const DATABASE = 57800
const CURRENT_TIME = 57801
const LOCALTIME = 57802
const LOCALTIMESTAMP = 57803
const UTC_DATE = 57804
const UTC_TIME = 57805
const UTC_TIMESTAMP = 57806
const REPLACE = 57807
const CONVERT = 57808
const SEPARATOR = 57809
const TIMESTAMPDIFF = 57810
const CURRENT_DATE = 57811
const CURRENT_USER = 57812
const CURRENT_ROLE = 57813
const SECOND_MICROSECOND = 57814
const MINUTE_MICROSECOND = 57815
const MINUTE_SECOND = 57816
const HOUR_MICROSECOND = 57817
const HOUR_SECOND = 57818
const HOUR_MINUTE = 57819
const DAY_MICROSECOND = 57820
const DAY_SECOND = 57821
const DAY_MINUTE = 57822
const DAY_HOUR = 57823
const YEAR_MONTH = 57824
const SQL_TSI_HOUR = 57825
const SQL_TSI_DAY = 57826
const SQL_TSI_WEEK = 57827
const SQL_TSI_MONTH = 57828
const SQL_TSI_QUARTER = 57829
const SQL_TSI_YEAR = 57830
const SQL_TSI_SECOND = 57831
const SQL_TSI_MINUTE = 57832
const RECURSIVE = 57833
const CONFIG = 57834
const DRAINER = 57835
const MATCH = 57836
const AGAINST = 57837
const BOOLEAN = 57838
const LANGUAGE = 57839
const WITH = 57840
const QUERY = 57841
const EXPANSION = 57842
const WITHOUT = 57843
const VALIDATION = 57844
const ADDDATE = 57845
const BIT_AND = 57846
const BIT_OR = 57847
const BIT_XOR = 57848
const CAST = 57849
const COUNT = 57850
const APPROX_COUNT_DISTINCT = 57851
const APPROX_PERCENTILE = 57852
const CURDATE = 57853
const CURTIME = 57854
const DATE_ADD = 57855
const DATE_SUB = 57856
const EXTRACT = 57857
const GROUP_CONCAT = 57858
const MAX = 57859
const MID = 57860
const MIN = 57861
const NOW = 57862
const POSITION = 57863
const SESSION_USER = 57864
const STD = 57865
const STDDEV = 57866
const MEDIAN = 57867
const STDDEV_POP = 57868
const STDDEV_SAMP = 57869
const SUBDATE = 57870
const SUBSTR = 57871
const SUBSTRING = 57872
const SUM = 57873
const SYSDATE = 57874
const SYSTEM_USER = 57875
const TRANSLATE = 57876
const TRIM = 57877
const VARIANCE = 57878
const VAR_POP = 57879
const VAR_SAMP = 57880
const AVG = 57881
const RANK = 57882
const ROW_NUMBER = 57883
const DENSE_RANK = 57884
const NEXTVAL = 57885
const SETVAL = 57886
const CURRVAL = 57887
const LASTVAL = 57888
const ARROW = 57889
const ROW = 57890
const OUTFILE = 57891
const HEADER = 57892
const MAX_FILE_SIZE = 57893
const FORCE_QUOTE = 57894
const PARALLEL = 57895
const UNUSED = 57896
const BINDINGS = 57897
const DO = 57898
const DECLARE = 57899
const LOOP = 57900
const WHILE = 57901
const LEAVE = 57902
const ITERATE = 57903
const UNTIL = 57904
const CALL = 57905
const SPBEGIN = 57906
const BACKEND = 57907
const SERVERS = 57908
const KILL = 57909
const QUERY_RESULT = 57910

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'{'",
	"'}'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10091

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 114,
	21, 682,
	-2, 663,
	-1, 128,
	235, 937,
	-2, 1008,
	-1, 151,
	42, 503,
	235, 503,
	262, 510,
	263, 510,
	449, 503,
	-2, 536,
	-1, 187,
	587, 1704,
	-2, 419,
	-1, 514,
	314, 130,
	423, 130,
	-2, 1616,
	-1, 577,
	81, 1414,
	-2, 1758,
	-1, 578,
	81, 1432,
	-2, 1729,
	-1, 582,
	81, 1433,
	-2, 1757,
	-1, 607,
	81, 1344,
	-2, 1822,
	-1, 608,
	81, 1345,
	-2, 1821,
	-1, 609,
	81, 1346,
	-2, 1811,
	-1, 610,
	81, 1786,
	-2, 1806,
	-1, 611,
	81, 1787,
	-2, 1807,
	-1, 612,
	81, 1788,
	-2, 1813,
	-1, 613,
	81, 1789,
	-2, 1796,
	-1, 614,
	81, 1790,
	-2, 1804,
	-1, 615,
	81, 1791,
	-2, 1814,
	-1, 616,
	81, 1792,
	-2, 1815,
	-1, 617,
	81, 1793,
	-2, 1820,
	-1, 618,
	81, 1794,
	-2, 1825,
	-1, 619,
	81, 1795,
	-2, 1826,
	-1, 621,
	81, 1411,
	-2, 1605,
	-1, 625,
	81, 1416,
	-2, 1617,
	-1, 628,
	81, 1420,
	-2, 1635,
	-1, 632,
	81, 1424,
	-2, 1675,
	-1, 633,
	81, 1425,
	-2, 1753,
	-1, 641,
	81, 1435,
	-2, 1738,
	-1, 642,
	81, 1436,
	-2, 1783,
	-1, 643,
	81, 1437,
	-2, 1748,
	-1, 644,
	81, 1438,
	-2, 1773,
	-1, 655,
	81, 1322,
	-2, 1816,
	-1, 656,
	81, 1323,
	-2, 1817,
	-1, 657,
	81, 1324,
	-2, 1818,
	-1, 661,
	21, 683,
	-2, 646,
	-1, 739,
	444, 536,
	445, 536,
	-2, 504,
	-1, 783,
	122, 1605,
	133, 1605,
	153, 1605,
	-2, 1580,
	-1, 886,
	21, 683,
	-2, 646,
	-1, 986,
	21, 682,
	-2, 1222,
	-1, 1350,
	81, 1482,
	-2, 1755,
	-1, 1351,
	81, 1483,
	-2, 1756,
	-1, 1485,
	82, 827,
	-2, 833,
	-1, 1855,
	82, 1566,
	154, 1566,
	-2, 1740,
	-1, 1856,
	82, 1566,
	154, 1566,
	-2, 1739,
	-1, 1857,
	82, 1544,
	154, 1544,
	-2, 1726,
	-1, 1858,
	82, 1545,
	154, 1545,
	-2, 1731,
	-1, 1859,
	82, 1546,
	154, 1546,
	-2, 1663,
	-1, 1860,
	82, 1547,
	154, 1547,
	-2, 1657,
	-1, 1861,
	82, 1548,
	154, 1548,
	-2, 1596,
	-1, 1862,
	82, 1549,
	154, 1549,
	-2, 1728,
	-1, 1863,
	82, 1550,
	154, 1550,
	-2, 1661,
	-1, 1864,
	82, 1551,
	154, 1551,
	-2, 1656,
	-1, 1865,
	82, 1552,
	154, 1552,
	-2, 1649,
	-1, 1867,
	82, 1555,
	154, 1555,
	-2, 1773,
	-1, 1868,
	82, 1535,
	154, 1535,
	-2, 1758,
	-1, 1869,
	82, 1564,
	154, 1564,
	-2, 1729,
	-1, 1870,
	82, 1564,
	154, 1564,
	-2, 1757,
	-1, 1871,
	82, 1564,
	154, 1564,
	-2, 1618,
	-1, 1872,
	82, 1562,
	154, 1562,
	-2, 1748,
	-1, 1873,
	82, 1559,
	154, 1559,
	-2, 1640,
	-1, 1874,
	81, 1516,
	82, 1516,
	154, 1516,
	381, 1516,
	382, 1516,
	383, 1516,
	-2, 1595,
	-1, 1875,
	81, 1517,
	82, 1517,
	154, 1517,
	381, 1517,
	382, 1517,
	383, 1517,
	-2, 1597,
	-1, 1876,
	81, 1520,
	82, 1520,
	154, 1520,
	381, 1520,
	382, 1520,
	383, 1520,
	-2, 1730,
	-1, 1877,
	81, 1522,
	82, 1522,
	154, 1522,
	381, 1522,
	382, 1522,
	383, 1522,
	-2, 1713,
	-1, 1878,
	81, 1524,
	82, 1524,
	154, 1524,
	381, 1524,
	382, 1524,
	383, 1524,
	-2, 1662,
	-1, 1879,
	81, 1526,
	82, 1526,
	154, 1526,
	381, 1526,
	382, 1526,
	383, 1526,
	-2, 1645,
	-1, 1880,
	81, 1527,
	82, 1527,
	154, 1527,
	381, 1527,
	382, 1527,
	383, 1527,
	-2, 1646,
	-1, 1881,
	81, 1529,
	82, 1529,
	154, 1529,
	381, 1529,
	382, 1529,
	383, 1529,
	-2, 1594,
	-1, 1882,
	82, 1569,
	154, 1569,
	381, 1569,
	382, 1569,
	383, 1569,
	-2, 1623,
	-1, 1883,
	82, 1569,
	154, 1569,
	381, 1569,
	382, 1569,
	383, 1569,
	-2, 1636,
	-1, 1884,
	82, 1572,
	154, 1572,
	381, 1572,
	382, 1572,
	383, 1572,
	-2, 1619,
	-1, 1885,
	82, 1572,
	154, 1572,
	381, 1572,
	382, 1572,
	383, 1572,
	-2, 1678,
	-1, 1886,
	82, 1569,
	154, 1569,
	381, 1569,
	382, 1569,
	383, 1569,
	-2, 1698,
	-1, 1902,
	105, 972,
	149, 972,
	188, 972,
	191, 972,
	275, 972,
	-2, 965,
	-1, 2034,
	21, 682,
	-2, 776,
	-1, 2227,
	105, 972,
	149, 972,
	188, 972,
	191, 972,
	275, 972,
	-2, 966,
	-1, 2239,
	79, 592,
	154, 592,
	-2, 1111,
	-1, 2261,
	191, 972,
	299, 1190,
	-2, 1164,
	-1, 2562,
	191, 972,
	299, 1190,
	-2, 1165,
	-1, 2712,
	105, 972,
	149, 972,
	188, 972,
	191, 972,
	-2, 1054,
	-1, 2715,
	105, 972,
	149, 972,
	188, 972,
	191, 972,
	-2, 1054,
	-1, 2725,
	79, 592,
	154, 592,
	-2, 1112,
	-1, 2840,
	105, 972,
	149, 972,
	188, 972,
	191, 972,
	-2, 1055,
	-1, 3172,
	82, 1026,
	154, 1026,
	-2, 972,
	-1, 3176,
	82, 1026,
	154, 1026,
	-2, 972,
	-1, 3190,
	82, 1030,
	154, 1030,
	-2, 972,
	-1, 3195,
	82, 1031,
	154, 1031,
	-2, 972,
}

const yyPrivate = 57344

const yyLast = 38159

var yyAct = [...]int{
	544, 3176, 1269, 1558, 3175, 3155, 178, 3184, 523, 3057,
	1331, 525, 546, 3114, 2834, 3080, 3102, 2802, 533, 2976,
	2865, 2576, 3009, 3008, 2601, 1833, 1132, 2797, 2994, 2833,
	2830, 2899, 2930, 2662, 2968, 2800, 2661, 2832, 662, 431,
	2990, 1327, 1018, 782, 2889, 2977, 2979, 1516, 1259, 437,
	2703, 442, 442, 574, 1191, 2839, 2242, 442, 458, 467,
	1334, 2792, 467, 2534, 2735, 2689, 2351, 2352, 1648, 2522,
	2334, 2692, 2028, 2591, 1941, 2344, 2659, 2563, 527, 2127,
	2647, 1741, 2350, 1710, 163, 1613, 478, 2373, 1944, 2630,
	2347, 2218, 1184, 2506, 1853, 2503, 2257, 1911, 1660, 2501,
	1645, 472, 2590, 2842, 2228, 1084, 880, 2012, 1843, 1851,
	2126, 516, 2532, 2410, 517, 522, 1737, 1718, 1467, 2076,
	2393, 1255, 1684, 2449, 1711, 1641, 788, 1719, 1736, 1966,
	2017, 715, 1250, 2029, 1616, 1614, 776, 2263, 2168, 2207,
	2202, 1554, 1545, 6, 1942, 1910, 524, 174, 8, 2535,
	173, 7, 2093, 1494, 1330, 431, 834, 1263, 1260, 1325,
	526, 1475, 1769, 1738, 54, 2056, 1268, 436, 1224, 1849,
	1200, 2537, 36, 1893, 113, 430, 515, 35, 178, 2536,
	178, 1748, 825, 826, 1364, 1380, 2169, 14, 1170, 1105,
	1528, 1316, 517, 897, 534, 746, 786, 1717, 1231, 1121,
	26, 1714, 15, 1700, 1324, 13, 775, 32, 1169, 1674,
	2036, 451, 1527, 454, 1493, 1386, 1117, 659, 1107, 714,
	1385, 481, 480, 1056, 1167, 23, 16, 10, 1133, 164,
	464, 1080, 1223, 157, 692, 466, 712, 160, 696, 1745,
	2924, 661, 1755, 2706, 2129, 462, 2654, 2079, 2082, 2443,
	2443, 2080, 1140, 2077, 818, 1234, 822, 817, 463, 734,
	459, 1238, 821, 461, 823, 460, 818, 162, 818, 1019,
	438, 1153, 1236, 955, 956, 957, 954, 2790, 2406, 1141,
	955, 956, 957, 954, 2404, 1689, 2895, 2890, 447, 2793,
	2660, 1471, 1013, 2981, 1713, 660, 1974, 470, 2941, 918,
	670, 1518, 161, 2819, 3048, 161, 816, 50, 153, 129,
	8, 2114, 161, 7, 1072, 161, 161, 50, 153, 129,
	161, 161, 161, 792, 161, 161, 50, 153, 129, 1742,
	2690, 2814, 1283, 789, 2951, 2472, 791, 2122, 476, 806,
	1276, 650, 2942, 649, 651, 652, 1097, 653, 654, 518,
	1753, 1149, 112, 1897, 1150, 477, 2817, 1317, 764, 2054,
	1321, 2042, 1280, 952, 2041, 1073, 2425, 2043, 2380, 2381,
	1273, 2418, 112, 158, 2055, 1658, 158, 1626, 1627, 1479,
	1480, 1625, 1301, 1282, 1320, 933, 158, 158, 934, 2379,
	663, 1275, 158, 158, 3098, 158, 158, 671, 1171, 1129,
	1173, 2204, 3096, 926, 1136, 2094, 928, 945, 1135, 1138,
	1139, 2205, 1138, 1139, 3012, 3013, 936, 755, 1541, 1333,
	2810, 950, 785, 784, 2984, 3044, 2983, 3043, 2982, 3042,
	2984, 2983, 2982, 1824, 929, 3084, 3085, 2897, 2411, 2970,
	1152, 442, 2900, 2901, 2902, 2903, 2663, 2412, 2663, 2413,
	2970, 442, 890, 2973, 2893, 1336, 2109, 891, 2203, 3047,
	900, 1642, 1636, 1322, 2290, 2987, 889, 2672, 1632, 467,
	467, 938, 442, 1312, 939, 2693, 1749, 2700, 801, 798,
	793, 797, 799, 1697, 1319, 2517, 885, 887, 2210, 2919,
	2824, 931, 1237, 1235, 2006, 1892, 1244, 1243, 760, 2438,
	2507, 759, 941, 2193, 2515, 702, 804, 2586, 2119, 922,
	796, 948, 949, 2986, 2436, 511, 947, 921, 513, 2791,
	128, 900, 159, 512, 828, 819, 820, 2338, 2405, 1972,
	824, 988, 924, 2009, 2008, 2922, 2821, 1758, 1760, 1761,
	3050, 3051, 151, 2013, 927, 930, 2599, 2600, 787, 2809,
	884, 3100, 932, 3091, 1420, 2511, 2811, 2512, 2513, 3011,
	2541, 802, 913, 2911, 1335, 2531, 2912, 3000, 805, 2235,
	923, 2938, 469, 2514, 468, 886, 890, 937, 2343, 2759,
	2995, 2906, 1899, 3169, 3185, 794, 2911, 765, 3123, 2912,
	1023, 3095, 1127, 1151, 1754, 2222, 2223, 2224, 2225, 1318,
	705, 3130, 706, 3059, 761, 1116, 803, 2764, 1161, 943,
	944, 3105, 3134, 942, 1342, 1345, 1346, 1656, 1657, 2914,
	3055, 3056, 792, 3059, 2603, 1343, 2918, 935, 464, 464,
	1960, 2750, 789, 1983, 1982, 791, 904, 1962, 940, 2745,
	2216, 1947, 2914, 462, 462, 925, 795, 1180, 902, 901,
	2913, 2318, 1179, 703, 1022, 911, 463, 463, 459, 459,
	1743, 461, 461, 460, 460, 763, 1114, 2509, 1113, 893,
	894, 475, 1743, 2913, 2058, 2923, 990, 991, 992, 993,
	1112, 1078, 437, 1081, 2676, 2442, 2739, 2003, 2004, 3186,
	1743, 1131, 1130, 792, 1961, 910, 3180, 1053, 2866, 2867,
	2868, 2870, 2869, 789, 906, 907, 791, 3192, 3156, 902,
	901, 2931, 881, 818, 715, 818, 2488, 2940, 818, 818,
	2717, 800, 818, 895, 818, 2939, 1770, 465, 3049, 2967,
	994, 2375, 2377, 2788, 1085, 476, 465, 1965, 2078, 1168,
	762, 2115, 2046, 1756, 1744, 1239, 1970, 3106, 1746, 1091,
	2441, 1095, 1137, 2752, 1094, 1093, 918, 1138, 1139, 471,
	1134, 442, 1950, 1163, 2496, 1138, 1139, 1757, 2818, 431,
	431, 2288, 1102, 1759, 3101, 1946, 660, 2192, 431, 431,
	1948, 1082, 1195, 1195, 1643, 442, 2518, 51, 2209, 1837,
	2920, 1086, 1087, 1088, 1089, 1090, 51, 1092, 2820, 2508,
	2439, 1096, 1076, 467, 1081, 437, 1128, 130, 1227, 1227,
	130, 1482, 2602, 1202, 2390, 2391, 1483, 130, 1836, 178,
	130, 130, 3179, 1193, 1193, 130, 130, 130, 431, 130,
	130, 912, 2123, 2291, 1949, 2292, 2293, 1197, 787, 917,
	1635, 1481, 2213, 2214, 2825, 672, 1633, 1995, 704, 1079,
	1344, 1313, 673, 1031, 1032, 1294, 1295, 2212, 2510, 756,
	2907, 709, 710, 711, 2908, 2451, 2450, 2746, 2747, 958,
	1839, 1838, 1189, 1190, 1621, 3103, 3104, 1267, 987, 1270,
	2848, 3191, 1245, 2907, 1278, 664, 996, 2978, 2309, 2310,
	1951, 1058, 1074, 1075, 2376, 2319, 2321, 2322, 2323, 2320,
	1846, 1060, 3198, 1969, 1299, 1175, 1177, 676, 1002, 3135,
	953, 2627, 1284, 918, 1187, 1188, 1801, 661, 1195, 1800,
	1195, 890, 1083, 1847, 1848, 441, 441, 1123, 1124, 1895,
	2741, 449, 2096, 1519, 2740, 1332, 1110, 809, 814, 815,
	1964, 1115, 758, 3197, 3188, 757, 3170, 1298, 1125, 3165,
	1104, 3159, 2623, 1162, 2713, 1297, 1143, 1144, 675, 1146,
	1147, 1148, 678, 677, 1240, 1154, 1155, 1827, 1248, 2546,
	1251, 1252, 1219, 756, 953, 1257, 1258, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 3158,
	1519, 953, 1178, 1375, 1376, 2114, 1142, 2027, 3139, 1145,
	1384, 955, 956, 957, 954, 1118, 1122, 1122, 1122, 3116,
	2308, 1423, 1424, 1425, 1433, 953, 3189, 2529, 1751, 3074,
	953, 3166, 3023, 1751, 1439, 1203, 447, 1440, 1118, 1118,
	3014, 1262, 1265, 1213, 1266, 1218, 1329, 1442, 1217, 1447,
	1448, 1228, 2961, 1894, 2241, 792, 2240, 2470, 1229, 792,
	2960, 547, 557, 1274, 2198, 2026, 758, 1281, 2195, 757,
	548, 1751, 556, 549, 553, 552, 550, 551, 464, 1310,
	1751, 2027, 1326, 2956, 2955, 2101, 1347, 2954, 1308, 1677,
	1465, 3117, 2953, 462, 664, 442, 1119, 1492, 1195, 1496,
	1497, 3075, 1499, 1500, 2927, 2058, 463, 442, 459, 1742,
	1195, 461, 2927, 460, 715, 1780, 1307, 1517, 1304, 1290,
	1285, 1303, 1195, 661, 2962, 554, 1286, 2926, 1163, 1831,
	2767, 2611, 1915, 458, 1468, 811, 812, 813, 2627, 1373,
	1374, 1306, 1305, 1302, 955, 956, 957, 954, 1624, 1323,
	1328, 1432, 1540, 2530, 1934, 2927, 2927, 555, 2370, 2927,
	1546, 1546, 1314, 1163, 2927, 1163, 1163, 1226, 1226, 442,
	2174, 1492, 1492, 1544, 2130, 1195, 1610, 1611, 1623, 1491,
	1415, 1416, 1832, 1419, 2112, 1366, 2105, 1498, 2103, 2027,
	1779, 1434, 431, 1805, 1195, 2241, 2098, 2091, 1488, 2927,
	2089, 1315, 2058, 2612, 1441, 915, 1443, 2087, 1733, 1501,
	1502, 1503, 2085, 1120, 1654, 955, 956, 957, 954, 442,
	1492, 1195, 1103, 1665, 1914, 442, 1668, 1669, 1675, 1054,
	2027, 1378, 1672, 1673, 883, 1828, 1418, 1679, 916, 1809,
	1808, 1181, 953, 707, 178, 2699, 953, 178, 178, 1799,
	178, 3153, 1495, 1605, 1606, 3148, 1915, 2878, 2099, 1444,
	2104, 1830, 3118, 2728, 1509, 1520, 1521, 1548, 2099, 2092,
	2547, 3136, 2090, 1561, 1790, 2395, 1522, 1637, 1629, 2086,
	1631, 916, 1466, 1789, 2086, 2243, 1433, 1433, 1721, 1788,
	1649, 1650, 1472, 1433, 1433, 1750, 1915, 2117, 1728, 1291,
	1651, 1652, 1662, 1547, 2038, 2116, 970, 1827, 1664, 2108,
	1644, 953, 953, 1337, 1338, 1339, 1340, 1341, 1931, 1796,
	2542, 953, 1517, 1667, 1781, 882, 1195, 1740, 1688, 1495,
	1732, 1691, 1692, 1514, 1694, 888, 1513, 1682, 1487, 1524,
	918, 1287, 1525, 1526, 1530, 2551, 953, 1538, 999, 903,
	883, 878, 876, 1549, 2765, 953, 909, 1382, 1383, 1535,
	1536, 953, 2433, 1653, 1417, 1183, 1967, 1751, 1119, 1734,
	3001, 1292, 1427, 2077, 1722, 1326, 883, 1550, 1551, 2849,
	1763, 1108, 1422, 1421, 1529, 1109, 1531, 1532, 1612, 1609,
	1767, 1768, 2925, 1628, 2720, 1630, 2543, 766, 1638, 1537,
	2718, 2743, 1118, 971, 972, 973, 974, 975, 976, 977,
	970, 559, 114, 1716, 3002, 1469, 1534, 114, 2742, 1473,
	1716, 2705, 1476, 2850, 1185, 1663, 674, 1122, 973, 974,
	975, 976, 977, 970, 2628, 1186, 1659, 1533, 2721, 1685,
	2544, 1158, 2621, 1160, 2719, 1164, 1165, 1166, 1683, 2616,
	792, 2613, 1539, 2524, 2444, 1542, 1543, 792, 1806, 2340,
	789, 2220, 2102, 791, 1182, 1813, 448, 789, 1702, 114,
	791, 2048, 1099, 2652, 464, 1208, 1209, 1210, 1211, 1212,
	1098, 1214, 1215, 1216, 892, 1120, 2137, 1221, 1222, 462,
	2071, 1725, 1453, 1686, 1723, 516, 1731, 890, 1887, 442,
	1381, 1381, 463, 1776, 459, 1372, 1232, 461, 1686, 460,
	2397, 1854, 442, 442, 442, 1730, 1735, 1490, 1726, 3041,
	1727, 1369, 1371, 1368, 1912, 1370, 1765, 1766, 955, 956,
	957, 954, 957, 954, 1919, 1163, 954, 2754, 2753, 2655,
	2414, 2275, 792, 2274, 1469, 1924, 679, 1771, 2269, 1469,
	1469, 2267, 789, 1762, 2732, 791, 2827, 2828, 1001, 1163,
	3174, 3162, 3124, 1764, 2219, 3119, 890, 1955, 3061, 3032,
	790, 1000, 3003, 1366, 114, 1775, 955, 956, 957, 954,
	1940, 961, 962, 963, 964, 965, 966, 967, 959, 114,
	2822, 114, 1687, 2943, 2891, 1690, 3133, 2857, 1693, 1445,
	1446, 1695, 2852, 1449, 1450, 1451, 1452, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1968, 969, 968, 978, 979,
	971, 972, 973, 974, 975, 976, 977, 970, 2697, 2031,
	2031, 1623, 2031, 2851, 2330, 1803, 955, 956, 957, 954,
	955, 956, 957, 954, 2722, 1159, 2823, 2081, 2696, 2653,
	431, 431, 1437, 955, 956, 957, 954, 3132, 890, 1823,
	1825, 1826, 2139, 2516, 1195, 442, 1438, 2429, 2409, 1201,
	2408, 1840, 1023, 2313, 2312, 2311, 2303, 442, 2328, 2297,
	2296, 890, 437, 2295, 2698, 2294, 1227, 1896, 1623, 1889,
	2329, 2066, 2326, 2068, 2315, 1854, 1705, 178, 955, 956,
	957, 954, 2033, 1704, 2037, 2052, 1973, 2073, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1936, 2035, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1703, 1996,
	1997, 1998, 1999, 2000, 2327, 2001, 1022, 1939, 1773, 2463,
	2044, 1777, 2045, 2110, 1699, 1938, 1740, 1920, 2325, 1932,
	2314, 1698, 1933, 1195, 1930, 1195, 2704, 1195, 1288, 1071,
	2049, 2050, 890, 2345, 1792, 3090, 1927, 2502, 955, 956,
	957, 954, 2798, 2065, 3086, 2060, 2124, 1233, 3045, 2989,
	1787, 2072, 955, 956, 957, 954, 1175, 1177, 1794, 2831,
	1232, 1195, 2155, 2010, 511, 792, 2120, 513, 2462, 1834,
	1835, 1928, 512, 2945, 1929, 789, 1807, 2162, 791, 1810,
	1811, 1812, 1195, 3005, 1815, 1816, 1817, 1818, 1819, 1820,
	1821, 1822, 2164, 2039, 955, 956, 957, 954, 2965, 2921,
	2892, 1791, 1193, 2856, 1122, 2053, 2993, 1921, 1922, 955,
	956, 957, 954, 2855, 2838, 2154, 2826, 1925, 1926, 2062,
	2061, 2796, 2794, 1193, 2064, 2166, 890, 955, 956, 957,
	954, 2804, 955, 956, 957, 954, 2163, 114, 114, 790,
	2196, 955, 956, 957, 954, 2774, 1778, 2771, 2904, 1916,
	2769, 2335, 2734, 2141, 2695, 2121, 2694, 955, 956, 957,
	954, 2691, 2681, 2675, 2128, 1666, 2803, 2622, 2135, 2618,
	2609, 2715, 2107, 2608, 2111, 1195, 2185, 1326, 2217, 2113,
	2525, 2493, 2118, 2492, 1492, 2440, 2407, 2384, 2324, 2316,
	2239, 2306, 955, 956, 957, 954, 2245, 2134, 978, 979,
	971, 972, 973, 974, 975, 976, 977, 970, 2131, 2132,
	986, 2304, 2254, 2300, 2299, 2298, 2145, 1829, 890, 2763,
	955, 956, 957, 954, 606, 605, 2266, 1707, 2170, 2199,
	1701, 1478, 1940, 2175, 2271, 2272, 1289, 2273, 2161, 1489,
	1030, 2276, 2277, 2278, 1546, 955, 956, 957, 954, 2678,
	1026, 1504, 1025, 879, 2714, 2712, 2063, 2680, 2667, 1469,
	2658, 1469, 2186, 2657, 2466, 2070, 2230, 2031, 2646, 1252,
	2645, 2552, 1257, 1258, 2189, 955, 956, 957, 954, 1469,
	1469, 2331, 2468, 2236, 161, 2246, 2229, 153, 129, 431,
	955, 956, 957, 954, 1492, 890, 1623, 1623, 1623, 1623,
	2461, 2453, 2206, 2448, 2392, 1226, 2197, 890, 1623, 2353,
	2194, 2031, 2264, 1552, 2088, 2261, 2264, 2084, 1561, 2083,
	2465, 2353, 1262, 1265, 2464, 1266, 1814, 1195, 2215, 1495,
	2265, 955, 956, 957, 954, 2238, 1804, 2244, 1802, 442,
	442, 8, 1798, 1797, 7, 1061, 955, 956, 957, 954,
	955, 956, 957, 954, 178, 158, 2256, 1795, 2200, 178,
	1786, 1783, 1782, 1661, 1706, 2268, 2262, 2260, 1464, 1661,
	1463, 1462, 1436, 2366, 1435, 2183, 1426, 1207, 2286, 2287,
	1433, 2182, 1433, 1205, 3187, 2424, 2280, 161, 3147, 2428,
	3141, 3131, 2301, 2302, 3128, 1195, 3126, 3031, 2435, 2963,
	2305, 955, 956, 957, 954, 1020, 2138, 955, 956, 957,
	954, 1247, 2874, 2862, 2156, 2157, 2337, 2858, 2782, 2247,
	3022, 2181, 2159, 2160, 2780, 2339, 2336, 2251, 2252, 2761,
	2341, 2354, 2355, 2356, 2357, 2165, 2365, 2760, 2398, 2180,
	2757, 661, 2367, 2402, 2369, 2756, 1468, 955, 956, 957,
	954, 2423, 2749, 2707, 2385, 2382, 1256, 1469, 158, 1249,
	2187, 2188, 1476, 2253, 2421, 955, 956, 957, 954, 1204,
	2427, 2396, 1106, 2332, 448, 2400, 2270, 2399, 2456, 890,
	2458, 2233, 2432, 2437, 2249, 2378, 2232, 2505, 2637, 2179,
	2231, 1261, 1264, 1854, 1253, 2184, 2417, 2520, 2368, 2422,
	114, 2415, 442, 2097, 2047, 2248, 2178, 2420, 2002, 2250,
	2177, 2431, 890, 890, 890, 955, 956, 957, 954, 1913,
	2445, 1623, 1912, 1367, 2550, 158, 1940, 1940, 1940, 2446,
	2554, 1670, 955, 956, 957, 954, 955, 956, 957, 954,
	890, 1486, 1485, 792, 2589, 1311, 2592, 2452, 2592, 2592,
	792, 2419, 2457, 2528, 2559, 2597, 2459, 2460, 2426, 2454,
	2455, 1277, 114, 1254, 1055, 1052, 114, 1195, 1195, 1051,
	1050, 2495, 665, 666, 667, 668, 1049, 114, 1048, 1047,
	2489, 1046, 1045, 2604, 2494, 664, 2473, 114, 2497, 1044,
	2474, 2475, 2476, 2477, 1043, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 1042, 2146, 2521, 2548, 1041, 1193, 1193,
	1040, 2229, 2527, 442, 2566, 1039, 2587, 2588, 2505, 2549,
	1038, 2605, 2606, 1037, 2545, 2538, 2539, 1036, 1035, 1492,
	1492, 1034, 875, 871, 872, 873, 874, 2560, 2151, 1033,
	2150, 2149, 2147, 1888, 2176, 2582, 792, 3066, 1206, 1029,
	2593, 2594, 2578, 1028, 2500, 2595, 1904, 1905, 1906, 1027,
	1784, 1024, 1017, 3020, 2173, 2569, 1016, 3064, 2172, 1014,
	955, 956, 957, 954, 1013, 2564, 2155, 1012, 1011, 1010,
	2584, 2585, 1009, 1008, 1007, 2656, 2565, 1006, 1005, 1923,
	955, 956, 957, 954, 955, 956, 957, 954, 1004, 1003,
	792, 3010, 2171, 2636, 2148, 998, 997, 2401, 2558, 2403,
	2167, 2610, 2617, 2615, 2620, 2619, 2614, 3163, 920, 2624,
	2625, 2158, 442, 2570, 877, 3018, 2635, 1469, 955, 956,
	957, 954, 1469, 2631, 2632, 3016, 955, 956, 957, 954,
	2639, 2758, 1918, 1901, 2642, 2643, 2644, 955, 956, 957,
	954, 908, 2557, 955, 956, 957, 954, 2651, 968, 978,
	979, 971, 972, 973, 974, 975, 976, 977, 970, 2447,
	969, 968, 978, 979, 971, 972, 973, 974, 975, 976,
	977, 970, 2668, 2634, 2221, 2059, 1709, 919, 2362, 2669,
	2360, 2467, 2359, 2363, 2671, 2361, 2136, 2670, 2364, 2358,
	2023, 2024, 2785, 2674, 2784, 2682, 3173, 2106, 2100, 1201,
	1100, 1377, 2711, 99, 2583, 53, 1945, 1511, 1512, 52,
	439, 1661, 955, 956, 957, 954, 2031, 1623, 2725, 2553,
	1506, 1507, 1508, 2555, 2556, 2152, 2153, 955, 956, 957,
	954, 2574, 2014, 2523, 1971, 2258, 2684, 2259, 2191, 1622,
	1597, 1195, 2783, 2282, 2095, 2733, 2498, 2687, 2490, 2491,
	2283, 2284, 2285, 2571, 2575, 2573, 2572, 442, 444, 1241,
	445, 2686, 443, 2125, 446, 1057, 2589, 2702, 1271, 2019,
	2022, 2023, 2024, 2020, 1890, 2021, 2025, 2727, 1195, 1834,
	1835, 1671, 2736, 914, 2985, 2499, 2255, 2201, 2723, 1908,
	2596, 2580, 2581, 1515, 1492, 1484, 1422, 1421, 890, 1069,
	1070, 3077, 2724, 1067, 1068, 114, 2860, 2587, 114, 114,
	2731, 114, 2353, 2607, 2019, 2022, 2023, 2024, 2020, 1193,
	2021, 2025, 2787, 2626, 178, 1065, 1066, 2011, 2708, 2709,
	2710, 2586, 2766, 2007, 792, 2776, 2582, 890, 2638, 2762,
	1063, 1064, 2688, 2567, 1608, 1157, 1156, 790, 946, 2579,
	2641, 2353, 2057, 2768, 790, 1729, 2812, 2770, 1111, 1059,
	2773, 3142, 3053, 114, 3038, 2777, 3036, 2778, 665, 666,
	667, 668, 2996, 2975, 2974, 2972, 2775, 2964, 890, 1195,
	1195, 664, 1519, 2886, 890, 2885, 2841, 2795, 2772, 2841,
	2683, 2665, 2664, 2649, 1062, 664, 2648, 2394, 1940, 3068,
	3067, 3068, 2430, 2799, 1903, 1785, 905, 3067, 2789, 2751,
	2666, 2386, 165, 3, 1126, 61, 2813, 2, 1172, 2040,
	1193, 2736, 1655, 1199, 2815, 1, 1477, 890, 890, 669,
	2371, 890, 890, 2836, 2372, 2640, 2374, 1747, 2342, 986,
	2005, 2846, 1891, 2519, 2837, 2845, 3145, 2843, 1101, 708,
	2871, 1517, 2727, 2883, 2237, 1428, 1296, 808, 2876, 899,
	1293, 2887, 2888, 898, 2863, 2864, 896, 1379, 2872, 2873,
	561, 1712, 2333, 2880, 2307, 2859, 2882, 3076, 3113, 3030,
	3079, 1309, 545, 2677, 2966, 2917, 2896, 3034, 2898, 2805,
	2679, 2801, 1752, 951, 2879, 2416, 730, 2910, 2881, 969,
	968, 978, 979, 971, 972, 973, 974, 975, 976, 977,
	970, 597, 572, 1015, 2933, 1279, 1272, 2471, 810, 571,
	2726, 2701, 2211, 2389, 2905, 2909, 2729, 2937, 2915, 2730,
	807, 731, 1696, 890, 2894, 1242, 1246, 2847, 2716, 2540,
	2234, 3183, 3172, 3154, 3140, 890, 3058, 3168, 1195, 2936,
	3094, 2935, 3129, 2928, 3143, 2808, 2934, 2806, 2807, 3122,
	3054, 482, 2944, 1634, 429, 2877, 773, 2875, 1708, 483,
	2952, 1917, 2947, 3046, 2861, 690, 1900, 691, 2227, 2226,
	1348, 960, 2957, 1365, 2486, 2487, 995, 521, 1774, 1193,
	2208, 2577, 2383, 60, 59, 2980, 58, 57, 890, 1678,
	2971, 2969, 2958, 2387, 2388, 186, 2997, 969, 968, 978,
	979, 971, 972, 973, 974, 975, 976, 977, 970, 3006,
	563, 185, 2829, 3027, 2992, 2988, 3081, 2991, 543, 542,
	1195, 541, 540, 3025, 3028, 2999, 539, 1469, 2018, 2016,
	2015, 3004, 1618, 1617, 1676, 2598, 2279, 1959, 1469, 1952,
	1553, 2779, 3007, 2949, 2781, 2950, 2748, 2317, 1505, 1963,
	2948, 1567, 3029, 2289, 3015, 3017, 3019, 3021, 2786, 1195,
	3037, 1193, 3039, 3040, 3035, 3033, 1564, 1563, 2959, 2281,
	2744, 2738, 1594, 2840, 3024, 2561, 2562, 2568, 1907, 3052,
	833, 829, 2034, 831, 832, 2853, 2854, 830, 2144, 2140,
	3062, 3063, 3083, 3065, 1935, 2533, 1845, 3069, 1844, 3070,
	1193, 3071, 1842, 3072, 3082, 3073, 1841, 1077, 2916, 2685,
	1852, 1850, 2633, 3060, 890, 2629, 1720, 1474, 2190, 1619,
	2980, 3088, 1615, 1902, 2998, 2816, 3087, 1510, 3092, 683,
	1898, 97, 143, 3097, 3099, 47, 3112, 1406, 88, 1622,
	87, 96, 141, 46, 170, 3107, 169, 172, 114, 3115,
	171, 168, 3120, 2074, 890, 2075, 2526, 167, 1230, 166,
	2844, 658, 37, 33, 3121, 3125, 12, 3127, 1332, 11,
	3108, 3109, 3110, 3111, 34, 21, 22, 20, 3083, 3138,
	1300, 19, 25, 31, 30, 107, 106, 890, 29, 890,
	3082, 105, 104, 3137, 103, 102, 101, 3144, 28, 3146,
	3149, 1332, 18, 1332, 41, 40, 39, 3115, 890, 3150,
	9, 95, 3157, 93, 3164, 27, 94, 3167, 3161, 91,
	92, 89, 1332, 72, 71, 70, 85, 84, 83, 82,
	81, 80, 3171, 78, 79, 729, 3178, 3089, 69, 68,
	3182, 3181, 67, 66, 65, 2929, 3190, 90, 76, 849,
	3193, 86, 3195, 77, 3178, 3196, 75, 3194, 74, 3182,
	73, 64, 63, 62, 126, 127, 125, 1661, 2946, 124,
	123, 122, 121, 120, 42, 43, 44, 45, 161, 137,
	50, 153, 129, 136, 138, 140, 142, 139, 134, 132,
	135, 133, 1402, 131, 55, 17, 1399, 24, 154, 4,
	1401, 1398, 1400, 1404, 1405, 146, 0, 0, 1403, 155,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 50,
	153, 129, 0, 0, 1002, 0, 0, 0, 112, 0,
	0, 0, 981, 0, 985, 0, 0, 154, 0, 0,
	0, 0, 0, 100, 146, 0, 0, 0, 155, 158,
	982, 984, 980, 0, 983, 969, 968, 978, 979, 971,
	972, 973, 974, 975, 976, 977, 970, 112, 0, 837,
	955, 956, 957, 954, 0, 114, 2673, 0, 0, 0,
	0, 0, 100, 0, 2469, 0, 0, 0, 158, 857,
	861, 863, 865, 867, 868, 870, 0, 875, 871, 872,
	873, 874, 0, 852, 853, 854, 855, 835, 836, 858,
	0, 838, 0, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 850, 856, 116, 117, 0, 118, 119,
	0, 0, 860, 862, 864, 866, 869, 969, 968, 978,
	979, 971, 972, 973, 974, 975, 976, 977, 970, 1406,
	1409, 1410, 1411, 1412, 1413, 1414, 1407, 1408, 0, 0,
	0, 0, 0, 0, 116, 117, 0, 118, 119, 851,
	0, 0, 0, 0, 2133, 0, 0, 1622, 1622, 1622,
	1622, 0, 0, 0, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 128, 152, 159, 0, 98, 969, 968,
	978, 979, 971, 972, 973, 974, 975, 976, 977, 970,
	0, 0, 0, 0, 0, 151, 145, 144, 0, 0,
	0, 2755, 56, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 152, 159, 114, 98, 0, 0, 0,
	114, 0, 0, 0, 1772, 0, 3152, 0, 0, 0,
	0, 0, 0, 0, 151, 145, 144, 0, 0, 0,
	114, 56, 0, 0, 0, 0, 0, 114, 969, 968,
	978, 979, 971, 972, 973, 974, 975, 976, 977, 970,
	0, 0, 0, 147, 148, 149, 969, 968, 978, 979,
	971, 972, 973, 974, 975, 976, 977, 970, 0, 0,
	2142, 2143, 0, 0, 1402, 0, 0, 0, 1399, 156,
	0, 0, 1401, 1398, 1400, 1404, 1405, 0, 0, 0,
	1403, 0, 147, 148, 149, 0, 0, 108, 0, 0,
	0, 150, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 108, 0, 0, 0,
	150, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 859, 0, 0, 0, 0, 0, 0, 0,
	49, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1409, 1410, 1411, 1412, 1413, 1414, 1407, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 579, 130, 0, 0, 0, 0, 0, 51,
	0, 0, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 270,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 0, 0, 427, 0, 428, 0, 0,
	570, 0, 0, 354, 309, 0, 0, 0, 0, 629,
	637, 111, 38, 0, 0, 0, 0, 0, 48, 5,
	0, 528, 115, 0, 560, 606, 605, 547, 557, 0,
	0, 248, 184, 0, 0, 0, 548, 0, 556, 549,
	553, 552, 550, 551, 0, 621, 0, 0, 0, 0,
	111, 38, 519, 532, 0, 536, 0, 48, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	530, 0, 0, 0, 0, 580, 0, 531, 0, 0,
	575, 554, 558, 0, 0, 0, 0, 239, 359, 375,
	249, 350, 388, 254, 357, 244, 324, 347, 0, 0,
	241, 373, 356, 306, 289, 290, 240, 0, 342, 268,
	281, 265, 322, 555, 578, 582, 264, 643, 576, 383,
	243, 114, 382, 321, 369, 374, 307, 301, 242, 371,
	305, 300, 293, 272, 644, 285, 333, 299, 334, 286,
	311, 310, 312, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 573, 0, 0, 0, 385, 0, 1622, 627,
	0, 0, 0, 358, 0, 0, 294, 0, 0, 0,
	577, 0, 345, 327, 640, 520, 0, 343, 297, 370,
	335, 376, 360, 384, 339, 336, 234, 361, 267, 308,
	245, 247, 262, 269, 271, 273, 274, 317, 318, 330,
	349, 363, 364, 365, 266, 255, 344, 256, 283, 257,
	235, 259, 258, 260, 351, 261, 237, 331, 368, 0,
	279, 340, 304, 238, 303, 332, 367, 366, 246, 392,
	398, 399, 404, 0, 405, 0, 0, 0, 413, 418,
	419, 420, 422, 423, 424, 425, 0, 0, 0, 0,
	407, 0, 0, 0, 1430, 1429, 1431, 397, 277, 231,
	232, 435, 625, 323, 0, 114, 639, 620, 622, 623,
	626, 630, 631, 632, 633, 634, 636, 638, 642, 434,
	0, 0, 0, 0, 0, 433, 329, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 378, 390, 408, 411, 0, 0, 0, 0,
	236, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	581, 0, 0, 313, 314, 315, 316, 628, 0, 253,
	409, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	403, 276, 282, 421, 284, 252, 328, 278, 387, 291,
	0, 414, 0, 415, 0, 0, 0, 0, 320, 287,
	288, 352, 292, 298, 341, 386, 326, 346, 250, 377,
	353, 302, 0, 0, 650, 624, 649, 651, 652, 648,
	653, 654, 635, 538, 0, 585, 646, 645, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 296, 0, 337, 275, 0, 0,
	613, 590, 591, 592, 537, 593, 588, 589, 614, 583,
	610, 611, 562, 586, 594, 609, 595, 612, 615, 616,
	655, 656, 601, 657, 598, 617, 608, 607, 596, 584,
	618, 619, 569, 564, 599, 600, 587, 602, 603, 604,
	565, 566, 567, 568, 362, 579, 0, 393, 394, 395,
	417, 379, 0, 432, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 270, 1470, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	428, 0, 0, 570, 0, 0, 354, 309, 0, 0,
	0, 0, 629, 637, 0, 0, 0, 0, 0, 0,
	0, 1646, 0, 0, 528, 0, 0, 560, 606, 605,
	547, 557, 0, 0, 248, 184, 0, 0, 0, 548,
	0, 556, 549, 553, 552, 550, 551, 0, 621, 0,
	0, 0, 0, 0, 0, 519, 532, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 0, 0, 0, 0, 580, 0,
	531, 0, 0, 1647, 554, 558, 0, 0, 0, 0,
	239, 359, 375, 249, 350, 388, 254, 357, 244, 324,
	347, 0, 0, 241, 373, 356, 306, 289, 290, 240,
	0, 342, 268, 281, 265, 322, 555, 578, 582, 264,
	643, 576, 383, 243, 0, 382, 321, 369, 374, 307,
	301, 242, 371, 305, 300, 293, 272, 644, 285, 333,
	299, 334, 286, 311, 310, 312, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 573, 0, 0, 0, 385,
	0, 0, 627, 0, 0, 0, 358, 0, 0, 294,
	0, 0, 0, 577, 0, 345, 327, 640, 520, 0,
	343, 297, 370, 335, 376, 360, 384, 339, 336, 234,
	361, 267, 308, 245, 247, 262, 269, 271, 273, 274,
	317, 318, 330, 349, 363, 364, 365, 266, 255, 344,
	256, 283, 257, 235, 259, 258, 260, 351, 261, 237,
	331, 368, 0, 279, 340, 304, 238, 303, 332, 367,
	366, 246, 392, 398, 399, 404, 0, 405, 0, 0,
	0, 413, 418, 419, 420, 422, 423, 424, 425, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	397, 277, 231, 232, 435, 625, 323, 0, 0, 639,
	620, 622, 623, 626, 630, 631, 632, 633, 634, 636,
	638, 642, 434, 0, 0, 0, 0, 0, 433, 329,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 355, 378, 390, 408, 411, 0,
	0, 0, 0, 236, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 581, 0, 0, 313, 314, 315, 316,
	628, 0, 253, 409, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 403, 276, 282, 421, 284, 252, 328,
	278, 387, 291, 0, 414, 0, 415, 0, 0, 0,
	0, 320, 287, 288, 352, 292, 298, 341, 386, 326,
	346, 250, 377, 353, 302, 0, 0, 650, 624, 649,
	651, 652, 648, 653, 654, 635, 538, 0, 585, 646,
	645, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 296, 0, 337,
	275, 0, 0, 613, 590, 591, 592, 537, 593, 588,
	589, 614, 583, 610, 611, 562, 586, 594, 609, 595,
	612, 615, 616, 655, 656, 601, 657, 598, 617, 608,
	607, 596, 584, 618, 619, 569, 564, 599, 600, 587,
	602, 603, 604, 565, 566, 567, 568, 161, 362, 579,
	393, 394, 395, 417, 379, 0, 432, 0, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 270, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 428, 0, 0, 989, 0, 0,
	354, 309, 0, 0, 0, 0, 629, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 0,
	0, 560, 606, 605, 547, 557, 0, 0, 248, 184,
	0, 0, 0, 548, 0, 556, 549, 553, 552, 550,
	551, 0, 621, 0, 0, 0, 0, 0, 0, 519,
	532, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 530, 0, 0,
	0, 0, 580, 0, 531, 0, 0, 575, 554, 558,
	0, 0, 0, 0, 239, 359, 375, 249, 350, 388,
	254, 357, 244, 324, 347, 0, 0, 241, 373, 356,
	306, 289, 290, 240, 0, 342, 268, 281, 265, 322,
	555, 578, 582, 264, 643, 576, 383, 243, 0, 382,
	321, 369, 374, 307, 301, 242, 371, 305, 300, 293,
	272, 644, 285, 333, 299, 334, 286, 311, 310, 312,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	0, 0, 0, 385, 0, 0, 627, 0, 0, 0,
	358, 0, 0, 294, 0, 0, 0, 577, 0, 345,
	327, 640, 520, 0, 343, 297, 370, 335, 376, 360,
	384, 339, 336, 234, 361, 267, 308, 245, 247, 262,
	269, 271, 273, 274, 317, 318, 330, 349, 363, 364,
	365, 266, 255, 344, 256, 283, 257, 235, 259, 258,
	260, 351, 261, 237, 331, 368, 0, 279, 340, 304,
	238, 303, 332, 367, 366, 246, 392, 398, 399, 404,
	0, 405, 0, 0, 0, 413, 418, 419, 420, 422,
	423, 424, 425, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 397, 277, 231, 232, 435, 625,
	323, 0, 0, 639, 620, 622, 623, 626, 630, 631,
	632, 633, 634, 636, 638, 642, 434, 0, 0, 0,
	0, 0, 433, 329, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 355, 378,
	390, 408, 411, 0, 0, 0, 0, 236, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 389, 0, 0, 0, 0, 0, 581, 0, 0,
	313, 314, 315, 316, 628, 0, 253, 409, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 403, 276, 282,
	421, 284, 252, 328, 278, 387, 291, 0, 414, 0,
	415, 0, 0, 0, 0, 320, 287, 288, 352, 292,
	298, 341, 386, 326, 346, 250, 377, 353, 302, 0,
	0, 650, 624, 649, 651, 652, 648, 653, 654, 635,
	538, 0, 585, 646, 645, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 296, 130, 337, 275, 0, 0, 613, 590, 591,
	592, 537, 593, 588, 589, 614, 583, 610, 611, 562,
	586, 594, 609, 595, 612, 615, 616, 655, 656, 601,
	657, 598, 617, 608, 607, 596, 584, 618, 619, 569,
	564, 599, 600, 587, 602, 603, 604, 565, 566, 567,
	568, 362, 579, 0, 393, 394, 395, 417, 379, 0,
	432, 0, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 0, 0, 0, 270,
	3151, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 428, 0, 0,
	570, 0, 0, 354, 309, 0, 0, 0, 0, 629,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 0, 0, 560, 606, 605, 547, 557, 0,
	0, 248, 184, 0, 0, 0, 548, 0, 556, 549,
	553, 552, 550, 551, 0, 621, 0, 0, 0, 0,
	0, 0, 519, 532, 0, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	530, 0, 0, 0, 0, 580, 0, 531, 0, 0,
	575, 554, 558, 0, 0, 0, 0, 239, 359, 375,
	249, 350, 388, 254, 357, 244, 324, 347, 0, 0,
	241, 373, 356, 306, 289, 290, 240, 0, 342, 268,
	281, 265, 322, 555, 578, 582, 264, 643, 576, 383,
	243, 0, 382, 321, 369, 374, 307, 301, 242, 371,
	305, 300, 293, 272, 644, 285, 333, 299, 334, 286,
	311, 310, 312, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 573, 0, 0, 0, 385, 0, 0, 627,
	0, 0, 0, 358, 0, 0, 294, 0, 0, 0,
	577, 0, 345, 327, 640, 520, 0, 343, 297, 370,
	335, 376, 360, 384, 339, 336, 234, 361, 267, 308,
	245, 247, 262, 269, 271, 273, 274, 317, 318, 330,
	349, 363, 364, 365, 266, 255, 344, 256, 283, 257,
	235, 259, 258, 260, 351, 261, 237, 331, 368, 0,
	279, 340, 304, 238, 303, 332, 367, 366, 246, 392,
	398, 399, 404, 0, 405, 0, 0, 0, 413, 418,
	419, 420, 422, 423, 424, 425, 0, 0, 0, 0,
	407, 0, 0, 0, 0, 0, 0, 397, 277, 231,
	232, 435, 625, 323, 0, 0, 639, 620, 622, 623,
	626, 630, 631, 632, 633, 634, 636, 638, 642, 434,
	0, 0, 0, 0, 0, 433, 329, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 378, 390, 408, 411, 0, 0, 0, 0,
	236, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	581, 0, 0, 313, 314, 315, 316, 628, 0, 253,
	409, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	403, 276, 282, 421, 284, 252, 328, 278, 387, 291,
	0, 414, 0, 415, 0, 0, 0, 0, 320, 287,
	288, 352, 292, 298, 341, 386, 326, 346, 250, 377,
	353, 302, 0, 0, 650, 624, 649, 651, 652, 648,
	653, 654, 635, 538, 0, 585, 646, 645, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 296, 0, 337, 275, 0, 0,
	613, 590, 591, 592, 537, 593, 588, 589, 614, 583,
	610, 611, 562, 586, 594, 609, 595, 612, 615, 616,
	655, 656, 601, 657, 598, 617, 608, 607, 596, 584,
	618, 619, 569, 564, 599, 600, 587, 602, 603, 604,
	565, 566, 567, 568, 362, 579, 0, 393, 394, 395,
	417, 379, 0, 432, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 270, 1470, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	428, 0, 0, 570, 0, 0, 354, 309, 0, 0,
	0, 0, 629, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 0, 0, 560, 606, 605,
	547, 557, 0, 0, 248, 184, 0, 0, 0, 548,
	0, 556, 549, 553, 552, 550, 551, 0, 621, 0,
	0, 0, 0, 0, 0, 519, 532, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 530, 0, 0, 0, 0, 580, 0,
	531, 0, 0, 575, 554, 558, 0, 0, 0, 0,
	239, 359, 375, 249, 350, 388, 254, 357, 244, 324,
	347, 0, 0, 241, 373, 356, 306, 289, 290, 240,
	0, 342, 268, 281, 265, 322, 555, 578, 582, 264,
	643, 576, 383, 243, 0, 382, 321, 369, 374, 307,
	301, 242, 371, 305, 300, 293, 272, 644, 285, 333,
	299, 334, 286, 311, 310, 312, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 573, 0, 0, 0, 385,
	0, 0, 627, 0, 0, 0, 358, 0, 0, 294,
	0, 0, 0, 577, 0, 345, 327, 640, 520, 0,
	343, 297, 370, 335, 376, 360, 384, 339, 336, 234,
	361, 267, 308, 245, 247, 262, 269, 271, 273, 274,
	317, 318, 330, 349, 363, 364, 365, 266, 255, 344,
	256, 283, 257, 235, 259, 258, 260, 351, 261, 237,
	331, 368, 0, 279, 340, 304, 238, 303, 332, 367,
	366, 246, 392, 398, 399, 404, 0, 405, 0, 0,
	0, 413, 418, 419, 420, 422, 423, 424, 425, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	397, 277, 231, 232, 435, 625, 323, 0, 0, 639,
	620, 622, 623, 626, 630, 631, 632, 633, 634, 636,
	638, 642, 434, 0, 0, 0, 0, 0, 433, 329,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 355, 378, 390, 408, 411, 0,
	0, 0, 0, 236, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 581, 0, 0, 313, 314, 315, 316,
	628, 0, 253, 409, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 403, 276, 282, 421, 284, 252, 328,
	278, 387, 291, 0, 414, 0, 415, 0, 0, 0,
	0, 320, 287, 288, 352, 292, 298, 341, 386, 326,
	346, 250, 377, 353, 302, 0, 0, 650, 624, 649,
	651, 652, 648, 653, 654, 635, 538, 0, 585, 646,
	645, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 296, 0, 337,
	275, 0, 0, 613, 590, 591, 592, 537, 593, 588,
	589, 614, 583, 610, 611, 562, 586, 594, 609, 595,
	612, 615, 616, 655, 656, 601, 657, 598, 617, 608,
	607, 596, 584, 618, 619, 569, 564, 599, 600, 587,
	602, 603, 604, 565, 566, 567, 568, 362, 579, 0,
	393, 394, 395, 417, 379, 0, 432, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 270, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 570, 0, 0, 354,
	309, 0, 0, 0, 0, 629, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 0, 0,
	560, 606, 605, 547, 557, 0, 0, 248, 184, 0,
	0, 0, 548, 0, 556, 549, 553, 552, 550, 551,
	0, 621, 0, 0, 0, 0, 0, 0, 519, 532,
	0, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 530, 1225, 0, 0,
	0, 580, 0, 531, 0, 0, 575, 554, 558, 0,
	0, 0, 0, 239, 359, 375, 249, 350, 388, 254,
	357, 244, 324, 347, 0, 0, 241, 373, 356, 306,
	289, 290, 240, 0, 342, 268, 281, 265, 322, 555,
	578, 582, 264, 643, 576, 383, 243, 0, 382, 321,
	369, 374, 307, 301, 242, 371, 305, 300, 293, 272,
	644, 285, 333, 299, 334, 286, 311, 310, 312, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 573, 0,
	0, 0, 385, 0, 0, 627, 0, 0, 0, 358,
	0, 0, 294, 0, 0, 0, 577, 0, 345, 327,
	640, 520, 0, 343, 297, 370, 335, 376, 360, 384,
	339, 336, 234, 361, 267, 308, 245, 247, 262, 269,
	271, 273, 274, 317, 318, 330, 349, 363, 364, 365,
	266, 255, 344, 256, 283, 257, 235, 259, 258, 260,
	351, 261, 237, 331, 368, 0, 279, 340, 304, 238,
	303, 332, 367, 366, 246, 392, 398, 399, 404, 0,
	405, 0, 0, 0, 413, 418, 419, 420, 422, 423,
	424, 425, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 397, 277, 231, 232, 435, 625, 323,
	0, 0, 639, 620, 622, 623, 626, 630, 631, 632,
	633, 634, 636, 638, 642, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 581, 0, 0, 313,
	314, 315, 316, 628, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	650, 624, 649, 651, 652, 648, 653, 654, 635, 538,
	0, 585, 646, 645, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 613, 590, 591, 592,
	537, 593, 588, 589, 614, 583, 610, 611, 562, 586,
	594, 609, 595, 612, 615, 616, 655, 656, 601, 657,
	598, 617, 608, 607, 596, 584, 618, 619, 569, 564,
	599, 600, 587, 602, 603, 604, 565, 566, 567, 568,
	0, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	362, 579, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 570,
	0, 0, 354, 309, 0, 0, 0, 0, 629, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 0, 0, 560, 606, 605, 547, 557, 0, 0,
	248, 184, 0, 0, 0, 548, 0, 556, 549, 553,
	552, 550, 551, 0, 621, 0, 0, 0, 0, 0,
	0, 519, 532, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 530,
	0, 0, 0, 0, 580, 0, 531, 0, 0, 575,
	554, 558, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 555, 578, 582, 264, 643, 576, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 644, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 573, 0, 0, 0, 385, 0, 0, 627, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 577,
	0, 345, 327, 640, 520, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 625, 323, 0, 0, 639, 620, 622, 623, 626,
	630, 631, 632, 633, 634, 636, 638, 642, 434, 0,
	0, 0, 0, 0, 433, 329, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 581,
	0, 0, 313, 314, 315, 316, 628, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 0, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 650, 624, 649, 651, 652, 648, 653,
	654, 635, 538, 0, 585, 646, 645, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 0, 613,
	590, 591, 592, 537, 593, 588, 589, 614, 583, 610,
	611, 562, 586, 594, 609, 595, 612, 615, 616, 655,
	656, 601, 657, 598, 617, 608, 607, 596, 584, 618,
	619, 569, 564, 599, 600, 587, 602, 603, 604, 565,
	566, 567, 568, 362, 579, 0, 393, 394, 395, 417,
	379, 0, 432, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 570, 0, 0, 354, 309, 0, 0, 0,
	0, 629, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 0, 0, 560, 606, 605, 547,
	557, 0, 0, 248, 184, 0, 0, 0, 548, 0,
	556, 549, 553, 552, 550, 551, 0, 621, 0, 0,
	0, 0, 0, 0, 519, 532, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 530, 0, 0, 0, 0, 580, 0, 531,
	0, 0, 575, 554, 558, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 555, 578, 582, 264, 643,
	576, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 644, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 0, 0, 0, 385, 0,
	0, 627, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 577, 0, 345, 327, 640, 520, 0, 343,
	297, 370, 335, 376, 360, 384, 339, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 625, 323, 0, 0, 639, 620,
	622, 623, 626, 630, 631, 632, 633, 634, 636, 638,
	642, 434, 0, 0, 0, 0, 0, 433, 329, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 355, 378, 390, 408, 411, 0, 0,
	0, 0, 236, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 581, 0, 0, 313, 314, 315, 316, 628,
	0, 253, 409, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 403, 276, 282, 421, 284, 252, 328, 278,
	387, 291, 0, 414, 0, 415, 0, 0, 0, 0,
	320, 287, 288, 352, 292, 298, 341, 386, 326, 346,
	250, 377, 353, 302, 0, 0, 650, 624, 649, 651,
	652, 648, 653, 654, 635, 538, 0, 585, 646, 645,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 296, 0, 337, 275,
	0, 0, 613, 590, 591, 592, 537, 593, 588, 589,
	614, 583, 610, 611, 562, 586, 594, 609, 595, 612,
	615, 616, 655, 656, 601, 657, 598, 617, 608, 607,
	596, 584, 618, 619, 569, 564, 599, 600, 587, 602,
	603, 604, 565, 566, 567, 568, 362, 579, 0, 393,
	394, 395, 417, 379, 0, 432, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 1349, 0, 0, 0,
	535, 0, 0, 0, 270, 0, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 0, 428, 0, 0, 570, 0, 0, 354, 309,
	0, 0, 0, 0, 629, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 0, 0, 560,
	606, 605, 547, 557, 0, 0, 248, 184, 0, 0,
	0, 548, 0, 556, 549, 553, 552, 550, 551, 0,
	621, 0, 0, 0, 0, 0, 0, 0, 532, 0,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 530, 0, 0, 0, 0,
	580, 0, 531, 0, 0, 575, 554, 558, 0, 0,
	0, 0, 239, 359, 375, 249, 350, 388, 254, 357,
	244, 324, 347, 0, 0, 241, 373, 356, 306, 289,
	290, 240, 0, 342, 268, 281, 265, 322, 555, 578,
	582, 264, 643, 576, 383, 243, 0, 382, 321, 369,
	374, 307, 301, 242, 371, 305, 300, 293, 272, 644,
	285, 333, 299, 334, 286, 311, 310, 312, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 573, 0, 0,
	0, 385, 0, 0, 627, 0, 0, 0, 358, 0,
	0, 294, 0, 0, 0, 577, 0, 345, 327, 640,
	0, 0, 343, 297, 370, 335, 376, 360, 384, 339,
	336, 234, 361, 267, 308, 245, 247, 262, 269, 271,
	273, 274, 317, 318, 330, 349, 363, 364, 365, 266,
	255, 344, 256, 283, 257, 235, 259, 258, 260, 351,
	261, 237, 331, 368, 0, 279, 340, 304, 238, 303,
	332, 367, 366, 246, 392, 1350, 1351, 404, 0, 405,
	0, 0, 0, 413, 418, 419, 420, 422, 423, 424,
	425, 0, 0, 0, 0, 407, 0, 0, 0, 0,
	0, 0, 397, 277, 231, 232, 435, 625, 323, 0,
	0, 639, 620, 622, 623, 626, 630, 631, 632, 633,
	634, 636, 638, 642, 434, 0, 0, 0, 0, 0,
	433, 329, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 378, 390, 408,
	411, 0, 0, 0, 0, 236, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 581, 0, 0, 313, 314,
	315, 316, 628, 0, 253, 409, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 276, 282, 421, 284,
	252, 328, 278, 387, 291, 0, 414, 0, 415, 0,
	0, 0, 0, 320, 287, 288, 352, 292, 298, 341,
	386, 326, 346, 250, 377, 353, 302, 0, 0, 650,
	624, 649, 651, 652, 648, 653, 654, 635, 538, 0,
	585, 646, 645, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 296,
	0, 337, 275, 0, 0, 613, 590, 591, 592, 537,
	593, 588, 589, 614, 583, 610, 611, 562, 586, 594,
	609, 595, 612, 615, 616, 655, 656, 601, 657, 598,
	617, 608, 607, 596, 584, 618, 619, 569, 564, 599,
	600, 587, 602, 603, 604, 565, 566, 567, 568, 362,
	579, 0, 393, 394, 395, 417, 379, 0, 432, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 270, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 428, 0, 0, 570, 0,
	0, 354, 309, 0, 0, 0, 0, 629, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 606, 605, 547, 557, 0, 0, 248,
	184, 0, 0, 0, 548, 0, 556, 549, 553, 552,
	550, 551, 0, 621, 0, 0, 0, 0, 0, 0,
	519, 532, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 530, 0,
	0, 0, 0, 580, 0, 531, 0, 0, 575, 554,
	558, 0, 0, 0, 0, 239, 359, 375, 249, 350,
	388, 254, 357, 244, 324, 347, 0, 0, 241, 373,
	356, 306, 289, 290, 240, 0, 342, 268, 281, 265,
	322, 555, 578, 582, 264, 643, 576, 383, 243, 0,
	382, 321, 369, 374, 307, 301, 242, 371, 305, 300,
	293, 272, 644, 285, 333, 299, 334, 286, 311, 310,
	312, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	573, 0, 0, 0, 385, 0, 0, 627, 0, 0,
	0, 358, 0, 0, 294, 0, 0, 0, 577, 0,
	345, 327, 640, 520, 0, 343, 297, 370, 335, 376,
	360, 384, 339, 336, 234, 361, 267, 308, 245, 247,
	262, 269, 271, 273, 274, 317, 318, 330, 349, 363,
	364, 365, 266, 255, 344, 256, 283, 257, 235, 259,
	258, 260, 351, 261, 237, 331, 368, 0, 279, 340,
	304, 238, 303, 332, 367, 366, 246, 392, 398, 399,
	404, 0, 405, 0, 0, 0, 413, 418, 419, 420,
	422, 423, 424, 425, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 397, 277, 231, 232, 435,
	625, 323, 0, 0, 639, 620, 622, 623, 626, 630,
	631, 632, 633, 634, 636, 638, 642, 434, 0, 0,
	0, 0, 0, 433, 329, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 355,
	378, 390, 408, 411, 0, 0, 0, 0, 236, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 581, 0,
	0, 313, 314, 315, 316, 628, 0, 253, 409, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 403, 276,
	282, 421, 284, 252, 328, 278, 387, 291, 0, 414,
	0, 415, 0, 0, 0, 0, 320, 287, 288, 352,
	292, 298, 341, 386, 326, 346, 250, 377, 353, 302,
	0, 0, 650, 624, 649, 651, 652, 648, 653, 654,
	635, 538, 0, 585, 646, 645, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 296, 0, 337, 275, 0, 0, 613, 590,
	591, 592, 537, 593, 588, 589, 614, 583, 610, 611,
	562, 586, 594, 609, 595, 612, 615, 616, 655, 656,
	601, 657, 598, 617, 608, 607, 596, 584, 618, 619,
	569, 564, 599, 600, 587, 602, 603, 604, 565, 566,
	567, 568, 362, 579, 0, 393, 394, 395, 417, 379,
	0, 432, 0, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	270, 0, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 0, 428, 0,
	0, 570, 0, 0, 354, 309, 0, 0, 0, 0,
	629, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 0, 0, 560, 606, 605, 547, 557,
	0, 0, 248, 184, 0, 0, 0, 548, 0, 556,
	549, 553, 552, 550, 551, 0, 621, 0, 0, 0,
	0, 0, 0, 0, 532, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 0, 0, 0, 0, 580, 0, 531, 0,
	0, 575, 554, 558, 0, 0, 0, 0, 239, 359,
	375, 249, 350, 388, 254, 357, 244, 324, 347, 0,
	0, 241, 373, 356, 306, 289, 290, 240, 0, 342,
	268, 281, 265, 322, 555, 578, 582, 264, 643, 576,
	383, 243, 0, 382, 321, 369, 374, 307, 301, 242,
	371, 305, 300, 293, 272, 644, 285, 333, 299, 334,
	286, 311, 310, 312, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 573, 0, 0, 0, 385, 0, 0,
	627, 0, 0, 0, 358, 0, 0, 294, 0, 0,
	0, 577, 0, 345, 327, 640, 0, 0, 343, 297,
	370, 335, 376, 360, 384, 339, 336, 234, 361, 267,
	308, 245, 247, 262, 269, 271, 273, 274, 317, 318,
	330, 349, 363, 364, 365, 266, 255, 344, 256, 283,
	257, 235, 259, 258, 260, 351, 261, 237, 331, 368,
	0, 279, 340, 304, 238, 303, 332, 367, 366, 246,
	392, 398, 399, 404, 0, 405, 0, 0, 0, 413,
	418, 419, 420, 422, 423, 424, 425, 0, 0, 0,
	0, 407, 0, 0, 0, 0, 0, 0, 397, 277,
	231, 232, 435, 625, 323, 0, 0, 639, 620, 622,
	623, 626, 630, 631, 632, 633, 634, 636, 638, 642,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 581, 0, 0, 313, 314, 315, 316, 628, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 650, 624, 649, 651, 652,
	648, 653, 654, 635, 538, 0, 585, 646, 645, 647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 613, 590, 591, 592, 537, 593, 588, 589, 614,
	583, 610, 611, 562, 586, 594, 609, 595, 612, 615,
	616, 655, 656, 601, 657, 598, 617, 608, 607, 596,
	584, 618, 619, 569, 564, 599, 600, 587, 602, 603,
	604, 565, 566, 567, 568, 0, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 161, 362, 50, 153, 129,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 0,
	0, 0, 146, 0, 270, 0, 155, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 0, 428, 0, 0, 112, 0, 0, 354, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 0, 0, 0, 0, 158, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 359, 375, 249, 350, 388, 254, 357,
	244, 324, 347, 0, 0, 241, 373, 356, 306, 289,
	290, 240, 0, 342, 268, 281, 265, 322, 0, 372,
	400, 264, 391, 0, 383, 243, 0, 382, 321, 369,
	374, 307, 301, 242, 371, 305, 300, 293, 272, 416,
	285, 333, 299, 334, 286, 311, 310, 312, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	128, 152, 159, 0, 98, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 176, 0, 0, 0, 358, 0,
	0, 294, 151, 145, 144, 401, 0, 345, 327, 56,
	0, 0, 343, 297, 370, 335, 376, 360, 384, 339,
	336, 234, 361, 267, 308, 245, 247, 262, 269, 271,
	273, 274, 317, 318, 330, 349, 363, 364, 365, 266,
	255, 344, 256, 283, 257, 235, 259, 258, 260, 351,
	261, 237, 331, 368, 0, 279, 340, 304, 238, 303,
	332, 367, 366, 246, 392, 398, 399, 404, 0, 405,
	147, 148, 149, 413, 418, 419, 420, 422, 423, 424,
	425, 0, 0, 0, 0, 407, 0, 0, 0, 0,
	0, 0, 397, 277, 231, 232, 380, 263, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 396,
	179, 0, 0, 426, 187, 0, 0, 0, 150, 0,
	188, 329, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 378, 390, 408,
	411, 0, 0, 0, 0, 236, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 406, 0, 0, 313, 314,
	315, 316, 280, 0, 253, 409, 338, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 0,
	0, 0, 0, 0, 402, 403, 276, 282, 421, 284,
	252, 328, 278, 387, 291, 0, 414, 0, 415, 0,
	0, 0, 0, 320, 287, 288, 352, 292, 298, 341,
	386, 326, 346, 250, 377, 353, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 296,
	130, 337, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 0,
	0, 0, 393, 394, 395, 417, 379, 362, 189, 38,
	177, 180, 182, 181, 0, 48, 5, 0, 325, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 0, 0, 0, 354,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1021, 0, 0,
	183, 0, 0, 547, 557, 0, 0, 248, 184, 0,
	0, 0, 548, 0, 556, 549, 553, 552, 550, 551,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 0, 0,
	0, 0, 0, 239, 359, 375, 249, 350, 388, 254,
	357, 244, 324, 347, 0, 0, 241, 373, 356, 306,
	289, 290, 240, 0, 342, 268, 281, 265, 322, 555,
	372, 400, 264, 391, 0, 383, 243, 0, 382, 321,
	369, 374, 307, 301, 242, 371, 305, 300, 293, 272,
	416, 285, 333, 299, 334, 286, 311, 310, 312, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 358,
	0, 0, 294, 0, 0, 0, 401, 0, 345, 327,
	0, 0, 0, 343, 297, 370, 335, 376, 360, 384,
	339, 336, 234, 361, 267, 308, 245, 247, 262, 269,
	271, 273, 274, 317, 318, 330, 349, 363, 364, 365,
	266, 255, 344, 256, 283, 257, 235, 259, 258, 260,
	351, 261, 237, 331, 368, 0, 279, 340, 304, 238,
	303, 332, 367, 366, 246, 392, 398, 399, 404, 0,
	405, 0, 0, 0, 413, 418, 419, 420, 422, 423,
	424, 425, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 397, 277, 231, 232, 435, 263, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	0, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	161, 362, 50, 153, 129, 0, 0, 0, 0, 0,
	0, 0, 325, 452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 428, 0, 0,
	0, 0, 0, 354, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 248, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 359, 375,
	249, 350, 388, 254, 357, 244, 324, 347, 0, 0,
	241, 373, 356, 306, 289, 290, 240, 0, 342, 268,
	281, 265, 322, 0, 372, 400, 264, 391, 0, 383,
	243, 0, 382, 321, 369, 374, 307, 301, 242, 371,
	305, 300, 293, 272, 416, 285, 333, 299, 334, 286,
	311, 310, 312, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 358, 0, 0, 294, 0, 0, 0,
	401, 0, 345, 327, 0, 0, 0, 343, 297, 370,
	335, 376, 360, 384, 339, 336, 234, 361, 267, 308,
	245, 247, 262, 269, 271, 273, 274, 317, 318, 330,
	349, 363, 364, 365, 266, 255, 344, 256, 283, 257,
	235, 259, 258, 260, 351, 261, 237, 331, 368, 0,
	279, 340, 304, 238, 303, 332, 367, 366, 246, 392,
	398, 399, 404, 0, 405, 0, 0, 0, 413, 418,
	419, 420, 422, 423, 424, 425, 0, 0, 0, 0,
	407, 0, 0, 0, 0, 0, 0, 397, 277, 231,
	232, 435, 263, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 396, 0, 0, 0, 426, 434,
	0, 0, 0, 0, 0, 433, 329, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 378, 390, 408, 411, 0, 0, 0, 0,
	236, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	406, 0, 0, 313, 314, 315, 316, 453, 455, 253,
	409, 338, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	403, 276, 282, 421, 284, 252, 328, 278, 387, 291,
	0, 414, 0, 415, 0, 0, 0, 0, 320, 287,
	288, 352, 292, 298, 341, 386, 326, 346, 250, 377,
	353, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 296, 130, 337, 275, 0, 0,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 0, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 0, 0, 0,
	227, 228, 229, 230, 362, 0, 0, 393, 394, 395,
	417, 379, 0, 432, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	428, 0, 0, 0, 0, 0, 354, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 248, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 837, 0, 0, 0, 0, 0, 0,
	239, 359, 375, 249, 350, 388, 254, 357, 244, 324,
	347, 0, 0, 1874, 1876, 1877, 1878, 1879, 1880, 1881,
	0, 1886, 1882, 1883, 1884, 1885, 0, 1869, 1870, 1871,
	1872, 835, 1855, 1875, 0, 1856, 321, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1873, 333,
	299, 334, 286, 311, 310, 312, 860, 862, 864, 866,
	869, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 0, 358, 0, 0, 294,
	0, 0, 0, 1868, 0, 345, 327, 0, 0, 0,
	343, 297, 370, 335, 376, 360, 384, 339, 336, 234,
	361, 267, 308, 245, 247, 262, 269, 271, 273, 274,
	317, 318, 330, 349, 363, 364, 365, 266, 255, 344,
	256, 283, 257, 235, 259, 258, 260, 351, 261, 237,
	331, 368, 0, 279, 340, 304, 238, 303, 332, 367,
	366, 246, 392, 398, 399, 404, 0, 405, 0, 0,
	0, 413, 418, 419, 420, 422, 423, 424, 425, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	397, 277, 231, 232, 435, 263, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 396, 0, 0,
	0, 426, 434, 0, 0, 0, 0, 0, 433, 329,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 355, 378, 390, 408, 411, 0,
	0, 0, 0, 236, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 406, 0, 0, 313, 314, 315, 316,
	280, 0, 253, 409, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 403, 276, 282, 421, 284, 252, 328,
	278, 387, 291, 0, 414, 0, 415, 0, 0, 0,
	0, 320, 287, 288, 352, 292, 298, 341, 386, 326,
	346, 250, 377, 353, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 859, 296, 0, 337,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 362, 0, 0,
	393, 394, 395, 417, 379, 0, 432, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 0, 0, 0, 354,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 248, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 1947, 1950, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 359, 375, 249, 350, 388, 254,
	357, 244, 324, 347, 0, 0, 241, 373, 356, 306,
	289, 290, 240, 0, 342, 268, 281, 265, 322, 0,
	372, 400, 264, 391, 0, 383, 243, 0, 382, 321,
	369, 374, 307, 301, 242, 371, 305, 300, 293, 272,
	416, 285, 333, 299, 334, 286, 311, 310, 312, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1951, 385, 0, 0, 0, 1946, 1937, 1945, 358,
	1943, 1948, 294, 0, 0, 0, 401, 0, 345, 327,
	0, 0, 0, 343, 297, 370, 335, 376, 360, 384,
	339, 336, 234, 361, 267, 308, 245, 247, 262, 269,
	271, 273, 274, 317, 318, 330, 349, 363, 364, 365,
	266, 255, 344, 256, 283, 257, 235, 259, 258, 260,
	351, 261, 237, 331, 368, 1949, 279, 340, 304, 238,
	303, 332, 367, 366, 246, 392, 398, 399, 404, 0,
	405, 0, 0, 0, 413, 418, 419, 420, 422, 423,
	424, 425, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 397, 277, 231, 232, 435, 263, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 1947, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1951, 385, 0, 0, 0, 1946,
	0, 1945, 358, 1943, 1948, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 1949, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 396, 0, 0, 0, 426, 434, 0,
	0, 0, 0, 0, 433, 329, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 406,
	0, 0, 313, 314, 315, 316, 280, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 0, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 0, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 227,
	228, 229, 230, 362, 0, 0, 393, 394, 395, 417,
	379, 0, 432, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1680, 0, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 0, 0, 0, 354, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 1681,
	0, 0, 0, 248, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	955, 956, 957, 954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 0, 372, 400, 264, 391,
	0, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 416, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 401, 0, 345, 327, 0, 0, 0, 343,
	297, 370, 335, 376, 360, 384, 339, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 263, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 396, 0, 0, 0,
	426, 434, 0, 0, 0, 0, 0, 433, 329, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 355, 378, 390, 408, 411, 0, 0,
	0, 0, 236, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 406, 0, 0, 313, 314, 315, 316, 280,
	0, 253, 409, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 403, 276, 282, 421, 284, 252, 328, 278,
	387, 291, 0, 414, 0, 415, 0, 0, 0, 0,
	320, 287, 288, 352, 292, 298, 341, 386, 326, 346,
	250, 377, 353, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 296, 0, 337, 275,
	0, 0, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 0, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 0,
	0, 0, 227, 228, 229, 230, 362, 0, 0, 393,
	394, 395, 417, 379, 0, 432, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 772, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 0, 428, 0, 0, 0, 0, 0, 354, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	779, 780, 0, 0, 0, 0, 248, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 359, 767, 249, 350, 388, 254, 357,
	244, 324, 347, 0, 0, 241, 373, 356, 306, 289,
	290, 240, 0, 342, 268, 281, 265, 322, 0, 372,
	400, 264, 391, 758, 383, 243, 757, 382, 321, 369,
	374, 307, 301, 242, 371, 305, 300, 293, 272, 416,
	285, 333, 299, 334, 286, 311, 310, 312, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 0, 358, 0,
	0, 294, 0, 0, 0, 401, 0, 345, 327, 0,
	0, 0, 343, 297, 370, 335, 376, 360, 384, 770,
	336, 234, 361, 267, 308, 245, 247, 262, 269, 271,
	273, 274, 317, 318, 330, 349, 363, 364, 365, 266,
	255, 344, 256, 283, 257, 235, 259, 258, 260, 351,
	261, 237, 331, 368, 0, 279, 340, 304, 238, 303,
	332, 367, 366, 246, 392, 398, 399, 404, 0, 405,
	0, 0, 0, 413, 418, 419, 420, 422, 423, 424,
	425, 0, 0, 0, 0, 407, 0, 0, 0, 0,
	0, 0, 397, 277, 231, 232, 435, 263, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 396,
	0, 0, 0, 426, 434, 0, 0, 0, 0, 0,
	433, 329, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 378, 390, 408,
	411, 0, 0, 0, 0, 236, 410, 0, 0, 0,
	0, 0, 0, 771, 0, 381, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 774, 0, 0, 313, 314,
	315, 316, 280, 0, 253, 409, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 276, 282, 421, 284,
	252, 328, 278, 387, 291, 0, 414, 0, 415, 0,
	0, 0, 0, 781, 768, 777, 769, 292, 298, 341,
	386, 326, 346, 250, 377, 353, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 296,
	0, 337, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 362,
	0, 0, 393, 394, 395, 417, 379, 0, 432, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 428, 0, 0, 0, 0,
	0, 354, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 248,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 359, 375, 249, 350,
	388, 254, 357, 244, 324, 347, 0, 0, 241, 373,
	356, 306, 289, 290, 240, 0, 342, 268, 281, 265,
	322, 0, 372, 400, 264, 391, 0, 383, 243, 0,
	382, 321, 369, 374, 307, 301, 242, 371, 305, 300,
	293, 272, 416, 285, 333, 299, 334, 286, 311, 310,
	312, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 385, 0, 0, 0, 1958, 1956,
	0, 358, 0, 1957, 294, 0, 0, 0, 401, 0,
	345, 327, 0, 0, 0, 343, 297, 370, 335, 376,
	360, 384, 339, 336, 234, 361, 267, 308, 245, 247,
	262, 269, 271, 273, 274, 317, 318, 330, 349, 363,
	364, 365, 266, 255, 344, 256, 283, 257, 235, 259,
	258, 260, 351, 261, 237, 331, 368, 0, 279, 340,
	304, 238, 303, 332, 367, 366, 246, 392, 398, 399,
	404, 0, 405, 0, 0, 0, 413, 418, 419, 420,
	422, 423, 424, 425, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 397, 277, 231, 232, 435,
	263, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 396, 0, 0, 0, 426, 434, 0, 0,
	0, 0, 0, 433, 329, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 355,
	378, 390, 408, 411, 0, 0, 0, 0, 236, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 406, 0,
	0, 313, 314, 315, 316, 280, 0, 253, 409, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 403, 276,
	282, 421, 284, 252, 328, 278, 387, 291, 0, 414,
	0, 415, 0, 0, 0, 0, 320, 287, 288, 352,
	292, 298, 341, 386, 326, 346, 250, 377, 353, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 296, 0, 337, 275, 0, 0, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	0, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 0, 0, 0, 227, 228,
	229, 230, 161, 362, 0, 393, 394, 395, 417, 379,
	0, 432, 0, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 112, 0, 0, 354, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 1724, 0, 183, 0, 0, 0,
	0, 0, 0, 248, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 0, 372, 400, 264, 391,
	0, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 416, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 401, 0, 345, 327, 0, 0, 0, 343,
	297, 370, 335, 376, 360, 384, 339, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 263, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 396, 0, 0, 0,
	426, 434, 0, 0, 0, 0, 0, 433, 329, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 355, 378, 390, 408, 411, 0, 0,
	0, 0, 236, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 406, 0, 0, 313, 314, 315, 316, 280,
	0, 253, 409, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 403, 276, 282, 421, 284, 252, 328, 278,
	387, 291, 0, 414, 0, 415, 0, 0, 0, 0,
	320, 287, 288, 352, 292, 298, 341, 386, 326, 346,
	250, 377, 353, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 296, 130, 337, 275,
	0, 0, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 0, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 0,
	0, 0, 227, 228, 229, 230, 161, 362, 0, 393,
	394, 395, 417, 379, 0, 432, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 112, 0, 0, 354,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 1715, 0,
	183, 0, 0, 0, 0, 0, 0, 248, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 359, 375, 249, 350, 388, 254,
	357, 244, 324, 347, 0, 0, 241, 373, 356, 306,
	289, 290, 240, 0, 342, 268, 281, 265, 322, 0,
	372, 400, 264, 391, 0, 383, 243, 0, 382, 321,
	369, 374, 307, 301, 242, 371, 305, 300, 293, 272,
	416, 285, 333, 299, 334, 286, 311, 310, 312, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 358,
	0, 0, 294, 0, 0, 0, 401, 0, 345, 327,
	0, 0, 0, 343, 297, 370, 335, 376, 360, 384,
	339, 336, 234, 361, 267, 308, 245, 247, 262, 269,
	271, 273, 274, 317, 318, 330, 349, 363, 364, 365,
	266, 255, 344, 256, 283, 257, 235, 259, 258, 260,
	351, 261, 237, 331, 368, 0, 279, 340, 304, 238,
	303, 332, 367, 366, 246, 392, 398, 399, 404, 0,
	405, 0, 0, 0, 413, 418, 419, 420, 422, 423,
	424, 425, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 397, 277, 231, 232, 435, 263, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 130, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	161, 362, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 0, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 428, 0, 0,
	112, 0, 0, 354, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1620, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 248, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 359, 375,
	249, 350, 388, 254, 357, 244, 324, 347, 0, 0,
	241, 373, 356, 306, 289, 290, 240, 0, 342, 268,
	281, 265, 322, 0, 372, 400, 264, 391, 0, 383,
	243, 0, 382, 321, 369, 374, 307, 301, 242, 371,
	305, 300, 293, 272, 416, 285, 333, 299, 334, 286,
	311, 310, 312, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 358, 0, 0, 294, 0, 0, 0,
	401, 0, 345, 327, 0, 0, 0, 343, 297, 370,
	335, 376, 360, 384, 339, 336, 234, 361, 267, 308,
	245, 247, 262, 269, 271, 273, 274, 317, 318, 330,
	349, 363, 364, 365, 266, 255, 344, 256, 283, 257,
	235, 259, 258, 260, 351, 261, 237, 331, 368, 0,
	279, 340, 304, 238, 303, 332, 367, 366, 246, 392,
	398, 399, 404, 0, 405, 0, 0, 0, 413, 418,
	419, 420, 422, 423, 424, 425, 0, 0, 0, 0,
	407, 0, 0, 0, 0, 0, 0, 397, 277, 231,
	232, 435, 263, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 396, 0, 0, 0, 426, 434,
	0, 0, 0, 0, 0, 433, 329, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 378, 390, 408, 411, 0, 0, 0, 0,
	236, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	406, 0, 0, 313, 314, 315, 316, 280, 0, 253,
	409, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	403, 276, 282, 421, 284, 252, 328, 278, 387, 291,
	0, 414, 0, 415, 0, 0, 0, 0, 320, 287,
	288, 352, 292, 298, 341, 386, 326, 346, 250, 377,
	353, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 296, 130, 337, 275, 0, 0,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 0, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 0, 0, 0,
	227, 228, 229, 230, 362, 0, 0, 393, 394, 395,
	417, 379, 0, 432, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	428, 0, 0, 0, 0, 0, 354, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 779, 780,
	0, 0, 0, 0, 248, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 359, 375, 249, 350, 388, 254, 357, 244, 324,
	347, 0, 0, 241, 373, 356, 306, 289, 290, 240,
	0, 342, 268, 281, 265, 322, 0, 372, 400, 264,
	391, 758, 383, 243, 757, 382, 321, 369, 374, 307,
	301, 242, 371, 305, 300, 293, 272, 416, 285, 333,
	299, 334, 286, 311, 310, 312, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 0, 358, 0, 0, 294,
	0, 0, 0, 401, 0, 345, 327, 0, 0, 0,
	343, 297, 370, 335, 376, 360, 384, 339, 336, 234,
	361, 267, 308, 245, 247, 262, 269, 271, 273, 274,
	317, 318, 330, 349, 363, 364, 365, 266, 255, 344,
	256, 283, 257, 235, 259, 258, 260, 351, 261, 237,
	331, 368, 0, 279, 340, 304, 238, 303, 332, 367,
	366, 246, 392, 398, 399, 404, 0, 405, 0, 0,
	0, 413, 418, 419, 420, 422, 423, 424, 425, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	397, 277, 231, 232, 435, 263, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 396, 0, 0,
	0, 426, 434, 0, 0, 0, 0, 0, 433, 329,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 355, 378, 390, 408, 411, 0,
	0, 0, 0, 236, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 406, 0, 0, 313, 314, 315, 316,
	280, 0, 253, 409, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 403, 276, 282, 421, 284, 252, 328,
	278, 387, 291, 0, 414, 0, 415, 0, 0, 0,
	0, 781, 1639, 777, 1640, 292, 298, 341, 386, 326,
	346, 250, 377, 353, 778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 296, 0, 337,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 362, 0, 0,
	393, 394, 395, 417, 379, 0, 432, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 2346, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 0, 0, 0, 354,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 248, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 359, 375, 249, 350, 388, 254,
	357, 244, 324, 347, 0, 0, 241, 373, 356, 306,
	289, 290, 240, 0, 342, 268, 281, 265, 322, 0,
	372, 400, 264, 391, 0, 383, 243, 0, 382, 321,
	369, 374, 307, 301, 242, 371, 305, 300, 293, 272,
	416, 285, 333, 299, 334, 286, 311, 310, 312, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 2349, 0, 0, 2348, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 358,
	0, 0, 294, 0, 0, 0, 401, 0, 345, 327,
	0, 0, 0, 343, 297, 370, 335, 376, 360, 384,
	339, 336, 234, 361, 267, 308, 245, 247, 262, 269,
	271, 273, 274, 317, 318, 330, 349, 363, 364, 365,
	266, 255, 344, 256, 283, 257, 235, 259, 258, 260,
	351, 261, 237, 331, 368, 0, 279, 340, 304, 238,
	303, 332, 367, 366, 246, 392, 398, 399, 404, 0,
	405, 0, 0, 0, 413, 418, 419, 420, 422, 423,
	424, 425, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 397, 277, 231, 232, 435, 263, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 1198,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 1196, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1194,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 396, 0, 0, 0, 426, 434, 0,
	0, 0, 0, 0, 433, 329, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 406,
	0, 0, 313, 314, 315, 316, 280, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 0, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 0, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 227,
	228, 229, 230, 362, 0, 0, 393, 394, 395, 417,
	379, 0, 432, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 1192, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 0, 0, 0, 354, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 1196,
	0, 0, 0, 248, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1194, 0, 0, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 0, 372, 400, 264, 391,
	0, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 416, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 401, 0, 345, 327, 0, 0, 0, 343,
	297, 370, 335, 376, 360, 384, 339, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 263, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 396, 0, 0, 0,
	426, 434, 0, 0, 0, 0, 0, 433, 329, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 355, 378, 390, 408, 411, 0, 0,
	0, 0, 236, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 406, 0, 0, 313, 314, 315, 316, 280,
	0, 253, 409, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 403, 276, 282, 421, 284, 252, 328, 278,
	387, 291, 0, 414, 0, 415, 0, 0, 0, 0,
	320, 287, 288, 352, 292, 298, 341, 386, 326, 346,
	250, 377, 353, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 296, 0, 337, 275,
	0, 0, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 0, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 0,
	0, 0, 227, 228, 229, 230, 362, 0, 0, 393,
	394, 395, 417, 379, 0, 432, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 0, 428, 0, 0, 0, 0, 0, 354, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3078, 0, 183,
	606, 0, 0, 0, 0, 0, 248, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 359, 375, 249, 350, 388, 254, 357,
	244, 324, 347, 0, 0, 241, 373, 356, 306, 289,
	290, 240, 0, 342, 268, 281, 265, 322, 0, 372,
	400, 264, 391, 0, 383, 243, 0, 382, 321, 369,
	374, 307, 301, 242, 371, 305, 300, 293, 272, 416,
	285, 333, 299, 334, 286, 311, 310, 312, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 0, 358, 0,
	0, 294, 0, 0, 0, 401, 0, 345, 327, 0,
	0, 0, 343, 297, 370, 335, 376, 360, 384, 339,
	336, 234, 361, 267, 308, 245, 247, 262, 269, 271,
	273, 274, 317, 318, 330, 349, 363, 364, 365, 266,
	255, 344, 256, 283, 257, 235, 259, 258, 260, 351,
	261, 237, 331, 368, 0, 279, 340, 304, 238, 303,
	332, 367, 366, 246, 392, 398, 399, 404, 0, 405,
	0, 0, 0, 413, 418, 419, 420, 422, 423, 424,
	425, 0, 0, 0, 0, 407, 0, 0, 0, 0,
	0, 0, 397, 277, 231, 232, 435, 263, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 396,
	0, 0, 0, 426, 434, 0, 0, 0, 0, 0,
	433, 329, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 378, 390, 408,
	411, 0, 0, 0, 0, 236, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 406, 0, 0, 313, 314,
	315, 316, 280, 0, 253, 409, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 276, 282, 421, 284,
	252, 328, 278, 387, 291, 0, 414, 0, 415, 0,
	0, 0, 0, 320, 287, 288, 352, 292, 298, 341,
	386, 326, 346, 250, 377, 353, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 296,
	0, 337, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 362,
	0, 0, 393, 394, 395, 417, 379, 0, 432, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 428, 0, 0, 0, 0,
	0, 354, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 1196, 0, 0, 0, 248,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1194, 0,
	0, 0, 0, 0, 0, 239, 359, 375, 249, 350,
	388, 254, 357, 244, 324, 347, 0, 0, 241, 373,
	356, 306, 289, 290, 240, 0, 342, 268, 281, 265,
	322, 0, 372, 400, 264, 391, 0, 383, 243, 0,
	382, 321, 369, 374, 307, 301, 242, 371, 305, 300,
	293, 272, 416, 285, 333, 299, 334, 286, 311, 310,
	312, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	0, 358, 0, 0, 294, 0, 0, 0, 401, 0,
	345, 327, 0, 0, 0, 343, 297, 370, 335, 376,
	360, 384, 339, 336, 234, 361, 267, 308, 245, 247,
	262, 269, 271, 273, 274, 317, 318, 330, 349, 363,
	364, 365, 266, 255, 344, 256, 283, 257, 235, 259,
	258, 260, 351, 261, 237, 331, 368, 0, 279, 340,
	304, 238, 303, 332, 367, 366, 246, 392, 398, 399,
	404, 0, 405, 0, 0, 0, 413, 418, 419, 420,
	422, 423, 424, 425, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 397, 277, 231, 232, 435,
	263, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 396, 0, 0, 0, 426, 434, 0, 0,
	0, 0, 0, 433, 329, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 355,
	378, 390, 408, 411, 0, 0, 0, 0, 236, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 406, 0,
	0, 313, 314, 315, 316, 280, 0, 253, 409, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 403, 276,
	282, 421, 284, 252, 328, 278, 387, 291, 0, 414,
	0, 415, 0, 0, 0, 0, 320, 287, 288, 352,
	292, 298, 341, 386, 326, 346, 250, 377, 353, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 296, 0, 337, 275, 0, 0, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	0, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 0, 0, 0, 227, 228,
	229, 230, 362, 0, 0, 393, 394, 395, 417, 379,
	0, 432, 0, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 0, 428, 0,
	0, 0, 0, 0, 354, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 1196, 0,
	0, 0, 248, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2737, 0, 0, 0, 0, 0, 0, 239, 359,
	375, 249, 350, 388, 254, 357, 244, 324, 347, 0,
	0, 241, 373, 356, 306, 289, 290, 240, 0, 342,
	268, 281, 265, 322, 0, 372, 400, 264, 391, 0,
	383, 243, 0, 382, 321, 369, 374, 307, 301, 242,
	371, 305, 300, 293, 272, 416, 285, 333, 299, 334,
	286, 311, 310, 312, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 0, 358, 0, 0, 294, 0, 0,
	0, 401, 0, 345, 327, 0, 0, 0, 343, 297,
	370, 335, 376, 360, 384, 339, 336, 234, 361, 267,
	308, 245, 247, 262, 269, 271, 273, 274, 317, 318,
	330, 349, 363, 364, 365, 266, 255, 344, 256, 283,
	257, 235, 259, 258, 260, 351, 261, 237, 331, 368,
	0, 279, 340, 304, 238, 303, 332, 367, 366, 246,
	392, 398, 399, 404, 0, 405, 0, 0, 0, 413,
	418, 419, 420, 422, 423, 424, 425, 0, 0, 0,
	0, 407, 0, 0, 0, 0, 0, 0, 397, 277,
	231, 232, 435, 263, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2030, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 2032, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 396, 0,
	0, 0, 426, 434, 0, 0, 0, 0, 0, 433,
	329, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 355, 378, 390, 408, 411,
	0, 0, 0, 0, 236, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 406, 0, 0, 313, 314, 315,
	316, 280, 0, 253, 409, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 403, 276, 282, 421, 284, 252,
	328, 278, 387, 291, 0, 414, 0, 415, 0, 0,
	0, 0, 320, 287, 288, 352, 292, 298, 341, 386,
	326, 346, 250, 377, 353, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 296, 0,
	337, 275, 0, 0, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 0, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 0, 0, 0, 227, 228, 229, 230, 362, 0,
	0, 393, 394, 395, 417, 379, 0, 432, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 2051, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 428, 0, 0, 0, 0, 0,
	354, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 1196, 0, 0, 0, 248, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 359, 375, 249, 350, 388,
	254, 357, 244, 324, 347, 0, 0, 241, 373, 356,
	306, 289, 290, 240, 0, 342, 268, 281, 265, 322,
	0, 372, 400, 264, 391, 0, 383, 243, 0, 382,
	321, 369, 374, 307, 301, 242, 371, 305, 300, 293,
	272, 416, 285, 333, 299, 334, 286, 311, 310, 312,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 0,
	358, 0, 0, 294, 0, 0, 0, 401, 0, 345,
	327, 0, 0, 0, 343, 297, 370, 335, 376, 360,
	384, 339, 336, 234, 361, 267, 308, 245, 247, 262,
	269, 271, 273, 274, 317, 318, 330, 349, 363, 364,
	365, 266, 255, 344, 256, 283, 257, 235, 259, 258,
	260, 351, 261, 237, 331, 368, 0, 279, 340, 304,
	238, 303, 332, 367, 366, 246, 392, 398, 399, 404,
	0, 405, 0, 0, 0, 413, 418, 419, 420, 422,
	423, 424, 425, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 397, 277, 231, 232, 435, 263,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 396, 0, 0, 0, 426, 434, 0, 0, 0,
	0, 0, 433, 329, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 355, 378,
	390, 408, 411, 0, 0, 0, 0, 236, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 389, 0, 0, 0, 0, 0, 406, 0, 0,
	313, 314, 315, 316, 280, 0, 253, 409, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 403, 276, 282,
	421, 284, 252, 328, 278, 387, 291, 0, 414, 0,
	415, 0, 0, 0, 0, 320, 287, 288, 352, 292,
	298, 341, 386, 326, 346, 250, 377, 353, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 296, 0, 337, 275, 0, 0, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 0,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 0, 0, 0, 227, 228, 229,
	230, 362, 0, 0, 393, 394, 395, 417, 379, 0,
	432, 0, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 428, 0, 0,
	0, 0, 0, 354, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3160, 0, 183, 0, 0, 0, 0, 0,
	0, 248, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 359, 375,
	249, 350, 388, 254, 357, 244, 324, 347, 0, 0,
	241, 373, 356, 306, 289, 290, 240, 0, 342, 268,
	281, 265, 322, 0, 372, 400, 264, 391, 0, 383,
	243, 0, 382, 321, 369, 374, 307, 301, 242, 371,
	305, 300, 293, 272, 416, 285, 333, 299, 334, 286,
	311, 310, 312, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 358, 0, 0, 294, 0, 0, 0,
	401, 0, 345, 327, 0, 0, 0, 343, 297, 370,
	335, 376, 360, 384, 339, 336, 234, 361, 267, 308,
	245, 247, 262, 269, 271, 273, 274, 317, 318, 330,
	349, 363, 364, 365, 266, 255, 344, 256, 283, 257,
	235, 259, 258, 260, 351, 261, 237, 331, 368, 0,
	279, 340, 304, 238, 303, 332, 367, 366, 246, 392,
	398, 399, 404, 0, 405, 0, 0, 0, 413, 418,
	419, 420, 422, 423, 424, 425, 0, 0, 0, 0,
	407, 0, 0, 0, 0, 0, 0, 397, 277, 231,
	232, 435, 263, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 396, 0, 0, 0, 426, 434,
	0, 0, 0, 0, 0, 433, 329, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 378, 390, 408, 411, 0, 0, 0, 0,
	236, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	406, 0, 0, 313, 314, 315, 316, 280, 0, 253,
	409, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	403, 276, 282, 421, 284, 252, 328, 278, 387, 291,
	0, 414, 0, 415, 0, 0, 0, 0, 320, 287,
	288, 352, 292, 298, 341, 386, 326, 346, 250, 377,
	353, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 296, 0, 337, 275, 0, 0,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 0, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 0, 0, 0,
	227, 228, 229, 230, 362, 0, 0, 393, 394, 395,
	417, 379, 0, 432, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	428, 0, 0, 0, 0, 0, 354, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 606, 0,
	0, 0, 0, 0, 248, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 359, 375, 249, 350, 388, 254, 357, 244, 324,
	347, 0, 0, 241, 373, 356, 306, 289, 290, 240,
	0, 342, 268, 281, 265, 322, 0, 372, 400, 264,
	391, 0, 383, 243, 0, 382, 321, 369, 374, 307,
	301, 242, 371, 305, 300, 293, 272, 416, 285, 333,
	299, 334, 286, 311, 310, 312, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 0, 358, 0, 0, 294,
	0, 0, 0, 401, 0, 345, 327, 0, 0, 0,
	343, 297, 370, 335, 376, 360, 384, 339, 336, 234,
	361, 267, 308, 245, 247, 262, 269, 271, 273, 274,
	317, 318, 330, 349, 363, 364, 365, 266, 255, 344,
	256, 283, 257, 235, 259, 258, 260, 351, 261, 237,
	331, 368, 0, 279, 340, 304, 238, 303, 332, 367,
	366, 246, 392, 398, 399, 404, 0, 405, 0, 0,
	0, 413, 418, 419, 420, 422, 423, 424, 425, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	397, 277, 231, 232, 435, 263, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 396, 0, 0,
	0, 426, 434, 0, 0, 0, 0, 0, 433, 329,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 355, 378, 390, 408, 411, 0,
	0, 0, 0, 236, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 406, 0, 0, 313, 314, 315, 316,
	280, 0, 253, 409, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 403, 276, 282, 421, 284, 252, 328,
	278, 387, 291, 0, 414, 0, 415, 0, 0, 0,
	0, 320, 287, 288, 352, 292, 298, 341, 386, 326,
	346, 250, 377, 353, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 296, 0, 337,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 362, 0, 0,
	393, 394, 395, 417, 379, 0, 432, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 0, 0, 0, 354,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3093, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 248, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 359, 375, 249, 350, 388, 254,
	357, 244, 324, 347, 0, 0, 241, 373, 356, 306,
	289, 290, 240, 0, 342, 268, 281, 265, 322, 0,
	372, 400, 264, 391, 0, 383, 243, 0, 382, 321,
	369, 374, 307, 301, 242, 371, 305, 300, 293, 272,
	416, 285, 333, 299, 334, 286, 311, 310, 312, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 358,
	0, 0, 294, 0, 0, 0, 401, 0, 345, 327,
	0, 0, 0, 343, 297, 370, 335, 376, 360, 384,
	339, 336, 234, 361, 267, 308, 245, 247, 262, 269,
	271, 273, 274, 317, 318, 330, 349, 363, 364, 365,
	266, 255, 344, 256, 283, 257, 235, 259, 258, 260,
	351, 261, 237, 331, 368, 0, 279, 340, 304, 238,
	303, 332, 367, 366, 246, 392, 398, 399, 404, 0,
	405, 0, 0, 0, 413, 418, 419, 420, 422, 423,
	424, 425, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 397, 277, 231, 232, 435, 263, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 3026,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 396, 0, 0, 0, 426, 434, 0,
	0, 0, 0, 0, 433, 329, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 406,
	0, 0, 313, 314, 315, 316, 280, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 0, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 0, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 227,
	228, 229, 230, 362, 0, 0, 393, 394, 395, 417,
	379, 0, 432, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 0, 0, 0, 354, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2835, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 248, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 0, 372, 400, 264, 391,
	0, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 416, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 401, 0, 345, 327, 0, 0, 0, 343,
	297, 370, 335, 376, 360, 384, 339, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 263, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 396, 0, 0, 0,
	426, 434, 0, 0, 0, 0, 0, 433, 329, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 355, 378, 390, 408, 411, 0, 0,
	0, 0, 236, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 406, 0, 0, 313, 314, 315, 316, 280,
	0, 253, 409, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 403, 276, 282, 421, 284, 252, 328, 278,
	387, 291, 0, 414, 0, 415, 0, 0, 0, 0,
	320, 287, 288, 352, 292, 298, 341, 386, 326, 346,
	250, 377, 353, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 296, 0, 337, 275,
	0, 0, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 0, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 0,
	0, 0, 227, 228, 229, 230, 362, 0, 0, 393,
	394, 395, 417, 379, 0, 432, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 0, 428, 0, 0, 0, 0, 0, 354, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 359, 375, 249, 350, 388, 254, 357,
	244, 324, 347, 0, 0, 241, 373, 356, 306, 289,
	290, 240, 0, 342, 268, 281, 265, 322, 0, 372,
	400, 264, 391, 0, 383, 243, 0, 382, 321, 369,
	374, 307, 301, 242, 371, 305, 300, 293, 272, 416,
	285, 333, 299, 334, 286, 311, 310, 312, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 0, 2884, 0, 0, 358, 0,
	0, 294, 0, 0, 0, 401, 0, 345, 327, 0,
	0, 0, 343, 297, 370, 335, 376, 360, 384, 339,
	336, 234, 361, 267, 308, 245, 247, 262, 269, 271,
	273, 274, 317, 318, 330, 349, 363, 364, 365, 266,
	255, 344, 256, 283, 257, 235, 259, 258, 260, 351,
	261, 237, 331, 368, 0, 279, 340, 304, 238, 303,
	332, 367, 366, 246, 392, 398, 399, 404, 0, 405,
	0, 0, 0, 413, 418, 419, 420, 422, 423, 424,
	425, 0, 0, 0, 0, 407, 0, 0, 0, 0,
	0, 0, 397, 277, 231, 232, 435, 263, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 396,
	0, 0, 0, 426, 434, 0, 0, 0, 0, 0,
	433, 329, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 378, 390, 408,
	411, 0, 0, 0, 0, 236, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 406, 0, 0, 313, 314,
	315, 316, 280, 0, 253, 409, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 276, 282, 421, 284,
	252, 328, 278, 387, 291, 0, 414, 0, 415, 0,
	0, 0, 0, 320, 287, 288, 352, 292, 298, 341,
	386, 326, 346, 250, 377, 353, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 296,
	0, 337, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 362,
	0, 0, 393, 394, 395, 417, 379, 0, 432, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 428, 0, 0, 0, 0,
	0, 354, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 248,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 359, 375, 249, 350,
	388, 254, 357, 244, 324, 347, 0, 0, 241, 373,
	356, 306, 289, 290, 240, 0, 342, 268, 281, 265,
	322, 0, 372, 400, 264, 391, 0, 383, 243, 0,
	382, 321, 369, 374, 307, 301, 242, 371, 305, 300,
	293, 272, 416, 285, 333, 299, 334, 286, 311, 310,
	312, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	0, 358, 0, 0, 294, 0, 0, 0, 401, 0,
	345, 327, 0, 0, 0, 343, 297, 370, 335, 376,
	360, 384, 339, 336, 234, 361, 267, 308, 245, 247,
	262, 269, 271, 273, 274, 317, 318, 330, 349, 363,
	364, 365, 266, 255, 344, 256, 283, 257, 235, 259,
	258, 260, 351, 261, 237, 331, 368, 0, 279, 340,
	304, 238, 303, 332, 367, 366, 246, 392, 398, 399,
	404, 0, 405, 0, 0, 0, 413, 418, 419, 420,
	422, 423, 424, 425, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 397, 277, 231, 232, 435,
	263, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 396, 0, 0, 0, 426, 434, 0, 0,
	0, 0, 0, 433, 329, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 355,
	378, 390, 408, 411, 0, 0, 0, 0, 236, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 406, 0,
	0, 313, 314, 315, 316, 280, 0, 253, 409, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 403, 276,
	282, 421, 284, 252, 328, 278, 387, 291, 0, 414,
	0, 415, 0, 0, 0, 0, 320, 287, 288, 352,
	292, 298, 341, 386, 326, 346, 250, 377, 353, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 296, 0, 337, 275, 0, 0, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	0, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 0, 0, 0, 227, 228,
	229, 230, 362, 0, 0, 393, 394, 395, 417, 379,
	0, 432, 0, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 0, 428, 0,
	0, 0, 0, 0, 354, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1620, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 248, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 359,
	375, 249, 350, 388, 254, 357, 244, 324, 347, 0,
	0, 241, 373, 356, 306, 289, 290, 240, 0, 342,
	268, 281, 265, 322, 0, 372, 400, 264, 391, 0,
	383, 243, 0, 382, 321, 369, 374, 307, 301, 242,
	371, 305, 300, 293, 272, 416, 285, 333, 299, 334,
	286, 311, 310, 312, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 0, 358, 0, 0, 294, 0, 0,
	0, 401, 0, 345, 327, 0, 0, 0, 343, 297,
	370, 335, 376, 360, 384, 339, 336, 234, 361, 267,
	308, 245, 247, 262, 269, 271, 273, 274, 317, 318,
	330, 349, 363, 364, 365, 266, 255, 344, 256, 283,
	257, 235, 259, 258, 260, 351, 261, 237, 331, 368,
	0, 279, 340, 304, 238, 303, 332, 367, 366, 246,
	392, 398, 399, 404, 0, 405, 0, 0, 0, 413,
	418, 419, 420, 422, 423, 424, 425, 0, 0, 0,
	0, 407, 0, 0, 0, 0, 0, 0, 397, 277,
	231, 232, 435, 263, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 396, 0,
	0, 0, 426, 434, 0, 0, 0, 0, 0, 433,
	329, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 355, 378, 390, 408, 411,
	0, 0, 0, 0, 236, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 406, 0, 0, 313, 314, 315,
	316, 280, 0, 253, 409, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 403, 276, 282, 421, 284, 252,
	328, 278, 387, 291, 0, 414, 0, 415, 0, 0,
	0, 0, 320, 287, 288, 352, 292, 298, 341, 386,
	326, 346, 250, 377, 353, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 296, 0,
	337, 275, 0, 0, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 0, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 0, 0, 0, 227, 228, 229, 230, 362, 0,
	0, 393, 394, 395, 417, 379, 0, 432, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 428, 0, 0, 0, 0, 0,
	354, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 2504, 0, 0, 0, 248, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 359, 375, 249, 350, 388,
	254, 357, 244, 324, 347, 0, 0, 241, 373, 356,
	306, 289, 290, 240, 0, 342, 268, 281, 265, 322,
	0, 372, 400, 264, 391, 0, 383, 243, 0, 382,
	321, 369, 374, 307, 301, 242, 371, 305, 300, 293,
	272, 416, 285, 333, 299, 334, 286, 311, 310, 312,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 0,
	358, 0, 0, 294, 0, 0, 0, 401, 0, 345,
	327, 0, 0, 0, 343, 297, 370, 335, 376, 360,
	384, 339, 336, 234, 361, 267, 308, 245, 247, 262,
	269, 271, 273, 274, 317, 318, 330, 349, 363, 364,
	365, 266, 255, 344, 256, 283, 257, 235, 259, 258,
	260, 351, 261, 237, 331, 368, 0, 279, 340, 304,
	238, 303, 332, 367, 366, 246, 392, 398, 399, 404,
	0, 405, 0, 0, 0, 413, 418, 419, 420, 422,
	423, 424, 425, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 397, 277, 231, 232, 435, 263,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 396, 0, 0, 0, 426, 434, 0, 0, 0,
	0, 0, 433, 329, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 355, 378,
	390, 408, 411, 0, 0, 0, 0, 236, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 389, 0, 0, 0, 0, 0, 406, 0, 0,
	313, 314, 315, 316, 280, 0, 253, 409, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 403, 276, 282,
	421, 284, 252, 328, 278, 387, 291, 0, 414, 0,
	415, 0, 0, 0, 0, 320, 287, 288, 352, 292,
	298, 341, 386, 326, 346, 250, 377, 353, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 296, 0, 337, 275, 0, 0, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 0,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 0, 0, 0, 227, 228, 229,
	230, 362, 0, 0, 393, 394, 395, 417, 379, 0,
	432, 0, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 428, 0, 0,
	0, 0, 0, 354, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 248, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 359, 375,
	249, 350, 388, 254, 357, 244, 324, 347, 0, 0,
	241, 373, 356, 306, 289, 290, 240, 0, 342, 268,
	281, 265, 322, 0, 372, 400, 264, 391, 0, 383,
	243, 0, 382, 321, 369, 374, 307, 301, 242, 371,
	305, 300, 293, 272, 416, 285, 333, 299, 334, 286,
	311, 310, 312, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 358, 0, 0, 294, 0, 0, 0,
	401, 0, 345, 327, 0, 0, 0, 343, 297, 370,
	335, 376, 360, 384, 339, 336, 234, 361, 267, 308,
	245, 247, 262, 269, 271, 273, 274, 317, 318, 330,
	349, 363, 364, 365, 266, 255, 344, 256, 283, 257,
	235, 259, 258, 260, 351, 261, 237, 331, 368, 0,
	279, 340, 304, 238, 303, 332, 367, 366, 246, 392,
	398, 399, 404, 0, 405, 0, 0, 0, 413, 418,
	419, 420, 422, 423, 424, 425, 0, 0, 0, 0,
	407, 0, 0, 0, 0, 0, 0, 397, 277, 231,
	232, 435, 263, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 396, 0, 0, 0, 426, 434,
	0, 0, 0, 0, 0, 433, 329, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 378, 390, 408, 411, 0, 0, 0, 0,
	236, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	406, 0, 0, 313, 314, 315, 316, 280, 0, 253,
	409, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	403, 276, 282, 421, 284, 252, 328, 278, 387, 291,
	0, 414, 0, 415, 0, 0, 0, 0, 320, 287,
	288, 352, 292, 298, 341, 386, 326, 346, 250, 377,
	353, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 296, 0, 337, 275, 0, 0,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 0, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 0, 0, 0,
	227, 228, 229, 230, 362, 0, 0, 393, 394, 395,
	417, 379, 0, 432, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	428, 0, 0, 0, 0, 0, 354, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	1196, 0, 0, 0, 248, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 359, 375, 249, 350, 388, 254, 357, 244, 324,
	347, 0, 0, 241, 373, 356, 306, 289, 290, 240,
	0, 342, 268, 281, 265, 322, 0, 372, 400, 264,
	391, 0, 383, 243, 0, 382, 321, 369, 374, 307,
	301, 242, 371, 305, 300, 293, 272, 416, 285, 333,
	299, 334, 286, 311, 310, 312, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 0, 358, 0, 0, 294,
	0, 0, 0, 401, 0, 345, 327, 0, 0, 0,
	343, 297, 370, 335, 376, 360, 384, 339, 336, 234,
	361, 267, 308, 245, 247, 262, 269, 271, 273, 274,
	317, 318, 330, 349, 363, 364, 365, 266, 255, 344,
	256, 283, 257, 235, 259, 258, 260, 351, 261, 237,
	331, 368, 0, 279, 340, 304, 238, 303, 332, 367,
	366, 246, 392, 398, 399, 404, 0, 405, 0, 0,
	0, 413, 418, 419, 420, 422, 423, 424, 425, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	397, 277, 231, 232, 435, 263, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 396, 0, 0,
	0, 426, 434, 0, 0, 0, 0, 0, 433, 329,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 355, 378, 390, 408, 411, 0,
	0, 0, 0, 236, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 406, 0, 0, 313, 314, 315, 316,
	280, 0, 253, 409, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 403, 276, 282, 421, 284, 252, 328,
	278, 387, 291, 0, 414, 0, 415, 0, 0, 0,
	0, 320, 287, 288, 352, 292, 298, 341, 386, 326,
	346, 250, 377, 353, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 296, 0, 337,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 362, 0, 0,
	393, 394, 395, 417, 379, 0, 432, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 0, 0, 0, 354,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 2032, 0, 0, 0, 248, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 359, 375, 249, 350, 388, 254,
	357, 244, 324, 347, 0, 0, 241, 373, 356, 306,
	289, 290, 240, 0, 342, 268, 281, 265, 322, 0,
	372, 400, 264, 391, 0, 383, 243, 0, 382, 321,
	369, 374, 307, 301, 242, 371, 305, 300, 293, 272,
	416, 285, 333, 299, 334, 286, 311, 310, 312, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 358,
	0, 0, 294, 0, 0, 0, 401, 0, 345, 327,
	0, 0, 0, 343, 297, 370, 335, 376, 360, 384,
	339, 336, 234, 361, 267, 308, 245, 247, 262, 269,
	271, 273, 274, 317, 318, 330, 349, 363, 364, 365,
	266, 255, 344, 256, 283, 257, 235, 259, 258, 260,
	351, 261, 237, 331, 368, 0, 279, 340, 304, 238,
	303, 332, 367, 366, 246, 392, 398, 399, 404, 0,
	405, 0, 0, 0, 413, 418, 419, 420, 422, 423,
	424, 425, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 397, 277, 231, 232, 435, 263, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 396, 0, 0, 0, 426, 434, 0,
	0, 0, 0, 0, 433, 329, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 406,
	0, 0, 313, 314, 315, 316, 280, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 0, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 0, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 227,
	228, 229, 230, 362, 0, 0, 393, 394, 395, 417,
	379, 0, 432, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 0, 0, 0, 354, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 248, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2069, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 0, 372, 400, 264, 391,
	0, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 416, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 401, 0, 345, 327, 0, 0, 0, 343,
	297, 370, 335, 376, 360, 384, 339, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 263, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 396, 0, 0, 0,
	426, 434, 0, 0, 0, 0, 0, 433, 329, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 355, 378, 390, 408, 411, 0, 0,
	0, 0, 236, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 406, 0, 0, 313, 314, 315, 316, 280,
	0, 253, 409, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 403, 276, 282, 421, 284, 252, 328, 278,
	387, 291, 0, 414, 0, 415, 0, 0, 0, 0,
	320, 287, 288, 352, 292, 298, 341, 386, 326, 346,
	250, 377, 353, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 296, 0, 337, 275,
	0, 0, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 0, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 0,
	0, 0, 227, 228, 229, 230, 362, 0, 0, 393,
	394, 395, 417, 379, 0, 432, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 0, 428, 0, 0, 0, 0, 0, 354, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 2067, 0, 0, 0, 248, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 359, 375, 249, 350, 388, 254, 357,
	244, 324, 347, 0, 0, 241, 373, 356, 306, 289,
	290, 240, 0, 342, 268, 281, 265, 322, 0, 372,
	400, 264, 391, 0, 383, 243, 0, 382, 321, 369,
	374, 307, 301, 242, 371, 305, 300, 293, 272, 416,
	285, 333, 299, 334, 286, 311, 310, 312, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 0, 358, 0,
	0, 294, 0, 0, 0, 401, 0, 345, 327, 0,
	0, 0, 343, 297, 370, 335, 376, 360, 384, 339,
	336, 234, 361, 267, 308, 245, 247, 262, 269, 271,
	273, 274, 317, 318, 330, 349, 363, 364, 365, 266,
	255, 344, 256, 283, 257, 235, 259, 258, 260, 351,
	261, 237, 331, 368, 0, 279, 340, 304, 238, 303,
	332, 367, 366, 246, 392, 398, 399, 404, 0, 405,
	0, 0, 0, 413, 418, 419, 420, 422, 423, 424,
	425, 0, 0, 0, 0, 407, 0, 0, 0, 0,
	0, 0, 397, 277, 231, 232, 435, 263, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 396,
	0, 0, 0, 426, 434, 0, 0, 0, 0, 0,
	433, 329, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 378, 390, 408,
	411, 0, 0, 0, 0, 236, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 406, 0, 0, 313, 314,
	315, 316, 280, 0, 253, 409, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 276, 282, 421, 284,
	252, 328, 278, 387, 291, 0, 414, 0, 415, 0,
	0, 0, 0, 320, 287, 288, 352, 292, 298, 341,
	386, 326, 346, 250, 377, 353, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 296,
	0, 337, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 0,
	0, 0, 393, 394, 395, 417, 379, 362, 432, 0,
	0, 1909, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 0, 0, 0, 354,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 248, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 359, 375, 249, 350, 388, 254,
	357, 244, 324, 347, 0, 0, 241, 373, 356, 306,
	289, 290, 240, 0, 342, 268, 281, 265, 322, 0,
	372, 400, 264, 391, 0, 383, 243, 0, 382, 321,
	369, 374, 307, 301, 242, 371, 305, 300, 293, 272,
	416, 285, 333, 299, 334, 286, 311, 310, 312, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 358,
	0, 0, 294, 0, 0, 0, 401, 0, 345, 327,
	0, 0, 0, 343, 297, 370, 335, 376, 360, 384,
	339, 336, 234, 361, 267, 308, 245, 247, 262, 269,
	271, 273, 274, 317, 318, 330, 349, 363, 364, 365,
	266, 255, 344, 256, 283, 257, 235, 259, 258, 260,
	351, 261, 237, 331, 368, 0, 279, 340, 304, 238,
	303, 332, 367, 366, 246, 392, 398, 399, 404, 0,
	405, 0, 0, 0, 413, 418, 419, 420, 422, 423,
	424, 425, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 397, 277, 231, 232, 435, 263, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 262, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 396, 0, 0, 0, 426, 434, 0,
	0, 0, 0, 0, 433, 329, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 406,
	0, 0, 313, 314, 315, 316, 280, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 0, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 0, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 227,
	228, 229, 230, 362, 0, 0, 393, 394, 395, 417,
	379, 0, 432, 0, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 428,
	0, 0, 0, 0, 0, 354, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 1196,
	0, 0, 0, 248, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	359, 375, 249, 350, 388, 254, 357, 244, 324, 347,
	0, 0, 241, 373, 356, 306, 289, 290, 240, 0,
	342, 268, 281, 265, 322, 0, 372, 400, 264, 391,
	0, 383, 243, 0, 382, 321, 369, 374, 307, 301,
	242, 371, 305, 300, 293, 272, 416, 285, 333, 299,
	334, 286, 311, 310, 312, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 294, 0,
	0, 0, 401, 0, 345, 327, 0, 0, 0, 343,
	297, 370, 335, 376, 360, 384, 1523, 336, 234, 361,
	267, 308, 245, 247, 262, 269, 271, 273, 274, 317,
	318, 330, 349, 363, 364, 365, 266, 255, 344, 256,
	283, 257, 235, 259, 258, 260, 351, 261, 237, 331,
	368, 0, 279, 340, 304, 238, 303, 332, 367, 366,
	246, 392, 398, 399, 404, 0, 405, 0, 0, 0,
	413, 418, 419, 420, 422, 423, 424, 425, 0, 0,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 397,
	277, 231, 232, 435, 263, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 396, 0, 0, 0,
	426, 434, 0, 0, 0, 0, 0, 433, 329, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 355, 378, 390, 408, 411, 0, 0,
	0, 0, 236, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 406, 0, 0, 313, 314, 315, 316, 280,
	0, 253, 409, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 403, 276, 282, 421, 284, 252, 328, 278,
	387, 291, 0, 414, 0, 415, 0, 0, 0, 0,
	320, 287, 288, 352, 292, 298, 341, 386, 326, 346,
	250, 377, 353, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 296, 0, 337, 275,
	0, 0, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 0, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 0,
	0, 0, 227, 228, 229, 230, 362, 0, 0, 393,
	394, 395, 417, 379, 0, 432, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 0, 428, 0, 0, 0, 0, 0, 354, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 248, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 359, 375, 249, 350, 388, 254, 357,
	244, 324, 347, 0, 0, 241, 373, 356, 306, 289,
	290, 240, 0, 342, 268, 281, 265, 322, 0, 372,
	400, 264, 391, 0, 383, 243, 0, 382, 321, 369,
	374, 307, 301, 242, 371, 305, 300, 293, 272, 416,
	285, 333, 299, 334, 286, 311, 310, 312, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 1220, 0, 0, 0, 358, 0,
	0, 294, 0, 0, 0, 401, 0, 345, 327, 0,
	0, 0, 343, 297, 370, 335, 376, 360, 384, 339,
	336, 234, 361, 267, 308, 245, 247, 262, 269, 271,
	273, 274, 317, 318, 330, 349, 363, 364, 365, 266,
	255, 344, 256, 283, 257, 235, 259, 258, 260, 351,
	261, 237, 331, 368, 0, 279, 340, 304, 238, 303,
	332, 367, 366, 246, 392, 398, 399, 404, 0, 405,
	0, 0, 0, 413, 418, 419, 420, 422, 423, 424,
	425, 0, 0, 0, 0, 407, 0, 0, 0, 0,
	0, 0, 397, 277, 231, 232, 435, 263, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 396,
	0, 0, 0, 426, 434, 0, 0, 0, 0, 0,
	433, 329, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 378, 390, 408,
	411, 0, 0, 0, 0, 236, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 406, 0, 0, 313, 314,
	315, 316, 280, 0, 253, 409, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 276, 282, 421, 284,
	252, 328, 278, 387, 291, 0, 414, 0, 415, 0,
	0, 0, 0, 320, 287, 288, 352, 292, 298, 341,
	386, 326, 346, 250, 377, 353, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 296,
	0, 337, 275, 0, 0, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 227, 228, 229, 230, 362,
	0, 0, 393, 394, 395, 417, 379, 0, 432, 0,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 428, 0, 0, 0, 0,
	0, 354, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 248,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 359, 375, 249, 350,
	388, 254, 357, 244, 324, 347, 0, 0, 241, 373,
	356, 306, 289, 290, 240, 0, 342, 268, 281, 265,
	322, 0, 372, 400, 264, 391, 0, 383, 243, 0,
	382, 321, 369, 374, 307, 301, 242, 371, 305, 300,
	293, 272, 416, 285, 333, 299, 334, 286, 311, 310,
	312, 0, 0, 0, 0, 0, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	0, 358, 0, 0, 294, 0, 0, 0, 401, 0,
	345, 327, 0, 0, 0, 343, 297, 370, 335, 376,
	360, 384, 339, 336, 234, 361, 267, 308, 245, 247,
	262, 269, 271, 273, 274, 317, 318, 330, 349, 363,
	364, 365, 266, 255, 344, 256, 283, 257, 235, 259,
	258, 260, 351, 261, 237, 331, 368, 0, 279, 340,
	304, 238, 303, 332, 367, 366, 246, 392, 398, 399,
	404, 0, 405, 0, 0, 0, 413, 418, 419, 420,
	422, 423, 424, 425, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 397, 277, 231, 232, 435,
	263, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 396, 0, 0, 0, 426, 434, 0, 0,
	0, 0, 0, 433, 329, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 355,
	378, 390, 408, 411, 0, 0, 0, 0, 236, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 406, 0,
	0, 313, 314, 315, 316, 280, 0, 253, 409, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 403, 276,
	282, 421, 284, 252, 328, 278, 387, 291, 0, 414,
	0, 415, 0, 0, 0, 0, 320, 287, 288, 352,
	292, 298, 341, 386, 326, 346, 250, 377, 353, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	233, 0, 296, 0, 337, 275, 0, 0, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	0, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 0, 0, 0, 227, 228,
	229, 230, 362, 0, 0, 393, 394, 395, 417, 379,
	0, 432, 0, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 0, 428, 0,
	0, 0, 0, 0, 354, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 248, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 359,
	375, 249, 350, 388, 254, 357, 244, 324, 347, 0,
	0, 241, 373, 356, 306, 289, 290, 240, 0, 342,
	268, 281, 265, 322, 0, 372, 400, 264, 391, 0,
	383, 243, 0, 382, 321, 369, 374, 307, 301, 242,
	371, 305, 300, 293, 272, 416, 285, 333, 299, 334,
	286, 311, 310, 312, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 0, 358, 0, 0, 294, 0, 0,
	0, 401, 0, 345, 327, 0, 0, 0, 343, 297,
	370, 335, 376, 360, 384, 473, 336, 234, 361, 267,
	308, 245, 247, 262, 269, 271, 273, 274, 317, 318,
	330, 349, 363, 364, 365, 266, 255, 344, 256, 283,
	257, 235, 259, 258, 260, 351, 261, 237, 331, 368,
	0, 279, 340, 304, 238, 303, 332, 367, 366, 246,
	392, 398, 399, 404, 0, 405, 0, 0, 0, 413,
	418, 419, 420, 422, 423, 424, 425, 0, 0, 0,
	0, 407, 0, 0, 0, 0, 0, 0, 397, 277,
	231, 232, 435, 263, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 396, 0, 0, 0, 426,
	434, 0, 0, 0, 0, 0, 433, 329, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 378, 390, 408, 411, 0, 0, 0,
	0, 236, 410, 0, 0, 0, 0, 0, 0, 474,
	0, 381, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 406, 0, 0, 313, 314, 315, 316, 280, 0,
	253, 409, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 403, 276, 282, 421, 284, 252, 328, 278, 387,
	291, 0, 414, 0, 415, 0, 0, 0, 0, 320,
	287, 288, 352, 292, 298, 341, 386, 326, 346, 250,
	377, 353, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 296, 0, 337, 275, 0,
	0, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 0, 0,
	0, 227, 228, 229, 230, 362, 0, 0, 393, 394,
	395, 417, 379, 0, 432, 0, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 428, 0, 0, 0, 0, 0, 354, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 248, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 359, 375, 249, 350, 388, 254, 357, 244,
	324, 347, 0, 0, 241, 373, 356, 306, 289, 290,
	240, 0, 342, 268, 281, 265, 322, 0, 372, 400,
	264, 391, 0, 383, 243, 0, 382, 321, 369, 374,
	307, 301, 242, 371, 305, 300, 293, 272, 416, 285,
	333, 299, 334, 286, 311, 310, 312, 0, 0, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 0, 0,
	385, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	294, 0, 0, 0, 401, 0, 345, 327, 0, 0,
	0, 343, 297, 370, 335, 376, 360, 384, 339, 336,
	234, 361, 267, 308, 245, 247, 262, 269, 271, 273,
	274, 317, 318, 330, 349, 363, 364, 365, 266, 255,
	344, 256, 283, 257, 235, 259, 258, 260, 351, 261,
	237, 331, 368, 0, 279, 340, 304, 238, 303, 332,
	367, 366, 246, 392, 398, 399, 404, 0, 405, 0,
	0, 0, 413, 418, 419, 420, 422, 423, 424, 425,
	0, 0, 0, 0, 407, 0, 0, 0, 0, 0,
	0, 397, 277, 231, 232, 435, 263, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 396, 0,
	0, 0, 426, 434, 0, 0, 0, 0, 0, 433,
	329, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 355, 378, 390, 408, 411,
	0, 0, 0, 0, 236, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 406, 0, 0, 313, 314, 315,
	316, 280, 0, 253, 409, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 403, 276, 282, 421, 284, 252,
	328, 278, 387, 291, 0, 414, 0, 415, 0, 0,
	0, 0, 320, 287, 288, 352, 292, 298, 341, 386,
	326, 346, 250, 377, 353, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 296, 0,
	337, 275, 0, 0, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 0, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 0, 0, 0, 227, 228, 229, 230, 362, 0,
	0, 393, 394, 395, 417, 379, 0, 432, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 440, 270, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 428, 0, 0, 0, 0, 0,
	354, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 248, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 359, 375, 249, 350, 388,
	254, 357, 244, 324, 347, 0, 0, 241, 373, 356,
	306, 289, 290, 240, 0, 342, 268, 281, 265, 322,
	0, 372, 400, 264, 391, 0, 383, 243, 0, 382,
	321, 369, 374, 307, 301, 242, 371, 305, 300, 293,
	272, 416, 285, 333, 299, 334, 286, 311, 310, 312,
	0, 0, 0, 0, 0, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 0,
	358, 0, 0, 294, 0, 0, 0, 401, 0, 345,
	327, 0, 0, 0, 343, 297, 370, 335, 376, 360,
	384, 339, 336, 234, 361, 267, 308, 245, 247, 262,
	269, 271, 273, 274, 317, 318, 330, 349, 363, 364,
	365, 266, 255, 344, 256, 283, 257, 235, 259, 258,
	260, 351, 261, 237, 331, 368, 0, 279, 340, 304,
	238, 303, 332, 367, 366, 246, 392, 398, 399, 404,
	0, 405, 0, 0, 0, 413, 418, 419, 420, 422,
	423, 424, 425, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 397, 277, 231, 232, 435, 263,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 396, 0, 0, 0, 426, 434, 0, 0, 0,
	0, 0, 433, 329, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 355, 378,
	390, 408, 411, 0, 0, 0, 0, 236, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 389, 0, 0, 0, 0, 0, 406, 0, 0,
	313, 314, 315, 316, 280, 0, 253, 409, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 403, 276, 282,
	421, 284, 252, 328, 278, 387, 291, 0, 414, 0,
	415, 0, 0, 0, 0, 320, 287, 288, 352, 292,
	298, 341, 386, 326, 346, 250, 377, 353, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 296, 0, 337, 275, 0, 0, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 0,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 0, 0, 0, 227, 228, 229,
	230, 362, 0, 0, 393, 394, 395, 417, 379, 0,
	432, 0, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 428, 0, 0,
	0, 0, 0, 354, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 248, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 359, 375,
	249, 350, 388, 254, 357, 244, 324, 347, 0, 0,
	241, 373, 356, 306, 289, 290, 240, 0, 342, 268,
	281, 265, 322, 0, 372, 400, 264, 391, 0, 383,
	243, 0, 382, 321, 369, 374, 307, 301, 242, 371,
	305, 300, 293, 272, 416, 285, 333, 299, 334, 286,
	311, 310, 312, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 0, 358, 0, 0, 294, 0, 0, 0,
	401, 0, 345, 327, 0, 0, 0, 343, 297, 370,
	335, 376, 360, 384, 339, 336, 234, 361, 267, 308,
	245, 247, 262, 269, 271, 273, 274, 317, 318, 330,
	349, 363, 364, 365, 266, 255, 344, 256, 283, 257,
	235, 259, 258, 260, 351, 261, 237, 331, 368, 0,
	279, 340, 304, 238, 303, 332, 367, 366, 246, 392,
	398, 399, 404, 0, 405, 0, 0, 0, 413, 418,
	419, 420, 422, 423, 424, 425, 0, 0, 0, 0,
	407, 0, 0, 0, 0, 0, 0, 397, 277, 231,
	232, 435, 263, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 396, 0, 0, 0, 426, 434,
	0, 0, 0, 0, 0, 433, 329, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 378, 390, 408, 411, 0, 0, 0, 0,
	236, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	406, 0, 0, 313, 314, 315, 316, 280, 0, 253,
	409, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	403, 276, 282, 421, 284, 252, 328, 278, 387, 291,
	0, 414, 0, 415, 0, 0, 0, 0, 320, 287,
	288, 352, 292, 298, 341, 386, 326, 346, 250, 377,
	353, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 296, 0, 337, 275, 0, 0,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 0, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 0, 0, 0,
	227, 228, 229, 230, 362, 0, 0, 393, 394, 395,
	417, 379, 0, 432, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	428, 0, 0, 0, 0, 0, 354, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 248, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 359, 1176, 249, 350, 388, 254, 357, 244, 324,
	347, 0, 0, 241, 373, 356, 306, 289, 290, 240,
	0, 342, 268, 281, 265, 322, 0, 372, 400, 264,
	391, 0, 383, 243, 0, 382, 321, 369, 374, 307,
	301, 242, 371, 305, 300, 293, 272, 416, 285, 333,
	299, 334, 286, 311, 310, 312, 0, 0, 0, 0,
	0, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 0, 358, 0, 0, 294,
	0, 0, 0, 401, 0, 345, 327, 0, 0, 0,
	343, 297, 370, 335, 376, 360, 384, 339, 336, 234,
	361, 267, 308, 245, 247, 262, 269, 271, 273, 274,
	317, 318, 330, 349, 363, 364, 365, 266, 255, 344,
	256, 283, 257, 235, 259, 258, 260, 351, 261, 237,
	331, 368, 0, 279, 340, 304, 238, 303, 332, 367,
	366, 246, 392, 398, 399, 404, 0, 405, 0, 0,
	0, 413, 418, 419, 420, 422, 423, 424, 425, 0,
	0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
	397, 277, 231, 232, 435, 263, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 396, 0, 0,
	0, 426, 434, 0, 0, 0, 0, 0, 433, 329,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 355, 378, 390, 408, 411, 0,
	0, 0, 0, 236, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 406, 0, 0, 313, 314, 315, 316,
	280, 0, 253, 409, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 403, 276, 282, 421, 284, 252, 328,
	278, 387, 291, 0, 414, 0, 415, 0, 0, 0,
	0, 320, 287, 288, 352, 292, 298, 341, 386, 326,
	346, 250, 377, 353, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 296, 0, 337,
	275, 0, 0, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 227, 228, 229, 230, 362, 0, 0,
	393, 394, 395, 417, 379, 0, 432, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 0, 0, 0, 354,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 248, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 359, 1174, 249, 350, 388, 254,
	357, 244, 324, 347, 0, 0, 241, 373, 356, 306,
	289, 290, 240, 0, 342, 268, 281, 265, 322, 0,
	372, 400, 264, 391, 0, 383, 243, 0, 382, 321,
	369, 374, 307, 301, 242, 371, 305, 300, 293, 272,
	416, 285, 333, 299, 334, 286, 311, 310, 312, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 0, 358,
	0, 0, 294, 0, 0, 0, 401, 0, 345, 327,
	0, 0, 0, 343, 297, 370, 335, 376, 360, 384,
	339, 336, 234, 361, 267, 308, 245, 247, 262, 269,
	271, 273, 274, 317, 318, 330, 349, 363, 364, 365,
	266, 255, 344, 256, 283, 257, 235, 259, 258, 260,
	351, 261, 237, 331, 368, 0, 279, 340, 304, 238,
	303, 332, 367, 366, 246, 392, 398, 399, 404, 0,
	405, 0, 0, 0, 413, 418, 419, 420, 422, 423,
	424, 425, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 397, 277, 231, 232, 435, 263, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	396, 0, 0, 0, 426, 434, 0, 0, 0, 0,
	0, 433, 329, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 378, 390,
	408, 411, 0, 0, 0, 0, 236, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 406, 0, 0, 313,
	314, 315, 316, 280, 0, 253, 409, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 403, 276, 282, 421,
	284, 252, 328, 278, 387, 291, 0, 414, 0, 415,
	0, 0, 0, 0, 320, 287, 288, 352, 292, 298,
	341, 386, 326, 346, 250, 377, 353, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	296, 0, 337, 275, 0, 0, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 0, 0, 0, 227, 228, 229, 230,
	362, 0, 0, 393, 394, 395, 417, 379, 0, 432,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 428, 0, 0, 0,
	0, 0, 354, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	248, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 359, 375, 249,
	350, 388, 254, 357, 244, 324, 347, 0, 0, 241,
	373, 356, 306, 289, 290, 240, 0, 342, 268, 281,
	265, 322, 0, 372, 400, 264, 391, 0, 383, 243,
	0, 382, 321, 369, 374, 307, 301, 242, 371, 305,
	300, 293, 272, 416, 285, 333, 299, 334, 286, 311,
	310, 312, 0, 0, 0, 0, 0, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 294, 0, 0, 0, 401,
	0, 345, 327, 0, 0, 0, 343, 297, 370, 335,
	376, 360, 384, 339, 336, 234, 361, 267, 308, 245,
	247, 514, 269, 271, 273, 274, 317, 318, 330, 349,
	363, 364, 365, 266, 255, 344, 256, 283, 257, 235,
	259, 258, 260, 351, 261, 237, 331, 368, 0, 279,
	340, 304, 238, 303, 332, 367, 366, 246, 392, 398,
	399, 404, 0, 405, 0, 0, 0, 413, 418, 419,
	420, 422, 423, 424, 425, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 397, 277, 231, 232,
	435, 263, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 396, 0, 0, 0, 426, 434, 0,
	0, 0, 0, 0, 433, 329, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 378, 390, 408, 411, 0, 0, 0, 0, 236,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 406,
	0, 718, 313, 314, 315, 316, 280, 0, 253, 409,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 705, 0, 706, 402, 403,
	276, 282, 421, 284, 252, 328, 278, 387, 291, 0,
	414, 0, 415, 0, 0, 0, 0, 320, 287, 288,
	352, 292, 298, 341, 386, 326, 346, 250, 377, 353,
	302, 0, 0, 688, 0, 0, 0, 0, 0, 0,
	717, 0, 0, 0, 226, 0, 699, 0, 703, 0,
	756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 296, 0, 337, 275, 0, 0, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 227,
	228, 229, 230, 0, 0, 0, 393, 394, 395, 417,
	379, 0, 432, 758, 0, 0, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	743, 0, 701, 0, 695, 0, 684, 0, 719, 0,
	0, 0, 0, 698, 697, 0, 0, 1595, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 0, 0, 0, 689, 721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1597, 1566, 0, 0, 0, 0, 0, 0, 0,
	0, 1598, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 0, 0, 0, 0, 694, 0,
	0, 0, 693, 0, 0, 0, 0, 1565, 680, 0,
	0, 0, 687, 0, 0, 0, 1406, 0, 742, 741,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 685,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 0, 0, 0, 0,
	682, 0, 0, 0, 0, 720, 751, 0, 0, 0,
	0, 0, 0, 0, 702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1588,
	686, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 748, 752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 735, 739, 755, 0, 0,
	0, 736, 733, 732, 0, 738, 723, 724, 722, 725,
	726, 727, 728, 0, 753, 0, 754, 1557, 1556, 1559,
	0, 1555, 0, 0, 0, 700, 1576, 749, 750, 0,
	0, 1402, 0, 0, 0, 1399, 0, 1582, 0, 1401,
	1398, 1400, 1404, 1405, 0, 0, 0, 1403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1570, 1604, 1595,
	0, 1571, 1573, 1575, 745, 1577, 1578, 1579, 1583, 1584,
	1585, 1587, 1590, 1591, 1592, 837, 0, 0, 0, 827,
	0, 0, 1580, 1589, 1581, 849, 0, 0, 0, 0,
	0, 0, 0, 1597, 1560, 857, 861, 863, 865, 867,
	868, 870, 0, 875, 871, 872, 873, 874, 0, 852,
	853, 854, 855, 835, 836, 858, 1596, 838, 0, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 850,
	856, 1595, 0, 0, 3177, 0, 0, 744, 860, 862,
	864, 866, 869, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1597, 0, 0, 0, 0,
	1569, 0, 0, 0, 0, 851, 0, 1568, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1409,
	1410, 1411, 1412, 1413, 1414, 1407, 1408, 0, 0, 0,
	0, 1586, 0, 0, 0, 837, 0, 0, 0, 0,
	1574, 1588, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 1601, 1600, 0, 857, 861, 863, 865, 867,
	868, 870, 0, 875, 871, 872, 873, 874, 0, 852,
	853, 854, 855, 835, 836, 858, 0, 838, 0, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 850,
	856, 0, 0, 0, 0, 0, 0, 0, 860, 862,
	864, 866, 869, 0, 1562, 0, 0, 1595, 0, 2932,
	0, 0, 0, 1588, 0, 0, 0, 0, 1576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1582,
	0, 0, 0, 0, 0, 851, 1603, 0, 0, 1602,
	0, 1597, 0, 0, 0, 0, 0, 0, 0, 1570,
	1604, 0, 0, 1571, 1573, 1575, 0, 1577, 1578, 1579,
	1583, 1584, 1585, 1587, 1590, 1591, 1592, 0, 0, 0,
	0, 0, 0, 0, 1580, 1589, 1581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1576, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 1582, 0, 0, 0, 0, 0, 0, 1596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1570, 1604, 0, 0, 1571, 1573, 1575, 0, 1577,
	1578, 1579, 1583, 1584, 1585, 1587, 1590, 1591, 1592, 493,
	0, 492, 499, 489, 0, 1593, 1580, 1589, 1581, 0,
	0, 0, 0, 496, 497, 0, 498, 502, 0, 1588,
	484, 0, 1569, 0, 0, 0, 0, 0, 859, 1568,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1586, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 0, 0, 513, 1593, 0, 0,
	0, 512, 0, 0, 0, 493, 0, 492, 499, 489,
	0, 0, 0, 0, 1569, 0, 1576, 0, 0, 496,
	497, 1568, 498, 502, 0, 0, 484, 1582, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 1586, 0, 1570, 1604, 0,
	0, 1571, 1573, 1575, 1574, 1577, 1578, 1579, 1583, 1584,
	1585, 1587, 1590, 1591, 1592, 0, 0, 0, 0, 0,
	0, 0, 1580, 1589, 1581, 0, 0, 0, 859, 511,
	0, 493, 513, 492, 499, 489, 0, 512, 0, 0,
	0, 0, 0, 0, 0, 496, 497, 0, 498, 502,
	0, 0, 484, 0, 0, 0, 1596, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 487, 486, 0, 0, 0,
	0, 0, 0, 1593, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	1569, 0, 0, 510, 0, 0, 0, 1568, 0, 0,
	488, 0, 0, 0, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1586, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	485, 487, 486, 0, 0, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 510,
	0, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 494, 500, 0, 501, 503, 0, 0,
	504, 505, 506, 0, 0, 508, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 487, 486, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 510, 0, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 494,
	500, 0, 501, 503, 0, 0, 504, 505, 506, 0,
	0, 508, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 494, 500, 0, 501, 503,
	0, 0, 504, 505, 506, 0, 0, 508, 509,
}

var yyPact = [...]int{
	3208, -1000, -1000, -1000, -319, 9815, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34730, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34730, -315,
	34177, 34177, -1000, -1000, 1994, -1000, 33624, 10940, 34730, 259,
	257, 34730, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 526, -1000,
	33071, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 496, 37619,
	36389, 7592, -270, -1000, 2692, -119, 683, 693, 796, 796,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36770, 639,
	32518, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 36775, 265, 639, 13705, -16, -17, 2692, 312, 246,
	-1000, 906, 3247, 138, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7592, 7592, 9815, -331, 9815,
	7592, 34730, 34730, -1000, -1000, -1000, -1000, 496, 37619, 7592,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-17, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37145,
	-1000, 1189, -1000, -1000, -1000, -1000, 2363, 1188, 1886, 456,
	34730, -1000, 1187, 456, -1000, -1000, -1000, 2692, 2692, -1000,
	34730, 34730, 38, 1352, -1000, 314, 305, 292, 1186, -1000,
	-1000, -1000, -1000, -1000, -1000, 364, 2721, -1000, 34730, 34730,
	2392, 34730, -1000, 1700, 391, 37705, 2578, 1117, 602, 2429,
	-1000, -1000, 2357, -1000, 156, 170, 152, 238, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 171, -1000, 2652, -1000, -1000,
	150, -1000, -1000, 142, -1000, -1000, -1000, -18, -1000, -1000,
	-1000, -1000, -1000, -1000, -108, -1000, -1000, 756, 1458, 7592,
	-1000, 1449, -1000, 3160, -1000, -1000, -1000, -1000, 4817, 9251,
	9251, 9251, 9251, -1000, -1000, 2164, 7592, 2345, 2344, -1000,
	-1000, -1000, -1000, -1000, 1185, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1461, -1000, -1000, -1000, 8698, -1000,
	2338, 2337, 2327, 2326, 2323, 2322, 2321, 2318, 2317, 2316,
	2313, 2308, 2305, 2301, 2044, 10376, 2300, 1885, 1883, 2298,
	2292, 2288, 1873, 2044, 2044, 2278, 2270, 2267, 2266, 2262,
	2259, 2254, 2249, 2246, 2242, 2233, 2228, 2221, 2220, 2218,
	2217, 2215, 2209, 2208, 2204, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1065, -1000,
	2203, 2557, 2668, 2097, 2704, 2639, 2624, 2602, 2598, 1653,
	-1000, -1000, -1000, -150, -1000, -1000, 727, -1000, 635, -1000,
	34730, 34730, 34730, 545, 495, 495, 495, 495, 495, 495,
	514, 495, 522, 521, 518, 495, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -136, 1348, 1340, 2472, 603, -1000, -1000,
	-1000, -1000, 1058, 34730, -1000, 2111, 1241, 1241, 2665, 418,
	406, 404, 1241, 303, -1000, 1343, 1343, 1343, 1343, 1241,
	357, 429, 2668, 2668, -35, 1343, -25, 1241, 1241, -25,
	1241, 1241, 1241, 118, -312, -1000, -1000, -1000, 1343, 1343,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2646, 2645, 496,
	34730, 99, 34730, 496, 496, 496, 501, -64, 35836, 35283,
	1700, 388, 383, 1077, 1332, -1000, 1292, 34730, 34730, 1292,
	1292, 18132, 17579, -1000, 34730, -1000, 2668, 2097, -1000, 2021,
	2286, 2015, 2097, 496, 496, 496, 496, 496, 131, 496,
	496, 496, 34730, 34730, 31965, 496, 496, 6476, 6476, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9815, 1664,
	1650, 136, -83, -318, 172, -1000, -1000, 34730, 2549, 115,
	-1000, -1000, -1000, 2050, -1000, 2098, 2098, 2098, 2098, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2133, 2202,
	-1000, -1000, 2095, 2095, 2095, 2050, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2130, 2130, 2131, 2131, 2130, 34730, 7592, 34730, 2560,
	310, 2200, -1000, 34730, 302, 2668, 2557, 2668, -1000, -1000,
	1178, 1652, 1869, -1000, -1000, 314, 1207, -1000, 753, -1000,
	-1000, -1000, -1000, 34730, -108, 295, -1000, -1000, 1859, 2184,
	-1000, 442, 1074, 1176, -1000, 124, 37781, 27533, 1700, 27533,
	34730, -1000, -1000, -1000, -1000, -1000, -1000, -20, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 141, -1000, 7592, 7592, 7592, 7592, 7592, -1000, 513,
	8145, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9251, 9251,
	9251, 9251, 9251, 9251, 9251, 9251, 9251, 9251, 9251, 9251,
	2162, 1381, 9251, 9251, 9251, 9251, 2286, 2449, 1067, 211,
	-1000, -1000, -1000, -1000, -1000, 1374, 1458, 7592, 7592, 34730,
	-1000, -1000, 3202, 7592, 7592, 36909, 7592, 2595, 7592, 7592,
	7592, 2014, 3710, 34730, 7592, -1000, 2012, 2010, -1000, -1000,
	1560, 7592, -1000, -1000, 7592, -1000, -1000, 7592, 9251, 7592,
	-1000, -1000, -1000, 2890, 2595, 2595, 7592, 7592, 2595, 2595,
	2595, 1341, 2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595,
	2009, 2008, 2006, 2668, -270, 5923, -1000, -275, 2557, 7592,
	-1000, -1000, 7592, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1864, -86, 678, 645, 651, -1000, 2591, -1000, 2181,
	2180, 1175, 495, -1000, 34730, 1395, 34730, 27533, 34730, 34730,
	1700, 34730, 34730, 495, 495, 495, 34730, -1000, 2498, 27533,
	2482, 501, -1000, 34730, 1058, 2589, 34730, 2696, 9251, 9251,
	-1000, 31412, 1343, 1241, 1241, -1000, -1000, 34730, -1000, -1000,
	-1000, 1343, 34730, 1343, 1343, 2696, 1343, -1000, -1000, -1000,
	1241, 1241, -1000, -1000, -1000, -1000, 1343, 1343, -1000, -1000,
	2696, 34730, -21, 2696, 2696, -32, -1000, -1000, -1000, 34730,
	34730, 495, 34730, -1000, 34730, 34730, -1000, -1000, 34730, 37011,
	34730, 30859, 2644, -1000, 27533, 34730, 34730, 25321, -1000, 984,
	-1000, -82, -1000, -88, -64, 1292, -64, 1292, -1000, 437,
	431, 16473, 374, 27533, 4263, -1000, -1000, 1292, 1292, 4263,
	4263, 1204, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1050,
	-1000, 153, 2557, -1000, -1000, -1000, -1000, -1000, 34730, 34730,
	27533, 1700, 34730, 496, 34730, 34730, 34730, -1000, 2170, -1000,
	2576, 34730, 34730, 1064, -1000, -1000, 13152, 1174, 1064, -1000,
	1380, -1000, 7592, 9815, -290, 7592, 9815, 9815, 7592, 9815,
	-1000, 7592, 100, -1000, -1000, -1000, -1000, 1645, -1000, 1638,
	-1000, -1000, -1000, 1863, 1863, -1000, 1622, -1000, -1000, -1000,
	-1000, 1597, -1000, -1000, 1590, -1000, -1000, -1000, 2002, 756,
	-1000, 1860, 2428, -271, -1000, 15366, 34730, 34730, -1000, -1000,
	-271, -1000, 14812, 34730, 2557, -1000, 2557, 34730, -1000, 2662,
	-1000, 314, 231, -1000, -1000, -1000, -1000, -1000, -1000, 1167,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1044,
	-1000, 34730, -1000, -1000, 124, 27533, 28639, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 175, -1000, -1000, 154, -1000, 511,
	75, 1203, -1000, -1000, 112, 155, 549, 1458, -1000, 1412,
	1412, 1415, -1000, 436, -1000, -1000, -1000, -1000, 2164, -1000,
	-1000, -1000, 1781, 2342, -1000, 1277, 1277, 1150, 1150, 1150,
	1150, 1150, 1254, 1254, -1000, -1000, -1000, 4817, 2162, 9251,
	9251, 9251, 9251, 475, 475, 3391, 3373, -1000, 7592, 1375,
	-1000, 7592, 1832, 1026, 1161, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2000, 1999, 2365, 2720, 1998,
	7592, -1000, -1000, 1197, 1191, 1182, -1000, 1739, 7039, -1000,
	-1000, -1000, 1995, 1156, 1981, -1000, -1000, -1000, 1980, 1157,
	837, 1976, 1471, 1974, 1029, 7592, 7592, 1148, 1147, 7592,
	7592, 7592, 7592, 1964, 7592, 7592, 7592, 7592, 7592, 7592,
	7592, 7592, -1, -1, -1, -1000, -1000, 1143, -1000, 1458,
	-1000, 1850, -1000, 1097, 1018, -1000, 1753, -1000, -1000, -1000,
	-1000, 654, 622, 704, 34730, 768, 11493, 34730, 34730, 2111,
	2569, 108, -1000, 889, -1000, 75, -122, 268, 759, 2384,
	2719, 34730, 34730, 34730, 2585, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 30306, -1000, 2158, 1132, -1000, -1000, 7592,
	-1000, -1000, 2383, 34730, 34730, 2696, 2696, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 34730, 2696, 2696, 1241, 1343, -1000,
	-1000, 1343, -1000, -1000, 1343, -1000, 1155, -1000, 34730, -1000,
	-1000, -1000, 2111, 990, -1000, 12046, 14258, 395, -1000, 703,
	1234, 754, 509, 2522, 167, -1000, 1234, -223, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 361, 360, 1234, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 688, 1234,
	1234, 1234, 1234, 1234, -1000, 1234, 2147, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 419, 107, 2633, 189, 188, 889,
	2627, 204, 2532, 1025, -1000, -1000, -1000, -1000, 20344, 20344,
	15920, 20344, -1000, 1213, -64, -103, -1000, -1000, 984, 4263,
	984, 4263, -1000, -1000, 505, -1000, -1000, 759, -1000, 34730,
	34730, -1000, -1000, 2143, 1339, -1000, -1000, 10376, -1000, 4263,
	4263, -1000, -1000, 20897, 34730, -1000, -112, -1000, -91, 2659,
	941, -1000, -1000, 945, 759, 2427, 34730, 941, -1000, -1000,
	11493, 34730, -1000, -1000, 2696, 6476, -1000, 25321, -1000, -1000,
	29745, -1000, 29192, 2696, 1361, -1000, 9815, 1580, 133, -1000,
	165, -332, 132, 1518, 129, 1458, -1000, -1000, 1957, 1955,
	1120, -1000, 1115, 1952, 1108, 1105, -1000, -39, -1000, 2535,
	778, -1000, 2142, -1000, 1104, 2468, -1000, 921, -1000, 1330,
	1096, -1000, 778, 1094, 2467, 921, 2659, -1000, 1146, 37,
	-1000, -1000, 34730, 1859, 1092, 28639, 841, -1000, 504, 1142,
	1134, -1000, 27533, 143, 27533, -1000, 27533, -1000, -1000, 317,
	-1000, 34730, 2555, -1000, -1000, -1000, 1797, -344, -1000, -1000,
	-1000, -1000, -1000, 1082, -1000, 475, 475, 3391, 3303, -1000,
	9251, -1000, 9251, 2434, 1357, -1000, 7592, 1535, 3159, 2174,
	19238, 34730, -1000, -1000, 7592, 7592, -1000, 2359, -1000, -1000,
	-1000, -1000, 7592, 7592, 1943, -1000, 34730, -1000, -1000, -1000,
	-1000, 19238, -1000, 9251, -1000, 7592, 866, 2348, -1, -1,
	2340, 2306, 2302, 1078, -1, 2282, 2148, 2144, 2127, 2077,
	2059, 2019, 2013, -1000, 2134, -1000, -1000, 5923, -1000, -39,
	7592, 7592, 7592, 2525, -1000, -1000, -1000, -1000, -1000, 610,
	130, 1948, 904, -1000, -1000, 34730, -1000, -1000, -1000, 1944,
	900, -1000, -1000, -1000, 37275, 2098, 2098, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2133, -1000, -1000, 2095,
	2095, 2095, 2050, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2130, 2130, 2131, 2131, 2130, -1000, 2111, 2583,
	-1000, 12, 1234, 447, 27533, 376, -1000, 34730, 1460, 1329,
	2426, 266, 2530, 34730, 2129, 2125, 2120, 250, 37275, 34730,
	1031, -1000, 1122, 3247, -1000, 34730, 1458, -1000, 1700, -1000,
	1241, -1000, -1000, 2696, 1071, -1000, -1000, 2696, 1241, 1241,
	1343, 34730, -1000, 2582, 37011, -1000, 2521, 34730, -1000, -1000,
	37275, 535, -1000, 655, 495, 34730, 1434, 655, 1431, 2115,
	-1000, -1000, -1000, 34730, 34730, -1000, 34730, 1426, 1424, -1000,
	34730, 34730, 34730, 34730, -1000, -1000, 2533, -1000, 1234, 1234,
	580, -1000, -1000, 424, -1000, 1579, 1577, 1574, 1573, 1848,
	1847, 1846, 1234, 1234, 1570, 1844, 28086, 1824, 844, 1569,
	1568, 1567, 1644, 1822, 611, -1000, 1821, 1642, 1628, 1584,
	34730, 2112, 1784, -1000, -1000, 12, 1234, 182, 34730, 1327,
	447, 264, 1662, 17026, 34730, 25321, 25321, 25321, 25321, -1000,
	2452, 2445, -1000, 2443, 2441, 2451, 34730, 25321, 2111, -1000,
	28086, -1000, -1000, -1000, 2286, 1066, 2577, 656, 7592, -1000,
	-1000, -75, -100, -1000, -1000, -1000, 27533, 1820, 374, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2728, 34730, 34730,
	520, 1942, -1000, 2710, -1000, 843, -1000, -1000, 1112, -1000,
	2710, 1385, -320, 9815, 1365, 1243, -1000, 7592, 9815, 7592,
	-291, 173, -298, -1000, -1000, -1000, 1819, -1000, -1000, -1000,
	1564, -1000, 1562, 9, 23, 1423, -271, 5923, 311, 34730,
	-271, 34730, 5923, -1000, 34730, 306, -271, -1000, 34730, 1561,
	-1000, -1000, -1000, 2717, 27533, 1700, 1211, 26980, -1000, 148,
	-1000, 157, 412, 1818, -1000, 517, 96, -1000, 1322, 1797,
	-1000, -1000, -1000, 9251, -1000, -1000, -1000, -1000, 1458, 7592,
	1941, -1000, 691, 691, 1939, -1000, 2098, 2098, -1000, 2050,
	2095, 2050, 691, 691, 1938, -1000, 1706, 1962, -1000, 1958,
	1902, 7592, -1000, 1920, 3242, 893, -149, -1, -1000, -1000,
	-1000, -1, -1, -1, -1, -1000, -1, -1, -1, -1,
	-1, -1, -1, -1, 460, -1000, 9, 1458, 1458, -1000,
	-1000, 2534, -1000, 1816, 1814, 768, 37275, 533, 11493, 2536,
	2581, 315, 1666, -1000, -1000, -1000, 26427, 409, -1000, -1000,
	-1000, 515, 166, 1557, 389, -1000, 34730, 204, 2512, 1321,
	1813, 34730, -1000, -1000, -1000, -1000, -1000, 2530, -1000, 868,
	243, 12599, 12599, 12599, 239, 1290, -1000, 456, 890, 1107,
	25321, 34730, -1000, 24768, 1909, -1000, 759, 2696, -1000, 34730,
	-1000, 2696, 2696, 1241, -1000, 315, -1000, -1000, -1000, 34730,
	2521, 2294, -1000, 34730, -1000, 34730, -1000, 34730, 34730, 495,
	7592, -1000, -1000, -1000, 34730, -1000, 219, 512, 512, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19238, 19238, 2613, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1806, 1803, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 34730, 1039, -1000, 1319, 1666, 26427, 1317, 1292,
	1802, 409, 1460, 1310, -1000, 1800, -1000, 798, 34730, 34730,
	-1000, 974, -1000, 1302, 2375, 2425, 2375, -1000, -1000, -1000,
	-1000, 2356, -1000, 2141, -1000, -1000, 974, -1000, -1000, -1000,
	-1000, -1000, 656, -1000, 2657, 655, 655, 655, 1908, -1000,
	-1000, -1000, 841, 1906, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2708, 2703, 25874, 2708, -1000, -320, 1344,
	-1000, 1522, 127, 1410, 34730, -1000, -1000, -1000, 1901, 1898,
	-277, 24, 2702, 2701, 2727, -1000, 1896, 813, -271, -1000,
	-1000, 778, -1000, -1000, -1000, -271, -1000, 778, -1000, -1000,
	1700, -1000, 145, -1000, -1000, -1000, -1000, -1000, -1000, 57,
	-1000, 34730, -1000, 1797, 1796, 95, -1000, 1458, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 7592, -1000, -1000, -1000, 1887, -1000, -1000,
	7592, 1895, 1795, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2706, -1000, 2700, -277,
	-1000, -1000, -1000, -1000, -1000, -1000, 37275, -1000, 964, 315,
	-185, -1000, 1794, 74, -1000, -1000, -1000, 1789, 1787, 1542,
	-1000, -1000, 1578, 1083, 84, -1000, -1000, -1000, -1000, -1000,
	-1000, 1662, 1655, 1289, -345, -1000, 2092, -1000, 1234, 1234,
	1234, 34730, 1893, 800, -1000, -1000, -1000, -1000, 1892, 1809,
	465, 1294, 1288, -1000, 1538, 20344, 25321, 24768, 917, -1000,
	1100, -1000, -1000, -1000, 2696, -1000, -1000, 2696, -1000, -1000,
	-1000, -1000, 2294, -1000, -1000, 1443, 9251, -1000, -1000, 1785,
	19791, 646, 1286, 1269, 599, 2091, -1000, 332, 2726, -1000,
	-1000, -1000, 562, 1421, 1420, -1000, 34730, -1000, 2084, -1000,
	2079, 2382, 270, 2076, 2068, 34730, 1857, -1000, -1000, -1000,
	-1000, -1000, -1000, 307, -1000, 1195, -1000, 19238, -1000, -1000,
	1038, -1000, 1784, 1783, -1000, 74, 1780, 4263, -1000, -1000,
	2512, 1778, -1000, 34730, 798, 798, 2706, 34730, 5923, -1000,
	-1000, 7592, 2063, -1000, 7592, -1000, -1000, -1000, -1000, -1000,
	2057, 2505, -1000, -1000, -1000, -1000, -1000, -1000, 7592, 7592,
	-1000, -1000, 494, 9815, -299, 164, -1000, -1000, -1000, -279,
	1755, -1000, -1000, 2697, 1754, 1675, 34730, -1000, 778, 778,
	759, -1000, -1000, -32, -1000, -1000, -1000, 1804, -1000, 1769,
	-1, -1000, 119, 7592, -279, -183, -1000, -1000, -185, -1000,
	297, -1000, -1000, 283, -1000, -1000, 194, -1000, -1000, 1540,
	450, -1000, -1000, -1000, 1749, 1444, 1692, 23662, 19238, 19791,
	1747, -1000, 37491, 12599, 141, 37491, 722, 1273, -1000, 1527,
	-1000, 1496, -1000, 2696, 917, 1100, -1000, -1000, 1194, -1000,
	-1000, -1000, -1000, 3391, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1746, 1736, -1000, -1000, -1000, -1000, -1000, 1491,
	2056, -133, 2606, -1000, -1000, 2052, 23662, 23662, 369, 369,
	23662, 23662, 2051, 512, -1000, 1234, 1098, -1000, -1000, -1000,
	-1000, -1000, -1000, 1655, -1000, -1000, 2668, -1000, -1000, 1458,
	34730, 1458, 24215, -1000, 2695, 2693, 1458, 756, -1000, -320,
	34730, 34730, -282, 1488, -1000, 1733, 28, -1000, -1000, 757,
	-284, 8, 18, -1000, -1000, -1000, 1786, -1000, 467, -1000,
	-1000, -1000, 756, -282, 34730, -1000, 327, -1000, -1000, 402,
	1732, -1000, -1000, 193, -1000, -1000, -1000, -1000, -1000, 86,
	-1000, 1260, 1035, -1000, 2050, 7592, -1000, -1000, -1000, 455,
	37345, -1000, 754, -1000, -1000, -32, 455, 405, 202, -1000,
	1487, -1000, -1000, 2706, -1000, -1000, -1000, 1711, 7592, 2044,
	1234, -177, 23662, 1000, 995, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 992, 991, 23662, -1000, -1000, 19238, 1234, -1000,
	-1000, 968, 960, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2038, -1000, -1000, 2687, -1000, 1731, 491, 22, 18, -1000,
	2685, 27, 2684, 2683, -1000, -1000, 490, -272, -3, -4,
	-5, -1000, -1000, -1000, 7592, -1000, 2580, -1000, 147, -1000,
	55, -1000, -1000, -1000, 1692, 1682, -1000, 23662, 2573, 1744,
	272, 2682, 37491, -1000, 1234, -1000, 272, -1000, 247, -1000,
	1264, -1000, 1466, -1000, 2668, -1000, 1721, -1000, 34730, 2343,
	-1000, 117, 948, 2376, 2366, 2304, 2061, 940, -1000, 19238,
	-1000, -1000, 23109, 34730, 1675, -1000, 2036, 1463, 24, 11,
	2676, -1000, 1675, 2674, 1675, 1675, 1398, -1000, -7, -9,
	-11, -1000, -1000, -1000, -1000, 1681, -1000, -1000, -1000, -1000,
	213, -1000, -1000, 2573, -1000, 2672, 319, -1000, 19238, -1000,
	-1000, -1000, 1462, -1000, -1000, 512, -1000, -1000, 2309, 2289,
	2716, -1000, -1000, -1000, -1000, 213, 369, 213, 369, 213,
	369, 213, 369, 140, -1000, -1000, -1000, 937, -1000, -1000,
	2601, 18685, 6, -1000, -1000, -1000, 1677, -1000, 1675, -1000,
	-1000, 490, -1000, -1000, -1000, -1000, -1000, 1234, 1668, 227,
	-1000, -1000, -1000, 22556, 286, 321, 313, -1000, 444, -1000,
	-1000, -1000, -1000, -1000, 2718, -1000, 2723, 581, 581, -1000,
	-1000, -1000, -1000, -1000, -1000, 34730, -1000, 34730, -1000, 927,
	-1000, -1000, -1000, 1099, -1000, -1000, -1000, -1000, -1000, 1459,
	-1000, 34730, -1000, 34730, 282, 1456, 9251, 2035, 9251, 2033,
	298, 2030, -1000, -1000, -1000, 1546, 316, -1000, 213, 213,
	213, 213, -1000, 755, -1000, 1139, -1000, 22003, 34730, -1000,
	-1000, 916, 2029, 2671, -1000, 2802, 34730, 2694, 34730, 2027,
	1123, 9251, -1000, -1000, -1000, 34730, 5370, -1000, 1088, -1000,
	-1000, 452, 299, -1000, 907, -1000, 869, 21450, 1455, 2355,
	-1000, -1000, 1458, 34730, 867, -1000, 34730, 276, -1000, -1000,
	-1000, 864, -1000, -1000, -1000, -1000, 452, 2466, -1000, 1454,
	-1000, -1000, 37273, 564, -1000, -1000, 37273, 278, -1000, 430,
	2023, -1000, -1000, 862, -1000, 34730, 626, 7592, -1000, 278,
	37491, -1000, 7592, 861, -1000, 37491, 820, -1000, -1000,
}

var yyPgo = [...]int{
	0, 143, 2742, 229, 150, 3239, 84, 227, 205, 202,
	226, 3237, 3235, 2539, 2535, 3234, 3233, 3231, 3230, 3229,
	3228, 3227, 3226, 3225, 3224, 3223, 3219, 3217, 3216, 3215,
	3214, 3213, 3212, 3211, 3210, 3209, 3206, 3205, 3204, 225,
	3203, 3202, 3201, 3200, 3198, 3196, 3193, 3191, 3188, 3187,
	3184, 3183, 3182, 3179, 3178, 3175, 3174, 3173, 3171, 3170,
	3169, 3168, 3167, 3166, 3165, 3164, 3163, 3161, 3160, 3159,
	3156, 200, 3155, 2533, 3153, 3151, 3150, 3146, 3145, 3144,
	3142, 213, 3138, 3136, 3135, 3134, 3132, 3131, 3128, 3126,
	3125, 3124, 3123, 207, 3122, 3121, 3120, 3117, 3116, 3115,
	187, 3114, 147, 177, 3109, 3106, 3103, 3102, 3101, 217,
	223, 60, 3100, 35, 3099, 198, 3098, 122, 3097, 119,
	3095, 3093, 3091, 3090, 3087, 3086, 3084, 3083, 3082, 3081,
	3080, 3078, 3075, 3072, 3071, 3070, 75, 3069, 238, 3067,
	65, 3065, 3063, 107, 172, 174, 233, 1401, 237, 232,
	168, 145, 85, 3062, 2540, 3059, 135, 210, 134, 25,
	3058, 161, 3057, 126, 38, 26, 228, 127, 47, 189,
	106, 3056, 201, 90, 89, 3055, 3052, 165, 231, 169,
	3051, 109, 3050, 3049, 3048, 3047, 176, 167, 3046, 3042,
	108, 3038, 3036, 112, 3035, 63, 179, 144, 171, 3034,
	874, 97, 98, 149, 3029, 3028, 94, 3027, 3024, 3023,
	3021, 156, 3020, 3018, 123, 77, 3017, 3016, 3015, 55,
	3013, 54, 3012, 64, 3011, 3010, 3009, 3007, 3006, 2993,
	2991, 2989, 2988, 2987, 2986, 61, 2985, 2983, 16, 23,
	22, 2982, 21, 2980, 141, 2979, 2977, 2976, 96, 2975,
	3, 2974, 209, 301, 80, 120, 2973, 390, 2972, 2970,
	2969, 130, 2968, 554, 2966, 2962, 2961, 2959, 2958, 14,
	2956, 203, 44, 2953, 79, 110, 2952, 30, 43, 190,
	212, 2951, 2950, 2935, 129, 72, 41, 0, 2929, 133,
	2927, 2926, 2924, 235, 2923, 211, 199, 142, 218, 259,
	252, 2922, 2921, 74, 2920, 139, 78, 46, 115, 8,
	18, 146, 2918, 349, 162, 2917, 184, 2916, 166, 2,
	124, 2915, 2914, 42, 269, 2913, 2911, 2910, 104, 2909,
	2908, 105, 103, 2907, 2906, 2905, 37, 2904, 29, 40,
	2903, 86, 2901, 221, 2899, 154, 116, 159, 153, 128,
	204, 214, 67, 66, 2898, 1416, 125, 81, 24, 2897,
	206, 2896, 136, 92, 2894, 100, 2893, 222, 355, 191,
	2891, 163, 10, 32, 28, 2890, 9, 2889, 138, 186,
	2888, 2887, 19, 45, 2885, 17, 2882, 2880, 2877, 2876,
	5, 2874, 2873, 2872, 1, 7, 2871, 4, 194, 2870,
	2869, 2868, 2867, 48, 132, 2866, 121, 158, 157, 2865,
	76, 2864, 2862, 2861, 671, 2860, 234, 2857, 2853, 2852,
	2851, 2849, 2848, 2847, 2846, 2845, 83, 53, 2843, 2842,
	2841, 2826, 68, 118, 2825, 2823, 2822, 2821, 31, 152,
	2818, 27, 2817, 36, 34, 33, 2816, 113, 2814, 12,
	160, 2812, 2811, 15, 2810, 2809, 11, 13, 2808, 2807,
	102, 2806, 73, 20, 137, 88, 2804, 2802, 70, 197,
	117, 2801, 2800, 220, 215, 185, 2797, 164, 219, 236,
	2796, 193, 2793, 2790, 2789, 2787, 2786, 2785, 1233, 2779,
	2778, 224, 56, 82, 95, 2773, 2772, 2770, 71, 140,
	99, 93, 50, 69, 2768, 91, 181, 2767, 173, 2766,
	2765, 87, 2764, 2760, 2759, 2756, 2755, 170, 2753, 2752,
	188, 208, 2749, 2748, 2747, 2745, 216, 279, 2744,
}

//line mysql_sql.y:10091
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 516, 524, 524, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 107, 514, 514, 514, 515, 515, 104, 124,
	123, 126, 126, 125, 125, 122, 122, 118, 121, 121,
	120, 120, 119, 114, 116, 116, 115, 117, 117, 105,
	93, 106, 459, 459, 458, 458, 457, 457, 411, 411,
	456, 456, 456, 455, 455, 455, 454, 454, 453, 453,
	452, 452, 450, 450, 451, 449, 448, 448, 448, 446,
	446, 446, 442, 442, 444, 443, 443, 445, 437, 437,
	440, 440, 438, 438, 438, 438, 441, 436, 436, 436,
	435, 435, 92, 92, 92, 357, 357, 91, 91, 371,
	371, 371, 371, 371, 369, 369, 369, 369, 369, 369,
	368, 368, 367, 367, 372, 372, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 82, 82, 82, 82,
	82, 87, 87, 87, 521, 521, 520, 520, 522, 522,
	522, 522, 523, 523, 85, 85, 85, 86, 366, 366,
	366, 83, 84, 84, 356, 356, 361, 361, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 365, 365, 365, 363, 363, 362, 362, 364, 364,
	76, 76, 76, 79, 78, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 77, 77, 77, 77, 77, 77,
	72, 72, 72, 72, 72, 71, 71, 73, 73, 353,
	353, 352, 88, 88, 89, 518, 518, 517, 519, 519,
	519, 519, 90, 96, 96, 96, 96, 96, 96, 96,
	95, 95, 98, 98, 97, 99, 81, 81, 81, 81,
	81, 81, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 484, 484, 484, 486, 486, 291, 292, 525, 294,
	290, 290, 290, 480, 480, 481, 482, 483, 483, 483,
	94, 11, 11, 11, 11, 11, 11, 11, 70, 75,
	243, 243, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 231, 231,
	231, 226, 226, 226, 226, 227, 227, 228, 228, 229,
	229, 229, 229, 230, 230, 248, 248, 248, 247, 245,
	245, 245, 245, 245, 245, 246, 246, 246, 249, 249,
	68, 74, 74, 74, 497, 497, 69, 508, 508, 414,
	414, 305, 305, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 419,
	420, 301, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 46, 49, 45, 45, 45, 342, 342, 44, 526,
	526, 280, 280, 57, 56, 48, 58, 59, 60, 61,
	62, 63, 43, 55, 55, 55, 55, 55, 55, 55,
	55, 66, 66, 431, 431, 528, 528, 528, 64, 65,
	413, 413, 413, 54, 53, 52, 51, 50, 50, 42,
	42, 41, 41, 47, 130, 131, 298, 298, 298, 300,
	300, 296, 527, 527, 385, 385, 299, 299, 40, 40,
	40, 40, 67, 297, 297, 279, 295, 295, 295, 12,
	12, 10, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 23, 24, 26, 350, 350,
	347, 25, 18, 17, 20, 16, 16, 19, 21, 22,
	22, 9, 9, 9, 9, 13, 13, 14, 151, 151,
	201, 201, 492, 492, 488, 488, 489, 489, 489, 490,
	490, 491, 491, 100, 425, 425, 425, 425, 425, 425,
	8, 173, 173, 424, 424, 424, 424, 424, 424, 354,
	354, 469, 469, 469, 470, 172, 172, 167, 167, 426,
	426, 320, 471, 471, 434, 434, 433, 433, 432, 432,
	170, 170, 171, 171, 154, 154, 110, 110, 439, 439,
	439, 439, 447, 447, 410, 410, 235, 235, 272, 272,
	273, 273, 144, 144, 145, 145, 145, 145, 145, 145,
	477, 477, 479, 479, 478, 169, 169, 165, 165, 166,
	166, 166, 164, 164, 163, 162, 162, 161, 159, 159,
	159, 160, 160, 160, 177, 177, 147, 147, 147, 146,
	146, 146, 146, 146, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 148, 148, 485, 485,
	485, 415, 415, 415, 422, 422, 254, 254, 255, 255,
	253, 253, 149, 149, 150, 150, 150, 150, 252, 252,
	251, 152, 152, 158, 157, 157, 153, 153, 153, 153,
	262, 262, 261, 261, 261, 261, 103, 108, 108, 109,
	176, 176, 260, 259, 259, 259, 175, 175, 174, 174,
	168, 168, 156, 156, 156, 156, 258, 155, 256, 513,
	513, 512, 512, 511, 509, 509, 509, 510, 510, 510,
	510, 461, 461, 461, 461, 461, 285, 285, 285, 289,
	289, 288, 288, 288, 288, 288, 293, 7, 7, 7,
	7, 7, 7, 30, 30, 30, 30, 30, 30, 30,
	30, 36, 185, 186, 37, 187, 187, 188, 188, 189,
	189, 190, 191, 192, 192, 192, 192, 35, 178, 178,
	179, 179, 180, 180, 181, 182, 182, 182, 184, 183,
	34, 34, 27, 137, 137, 138, 138, 138, 138, 140,
	140, 232, 232, 232, 139, 139, 141, 141, 141, 493,
	496, 494, 494, 498, 498, 498, 499, 499, 499, 499,
	500, 500, 28, 127, 132, 503, 503, 503, 502, 502,
	504, 504, 505, 505, 276, 276, 277, 277, 135, 136,
	136, 134, 129, 143, 143, 143, 143, 143, 128, 133,
	495, 501, 501, 501, 351, 351, 348, 349, 349, 346,
	345, 345, 345, 507, 507, 506, 506, 506, 286, 286,
	29, 341, 341, 343, 344, 344, 344, 335, 335, 335,
	335, 33, 339, 339, 340, 340, 340, 340, 340, 336,
	336, 338, 338, 334, 334, 334, 334, 334, 32, 142,
	142, 333, 333, 331, 331, 329, 329, 330, 330, 328,
	328, 328, 332, 332, 31, 31, 31, 112, 111, 111,
	111, 275, 275, 274, 274, 113, 38, 213, 213, 399,
	399, 399, 399, 399, 417, 417, 417, 400, 400, 400,
	401, 401, 401, 402, 402, 402, 402, 402, 416, 416,
	418, 418, 418, 373, 373, 374, 374, 374, 377, 377,
	391, 391, 392, 392, 390, 390, 397, 397, 396, 396,
	395, 395, 394, 394, 393, 393, 393, 393, 388, 388,
	387, 387, 375, 375, 375, 375, 375, 376, 376, 376,
	386, 386, 389, 389, 219, 219, 220, 220, 220, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 467, 467, 468, 222, 222, 233,
	233, 233, 233, 233, 233, 221, 221, 223, 223, 202,
	202, 200, 200, 193, 193, 194, 194, 195, 195, 195,
	199, 199, 198, 198, 198, 198, 196, 196, 197, 197,
	197, 197, 197, 197, 359, 359, 464, 464, 465, 465,
	460, 460, 460, 463, 463, 463, 463, 463, 466, 466,
	466, 462, 462, 203, 270, 270, 270, 287, 287, 287,
	287, 269, 269, 269, 218, 218, 217, 217, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 358, 358,
	302, 302, 303, 303, 242, 241, 241, 241, 241, 241,
	239, 240, 238, 238, 238, 238, 238, 237, 237, 236,
	236, 236, 337, 337, 234, 234, 225, 225, 225, 224,
	224, 224, 398, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 268, 268, 268,
	312, 312, 317, 317, 476, 476, 475, 204, 204, 204,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 214,
	214, 214, 382, 382, 382, 382, 383, 383, 383, 383,
	384, 384, 384, 380, 380, 381, 381, 321, 322, 322,
	423, 423, 378, 378, 379, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 430, 430, 430, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 487, 487, 487, 472, 472, 472, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 266, 266, 266, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 323, 323, 324, 324, 427, 427,
	427, 427, 427, 427, 428, 428, 429, 429, 429, 429,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 310,
	263, 263, 263, 325, 318, 318, 319, 319, 313, 313,
	313, 313, 313, 313, 313, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 314, 314, 316,
	316, 327, 327, 327, 326, 326, 326, 326, 326, 326,
	326, 216, 216, 216, 216, 307, 307, 307, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	206, 206, 206, 206, 210, 210, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	211, 211, 211, 211, 211, 209, 209, 209, 209, 209,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 101, 102, 102, 208,
	271, 271, 403, 403, 406, 406, 404, 404, 405, 407,
	407, 407, 408, 408, 408, 409, 409, 409, 412, 412,
	278, 278, 278, 284, 284, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 1, 7, 4,
	1, 3, 2, 2, 2, 1, 3, 3, 4, 3,
	7, 5, 8, 2, 2, 1, 3, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 2, 1, 2,
	2, 1, 2, 3, 2, 3, 3, 3, 1, 1,
	7, 7, 8, 8, 0, 4, 7, 0, 3, 0,
	2, 0, 1, 1, 1, 1, 4, 2, 2, 3,
	3, 4, 5, 3, 4, 4, 2, 2, 2, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 2, 5, 5, 0, 2, 7, 0,
	1, 0, 1, 5, 5, 3, 3, 2, 4, 4,
	4, 4, 4, 1, 1, 1, 3, 3, 1, 1,
	1, 6, 8, 0, 1, 1, 1, 1, 5, 5,
	0, 1, 1, 3, 3, 3, 4, 6, 7, 4,
	4, 7, 8, 3, 3, 3, 0, 2, 2, 0,
	2, 2, 1, 1, 1, 1, 0, 1, 4, 4,
	5, 4, 3, 1, 3, 1, 1, 3, 5, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 4, 1, 3,
	1, 4, 6, 6, 4, 4, 4, 3, 6, 3,
	5, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 1, 3, 2, 1, 5, 4, 4, 2, 0,
	5, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 5, 3, 4, 6, 4, 5,
	2, 3, 1, 3, 6, 0, 3, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 3, 0, 1,
	1, 0, 2, 2, 0, 2, 3, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 3, 2, 3, 1, 4, 3, 0,
	1, 1, 2, 5, 2, 2, 2, 0, 2, 3,
	3, 0, 1, 3, 1, 3, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 12, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	9, 8, 7, 1, 2, 2, 3, 3, 3, 0,
	4, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	4, 1, 1, 3, 4, 3, 0, 1, 1, 1,
	0, 2, 7, 8, 8, 0, 3, 3, 0, 2,
	0, 3, 0, 5, 1, 3, 0, 3, 3, 0,
	2, 9, 6, 0, 2, 2, 3, 3, 4, 4,
	1, 0, 2, 2, 1, 3, 2, 1, 3, 2,
	1, 3, 2, 0, 1, 3, 4, 3, 1, 1,
	4, 1, 3, 1, 1, 1, 1, 0, 1, 1,
	1, 11, 0, 2, 3, 2, 3, 1, 1, 1,
	3, 3, 4, 0, 2, 2, 2, 2, 6, 0,
	4, 1, 1, 0, 3, 0, 1, 1, 2, 4,
	4, 4, 0, 1, 11, 9, 11, 2, 2, 4,
	5, 1, 3, 0, 3, 5, 10, 0, 2, 0,
	3, 2, 4, 3, 0, 2, 1, 0, 2, 3,
	0, 2, 3, 0, 3, 2, 4, 3, 0, 1,
	0, 1, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 0, 1, 1, 3, 2, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 5, 4, 1, 3, 3, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 1, 1,
	1, 1, 7, 9, 7, 9, 2, 1, 7, 9,
	7, 9, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 3, 3, 2, 2,
	1, 5, 6, 4, 1, 1, 1, 5, 1, 2,
	0, 1, 1, 2, 5, 0, 1, 1, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	2, 2, 0, 3, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 3,
	5, 2, 2, 2, 2, 1, 1, 2, 5, 6,
	6, 6, 1, 1, 1, 1, 1, 4, 4, 4,
	0, 2, 0, 1, 1, 2, 4, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 2, 5, 0, 1, 3, 0, 1,
	0, 2, 0, 1, 6, 8, 6, 5, 5, 6,
	6, 6, 6, 5, 6, 6, 6, 6, 6, 6,
	6, 6, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 4, 4, 4, 3, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 2, 2, 4, 6, 2, 2,
	4, 6, 4, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 2, 3, 5, 1,
	1, 3, 0, 1, 0, 3, 0, 3, 3, 0,
	3, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -516, -524, -2, -5, 581, -1, -4, -102, -76,
	-7, -104, -105, -8, -100, -9, -10, -12, -80, -95,
	-97, -99, -98, -39, -11, -94, -71, -72, -82, -88,
	-91, -92, -93, -106, -101, -103, -144, -107, 574, -77,
	-78, -79, -30, -29, -28, -27, -127, -132, 580, 433,
	12, 482, -13, -14, -477, -15, 254, -290, -291, -292,
	-294, -525, -40, -41, -42, -50, -51, -52, -53, -54,
	-64, -65, -66, -43, -44, -45, -48, -46, -57, -56,
	-58, -59, -60, -61, -62, -63, -47, -130, -131, -67,
	-49, -69, -68, -74, -70, -75, -129, -134, 229, -73,
	75, -83, -84, -85, -86, -87, -89, -90, 359, 365,
	422, 573, 60, -145, -147, 584, 157, 158, 160, 161,
	-31, -32, -33, -34, -35, -36, -38, -37, 225, 14,
	515, -16, -19, -17, -20, -18, -25, -26, -24, -21,
	-23, -128, -22, -133, 249, 248, 37, 315, 316, 317,
	363, 247, 226, 13, 30, 41, 341, -146, 81, 227,
	-148, 10, 586, -6, -3, -2, -114, -118, -122, -125,
	-126, -123, -124, -4, -102, 115, 239, 575, -287, 355,
	576, 578, 577, 84, 92, -281, -283, 359, 365, 573,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 485, 560, 561, 562,
	563, 339, 340, 512, 266, 290, 390, 296, 303, 157,
	176, 170, 198, 190, 165, 270, 308, 271, 91, 160,
	468, 105, 445, 419, 163, 285, 287, 289, 292, 291,
	293, 295, 272, 342, 186, 181, 284, 268, 179, 273,
	39, 274, 203, 275, 276, 517, 441, 338, 447, 300,
	417, 180, 442, 288, 444, 205, 209, 459, 460, 174,
	175, 449, 462, 202, 246, 42, 514, 258, 463, 207,
	201, 197, 471, 304, 302, 200, 173, 196, 269, 64,
	211, 210, 212, 413, 414, 415, 416, 277, 278, 353,
	458, 193, 182, 343, 166, 22, 466, 253, 446, 366,
	279, 297, 305, 206, 208, 260, 265, 516, 421, 264,
	301, 464, 178, 257, 286, 252, 467, 167, 368, 280,
	161, 294, 461, 470, 63, 381, 172, 164, 243, 158,
	262, 267, 11, 281, 282, 283, 307, 306, 298, 194,
	259, 199, 184, 171, 195, 159, 261, 469, 382, 571,
	341, 400, 192, 189, 263, 236, 465, 448, 162, 404,
	383, 187, 309, 567, 568, 569, 354, 337, 310, 311,
	185, 250, 439, 440, 312, 314, 410, 330, 384, 420,
	391, 385, 218, 318, 451, 453, 204, 570, 319, 320,
	321, 443, 322, 323, 324, 325, 358, 55, 57, -364,
	-362, -287, 573, 365, 359, 341, -187, -287, 585, -154,
	38, -200, -287, -154, -73, -14, -13, -146, -147, -200,
	233, -295, 23, 417, -81, 418, 229, 81, -287, -9,
	-93, -8, -100, -71, -144, 422, -293, -287, 315, 315,
	-293, 233, -287, 264, 398, -414, 239, -368, -341, 265,
	-367, -343, -370, -344, 31, 225, 227, 226, 261, 14,
	363, 235, 12, 10, 364, 247, 24, 25, 27, 13,
	365, 367, 28, 368, 371, 372, 373, 41, 376, 377,
	254, 84, 92, 87, 272, -186, -287, -319, -313, 112,
	255, -315, -308, -309, -311, -456, -450, -306, 81, 139,
	140, 147, 113, -310, -398, 35, 115, 524, 483, -264,
	-265, -266, -267, -268, -287, -451, -449, 87, 96, 99,
	102, 103, 101, 100, 151, 183, 98, 88, 152, -147,
	84, -472, 532, -282, 553, 560, 561, 562, 563, 552,
	60, -421, -429, 232, -427, 150, 188, 250, 184, 12,
	145, 410, 185, 529, 549, 485, 533, 556, 526, 527,
	521, 522, 523, 525, 534, 536, 548, -430, 544, 554,
	555, 542, 557, 558, 559, 86, 85, 547, 546, 535,
	530, 531, 537, 520, 528, 538, 539, 545, 550, 551,
	347, 105, 348, 349, 475, 342, 350, 239, 417, 69,
	351, 352, 353, 354, 355, 482, 356, 70, 357, 346,
	254, 400, 358, 187, 204, 487, 486, 488, 479, 476,
	474, 477, 478, 480, 481, 540, 541, 543, -108, -109,
	565, -163, -164, -257, 19, 6, 7, 8, 9, -514,
	419, 516, 162, 159, -355, 162, 111, 167, 166, -355,
	318, 260, 360, -137, 236, 339, 400, 322, 93, 264,
	-335, -333, -416, 312, 308, 234, -138, 244, 243, 106,
	475, 232, 374, 108, 303, 55, 57, -488, -489, 222,
	223, 224, -479, 508, -478, -287, 349, 95, 26, 233,
	360, 260, 453, 451, 452, 454, 455, 456, 457, -55,
	-431, -413, 448, 447, -299, 440, 446, 438, 450, 441,
	340, 324, 323, 225, 582, 509, -278, 384, 420, 472,
	473, 361, 421, 459, 461, 442, 105, 191, 188, 236,
	233, 339, 475, 400, 93, 322, -488, 159, 459, 461,
	264, 398, 40, -361, 410, -360, -362, 460, 471, 85,
	86, 458, -278, 105, 439, 439, -164, -257, -163, -145,
	-147, -103, -477, 234, 339, 400, 264, 235, 233, 236,
	475, 232, 315, 360, 260, 322, 93, -415, -485, 31,
	-422, 219, 220, 221, 32, 33, -1, 119, 586, -313,
	-313, -6, 587, -6, -313, -287, -287, 154, -206, -210,
	-207, -209, -208, -212, -211, 188, 189, 150, 192, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 30,
	204, 250, 184, 185, 186, 187, 205, 170, 190, 513,
	213, 171, 214, 172, 215, 173, 216, 174, 175, 217,
	176, 179, 180, 181, 182, 178, 153, 81, 153, 87,
	-170, 256, -200, 153, -170, -164, -163, -164, -200, -269,
	-287, 419, 122, -81, -81, 418, -480, -481, -482, -484,
	229, 418, 417, 153, 272, 15, -293, -293, 79, -200,
	-343, 264, -368, -341, 35, 78, 154, 237, 154, 78,
	81, 361, 339, 400, 362, 475, 233, 374, 236, 264,
	375, 339, 400, 233, 236, 475, 264, 339, 233, 236,
	400, 264, 375, 438, 439, 236, 26, 366, 369, 370,
	439, -435, 471, 154, 111, 108, 109, 110, -313, 129,
	-326, 122, 123, 124, 125, 126, 127, 128, 136, 135,
	146, 139, 140, 141, 142, 143, 144, 145, 137, 138,
	132, 112, 130, 134, 131, 114, -147, -313, -319, 60,
	-311, -311, -311, -311, -398, -317, -313, 81, 81, 153,
	100, 87, -313, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, -428, 81, 81, -323, -324,
	81, 81, -306, -269, 81, 87, 87, 81, 81, 81,
	87, -324, -324, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, -164, 154, 81, -110, 38, -166, 21,
	-148, -147, 20, 31, 32, 31, 32, 31, 32, 31,
	32, 96, 464, 515, 165, 166, 167, -185, -287, -187,
	-178, -287, 236, -138, -331, 239, -331, -331, -331, -331,
	-331, 235, -331, 233, 233, 233, -331, 482, 122, 122,
	58, -490, 169, 154, -479, -169, 81, -298, 130, 134,
	-298, 23, 262, 262, 262, -298, 302, -526, -527, 15,
	132, -296, -527, -296, -296, -298, -528, 235, 449, 42,
	263, 262, -165, -166, -165, 443, 439, -385, 444, 445,
	-300, -527, -299, -298, -298, -299, -298, -298, -298, 233,
	236, 475, 322, 583, -526, -526, 30, 30, -414, -200,
	-414, 509, -279, -287, -414, -414, -414, -491, 238, -521,
	-520, 462, -523, 464, 159, -362, 159, -362, -343, 264,
	264, 154, 122, 23, -363, 122, 133, -362, -362, -363,
	-363, -221, 40, -286, 150, -287, 87, -221, 40, -518,
	-517, -200, -165, -148, -147, 82, 82, 82, -414, -414,
	-414, -414, -414, -416, -414, -414, -414, -293, -178, -187,
	239, -414, -414, -149, -150, 141, -313, -287, -149, -3,
	-116, -115, 116, 117, 119, 576, 355, 575, 579, 573,
	-362, 40, -409, 382, 381, -403, -405, 81, -404, 81,
	-404, -404, -404, 81, 81, -406, 81, -406, -406, -403,
	-407, 81, -407, -408, 81, -408, -407, -287, -318, -319,
	-287, 38, -424, 60, -144, 81, 30, 81, -287, -425,
	60, -144, 81, 30, -165, -110, -166, 153, 96, 87,
	-81, 82, 154, -483, 102, 103, -486, 202, 194, -287,
	-96, 87, -7, -8, -9, -10, -39, -71, -144, -452,
	-450, 81, 31, 409, 78, 15, -369, 233, 475, 360,
	260, 236, 339, -367, -350, -347, -345, -286, -343, -346,
	-345, -372, -269, 439, -111, 423, 314, -313, -313, -313,
	-313, -313, 101, 112, 337, 102, 103, -308, -327, 31,
	310, 311, -309, -309, -309, -309, -309, -309, -309, -309,
	-309, -309, -309, -309, -316, -325, -398, 81, 132, 130,
	134, 131, 114, -311, -311, -309, -309, 82, 154, -476,
	-475, 116, -313, -313, -287, -473, -474, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 351, 346,
	352, 350, 342, 358, 353, 354, 187, 506, 507, 500,
	501, 502, 503, 504, 505, -318, -318, -313, -473, -318,
	-263, 32, 31, -319, -319, -319, 82, -313, -487, 335,
	334, 336, -167, -287, -318, 82, 82, 82, 96, -319,
	-319, -318, -309, -318, -474, -263, -263, -319, -319, -263,
	-263, -263, -263, 141, -263, -263, -263, -263, -263, -263,
	-263, -263, 82, 82, 82, -165, -109, -433, -432, -313,
	40, 566, -110, -313, -162, -161, -313, -515, 87, 465,
	466, 163, 166, 165, 34, 81, 81, 153, -331, -200,
	112, -493, -287, -351, -348, -345, -287, -287, -341, -287,
	-287, -331, -331, -331, -200, -232, 52, 53, 54, -345,
	-139, 55, 56, -491, -478, 34, -168, -287, -253, 16,
	-311, -311, -345, 264, -526, -298, -298, -280, -279, -300,
	-295, -300, -300, -253, -527, -298, -298, -300, -296, -253,
	-287, 439, -253, -253, -385, -297, -287, -297, -331, -279,
	-280, -280, -200, -243, -244, 230, 227, 226, -250, 228,
	303, -332, 483, -227, -228, 76, 41, -230, 386, 379,
	266, 270, 91, 271, 419, 272, 235, 274, 275, 276,
	291, 293, 246, 277, 278, 279, 410, 280, 158, 292,
	281, 282, 283, 362, -222, 6, 325, 40, 50, 51,
	432, 431, 518, 515, 267, -493, -493, 30, 30, -351,
	-287, -287, -157, -152, -156, -153, -158, -256, -258, -155,
	81, -200, -147, -287, 154, 463, 465, 466, -521, -363,
	-521, -363, 31, 409, -366, 409, 31, -341, -360, 459,
	461, -356, 87, 410, -346, -365, 78, 150, -432, -363,
	-363, -365, -365, 149, 154, -519, 464, 465, 222, -110,
	-202, -200, -493, -350, -341, -287, -414, -202, -287, -287,
	81, 35, -287, -287, -252, 154, -251, 15, -288, -287,
	34, 87, 153, -252, -117, -115, 118, -313, -6, 575,
	-313, -6, -6, -313, -6, -313, -412, 383, 96, 96,
	-271, 87, -271, 96, 96, 96, 82, 87, -354, 78,
	-426, -320, -471, 565, -172, 82, -167, -469, -470, -167,
	-171, -287, -426, -172, 82, -469, -110, -110, -287, 23,
	-81, -481, 153, 154, -168, -369, -349, -346, -371, 141,
	-287, -357, 154, 515, 590, 85, 237, -507, -506, 401,
	82, 154, -436, 238, 482, 87, 588, 218, 101, 337,
	102, 103, -398, -319, -316, -311, -311, -309, -309, -314,
	251, -314, 111, -313, -312, -475, 118, -313, 34, 154,
	79, 153, 82, 82, 15, 15, 82, -313, 82, 82,
	82, 82, 15, 15, -313, 82, 153, 82, 82, 82,
	82, 79, 82, 154, 82, 154, -319, -313, 82, 82,
	-313, -313, -313, -319, 82, -313, -313, -313, -313, -313,
	-313, -313, -313, -379, 434, -379, -379, 154, 82, 87,
	154, 22, 154, -159, 36, 37, 164, 167, 167, 166,
	-186, -188, -189, -190, -191, -192, 132, 155, 156, -179,
	-180, -181, -182, -206, -269, 189, 192, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 250, 184,
	185, 186, 187, 205, 170, 190, 171, 172, 173, 174,
	175, 176, 179, 180, 181, 182, 178, -287, -200, -169,
	35, -496, 387, -508, 154, 40, -506, 475, -135, 314,
	-334, 79, -142, 15, -200, -200, -200, -213, 34, 15,
	-151, -201, -287, 81, 82, 154, -313, -342, 79, -287,
	-280, -253, -253, -200, -287, -253, -253, -298, -300, -300,
	-296, 153, -279, -169, 154, -199, -203, 241, -196, -198,
	-269, -303, -197, 244, -465, 242, 240, 106, 245, 299,
	107, 235, -245, 235, 107, -287, 241, 245, 240, -246,
	235, 299, 242, -231, 237, 34, -284, 122, -278, 149,
	237, 42, 362, -284, 519, -284, -284, -284, -284, -284,
	-284, -284, 273, 273, -284, -284, -284, -284, -284, -284,
	-284, -284, -284, -284, -284, 159, -284, -284, -284, -284,
	-284, -284, 81, 268, 269, -497, 387, 30, 345, 345,
	-508, 30, -143, 339, 30, -259, -260, -261, -262, 67,
	71, 73, 68, 69, 70, 74, 30, 154, -285, -289,
	34, -287, 87, -285, -147, -152, -157, -285, 81, -520,
	-522, 467, 464, 470, -365, -365, 237, 81, 122, -365,
	-365, 40, -286, -517, 471, 465, -177, 23, 154, 78,
	-202, -179, -187, -253, -150, -152, -287, 87, -287, 141,
	-253, 119, -6, 117, -121, -120, -119, 120, 573, 579,
	119, 119, 119, 82, 82, 82, 154, 82, 82, 82,
	154, 82, 154, -439, 444, 39, 154, 81, 82, 154,
	60, 154, 122, 82, 154, 82, 60, -177, 153, 419,
	-287, -450, 82, -371, 154, 237, 153, 153, -347, 365,
	-286, -349, 20, 515, -269, 38, -275, -274, 87, 588,
	82, -314, -314, 111, -311, -308, 82, 119, -313, 117,
	-204, -206, 381, 382, -205, -211, 150, 188, 250, 187,
	186, 184, 381, 382, -221, -287, -313, -313, 82, -313,
	-313, 15, -287, -221, -309, -313, -164, 82, -378, -379,
	-378, 82, 82, 82, 82, -378, 82, 82, 82, 82,
	82, 82, 82, 82, 81, -432, -439, -313, -313, -161,
	-160, 43, 167, 373, 82, 154, -269, 82, 154, -206,
	-169, 34, -499, 446, 389, 399, -284, -305, -304, 341,
	41, -419, 410, 395, 396, -348, 264, -287, -505, 94,
	122, 78, 329, 330, 331, 332, -329, -330, -328, -332,
	-493, 81, 81, 81, -399, 319, -206, -200, -151, -287,
	15, 154, -492, 153, -1, -287, -341, -298, -253, -527,
	-253, -298, -298, -300, -287, 34, -244, -248, 44, 46,
	-203, -206, -197, -464, -465, -331, -287, 107, -464, 107,
	81, -287, -287, -287, 107, 107, -287, -287, -287, -247,
	-297, -226, 40, 47, 48, 49, -284, -284, 191, -229,
	40, 409, 411, 412, 96, 96, 96, 96, 87, 87,
	87, -284, -284, 96, 87, -289, 87, -466, 166, 44,
	45, 96, 96, 96, 96, 40, 87, -233, 40, 284,
	288, 285, 286, 287, 87, 96, 40, 96, 40, 96,
	40, -287, 81, -467, -468, 87, -499, -284, 345, -362,
	122, -305, -504, 314, -136, 91, 31, -173, 230, 227,
	-493, -353, -352, -269, -156, -156, -156, -156, 67, 67,
	67, 72, 67, 72, 67, -261, -353, -158, -169, -289,
	82, -513, -512, -511, -509, 75, 238, 76, -318, 464,
	468, 469, -349, -301, 87, -356, 13, -200, -200, -418,
	294, 295, 82, -255, 17, 153, -255, 115, -6, -117,
	-119, -313, -6, -313, 575, 355, 576, 87, 96, 96,
	-447, 429, 424, 426, 107, -320, -434, -433, 60, -144,
	-167, -426, -470, -432, -287, 60, -144, -426, -287, 96,
	15, -346, -341, 141, 141, -287, 366, -357, 87, 388,
	87, 233, 589, 154, 122, -275, -308, -313, 82, -214,
	175, 174, -214, 82, -404, -404, -403, -406, -403, -214,
	-214, 82, 82, 23, 82, 82, 82, -313, 82, 82,
	154, -423, 484, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -322, -321, 256, -447,
	44, 45, 87, 87, -190, -206, 231, -181, 40, 34,
	-144, -500, 91, -494, 87, -287, -501, 91, 390, 152,
	343, 40, 391, 392, 407, 338, 96, 96, 397, -495,
	-287, -143, -503, 51, 122, 87, -200, -328, -278, 149,
	275, 322, -193, -194, -195, -203, -196, -198, -193, -193,
	-400, 321, 20, 96, 140, -170, 79, 153, -152, -201,
	-287, 141, 82, -253, -287, -253, -253, -298, -144, -269,
	-248, -218, -217, -215, 101, 112, 40, 379, -216, 91,
	149, 289, 292, 291, 267, 290, -242, -302, 78, 385,
	327, 328, -332, 240, 106, 107, 367, -303, -462, -287,
	-460, -462, -287, -460, -460, -331, -313, -287, -249, 327,
	328, -358, 300, 112, -358, -221, -221, 30, 87, 87,
	-202, 82, 154, 122, -500, -494, 122, -363, 87, -501,
	-505, 122, 87, 154, -173, -173, -253, 154, 122, -175,
	-174, 78, 79, -176, 78, -174, 67, 67, -253, -511,
	-510, 23, -465, -465, -465, 82, 82, -254, 18, 20,
	141, -254, 119, 117, 119, 119, -287, 82, 82, -410,
	567, -443, -445, 424, 20, 20, 13, 82, -426, -426,
	-341, -357, 410, -200, -274, 87, 589, -313, 82, -313,
	82, 87, -164, 20, -410, -183, -206, -306, -144, -140,
	515, 87, -498, 401, 87, 87, 96, 40, 96, 152,
	393, -420, -136, -502, 91, 122, 588, 81, -284, -284,
	-284, -287, 82, 154, 82, 82, -401, 255, 96, 140,
	96, 140, 96, -285, -152, -287, -253, -492, 153, -253,
	-253, -215, 101, -309, 87, -223, -286, 150, -224, 40,
	288, 284, 122, 122, -225, 40, 268, 269, -234, 81,
	299, 13, 191, 107, 107, -200, 81, 81, 79, 309,
	81, 81, -462, 82, 300, 149, -221, 82, -468, 87,
	-498, 87, -365, -503, 87, -493, -164, -352, -432, -313,
	81, -313, 81, 67, 19, 17, -313, -319, 239, -6,
	576, 355, -235, 568, 87, 20, 87, -441, 87, -353,
	-113, -437, -385, 82, 82, -378, -381, -380, -384, 430,
	301, 437, -319, -235, 514, -140, -141, 59, 471, 20,
	515, 342, 40, 96, 40, 394, 87, 102, 103, -276,
	-277, 87, -336, -338, -269, 81, -221, -223, 87, -219,
	-220, -250, -332, -195, -112, -111, -219, -402, 158, 96,
	140, 96, 96, -253, -253, 87, 87, 96, 81, -427,
	30, -337, 81, -336, -336, -463, 329, 330, 331, 333,
	332, -463, -336, -336, 81, -359, -358, -284, 149, -502,
	-165, -168, -461, -287, 240, 20, 20, -287, -287, -272,
	569, 96, 87, 426, -411, 570, -446, 429, -440, -438,
	424, 425, 426, 427, 82, -383, 114, 393, 397, -307,
	-310, 96, 99, 183, 152, -272, -184, -287, 299, 87,
	388, 87, 342, 589, 154, 122, 82, 154, -403, -313,
	-373, 256, 154, -250, -278, -113, -373, -417, 166, 320,
	515, 96, 140, 96, -164, 82, -313, -323, -284, -237,
	-236, 511, -336, 82, 82, 82, 82, -336, -221, -284,
	82, 82, 154, 81, 20, 87, -448, 238, -444, -445,
	428, -438, 20, 426, 20, 20, -382, -383, 397, -307,
	-310, 565, 435, 435, 435, 34, 366, 410, -277, 87,
	-339, -338, -159, 82, -374, 308, 20, -250, -284, -374,
	320, 96, 140, 96, -165, 82, -287, -241, -239, -240,
	78, 442, 297, 298, 82, -339, 79, -339, 79, -339,
	79, -339, 79, 82, -221, -287, 240, -273, -287, -441,
	-455, 81, 96, -443, -442, -444, 20, -441, 20, -441,
	-441, 111, 436, 436, 436, 87, -340, 246, 91, 515,
	327, 328, -159, 20, -375, 301, 302, -376, -389, 304,
	-221, 96, -358, -240, 78, -239, 78, 14, 13, -463,
	-463, -463, -463, -242, 82, 154, -459, 30, 82, -454,
	-453, -270, -449, -287, 429, 430, 87, -441, -382, -284,
	87, 326, -269, 81, -387, 305, 81, -385, 81, -385,
	107, 330, -238, 294, 295, 30, 166, -238, -339, -339,
	-339, -339, -287, -458, -457, -456, 82, 154, 153, 96,
	-287, -372, -377, 306, 96, -309, 81, -309, 81, -386,
	303, 81, 101, 40, 296, 154, 122, -453, -287, 82,
	-391, 81, 20, 82, -372, 82, -372, 81, 122, -309,
	-457, 40, -313, 153, -392, -390, 256, -376, 82, 82,
	82, -372, 96, 82, -287, 82, 154, -287, -388, 307,
	82, -390, -393, 60, 96, -397, -394, 81, -250, 258,
	132, -397, -250, -396, -395, 306, 259, 81, 82, 154,
	-287, 255, 81, -319, -395, -394, -319, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 807, 808, 809, 810, 811, 812, 0, 0,
	0, 0, 581, 582, 0, 551, 0, 0, 0, 0,
	0, 0, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 351, 352, 353, 354, 355, 356, 357, 0, 285,
	281, 206, 207, 208, 209, 210, 292, 293, 419, 0,
	0, 0, 0, 662, -2, 53, 274, 0, 265, 265,
	813, 814, 815, 816, 817, 818, 819, 820, -2, 594,
	0, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 340, 341, 342, 336, 337, 339,
	338, -2, 0, 594, 0, 0, 0, 682, 0, 0,
	699, 721, 23, 0, 7, 9, 10, 11, 12, 13,
	14, 15, 16, 17, 18, 0, 0, 19, 0, 19,
	0, 0, 0, 1157, 1158, 1159, 1160, -2, 1644, 1622,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835,
	1836, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 0,
	258, 256, 1622, 1644, 1704, 1737, 0, 825, 0, 640,
	0, 645, 1111, 640, 286, 583, 584, 682, 682, 549,
	0, 322, 0, 1635, 326, 0, 0, 0, 546, 316,
	317, 318, 319, 320, 321, 0, 0, 806, 0, 0,
	312, 0, 280, 1695, 0, 0, 0, 0, 0, 0,
	150, 931, 152, 933, 156, 163, 0, 0, 168, 169,
	172, 173, 174, 175, 176, 0, 180, 0, 182, 185,
	0, 187, 188, 0, 191, 192, 193, 0, 203, 204,
	205, 934, 935, 936, -2, 81, 823, 1556, 1446, 0,
	1453, 1454, 1465, 1476, 1235, 1236, 1237, 1238, 0, 0,
	0, 0, 0, 1245, 1246, 0, 1262, 1800, 0, 1252,
	1253, 1254, 1255, 1256, 90, 102, 103, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 0, 1506, 1507, 1508, 1419, 1222,
	1157, 0, 1808, 0, 1828, 1833, 1834, 1835, 1836, 1827,
	0, 0, 1404, 0, 1394, 0, 0, -2, -2, 0,
	0, 1763, -2, 1805, 1824, 1832, 1809, 1831, 1802, 1803,
	1797, 1798, 1799, 1801, 1810, 1812, 1823, 0, 1819, 1829,
	1830, 0, 0, 0, 0, 104, 105, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1410, -2, 1412, 1413, 1415, -2, 1417, 1418, -2, 1421,
	1422, 1423, -2, -2, 1426, 1427, 1428, 1429, 1430, 1431,
	1434, -2, -2, -2, -2, 1406, 1407, 1408, 1409, 1398,
	1399, 1400, 1401, 1402, 1403, -2, -2, -2, 682, 757,
	0, -2, 0, 0, 0, 704, 707, 710, 713, 0,
	54, 55, 275, 276, 264, 266, 0, 270, 0, 263,
	0, 0, 0, 0, 963, 963, 963, 963, 963, 963,
	0, 963, 0, 0, 0, 963, 853, 938, 939, 940,
	961, 962, 1009, 0, 0, 0, 0, 599, 595, 596,
	597, 598, 670, 0, 672, 675, 526, 526, 473, 0,
	0, 0, 526, 0, 487, 479, 0, 0, 0, 526,
	0, 0, 677, 677, 0, 529, 536, 526, 526, -2,
	526, 526, 526, 0, 0, 493, 494, 495, 479, 479,
	498, 499, 500, 511, 512, 537, 1580, 0, 0, 419,
	0, 419, 0, 419, 419, 419, 601, 1732, 1642, 1709,
	1695, 0, 0, 231, 1763, 236, 0, 1643, 1658, 0,
	0, 1676, 0, -2, 0, 302, 677, 0, 683, 0,
	682, 0, 0, 419, 419, 419, 419, 419, 1008, 419,
	419, 419, 0, 0, 0, 419, 419, 0, 0, 722,
	723, 718, 719, 720, 724, 725, 5, 6, 19, 0,
	0, 0, 0, 0, 0, 60, 59, 0, 1557, 1575,
	1511, 1512, 1513, 1562, 1515, 1566, 1566, 1566, 1566, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 0, 0,
	1555, 1535, 1564, 1564, 1564, 1562, 1559, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1569, 1569, 1572, 1572, 1569, 0, 1444, 0, 0,
	0, 0, 644, 0, 0, 677, -2, 0, 550, 323,
	1161, 0, 0, 327, 328, 0, 0, 343, 0, 346,
	331, 332, 333, 0, 130, 0, 314, 315, 0, 0,
	282, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	0, 160, 157, 164, 167, 177, 184, 0, 196, 198,
	201, 158, 165, 170, 171, 178, 199, 159, 161, 162,
	166, 200, 202, 179, 183, 197, 181, 186, 189, 190,
	195, 0, 131, 0, 0, 0, 0, 0, 1452, 0,
	0, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1446, 0, 0,
	1241, 1242, 1243, 1244, 1247, 0, 1263, 0, 0, 0,
	1505, 1509, 0, 1444, 1444, 0, 1444, 1440, 0, 0,
	0, 0, 0, 0, 1444, 1380, 0, 0, 1382, 1395,
	0, 0, 1384, 1385, 0, 1388, 1389, 1444, 0, 1444,
	1393, 1376, 1377, 0, 1440, 1440, 0, 0, 1440, 1440,
	1440, 1440, 1440, 1440, 1440, 1440, 1440, 1440, 1440, 1440,
	0, 0, 0, 677, 0, 0, 665, 0, 646, 0,
	701, 703, 0, 705, 706, 708, 709, 711, 712, 714,
	715, 56, 0, 0, 268, 0, 273, 0, 822, 0,
	0, 838, 963, 854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 963, 963, 963, 0, 855, 0, 0,
	0, 601, 600, 0, 671, 0, 0, 730, 0, 0,
	472, 0, 479, 526, 526, 485, 486, 481, 480, 532,
	533, 529, 0, 529, 529, 730, 0, 505, 506, 507,
	526, 526, 513, 678, 514, 515, 529, 0, 534, 535,
	730, 0, 0, 730, 730, 0, 523, 524, 525, 0,
	0, 963, 0, 542, 481, 481, 1581, 1582, 0, 972,
	0, 0, 0, 545, 0, 0, 0, 0, 602, 211,
	214, 0, 217, 0, 1732, 0, 1732, 0, 224, 0,
	0, 0, 0, 0, 0, 254, 255, 0, 0, 0,
	0, 245, 248, 1105, 1106, 928, 929, 249, 250, 294,
	295, 0, 646, 700, 702, 696, 697, 698, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 577, 0, 579,
	0, 0, 0, 738, 732, 734, 801, 90, 738, 8,
	77, 74, 0, 19, 0, 0, 19, 19, 0, 19,
	259, 0, 1578, 1576, 1577, 1514, 1563, 0, 1540, 0,
	1541, 1542, 1543, 0, 0, 1536, 0, 1537, 1538, 1539,
	1530, 0, 1531, 1532, 0, 1533, 1534, 257, 0, 1445,
	826, 0, 619, 632, 614, 0, 621, 0, 1112, 603,
	632, 605, 0, 621, 646, 668, 646, 0, 324, 0,
	329, 0, 0, 345, 347, 348, 349, 334, 335, 547,
	310, 311, 303, 304, 305, 306, 307, 308, 309, 313,
	100, 0, 283, 284, 0, 0, 0, 144, 145, 146,
	147, 148, 149, 151, 135, 568, 570, 920, 932, 0,
	923, 0, 154, 194, 127, 0, 0, 1447, 1448, 1449,
	1450, 1451, 1455, 0, 1457, 1459, 1461, 1463, 0, 1481,
	-2, -2, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1466, 1479, 1480, 0, 0, 0,
	0, 0, 0, 1477, 1477, 1472, 0, 1239, 0, 1260,
	1264, 0, 0, 0, 91, 1439, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 0, 0, 1446, 0, 0,
	0, 1441, 1442, 0, 0, 0, 1335, 0, 0, 1341,
	1342, 1343, 0, 627, 0, 1405, 1381, 1396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 756, 758, 0, 636, 638,
	639, 0, 666, 679, 684, 685, 688, 52, 57, 277,
	278, 0, 0, 272, 0, -2, 840, 0, 0, 675,
	0, 0, 869, 417, 914, 0, 0, 0, 930, 953,
	959, 0, 0, 0, 987, 856, 861, 862, 863, 857,
	858, 864, 865, 0, 673, 0, 0, 770, 471, 0,
	527, 528, 476, 1695, 481, 730, 730, 488, 482, 489,
	531, 490, 491, 492, 0, 730, 730, 526, 529, 516,
	530, 529, 519, 520, 0, 538, 543, 539, 0, 541,
	496, 497, 675, 359, 360, 0, 0, 0, 365, 378,
	1583, 0, 0, 0, 0, 375, 1583, 0, 1583, 1583,
	1583, 1583, 1583, 1583, 1583, 0, 0, 1583, 1583, 1583,
	1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 0, 1583,
	1583, 1583, 1583, 1583, 1091, 1583, 0, 973, 385, 386,
	387, 388, 393, 394, 0, 414, 0, 0, 0, 417,
	0, 903, 743, 0, 744, 745, 741, 772, 796, 796,
	0, 796, 776, 1111, 0, 0, 222, 223, 212, 0,
	213, 0, 225, 226, 0, 228, 229, 230, 237, 1642,
	1709, 232, 234, 0, 0, 238, 251, 252, 253, 0,
	0, 243, 244, 0, 0, 297, 298, 300, 0, 694,
	565, 1109, 566, 567, 571, 0, 0, 574, 575, 576,
	840, 0, 908, 909, 730, 0, 739, 0, 735, 802,
	0, 804, 0, 730, 0, 75, 19, 0, 68, 65,
	0, 0, 0, 0, 0, 1558, 1510, 1579, 0, 0,
	0, 1560, 0, 0, 0, 0, 58, 648, 610, 0,
	613, 629, 0, 633, 0, 0, 625, 618, 622, 0,
	0, 642, 604, 0, 0, 609, 694, 669, 1162, 0,
	330, 344, 0, 0, 0, 0, 138, 917, 0, 139,
	143, 133, 0, 0, 0, 922, 0, 919, 924, 0,
	153, 0, 0, 128, 129, 978, 983, 0, 1456, 1458,
	1460, 1462, 1464, 0, 1467, 1477, 1477, 1473, 0, 1468,
	0, 1470, 0, 1447, 0, 1265, 0, 0, 0, 0,
	0, 0, 1325, 1326, 0, 0, 1330, 0, 1332, 1333,
	1334, 1336, 0, 0, 0, 1340, 0, 1379, 1397, 1383,
	1386, 0, 1390, 0, 1392, 0, 682, 0, 1302, 1302,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 1257, 0, 1258, 1259, 0, 759, 648,
	0, 0, 0, 691, 689, 690, 279, 267, 269, 0,
	0, 0, 828, 829, 831, 0, 834, 835, 836, 0,
	841, 842, 844, 845, 0, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1627, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 839, 675, 0,
	964, 876, 1583, 421, 0, 0, 916, 0, 892, 0,
	0, 0, -2, 0, 0, 0, 0, 989, 0, 0,
	0, 588, 592, 23, 676, 0, 731, 474, 0, 475,
	526, 483, 484, 730, 1111, 508, 509, 730, 526, 526,
	529, 0, 540, 0, 972, 362, 395, 0, 1120, 1121,
	0, 0, 1127, 1136, 963, 1192, 0, 1136, 0, 0,
	1138, 1139, 363, 0, 0, 401, 0, 0, 0, 364,
	0, 0, 0, 0, 379, 380, 0, 1584, 1583, 1583,
	0, 373, 374, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 1583, 1583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1082, 0, 0, 0, 0,
	0, 0, 0, 1097, 1098, 876, 1583, 0, 0, 0,
	421, 890, 899, 0, 0, 0, 0, 0, 0, 763,
	0, 0, 762, 0, 0, 0, 0, 0, 675, 797,
	0, 799, 800, 774, -2, 0, 743, 779, 1444, 215,
	216, 0, 0, 221, 239, 241, 0, 0, 0, 240,
	242, 246, 247, 296, 299, 301, 664, 0, 0, 0,
	1010, 0, 580, 728, 733, 740, 803, 805, 91, 736,
	728, 0, 78, 19, 77, 69, 70, 0, 19, 0,
	0, 0, 0, 1568, 1567, 1553, 0, 1554, 1565, 1570,
	0, 1573, 0, 652, 0, 0, 632, 634, 0, 0,
	632, 0, 0, 641, 0, 0, 632, 667, 0, 0,
	548, 101, 350, 0, 0, 0, 0, 0, 569, 0,
	921, 135, 0, 0, 155, 0, 0, 981, 0, 983,
	1443, 1469, 1471, 0, 1478, 1474, 1240, 1248, 1261, 0,
	0, 1267, 1279, 1279, 0, 1270, 1566, 1566, 1273, 1562,
	1564, 1562, 1279, 1279, 0, 92, 0, 0, 1331, 0,
	0, 0, 628, 0, 0, 0, 1300, 1302, 1307, 1303,
	1308, 1302, 1302, 1302, 1302, 1313, 1302, 1302, 1302, 1302,
	1302, 1302, 1302, 1302, 1298, 637, 652, 680, 681, 686,
	687, 0, 271, 0, 0, 833, 0, 0, 0, 846,
	0, 0, 880, 877, 878, 879, 0, 911, 422, 423,
	424, 425, 0, 0, 0, 915, 0, 903, 885, 0,
	0, 0, 954, 955, 956, 957, 958, -2, 967, 0,
	0, 1113, 1113, 1113, 997, 0, 988, 640, 0, -2,
	0, 0, 590, 0, 0, 771, 477, 730, 501, 0,
	517, 730, 730, 526, 544, 0, 361, 367, 396, 0,
	395, -2, 1126, 1151, 1137, 1151, 1193, 1151, 1151, 963,
	0, 399, 400, 402, 0, 404, 0, 0, 0, 366,
	398, 369, 381, 382, 383, 384, 0, 0, 0, 376,
	389, 390, 391, 392, 1059, 1060, 1061, 1064, 1065, 1066,
	1067, 0, 0, 1070, 1071, 1072, 1073, 1074, 1148, 1149,
	1150, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1099, 1100,
	1101, 1102, 1103, 1104, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 0, 0, 1094, 0, 880, 0, 0, 0,
	0, 911, 892, 0, 902, 0, 904, 905, 0, 0,
	611, 730, 289, 0, 766, 760, 0, 749, 764, 765,
	752, 0, 754, 0, 750, 751, 730, 742, 773, 798,
	775, 778, 780, 781, 787, 0, 0, 0, 0, 218,
	219, 220, 227, 0, 441, 233, 695, 1110, 572, 573,
	1011, 1012, 578, 726, 0, 0, 726, 73, 76, 0,
	71, 0, 0, 0, 0, 63, 61, 1561, 0, 0,
	654, 115, 0, 0, 0, 630, 0, 635, 632, 617,
	626, 616, 623, 624, 643, 632, 608, 607, 1163, 325,
	0, 918, 135, 140, 141, 142, 136, 134, 925, 0,
	927, 0, 979, 983, 0, 0, 1475, 1266, 1249, 1268,
	1280, 1281, 1269, 1250, 1271, 1272, 1274, 1275, 1276, 1277,
	1278, 1251, 1327, 0, 1329, 1337, 1338, 0, 1387, 1391,
	0, 0, 0, 1306, 1309, 1310, 1311, 1312, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 682, 1299, 0, 654,
	692, 693, 821, 824, 830, 832, 0, 843, 0, 0,
	859, 852, 0, 0, 871, 872, 882, 0, 0, 0,
	427, 428, 0, 0, 0, 440, 436, 437, 438, 418,
	910, 899, 888, 0, 0, 898, 0, 968, 1583, 1583,
	1583, 0, 0, 1114, 1115, 1117, 1118, 1119, 0, 0,
	1000, 0, 0, 991, 0, 796, 0, 0, 730, 589,
	592, 593, 674, 478, 730, 521, 518, 730, 358, 397,
	368, 1153, -2, 1166, 1168, 0, 973, 1171, 1172, 0,
	0, 0, 0, 0, 0, 1214, 1180, 0, 0, 1184,
	1185, 1186, 0, 0, 1493, 1494, 0, 1191, 0, 1152,
	0, 1140, 1152, 0, 0, 1151, 0, 403, 405, 408,
	409, 406, 1188, 0, 407, 1062, 1063, 0, 1068, 1069,
	0, 1093, 0, 0, 410, 0, 0, 0, 411, 416,
	885, 0, 900, 0, 906, 907, 682, 0, 0, 746,
	767, 0, 0, 747, 0, 748, 753, 755, 288, 782,
	0, 0, 784, 785, 786, 777, 235, 716, 0, 0,
	737, 717, 0, 19, 0, 0, 66, 1571, 1574, 656,
	0, 653, 116, 0, 0, 0, 0, 631, 615, 606,
	137, 132, 926, 118, 982, 984, 980, 0, 1339, 0,
	1302, 1301, 1295, 0, 656, 0, 849, 847, 859, 851,
	866, 881, 870, 0, 912, 913, 0, 429, 430, 0,
	433, 439, 883, 884, 0, 0, 896, 0, 0, 0,
	0, 960, -2, 0, 0, -2, 1003, 0, 998, 0,
	990, 0, 993, 730, 730, -2, 586, 591, 0, 502,
	522, 1167, 1169, 1170, 1173, 1174, 1107, 1108, 1175, 1219,
	1220, 1221, 0, 0, 1178, 1216, 1217, 1218, 1179, 0,
	0, 0, 0, 1491, 1492, 1212, 0, 0, 0, 0,
	0, 0, 0, 1134, 1189, 1583, 371, 1092, 1095, 1096,
	415, 412, 413, 888, 891, 612, 677, 290, 291, 768,
	0, 761, 791, 788, 0, 0, 727, 729, 67, 72,
	0, 0, 658, 0, 655, 0, 649, 651, 126, 620,
	88, 109, 0, 1328, 1378, 1305, 0, 1296, 0, 1290,
	1291, 1292, 1297, 658, 0, 850, 0, 867, 868, 0,
	0, 426, 431, 0, 434, 435, 889, 886, 887, 0,
	894, 0, 0, 949, 1562, 0, 969, 970, 971, 1013,
	-2, 1056, 0, 1116, 975, 118, 1013, 994, 0, 1001,
	0, 999, 992, 682, 587, 1176, 1177, 0, 0, 1394,
	1583, 1207, 0, 0, 0, 1141, 1143, 1144, 1145, 1146,
	1147, 1142, 0, 0, 0, 1133, 1135, 0, 1583, 901,
	287, 0, 0, 792, 794, 789, 790, 62, 64, 79,
	0, 657, 117, 0, 80, 0, 106, 0, 119, 120,
	0, 0, 0, 0, 1304, 1293, 0, 0, 0, 0,
	0, 1495, 1496, 1497, 0, 647, 0, 848, 0, 873,
	0, 875, 432, 893, 896, 0, 942, 0, 688, 0,
	1015, 0, 972, 1058, 1583, 977, 1015, 986, 0, 996,
	0, 1005, 0, 1002, 677, 1215, 0, 1183, 0, 1195,
	1208, 0, 0, 942, 942, 942, 942, 0, 370, 0,
	769, 783, 0, 0, 0, 89, 93, 0, 115, 112,
	0, 121, 0, 0, 0, 0, 0, 1282, 0, 0,
	0, 1286, 1287, 1288, 1289, 0, 860, 874, 895, 897,
	941, 950, 951, 688, 974, 0, 1052, 1057, 0, 976,
	995, 1004, 0, 1007, 585, 1181, 1187, 1194, 1196, 1197,
	0, 1209, 1210, 1211, 1213, 1122, 0, 1124, 0, 1128,
	0, 1130, 0, 0, 372, 793, 795, 0, 660, 650,
	82, 0, 0, 110, 111, 113, 0, 122, 0, 124,
	125, 0, 1283, 1284, 1285, 837, 943, 1583, 0, 0,
	947, 948, 952, 0, 1040, 0, 0, 1046, 0, 1053,
	1062, 1006, 1182, 1198, 0, 1199, 0, 0, 0, 942,
	942, 942, 942, 1132, 659, 0, 985, 0, 94, 0,
	96, 98, 99, 1154, 107, 108, 114, 123, 1294, 0,
	945, 0, 1016, 0, 1018, 0, 0, 0, 0, 0,
	1050, 0, 1200, 1202, 1203, 0, 0, 1201, 1123, 1125,
	1129, 1131, 661, 83, 84, 0, 95, 0, 0, 944,
	946, 0, 1020, 0, 1041, 0, 0, 0, 0, 0,
	0, 0, 1204, 1206, 1205, 0, 0, 97, 1155, 1017,
	1014, 0, 1052, 1042, 0, 1044, 0, 0, 0, 0,
	85, 86, 87, 0, 0, 1022, 0, 1038, 1043, 1045,
	1047, 0, 1051, 1049, 1156, 1021, 0, 1034, 1019, 0,
	1048, 1023, -2, 0, 1039, 1024, -2, 0, 1032, 0,
	0, 1025, 1033, 0, 1028, 0, 0, 0, 1027, 0,
	-2, 1035, 0, 0, 1029, -2, 0, 1037, 1036,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 587, 586,
	123, 122, 124, 3, 590, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 588, 135, 589, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:735
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:742
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:748
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:756
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:762
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:766
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:781
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:785
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:791
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:796
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:800
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:832
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:839
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:859
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:865
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:872
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:880
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:886
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:895
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:905
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:913
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:921
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:929
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:957
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:964
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:973
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:983
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:987
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:993
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:997
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1003
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1012
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1022
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1026
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1032
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1045
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1051
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1072
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1085
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1092
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1096
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1102
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1106
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1112
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1119
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1127
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1131
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1145
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1149
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1153
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1162
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1166
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1172
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1181
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1192
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1196
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1202
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1206
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1212
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1216
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1222
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1246
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1265
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1269
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1273
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1278
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1282
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1289
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1297
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1304
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1309
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1316
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1325
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1349
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1353
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1359
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1365
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1383
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1400
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1423
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1427
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1431
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1446
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1459
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1470
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1483
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1487
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1497
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1510
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1523
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1529
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1535
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1550
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1559
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1563
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1567
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1571
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1575
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1579
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1586
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1590
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1596
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1603
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1612
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1616
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1622
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1626
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1630
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1634
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1654
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1658
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1662
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1666
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1670
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1674
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1678
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1682
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1686
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1690
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1694
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1698
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1702
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1706
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1710
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1714
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1718
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1722
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1726
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1730
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1734
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1738
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1742
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1746
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1750
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1754
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1758
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1762
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1766
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1770
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1774
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1778
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1782
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1786
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1794
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1798
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1806
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1810
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1814
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1818
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1831
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1838
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1855
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1859
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1865
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1872
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1880
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1884
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1888
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1892
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1898
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1902
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1908
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1922
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1931
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1961
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1965
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1969
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1975
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1981
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1985
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1992
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1998
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2002
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2008
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2016
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2025
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2034
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2050
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2073
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2096
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2103
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2110
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2118
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2125
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2132
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2141
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2145
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2149
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2155
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2159
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2165
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2169
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2175
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2179
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2190
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2196
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2201
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2205
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2209
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2213
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2217
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2221
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2225
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2229
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2233
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2239
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2243
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2247
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2251
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2261
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2267
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2280
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2287
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2294
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2304
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2333
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2337
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2359
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2363
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2369
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2375
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2379
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2383
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2387
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2393
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2405
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2411
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2415
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2421
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2425
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2431
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2437
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2448
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2454
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2462
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2470
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2541
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2545
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2551
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2557
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2562
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2563
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2564
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2569
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2585
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2596
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2605
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2609
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2615
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2622
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2626
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2630
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2634
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2638
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2647
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2656
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2662
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2666
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2670
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2674
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2678
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2682
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2686
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2690
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2695
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2726
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2732
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2738
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2748
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2756
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2763
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2770
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2777
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2784
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2791
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2799
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2806
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2813
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2822
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2826
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2833
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2845
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2853
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2861
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2874
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2880
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2891
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2911
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2915
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2924
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2944
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2952
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2960
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2964
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2972
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2980
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2984
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2988
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2992
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3000
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3006
		{
			yyVAL.item = nil
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3011
		{
			yyVAL.item = nil
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3051
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3057
		{
			yyLOCAL = &tree.ShowStagse{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3065
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3069
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3073
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3086
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3092
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3097
		{
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3101
		{
		}
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3106
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3126
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3134
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3140
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3146
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3152
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3158
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3164
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3170
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3179
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3183
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3191
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3195
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3199
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3203
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3207
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3213
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3220
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3230
		{
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3232
		{
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3251
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3260
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3264
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3268
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3274
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3280
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3286
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3292
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3301
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3311
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3333
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3359
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3365
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3372
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3377
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3381
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3385
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3390
		{
			yyVAL.str = ""
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3394
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3400
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3423
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3428
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3432
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3436
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3442
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3448
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3452
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3458
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3464
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3468
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3472
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3478
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3482
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3506
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3515
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3524
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3533
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3537
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3543
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3552
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3561
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3571
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3577
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3583
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3587
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3593
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3599
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3608
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3615
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3626
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3631
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3638
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3654
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3667
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3678
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3682
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3688
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3693
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3700
		{
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3702
		{
		}
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3705
		{
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3714
		{
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3718
		{
		}
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3723
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3732
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3739
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3745
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3753
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3760
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3767
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3787
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3797
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3801
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3807
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3814
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3820
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3828
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3835
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3842
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3861
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3865
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3874
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3878
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3884
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3893
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3897
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3903
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3907
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3913
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3917
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3923
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3928
		{
		}
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3932
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3939
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3943
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3950
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3959
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3965
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3969
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3975
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3979
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3984
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3988
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4001
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4008
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4015
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4033
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4052
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4058
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4065
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4069
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4082
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4086
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4091
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4095
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4102
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4107
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4114
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4120
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4124
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4128
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4132
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4136
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4140
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4146
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4153
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4162
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4166
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4172
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4184
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4189
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4193
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4199
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4203
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4207
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4212
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4216
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4222
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4228
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4232
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4238
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4243
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4247
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4251
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4256
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4260
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4264
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4273
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4281
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4285
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4289
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4303
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4307
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4317
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4327
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4337
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4349
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4357
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4365
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4374
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4382
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4390
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4398
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4406
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4414
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4422
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4430
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4438
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4448
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4459
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4473
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4477
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4481
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4486
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4490
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4494
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4507
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4512
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4516
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4521
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4525
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4531
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4535
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4541
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4545
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4550
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4554
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4559
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4567
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4573
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4581
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4589
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4599
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4605
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4614
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4623
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4632
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4642
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4646
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4656
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4660
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4664
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4668
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4674
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4684
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4688
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4694
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4704
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4710
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4716
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4720
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4724
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4734
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4740
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4744
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4750
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4754
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4760
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4764
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4774
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4787
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4793
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4799
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4812
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4823
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4830
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4834
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4840
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4850
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4854
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4858
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4863
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4867
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4871
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4875
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4884
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4888
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4892
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4896
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4901
		{
			yyVAL.str = ""
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4905
		{
			yyVAL.str = yyDollar[1].str
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4909
		{
			yyVAL.str = yyDollar[2].str
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4915
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4921
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4925
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4929
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4933
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4937
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4943
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 821:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4977
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4987
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4993
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 824:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4999
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5009
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5014
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5020
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5031
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5037
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5043
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5048
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5052
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5056
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5060
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5067
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5079
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5084
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5090
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5097
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5101
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5107
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5113
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5117
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5121
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5127
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5133
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5139
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5148
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5159
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5171
		{
			yyVAL.str = yyDollar[1].str
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5175
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5181
		{
			yyVAL.str = "OR REPLACE"
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5185
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5189
		{
			yyVAL.str = "DEFINER = "
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5193
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5198
		{
			yyVAL.str = ""
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5202
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5216
		{
			yyVAL.str = ""
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5224
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5230
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5240
		{
			yyVAL.str = yyDollar[1].str
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5244
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5250
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5257
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5263
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5271
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5277
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5284
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5291
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5299
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5305
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5314
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5326
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5338
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5350
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5356
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5363
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5371
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5377
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5385
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5414
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5418
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5423
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5427
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5434
		{
			yyVAL.str = yyDollar[3].str
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5439
		{
			yyVAL.str = ""
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5443
		{
			yyVAL.str = yyDollar[2].str
		}
	case 901:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5449
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5463
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5473
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5477
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5483
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5489
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5495
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5504
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5513
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5522
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5527
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5541
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5647
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5651
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5657
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5667
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5671
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5677
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5687
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5691
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5695
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5704
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5710
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5717
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5723
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5732
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5739
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5748
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5752
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5758
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5772
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5776
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5780
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5785
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5789
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5793
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5797
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5803
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5822
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5826
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5848
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5852
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5856
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5860
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5864
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5870
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5874
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5880
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5885
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5890
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5894
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5898
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5902
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5906
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5912
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5927
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5937
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5941
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5946
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5950
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5956
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5960
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5966
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5970
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5974
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5979
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5983
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5989
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6001
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6010
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6023
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6030
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6040
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6048
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6059
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6063
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6068
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6072
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6079
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6090
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6103
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6117
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6125
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6132
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6139
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6146
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6153
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6157
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6161
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6169
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6176
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6183
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6187
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6194
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6205
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6212
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6219
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6226
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6233
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6237
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6242
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6246
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6250
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6259
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6273
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6280
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6287
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6291
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6304
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6310
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6314
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6320
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6329
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6343
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6349
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6353
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6359
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6366
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6375
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6379
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6384
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6388
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6393
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6397
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6402
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6406
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6416
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6420
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6431
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6439
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6447
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6455
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6466
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6475
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6485
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6495
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6499
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6504
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6508
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6517
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6523
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6527
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6531
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6537
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6541
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6545
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6549
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6553
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6557
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6561
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6566
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6570
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6574
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6578
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6582
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6586
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6590
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6594
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6598
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6602
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6606
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6610
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6614
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6618
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6622
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6626
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6630
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6634
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6638
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6642
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6646
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6650
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6654
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6658
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6662
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6666
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6670
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6674
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6680
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6684
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6690
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6696
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6700
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6706
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6710
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6714
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6718
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6722
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6726
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6740
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6744
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6753
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6758
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6764
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6771
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6775
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6781
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6785
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6789
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6795
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6799
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6805
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6814
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6823
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6846
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6871
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6885
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6891
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6900
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6909
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6918
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6927
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6937
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6945
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6951
		{
			yyVAL.str = ""
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6955
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6965
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6971
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6977
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6996
		{
			yyVAL.str = ""
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7000
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7006
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7012
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7016
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7020
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7026
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7030
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7034
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7038
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7044
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7048
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7052
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7057
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7061
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7067
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7071
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7077
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7081
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7085
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7089
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7093
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7097
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7102
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7106
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7114
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7118
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7122
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7126
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7130
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7134
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7138
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7151
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7155
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7159
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7169
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7173
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7178
		{
			yyVAL.str = ""
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7182
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7188
		{
			yyVAL.str = ""
		}
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7192
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7198
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7210
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7217
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7224
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7231
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7238
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7247
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7253
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7259
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7263
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7267
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7271
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7275
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7280
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7287
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7291
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7295
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7304
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7309
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7313
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7329
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7335
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7339
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7343
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7347
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7351
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7355
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7359
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7363
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7367
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7371
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7375
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7379
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7383
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7389
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7393
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7397
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7401
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7405
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7409
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7413
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7417
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7421
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7425
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7429
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7433
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7438
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7446
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7451
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7455
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7464
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7468
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7472
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7476
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7480
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7486
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7494
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7502
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7511
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7515
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7524
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7530
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7534
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7540
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7549
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7561
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7578
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7595
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7608
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7621
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7633
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7647
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7662
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7677
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7694
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7709
		{
		}
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7716
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7720
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7724
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7730
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7734
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7738
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7742
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7748
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7752
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7756
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7762
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7770
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7780
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7784
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7791
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7800
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7805
		{
			yyVAL.str = ","
		}
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7809
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7814
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7821
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7847
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7858
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7868
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7877
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7886
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7896
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7906
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7916
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7926
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7936
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7946
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7956
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7966
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7976
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7986
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7996
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8006
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8023
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8031
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8039
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8047
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8055
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8065
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8073
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8082
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8090
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8098
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8106
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8114
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8125
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8135
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8147
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8158
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8180
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8216
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8228
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8240
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8251
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8259
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8266
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8273
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8285
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8293
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8303
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8313
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8321
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8332
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8341
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8350
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8358
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8368
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8376
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8390
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8400
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8419
		{
		}
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8421
		{
		}
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8462
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8473
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8477
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8481
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8487
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8492
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8496
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8502
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8506
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8513
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8517
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8521
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8529
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8533
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8537
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8541
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8547
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8551
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8555
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8559
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8563
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8567
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8571
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8575
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8579
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8583
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8591
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8595
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8599
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8603
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8607
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8611
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8615
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8619
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8623
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8627
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8633
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8637
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8643
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8647
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8654
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8658
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8662
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8668
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8672
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8676
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8680
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8684
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8688
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8692
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8698
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8702
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8706
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8710
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8716
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8729
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8734
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8740
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8744
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8757
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8762
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8766
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8770
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8774
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8778
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8785
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8789
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8803
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8807
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8814
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8825
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8830
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8836
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8848
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8860
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8872
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8885
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8898
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8911
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8924
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8937
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8950
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8963
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8976
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8989
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9002
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9017
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9044
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9086
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9122
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9158
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9175
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9187
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9207
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9227
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9247
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9263
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9276
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9289
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9302
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9315
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9327
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9339
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9351
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9363
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9375
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9387
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9399
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9411
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9423
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9436
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9449
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9464
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9472
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9481
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9491
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9514
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9519
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9525
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9532
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9536
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9541
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9545
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9551
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9557
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9564
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9571
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9580
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9587
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9594
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9603
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9607
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9611
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9617
		{
		}
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9619
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9629
		{
			yyVAL.str = ""
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9633
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

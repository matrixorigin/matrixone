// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const INDEX = 57539
const VIEW = 57540
const TO = 57541
const IGNORE = 57542
const IF = 57543
const PRIMARY = 57544
const COLUMN = 57545
const CONSTRAINT = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const FOREIGN = 57549
const KEY_BLOCK_SIZE = 57550
const SHOW = 57551
const DESCRIBE = 57552
const EXPLAIN = 57553
const DATE = 57554
const ESCAPE = 57555
const REPAIR = 57556
const OPTIMIZE = 57557
const TRUNCATE = 57558
const MAXVALUE = 57559
const PARTITION = 57560
const REORGANIZE = 57561
const LESS = 57562
const THAN = 57563
const PROCEDURE = 57564
const TRIGGER = 57565
const STATUS = 57566
const VARIABLES = 57567
const ROLE = 57568
const PROXY = 57569
const AVG_ROW_LENGTH = 57570
const STORAGE = 57571
const DISK = 57572
const MEMORY = 57573
const CHECKSUM = 57574
const COMPRESSION = 57575
const DATA = 57576
const DIRECTORY = 57577
const DELAY_KEY_WRITE = 57578
const ENCRYPTION = 57579
const ENGINE = 57580
const MAX_ROWS = 57581
const MIN_ROWS = 57582
const PACK_KEYS = 57583
const ROW_FORMAT = 57584
const STATS_AUTO_RECALC = 57585
const STATS_PERSISTENT = 57586
const STATS_SAMPLE_PAGES = 57587
const DYNAMIC = 57588
const COMPRESSED = 57589
const REDUNDANT = 57590
const COMPACT = 57591
const FIXED = 57592
const COLUMN_FORMAT = 57593
const AUTO_RANDOM = 57594
const RESTRICT = 57595
const CASCADE = 57596
const ACTION = 57597
const PARTIAL = 57598
const SIMPLE = 57599
const CHECK = 57600
const ENFORCED = 57601
const RANGE = 57602
const LIST = 57603
const ALGORITHM = 57604
const LINEAR = 57605
const PARTITIONS = 57606
const SUBPARTITION = 57607
const SUBPARTITIONS = 57608
const CLUSTER = 57609
const TYPE = 57610
const ANY = 57611
const SOME = 57612
const EXTERNAL = 57613
const LOCALFILE = 57614
const URL = 57615
const PREPARE = 57616
const DEALLOCATE = 57617
const RESET = 57618
const EXTENSION = 57619
const PUBLICATION = 57620
const SUBSCRIPTIONS = 57621
const PUBLICATIONS = 57622
const PROPERTIES = 57623
const PARSER = 57624
const VISIBLE = 57625
const INVISIBLE = 57626
const BTREE = 57627
const HASH = 57628
const RTREE = 57629
const BSI = 57630
const ZONEMAP = 57631
const LEADING = 57632
const BOTH = 57633
const TRAILING = 57634
const UNKNOWN = 57635
const EXPIRE = 57636
const ACCOUNT = 57637
const ACCOUNTS = 57638
const UNLOCK = 57639
const DAY = 57640
const NEVER = 57641
const PUMP = 57642
const MYSQL_COMPATBILITY_MODE = 57643
const SECOND = 57644
const ASCII = 57645
const COALESCE = 57646
const COLLATION = 57647
const HOUR = 57648
const MICROSECOND = 57649
const MINUTE = 57650
const MONTH = 57651
const QUARTER = 57652
const REPEAT = 57653
const REVERSE = 57654
const ROW_COUNT = 57655
const WEEK = 57656
const REVOKE = 57657
const FUNCTION = 57658
const PRIVILEGES = 57659
const TABLESPACE = 57660
const EXECUTE = 57661
const SUPER = 57662
const GRANT = 57663
const OPTION = 57664
const REFERENCES = 57665
const REPLICATION = 57666
const SLAVE = 57667
const CLIENT = 57668
const USAGE = 57669
const RELOAD = 57670
const FILE = 57671
const TEMPORARY = 57672
const ROUTINE = 57673
const EVENT = 57674
const SHUTDOWN = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const ENGINES = 57682
const LOW_CARDINALITY = 57683
const ADMIN_NAME = 57684
const RANDOM = 57685
const SUSPEND = 57686
const ATTRIBUTE = 57687
const HISTORY = 57688
const REUSE = 57689
const CURRENT = 57690
const OPTIONAL = 57691
const FAILED_LOGIN_ATTEMPTS = 57692
const PASSWORD_LOCK_TIME = 57693
const UNBOUNDED = 57694
const SECONDARY = 57695
const USER = 57696
const IDENTIFIED = 57697
const CIPHER = 57698
const ISSUER = 57699
const X509 = 57700
const SUBJECT = 57701
const SAN = 57702
const REQUIRE = 57703
const SSL = 57704
const NONE = 57705
const PASSWORD = 57706
const MAX_QUERIES_PER_HOUR = 57707
const MAX_UPDATES_PER_HOUR = 57708
const MAX_CONNECTIONS_PER_HOUR = 57709
const MAX_USER_CONNECTIONS = 57710
const FORMAT = 57711
const VERBOSE = 57712
const CONNECTION = 57713
const TRIGGERS = 57714
const PROFILES = 57715
const LOAD = 57716
const INFILE = 57717
const TERMINATED = 57718
const OPTIONALLY = 57719
const ENCLOSED = 57720
const ESCAPED = 57721
const STARTING = 57722
const LINES = 57723
const ROWS = 57724
const IMPORT = 57725
const MODUMP = 57726
const OVER = 57727
const PRECEDING = 57728
const FOLLOWING = 57729
const GROUPS = 57730
const DATABASES = 57731
const TABLES = 57732
const EXTENDED = 57733
const FULL = 57734
const PROCESSLIST = 57735
const FIELDS = 57736
const COLUMNS = 57737
const OPEN = 57738
const ERRORS = 57739
const WARNINGS = 57740
const INDEXES = 57741
const SCHEMAS = 57742
const NODE = 57743
const LOCKS = 57744
const TABLE_NUMBER = 57745
const COLUMN_NUMBER = 57746
const TABLE_VALUES = 57747
const NAMES = 57748
const GLOBAL = 57749
const SESSION = 57750
const ISOLATION = 57751
const LEVEL = 57752
const READ = 57753
const WRITE = 57754
const ONLY = 57755
const REPEATABLE = 57756
const COMMITTED = 57757
const UNCOMMITTED = 57758
const SERIALIZABLE = 57759
const LOCAL = 57760
const EVENTS = 57761
const PLUGINS = 57762
const CURRENT_TIMESTAMP = 57763
const DATABASE = 57764
const CURRENT_TIME = 57765
const LOCALTIME = 57766
const LOCALTIMESTAMP = 57767
const UTC_DATE = 57768
const UTC_TIME = 57769
const UTC_TIMESTAMP = 57770
const REPLACE = 57771
const CONVERT = 57772
const SEPARATOR = 57773
const TIMESTAMPDIFF = 57774
const CURRENT_DATE = 57775
const CURRENT_USER = 57776
const CURRENT_ROLE = 57777
const SECOND_MICROSECOND = 57778
const MINUTE_MICROSECOND = 57779
const MINUTE_SECOND = 57780
const HOUR_MICROSECOND = 57781
const HOUR_SECOND = 57782
const HOUR_MINUTE = 57783
const DAY_MICROSECOND = 57784
const DAY_SECOND = 57785
const DAY_MINUTE = 57786
const DAY_HOUR = 57787
const YEAR_MONTH = 57788
const SQL_TSI_HOUR = 57789
const SQL_TSI_DAY = 57790
const SQL_TSI_WEEK = 57791
const SQL_TSI_MONTH = 57792
const SQL_TSI_QUARTER = 57793
const SQL_TSI_YEAR = 57794
const SQL_TSI_SECOND = 57795
const SQL_TSI_MINUTE = 57796
const RECURSIVE = 57797
const CONFIG = 57798
const DRAINER = 57799
const MATCH = 57800
const AGAINST = 57801
const BOOLEAN = 57802
const LANGUAGE = 57803
const WITH = 57804
const QUERY = 57805
const EXPANSION = 57806
const ADDDATE = 57807
const BIT_AND = 57808
const BIT_OR = 57809
const BIT_XOR = 57810
const CAST = 57811
const COUNT = 57812
const APPROX_COUNT_DISTINCT = 57813
const APPROX_PERCENTILE = 57814
const CURDATE = 57815
const CURTIME = 57816
const DATE_ADD = 57817
const DATE_SUB = 57818
const EXTRACT = 57819
const GROUP_CONCAT = 57820
const MAX = 57821
const MID = 57822
const MIN = 57823
const NOW = 57824
const POSITION = 57825
const SESSION_USER = 57826
const STD = 57827
const STDDEV = 57828
const MEDIAN = 57829
const STDDEV_POP = 57830
const STDDEV_SAMP = 57831
const SUBDATE = 57832
const SUBSTR = 57833
const SUBSTRING = 57834
const SUM = 57835
const SYSDATE = 57836
const SYSTEM_USER = 57837
const TRANSLATE = 57838
const TRIM = 57839
const VARIANCE = 57840
const VAR_POP = 57841
const VAR_SAMP = 57842
const AVG = 57843
const ARROW = 57844
const ROW = 57845
const OUTFILE = 57846
const HEADER = 57847
const MAX_FILE_SIZE = 57848
const FORCE_QUOTE = 57849
const PARALLEL = 57850
const UNUSED = 57851
const BINDINGS = 57852
const DO = 57853
const DECLARE = 57854
const KILL = 57855
const QUERY_RESULT = 57856

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8668

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 98,
	21, 562,
	-2, 543,
	-1, 106,
	214, 764,
	-2, 813,
	-1, 126,
	42, 387,
	214, 387,
	241, 394,
	242, 394,
	416, 387,
	-2, 419,
	-1, 444,
	290, 93,
	392, 93,
	-2, 1376,
	-1, 502,
	67, 1182,
	-2, 1516,
	-1, 503,
	67, 1200,
	-2, 1487,
	-1, 507,
	67, 1201,
	-2, 1515,
	-1, 529,
	67, 1114,
	-2, 1570,
	-1, 530,
	67, 1115,
	-2, 1569,
	-1, 531,
	67, 1116,
	-2, 1559,
	-1, 532,
	67, 1534,
	-2, 1554,
	-1, 533,
	67, 1535,
	-2, 1555,
	-1, 534,
	67, 1536,
	-2, 1561,
	-1, 535,
	67, 1537,
	-2, 1544,
	-1, 536,
	67, 1538,
	-2, 1552,
	-1, 537,
	67, 1539,
	-2, 1562,
	-1, 538,
	67, 1540,
	-2, 1563,
	-1, 539,
	67, 1541,
	-2, 1568,
	-1, 540,
	67, 1542,
	-2, 1573,
	-1, 541,
	67, 1543,
	-2, 1574,
	-1, 543,
	67, 1179,
	-2, 1368,
	-1, 550,
	67, 1188,
	-2, 1394,
	-1, 554,
	67, 1192,
	-2, 1433,
	-1, 555,
	67, 1193,
	-2, 1511,
	-1, 563,
	67, 1203,
	-2, 1496,
	-1, 565,
	67, 1205,
	-2, 1506,
	-1, 566,
	67, 1206,
	-2, 1529,
	-1, 577,
	67, 1096,
	-2, 1564,
	-1, 578,
	67, 1097,
	-2, 1565,
	-1, 579,
	67, 1098,
	-2, 1566,
	-1, 586,
	21, 563,
	-2, 526,
	-1, 642,
	411, 419,
	412, 419,
	-2, 388,
	-1, 690,
	104, 1368,
	115, 1368,
	135, 1368,
	-2, 1343,
	-1, 728,
	21, 563,
	-2, 526,
	-1, 827,
	21, 562,
	-2, 1004,
	-1, 1160,
	67, 1250,
	-2, 1513,
	-1, 1161,
	67, 1251,
	-2, 1514,
	-1, 1576,
	68, 1329,
	136, 1329,
	-2, 1498,
	-1, 1577,
	68, 1329,
	136, 1329,
	-2, 1497,
	-1, 1578,
	68, 1307,
	136, 1307,
	-2, 1484,
	-1, 1579,
	68, 1308,
	136, 1308,
	-2, 1489,
	-1, 1580,
	68, 1309,
	136, 1309,
	-2, 1421,
	-1, 1581,
	68, 1310,
	136, 1310,
	-2, 1415,
	-1, 1582,
	68, 1311,
	136, 1311,
	-2, 1359,
	-1, 1583,
	68, 1312,
	136, 1312,
	-2, 1486,
	-1, 1584,
	68, 1313,
	136, 1313,
	-2, 1419,
	-1, 1585,
	68, 1314,
	136, 1314,
	-2, 1414,
	-1, 1586,
	68, 1315,
	136, 1315,
	-2, 1407,
	-1, 1588,
	68, 1318,
	136, 1318,
	-2, 1529,
	-1, 1589,
	68, 1298,
	136, 1298,
	-2, 1516,
	-1, 1590,
	68, 1327,
	136, 1327,
	-2, 1487,
	-1, 1591,
	68, 1327,
	136, 1327,
	-2, 1515,
	-1, 1592,
	68, 1327,
	136, 1327,
	-2, 1377,
	-1, 1593,
	68, 1325,
	136, 1325,
	-2, 1506,
	-1, 1594,
	68, 1322,
	136, 1322,
	-2, 1399,
	-1, 1595,
	67, 1280,
	68, 1280,
	136, 1280,
	354, 1280,
	355, 1280,
	356, 1280,
	-2, 1358,
	-1, 1596,
	67, 1281,
	68, 1281,
	136, 1281,
	354, 1281,
	355, 1281,
	356, 1281,
	-2, 1360,
	-1, 1597,
	67, 1284,
	68, 1284,
	136, 1284,
	354, 1284,
	355, 1284,
	356, 1284,
	-2, 1488,
	-1, 1598,
	67, 1286,
	68, 1286,
	136, 1286,
	354, 1286,
	355, 1286,
	356, 1286,
	-2, 1471,
	-1, 1599,
	67, 1288,
	68, 1288,
	136, 1288,
	354, 1288,
	355, 1288,
	356, 1288,
	-2, 1420,
	-1, 1600,
	67, 1290,
	68, 1290,
	136, 1290,
	354, 1290,
	355, 1290,
	356, 1290,
	-2, 1403,
	-1, 1601,
	67, 1291,
	68, 1291,
	136, 1291,
	354, 1291,
	355, 1291,
	356, 1291,
	-2, 1404,
	-1, 1602,
	67, 1293,
	68, 1293,
	136, 1293,
	354, 1293,
	355, 1293,
	356, 1293,
	-2, 1357,
	-1, 1603,
	68, 1332,
	136, 1332,
	354, 1332,
	355, 1332,
	356, 1332,
	-2, 1382,
	-1, 1604,
	68, 1332,
	136, 1332,
	354, 1332,
	355, 1332,
	356, 1332,
	-2, 1395,
	-1, 1605,
	68, 1335,
	136, 1335,
	354, 1335,
	355, 1335,
	356, 1335,
	-2, 1378,
	-1, 1606,
	68, 1332,
	136, 1332,
	354, 1332,
	355, 1332,
	356, 1332,
	-2, 1456,
	-1, 1619,
	1, 792,
	68, 792,
	532, 792,
	-2, 799,
	-1, 1676,
	21, 562,
	-2, 654,
	-1, 1849,
	1, 793,
	68, 793,
	532, 793,
	-2, 799,
	-1, 1859,
	65, 467,
	136, 467,
	-2, 908,
	-1, 2170,
	88, 799,
	131, 799,
	168, 799,
	171, 799,
	-2, 856,
	-1, 2172,
	275, 972,
	-2, 951,
	-1, 2183,
	88, 799,
	131, 799,
	168, 799,
	171, 799,
	-2, 856,
	-1, 2186,
	65, 467,
	136, 467,
	-2, 909,
	-1, 2240,
	88, 799,
	131, 799,
	168, 799,
	171, 799,
	-2, 857,
	-1, 2268,
	275, 972,
	-2, 952,
	-1, 2679,
	68, 828,
	136, 828,
	-2, 799,
	-1, 2683,
	68, 828,
	136, 828,
	-2, 799,
	-1, 2697,
	68, 832,
	136, 832,
	-2, 799,
	-1, 2702,
	68, 833,
	136, 833,
	-2, 799,
}

const yyPrivate = 57344

const yyLast = 31241

var yyAct = [...]int{
	473, 2241, 2683, 1226, 2691, 2682, 2655, 455, 2628, 1141,
	453, 2520, 475, 2597, 2644, 2280, 2580, 2481, 2581, 2210,
	2461, 2411, 2316, 2494, 854, 2418, 1417, 2117, 2405, 1137,
	1566, 2118, 2422, 1046, 2469, 499, 2231, 994, 2314, 587,
	147, 147, 2335, 1671, 2235, 2290, 147, 390, 397, 2269,
	689, 397, 2310, 2053, 1330, 2230, 2239, 2289, 1862, 1288,
	1144, 2049, 1707, 1083, 1887, 1378, 956, 1400, 2153, 1888,
	2054, 1370, 2232, 1670, 2176, 2115, 1446, 1881, 1574, 457,
	1748, 1470, 402, 2058, 1909, 2019, 1715, 2109, 2092, 2024,
	408, 2021, 395, 31, 446, 1626, 582, 722, 447, 1850,
	2244, 1929, 2047, 1747, 452, 146, 146, 1970, 1572, 623,
	973, 381, 1789, 1453, 1332, 1466, 1716, 1454, 1298, 1923,
	1393, 1447, 1659, 1465, 971, 1371, 1827, 1373, 1832, 1225,
	3, 699, 43, 1625, 582, 394, 19, 1318, 1710, 1343,
	695, 391, 8, 720, 392, 6, 147, 1498, 1342, 698,
	30, 1135, 1306, 1279, 891, 1140, 1452, 1467, 393, 7,
	1074, 456, 1570, 1055, 1612, 454, 1397, 1289, 984, 1477,
	1341, 97, 445, 1340, 1284, 1554, 693, 648, 43, 1190,
	1174, 1126, 464, 1441, 1134, 386, 739, 1423, 681, 1678,
	1317, 1356, 1038, 980, 622, 1025, 383, 1195, 1196, 936,
	410, 16, 9, 1073, 4, 995, 411, 584, 396, 954,
	136, 724, 638, 139, 1964, 682, 1964, 1484, 620, 1750,
	1474, 142, 141, 2401, 2311, 1708, 2116, 1302, 849, 2503,
	1449, 585, 855, 140, 31, 39, 128, 107, 140, 586,
	39, 128, 107, 759, 140, 1830, 39, 128, 107, 595,
	1735, 140, 1471, 2511, 379, 2223, 1743, 2222, 140, 400,
	140, 140, 2538, 140, 1993, 1027, 140, 406, 140, 1482,
	1616, 1694, 719, 43, 793, 1411, 1695, 19, 1093, 1381,
	1382, 1711, 1009, 8, 1010, 1829, 6, 906, 991, 658,
	137, 30, 1000, 1001, 1090, 137, 1111, 2125, 786, 1944,
	7, 137, 96, 1352, 96, 2569, 1143, 2567, 137, 696,
	1079, 581, 791, 143, 692, 1092, 1028, 1086, 137, 691,
	137, 2584, 2585, 137, 572, 137, 571, 573, 574, 998,
	575, 576, 997, 1000, 1001, 1216, 1790, 1828, 2403, 407,
	1930, 596, 2504, 2505, 2321, 2496, 767, 2499, 769, 2601,
	2602, 796, 797, 798, 795, 1931, 774, 1932, 775, 1127,
	2313, 1131, 2119, 2417, 1012, 704, 703, 705, 2406, 2407,
	2408, 2409, 1146, 2119, 1730, 733, 770, 2496, 2133, 1394,
	588, 662, 2154, 147, 732, 1130, 777, 742, 1478, 894,
	1386, 1122, 2161, 2035, 1650, 702, 2228, 1611, 1835, 397,
	397, 2510, 147, 2025, 906, 1822, 2327, 914, 918, 920,
	922, 924, 925, 927, 1959, 931, 928, 929, 930, 727,
	729, 909, 910, 911, 912, 892, 893, 915, 106, 895,
	138, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 907, 913, 707, 1551, 763, 448, 709, 730, 126,
	917, 919, 921, 923, 926, 772, 731, 2583, 1132, 2287,
	989, 666, 829, 1957, 700, 742, 2320, 750, 765, 1273,
	1272, 788, 2322, 726, 1145, 1740, 2513, 2514, 663, 1129,
	768, 771, 779, 1212, 780, 708, 908, 1209, 762, 784,
	785, 1211, 1208, 1210, 1214, 1215, 754, 1878, 1483, 1213,
	2029, 1409, 1410, 1652, 764, 2330, 894, 2225, 1011, 1720,
	884, 2040, 782, 1655, 773, 789, 790, 694, 2562, 43,
	43, 728, 1020, 701, 914, 918, 920, 922, 924, 925,
	927, 2423, 931, 928, 929, 930, 2571, 665, 909, 910,
	911, 912, 892, 893, 915, 1390, 895, 2046, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 907, 913,
	2675, 696, 399, 1085, 744, 743, 398, 917, 919, 921,
	923, 926, 766, 735, 736, 2386, 2692, 1152, 1155, 1156,
	2610, 778, 776, 2566, 441, 1128, 1472, 443, 1153, 2522,
	2617, 706, 442, 1472, 2027, 1472, 979, 2483, 953, 955,
	2379, 2518, 2519, 908, 2522, 664, 2545, 747, 748, 2666,
	751, 1763, 1764, 2137, 405, 1963, 2348, 783, 2347, 2528,
	2370, 737, 623, 933, 2033, 831, 832, 833, 834, 1841,
	696, 2647, 1219, 1220, 1221, 1222, 1223, 1224, 1217, 1218,
	781, 1034, 744, 743, 1487, 1489, 1490, 1033, 835, 1000,
	1001, 1000, 1001, 2573, 2574, 2512, 2374, 993, 992, 885,
	752, 999, 990, 2506, 2507, 1022, 1014, 958, 959, 960,
	961, 1834, 963, 978, 40, 996, 2030, 2031, 1485, 1080,
	40, 585, 1473, 2036, 582, 582, 582, 1395, 2026, 1050,
	1050, 2032, 147, 2328, 2470, 2471, 2472, 2474, 2473, 977,
	659, 1960, 108, 1844, 1845, 1846, 1847, 108, 397, 955,
	2693, 1077, 1077, 108, 2224, 1744, 2446, 2699, 1048, 1048,
	108, 2656, 2229, 1052, 1838, 1839, 1088, 108, 1499, 108,
	108, 1057, 108, 2687, 916, 108, 2336, 108, 1837, 1387,
	1123, 865, 866, 2044, 987, 753, 1109, 2648, 2145, 2572,
	723, 1003, 1004, 957, 1006, 1007, 1008, 1056, 406, 1050,
	694, 1050, 732, 1911, 1913, 1094, 2493, 1026, 2059, 2062,
	981, 985, 985, 759, 1736, 1685, 2028, 1475, 2482, 962,
	661, 1962, 966, 660, 965, 2062, 964, 401, 2015, 1486,
	981, 968, 981, 938, 617, 618, 619, 1384, 1104, 1105,
	1385, 986, 940, 1154, 1684, 1683, 659, 1972, 1971, 1915,
	1682, 1031, 1029, 1030, 1681, 1084, 1383, 668, 2650, 1091,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 669, 1333, 1142, 1021, 1185, 1186, 586, 1118,
	970, 1194, 794, 2372, 1013, 1124, 1015, 2371, 1723, 2342,
	1240, 916, 1002, 758, 2705, 1005, 2686, 2089, 1333, 2704,
	2067, 1246, 1247, 2375, 2376, 1527, 2045, 1935, 1526, 43,
	1488, 2645, 2646, 1249, 1254, 1255, 1139, 672, 43, 1044,
	1045, 759, 1117, 1032, 2698, 582, 661, 1108, 1114, 660,
	589, 1113, 589, 2063, 1389, 1107, 799, 2695, 2056, 1041,
	1042, 1043, 2057, 2060, 2676, 828, 1157, 2671, 1058, 2063,
	379, 1120, 1668, 837, 1136, 1078, 1070, 757, 1071, 1912,
	2659, 1614, 794, 1100, 2658, 671, 1564, 794, 1095, 674,
	673, 1861, 2171, 1295, 842, 1096, 794, 2633, 2630, 2447,
	2449, 2450, 2451, 2448, 712, 717, 718, 2591, 1116, 1115,
	1274, 1112, 982, 1669, 2061, 2586, 1509, 147, 1133, 1316,
	1050, 1320, 2575, 1322, 1323, 2696, 1138, 1239, 586, 2546,
	623, 1296, 1480, 1331, 1227, 2672, 1230, 1050, 2089, 2543,
	1241, 1022, 796, 797, 798, 795, 390, 1860, 1480, 1183,
	1184, 1248, 1480, 1250, 1560, 796, 797, 798, 795, 796,
	797, 798, 795, 1299, 1176, 1480, 2631, 794, 2542, 934,
	1357, 1357, 2541, 1022, 1022, 2332, 1022, 1613, 1669, 147,
	1316, 1316, 1313, 2332, 1050, 1368, 1380, 1508, 1355, 1735,
	1697, 1324, 1325, 1326, 1727, 1669, 582, 2547, 1050, 756,
	1563, 2540, 2530, 1229, 1991, 1709, 1277, 2332, 1280, 1281,
	1824, 983, 1321, 809, 819, 820, 812, 813, 814, 815,
	816, 817, 818, 811, 1316, 1050, 1251, 1416, 147, 147,
	1420, 2670, 725, 1422, 1426, 1315, 2332, 1428, 1359, 1125,
	2332, 147, 2396, 2395, 1363, 1286, 1287, 1240, 1445, 1339,
	1697, 2331, 2214, 1240, 1240, 1419, 1471, 1291, 1457, 1294,
	1269, 1934, 1346, 1348, 1349, 1906, 1813, 1434, 1861, 2332,
	2531, 757, 714, 715, 716, 1319, 1811, 981, 1353, 1354,
	1809, 1565, 1331, 1807, 1531, 1391, 1050, 1469, 1347, 1795,
	1751, 1733, 1336, 1418, 1418, 1345, 1364, 1365, 1303, 985,
	1334, 1335, 1297, 1697, 1462, 1725, 1418, 1350, 1721, 1717,
	2397, 1630, 1407, 1396, 969, 1629, 1415, 1076, 1076, 2332,
	1935, 1561, 1188, 1327, 1328, 1035, 2632, 2189, 1351, 1935,
	1535, 1338, 1534, 1669, 1814, 611, 1463, 2068, 1525, 1319,
	1413, 1492, 1344, 1360, 1812, 1479, 1101, 1361, 1808, 1362,
	2160, 1808, 1496, 1497, 1680, 1424, 1406, 794, 794, 1630,
	759, 1925, 1358, 1863, 1443, 1738, 1737, 1729, 1646, 1522,
	1443, 1404, 1405, 1718, 1367, 1369, 1722, 1718, 1510, 1461,
	1136, 670, 615, 1630, 1392, 1431, 1312, 1097, 811, 1560,
	1231, 932, 840, 43, 1401, 1402, 1403, 2072, 794, 1954,
	794, 1147, 1148, 1149, 1150, 1151, 794, 745, 725, 1414,
	1233, 1232, 1037, 1480, 1102, 974, 1532, 1412, 696, 975,
	2651, 2642, 725, 1539, 696, 1831, 1432, 812, 813, 814,
	815, 816, 817, 818, 811, 2532, 1450, 1018, 1019, 1039,
	1023, 1024, 2090, 2082, 982, 1192, 1193, 1459, 1182, 1460,
	1040, 1228, 1965, 1879, 1455, 1234, 1456, 1728, 613, 1687,
	734, 599, 1758, 1179, 1181, 1178, 1464, 1180, 610, 609,
	1191, 446, 732, 1607, 2559, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1314, 2382, 1072, 147, 147, 147, 1627, 603,
	798, 795, 1500, 1036, 796, 797, 798, 795, 1634, 1022,
	795, 1491, 1260, 1760, 1637, 1494, 1495, 2381, 1639, 696,
	1191, 667, 1505, 2180, 675, 488, 98, 1507, 2175, 1493,
	1022, 1176, 814, 815, 816, 817, 818, 811, 1933, 1504,
	608, 2578, 2365, 2681, 607, 1984, 1673, 1673, 1380, 1673,
	597, 602, 1300, 983, 1575, 2665, 1304, 2457, 2662, 1307,
	1621, 1622, 1623, 2611, 796, 797, 798, 795, 600, 380,
	2455, 1782, 98, 796, 797, 798, 795, 1050, 147, 2453,
	2606, 1567, 1568, 1638, 796, 797, 798, 795, 2550, 598,
	1983, 2443, 732, 2463, 1244, 1077, 2456, 1380, 2441, 2664,
	1702, 2226, 1704, 614, 441, 1245, 1692, 443, 1608, 2454,
	1240, 1316, 442, 796, 797, 798, 795, 2158, 2452, 1677,
	1675, 2440, 1679, 2439, 1636, 2436, 2430, 601, 1513, 1556,
	2442, 1642, 1731, 1640, 1641, 1469, 796, 797, 798, 795,
	2227, 2427, 1050, 1056, 1050, 2426, 1050, 796, 797, 798,
	795, 732, 2157, 1569, 2034, 1300, 2159, 2010, 1648, 1615,
	2009, 1300, 1300, 697, 1575, 985, 2421, 98, 1701, 1950,
	1643, 1644, 1927, 1741, 1559, 1558, 1719, 2533, 1557, 1553,
	1050, 1776, 1635, 1552, 1098, 1713, 951, 1882, 2020, 796,
	797, 798, 795, 1783, 1645, 612, 2211, 2603, 1050, 2577,
	1647, 2462, 1653, 2561, 796, 797, 798, 795, 1699, 1048,
	1785, 2391, 2410, 1775, 2526, 2525, 2099, 1706, 2508, 696,
	2491, 2444, 2437, 1745, 2433, 2432, 2431, 1048, 2367, 2329,
	2312, 1784, 2238, 2209, 796, 797, 798, 795, 1688, 1689,
	1690, 1693, 1787, 802, 803, 804, 805, 806, 807, 808,
	800, 476, 485, 2207, 1698, 1700, 1762, 477, 2193, 484,
	478, 482, 481, 479, 480, 2156, 1714, 2155, 1518, 1742,
	2152, 2142, 2136, 1749, 2085, 2083, 1756, 2014, 2008, 1961,
	1928, 1918, 528, 527, 1050, 1562, 1555, 1842, 1435, 1433,
	1309, 1316, 1734, 1739, 1732, 1859, 1099, 1136, 1815, 864,
	860, 1865, 859, 841, 721, 1502, 2183, 2182, 1506, 2170,
	2147, 486, 1752, 1753, 2146, 2141, 2129, 1874, 1791, 2108,
	2107, 1517, 2073, 1796, 1825, 1989, 1316, 732, 1380, 1380,
	1380, 1380, 1982, 1766, 1974, 1755, 1969, 1922, 2217, 732,
	1380, 483, 1823, 1673, 796, 797, 798, 795, 1516, 1810,
	1806, 140, 1520, 1805, 128, 107, 1050, 1540, 1530, 1528,
	1857, 796, 797, 798, 795, 1524, 1523, 147, 147, 1521,
	1533, 1816, 1515, 1536, 1537, 1538, 1512, 1511, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1905, 1549, 1819, 1240,
	1851, 31, 1243, 1940, 1866, 1242, 1062, 1060, 1240, 1889,
	1949, 1281, 140, 1902, 2694, 2641, 1050, 1853, 137, 1956,
	2635, 1889, 1884, 98, 98, 697, 1867, 2618, 2615, 2613,
	2549, 1840, 856, 1868, 1871, 1872, 2479, 1870, 1858, 1864,
	43, 2467, 1920, 1921, 19, 2464, 1286, 1287, 2459, 1319,
	8, 2398, 1291, 6, 1294, 2216, 1876, 2389, 30, 1869,
	1631, 1936, 1880, 1890, 1891, 1892, 1893, 7, 2388, 137,
	1901, 2387, 1299, 2384, 1873, 1904, 1948, 1903, 796, 797,
	798, 795, 2378, 1946, 2363, 1276, 2200, 2198, 1919, 1916,
	1914, 2181, 2165, 1995, 827, 1285, 1278, 586, 1945, 1939,
	972, 1856, 1855, 1854, 1958, 732, 1926, 1953, 1290, 1293,
	1977, 2023, 1979, 1282, 1724, 857, 1937, 1686, 1628, 1177,
	137, 1947, 2038, 1943, 147, 1941, 1440, 1421, 1300, 1300,
	1300, 1952, 1311, 1283, 1966, 732, 732, 732, 1121, 1967,
	1087, 1380, 1627, 935, 2071, 2139, 883, 882, 2385, 1987,
	2075, 1076, 1973, 881, 880, 879, 878, 877, 2023, 876,
	875, 1980, 1981, 874, 873, 872, 1316, 1316, 796, 797,
	798, 795, 796, 797, 798, 795, 1877, 1575, 871, 870,
	869, 1994, 2043, 868, 867, 1996, 1997, 1998, 1999, 2041,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2018,
	863, 1975, 1976, 862, 861, 858, 1776, 2052, 2052, 2052,
	853, 852, 2069, 2016, 850, 849, 1316, 848, 847, 846,
	1316, 845, 844, 843, 941, 839, 1978, 838, 761, 2042,
	1851, 1986, 1759, 2093, 2094, 2066, 1633, 2070, 2064, 2065,
	1777, 1778, 2080, 147, 1618, 1780, 1781, 749, 2079, 2081,
	2084, 2623, 2086, 2087, 796, 797, 798, 795, 1786, 2621,
	1985, 2097, 2074, 2582, 2078, 2096, 2076, 2077, 1843, 1696,
	1437, 2114, 760, 2101, 2098, 2104, 2105, 2106, 2680, 1804,
	1895, 1894, 2088, 796, 797, 798, 795, 1300, 1803, 80,
	1817, 1818, 1307, 1802, 2113, 2127, 1900, 2100, 1665, 1666,
	1938, 2130, 796, 797, 798, 795, 2128, 2123, 2134, 2126,
	1726, 796, 797, 798, 795, 2132, 796, 797, 798, 795,
	42, 1316, 2131, 1821, 1898, 2135, 1896, 2169, 1801, 1899,
	1059, 1897, 2124, 376, 1439, 380, 2174, 819, 820, 812,
	813, 814, 815, 816, 817, 818, 811, 1673, 1380, 2186,
	1438, 796, 797, 798, 795, 2012, 2013, 1852, 98, 2017,
	1270, 1712, 98, 1746, 377, 144, 937, 2148, 1081, 41,
	732, 1567, 1568, 98, 2150, 1800, 2203, 2151, 2202, 1252,
	1253, 1609, 98, 1256, 1257, 1258, 1259, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 2205, 755, 2163, 796, 797,
	798, 795, 1799, 732, 2173, 2178, 375, 2164, 2194, 1798,
	2188, 2172, 2201, 378, 2179, 2416, 1875, 1826, 1329, 2185,
	2184, 2177, 1310, 2177, 2594, 796, 797, 798, 795, 1651,
	2192, 2103, 796, 797, 798, 795, 1233, 1232, 2196, 2195,
	949, 950, 1889, 947, 948, 1366, 732, 1050, 1050, 945,
	946, 1300, 732, 943, 944, 1300, 2291, 2293, 2206, 2291,
	2291, 1017, 1016, 2219, 2187, 787, 1458, 2212, 976, 1797,
	2190, 939, 2636, 2191, 1794, 1889, 1048, 2236, 2215, 1331,
	2234, 2306, 2213, 590, 591, 592, 593, 1968, 2556, 2554,
	2516, 2221, 796, 797, 798, 795, 589, 796, 797, 798,
	795, 2501, 2292, 2326, 2323, 1793, 2288, 2500, 2498, 1988,
	2424, 1767, 2303, 2266, 2399, 2309, 2294, 2295, 2308, 2220,
	2300, 2208, 2338, 2299, 2052, 2188, 1792, 2296, 796, 797,
	798, 795, 2121, 2304, 2218, 1788, 2120, 931, 928, 929,
	930, 1779, 2111, 1772, 942, 1771, 1770, 1768, 589, 796,
	797, 798, 795, 2110, 2324, 1924, 1951, 1050, 796, 797,
	798, 795, 1333, 2366, 796, 797, 798, 795, 147, 2166,
	2167, 2168, 2333, 2625, 2624, 2341, 1620, 2293, 1514, 2301,
	2302, 1757, 746, 2624, 2625, 2380, 2236, 2122, 988, 50,
	1408, 1187, 1054, 1661, 1664, 1665, 1666, 1662, 2364, 1663,
	1667, 2368, 2288, 1, 796, 797, 798, 795, 1769, 1308,
	594, 1907, 1908, 732, 796, 797, 798, 795, 2392, 2425,
	2102, 2394, 2390, 2393, 1910, 1476, 1649, 1656, 1610, 2037,
	967, 616, 1673, 2383, 1235, 590, 591, 592, 593, 1106,
	711, 741, 2458, 1103, 2420, 740, 738, 1189, 589, 2419,
	1661, 1664, 1665, 1666, 1662, 490, 1663, 1667, 1448, 2460,
	2305, 1379, 2593, 2627, 2548, 732, 2596, 1119, 732, 732,
	732, 474, 2492, 2402, 2552, 2438, 2404, 2315, 2486, 2489,
	1481, 810, 809, 819, 820, 812, 813, 814, 815, 816,
	817, 818, 811, 792, 1942, 634, 2465, 1061, 522, 2490,
	1529, 2475, 497, 851, 1089, 1082, 2484, 1992, 713, 1050,
	1050, 2138, 2485, 2497, 2502, 2495, 496, 2162, 2140, 1836,
	2468, 606, 697, 2476, 2477, 2478, 710, 635, 697, 1550,
	2400, 1271, 2515, 1773, 1774, 1292, 1275, 98, 1048, 1048,
	147, 2690, 2523, 2524, 2679, 2654, 2634, 2521, 732, 2674,
	2565, 2616, 2319, 2317, 2318, 2609, 2517, 412, 1388, 580,
	732, 679, 2480, 1436, 413, 1632, 2529, 2509, 2339, 2340,
	2535, 2343, 2344, 2345, 2346, 2466, 604, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 1617, 605, 1849, 1848, 1158, 801, 732, 2555, 2553,
	2557, 2558, 2551, 2539, 1175, 1418, 2143, 2144, 836, 451,
	1503, 463, 1833, 827, 2281, 2544, 1917, 1300, 49, 48,
	2197, 2568, 2570, 2199, 47, 46, 1427, 151, 2592, 492,
	2600, 150, 2576, 2488, 2598, 472, 471, 2204, 470, 469,
	1660, 1658, 2599, 2607, 625, 732, 2587, 2588, 2589, 2590,
	1657, 1375, 1374, 1425, 2608, 2579, 2604, 2536, 2612, 2537,
	2614, 2605, 2377, 2445, 2373, 2369, 2527, 2428, 2429, 2563,
	2240, 2267, 2268, 2434, 2435, 2274, 2619, 890, 2622, 2620,
	886, 888, 2629, 889, 887, 1765, 1761, 2626, 2050, 2051,
	2048, 952, 2325, 2149, 732, 1573, 732, 1571, 2095, 2091,
	2039, 1444, 1305, 2638, 1820, 2640, 659, 1376, 2297, 2643,
	1372, 1654, 2600, 2653, 1619, 73, 72, 1142, 78, 118,
	2649, 37, 732, 2298, 2599, 2652, 583, 32, 2657, 27,
	5, 2661, 29, 28, 14, 15, 13, 2673, 2629, 2667,
	1110, 12, 18, 906, 26, 25, 24, 90, 89, 23,
	88, 2677, 87, 86, 85, 22, 11, 84, 83, 2678,
	2334, 2685, 82, 21, 76, 2689, 1142, 20, 1142, 2688,
	77, 74, 75, 2697, 60, 59, 58, 70, 2700, 2685,
	2702, 2701, 69, 2703, 2689, 68, 661, 67, 66, 660,
	65, 633, 57, 56, 1142, 55, 54, 71, 64, 63,
	62, 61, 140, 53, 39, 128, 107, 52, 51, 105,
	104, 103, 102, 1676, 101, 100, 33, 34, 35, 36,
	115, 114, 133, 646, 116, 117, 112, 110, 113, 121,
	111, 626, 109, 134, 44, 10, 2560, 17, 96, 2,
	0, 796, 797, 798, 795, 894, 2415, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 651, 0, 137,
	0, 0, 1379, 914, 918, 920, 922, 924, 925, 927,
	0, 931, 928, 929, 930, 0, 0, 909, 910, 911,
	912, 892, 893, 915, 0, 895, 0, 896, 897, 898,
	899, 900, 901, 902, 903, 904, 905, 907, 913, 0,
	0, 0, 0, 0, 0, 0, 917, 919, 921, 923,
	926, 0, 0, 0, 645, 644, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2663, 0, 129,
	130, 643, 131, 132, 0, 0, 0, 0, 0, 2415,
	624, 0, 908, 0, 0, 0, 0, 0, 0, 0,
	0, 627, 654, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2272, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 810, 809, 819, 820,
	812, 813, 814, 815, 816, 817, 818, 811, 0, 0,
	2282, 2534, 0, 0, 0, 0, 0, 106, 127, 138,
	0, 79, 0, 2275, 0, 0, 0, 650, 655, 0,
	2270, 0, 0, 0, 0, 2285, 2286, 0, 126, 120,
	119, 2271, 0, 0, 640, 45, 642, 658, 0, 0,
	0, 639, 637, 636, 0, 641, 628, 629, 630, 631,
	632, 0, 656, 657, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 652, 653, 0, 2276, 0, 0,
	0, 0, 0, 0, 98, 1212, 0, 0, 0, 1209,
	0, 0, 0, 1211, 1208, 1210, 1214, 1215, 0, 0,
	0, 1213, 2639, 122, 123, 124, 2415, 0, 0, 0,
	0, 647, 0, 1379, 1379, 1379, 1379, 0, 0, 2637,
	0, 0, 0, 1212, 0, 1379, 135, 1209, 0, 0,
	0, 1211, 1208, 1210, 1214, 1215, 0, 0, 0, 1213,
	0, 0, 0, 0, 91, 0, 0, 0, 125, 0,
	92, 810, 809, 819, 820, 812, 813, 814, 815, 816,
	817, 818, 811, 0, 0, 2284, 0, 2055, 810, 809,
	819, 820, 812, 813, 814, 815, 816, 817, 818, 811,
	0, 98, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2278, 1990, 0, 0, 0, 0, 2669, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 0, 0,
	916, 0, 0, 38, 2277, 2279, 0, 0, 0, 0,
	0, 0, 0, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1219, 1220, 1221, 1222, 1223, 1224,
	1217, 1218, 810, 809, 819, 820, 812, 813, 814, 815,
	816, 817, 818, 811, 0, 0, 0, 0, 40, 0,
	0, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1219, 1220, 1221, 1222, 1223, 1224, 1217, 1218,
	0, 0, 98, 0, 0, 0, 2287, 0, 0, 0,
	0, 108, 0, 0, 0, 0, 0, 0, 2273, 318,
	504, 0, 0, 0, 2283, 0, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 1379, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 225, 0, 0,
	250, 98, 0, 0, 495, 0, 0, 310, 264, 0,
	94, 95, 99, 551, 559, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 0, 489, 528,
	527, 476, 485, 0, 0, 206, 149, 477, 0, 484,
	478, 482, 481, 479, 480, 0, 543, 0, 0, 0,
	0, 0, 0, 449, 462, 2412, 466, 0, 0, 0,
	98, 0, 98, 810, 809, 819, 820, 812, 813, 814,
	815, 816, 817, 818, 811, 0, 0, 0, 0, 459,
	460, 0, 0, 0, 0, 505, 0, 461, 0, 0,
	500, 486, 487, 0, 0, 197, 315, 331, 207, 306,
	344, 212, 313, 202, 279, 302, 0, 0, 199, 329,
	312, 261, 244, 245, 198, 0, 297, 223, 236, 219,
	277, 483, 503, 507, 218, 565, 501, 339, 201, 0,
	338, 276, 325, 330, 262, 256, 200, 327, 260, 255,
	248, 227, 566, 240, 288, 254, 289, 241, 266, 265,
	267, 0, 0, 0, 0, 0, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	498, 0, 0, 341, 0, 0, 549, 0, 0, 0,
	314, 0, 0, 249, 0, 0, 0, 502, 0, 300,
	282, 562, 450, 1379, 298, 252, 326, 290, 332, 316,
	340, 294, 291, 192, 317, 221, 263, 203, 205, 217,
	224, 226, 228, 229, 272, 273, 285, 305, 319, 320,
	321, 220, 213, 299, 214, 238, 215, 193, 307, 216,
	195, 286, 324, 0, 234, 295, 259, 196, 258, 287,
	323, 322, 204, 348, 354, 355, 359, 0, 360, 0,
	0, 0, 368, 372, 373, 374, 0, 0, 0, 0,
	0, 362, 0, 0, 0, 0, 0, 0, 353, 232,
	189, 190, 336, 547, 278, 0, 0, 561, 542, 544,
	545, 548, 552, 553, 554, 555, 556, 558, 560, 564,
	303, 0, 0, 0, 0, 0, 243, 284, 0, 304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 334, 346, 363, 366, 0, 0, 0,
	194, 365, 0, 2413, 0, 0, 1754, 2414, 0, 563,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 506,
	268, 269, 270, 271, 550, 0, 211, 364, 293, 810,
	809, 819, 820, 812, 813, 814, 815, 816, 817, 818,
	811, 0, 0, 0, 0, 358, 231, 237, 0, 239,
	210, 283, 233, 343, 246, 0, 369, 0, 0, 0,
	0, 275, 242, 308, 247, 253, 296, 342, 281, 301,
	208, 333, 309, 257, 1501, 0, 572, 546, 571, 573,
	574, 570, 575, 576, 557, 468, 0, 510, 568, 567,
	569, 0, 0, 0, 0, 0, 0, 810, 809, 819,
	820, 812, 813, 814, 815, 816, 817, 818, 811, 0,
	0, 0, 0, 0, 191, 0, 251, 0, 292, 230,
	535, 515, 516, 517, 467, 518, 513, 514, 536, 508,
	532, 533, 491, 511, 519, 531, 520, 534, 537, 538,
	577, 578, 526, 579, 523, 539, 530, 529, 521, 509,
	540, 541, 494, 493, 524, 525, 512, 318, 504, 0,
	349, 350, 351, 371, 335, 0, 222, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 225, 0, 0, 250, 0,
	0, 0, 495, 0, 0, 310, 264, 0, 0, 0,
	0, 551, 559, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 0, 0, 489, 528, 527, 476,
	485, 0, 0, 206, 149, 477, 0, 484, 478, 482,
	481, 479, 480, 822, 543, 826, 0, 0, 0, 0,
	0, 449, 462, 0, 466, 0, 0, 0, 0, 0,
	823, 825, 821, 0, 824, 810, 809, 819, 820, 812,
	813, 814, 815, 816, 817, 818, 811, 459, 460, 0,
	0, 0, 0, 505, 0, 461, 0, 0, 500, 486,
	487, 0, 0, 197, 315, 331, 207, 306, 344, 212,
	313, 202, 279, 302, 0, 0, 199, 329, 312, 261,
	244, 245, 198, 0, 297, 223, 236, 219, 277, 483,
	503, 507, 218, 565, 501, 339, 201, 0, 338, 276,
	325, 330, 262, 256, 200, 327, 260, 255, 248, 227,
	566, 240, 288, 254, 289, 241, 266, 265, 267, 0,
	0, 0, 0, 0, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 498, 0,
	0, 341, 0, 0, 549, 0, 0, 0, 314, 0,
	0, 249, 0, 0, 0, 502, 0, 300, 282, 562,
	450, 0, 298, 252, 326, 290, 332, 316, 340, 294,
	291, 192, 317, 221, 263, 203, 205, 217, 224, 226,
	228, 229, 272, 273, 285, 305, 319, 320, 321, 220,
	213, 299, 214, 238, 215, 193, 307, 216, 195, 286,
	324, 0, 234, 295, 259, 196, 258, 287, 323, 322,
	204, 348, 354, 355, 359, 0, 360, 0, 0, 0,
	368, 372, 373, 374, 0, 0, 0, 0, 0, 362,
	0, 0, 0, 1237, 1236, 1238, 353, 232, 189, 190,
	336, 547, 278, 0, 0, 561, 542, 544, 545, 548,
	552, 553, 554, 555, 556, 558, 560, 564, 303, 0,
	0, 0, 0, 0, 243, 284, 0, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 334, 346, 363, 366, 0, 0, 0, 194, 365,
	0, 0, 0, 0, 0, 0, 0, 563, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 506, 268, 269,
	270, 271, 550, 0, 211, 364, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 231, 237, 0, 239, 210, 283,
	233, 343, 246, 0, 369, 0, 0, 0, 0, 275,
	242, 308, 247, 253, 296, 342, 281, 301, 208, 333,
	309, 257, 0, 0, 572, 546, 571, 573, 574, 570,
	575, 576, 557, 468, 0, 510, 568, 567, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 251, 0, 292, 230, 535, 515,
	516, 517, 467, 518, 513, 514, 536, 508, 532, 533,
	491, 511, 519, 531, 520, 534, 537, 538, 577, 578,
	526, 579, 523, 539, 530, 529, 521, 509, 540, 541,
	494, 493, 524, 525, 512, 318, 504, 0, 349, 350,
	351, 371, 335, 0, 222, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 225, 0, 0, 250, 0, 0, 0,
	495, 0, 0, 310, 264, 0, 0, 0, 0, 551,
	559, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 0, 489, 528, 527, 476, 485, 0,
	0, 206, 149, 477, 0, 484, 478, 482, 481, 479,
	480, 0, 543, 0, 0, 0, 0, 0, 0, 449,
	462, 0, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 459, 460, 0, 0, 0,
	0, 505, 0, 461, 0, 0, 500, 486, 487, 0,
	0, 197, 315, 331, 207, 306, 344, 212, 313, 202,
	279, 302, 0, 0, 199, 329, 312, 261, 244, 245,
	198, 0, 297, 223, 236, 219, 277, 483, 503, 507,
	218, 565, 501, 339, 201, 0, 338, 276, 325, 330,
	262, 256, 200, 327, 260, 255, 248, 227, 566, 240,
	288, 254, 289, 241, 266, 265, 267, 0, 0, 0,
	0, 0, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 498, 0, 0, 341,
	0, 0, 549, 0, 0, 0, 314, 0, 0, 249,
	0, 0, 0, 502, 0, 300, 282, 562, 450, 0,
	298, 252, 326, 290, 332, 316, 340, 294, 291, 192,
	317, 221, 263, 203, 205, 217, 224, 226, 228, 229,
	272, 273, 285, 305, 319, 320, 321, 220, 213, 299,
	214, 238, 215, 193, 307, 216, 195, 286, 324, 0,
	234, 295, 259, 196, 258, 287, 323, 322, 204, 348,
	354, 355, 359, 0, 360, 0, 0, 0, 368, 372,
	373, 374, 0, 0, 0, 0, 0, 362, 0, 0,
	0, 0, 0, 0, 353, 232, 189, 190, 336, 547,
	278, 0, 0, 561, 542, 544, 545, 548, 552, 553,
	554, 555, 556, 558, 560, 564, 303, 0, 0, 0,
	0, 0, 243, 284, 0, 304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 334,
	346, 363, 366, 0, 0, 0, 194, 365, 0, 2413,
	0, 0, 0, 2414, 0, 563, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 506, 268, 269, 270, 271,
	550, 0, 211, 364, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 231, 237, 0, 239, 210, 283, 233, 343,
	246, 0, 369, 0, 0, 0, 0, 275, 242, 308,
	247, 253, 296, 342, 281, 301, 208, 333, 309, 257,
	0, 0, 572, 546, 571, 573, 574, 570, 575, 576,
	557, 468, 0, 510, 568, 567, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 251, 0, 292, 230, 535, 515, 516, 517,
	467, 518, 513, 514, 536, 508, 532, 533, 491, 511,
	519, 531, 520, 534, 537, 538, 577, 578, 526, 579,
	523, 539, 530, 529, 521, 509, 540, 541, 494, 493,
	524, 525, 512, 318, 504, 0, 349, 350, 351, 371,
	335, 0, 222, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 225, 1301, 0, 250, 0, 0, 0, 495, 0,
	0, 310, 264, 0, 0, 0, 0, 551, 559, 0,
	0, 0, 0, 0, 0, 0, 1398, 0, 0, 458,
	0, 0, 489, 528, 527, 476, 485, 0, 0, 206,
	149, 477, 0, 484, 478, 482, 481, 479, 480, 0,
	543, 0, 0, 0, 0, 0, 0, 449, 462, 0,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 459, 460, 0, 0, 0, 0, 505,
	0, 461, 0, 0, 1399, 486, 487, 0, 0, 197,
	315, 331, 207, 306, 344, 212, 313, 202, 279, 302,
	0, 0, 199, 329, 312, 261, 244, 245, 198, 0,
	297, 223, 236, 219, 277, 483, 503, 507, 218, 565,
	501, 339, 201, 0, 338, 276, 325, 330, 262, 256,
	200, 327, 260, 255, 248, 227, 566, 240, 288, 254,
	289, 241, 266, 265, 267, 0, 0, 0, 0, 0,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 0, 0, 341, 0, 0,
	549, 0, 0, 0, 314, 0, 0, 249, 0, 0,
	0, 502, 0, 300, 282, 562, 450, 0, 298, 252,
	326, 290, 332, 316, 340, 294, 291, 192, 317, 221,
	263, 203, 205, 217, 224, 226, 228, 229, 272, 273,
	285, 305, 319, 320, 321, 220, 213, 299, 214, 238,
	215, 193, 307, 216, 195, 286, 324, 0, 234, 295,
	259, 196, 258, 287, 323, 322, 204, 348, 354, 355,
	359, 0, 360, 0, 0, 0, 368, 372, 373, 374,
	0, 0, 0, 0, 0, 362, 0, 0, 0, 0,
	0, 0, 353, 232, 189, 190, 336, 547, 278, 0,
	0, 561, 542, 544, 545, 548, 552, 553, 554, 555,
	556, 558, 560, 564, 303, 0, 0, 0, 0, 0,
	243, 284, 0, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 334, 346, 363,
	366, 0, 0, 0, 194, 365, 0, 0, 0, 0,
	0, 0, 0, 563, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 506, 268, 269, 270, 271, 550, 0,
	211, 364, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	231, 237, 0, 239, 210, 283, 233, 343, 246, 0,
	369, 0, 0, 0, 0, 275, 242, 308, 247, 253,
	296, 342, 281, 301, 208, 333, 309, 257, 0, 0,
	572, 546, 571, 573, 574, 570, 575, 576, 557, 468,
	0, 510, 568, 567, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	251, 0, 292, 230, 535, 515, 516, 517, 467, 518,
	513, 514, 536, 508, 532, 533, 491, 511, 519, 531,
	520, 534, 537, 538, 577, 578, 526, 579, 523, 539,
	530, 529, 521, 509, 540, 541, 494, 493, 524, 525,
	512, 140, 318, 504, 349, 350, 351, 371, 335, 0,
	222, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 0, 0, 0,
	225, 0, 0, 250, 0, 0, 0, 830, 0, 0,
	310, 264, 0, 0, 0, 0, 551, 559, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	0, 489, 528, 527, 476, 485, 0, 0, 206, 149,
	477, 0, 484, 478, 482, 481, 479, 480, 0, 543,
	0, 0, 0, 0, 0, 0, 449, 462, 0, 466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 505, 0,
	461, 0, 0, 500, 486, 487, 0, 0, 197, 315,
	331, 207, 306, 344, 212, 313, 202, 279, 302, 0,
	0, 199, 329, 312, 261, 244, 245, 198, 0, 297,
	223, 236, 219, 277, 483, 503, 507, 218, 565, 501,
	339, 201, 0, 338, 276, 325, 330, 262, 256, 200,
	327, 260, 255, 248, 227, 566, 240, 288, 254, 289,
	241, 266, 265, 267, 0, 0, 0, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 498, 0, 0, 341, 0, 0, 549,
	0, 0, 0, 314, 0, 0, 249, 0, 0, 0,
	502, 0, 300, 282, 562, 450, 0, 298, 252, 326,
	290, 332, 316, 340, 294, 291, 192, 317, 221, 263,
	203, 205, 217, 224, 226, 228, 229, 272, 273, 285,
	305, 319, 320, 321, 220, 213, 299, 214, 238, 215,
	193, 307, 216, 195, 286, 324, 0, 234, 295, 259,
	196, 258, 287, 323, 322, 204, 348, 354, 355, 359,
	0, 360, 0, 0, 0, 368, 372, 373, 374, 0,
	0, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	0, 353, 232, 189, 190, 336, 547, 278, 0, 0,
	561, 542, 544, 545, 548, 552, 553, 554, 555, 556,
	558, 560, 564, 303, 0, 0, 0, 0, 0, 243,
	284, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 334, 346, 363, 366,
	0, 0, 0, 194, 365, 0, 0, 0, 0, 0,
	0, 0, 563, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 506, 268, 269, 270, 271, 550, 0, 211,
	364, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 231,
	237, 0, 239, 210, 283, 233, 343, 246, 0, 369,
	0, 0, 0, 0, 275, 242, 308, 247, 253, 296,
	342, 281, 301, 208, 333, 309, 257, 0, 0, 572,
	546, 571, 573, 574, 570, 575, 576, 557, 468, 0,
	510, 568, 567, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 251,
	108, 292, 230, 535, 515, 516, 517, 467, 518, 513,
	514, 536, 508, 532, 533, 491, 511, 519, 531, 520,
	534, 537, 538, 577, 578, 526, 579, 523, 539, 530,
	529, 521, 509, 540, 541, 494, 493, 524, 525, 512,
	318, 504, 0, 349, 350, 351, 371, 335, 0, 222,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 0, 225, 2668,
	0, 250, 0, 0, 0, 495, 0, 0, 310, 264,
	0, 0, 0, 0, 551, 559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 0, 489,
	528, 527, 476, 485, 0, 0, 206, 149, 477, 0,
	484, 478, 482, 481, 479, 480, 0, 543, 0, 0,
	0, 0, 0, 0, 449, 462, 0, 466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 460, 0, 0, 0, 0, 505, 0, 461, 0,
	0, 500, 486, 487, 0, 0, 197, 315, 331, 207,
	306, 344, 212, 313, 202, 279, 302, 0, 0, 199,
	329, 312, 261, 244, 245, 198, 0, 297, 223, 236,
	219, 277, 483, 503, 507, 218, 565, 501, 339, 201,
	0, 338, 276, 325, 330, 262, 256, 200, 327, 260,
	255, 248, 227, 566, 240, 288, 254, 289, 241, 266,
	265, 267, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 0, 0, 341, 0, 0, 549, 0, 0,
	0, 314, 0, 0, 249, 0, 0, 0, 502, 0,
	300, 282, 562, 450, 0, 298, 252, 326, 290, 332,
	316, 340, 294, 291, 192, 317, 221, 263, 203, 205,
	217, 224, 226, 228, 229, 272, 273, 285, 305, 319,
	320, 321, 220, 213, 299, 214, 238, 215, 193, 307,
	216, 195, 286, 324, 0, 234, 295, 259, 196, 258,
	287, 323, 322, 204, 348, 354, 355, 359, 0, 360,
	0, 0, 0, 368, 372, 373, 374, 0, 0, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 0, 353,
	232, 189, 190, 336, 547, 278, 0, 0, 561, 542,
	544, 545, 548, 552, 553, 554, 555, 556, 558, 560,
	564, 303, 0, 0, 0, 0, 0, 243, 284, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 334, 346, 363, 366, 0, 0,
	0, 194, 365, 0, 0, 0, 0, 0, 0, 0,
	563, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	506, 268, 269, 270, 271, 550, 0, 211, 364, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 231, 237, 0,
	239, 210, 283, 233, 343, 246, 0, 369, 0, 0,
	0, 0, 275, 242, 308, 247, 253, 296, 342, 281,
	301, 208, 333, 309, 257, 0, 0, 572, 546, 571,
	573, 574, 570, 575, 576, 557, 468, 0, 510, 568,
	567, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 251, 0, 292,
	230, 535, 515, 516, 517, 467, 518, 513, 514, 536,
	508, 532, 533, 491, 511, 519, 531, 520, 534, 537,
	538, 577, 578, 526, 579, 523, 539, 530, 529, 521,
	509, 540, 541, 494, 493, 524, 525, 512, 318, 504,
	0, 349, 350, 351, 371, 335, 0, 222, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 0, 0, 0, 225, 1301, 0, 250,
	0, 0, 0, 495, 0, 0, 310, 264, 0, 0,
	0, 0, 551, 559, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 0, 0, 489, 528, 527,
	476, 485, 0, 0, 206, 149, 477, 0, 484, 478,
	482, 481, 479, 480, 0, 543, 0, 0, 0, 0,
	0, 0, 449, 462, 0, 466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 459, 460,
	0, 0, 0, 0, 505, 0, 461, 0, 0, 500,
	486, 487, 0, 0, 197, 315, 331, 207, 306, 344,
	212, 313, 202, 279, 302, 0, 0, 199, 329, 312,
	261, 244, 245, 198, 0, 297, 223, 236, 219, 277,
	483, 503, 507, 218, 565, 501, 339, 201, 0, 338,
	276, 325, 330, 262, 256, 200, 327, 260, 255, 248,
	227, 566, 240, 288, 254, 289, 241, 266, 265, 267,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	0, 0, 341, 0, 0, 549, 0, 0, 0, 314,
	0, 0, 249, 0, 0, 0, 502, 0, 300, 282,
	562, 450, 0, 298, 252, 326, 290, 332, 316, 340,
	294, 291, 192, 317, 221, 263, 203, 205, 217, 224,
	226, 228, 229, 272, 273, 285, 305, 319, 320, 321,
	220, 213, 299, 214, 238, 215, 193, 307, 216, 195,
	286, 324, 0, 234, 295, 259, 196, 258, 287, 323,
	322, 204, 348, 354, 355, 359, 0, 360, 0, 0,
	0, 368, 372, 373, 374, 0, 0, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 0, 353, 232, 189,
	190, 336, 547, 278, 0, 0, 561, 542, 544, 545,
	548, 552, 553, 554, 555, 556, 558, 560, 564, 303,
	0, 0, 0, 0, 0, 243, 284, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 334, 346, 363, 366, 0, 0, 0, 194,
	365, 0, 0, 0, 0, 0, 0, 0, 563, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 506, 268,
	269, 270, 271, 550, 0, 211, 364, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 231, 237, 0, 239, 210,
	283, 233, 343, 246, 0, 369, 0, 0, 0, 0,
	275, 242, 308, 247, 253, 296, 342, 281, 301, 208,
	333, 309, 257, 0, 0, 572, 546, 571, 573, 574,
	570, 575, 576, 557, 468, 0, 510, 568, 567, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 251, 0, 292, 230, 535,
	515, 516, 517, 467, 518, 513, 514, 536, 508, 532,
	533, 491, 511, 519, 531, 520, 534, 537, 538, 577,
	578, 526, 579, 523, 539, 530, 529, 521, 509, 540,
	541, 494, 493, 524, 525, 512, 318, 504, 0, 349,
	350, 351, 371, 335, 0, 222, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 0, 225, 0, 0, 250, 0, 0,
	0, 495, 0, 0, 310, 264, 0, 0, 0, 0,
	551, 559, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 458, 0, 0, 489, 528, 527, 476, 485,
	0, 0, 206, 149, 477, 0, 484, 478, 482, 481,
	479, 480, 0, 543, 0, 0, 0, 0, 0, 0,
	449, 462, 0, 466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 459, 460, 1075, 0,
	0, 0, 505, 0, 461, 0, 0, 500, 486, 487,
	0, 0, 197, 315, 331, 207, 306, 344, 212, 313,
	202, 279, 302, 0, 0, 199, 329, 312, 261, 244,
	245, 198, 0, 297, 223, 236, 219, 277, 483, 503,
	507, 218, 565, 501, 339, 201, 0, 338, 276, 325,
	330, 262, 256, 200, 327, 260, 255, 248, 227, 566,
	240, 288, 254, 289, 241, 266, 265, 267, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 498, 0, 0,
	341, 0, 0, 549, 0, 0, 0, 314, 0, 0,
	249, 0, 0, 0, 502, 0, 300, 282, 562, 450,
	0, 298, 252, 326, 290, 332, 316, 340, 294, 291,
	192, 317, 221, 263, 203, 205, 217, 224, 226, 228,
	229, 272, 273, 285, 305, 319, 320, 321, 220, 213,
	299, 214, 238, 215, 193, 307, 216, 195, 286, 324,
	0, 234, 295, 259, 196, 258, 287, 323, 322, 204,
	348, 354, 355, 359, 0, 360, 0, 0, 0, 368,
	372, 373, 374, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 353, 232, 189, 190, 336,
	547, 278, 0, 0, 561, 542, 544, 545, 548, 552,
	553, 554, 555, 556, 558, 560, 564, 303, 0, 0,
	0, 0, 0, 243, 284, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	334, 346, 363, 366, 0, 0, 0, 194, 365, 0,
	0, 0, 0, 0, 0, 0, 563, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 506, 268, 269, 270,
	271, 550, 0, 211, 364, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 231, 237, 0, 239, 210, 283, 233,
	343, 246, 0, 369, 0, 0, 0, 0, 275, 242,
	308, 247, 253, 296, 342, 281, 301, 208, 333, 309,
	257, 0, 0, 572, 546, 571, 573, 574, 570, 575,
	576, 557, 468, 0, 510, 568, 567, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 251, 0, 292, 230, 535, 515, 516,
	517, 467, 518, 513, 514, 536, 508, 532, 533, 491,
	511, 519, 531, 520, 534, 537, 538, 577, 578, 526,
	579, 523, 539, 530, 529, 521, 509, 540, 541, 494,
	493, 524, 525, 512, 0, 0, 0, 349, 350, 351,
	371, 335, 0, 222, 318, 504, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 0, 225, 0, 0, 250, 0, 0, 0, 495,
	0, 0, 310, 264, 0, 0, 0, 0, 551, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 0, 0, 489, 528, 527, 476, 485, 0, 0,
	206, 149, 477, 0, 484, 478, 482, 481, 479, 480,
	0, 543, 0, 0, 0, 0, 0, 0, 449, 462,
	0, 466, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 459, 460, 0, 0, 0, 0,
	505, 0, 461, 0, 0, 500, 486, 487, 0, 0,
	197, 315, 331, 207, 306, 344, 212, 313, 202, 279,
	302, 0, 0, 199, 329, 312, 261, 244, 245, 198,
	0, 297, 223, 236, 219, 277, 483, 503, 507, 218,
	565, 501, 339, 201, 0, 338, 276, 325, 330, 262,
	256, 200, 327, 260, 255, 248, 227, 566, 240, 288,
	254, 289, 241, 266, 265, 267, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 341, 0,
	0, 549, 0, 0, 0, 314, 0, 0, 249, 0,
	0, 0, 502, 0, 300, 282, 562, 450, 0, 298,
	252, 326, 290, 332, 316, 340, 294, 291, 192, 317,
	221, 263, 203, 205, 217, 224, 226, 228, 229, 272,
	273, 285, 305, 319, 320, 321, 220, 213, 299, 214,
	238, 215, 193, 307, 216, 195, 286, 324, 0, 234,
	295, 259, 196, 258, 287, 323, 322, 204, 348, 354,
	355, 359, 0, 360, 0, 0, 0, 368, 372, 373,
	374, 0, 0, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 0, 353, 232, 189, 190, 336, 547, 278,
	0, 0, 561, 542, 544, 545, 548, 552, 553, 554,
	555, 556, 558, 560, 564, 303, 0, 0, 0, 0,
	0, 243, 284, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 334, 346,
	363, 366, 0, 0, 0, 194, 365, 0, 0, 0,
	0, 0, 0, 0, 563, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 506, 268, 269, 270, 271, 550,
	0, 211, 364, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 231, 237, 0, 239, 210, 283, 233, 343, 246,
	0, 369, 0, 0, 0, 0, 275, 242, 308, 247,
	253, 296, 342, 281, 301, 208, 333, 309, 257, 0,
	0, 572, 546, 571, 573, 574, 570, 575, 576, 557,
	468, 0, 510, 568, 567, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 251, 0, 292, 230, 535, 515, 516, 517, 467,
	518, 513, 514, 536, 508, 532, 533, 491, 511, 519,
	531, 520, 534, 537, 538, 577, 578, 526, 579, 523,
	539, 530, 529, 521, 509, 540, 541, 494, 493, 524,
	525, 512, 318, 504, 0, 349, 350, 351, 371, 335,
	0, 222, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 0, 0, 0,
	225, 0, 0, 250, 0, 0, 0, 495, 0, 0,
	310, 264, 0, 0, 0, 0, 551, 559, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	0, 489, 528, 527, 476, 485, 0, 0, 206, 149,
	477, 0, 484, 478, 482, 481, 479, 480, 0, 543,
	0, 0, 0, 0, 0, 0, 449, 462, 0, 466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 505, 0,
	461, 0, 0, 500, 486, 487, 0, 0, 197, 315,
	331, 207, 306, 344, 212, 313, 202, 279, 302, 0,
	0, 199, 329, 312, 261, 244, 245, 198, 0, 297,
	223, 236, 219, 277, 483, 503, 507, 218, 565, 501,
	339, 201, 0, 338, 276, 325, 330, 262, 256, 200,
	327, 260, 255, 248, 227, 566, 240, 288, 254, 289,
	241, 266, 265, 267, 0, 0, 0, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 498, 0, 0, 341, 0, 0, 549,
	0, 0, 0, 314, 0, 0, 249, 0, 0, 0,
	502, 0, 300, 282, 562, 450, 0, 298, 252, 326,
	290, 332, 316, 340, 294, 291, 192, 317, 221, 263,
	203, 205, 217, 224, 226, 228, 229, 272, 273, 285,
	305, 319, 320, 321, 220, 213, 299, 214, 238, 215,
	193, 307, 216, 195, 286, 324, 0, 234, 295, 259,
	196, 258, 287, 323, 322, 204, 348, 354, 355, 359,
	0, 360, 0, 0, 0, 368, 372, 373, 374, 0,
	0, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	0, 353, 232, 189, 190, 336, 547, 278, 0, 0,
	561, 542, 544, 545, 548, 552, 553, 554, 555, 556,
	558, 560, 564, 303, 0, 0, 0, 0, 0, 243,
	284, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 334, 346, 363, 366,
	0, 0, 0, 194, 365, 0, 0, 0, 0, 0,
	0, 0, 563, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 506, 268, 269, 270, 271, 550, 0, 211,
	364, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 231,
	237, 0, 239, 210, 283, 233, 343, 246, 0, 369,
	0, 0, 0, 0, 275, 242, 308, 247, 253, 296,
	342, 281, 301, 208, 333, 309, 257, 0, 0, 572,
	546, 571, 573, 574, 570, 575, 576, 557, 468, 0,
	510, 568, 567, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 251,
	0, 292, 230, 535, 515, 516, 517, 467, 518, 513,
	514, 536, 508, 532, 533, 491, 511, 519, 531, 520,
	534, 537, 538, 577, 578, 526, 579, 523, 539, 530,
	529, 521, 509, 540, 541, 494, 493, 524, 525, 512,
	318, 504, 0, 349, 350, 351, 371, 335, 0, 222,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	1159, 0, 0, 0, 465, 0, 0, 0, 225, 0,
	0, 250, 0, 0, 0, 495, 0, 0, 310, 264,
	0, 0, 0, 0, 551, 559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 0, 489,
	528, 527, 476, 485, 0, 0, 206, 149, 477, 0,
	484, 478, 482, 481, 479, 480, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 462, 0, 466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 460, 0, 0, 0, 0, 505, 0, 461, 0,
	0, 500, 486, 487, 0, 0, 197, 315, 331, 207,
	306, 344, 212, 313, 202, 279, 302, 0, 0, 199,
	329, 312, 261, 244, 245, 198, 0, 297, 223, 236,
	219, 277, 483, 503, 507, 218, 565, 501, 339, 201,
	0, 338, 276, 325, 330, 262, 256, 200, 327, 260,
	255, 248, 227, 566, 240, 288, 254, 289, 241, 266,
	265, 267, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 0, 0, 341, 0, 0, 549, 0, 0,
	0, 314, 0, 0, 249, 0, 0, 0, 502, 0,
	300, 282, 562, 0, 0, 298, 252, 326, 290, 332,
	316, 340, 294, 291, 192, 317, 221, 263, 203, 205,
	217, 224, 226, 228, 229, 272, 273, 285, 305, 319,
	320, 321, 220, 213, 299, 214, 238, 215, 193, 307,
	216, 195, 286, 324, 0, 234, 295, 259, 196, 258,
	287, 323, 322, 204, 348, 1160, 1161, 359, 0, 360,
	0, 0, 0, 368, 372, 373, 374, 0, 0, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 0, 353,
	232, 189, 190, 336, 547, 278, 0, 0, 561, 542,
	544, 545, 548, 552, 553, 554, 555, 556, 558, 560,
	564, 303, 0, 0, 0, 0, 0, 243, 284, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 334, 346, 363, 366, 0, 0,
	0, 194, 365, 0, 0, 0, 0, 0, 0, 0,
	563, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	506, 268, 269, 270, 271, 550, 0, 211, 364, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 231, 237, 0,
	239, 210, 283, 233, 343, 246, 0, 369, 0, 0,
	0, 0, 275, 242, 308, 247, 253, 296, 342, 281,
	301, 208, 333, 309, 257, 0, 0, 572, 546, 571,
	573, 574, 570, 575, 576, 557, 468, 0, 510, 568,
	567, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 251, 0, 292,
	230, 535, 515, 516, 517, 467, 518, 513, 514, 536,
	508, 532, 533, 491, 511, 519, 531, 520, 534, 537,
	538, 577, 578, 526, 579, 523, 539, 530, 529, 521,
	509, 540, 541, 494, 493, 524, 525, 512, 318, 504,
	0, 349, 350, 351, 371, 335, 0, 222, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 0, 0, 0, 225, 0, 0, 250,
	0, 0, 0, 495, 0, 0, 310, 264, 0, 0,
	0, 0, 551, 559, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 489, 528, 527,
	476, 485, 0, 0, 206, 149, 477, 0, 484, 478,
	482, 481, 479, 480, 0, 543, 0, 0, 0, 0,
	0, 0, 449, 462, 0, 466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 459, 460,
	0, 0, 0, 0, 505, 0, 461, 0, 0, 500,
	486, 487, 0, 0, 197, 315, 331, 207, 306, 344,
	212, 313, 202, 279, 302, 0, 0, 199, 329, 312,
	261, 244, 245, 198, 0, 297, 223, 236, 219, 277,
	483, 503, 507, 218, 565, 501, 339, 201, 0, 338,
	276, 325, 330, 262, 256, 200, 327, 260, 255, 248,
	227, 566, 240, 288, 254, 289, 241, 266, 265, 267,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	0, 0, 341, 0, 0, 549, 0, 0, 0, 314,
	0, 0, 249, 0, 0, 0, 502, 0, 300, 282,
	562, 450, 0, 298, 252, 326, 290, 332, 316, 340,
	294, 291, 192, 317, 221, 263, 203, 205, 217, 224,
	226, 228, 229, 272, 273, 285, 305, 319, 320, 321,
	220, 213, 299, 214, 238, 215, 193, 307, 216, 195,
	286, 324, 0, 234, 295, 259, 196, 258, 287, 323,
	322, 204, 348, 354, 355, 359, 0, 360, 0, 0,
	0, 368, 372, 373, 374, 0, 0, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 0, 353, 232, 189,
	190, 336, 547, 278, 0, 0, 561, 542, 544, 545,
	548, 552, 553, 554, 555, 556, 558, 560, 564, 303,
	0, 0, 0, 0, 0, 243, 284, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 334, 346, 363, 366, 0, 0, 0, 194,
	365, 0, 0, 0, 0, 0, 0, 0, 563, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 506, 268,
	269, 270, 271, 550, 0, 211, 364, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 231, 237, 0, 239, 210,
	283, 233, 343, 246, 0, 369, 0, 0, 0, 0,
	275, 242, 308, 247, 253, 296, 342, 281, 301, 208,
	333, 309, 257, 0, 0, 572, 546, 571, 573, 574,
	570, 575, 576, 557, 468, 0, 510, 568, 567, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 251, 0, 292, 230, 535,
	515, 516, 517, 467, 518, 513, 514, 536, 508, 532,
	533, 491, 511, 519, 531, 520, 534, 537, 538, 577,
	578, 526, 579, 523, 539, 530, 529, 521, 509, 540,
	541, 494, 493, 524, 525, 512, 318, 504, 0, 349,
	350, 351, 371, 335, 0, 222, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 0, 225, 0, 0, 250, 0, 0,
	0, 495, 0, 0, 310, 264, 0, 0, 0, 0,
	551, 559, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 458, 0, 0, 489, 528, 527, 476, 485,
	0, 0, 206, 149, 477, 0, 484, 478, 482, 481,
	479, 480, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 462, 0, 466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 459, 460, 0, 0,
	0, 0, 505, 0, 461, 0, 0, 500, 486, 487,
	0, 0, 197, 315, 331, 207, 306, 344, 212, 313,
	202, 279, 302, 0, 0, 199, 329, 312, 261, 244,
	245, 198, 0, 297, 223, 236, 219, 277, 483, 503,
	507, 218, 565, 501, 339, 201, 0, 338, 276, 325,
	330, 262, 256, 200, 327, 260, 255, 248, 227, 566,
	240, 288, 254, 289, 241, 266, 265, 267, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 498, 0, 0,
	341, 0, 0, 549, 0, 0, 0, 314, 0, 0,
	249, 0, 0, 0, 502, 0, 300, 282, 562, 0,
	0, 298, 252, 326, 290, 332, 316, 340, 294, 291,
	192, 317, 221, 263, 203, 205, 217, 224, 226, 228,
	229, 272, 273, 285, 305, 319, 320, 321, 220, 213,
	299, 214, 238, 215, 193, 307, 216, 195, 286, 324,
	0, 234, 295, 259, 196, 258, 287, 323, 322, 204,
	348, 354, 355, 359, 0, 360, 0, 0, 0, 368,
	372, 373, 374, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 353, 232, 189, 190, 336,
	547, 278, 0, 0, 561, 542, 544, 545, 548, 552,
	553, 554, 555, 556, 558, 560, 564, 303, 0, 0,
	0, 0, 0, 243, 284, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	334, 346, 363, 366, 0, 0, 0, 194, 365, 0,
	0, 0, 0, 0, 0, 0, 563, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 506, 268, 269, 270,
	271, 550, 0, 211, 364, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 231, 237, 0, 239, 210, 283, 233,
	343, 246, 0, 369, 0, 0, 0, 0, 275, 242,
	308, 247, 253, 296, 342, 281, 301, 208, 333, 309,
	257, 0, 0, 572, 546, 571, 573, 574, 570, 575,
	576, 557, 468, 0, 510, 568, 567, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 251, 0, 292, 230, 535, 515, 516,
	517, 467, 518, 513, 514, 536, 508, 532, 533, 491,
	511, 519, 531, 520, 534, 537, 538, 577, 578, 526,
	579, 523, 539, 530, 529, 521, 509, 540, 541, 494,
	493, 524, 525, 512, 0, 0, 0, 349, 350, 351,
	371, 335, 0, 222, 140, 318, 39, 128, 107, 0,
	0, 0, 0, 0, 0, 0, 280, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 310, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 148, 0, 0, 0, 0, 0,
	0, 206, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 315, 331, 207, 306, 344, 212, 313, 202,
	279, 302, 0, 0, 199, 329, 312, 261, 244, 245,
	198, 0, 297, 223, 236, 219, 277, 0, 328, 356,
	218, 347, 0, 339, 201, 0, 338, 276, 325, 330,
	262, 256, 200, 327, 260, 255, 248, 227, 370, 240,
	288, 254, 289, 241, 266, 265, 267, 0, 0, 0,
	0, 0, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 249,
	0, 0, 0, 357, 0, 300, 282, 0, 0, 0,
	298, 252, 326, 290, 332, 316, 340, 294, 291, 192,
	317, 221, 263, 203, 205, 217, 224, 226, 228, 229,
	272, 273, 285, 305, 319, 320, 321, 220, 213, 299,
	214, 238, 215, 193, 307, 216, 195, 286, 324, 0,
	234, 295, 259, 196, 258, 287, 323, 322, 204, 348,
	354, 355, 359, 0, 360, 0, 0, 0, 368, 372,
	373, 374, 0, 0, 0, 0, 0, 362, 0, 0,
	0, 0, 0, 0, 353, 232, 189, 190, 336, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 352, 0, 0, 0, 0, 303, 0, 0, 0,
	0, 0, 243, 284, 0, 304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 334,
	346, 363, 366, 0, 0, 0, 194, 365, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 361, 268, 269, 270, 271,
	385, 387, 211, 364, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 231, 237, 0, 239, 210, 283, 233, 343,
	246, 0, 369, 0, 0, 0, 0, 275, 242, 308,
	247, 253, 296, 342, 281, 301, 208, 333, 309, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	40, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 251, 108, 292, 230, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 0, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 318, 0, 0, 349, 350, 351, 371,
	335, 0, 222, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 906, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 310, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 0, 0, 0, 0, 0, 0, 206,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 894, 0, 0, 0, 0, 197,
	315, 331, 207, 306, 344, 212, 313, 202, 279, 302,
	0, 0, 1595, 1597, 1598, 1599, 1600, 1601, 1602, 0,
	1606, 1603, 1604, 1605, 277, 0, 1590, 1591, 1592, 1593,
	892, 1576, 1596, 0, 1577, 276, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1594, 288, 254,
	289, 241, 266, 265, 267, 917, 919, 921, 923, 926,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 249, 0, 0,
	0, 1589, 0, 300, 282, 0, 0, 0, 298, 252,
	326, 290, 332, 316, 340, 294, 291, 192, 317, 221,
	263, 203, 205, 217, 224, 226, 228, 229, 272, 273,
	285, 305, 319, 320, 321, 220, 213, 299, 214, 238,
	215, 193, 307, 216, 195, 286, 324, 0, 234, 295,
	259, 196, 258, 287, 323, 322, 204, 348, 354, 355,
	359, 0, 360, 0, 0, 0, 368, 372, 373, 374,
	0, 0, 0, 0, 0, 362, 0, 0, 0, 0,
	0, 0, 353, 232, 189, 190, 336, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 352,
	0, 0, 0, 0, 303, 0, 0, 0, 0, 0,
	243, 284, 0, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 334, 346, 363,
	366, 0, 0, 0, 194, 365, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 361, 268, 269, 270, 271, 235, 0,
	211, 364, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	231, 237, 0, 239, 210, 283, 233, 343, 246, 0,
	369, 0, 0, 0, 0, 275, 242, 308, 247, 253,
	296, 342, 281, 301, 208, 333, 309, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 916,
	251, 0, 292, 230, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 0, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 318, 0, 0, 349, 350, 351, 371, 335, 0,
	222, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 310,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 0, 0, 0, 0, 0, 0, 206, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 2059,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 315, 331,
	207, 306, 344, 212, 313, 202, 279, 302, 0, 0,
	199, 329, 312, 261, 244, 245, 198, 0, 297, 223,
	236, 219, 277, 0, 328, 356, 218, 347, 0, 339,
	201, 0, 338, 276, 325, 330, 262, 256, 200, 327,
	260, 255, 248, 227, 370, 240, 288, 254, 289, 241,
	266, 265, 267, 0, 0, 0, 0, 0, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 341, 0, 0, 0, 2056,
	0, 2055, 314, 2057, 2060, 249, 0, 0, 0, 357,
	0, 300, 282, 0, 0, 0, 298, 252, 326, 290,
	332, 316, 340, 294, 291, 192, 317, 221, 263, 203,
	205, 217, 224, 226, 228, 229, 272, 273, 285, 305,
	319, 320, 321, 220, 213, 299, 214, 238, 215, 193,
	307, 216, 195, 286, 324, 2061, 234, 295, 259, 196,
	258, 287, 323, 322, 204, 348, 354, 355, 359, 0,
	360, 0, 0, 0, 368, 372, 373, 374, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 0, 0, 0,
	353, 232, 189, 190, 336, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 352, 0, 0,
	0, 0, 303, 0, 0, 0, 0, 0, 243, 284,
	0, 304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 334, 346, 363, 366, 0,
	0, 0, 194, 365, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 361, 268, 269, 270, 271, 235, 0, 211, 364,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 231, 237,
	0, 239, 210, 283, 233, 343, 246, 0, 369, 0,
	0, 0, 0, 275, 242, 308, 247, 253, 296, 342,
	281, 301, 208, 333, 309, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 0, 251, 0,
	292, 230, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 0, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 318,
	0, 0, 349, 350, 351, 371, 335, 0, 222, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1429, 0, 0, 0, 0, 225, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 310, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 0,
	0, 1430, 0, 0, 0, 206, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 796,
	797, 798, 795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 315, 331, 207, 306,
	344, 212, 313, 202, 279, 302, 0, 0, 199, 329,
	312, 261, 244, 245, 198, 0, 297, 223, 236, 219,
	277, 0, 328, 356, 218, 347, 0, 339, 201, 0,
	338, 276, 325, 330, 262, 256, 200, 327, 260, 255,
	248, 227, 370, 240, 288, 254, 289, 241, 266, 265,
	267, 0, 0, 0, 0, 0, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 249, 0, 0, 0, 357, 0, 300,
	282, 0, 0, 0, 298, 252, 326, 290, 332, 316,
	340, 294, 291, 192, 317, 221, 263, 203, 205, 217,
	224, 226, 228, 229, 272, 273, 285, 305, 319, 320,
	321, 220, 213, 299, 214, 238, 215, 193, 307, 216,
	195, 286, 324, 0, 234, 295, 259, 196, 258, 287,
	323, 322, 204, 348, 354, 355, 359, 0, 360, 0,
	0, 0, 368, 372, 373, 374, 0, 0, 0, 0,
	0, 362, 0, 0, 0, 0, 0, 0, 353, 232,
	189, 190, 336, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 352, 0, 0, 0, 0,
	303, 0, 0, 0, 0, 0, 243, 284, 0, 304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 334, 346, 363, 366, 0, 0, 0,
	194, 365, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 361,
	268, 269, 270, 271, 235, 0, 211, 364, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 231, 237, 0, 239,
	210, 283, 233, 343, 246, 0, 369, 0, 0, 0,
	0, 275, 242, 308, 247, 253, 296, 342, 281, 301,
	208, 333, 309, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 251, 0, 292, 230,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 0, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 318, 0, 0,
	349, 350, 351, 371, 335, 0, 222, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 678, 0, 250, 0,
	0, 0, 0, 0, 0, 310, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 686, 687, 0,
	0, 0, 0, 206, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 315, 331, 207, 306, 344, 212,
	313, 202, 279, 302, 0, 0, 199, 329, 312, 261,
	244, 245, 198, 0, 297, 223, 236, 219, 277, 0,
	328, 356, 218, 347, 661, 339, 201, 660, 338, 276,
	325, 330, 262, 256, 200, 327, 260, 255, 248, 227,
	370, 240, 288, 254, 289, 241, 266, 265, 267, 0,
	0, 0, 0, 0, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 249, 0, 0, 0, 357, 0, 300, 282, 0,
	0, 0, 298, 252, 326, 290, 332, 316, 340, 676,
	291, 192, 317, 221, 263, 203, 205, 217, 224, 226,
	228, 229, 272, 273, 285, 305, 319, 320, 321, 220,
	213, 299, 214, 238, 215, 193, 307, 216, 195, 286,
	324, 0, 234, 295, 259, 196, 258, 287, 323, 322,
	204, 348, 354, 355, 359, 0, 360, 0, 0, 0,
	368, 372, 373, 374, 0, 0, 0, 0, 0, 362,
	0, 0, 0, 0, 0, 0, 353, 232, 189, 190,
	336, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 352, 0, 0, 0, 0, 303, 0,
	0, 0, 0, 0, 243, 284, 0, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 334, 346, 363, 366, 0, 0, 0, 194, 365,
	0, 0, 0, 0, 0, 0, 677, 337, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 680, 268, 269,
	270, 271, 235, 0, 211, 364, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 231, 237, 0, 239, 210, 283,
	233, 343, 246, 0, 369, 0, 0, 0, 0, 688,
	683, 684, 247, 253, 296, 342, 281, 301, 208, 333,
	309, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 251, 0, 292, 230, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	0, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 140, 318, 0, 349, 350,
	351, 371, 335, 0, 222, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 250, 0, 0,
	0, 96, 0, 0, 310, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 1451, 0, 148, 0, 0, 0, 0,
	0, 0, 206, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 315, 331, 207, 306, 344, 212, 313,
	202, 279, 302, 0, 0, 199, 329, 312, 261, 244,
	245, 198, 0, 297, 223, 236, 219, 277, 0, 328,
	356, 218, 347, 0, 339, 201, 0, 338, 276, 325,
	330, 262, 256, 200, 327, 260, 255, 248, 227, 370,
	240, 288, 254, 289, 241, 266, 265, 267, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	249, 0, 0, 0, 357, 0, 300, 282, 0, 0,
	0, 298, 252, 326, 290, 332, 316, 340, 294, 291,
	192, 317, 221, 263, 203, 205, 217, 224, 226, 228,
	229, 272, 273, 285, 305, 319, 320, 321, 220, 213,
	299, 214, 238, 215, 193, 307, 216, 195, 286, 324,
	0, 234, 295, 259, 196, 258, 287, 323, 322, 204,
	348, 354, 355, 359, 0, 360, 0, 0, 0, 368,
	372, 373, 374, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 353, 232, 189, 190, 336,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 352, 0, 0, 0, 0, 303, 0, 0,
	0, 0, 0, 243, 284, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	334, 346, 363, 366, 0, 0, 0, 194, 365, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 361, 268, 269, 270,
	271, 235, 0, 211, 364, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 231, 237, 0, 239, 210, 283, 233,
	343, 246, 0, 369, 0, 0, 0, 0, 275, 242,
	308, 247, 253, 296, 342, 281, 301, 208, 333, 309,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 251, 108, 292, 230, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 0,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 140, 318, 0, 349, 350, 351,
	371, 335, 0, 222, 0, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 250, 0, 0, 0,
	96, 0, 0, 310, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 1442, 0, 148, 0, 0, 0, 0, 0,
	0, 206, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 315, 331, 207, 306, 344, 212, 313, 202,
	279, 302, 0, 0, 199, 329, 312, 261, 244, 245,
	198, 0, 297, 223, 236, 219, 277, 0, 328, 356,
	218, 347, 0, 339, 201, 0, 338, 276, 325, 330,
	262, 256, 200, 327, 260, 255, 248, 227, 370, 240,
	288, 254, 289, 241, 266, 265, 267, 0, 0, 0,
	0, 0, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 249,
	0, 0, 0, 357, 0, 300, 282, 0, 0, 0,
	298, 252, 326, 290, 332, 316, 340, 294, 291, 192,
	317, 221, 263, 203, 205, 217, 224, 226, 228, 229,
	272, 273, 285, 305, 319, 320, 321, 220, 213, 299,
	214, 238, 215, 193, 307, 216, 195, 286, 324, 0,
	234, 295, 259, 196, 258, 287, 323, 322, 204, 348,
	354, 355, 359, 0, 360, 0, 0, 0, 368, 372,
	373, 374, 0, 0, 0, 0, 0, 362, 0, 0,
	0, 0, 0, 0, 353, 232, 189, 190, 336, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 352, 0, 0, 0, 0, 303, 0, 0, 0,
	0, 0, 243, 284, 0, 304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 334,
	346, 363, 366, 0, 0, 0, 194, 365, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 361, 268, 269, 270, 271,
	235, 0, 211, 364, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 231, 237, 0, 239, 210, 283, 233, 343,
	246, 0, 369, 0, 0, 0, 0, 275, 242, 308,
	247, 253, 296, 342, 281, 301, 208, 333, 309, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 251, 108, 292, 230, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 0, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 140, 318, 0, 349, 350, 351, 371,
	335, 0, 222, 0, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 250, 0, 0, 0, 96,
	0, 0, 310, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1377, 0, 0, 148, 0, 0, 0, 0, 0, 0,
	206, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 315, 331, 207, 306, 344, 212, 313, 202, 279,
	302, 0, 0, 199, 329, 312, 261, 244, 245, 198,
	0, 297, 223, 236, 219, 277, 0, 328, 356, 218,
	347, 0, 339, 201, 0, 338, 276, 325, 330, 262,
	256, 200, 327, 260, 255, 248, 227, 370, 240, 288,
	254, 289, 241, 266, 265, 267, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 249, 0,
	0, 0, 357, 0, 300, 282, 0, 0, 0, 298,
	252, 326, 290, 332, 316, 340, 294, 291, 192, 317,
	221, 263, 203, 205, 217, 224, 226, 228, 229, 272,
	273, 285, 305, 319, 320, 321, 220, 213, 299, 214,
	238, 215, 193, 307, 216, 195, 286, 324, 0, 234,
	295, 259, 196, 258, 287, 323, 322, 204, 348, 354,
	355, 359, 0, 360, 0, 0, 0, 368, 372, 373,
	374, 0, 0, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 0, 353, 232, 189, 190, 336, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	352, 0, 0, 0, 0, 303, 0, 0, 0, 0,
	0, 243, 284, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 334, 346,
	363, 366, 0, 0, 0, 194, 365, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 361, 268, 269, 270, 271, 235,
	0, 211, 364, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 231, 237, 0, 239, 210, 283, 233, 343, 246,
	0, 369, 0, 0, 0, 0, 275, 242, 308, 247,
	253, 296, 342, 281, 301, 208, 333, 309, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 251, 108, 292, 230, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 0, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 318, 0, 0, 349, 350, 351, 371, 335,
	0, 222, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	310, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 686, 687, 0, 0, 0, 0, 206, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 690,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 315,
	331, 207, 306, 344, 212, 313, 202, 279, 302, 0,
	0, 199, 329, 312, 261, 244, 245, 198, 0, 297,
	223, 236, 219, 277, 0, 328, 356, 218, 347, 661,
	339, 201, 660, 338, 276, 325, 330, 262, 256, 200,
	327, 260, 255, 248, 227, 370, 240, 288, 254, 289,
	241, 266, 265, 267, 0, 0, 0, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 249, 0, 0, 0,
	357, 0, 300, 282, 0, 0, 0, 298, 252, 326,
	290, 332, 316, 340, 294, 291, 192, 317, 221, 263,
	203, 205, 217, 224, 226, 228, 229, 272, 273, 285,
	305, 319, 320, 321, 220, 213, 299, 214, 238, 215,
	193, 307, 216, 195, 286, 324, 0, 234, 295, 259,
	196, 258, 287, 323, 322, 204, 348, 354, 355, 359,
	0, 360, 0, 0, 0, 368, 372, 373, 374, 0,
	0, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	0, 353, 232, 189, 190, 336, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 352, 0,
	0, 0, 0, 303, 0, 0, 0, 0, 0, 243,
	284, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 334, 346, 363, 366,
	0, 0, 0, 194, 365, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 361, 268, 269, 270, 271, 235, 0, 211,
	364, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 231,
	237, 0, 239, 210, 283, 233, 343, 246, 0, 369,
	0, 0, 0, 0, 688, 683, 684, 247, 253, 296,
	342, 281, 301, 208, 333, 309, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 251,
	0, 292, 230, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 0, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	318, 0, 0, 349, 350, 351, 371, 335, 0, 222,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 310, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 206, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 315, 331, 207,
	306, 344, 212, 313, 202, 279, 302, 0, 0, 199,
	329, 312, 261, 244, 245, 198, 0, 297, 223, 236,
	219, 277, 0, 328, 356, 218, 347, 0, 339, 201,
	0, 338, 276, 325, 330, 262, 256, 200, 327, 260,
	255, 248, 227, 370, 240, 288, 254, 289, 241, 266,
	265, 267, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 1886, 0, 0, 1885,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 249, 0, 0, 0, 357, 0,
	300, 282, 0, 0, 0, 298, 252, 326, 290, 332,
	316, 340, 294, 291, 192, 317, 221, 263, 203, 205,
	217, 224, 226, 228, 229, 272, 273, 285, 305, 319,
	320, 321, 220, 213, 299, 214, 238, 215, 193, 307,
	216, 195, 286, 324, 0, 234, 295, 259, 196, 258,
	287, 323, 322, 204, 348, 354, 355, 359, 0, 360,
	0, 0, 0, 368, 372, 373, 374, 0, 0, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 0, 353,
	232, 189, 190, 336, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 352, 0, 0, 0,
	0, 303, 0, 0, 0, 0, 0, 243, 284, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 334, 346, 363, 366, 0, 0,
	0, 194, 365, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	361, 268, 269, 270, 271, 235, 0, 211, 364, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 231, 237, 0,
	239, 210, 283, 233, 343, 246, 0, 369, 0, 0,
	0, 0, 275, 242, 308, 247, 253, 296, 342, 281,
	301, 208, 333, 309, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 251, 0, 292,
	230, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 0, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 318, 0,
	0, 349, 350, 351, 371, 335, 0, 222, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 1053, 0, 250,
	0, 0, 0, 0, 0, 0, 310, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 0, 0,
	1051, 0, 0, 0, 206, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1049,
	0, 0, 0, 0, 197, 315, 331, 207, 306, 344,
	212, 313, 202, 279, 302, 0, 0, 199, 329, 312,
	261, 244, 245, 198, 0, 297, 223, 236, 219, 277,
	0, 328, 356, 218, 347, 0, 339, 201, 0, 338,
	276, 325, 330, 262, 256, 200, 327, 260, 255, 248,
	227, 370, 240, 288, 254, 289, 241, 266, 265, 267,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 249, 0, 0, 0, 357, 0, 300, 282,
	0, 0, 0, 298, 252, 326, 290, 332, 316, 340,
	294, 291, 192, 317, 221, 263, 203, 205, 217, 224,
	226, 228, 229, 272, 273, 285, 305, 319, 320, 321,
	220, 213, 299, 214, 238, 215, 193, 307, 216, 195,
	286, 324, 0, 234, 295, 259, 196, 258, 287, 323,
	322, 204, 348, 354, 355, 359, 0, 360, 0, 0,
	0, 368, 372, 373, 374, 0, 0, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 0, 353, 232, 189,
	190, 336, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 352, 0, 0, 0, 0, 303,
	0, 0, 0, 0, 0, 243, 284, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 334, 346, 363, 366, 0, 0, 0, 194,
	365, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 361, 268,
	269, 270, 271, 235, 0, 211, 364, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 231, 237, 0, 239, 210,
	283, 233, 343, 246, 0, 369, 0, 0, 0, 0,
	275, 242, 308, 247, 253, 296, 342, 281, 301, 208,
	333, 309, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 251, 0, 292, 230, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 0, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 318, 0, 0, 349,
	350, 351, 371, 335, 0, 222, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 1047, 0, 250, 0, 0,
	0, 0, 0, 0, 310, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 1051, 0,
	0, 0, 206, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1049, 0, 0,
	0, 0, 197, 315, 331, 207, 306, 344, 212, 313,
	202, 279, 302, 0, 0, 199, 329, 312, 261, 244,
	245, 198, 0, 297, 223, 236, 219, 277, 0, 328,
	356, 218, 347, 0, 339, 201, 0, 338, 276, 325,
	330, 262, 256, 200, 327, 260, 255, 248, 227, 370,
	240, 288, 254, 289, 241, 266, 265, 267, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	249, 0, 0, 0, 357, 0, 300, 282, 0, 0,
	0, 298, 252, 326, 290, 332, 316, 340, 294, 291,
	192, 317, 221, 263, 203, 205, 217, 224, 226, 228,
	229, 272, 273, 285, 305, 319, 320, 321, 220, 213,
	299, 214, 238, 215, 193, 307, 216, 195, 286, 324,
	0, 234, 295, 259, 196, 258, 287, 323, 322, 204,
	348, 354, 355, 359, 0, 360, 0, 0, 0, 368,
	372, 373, 374, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 353, 232, 189, 190, 336,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 352, 0, 0, 0, 0, 303, 0, 0,
	0, 0, 0, 243, 284, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	334, 346, 363, 366, 0, 0, 0, 194, 365, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 361, 268, 269, 270,
	271, 235, 0, 211, 364, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 231, 237, 0, 239, 210, 283, 233,
	343, 246, 0, 369, 0, 0, 0, 0, 275, 242,
	308, 247, 253, 296, 342, 281, 301, 208, 333, 309,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 251, 0, 292, 230, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 0,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 318, 0, 0, 349, 350, 351,
	371, 335, 0, 222, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 310, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2595, 0, 148, 528, 0, 0, 0, 0, 0,
	206, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 315, 331, 207, 306, 344, 212, 313, 202, 279,
	302, 0, 0, 199, 329, 312, 261, 244, 245, 198,
	0, 297, 223, 236, 219, 277, 0, 328, 356, 218,
	347, 0, 339, 201, 0, 338, 276, 325, 330, 262,
	256, 200, 327, 260, 255, 248, 227, 370, 240, 288,
	254, 289, 241, 266, 265, 267, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 249, 0,
	0, 0, 357, 0, 300, 282, 0, 0, 0, 298,
	252, 326, 290, 332, 316, 340, 294, 291, 192, 317,
	221, 263, 203, 205, 217, 224, 226, 228, 229, 272,
	273, 285, 305, 319, 320, 321, 220, 213, 299, 214,
	238, 215, 193, 307, 216, 195, 286, 324, 0, 234,
	295, 259, 196, 258, 287, 323, 322, 204, 348, 354,
	355, 359, 0, 360, 0, 0, 0, 368, 372, 373,
	374, 0, 0, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 0, 353, 232, 189, 190, 336, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	352, 0, 0, 0, 0, 303, 0, 0, 0, 0,
	0, 243, 284, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 334, 346,
	363, 366, 0, 0, 0, 194, 365, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 361, 268, 269, 270, 271, 235,
	0, 211, 364, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 231, 237, 0, 239, 210, 283, 233, 343, 246,
	0, 369, 0, 0, 0, 0, 275, 242, 308, 247,
	253, 296, 342, 281, 301, 208, 333, 309, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 251, 0, 292, 230, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 0, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 318, 0, 0, 349, 350, 351, 371, 335,
	0, 222, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	310, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 0, 0, 1051, 0, 0, 0, 206, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1049, 0, 0, 0, 0, 197, 315,
	331, 207, 306, 344, 212, 313, 202, 279, 302, 0,
	0, 199, 329, 312, 261, 244, 245, 198, 0, 297,
	223, 236, 219, 277, 0, 328, 356, 218, 347, 0,
	339, 201, 0, 338, 276, 325, 330, 262, 256, 200,
	327, 260, 255, 248, 227, 370, 240, 288, 254, 289,
	241, 266, 265, 267, 0, 0, 0, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 249, 0, 0, 0,
	357, 0, 300, 282, 0, 0, 0, 298, 252, 326,
	290, 332, 316, 340, 294, 291, 192, 317, 221, 263,
	203, 205, 217, 224, 226, 228, 229, 272, 273, 285,
	305, 319, 320, 321, 220, 213, 299, 214, 238, 215,
	193, 307, 216, 195, 286, 324, 0, 234, 295, 259,
	196, 258, 287, 323, 322, 204, 348, 354, 355, 359,
	0, 360, 0, 0, 0, 368, 372, 373, 374, 0,
	0, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	0, 353, 232, 189, 190, 336, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 352, 0,
	0, 0, 0, 303, 0, 0, 0, 0, 0, 243,
	284, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 334, 346, 363, 366,
	0, 0, 0, 194, 365, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 361, 268, 269, 270, 271, 235, 0, 211,
	364, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 231,
	237, 0, 239, 210, 283, 233, 343, 246, 0, 369,
	0, 0, 0, 0, 275, 242, 308, 247, 253, 296,
	342, 281, 301, 208, 333, 309, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 251,
	0, 292, 230, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 0, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	318, 0, 0, 349, 350, 351, 371, 335, 0, 222,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 310, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 1051, 0, 0, 0, 206, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2237, 0, 0, 0, 0, 197, 315, 331, 207,
	306, 344, 212, 313, 202, 279, 302, 0, 0, 199,
	329, 312, 261, 244, 245, 198, 0, 297, 223, 236,
	219, 277, 0, 328, 356, 218, 347, 0, 339, 201,
	0, 338, 276, 325, 330, 262, 256, 200, 327, 260,
	255, 248, 227, 370, 240, 288, 254, 289, 241, 266,
	265, 267, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 249, 0, 0, 0, 357, 0,
	300, 282, 0, 0, 0, 298, 252, 326, 290, 332,
	316, 340, 294, 291, 192, 317, 221, 263, 203, 205,
	217, 224, 226, 228, 229, 272, 273, 285, 305, 319,
	320, 321, 220, 213, 299, 214, 238, 215, 193, 307,
	216, 195, 286, 324, 0, 234, 295, 259, 196, 258,
	287, 323, 322, 204, 348, 354, 355, 359, 0, 360,
	0, 0, 0, 368, 372, 373, 374, 0, 0, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 0, 353,
	232, 189, 190, 336, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 352, 0, 0, 0,
	0, 303, 0, 0, 0, 0, 0, 243, 284, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 334, 346, 363, 366, 0, 0,
	0, 194, 365, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	361, 268, 269, 270, 271, 235, 0, 211, 364, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 231, 237, 0,
	239, 210, 283, 233, 343, 246, 0, 369, 0, 0,
	0, 0, 275, 242, 308, 247, 253, 296, 342, 281,
	301, 208, 333, 309, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 251, 0, 292,
	230, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 0, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 318, 0,
	0, 349, 350, 351, 371, 335, 0, 222, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1672, 0, 0, 0, 0, 225, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 310, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 0, 0,
	1674, 0, 0, 0, 206, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 315, 331, 207, 306, 344,
	212, 313, 202, 279, 302, 0, 0, 199, 329, 312,
	261, 244, 245, 198, 0, 297, 223, 236, 219, 277,
	0, 328, 356, 218, 347, 0, 339, 201, 0, 338,
	276, 325, 330, 262, 256, 200, 327, 260, 255, 248,
	227, 370, 240, 288, 254, 289, 241, 266, 265, 267,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 249, 0, 0, 0, 357, 0, 300, 282,
	0, 0, 0, 298, 252, 326, 290, 332, 316, 340,
	294, 291, 192, 317, 221, 263, 203, 205, 217, 224,
	226, 228, 229, 272, 273, 285, 305, 319, 320, 321,
	220, 213, 299, 214, 238, 215, 193, 307, 216, 195,
	286, 324, 0, 234, 295, 259, 196, 258, 287, 323,
	322, 204, 348, 354, 355, 359, 0, 360, 0, 0,
	0, 368, 372, 373, 374, 0, 0, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 0, 353, 232, 189,
	190, 336, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 352, 0, 0, 0, 0, 303,
	0, 0, 0, 0, 0, 243, 284, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 334, 346, 363, 366, 0, 0, 0, 194,
	365, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 361, 268,
	269, 270, 271, 235, 0, 211, 364, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 231, 237, 0, 239, 210,
	283, 233, 343, 246, 0, 369, 0, 0, 0, 0,
	275, 242, 308, 247, 253, 296, 342, 281, 301, 208,
	333, 309, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 251, 0, 292, 230, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 0, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 318, 0, 0, 349,
	350, 351, 371, 335, 0, 222, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 1691, 0, 250, 0, 0,
	0, 0, 0, 0, 310, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 1051, 0,
	0, 0, 206, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 315, 331, 207, 306, 344, 212, 313,
	202, 279, 302, 0, 0, 199, 329, 312, 261, 244,
	245, 198, 0, 297, 223, 236, 219, 277, 0, 328,
	356, 218, 347, 0, 339, 201, 0, 338, 276, 325,
	330, 262, 256, 200, 327, 260, 255, 248, 227, 370,
	240, 288, 254, 289, 241, 266, 265, 267, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	249, 0, 0, 0, 357, 0, 300, 282, 0, 0,
	0, 298, 252, 326, 290, 332, 316, 340, 294, 291,
	192, 317, 221, 263, 203, 205, 217, 224, 226, 228,
	229, 272, 273, 285, 305, 319, 320, 321, 220, 213,
	299, 214, 238, 215, 193, 307, 216, 195, 286, 324,
	0, 234, 295, 259, 196, 258, 287, 323, 322, 204,
	348, 354, 355, 359, 0, 360, 0, 0, 0, 368,
	372, 373, 374, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 353, 232, 189, 190, 336,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 352, 0, 0, 0, 0, 303, 0, 0,
	0, 0, 0, 243, 284, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	334, 346, 363, 366, 0, 0, 0, 194, 365, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 361, 268, 269, 270,
	271, 235, 0, 211, 364, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 231, 237, 0, 239, 210, 283, 233,
	343, 246, 0, 369, 0, 0, 0, 0, 275, 242,
	308, 247, 253, 296, 342, 281, 301, 208, 333, 309,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 251, 0, 292, 230, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 0,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 318, 0, 0, 349, 350, 351,
	371, 335, 0, 222, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 310, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2660, 0, 148, 0, 0, 0, 0, 0, 0,
	206, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 315, 331, 207, 306, 344, 212, 313, 202, 279,
	302, 0, 0, 199, 329, 312, 261, 244, 245, 198,
	0, 297, 223, 236, 219, 277, 0, 328, 356, 218,
	347, 0, 339, 201, 0, 338, 276, 325, 330, 262,
	256, 200, 327, 260, 255, 248, 227, 370, 240, 288,
	254, 289, 241, 266, 265, 267, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 249, 0,
	0, 0, 357, 0, 300, 282, 0, 0, 0, 298,
	252, 326, 290, 332, 316, 340, 294, 291, 192, 317,
	221, 263, 203, 205, 217, 224, 226, 228, 229, 272,
	273, 285, 305, 319, 320, 321, 220, 213, 299, 214,
	238, 215, 193, 307, 216, 195, 286, 324, 0, 234,
	295, 259, 196, 258, 287, 323, 322, 204, 348, 354,
	355, 359, 0, 360, 0, 0, 0, 368, 372, 373,
	374, 0, 0, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 0, 353, 232, 189, 190, 336, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	352, 0, 0, 0, 0, 303, 0, 0, 0, 0,
	0, 243, 284, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 334, 346,
	363, 366, 0, 0, 0, 194, 365, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 361, 268, 269, 270, 271, 235,
	0, 211, 364, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 231, 237, 0, 239, 210, 283, 233, 343, 246,
	0, 369, 0, 0, 0, 0, 275, 242, 308, 247,
	253, 296, 342, 281, 301, 208, 333, 309, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 251, 0, 292, 230, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 0, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 318, 0, 0, 349, 350, 351, 371, 335,
	0, 222, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	310, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 528, 0, 0, 0, 0, 0, 206, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 315,
	331, 207, 306, 344, 212, 313, 202, 279, 302, 0,
	0, 199, 329, 312, 261, 244, 245, 198, 0, 297,
	223, 236, 219, 277, 0, 328, 356, 218, 347, 0,
	339, 201, 0, 338, 276, 325, 330, 262, 256, 200,
	327, 260, 255, 248, 227, 370, 240, 288, 254, 289,
	241, 266, 265, 267, 0, 0, 0, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 249, 0, 0, 0,
	357, 0, 300, 282, 0, 0, 0, 298, 252, 326,
	290, 332, 316, 340, 294, 291, 192, 317, 221, 263,
	203, 205, 217, 224, 226, 228, 229, 272, 273, 285,
	305, 319, 320, 321, 220, 213, 299, 214, 238, 215,
	193, 307, 216, 195, 286, 324, 0, 234, 295, 259,
	196, 258, 287, 323, 322, 204, 348, 354, 355, 359,
	0, 360, 0, 0, 0, 368, 372, 373, 374, 0,
	0, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	0, 353, 232, 189, 190, 336, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 352, 0,
	0, 0, 0, 303, 0, 0, 0, 0, 0, 243,
	284, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 334, 346, 363, 366,
	0, 0, 0, 194, 365, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 361, 268, 269, 270, 271, 235, 0, 211,
	364, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 231,
	237, 0, 239, 210, 283, 233, 343, 246, 0, 369,
	0, 0, 0, 0, 275, 242, 308, 247, 253, 296,
	342, 281, 301, 208, 333, 309, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 251,
	0, 292, 230, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 0, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	318, 0, 0, 349, 350, 351, 371, 335, 0, 222,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 310, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2564, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 206, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 315, 331, 207,
	306, 344, 212, 313, 202, 279, 302, 0, 0, 199,
	329, 312, 261, 244, 245, 198, 0, 297, 223, 236,
	219, 277, 0, 328, 356, 218, 347, 0, 339, 201,
	0, 338, 276, 325, 330, 262, 256, 200, 327, 260,
	255, 248, 227, 370, 240, 288, 254, 289, 241, 266,
	265, 267, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 249, 0, 0, 0, 357, 0,
	300, 282, 0, 0, 0, 298, 252, 326, 290, 332,
	316, 340, 294, 291, 192, 317, 221, 263, 203, 205,
	217, 224, 226, 228, 229, 272, 273, 285, 305, 319,
	320, 321, 220, 213, 299, 214, 238, 215, 193, 307,
	216, 195, 286, 324, 0, 234, 295, 259, 196, 258,
	287, 323, 322, 204, 348, 354, 355, 359, 0, 360,
	0, 0, 0, 368, 372, 373, 374, 0, 0, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 0, 353,
	232, 189, 190, 336, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 352, 0, 0, 0,
	0, 303, 0, 0, 0, 0, 0, 243, 284, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 334, 346, 363, 366, 0, 0,
	0, 194, 365, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	361, 268, 269, 270, 271, 235, 0, 211, 364, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 231, 237, 0,
	239, 210, 283, 233, 343, 246, 0, 369, 0, 0,
	0, 0, 275, 242, 308, 247, 253, 296, 342, 281,
	301, 208, 333, 309, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 251, 0, 292,
	230, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 0, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 318, 0,
	0, 349, 350, 351, 371, 335, 0, 222, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 310, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2233, 0, 0, 148, 0, 0,
	0, 0, 0, 0, 206, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 315, 331, 207, 306, 344,
	212, 313, 202, 279, 302, 0, 0, 199, 329, 312,
	261, 244, 245, 198, 0, 297, 223, 236, 219, 277,
	0, 328, 356, 218, 347, 0, 339, 201, 0, 338,
	276, 325, 330, 262, 256, 200, 327, 260, 255, 248,
	227, 370, 240, 288, 254, 289, 241, 266, 265, 267,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 249, 0, 0, 0, 357, 0, 300, 282,
	0, 0, 0, 298, 252, 326, 290, 332, 316, 340,
	294, 291, 192, 317, 221, 263, 203, 205, 217, 224,
	226, 228, 229, 272, 273, 285, 305, 319, 320, 321,
	220, 213, 299, 214, 238, 215, 193, 307, 216, 195,
	286, 324, 0, 234, 295, 259, 196, 258, 287, 323,
	322, 204, 348, 354, 355, 359, 0, 360, 0, 0,
	0, 368, 372, 373, 374, 0, 0, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 0, 353, 232, 189,
	190, 336, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 352, 0, 0, 0, 0, 303,
	0, 0, 0, 0, 0, 243, 284, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 334, 346, 363, 366, 0, 0, 0, 194,
	365, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 361, 268,
	269, 270, 271, 235, 0, 211, 364, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 231, 237, 0, 239, 210,
	283, 233, 343, 246, 0, 369, 0, 0, 0, 0,
	275, 242, 308, 247, 253, 296, 342, 281, 301, 208,
	333, 309, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 251, 0, 292, 230, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 0, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 318, 0, 0, 349,
	350, 351, 371, 335, 0, 222, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 310, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 0, 0,
	0, 0, 206, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 315, 331, 207, 306, 344, 212, 313,
	202, 279, 302, 0, 0, 199, 329, 312, 261, 244,
	245, 198, 0, 297, 223, 236, 219, 277, 0, 328,
	356, 218, 347, 0, 339, 201, 0, 338, 276, 325,
	330, 262, 256, 200, 327, 260, 255, 248, 227, 370,
	240, 288, 254, 289, 241, 266, 265, 267, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 2487, 0, 0, 314, 0, 0,
	249, 0, 0, 0, 357, 0, 300, 282, 0, 0,
	0, 298, 252, 326, 290, 332, 316, 340, 294, 291,
	192, 317, 221, 263, 203, 205, 217, 224, 226, 228,
	229, 272, 273, 285, 305, 319, 320, 321, 220, 213,
	299, 214, 238, 215, 193, 307, 216, 195, 286, 324,
	0, 234, 295, 259, 196, 258, 287, 323, 322, 204,
	348, 354, 355, 359, 0, 360, 0, 0, 0, 368,
	372, 373, 374, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 353, 232, 189, 190, 336,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 352, 0, 0, 0, 0, 303, 0, 0,
	0, 0, 0, 243, 284, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	334, 346, 363, 366, 0, 0, 0, 194, 365, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 361, 268, 269, 270,
	271, 235, 0, 211, 364, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 231, 237, 0, 239, 210, 283, 233,
	343, 246, 0, 369, 0, 0, 0, 0, 275, 242,
	308, 247, 253, 296, 342, 281, 301, 208, 333, 309,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 251, 0, 292, 230, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 0,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 318, 0, 0, 349, 350, 351,
	371, 335, 0, 222, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 310, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 0, 0, 1674, 0, 0, 0,
	206, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 315, 331, 207, 306, 344, 212, 313, 202, 279,
	302, 0, 0, 199, 329, 312, 261, 244, 245, 198,
	0, 297, 223, 236, 219, 277, 0, 328, 356, 218,
	347, 0, 339, 201, 0, 338, 276, 325, 330, 262,
	256, 200, 327, 260, 255, 248, 227, 370, 240, 288,
	254, 289, 241, 266, 265, 267, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 249, 0,
	0, 0, 357, 0, 300, 282, 0, 0, 0, 298,
	252, 326, 290, 332, 316, 340, 294, 291, 192, 317,
	221, 263, 203, 205, 217, 224, 226, 228, 229, 272,
	273, 285, 305, 319, 320, 321, 220, 213, 299, 214,
	238, 215, 193, 307, 216, 195, 286, 324, 0, 234,
	295, 259, 196, 258, 287, 323, 322, 204, 348, 354,
	355, 359, 0, 360, 0, 0, 0, 368, 372, 373,
	374, 0, 0, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 0, 353, 232, 189, 190, 336, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	352, 0, 0, 0, 0, 303, 0, 0, 0, 0,
	0, 243, 284, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 334, 346,
	363, 366, 0, 0, 0, 194, 365, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 361, 268, 269, 270, 271, 235,
	0, 211, 364, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 231, 237, 0, 239, 210, 283, 233, 343, 246,
	0, 369, 0, 0, 0, 0, 275, 242, 308, 247,
	253, 296, 342, 281, 301, 208, 333, 309, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 251, 0, 292, 230, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 0, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 318, 0, 0, 349, 350, 351, 371, 335,
	0, 222, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	310, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 0, 0, 0, 206, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 315,
	331, 207, 306, 344, 212, 313, 202, 279, 302, 0,
	0, 199, 329, 312, 261, 244, 245, 198, 0, 297,
	223, 236, 219, 277, 0, 328, 356, 218, 347, 0,
	339, 201, 0, 338, 276, 325, 330, 262, 256, 200,
	327, 260, 255, 248, 227, 370, 240, 288, 254, 289,
	241, 266, 265, 267, 0, 0, 0, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	2307, 0, 0, 314, 0, 0, 249, 0, 0, 0,
	357, 0, 300, 282, 0, 0, 0, 298, 252, 326,
	290, 332, 316, 340, 294, 291, 192, 317, 221, 263,
	203, 205, 217, 224, 226, 228, 229, 272, 273, 285,
	305, 319, 320, 321, 220, 213, 299, 214, 238, 215,
	193, 307, 216, 195, 286, 324, 0, 234, 295, 259,
	196, 258, 287, 323, 322, 204, 348, 354, 355, 359,
	0, 360, 0, 0, 0, 368, 372, 373, 374, 0,
	0, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	0, 353, 232, 189, 190, 336, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 352, 0,
	0, 0, 0, 303, 0, 0, 0, 0, 0, 243,
	284, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 334, 346, 363, 366,
	0, 0, 0, 194, 365, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 361, 268, 269, 270, 271, 235, 0, 211,
	364, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 231,
	237, 0, 239, 210, 283, 233, 343, 246, 0, 369,
	0, 0, 0, 0, 275, 242, 308, 247, 253, 296,
	342, 281, 301, 208, 333, 309, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 251,
	0, 292, 230, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 0, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	318, 0, 0, 349, 350, 351, 371, 335, 0, 222,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 310, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 206, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 315, 331, 207,
	306, 344, 212, 313, 202, 279, 302, 0, 0, 199,
	329, 312, 261, 244, 245, 198, 0, 297, 223, 236,
	219, 277, 0, 328, 356, 218, 347, 0, 339, 201,
	0, 338, 276, 325, 330, 262, 256, 200, 327, 260,
	255, 248, 227, 370, 240, 288, 254, 289, 241, 266,
	265, 267, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 249, 0, 0, 0, 357, 0,
	300, 282, 0, 0, 0, 298, 252, 326, 290, 332,
	316, 340, 294, 291, 192, 317, 221, 263, 203, 205,
	217, 224, 226, 228, 229, 272, 273, 285, 305, 319,
	320, 321, 220, 213, 299, 214, 238, 215, 193, 307,
	216, 195, 286, 324, 0, 234, 295, 259, 196, 258,
	287, 323, 322, 204, 348, 354, 355, 359, 0, 360,
	0, 0, 0, 368, 372, 373, 374, 0, 0, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 0, 353,
	232, 189, 190, 336, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 352, 0, 0, 0,
	0, 303, 0, 0, 0, 0, 0, 243, 284, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 334, 346, 363, 366, 0, 0,
	0, 194, 365, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	361, 268, 269, 270, 271, 235, 0, 211, 364, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 231, 237, 0,
	239, 210, 283, 233, 343, 246, 0, 369, 0, 0,
	0, 0, 275, 242, 308, 247, 253, 296, 342, 281,
	301, 208, 333, 309, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 251, 0, 292,
	230, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 0, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 318, 0,
	0, 349, 350, 351, 371, 335, 0, 222, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 310, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1377, 0, 0, 148, 0, 0,
	0, 0, 0, 0, 206, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 315, 331, 207, 306, 344,
	212, 313, 202, 279, 302, 0, 0, 199, 329, 312,
	261, 244, 245, 198, 0, 297, 223, 236, 219, 277,
	0, 328, 356, 218, 347, 0, 339, 201, 0, 338,
	276, 325, 330, 262, 256, 200, 327, 260, 255, 248,
	227, 370, 240, 288, 254, 289, 241, 266, 265, 267,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 249, 0, 0, 0, 357, 0, 300, 282,
	0, 0, 0, 298, 252, 326, 290, 332, 316, 340,
	294, 291, 192, 317, 221, 263, 203, 205, 217, 224,
	226, 228, 229, 272, 273, 285, 305, 319, 320, 321,
	220, 213, 299, 214, 238, 215, 193, 307, 216, 195,
	286, 324, 0, 234, 295, 259, 196, 258, 287, 323,
	322, 204, 348, 354, 355, 359, 0, 360, 0, 0,
	0, 368, 372, 373, 374, 0, 0, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 0, 353, 232, 189,
	190, 336, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 352, 0, 0, 0, 0, 303,
	0, 0, 0, 0, 0, 243, 284, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 334, 346, 363, 366, 0, 0, 0, 194,
	365, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 361, 268,
	269, 270, 271, 235, 0, 211, 364, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 231, 237, 0, 239, 210,
	283, 233, 343, 246, 0, 369, 0, 0, 0, 0,
	275, 242, 308, 247, 253, 296, 342, 281, 301, 208,
	333, 309, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 251, 0, 292, 230, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 0, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 318, 0, 0, 349,
	350, 351, 371, 335, 0, 222, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 310, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 0, 0,
	0, 0, 206, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 315, 331, 207, 306, 344, 212, 313,
	202, 279, 302, 0, 0, 199, 329, 312, 261, 244,
	245, 198, 0, 297, 223, 236, 219, 277, 0, 328,
	356, 218, 347, 0, 339, 201, 0, 338, 276, 325,
	330, 262, 256, 200, 327, 260, 255, 248, 227, 370,
	240, 288, 254, 289, 241, 266, 265, 267, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	249, 0, 0, 0, 357, 0, 300, 282, 0, 0,
	0, 298, 252, 326, 290, 332, 316, 340, 294, 291,
	192, 317, 221, 263, 203, 205, 217, 224, 226, 228,
	229, 272, 273, 285, 305, 319, 320, 321, 220, 213,
	299, 214, 238, 215, 193, 307, 216, 195, 286, 324,
	0, 234, 295, 259, 196, 258, 287, 323, 322, 204,
	348, 354, 355, 359, 0, 360, 0, 0, 0, 368,
	372, 373, 374, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 353, 232, 189, 190, 336,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 352, 0, 0, 0, 0, 303, 0, 0,
	0, 0, 0, 243, 284, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	334, 346, 363, 366, 0, 0, 0, 194, 365, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 361, 268, 269, 270,
	271, 235, 0, 211, 364, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 231, 237, 0, 239, 210, 283, 233,
	343, 246, 0, 369, 0, 0, 0, 0, 275, 242,
	308, 247, 253, 296, 342, 281, 301, 208, 333, 309,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 251, 0, 292, 230, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 0,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 318, 0, 0, 349, 350, 351,
	371, 335, 0, 222, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 310, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 0, 0, 2022, 0, 0, 0,
	206, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 315, 331, 207, 306, 344, 212, 313, 202, 279,
	302, 0, 0, 199, 329, 312, 261, 244, 245, 198,
	0, 297, 223, 236, 219, 277, 0, 328, 356, 218,
	347, 0, 339, 201, 0, 338, 276, 325, 330, 262,
	256, 200, 327, 260, 255, 248, 227, 370, 240, 288,
	254, 289, 241, 266, 265, 267, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 249, 0,
	0, 0, 357, 0, 300, 282, 0, 0, 0, 298,
	252, 326, 290, 332, 316, 340, 294, 291, 192, 317,
	221, 263, 203, 205, 217, 224, 226, 228, 229, 272,
	273, 285, 305, 319, 320, 321, 220, 213, 299, 214,
	238, 215, 193, 307, 216, 195, 286, 324, 0, 234,
	295, 259, 196, 258, 287, 323, 322, 204, 348, 354,
	355, 359, 0, 360, 0, 0, 0, 368, 372, 373,
	374, 0, 0, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 0, 353, 232, 189, 190, 336, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	352, 0, 0, 0, 0, 303, 0, 0, 0, 0,
	0, 243, 284, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 334, 346,
	363, 366, 0, 0, 0, 194, 365, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 361, 268, 269, 270, 271, 235,
	0, 211, 364, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 231, 237, 0, 239, 210, 283, 233, 343, 246,
	0, 369, 0, 0, 0, 0, 275, 242, 308, 247,
	253, 296, 342, 281, 301, 208, 333, 309, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 251, 0, 292, 230, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 0, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 318, 0, 0, 349, 350, 351, 371, 335,
	0, 222, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	310, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 0, 0, 0, 206, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 315,
	331, 207, 306, 344, 212, 313, 202, 279, 302, 0,
	0, 199, 329, 312, 261, 244, 245, 198, 0, 297,
	223, 236, 219, 277, 0, 328, 356, 218, 347, 0,
	339, 201, 0, 338, 276, 325, 330, 262, 256, 200,
	327, 260, 255, 248, 227, 370, 240, 288, 254, 289,
	241, 266, 265, 267, 0, 0, 0, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 249, 0, 0, 0,
	357, 0, 300, 282, 0, 0, 0, 298, 252, 326,
	290, 332, 316, 340, 294, 291, 192, 317, 221, 263,
	203, 205, 217, 224, 226, 228, 229, 272, 273, 285,
	305, 319, 320, 321, 220, 213, 299, 214, 238, 215,
	193, 307, 216, 195, 286, 324, 0, 234, 295, 259,
	196, 258, 287, 323, 322, 204, 348, 354, 355, 359,
	0, 360, 0, 0, 0, 368, 372, 373, 374, 0,
	0, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	0, 353, 232, 189, 190, 336, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 352, 0,
	0, 0, 0, 303, 0, 0, 0, 0, 0, 243,
	284, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 334, 346, 363, 366,
	0, 0, 0, 194, 365, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 361, 268, 269, 270, 271, 235, 0, 211,
	364, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 231,
	237, 0, 239, 210, 283, 233, 343, 246, 0, 369,
	0, 0, 0, 0, 275, 242, 308, 247, 253, 296,
	342, 281, 301, 208, 333, 309, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 251,
	0, 292, 230, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 0, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	318, 0, 0, 349, 350, 351, 371, 335, 0, 222,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 310, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 1051, 0, 0, 0, 206, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 315, 331, 207,
	306, 344, 212, 313, 202, 279, 302, 0, 0, 199,
	329, 312, 261, 244, 245, 198, 0, 297, 223, 236,
	219, 277, 0, 328, 356, 218, 347, 0, 339, 201,
	0, 338, 276, 325, 330, 262, 256, 200, 327, 260,
	255, 248, 227, 370, 240, 288, 254, 289, 241, 266,
	265, 267, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 249, 0, 0, 0, 357, 0,
	300, 282, 0, 0, 0, 298, 252, 326, 290, 332,
	316, 340, 294, 291, 192, 317, 221, 263, 203, 205,
	217, 224, 226, 228, 229, 272, 273, 285, 305, 319,
	320, 321, 220, 213, 299, 214, 238, 215, 193, 307,
	216, 195, 286, 324, 0, 234, 295, 259, 196, 258,
	287, 323, 322, 204, 348, 354, 355, 359, 0, 360,
	0, 0, 0, 368, 372, 373, 374, 0, 0, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 0, 353,
	232, 189, 190, 336, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 352, 0, 0, 0,
	0, 303, 0, 0, 0, 0, 0, 243, 284, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 334, 346, 363, 366, 0, 0,
	0, 194, 365, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	361, 268, 269, 270, 271, 235, 0, 211, 364, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 231, 237, 0,
	239, 210, 283, 233, 343, 246, 0, 369, 0, 0,
	0, 0, 275, 242, 308, 247, 253, 296, 342, 281,
	301, 208, 333, 309, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 251, 0, 292,
	230, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 0, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 318, 0,
	0, 349, 350, 351, 371, 335, 0, 222, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 310, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 0, 0,
	0, 0, 0, 0, 206, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 315, 331, 207, 306, 344,
	212, 313, 202, 279, 302, 0, 0, 199, 329, 312,
	261, 244, 245, 198, 0, 297, 223, 236, 219, 277,
	0, 328, 356, 218, 347, 0, 339, 201, 0, 338,
	276, 325, 330, 262, 256, 200, 327, 260, 255, 248,
	227, 370, 240, 288, 254, 289, 241, 266, 265, 267,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 249, 0, 0, 0, 357, 0, 300, 282,
	0, 0, 0, 298, 252, 326, 290, 332, 316, 340,
	294, 291, 192, 317, 221, 263, 203, 205, 217, 224,
	226, 228, 229, 272, 273, 285, 305, 319, 320, 321,
	220, 213, 299, 214, 238, 215, 193, 307, 216, 195,
	286, 324, 0, 234, 295, 259, 196, 258, 287, 323,
	322, 204, 348, 354, 355, 359, 0, 360, 0, 0,
	0, 368, 372, 373, 374, 0, 0, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 0, 353, 232, 189,
	190, 336, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 352, 0, 0, 0, 0, 303,
	0, 0, 0, 0, 0, 243, 284, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 334, 346, 363, 366, 0, 0, 0, 194,
	365, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 361, 268,
	269, 270, 271, 235, 0, 211, 364, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 231, 237, 0, 239, 210,
	283, 233, 343, 246, 0, 369, 0, 0, 0, 0,
	275, 242, 308, 247, 253, 296, 342, 281, 301, 208,
	333, 309, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 251, 0, 292, 230, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 0, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 318, 0, 0, 349,
	350, 351, 371, 335, 0, 222, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 310, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 0, 0,
	0, 0, 206, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 315, 331, 207, 306, 344, 212, 313,
	202, 279, 302, 0, 0, 199, 329, 312, 261, 244,
	245, 198, 0, 297, 223, 236, 219, 277, 0, 328,
	356, 218, 347, 0, 339, 201, 0, 338, 276, 325,
	330, 262, 256, 200, 327, 260, 255, 248, 227, 370,
	240, 288, 254, 289, 241, 266, 265, 267, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	249, 0, 0, 0, 357, 0, 300, 282, 0, 0,
	0, 298, 252, 326, 290, 332, 316, 340, 294, 291,
	192, 317, 221, 263, 203, 205, 217, 224, 226, 228,
	229, 272, 273, 285, 305, 319, 320, 321, 220, 213,
	299, 214, 238, 215, 193, 307, 216, 195, 286, 324,
	0, 234, 295, 259, 196, 258, 287, 323, 322, 204,
	348, 354, 355, 359, 0, 360, 0, 0, 0, 368,
	372, 373, 374, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 353, 232, 189, 190, 336,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 352, 0, 0, 0, 0, 303, 0, 0,
	0, 0, 0, 243, 284, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	334, 346, 363, 366, 0, 0, 0, 194, 365, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 361, 268, 269, 270,
	271, 235, 0, 211, 364, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 231, 237, 0, 239, 210, 283, 233,
	343, 246, 0, 369, 0, 0, 0, 0, 275, 242,
	308, 247, 253, 296, 342, 281, 301, 208, 333, 309,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 251, 0, 292, 230, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 0,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 318, 0, 0, 349, 350, 351,
	371, 335, 0, 222, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 310, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 0, 0, 1703, 0, 0, 0,
	206, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 315, 331, 207, 306, 344, 212, 313, 202, 279,
	302, 0, 0, 199, 329, 312, 261, 244, 245, 198,
	0, 297, 223, 236, 219, 277, 0, 328, 356, 218,
	347, 0, 339, 201, 0, 338, 276, 325, 330, 262,
	256, 200, 327, 260, 255, 248, 227, 370, 240, 288,
	254, 289, 241, 266, 265, 267, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 249, 0,
	0, 0, 357, 0, 300, 282, 0, 0, 0, 298,
	252, 326, 290, 332, 316, 340, 294, 291, 192, 317,
	221, 263, 203, 205, 217, 224, 226, 228, 229, 272,
	273, 285, 305, 319, 320, 321, 220, 213, 299, 214,
	238, 215, 193, 307, 216, 195, 286, 324, 0, 234,
	295, 259, 196, 258, 287, 323, 322, 204, 348, 354,
	355, 359, 0, 360, 0, 0, 0, 368, 372, 373,
	374, 0, 0, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 0, 353, 232, 189, 190, 336, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	352, 0, 0, 0, 0, 303, 0, 0, 0, 0,
	0, 243, 284, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 334, 346,
	363, 366, 0, 0, 0, 194, 365, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 361, 268, 269, 270, 271, 235,
	0, 211, 364, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 231, 237, 0, 239, 210, 283, 233, 343, 246,
	0, 369, 0, 0, 0, 0, 275, 242, 308, 247,
	253, 296, 342, 281, 301, 208, 333, 309, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 251, 0, 292, 230, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 0, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 0, 0, 0, 349, 350, 351, 371, 335,
	318, 222, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 310, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 206, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 315, 331, 207,
	306, 344, 212, 313, 202, 279, 302, 0, 0, 199,
	329, 312, 261, 244, 245, 198, 0, 297, 223, 236,
	219, 277, 0, 328, 356, 218, 347, 0, 339, 201,
	0, 338, 276, 325, 330, 262, 256, 200, 327, 260,
	255, 248, 227, 370, 240, 288, 254, 289, 241, 266,
	265, 267, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 249, 0, 0, 0, 357, 0,
	300, 282, 0, 0, 0, 298, 252, 326, 290, 332,
	316, 340, 294, 291, 192, 317, 221, 263, 203, 205,
	217, 224, 226, 228, 229, 272, 273, 285, 305, 319,
	320, 321, 220, 213, 299, 214, 238, 215, 193, 307,
	216, 195, 286, 324, 0, 234, 295, 259, 196, 258,
	287, 323, 322, 204, 348, 354, 355, 359, 0, 360,
	0, 0, 0, 368, 372, 373, 374, 0, 0, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 0, 353,
	232, 189, 190, 336, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 352, 0, 0, 0,
	0, 303, 0, 0, 0, 0, 0, 243, 284, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 334, 346, 363, 366, 0, 0,
	0, 194, 365, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	361, 268, 269, 270, 271, 235, 0, 211, 364, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 231, 237, 0,
	239, 210, 283, 233, 343, 246, 0, 369, 0, 0,
	0, 0, 275, 242, 308, 247, 253, 296, 342, 281,
	301, 208, 333, 309, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 251, 0, 292,
	230, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 0, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 318, 0,
	0, 349, 350, 351, 371, 335, 0, 222, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 310, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 0, 0,
	1051, 0, 0, 0, 206, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 315, 331, 207, 306, 344,
	212, 313, 202, 279, 302, 0, 0, 199, 329, 312,
	261, 244, 245, 198, 0, 297, 223, 236, 219, 277,
	0, 328, 356, 218, 347, 0, 339, 201, 0, 338,
	276, 325, 330, 262, 256, 200, 327, 260, 255, 248,
	227, 370, 240, 288, 254, 289, 241, 266, 265, 267,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 249, 0, 0, 0, 357, 0, 300, 282,
	0, 0, 0, 298, 252, 326, 290, 332, 316, 340,
	1337, 291, 192, 317, 221, 263, 203, 205, 217, 224,
	226, 228, 229, 272, 273, 285, 305, 319, 320, 321,
	220, 213, 299, 214, 238, 215, 193, 307, 216, 195,
	286, 324, 0, 234, 295, 259, 196, 258, 287, 323,
	322, 204, 348, 354, 355, 359, 0, 360, 0, 0,
	0, 368, 372, 373, 374, 0, 0, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 0, 353, 232, 189,
	190, 336, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 352, 0, 0, 0, 0, 303,
	0, 0, 0, 0, 0, 243, 284, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 334, 346, 363, 366, 0, 0, 0, 194,
	365, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 361, 268,
	269, 270, 271, 235, 0, 211, 364, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 231, 237, 0, 239, 210,
	283, 233, 343, 246, 0, 369, 0, 0, 0, 0,
	275, 242, 308, 247, 253, 296, 342, 281, 301, 208,
	333, 309, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 251, 0, 292, 230, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 0, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 318, 0, 0, 349,
	350, 351, 371, 335, 0, 222, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 310, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 0, 0,
	0, 0, 206, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 315, 331, 207, 306, 344, 212, 313,
	202, 279, 302, 0, 0, 199, 329, 312, 261, 244,
	245, 198, 0, 297, 223, 236, 219, 277, 0, 328,
	356, 218, 347, 0, 339, 201, 0, 338, 276, 325,
	330, 262, 256, 200, 327, 260, 255, 248, 227, 370,
	240, 288, 254, 289, 241, 266, 265, 267, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	249, 0, 0, 0, 357, 0, 300, 282, 0, 0,
	0, 298, 252, 326, 290, 332, 316, 340, 294, 291,
	192, 317, 221, 263, 203, 205, 217, 224, 226, 228,
	229, 272, 273, 285, 305, 319, 320, 321, 220, 213,
	299, 214, 238, 215, 193, 307, 216, 195, 286, 324,
	0, 234, 295, 259, 196, 258, 287, 323, 322, 204,
	348, 354, 355, 359, 0, 360, 0, 0, 0, 368,
	372, 373, 374, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 353, 232, 189, 190, 336,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 352, 0, 0, 0, 0, 303, 0, 0,
	0, 0, 0, 243, 284, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	334, 346, 363, 366, 0, 0, 0, 194, 365, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 361, 268, 269, 270,
	271, 235, 0, 211, 364, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 231, 237, 0, 239, 210, 283, 233,
	343, 246, 0, 369, 0, 0, 0, 0, 275, 242,
	308, 247, 253, 296, 342, 281, 301, 208, 333, 309,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	0, 191, 0, 251, 0, 292, 230, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 0,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 318, 0, 0, 349, 350, 351,
	371, 335, 0, 222, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 310, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 0, 0, 0, 0, 0, 0,
	206, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 315, 331, 207, 306, 344, 212, 313, 202, 279,
	302, 0, 0, 199, 329, 312, 261, 244, 245, 198,
	0, 297, 223, 236, 219, 277, 0, 328, 356, 218,
	347, 0, 339, 201, 0, 338, 276, 325, 330, 262,
	256, 200, 327, 260, 255, 248, 227, 370, 240, 288,
	254, 289, 241, 266, 265, 267, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 249, 0,
	0, 0, 357, 0, 300, 282, 0, 0, 0, 298,
	252, 326, 290, 332, 316, 340, 403, 291, 192, 317,
	221, 263, 203, 205, 217, 224, 226, 228, 229, 272,
	273, 285, 305, 319, 320, 321, 220, 213, 299, 214,
	238, 215, 193, 307, 216, 195, 286, 324, 0, 234,
	295, 259, 196, 258, 287, 323, 322, 204, 348, 354,
	355, 359, 0, 360, 0, 0, 0, 368, 372, 373,
	374, 0, 0, 0, 0, 0, 362, 0, 0, 0,
	0, 0, 0, 353, 232, 189, 190, 336, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	352, 0, 0, 0, 0, 303, 0, 0, 0, 0,
	0, 243, 284, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 334, 346,
	363, 366, 0, 0, 0, 194, 365, 0, 0, 0,
	0, 0, 0, 404, 337, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 361, 268, 269, 270, 271, 235,
	0, 211, 364, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 231, 237, 0, 239, 210, 283, 233, 343, 246,
	0, 369, 0, 0, 0, 0, 275, 242, 308, 247,
	253, 296, 342, 281, 301, 208, 333, 309, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 251, 0, 292, 230, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 0, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 318, 0, 0, 349, 350, 351, 371, 335,
	0, 222, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	310, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 0, 0, 0, 206, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 315,
	331, 207, 306, 344, 212, 313, 202, 279, 302, 0,
	0, 199, 329, 312, 261, 244, 245, 198, 0, 297,
	223, 236, 219, 277, 0, 328, 356, 218, 347, 0,
	339, 201, 0, 338, 276, 325, 330, 262, 256, 200,
	327, 260, 255, 248, 227, 370, 240, 288, 254, 289,
	241, 266, 265, 267, 0, 0, 0, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 341, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 249, 0, 0, 0,
	357, 0, 300, 282, 0, 0, 0, 298, 252, 326,
	290, 332, 316, 340, 294, 291, 192, 317, 221, 263,
	203, 205, 217, 224, 226, 228, 229, 272, 273, 285,
	305, 319, 320, 321, 220, 213, 299, 214, 238, 215,
	193, 307, 216, 195, 286, 324, 0, 234, 295, 259,
	196, 258, 287, 323, 322, 204, 348, 354, 355, 359,
	0, 360, 0, 0, 0, 368, 372, 373, 374, 0,
	0, 0, 0, 0, 362, 0, 0, 0, 0, 0,
	0, 353, 232, 189, 190, 336, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 352, 0,
	0, 0, 0, 303, 0, 0, 0, 0, 0, 243,
	284, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 334, 346, 363, 366,
	0, 0, 0, 194, 365, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 361, 268, 269, 270, 271, 235, 0, 211,
	364, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 231,
	237, 0, 239, 210, 283, 233, 343, 246, 0, 369,
	0, 0, 0, 0, 275, 242, 308, 247, 253, 296,
	342, 281, 301, 208, 333, 309, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 251,
	0, 292, 230, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 0, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	318, 0, 0, 349, 350, 351, 371, 335, 0, 222,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 225, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 310, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 206, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 315, 331, 207,
	306, 344, 212, 313, 202, 279, 302, 0, 0, 199,
	329, 312, 261, 244, 245, 198, 0, 297, 223, 236,
	219, 277, 0, 328, 356, 218, 347, 0, 339, 201,
	0, 338, 276, 325, 330, 262, 256, 200, 327, 260,
	255, 248, 227, 370, 240, 288, 254, 289, 241, 266,
	265, 267, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 249, 0, 0, 0, 357, 0,
	300, 282, 0, 0, 0, 298, 252, 326, 290, 332,
	316, 340, 294, 291, 192, 317, 221, 263, 203, 205,
	217, 224, 226, 228, 229, 272, 273, 285, 305, 319,
	320, 321, 220, 213, 299, 214, 238, 215, 193, 307,
	216, 195, 286, 324, 0, 234, 295, 259, 196, 258,
	287, 323, 322, 204, 348, 354, 355, 359, 0, 360,
	0, 0, 0, 368, 372, 373, 374, 0, 0, 0,
	0, 0, 362, 0, 0, 0, 0, 0, 0, 353,
	232, 189, 190, 336, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 352, 0, 0, 0,
	0, 303, 0, 0, 0, 0, 0, 243, 284, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 334, 346, 363, 366, 0, 0,
	0, 194, 365, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	361, 268, 269, 270, 271, 235, 0, 211, 364, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 231, 237, 0,
	239, 210, 283, 233, 343, 246, 0, 369, 0, 0,
	0, 0, 275, 242, 308, 247, 253, 296, 342, 281,
	301, 208, 333, 309, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 251, 0, 292,
	230, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 0, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 318, 0,
	0, 349, 350, 351, 371, 335, 0, 222, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 310, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 0, 0,
	0, 0, 0, 0, 206, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 315, 331, 207, 306, 344,
	212, 313, 202, 279, 302, 0, 0, 199, 329, 312,
	261, 244, 245, 198, 0, 297, 223, 236, 219, 277,
	0, 328, 356, 218, 347, 0, 339, 201, 0, 338,
	276, 325, 330, 262, 256, 200, 327, 260, 255, 248,
	227, 370, 240, 288, 254, 289, 241, 266, 265, 267,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 249, 0, 0, 0, 357, 0, 300, 282,
	0, 0, 0, 298, 252, 326, 290, 332, 316, 340,
	294, 291, 192, 317, 221, 263, 203, 205, 217, 224,
	226, 228, 229, 272, 273, 285, 305, 319, 320, 321,
	220, 213, 299, 214, 238, 215, 193, 307, 216, 195,
	286, 324, 0, 234, 295, 259, 196, 258, 287, 323,
	322, 204, 348, 354, 355, 359, 0, 360, 0, 0,
	0, 368, 372, 373, 374, 0, 0, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 0, 353, 232, 189,
	190, 336, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 352, 0, 0, 0, 0, 303,
	0, 0, 0, 0, 0, 243, 284, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 334, 346, 363, 366, 0, 0, 0, 194,
	365, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 361, 268,
	269, 270, 271, 235, 0, 211, 364, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 231, 237, 0, 239, 210,
	283, 233, 343, 246, 0, 369, 0, 0, 0, 0,
	275, 242, 308, 247, 253, 296, 342, 281, 301, 208,
	333, 309, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 251, 0, 292, 230, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 0, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 318, 0, 0, 349,
	350, 351, 371, 335, 0, 222, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 310, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 0, 0,
	0, 0, 206, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 315, 331, 207, 306, 344, 212, 313,
	202, 279, 302, 0, 0, 199, 329, 312, 261, 244,
	245, 198, 0, 297, 223, 236, 219, 277, 0, 328,
	356, 218, 347, 0, 339, 201, 0, 338, 276, 325,
	330, 262, 256, 200, 327, 260, 255, 248, 227, 370,
	240, 288, 254, 289, 241, 266, 265, 267, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	249, 0, 0, 0, 357, 0, 300, 282, 0, 0,
	0, 298, 252, 326, 290, 332, 316, 340, 294, 291,
	192, 317, 221, 263, 203, 205, 444, 224, 226, 228,
	229, 272, 273, 285, 305, 319, 320, 321, 220, 213,
	299, 214, 238, 215, 193, 307, 216, 195, 286, 324,
	0, 234, 295, 259, 196, 258, 287, 323, 322, 204,
	348, 354, 355, 359, 0, 360, 0, 0, 0, 368,
	372, 373, 374, 0, 0, 0, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 353, 232, 189, 190, 336,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 352, 0, 0, 2264, 0, 303, 0, 0,
	0, 0, 0, 243, 284, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	334, 346, 363, 366, 0, 0, 0, 194, 365, 1852,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 361, 268, 269, 270,
	271, 235, 0, 211, 364, 293, 2684, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2246, 2264, 0, 0,
	0, 0, 358, 231, 237, 0, 239, 210, 283, 233,
	343, 246, 0, 369, 0, 0, 0, 0, 275, 242,
	308, 247, 253, 296, 342, 281, 301, 208, 333, 309,
	257, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2264, 0, 0, 2246, 0,
	0, 191, 0, 251, 0, 292, 230, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 1852,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 0, 0, 0, 349, 350, 351,
	371, 335, 0, 222, 0, 0, 0, 2337, 423, 0,
	422, 429, 419, 2250, 0, 0, 2246, 0, 0, 0,
	0, 0, 426, 427, 2254, 428, 432, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 2243, 0, 0, 0, 2245, 2247,
	2249, 0, 2251, 2252, 2253, 2255, 2256, 2257, 2259, 2260,
	2261, 2262, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 443, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 0, 0, 0, 423, 2250, 422, 429, 419, 0,
	0, 0, 0, 0, 0, 0, 2254, 2265, 426, 427,
	0, 428, 432, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 2243, 0, 0, 0,
	2245, 2247, 2249, 0, 2251, 2252, 2253, 2255, 2256, 2257,
	2259, 2260, 2261, 2262, 2263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 441, 0, 0, 443, 0, 0,
	0, 2242, 442, 2250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2254, 0, 0, 0, 0, 2265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2258, 0, 0, 0, 2243, 0, 0, 2248, 2245, 2247,
	2249, 0, 2251, 2252, 2253, 2255, 2256, 2257, 2259, 2260,
	2261, 2262, 0, 415, 417, 416, 2263, 0, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2242, 425, 0, 0, 0, 0, 0,
	423, 440, 422, 429, 419, 0, 0, 2265, 418, 0,
	0, 0, 409, 0, 426, 427, 0, 428, 432, 0,
	0, 414, 2258, 0, 0, 0, 0, 0, 0, 2248,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2263, 0, 0, 0, 0, 415,
	417, 416, 0, 0, 0, 0, 0, 0, 421, 0,
	0, 2242, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 0, 0, 0, 0, 0, 0, 440, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	2258, 0, 0, 0, 0, 0, 0, 2248, 0, 0,
	0, 0, 0, 0, 420, 424, 430, 0, 431, 433,
	0, 0, 434, 435, 436, 0, 0, 438, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	420, 424, 430, 0, 431, 433, 0, 0, 434, 435,
	436, 0, 0, 438, 439, 415, 417, 416, 0, 0,
	0, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 425, 0, 0, 0,
	0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 420, 424, 430, 0,
	431, 433, 0, 0, 434, 435, 436, 0, 0, 438,
	439,
}

var yyPact = [...]int{
	2712, -1000, -310, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -218, 29129,
	29129, -1000, -1000, 1671, -1000, 28621, 9814, 29637, 275, 271,
	29637, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 574,
	-1000, 28113, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 540, 30668, 30145, 7771, 29637, -289, -1000, 2197, -139,
	-1000, -1000, -1000, -1000, -1000, -1000, 1086, 592, 27605, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2538, 166, 592, 675,
	693, 783, 783, 11846, -88, -93, 2197, 258, 152, -1000,
	913, 2712, 29637, 1561, 515, 29637, -1000, 1113, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 515, -1000, -1000, -1000, 2197,
	2197, -1000, 29637, 29637, -13, 1196, -1000, 228, 234, 256,
	1112, -1000, -1000, -1000, -1000, -1000, 2287, -1000, 29637, 29637,
	1902, 29637, -1000, 1364, 417, 30744, 2081, 975, 637, 1928,
	-1000, -1000, 1881, -1000, 154, 133, 143, 269, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 83, -1000, 2159, -1000, -1000,
	132, -1000, -1000, 173, -1000, -1000, -1000, -95, -1000, -1000,
	-1000, -1000, -1000, -1000, -161, -1000, -1000, 706, 1312, 7771,
	-1000, 1469, -1000, 3688, -1000, -1000, -1000, -1000, 5221, 9295,
	9295, 9295, 9295, -1000, -1000, 1773, 7771, 1880, 1878, -1000,
	-1000, -1000, -1000, 1097, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1560, 8787, -1000, 1876,
	1875, 1874, 1872, 1871, 1870, 1868, 1867, 1864, 1863, 1685,
	1768, 1858, 1559, 1557, 1857, 1856, 1853, 1556, 1685, 1685,
	1837, 1836, 1833, 1832, 1831, 1818, 1817, 1816, 1813, 1812,
	1810, 1809, 1808, 1807, 1806, 1800, 1799, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	374, -1000, 1096, 873, -1000, 1796, 2048, 2170, 1722, 2244,
	2142, 2138, 2132, 2129, 1437, -1000, -1000, 29637, 29637, 535,
	535, 535, 535, 535, 565, 535, 573, 571, 569, -1000,
	-1000, -1000, -1000, -1000, -1000, 642, -1000, -1000, -1000, -1000,
	1018, 29637, -1000, 1753, 1143, 2165, 458, 432, 318, -1000,
	1269, 1269, 1269, 1143, 246, 416, 2170, 2170, -78, -120,
	1143, 1143, -120, 1143, 1143, 1143, 69, -1000, -1000, -1000,
	1269, 425, 1269, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2152, 2151, 540, 49, 29637, 540, 540, 550, -1000, -163,
	-1000, -1000, 667, -1000, 664, -1000, 1364, 404, 398, 1029,
	1229, -1000, 1175, 29637, 29637, 29637, 1175, 1175, 15405, 14897,
	-1000, 29637, -1000, 2170, 1722, -1000, 1659, 2349, 1658, 1722,
	540, 540, 540, 540, 540, 540, 540, 29637, 29637, 540,
	6745, 6745, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	272, 2050, 250, 1793, -1000, 29637, 248, 2170, 2048, 2170,
	-1000, -1000, 1092, 1435, 1553, -1000, -1000, 228, 1118, -1000,
	713, -1000, -1000, -1000, -1000, 29637, 223, -1000, -1000, 1541,
	1791, -1000, 360, 781, 1064, -1000, 146, 30890, 24549, 1364,
	24549, 29637, -1000, -1000, -1000, -1000, -1000, -1000, -101, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 82, -1000, 7771, 7771, 7771, 7771, 7771, -1000,
	493, 8279, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9295,
	9295, 9295, 9295, 9295, 9295, 9295, 9295, 9295, 9295, 9295,
	9295, 1772, 1191, 9295, 9295, 9295, 9295, 2349, 2243, 1026,
	161, -1000, -1000, -1000, -1000, -1000, 1211, 1312, 7771, 7771,
	29637, -1000, 2670, 7771, 7771, 2708, 7771, 2125, 3696, 29637,
	7771, -1000, 1657, 1654, -1000, -1000, 1356, 7771, 7771, -1000,
	-1000, 7771, 9295, 7771, -1000, -1000, -1000, 168, 2125, 2125,
	7771, 7771, 2125, 2125, 2125, 1219, 2125, 2125, 2125, 2125,
	2125, 2125, 2125, 2125, 29637, 2040, 115, -1000, -1000, -1000,
	1738, -1000, 1749, 1749, 1749, 1749, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1766, 1786, -1000, -1000, 1748,
	1748, 1748, 1738, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1761, 1761,
	1762, 1761, 29637, 2170, -289, 6237, -1000, -294, 2048, 7771,
	-1000, -1000, 7771, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1547, 2108, -1000, 1785, 1091, 29637, 1227, 29637, 24549,
	29637, 1364, 29637, 29637, 535, 535, 535, 550, -1000, 29637,
	1018, 2104, 29637, 2266, 9295, 9295, 27097, 1269, 1143, -1000,
	29637, -1000, -1000, -1000, 1269, 29637, 1269, 2266, 1269, -1000,
	-1000, -1000, 1143, 1143, -1000, -1000, -1000, -1000, 1269, 1269,
	-1000, -1000, -104, 2266, 2266, -119, -1000, -1000, -1000, 29637,
	29637, 535, 29637, 29637, -1000, 29637, -1000, -1000, 29637, 29637,
	29637, 2135, -1000, 24549, 29637, 22517, -1000, -150, 673, 651,
	655, -1000, -1000, 359, 514, 13881, 306, 24549, 4712, -1000,
	-1000, 1175, 1175, 1175, 4712, 4712, 1065, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1016, -1000, 73, 2048, -1000, -1000,
	-1000, -1000, -1000, 29637, 24549, 1364, 29637, 29637, 29637, 29637,
	-1000, 1780, 29637, 1059, -1000, -1000, 11338, 1090, 1059, 1546,
	29637, 1545, 1926, 2024, -1000, 1779, 12864, 29637, -1000, -1000,
	-290, -1000, 12355, 29637, 2048, -1000, 2048, 29637, -1000, 2163,
	-1000, 228, 178, -1000, -1000, -1000, -1000, -1000, -1000, 1084,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1008,
	-1000, 29637, -1000, -1000, 146, 24549, 25057, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 116, -1000, -1000, 149, -1000, 561,
	16, 1117, -1000, -1000, 52, 144, 591, 1312, -1000, 1237,
	1237, 1246, -1000, 560, -1000, -1000, -1000, -1000, 1773, -1000,
	-1000, -1000, 1938, 935, -1000, 1239, 1239, 1100, 1100, 1100,
	1100, 1100, 1146, 1146, -1000, -1000, -1000, 5221, 1772, 9295,
	9295, 9295, 9295, 498, 498, 3176, 3530, -1000, 7771, 1251,
	-1000, 7771, 1323, 891, 1083, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1639, 706, 1638, 1443, 2283,
	1634, 7771, -1000, -1000, 1583, 7263, -1000, -1000, -1000, 1631,
	1074, 1628, -1000, -1000, -1000, 1627, 1110, 800, 1621, 2284,
	1620, 988, 7771, 7771, 1104, 1102, 7771, 7771, 7771, 7771,
	1619, 7771, 7771, 7771, 7771, 7771, 7771, 7771, 7771, -1000,
	7771, 88, -1000, -1000, -1000, -1000, 1434, -1000, 1430, -1000,
	-1000, -1000, 1543, 1543, -1000, 1429, -1000, -1000, -1000, -1000,
	1426, -1000, -1000, 1425, -1000, -1000, -1000, -1000, 1093, -1000,
	1312, -1000, 1542, -1000, 904, 985, -1000, 1375, -1000, -1000,
	29637, 10322, 29637, 1753, 2066, 38, -1000, 881, -1000, 16,
	-169, 745, 1899, 2281, 29637, 29637, 29637, 26589, -1000, 1771,
	1087, -1000, -1000, 7771, -1000, -1000, 1891, 29637, 29637, 2266,
	-1000, -1000, -1000, 29637, -1000, -1000, -1000, 29637, 2266, 2266,
	1143, 1269, 1269, -1000, -1000, 1269, -1000, 1073, -1000, 29637,
	-1000, -1000, -1000, 1753, 35, 2119, 185, 881, 201, 2317,
	882, -1000, -1000, -1000, -1000, 17437, 17437, 13373, 17437, -1000,
	1127, -1000, -1000, 670, 663, 658, -1000, -1000, 559, -1000,
	-1000, 745, -1000, -1000, -1000, 1770, 1195, -1000, -1000, 1768,
	-1000, 4712, 4712, 4712, -1000, -1000, 17945, 29637, -1000, -164,
	-1000, -153, -1000, -1000, 960, 745, 1925, 954, -1000, 954,
	-1000, 10322, -1000, 2266, 6745, -1000, 22517, -1000, -1000, 26073,
	-1000, 25565, 2266, -298, 1007, -130, -1000, 2042, -290, 29637,
	29637, 1081, 196, -1000, 1080, -1000, 712, -1000, 1767, -1000,
	1077, 1984, 898, -1000, 1193, -1000, -1000, 1072, -14, -1000,
	-1000, 29637, 1541, 1063, 25057, 893, -1000, 558, 1071, 1070,
	-1000, 24549, 137, 24549, -1000, 24549, -1000, -1000, 236, -1000,
	29637, 2045, -1000, -1000, -1000, 1530, -315, -1000, -1000, -1000,
	-1000, -1000, 1062, -1000, 498, 498, 3176, 3462, -1000, 9295,
	-1000, 9295, 2233, 1200, -1000, 7771, 1243, 257, 2099, 16421,
	29637, -1000, -1000, 7771, 7771, -1000, 2193, -1000, 7771, 7771,
	1386, -1000, 29637, -1000, -1000, -1000, -1000, 16421, -1000, 9295,
	-1000, 7771, 871, 2187, -66, -66, 2178, 2157, 2126, 1061,
	-66, 2121, 2061, 2054, 2027, 1980, 1945, 1940, 1931, 1312,
	-1000, -1000, 1615, 1612, 1055, -1000, 1052, 1611, 1048, 1038,
	6237, -1000, -130, 7771, 7771, 7771, 2000, -1000, -1000, 59,
	1604, 914, -1000, -1000, -1000, 2633, 1749, 1749, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1766, -1000, -1000,
	1748, 1748, 1748, 1738, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1761, 1761, 1762, 1761, -1000, 2103, -1000,
	-76, 1161, 357, 24549, 386, -1000, 29637, 1924, 401, 2037,
	29637, 1756, 1755, 1754, 29637, 972, -1000, 1068, 2712, -1000,
	29637, 1312, -1000, 1364, -1000, 1143, -1000, -1000, 2266, 937,
	-1000, -1000, 2266, 1143, 1143, 1269, 29637, -1000, 2102, -76,
	1161, 179, 1189, 357, 1440, 14389, 29637, 22517, 22517, 22517,
	22517, -1000, 1948, 1947, -1000, 1993, 1991, 1963, 29637, 22517,
	1753, -1000, 20993, -1000, -1000, -1000, 2349, 1037, 2260, 702,
	7771, -1000, -1000, -1000, 662, 24549, 1538, 306, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 29637, 29637, 1599, 2258,
	-1000, 899, -1000, -1000, 1066, -1000, 2258, -1000, 1423, 1537,
	-58, -38, 1278, 712, 898, 1033, -1000, 196, 29637, 1974,
	1752, -1000, 29637, -290, 6237, 253, -290, 29637, 6237, 29637,
	1420, -1000, -1000, -1000, 2261, 24549, 1364, 1116, 24041, -1000,
	124, -1000, 114, 341, 1536, -1000, 568, 80, -1000, 1188,
	1530, -1000, -1000, -1000, 9295, -1000, -1000, -1000, -1000, 1312,
	7771, 1598, -1000, 653, 653, 1596, -1000, 1749, 1749, -1000,
	1738, 1748, 1738, 653, 653, 1594, -1000, 1352, 1912, -1000,
	1883, 1801, 7771, -1000, 1587, 3025, 908, -184, -66, -1000,
	1746, -1000, -66, -66, -66, -66, -1000, -66, -66, -66,
	-66, -66, -66, -66, -66, -1000, -1000, -1000, 1535, -1000,
	-1000, -1000, 1411, -1000, 1408, -1000, -58, 1312, 1312, -1000,
	-1000, 2031, 1534, 577, 10322, 2039, 241, 1441, -1000, -1000,
	23533, -1000, 326, -1000, -1000, -1000, 460, 313, 1405, 314,
	-1000, 29637, 199, 29637, -1000, -1000, -1000, -1000, -1000, 2037,
	-1000, 612, -1000, 252, 10830, 10830, 10830, 515, 795, 1042,
	22517, 29637, -1000, 22009, 1584, -1000, 745, 2266, -1000, 29637,
	-1000, 2266, 2266, 1143, -1000, 241, 1441, 23533, 1179, 1532,
	326, -1000, 1531, -1000, 731, 29637, 29637, 842, -1000, 1178,
	1889, 1921, 1889, -1000, -1000, -1000, -1000, 1941, -1000, 1493,
	-1000, -1000, 842, -1000, -1000, -1000, -1000, -1000, 702, -1000,
	2128, 695, 695, 695, 1582, -1000, 893, 1581, -1000, -1000,
	-1000, -1000, -1000, 2255, 2242, 23025, 2255, -1000, -298, -296,
	-31, 2236, 2232, 2294, 241, 29637, 251, -1000, -290, 29637,
	-1000, -1000, 1578, 858, -290, -1000, 712, -1000, -1000, -1000,
	-1000, 1364, -1000, 107, -1000, -1000, -1000, -1000, -1000, -1000,
	-3, -1000, 29637, -1000, 1530, 1529, 78, -1000, 1312, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 7771, -1000, -1000, -1000, 1797, -1000,
	-1000, 7771, 1577, 1528, -1000, 513, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1576,
	1572, -296, -1000, -1000, -1000, 2633, -1000, 1508, -1000, -1000,
	1527, 10, -1000, -1000, -1000, 1524, 1522, 1403, -1000, -1000,
	1407, 1056, 27, -1000, -1000, -1000, -1000, -1000, -1000, 1440,
	29637, 1745, -1000, 1161, 1161, 1161, 29637, 1571, 796, -1000,
	-1000, -1000, 2633, 679, -1000, 29637, 1268, 695, 535, 695,
	1263, 1744, -1000, -1000, 1569, 1568, 17437, 22517, 22009, 817,
	-1000, 1032, -1000, -1000, -1000, 2266, -1000, -1000, 2266, -1000,
	-1000, 10, 1515, -1000, -1000, -1000, 731, 731, 2249, 29637,
	6237, -1000, -1000, 7771, 1740, -1000, 7771, -1000, -1000, -1000,
	-1000, -1000, 1739, 2079, -1000, -1000, -1000, -1000, -1000, -1000,
	7771, 7771, -1000, -1000, -1000, -298, 1510, -1000, -1000, 2221,
	1490, 1453, 29637, -1000, -1000, -290, -1000, 712, 1024, -1000,
	712, 745, -1000, -1000, 196, -1000, -1000, -1000, 1707, -1000,
	1600, -66, -1000, 2249, -1000, 2219, -1000, -1000, -298, -221,
	-1000, -1000, -1000, -1000, 235, -1000, -1000, 192, -1000, -1000,
	1391, 356, -1000, -1000, 731, 19977, 16421, 16929, 1489, -1000,
	30609, 10830, 2846, -1000, -1000, 29637, 29637, -1000, 29637, 29637,
	535, 7771, 82, 30609, 2266, 817, 1032, -1000, -1000, 1114,
	-1000, -1000, -1000, -1000, 2170, -1000, -1000, 1312, 29637, 1312,
	21501, -1000, 2218, 2215, 1312, 706, -300, -1000, 1487, -35,
	-1000, -1000, 721, 712, -1000, -119, -1000, -1000, -1000, 67,
	7771, -300, 29637, 333, 1486, -1000, -1000, 190, -1000, -1000,
	1023, -1000, 1738, 7771, -1000, -1000, -1000, -1000, -1000, 501,
	30541, -1000, 1161, 1161, 718, 1161, 1161, 1161, 1161, 366,
	364, 1161, 1161, 1161, 1161, 1161, 1161, 1161, 1161, 1161,
	1161, 1161, 1161, 1161, 1161, 1737, -1000, -1000, 2846, -1000,
	-1000, 1288, 9295, -1000, -1000, 1485, 16929, 580, 616, 1735,
	-1000, 325, 2292, -1000, 1257, 1233, -1000, 29637, -1000, 1726,
	1803, 290, 1724, -1000, 1721, 1710, 29637, 1473, -1000, -119,
	501, 2249, -1000, -1000, 1015, 1014, -1000, -1000, -1000, -1000,
	-1000, 1704, -1000, 2214, -302, -60, -25, 1474, -1000, 3188,
	-1000, -1000, -1000, 706, -1000, 2101, -1000, -1000, -18, -1000,
	-1000, -1000, 19977, 2055, 1428, 247, 2210, 30609, -1000, 1396,
	1392, 1161, 1161, 1377, 1483, 1482, 1481, 1161, 1161, 1376,
	1479, 20993, 1374, 1372, 1349, 1381, 1478, 676, 1369, 1360,
	1347, 29637, 1701, 1458, -1000, -1000, 3176, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1344, 1698,
	-114, -1000, -1000, 1694, 19977, 392, 392, 19977, 19977, 19977,
	1689, 502, -1000, 247, 2170, -1000, -1000, 20485, 29637, 1453,
	-1000, 1477, 549, -20, -25, -1000, 2208, -48, 2207, 2201,
	-1000, -1000, 4204, -291, -61, 260, 1475, -1000, 176, -1000,
	-1000, 2055, -1000, 2190, 324, -1000, -1000, -1000, 16421, 16421,
	-1000, -1000, -1000, -1000, 1472, 1471, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 373, 29637,
	974, -1000, 1171, 1439, 7771, 1685, -213, 19977, 973, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 944, 940, 911, 19977,
	-1000, -1000, -1000, 330, -1000, -1000, -1000, -1000, 901, -1000,
	-1000, -1000, 1683, 1339, -31, -52, 2189, -1000, 1453, 2188,
	1453, 1453, 1220, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1161, 1460, 219, -1000, -1000, -1000, 19469, 302, 240, 238,
	-1000, 446, -1000, -1000, -1000, -1000, -1000, -1000, 406, 894,
	-1000, 1458, 1456, -1000, 1303, -1000, 1919, -1000, 48, 887,
	-1000, -1000, -1000, -1000, 879, -1000, -1000, 29637, 2114, 15913,
	-49, -1000, -1000, -1000, 1454, -1000, 1453, -1000, -1000, 4204,
	1331, -1000, 29637, -1000, 29637, 298, 1314, 9295, 1682, 9295,
	1681, 311, 1680, -1000, -1000, -1000, -1000, -1000, 502, -1000,
	1915, 1907, 2280, -1000, -1000, -1000, -1000, 176, 176, 176,
	176, 119, -1000, -1000, 29637, -1000, 870, -1000, -1000, -1000,
	1031, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 869, 1673,
	2172, -1000, 2951, 29637, 2934, 29637, 1668, 1157, 9295, -1000,
	-1000, 2291, -1000, 2289, 601, 601, -1000, 682, -1000, 1156,
	-1000, 18961, 29637, -1000, -1000, 486, 309, -1000, 856, -1000,
	852, 18453, 1309, 2779, -1000, -1000, -1000, 1345, 337, -1000,
	29637, 5729, -1000, 936, 839, -1000, 29637, 277, -1000, -1000,
	-1000, 836, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1312,
	29637, -1000, 486, 1952, -1000, 1294, -1000, -1000, -1000, 30469,
	619, -1000, -1000, 30469, 294, -1000, 472, 1667, -1000, -1000,
	829, -1000, 29637, 650, 7771, -1000, 294, 30609, -1000, 7771,
	791, -1000, 30609, 786, -1000, -1000,
}

var yyPgo = [...]int{
	0, 130, 2759, 204, 144, 141, 202, 2757, 2755, 2089,
	2040, 2754, 2752, 2750, 2748, 2747, 2746, 2745, 2744, 2741,
	2740, 2739, 2738, 2737, 2736, 2735, 2734, 2732, 2731, 2730,
	2729, 201, 2728, 2727, 2723, 2721, 2720, 2719, 2718, 2717,
	2716, 2715, 2713, 2712, 2711, 2710, 2708, 2707, 2705, 2702,
	2697, 2696, 2695, 2694, 2692, 2691, 2690, 135, 2687, 2009,
	2684, 2683, 2682, 2678, 2677, 2676, 185, 2675, 2674, 2673,
	2672, 2670, 2669, 2668, 2667, 2666, 2665, 2664, 2662, 2661,
	2660, 2656, 2655, 2654, 158, 2653, 2652, 149, 2650, 2649,
	2647, 2646, 207, 199, 60, 2643, 38, 2641, 2639, 2638,
	2636, 2635, 77, 2634, 2631, 92, 171, 210, 1355, 213,
	203, 160, 133, 71, 2630, 2085, 2627, 125, 189, 127,
	30, 2624, 152, 2622, 140, 39, 37, 205, 117, 54,
	124, 97, 2621, 183, 63, 86, 2620, 88, 2619, 2618,
	209, 162, 2617, 108, 2615, 2613, 2612, 2611, 172, 102,
	2610, 61, 2609, 70, 65, 95, 26, 2608, 2606, 2605,
	78, 2604, 2603, 2601, 2600, 154, 2597, 107, 49, 2595,
	2592, 2591, 56, 2590, 33, 2586, 44, 2585, 2584, 2583,
	2582, 62, 2579, 2577, 14, 16, 18, 2575, 15, 1,
	2573, 187, 114, 87, 119, 2572, 380, 2571, 2570, 2561,
	122, 2560, 1230, 2559, 2558, 2556, 2555, 72, 2554, 175,
	52, 2553, 80, 103, 50, 170, 173, 2551, 2549, 2547,
	245, 73, 29, 0, 2546, 43, 2545, 2544, 2539, 208,
	2538, 196, 168, 191, 110, 212, 148, 2536, 2534, 53,
	2532, 128, 79, 104, 10, 2531, 165, 2530, 446, 147,
	2529, 180, 2528, 129, 3, 121, 2527, 2526, 24, 232,
	2524, 2516, 2515, 99, 2514, 2513, 66, 100, 2512, 2511,
	2496, 55, 2495, 36, 25, 2487, 90, 2485, 206, 2484,
	155, 115, 151, 137, 123, 184, 190, 69, 64, 2483,
	1221, 120, 81, 17, 2482, 188, 2481, 215, 192, 2479,
	166, 2478, 200, 339, 181, 2477, 157, 9, 42, 32,
	2476, 11, 2475, 112, 2474, 2473, 21, 2472, 22, 2471,
	2470, 2469, 2467, 6, 2466, 2465, 2464, 2, 4, 2461,
	5, 182, 59, 153, 2456, 174, 167, 2455, 2451, 75,
	2450, 2449, 2447, 614, 2446, 2441, 2439, 2437, 2436, 2428,
	2427, 2425, 2424, 76, 35, 2423, 2422, 2418, 2415, 67,
	118, 2414, 2413, 2400, 2397, 28, 138, 2396, 19, 2394,
	27, 23, 31, 2393, 101, 2392, 12, 161, 2391, 2387,
	13, 2386, 2384, 7, 8, 2383, 2382, 57, 2380, 45,
	34, 74, 83, 2379, 20, 156, 113, 2378, 2375, 197,
	198, 179, 2367, 131, 194, 218, 2366, 186, 2365, 2363,
	2361, 2360, 2359, 2354, 1222, 2351, 2350, 195, 58, 116,
	91, 2349, 2348, 2346, 68, 126, 85, 89, 169, 2345,
	164, 2344, 2340, 84, 2332, 2331, 2330, 2329, 2323, 163,
	2312, 2310, 2309, 193, 139, 2308,
}

//line mysql_sql.y:8668
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 438, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 90, 436, 436, 436, 437, 437,
	88, 88, 88, 77, 89, 386, 386, 385, 385, 384,
	384, 340, 340, 383, 383, 383, 382, 382, 382, 381,
	381, 380, 380, 379, 379, 377, 377, 378, 376, 375,
	375, 375, 373, 373, 373, 369, 369, 371, 370, 370,
	372, 364, 364, 367, 367, 365, 365, 365, 365, 368,
	363, 363, 363, 362, 362, 76, 76, 76, 292, 292,
	75, 75, 306, 306, 306, 306, 306, 304, 304, 304,
	304, 304, 304, 303, 303, 302, 302, 307, 307, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 67,
	67, 67, 67, 70, 70, 70, 71, 301, 301, 301,
	68, 69, 69, 291, 291, 296, 296, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 300,
	300, 300, 298, 298, 297, 297, 299, 299, 61, 61,
	61, 64, 63, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 62, 62, 62, 62, 62, 62, 58, 58,
	58, 58, 58, 57, 57, 59, 59, 288, 288, 287,
	72, 72, 73, 440, 440, 439, 441, 441, 441, 441,
	74, 80, 80, 80, 80, 80, 80, 80, 79, 79,
	82, 82, 81, 83, 66, 66, 66, 66, 66, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 410, 410,
	410, 412, 412, 227, 228, 442, 230, 226, 226, 226,
	406, 406, 407, 408, 409, 409, 409, 78, 7, 7,
	7, 7, 7, 56, 54, 60, 60, 423, 423, 55,
	430, 430, 343, 343, 241, 241, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 346, 347, 237, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 38, 37,
	37, 37, 277, 277, 36, 443, 443, 216, 216, 45,
	46, 47, 48, 49, 50, 35, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 53, 53, 358, 358, 445,
	445, 445, 51, 52, 342, 342, 342, 43, 42, 41,
	40, 40, 34, 34, 33, 33, 39, 100, 101, 234,
	234, 234, 236, 236, 232, 444, 444, 318, 318, 235,
	235, 32, 32, 32, 32, 233, 233, 215, 231, 231,
	231, 8, 8, 6, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 18, 20, 285, 285, 282, 19,
	14, 13, 16, 12, 15, 17, 5, 5, 5, 5,
	9, 9, 10, 112, 112, 155, 155, 418, 418, 414,
	414, 415, 415, 415, 416, 416, 417, 417, 84, 352,
	352, 352, 352, 352, 352, 4, 134, 134, 136, 136,
	135, 135, 351, 351, 351, 351, 351, 351, 351, 289,
	289, 395, 395, 395, 396, 133, 133, 128, 128, 353,
	353, 255, 397, 397, 361, 361, 360, 360, 359, 359,
	131, 131, 132, 132, 115, 115, 93, 93, 366, 366,
	366, 366, 374, 374, 339, 339, 181, 181, 210, 210,
	211, 211, 105, 105, 106, 106, 106, 106, 106, 106,
	403, 403, 405, 405, 404, 130, 130, 126, 126, 127,
	127, 127, 125, 125, 124, 123, 123, 122, 120, 120,
	120, 121, 121, 121, 108, 108, 108, 107, 107, 107,
	107, 107, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 109, 109, 411, 411, 411, 344,
	344, 344, 349, 349, 193, 193, 194, 194, 192, 192,
	110, 110, 111, 111, 111, 111, 191, 191, 190, 113,
	113, 119, 118, 118, 114, 114, 114, 114, 201, 201,
	200, 200, 200, 200, 87, 91, 91, 92, 139, 139,
	199, 198, 198, 198, 138, 138, 137, 137, 129, 129,
	117, 117, 117, 117, 197, 116, 195, 435, 435, 434,
	434, 433, 431, 431, 431, 432, 432, 432, 432, 388,
	388, 388, 388, 388, 221, 221, 221, 225, 225, 224,
	224, 224, 224, 224, 229, 3, 3, 3, 3, 3,
	24, 24, 24, 24, 24, 24, 30, 147, 148, 29,
	140, 140, 141, 141, 142, 142, 143, 144, 144, 144,
	146, 145, 28, 21, 419, 422, 420, 420, 424, 424,
	424, 425, 425, 425, 426, 426, 22, 97, 102, 102,
	99, 104, 104, 104, 104, 104, 98, 421, 427, 427,
	427, 286, 286, 283, 284, 284, 281, 280, 280, 280,
	429, 429, 428, 428, 428, 222, 222, 23, 276, 276,
	278, 279, 279, 279, 270, 270, 270, 270, 27, 274,
	274, 275, 275, 275, 275, 275, 271, 271, 273, 273,
	269, 269, 269, 269, 269, 26, 103, 103, 268, 268,
	266, 266, 264, 264, 265, 265, 263, 263, 263, 267,
	267, 25, 25, 25, 95, 94, 94, 94, 213, 213,
	212, 212, 96, 345, 345, 308, 308, 309, 309, 309,
	312, 312, 324, 324, 325, 325, 323, 323, 330, 330,
	329, 329, 328, 328, 327, 327, 326, 326, 326, 326,
	321, 321, 320, 320, 310, 310, 310, 310, 310, 311,
	311, 311, 319, 319, 322, 322, 172, 172, 173, 173,
	173, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	393, 393, 394, 175, 175, 175, 179, 179, 179, 179,
	179, 179, 174, 174, 176, 176, 156, 156, 154, 154,
	149, 149, 150, 150, 151, 151, 152, 152, 153, 153,
	153, 153, 153, 153, 294, 294, 391, 391, 392, 392,
	387, 387, 387, 390, 390, 390, 390, 390, 389, 389,
	157, 208, 208, 208, 223, 223, 223, 223, 207, 207,
	207, 171, 171, 170, 170, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	293, 293, 238, 238, 239, 239, 188, 187, 187, 187,
	187, 187, 185, 186, 184, 184, 184, 184, 184, 183,
	183, 182, 182, 182, 272, 272, 180, 180, 178, 178,
	178, 177, 177, 177, 331, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 247, 247,
	252, 252, 402, 402, 401, 158, 158, 158, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 167, 167, 167,
	316, 316, 316, 316, 316, 317, 317, 317, 314, 314,
	315, 315, 256, 257, 257, 350, 350, 313, 313, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 357, 357, 357, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 413, 413, 413, 398, 398, 398, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 205, 205, 205, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 258, 258, 259, 259, 354, 354, 354, 354,
	354, 354, 355, 355, 356, 356, 356, 356, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 245, 202, 202,
	202, 260, 253, 253, 254, 254, 248, 248, 248, 248,
	248, 248, 248, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 249, 249, 251, 251, 262,
	262, 262, 261, 261, 261, 261, 261, 261, 261, 169,
	169, 169, 169, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 160, 160, 160, 160, 164, 164,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 165, 165, 165, 165, 163, 163,
	163, 163, 163, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 85,
	86, 86, 162, 209, 209, 332, 332, 335, 335, 333,
	333, 334, 336, 336, 336, 337, 337, 337, 338, 338,
	338, 341, 341, 214, 214, 214, 220, 220, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 11, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 7, 7, 7, 8, 0, 4, 7,
	0, 3, 0, 2, 0, 1, 1, 1, 1, 4,
	2, 2, 3, 3, 4, 5, 3, 4, 4, 2,
	2, 2, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 2,
	5, 5, 0, 2, 7, 0, 1, 0, 1, 5,
	3, 2, 4, 4, 4, 4, 1, 1, 1, 3,
	2, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	6, 7, 4, 4, 7, 8, 3, 3, 3, 0,
	2, 2, 0, 2, 2, 1, 1, 1, 1, 0,
	1, 4, 4, 5, 4, 1, 3, 1, 1, 3,
	5, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 6, 1, 1, 2, 2,
	11, 8, 9, 1, 3, 2, 4, 0, 2, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 4, 2,
	1, 5, 4, 4, 2, 5, 0, 4, 0, 2,
	1, 3, 3, 1, 5, 6, 5, 5, 3, 0,
	5, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 4, 3, 4, 5, 4, 5,
	2, 3, 1, 3, 6, 0, 3, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 3, 0, 1,
	1, 0, 2, 2, 3, 3, 3, 1, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 7, 7, 1, 1, 1, 0,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 2,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 4, 1, 3, 4, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 3, 2, 3, 1, 4, 3, 0, 1, 1,
	2, 5, 2, 2, 2, 0, 2, 3, 3, 0,
	1, 3, 1, 3, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 12,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 4,
	1, 1, 7, 7, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 0, 2, 7, 8, 0, 2,
	6, 0, 2, 2, 3, 3, 4, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 6, 0, 4, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 11, 9, 11, 2, 2, 4, 5, 1, 3,
	0, 3, 5, 0, 1, 0, 6, 0, 3, 5,
	0, 4, 0, 3, 1, 3, 4, 5, 0, 3,
	1, 3, 2, 3, 1, 2, 0, 4, 6, 5,
	0, 2, 0, 2, 4, 5, 4, 5, 1, 5,
	6, 5, 0, 3, 0, 1, 0, 1, 1, 3,
	2, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 4,
	1, 3, 3, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 1, 7, 7,
	7, 7, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 0, 1,
	3, 1, 3, 5, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 2, 1, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 5, 6, 4, 1,
	1, 2, 0, 1, 1, 2, 5, 0, 1, 1,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 3, 5, 2, 2, 2, 2, 1, 1, 2,
	5, 6, 6, 6, 1, 1, 1, 1, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 5,
	0, 1, 3, 0, 1, 0, 2, 0, 6, 8,
	6, 5, 5, 6, 6, 6, 6, 5, 6, 6,
	6, 6, 6, 6, 6, 6, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 4, 6, 2, 2, 4, 6,
	4, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -438, -2, -1, -3, -88, -4, -84, -5, -6,
	-8, -65, -79, -81, -83, -82, -31, -7, -78, -57,
	-58, -61, -67, -72, -75, -76, -77, -89, -85, -86,
	-87, -105, -90, -24, -23, -22, -21, -97, 401, 12,
	446, -9, -10, -403, -11, 233, -226, -227, -228, -230,
	-442, -32, -33, -34, -40, -41, -42, -43, -51, -52,
	-53, -35, -36, -37, -38, -45, -46, -47, -48, -49,
	-50, -39, -100, -101, -55, -54, -60, -56, -99, 209,
	-59, 61, -62, -63, -64, -68, -69, -70, -71, -73,
	-74, 332, 338, 391, 528, 529, 46, -106, -108, 530,
	-25, -26, -27, -28, -29, -30, 205, 14, 479, -12,
	-15, -13, -16, -14, -19, -20, -18, -17, -98, 228,
	227, 37, 291, 292, 293, 336, 226, 206, 13, 137,
	138, 140, 141, 30, 41, 314, -107, 67, 207, -109,
	10, 532, 439, 531, -115, 38, -154, -223, 70, 78,
	-217, -219, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 449, 312,
	313, 476, 245, 269, 362, 272, 279, 137, 156, 150,
	178, 170, 145, 249, 284, 250, 77, 140, 432, 88,
	412, 388, 143, 264, 266, 268, 271, 251, 166, 161,
	263, 247, 528, 159, 252, 39, 253, 183, 254, 255,
	481, 408, 311, 414, 276, 386, 160, 409, 267, 411,
	185, 189, 424, 338, 154, 155, 416, 426, 182, 225,
	42, 478, 237, 427, 187, 181, 177, 435, 280, 278,
	180, 153, 176, 248, 50, 191, 190, 192, 382, 383,
	384, 385, 256, 257, 326, 423, 173, 162, 316, 146,
	22, 430, 232, 413, 339, 258, 273, 281, 186, 188,
	239, 244, 480, 390, 243, 277, 428, 158, 236, 265,
	231, 431, 147, 332, 341, 259, 141, 270, 425, 434,
	49, 354, 152, 144, 222, 138, 241, 246, 11, 260,
	261, 262, 283, 282, 274, 174, 238, 179, 164, 151,
	175, 139, 240, 433, 355, 526, 314, 371, 172, 169,
	242, 215, 429, 415, 142, 375, 356, 167, 285, 522,
	523, 524, 327, 310, 286, 287, 165, 229, 407, 288,
	290, 381, 303, 357, 389, 363, 358, 198, 294, 418,
	184, 525, 295, 296, 297, -115, -59, -10, -9, -107,
	-108, -154, 213, -231, 23, 386, -66, 387, 209, 67,
	-223, -5, -4, -84, -57, -105, -229, -223, 291, 291,
	-229, 213, -223, 243, 370, -343, 218, -303, -276, 244,
	-302, -278, -305, -279, 31, 205, 207, 206, 240, 14,
	336, 214, 12, 10, 337, 226, 24, 25, 27, 13,
	338, 340, 28, 341, 344, 345, 346, 41, 349, 350,
	233, 70, 78, 73, 251, -148, -223, -254, -248, 95,
	234, -250, -243, -244, -246, -383, -377, -242, 67, 121,
	122, 129, 96, -245, -331, 35, 98, 486, 447, -203,
	-204, -205, -206, -223, -378, -376, 73, 79, 82, 85,
	86, 84, 83, 163, 81, 74, 133, 134, -108, 70,
	-398, 494, -218, 515, 514, 46, -348, -356, 212, -354,
	132, 168, 229, 164, 12, 127, 381, 165, 491, 511,
	449, 495, 518, 488, 489, 483, 484, 485, 487, 496,
	498, 510, -357, 506, 516, 517, 504, 72, 71, 509,
	508, 497, 492, 493, 499, 482, 490, 500, 501, 507,
	512, 513, 320, 88, 321, 322, 439, 315, 323, 218,
	386, 55, 324, 325, 326, 327, 328, 446, 329, 56,
	330, 319, 233, 371, 331, 167, 184, 451, 450, 452,
	443, 440, 438, 441, 442, 444, 445, 502, 503, 505,
	-299, -297, -223, -91, -92, 520, -124, -125, -196, 19,
	6, 7, 8, 9, -436, 388, 480, 294, 333, 215,
	312, 371, 295, 243, -270, -268, -345, 288, 284, 223,
	222, 89, 439, 212, 347, -414, -415, 202, 203, 204,
	-405, 472, -404, -223, 322, 26, 213, 333, 418, 419,
	420, 421, 422, -44, -358, -342, 415, 414, -235, 413,
	406, 417, 408, 313, 297, 296, 205, 473, -214, 357,
	389, 239, 436, 437, 334, 390, 424, 425, 409, 88,
	171, 168, 215, 312, 439, 371, 295, -414, 142, 139,
	-290, 142, 94, 147, 146, -290, 243, 370, 40, -296,
	381, -295, -297, 424, 425, 435, 71, 72, 423, -214,
	88, 407, 407, -125, -196, -124, -106, -108, -87, -403,
	312, 371, 243, 214, 213, 215, 439, 291, 333, 295,
	-344, -411, 31, -349, 199, 200, 201, 32, 33, -1,
	-223, 73, -131, 235, -154, 135, -131, -125, -124, -125,
	-154, -207, -223, 388, 104, -66, -66, 387, -406, -407,
	-408, -410, 209, 387, 386, 135, 15, -229, -229, 65,
	-154, -278, 243, -303, -276, 35, 64, 136, 216, 136,
	64, 67, 334, 312, 371, 335, 439, 213, 347, 215,
	243, 348, 312, 371, 213, 215, 439, 243, 312, 213,
	215, 371, 243, 348, 406, 407, 215, 26, 339, 342,
	343, 407, -362, 435, 136, 94, 91, 92, 93, -248,
	111, -261, 104, 105, 106, 107, 108, 109, 110, 118,
	117, 128, 121, 122, 123, 124, 125, 126, 127, 119,
	120, 114, 95, 112, 116, 113, 97, -108, -248, -254,
	46, -246, -246, -246, -246, -331, -252, -248, 67, 67,
	135, 73, -248, 67, 67, 67, 67, 67, 67, 67,
	67, -355, 67, 67, -258, -259, 67, 67, 67, 73,
	73, 67, 67, 67, 73, -259, -259, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 136, -160, -164, -161, -163, -162,
	-166, -165, 168, 169, 132, 172, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 30, 184, 229, 164,
	165, 166, 167, 185, 150, 170, 477, 193, 151, 194,
	152, 195, 153, 196, 154, 155, 197, 156, 159, 160,
	161, 158, 135, -125, 136, 67, -93, 38, -127, 21,
	-109, -108, 20, 31, 32, 31, 32, 31, 32, 31,
	32, 79, -147, -223, -140, -223, -266, 218, -266, -266,
	-266, -266, 214, -266, 213, 213, 213, -416, 149, 136,
	-405, -130, 67, -234, 112, 116, 23, 241, 241, 278,
	-443, -444, 15, 114, -232, -444, -232, -234, -445, 214,
	416, 42, 242, 241, -126, -127, -126, 410, 407, -318,
	411, 412, -235, -234, -234, -235, -234, -234, -234, 213,
	215, 439, 295, -443, 241, -443, 30, 30, -343, -343,
	473, -215, -223, -343, -343, -417, 217, 428, 479, 145,
	146, 147, -278, 243, 243, 136, 104, 23, -298, 104,
	115, -297, -297, -297, -298, -298, -174, 40, -222, 132,
	-223, 73, -174, 40, -440, -439, -154, -126, -109, -108,
	68, 68, 68, -343, -343, -343, -343, -343, -343, -343,
	-229, -140, -343, -110, -111, 123, -248, -223, -110, 38,
	407, 38, -351, -134, -105, 313, 67, 67, -223, -352,
	46, -105, 67, 30, -126, -93, -127, 135, 79, 73,
	-66, 68, 136, -409, 85, 86, -412, 182, 174, -223,
	-80, 73, -3, -4, -5, -6, -31, -57, -105, -379,
	-377, 67, 31, 380, 64, 15, -304, 213, 439, 333,
	239, 215, 312, -302, -285, -282, -280, -222, -278, -281,
	-280, -307, -207, 407, -94, 392, 290, -248, -248, -248,
	-248, -248, 84, 95, 310, 85, 86, -243, -262, 31,
	286, 287, -244, -244, -244, -244, -244, -244, -244, -244,
	-244, -244, -244, -244, -251, -260, -331, 67, 114, 112,
	116, 113, 97, -246, -246, -244, -244, 68, 136, -402,
	-401, 99, -248, -248, -223, -399, -400, 453, 454, 455,
	456, 457, 458, 459, 460, 461, 462, 463, 324, 319,
	325, 323, 315, 331, 326, 327, 167, 470, 471, 464,
	465, 466, 467, 468, 469, -253, -254, -253, -248, -399,
	-253, -202, 32, 31, -248, -413, 308, 307, 309, -128,
	-223, -253, 68, 68, 68, 79, -254, -254, -253, -244,
	-253, -400, -202, -202, -254, -254, -202, -202, -202, -202,
	123, -202, -202, -202, -202, -202, -202, -202, -202, -297,
	40, -338, 355, 354, -332, -334, 67, -333, 67, -333,
	-333, -333, 67, 67, -335, 67, -335, -335, -332, -336,
	67, -336, -337, 67, -336, -223, -126, -92, -360, -359,
	-248, 40, 521, -93, -248, -123, -122, -248, -437, 73,
	34, 67, 135, -154, 95, -419, -223, -286, -283, -280,
	-223, -276, -223, -223, -266, -266, -266, -417, -404, 34,
	-129, -223, -192, 16, -246, -246, -280, 243, -443, -234,
	-216, -215, -236, -444, -231, -236, -192, -444, -234, -234,
	-236, -232, 407, -192, -192, -318, -233, -223, -233, -266,
	-215, -216, -216, -154, -419, -419, 30, -286, -223, -118,
	-113, -117, -114, -119, -195, -197, -116, 67, -154, -108,
	-223, 429, 430, 143, 146, 145, 31, 380, -301, 380,
	31, -276, -295, -291, 73, 381, -281, -300, 64, 132,
	-359, -298, -298, -298, -300, -300, 131, 136, -441, 428,
	429, 202, -93, -419, -285, -276, -223, -156, -154, -156,
	-223, 67, -223, -191, 136, -190, 15, -224, -223, 34,
	73, 135, -191, 73, -156, 73, -289, 64, 46, 30,
	67, -133, 68, -128, -132, -223, -353, -255, -397, 520,
	-133, 68, -395, -396, -128, -93, -93, -223, 23, -66,
	-407, 135, 136, -129, -304, -284, -281, -306, 123, -223,
	-292, 136, 479, 533, 71, 216, -429, -428, 372, 68,
	136, -363, 217, 446, 73, 534, 198, 84, 310, 85,
	86, -331, -254, -251, -246, -246, -244, -244, -249, 230,
	-249, 94, -248, -247, -401, 101, -248, 34, 136, 65,
	135, 68, 68, 15, 15, 68, -248, 68, 15, 15,
	-248, 68, 135, 68, 68, 68, 68, 65, 68, 136,
	68, 136, -254, -248, 68, 68, -248, -248, -248, -254,
	68, -248, -248, -248, -248, -248, -248, -248, -248, -248,
	-341, 356, 79, 79, -209, 73, -209, 79, 79, 79,
	136, 68, 73, 136, 22, 136, -120, 36, 37, -148,
	-141, -142, -143, -144, -160, -207, 169, 172, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 229,
	164, 165, 166, 167, 185, 150, 170, 151, 152, 153,
	154, 155, 156, 159, 160, 161, 158, -223, -130, 35,
	-422, 359, -430, 136, 40, -428, 439, -269, 65, -103,
	15, -154, -154, -154, 15, -112, -155, -223, 67, 68,
	136, -248, -277, 65, -223, -216, -192, -223, -154, -223,
	-192, -192, -234, -236, -236, -232, 135, -215, -130, -423,
	359, 30, 318, -430, -104, 312, 30, -198, -199, -200,
	-201, 53, 57, 59, 54, 55, 56, 60, 30, 136,
	-221, -225, 34, -223, 73, -221, -108, -113, -118, -221,
	67, 144, 147, 147, 146, 216, 67, 104, -300, -300,
	-300, 40, -222, -439, 435, 429, 64, 136, -141, -192,
	-111, -113, -223, 73, -223, 123, -192, -181, 523, 38,
	-366, 411, 39, -353, -395, -135, -419, 68, 136, -134,
	313, 68, 136, 136, 67, 68, 46, 136, 104, 135,
	388, -223, -377, 68, -306, 136, 216, 135, 135, -282,
	338, -222, -284, 20, 479, -207, 38, -213, -212, 73,
	534, 68, -249, -249, 94, -246, -243, 68, 102, -248,
	100, -158, -160, 354, 355, -159, -165, 132, 168, 229,
	167, 166, 164, 354, 355, -174, -223, -248, -248, 68,
	-248, -248, 15, -223, -174, -244, -248, -125, 68, -313,
	402, -313, 68, 68, 68, 68, -313, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 136, 68,
	68, 68, 136, 68, 136, -359, -366, -248, -248, -122,
	-121, 43, 346, 68, 136, -160, 34, -425, 413, 361,
	-220, 104, -241, -240, 314, 41, -346, 381, 367, 368,
	-283, 243, -223, 64, 302, 303, 304, 305, -264, -265,
	-263, -267, 40, -419, 67, 67, 67, -154, -112, -223,
	15, 136, -418, 135, -1, -223, -276, -234, -192, -444,
	-192, -234, -234, -236, -223, 34, -425, -220, 318, 104,
	-241, -102, 77, 31, -135, 210, 207, -288, -287, -207,
	-117, -117, -117, -117, 53, 53, 53, 58, 53, 58,
	53, -200, -288, -119, -130, -225, 68, -435, -434, -433,
	-431, 61, 217, 62, -253, 147, -284, -237, 73, -291,
	-154, -154, 68, -194, 17, 135, -194, 79, 73, -374,
	398, 393, 395, 90, 68, 136, -134, -128, 46, 67,
	-223, -255, -361, -360, 46, -105, -353, -396, -359, -223,
	79, 15, -281, -276, 123, 123, -223, 339, -292, 73,
	360, 73, 213, 535, 136, 104, -213, -243, -248, 68,
	-167, 155, 154, -167, 68, -333, -333, -332, -335, -332,
	-167, -167, 68, 68, 23, 68, 68, 68, -248, 68,
	68, 136, -350, 448, -313, 67, -313, -313, -313, -313,
	-313, -313, -313, -313, -313, -313, -313, -313, 73, 79,
	79, -374, 44, 45, 73, 211, -143, 40, -105, -426,
	77, -420, 73, -223, -427, 77, 362, 134, 316, 40,
	363, 364, 378, 311, 79, 79, 369, -421, -223, -136,
	312, -154, -263, -214, 131, 254, 295, -149, -150, -151,
	-157, -152, -207, -239, -153, 221, 219, 223, -392, 89,
	224, 275, 90, 214, -149, -149, -131, 65, 135, -113,
	-155, -223, 123, 68, -192, -223, -192, -192, -234, -105,
	-426, -420, 104, 73, -427, 73, -135, -135, -192, 136,
	104, -138, -137, 64, 65, -139, 64, -137, 53, 53,
	-192, -433, -432, 23, -392, -392, -392, 68, 68, -193,
	18, 20, 123, -193, -181, -339, 522, -370, -372, 393,
	20, 20, 13, -105, -419, 46, -105, -353, -135, 68,
	-353, -276, -292, 381, -154, -212, 73, 535, -248, 68,
	-248, 68, 73, -257, -256, 235, 68, 68, -339, -145,
	-160, -242, 73, -424, 372, 73, 73, 79, 40, 79,
	134, 365, -347, -102, -135, 67, -220, -220, -220, -223,
	68, 136, -160, -153, -223, 90, -391, -392, -266, -391,
	90, 67, 68, 68, -221, -113, -223, -192, -418, 135,
	-192, -192, -424, 73, -125, -287, -359, -248, 67, -248,
	67, 53, 19, 17, -248, -254, -181, 73, 20, 73,
	-368, 73, -288, -353, 68, -134, 68, 68, -313, -125,
	20, -181, 478, 20, 479, 315, 40, 79, 40, 366,
	-271, -273, -207, 67, -174, -176, -222, 132, 73, -172,
	-173, -189, 352, 245, -267, 249, 77, 250, 388, 251,
	214, 253, 254, 255, 225, 256, 257, 258, 381, 259,
	260, 261, 262, 335, 6, 298, -151, -171, -170, -168,
	84, 95, 40, 352, -169, 77, 131, 268, 246, 269,
	-188, -238, 64, 358, 219, 89, 90, 340, -239, -387,
	-389, -223, -389, -223, -387, -387, -266, -248, -95, -94,
	-172, -192, -192, -126, -129, -388, -223, 219, 20, 20,
	-210, 524, 73, 395, -96, -364, -318, -315, -314, -317,
	399, 277, 405, -254, -210, -146, -223, 73, 360, 73,
	315, 68, 136, -332, -248, -308, 235, 136, -189, -220,
	-220, -214, 131, -220, -220, -220, -220, 252, 252, -220,
	-220, -220, -220, -220, -220, -220, -220, -220, -220, -220,
	-220, -220, -220, 67, -168, 84, -244, 73, -176, -177,
	40, 267, 263, -178, 40, 247, 248, -180, 67, 275,
	13, 90, 90, -154, 67, 65, 285, 67, 67, 67,
	-389, 68, -96, -308, -125, 68, 68, 136, 67, 20,
	-340, 525, -373, 398, -367, -365, 393, 394, 395, 396,
	68, -316, 97, 365, 369, -248, 34, 381, -274, -273,
	-120, 68, -309, 284, 20, -189, 79, 79, -220, -220,
	79, 73, 73, 73, -220, -220, 79, 73, -225, 79,
	79, 79, 79, 40, 73, -179, 40, 263, 267, 264,
	265, 266, 79, 40, 79, 40, 79, 40, -223, 67,
	-393, -394, 73, 79, 67, -354, -272, 67, -271, -390,
	302, 303, 304, 306, 305, -390, -271, -271, -271, 67,
	-294, -293, 276, 95, -309, -126, -223, 219, -211, -223,
	-368, 73, -375, 217, -371, -372, 397, -365, 20, 395,
	20, 20, -316, 520, 403, 404, 403, 404, 73, -275,
	225, 77, 479, 300, 301, -120, 20, -310, 277, 278,
	-311, -322, 280, -174, -174, 73, 73, -175, 246, -156,
	68, 136, 104, 68, -248, -258, -183, -182, 475, -271,
	68, 68, 68, 68, -271, 276, 68, 136, -382, 67,
	79, -370, -369, -371, 20, -368, 20, -368, -368, 94,
	-220, 73, 299, -207, 67, -320, 281, 67, -318, 67,
	-318, 90, 303, 247, 248, 68, -394, 73, 68, -187,
	-185, -186, 64, 409, 273, 274, 68, -274, -274, -274,
	-274, 68, -223, -386, 30, 68, -381, -380, -208, -376,
	-223, 398, 399, 73, -368, -316, 79, -223, -307, -312,
	282, 79, -244, 67, -244, 67, -319, 279, 67, -293,
	-186, 64, -185, 64, 14, 13, -188, -385, -384, -383,
	68, 136, 135, 68, -324, 67, 20, 68, -307, 68,
	-307, 67, 104, -244, -184, 270, 271, 30, 146, -184,
	136, 104, -380, -223, -325, -323, 235, -311, 68, 68,
	68, -307, 79, 68, 84, 40, 272, -384, 40, -248,
	135, 68, 136, -223, -321, 283, 68, -223, -323, -326,
	46, 79, -330, -327, 67, -189, 237, 114, -330, -189,
	-329, -328, 282, 238, 67, 68, 136, -223, 234, 67,
	-254, -328, -327, -254, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 685, 686, 687, 688, 689, 0, 0,
	0, 456, 457, 0, 433, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 357, 298, 299, 300, 301, 302, 0,
	233, 229, 208, 209, 210, 169, 170, 171, 172, 240,
	241, 312, 0, 0, 0, 0, 0, 542, -2, 35,
	690, 691, 692, 693, 694, 695, -2, 469, 0, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 287,
	288, 289, 283, 284, 286, 285, -2, 0, 469, 222,
	0, 213, 213, 0, 0, 0, 562, 0, 0, 577,
	599, 33, 0, 0, 520, 0, 525, 908, 944, 945,
	946, 947, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 520, 234, 458, 459, 562,
	562, 431, 0, 269, 0, 1394, 273, 0, 0, 0,
	428, 264, 265, 266, 267, 268, 0, 684, 0, 0,
	260, 0, 228, 1453, 0, 0, 0, 0, 0, 0,
	113, 758, 115, 760, 119, 126, 0, 0, 131, 132,
	135, 136, 137, 138, 139, 0, 143, 0, 145, 148,
	0, 150, 151, 0, 154, 155, 156, 0, 166, 167,
	168, 761, 762, 763, -2, 44, 698, 1319, 1214, 0,
	1221, 1222, 1233, 1244, 1017, 1018, 1019, 1020, 0, 0,
	0, 0, 0, 1027, 1028, 0, 1040, 1548, 0, 1034,
	1035, 1036, 1037, 53, 65, 66, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 0, 1187, 1004, 944,
	0, 1556, 0, 1576, 1575, 0, 0, 1172, 0, 1162,
	0, 0, -2, -2, 0, 0, 1520, -2, 1553, 1572,
	1580, 1557, 1579, 1550, 1551, 1545, 1546, 1547, 1549, 1558,
	1560, 1571, 0, 1567, 1577, 1578, 0, 67, 68, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1178, -2, 1180, 1181, 1183, 1184, 1185, 1186,
	-2, 1189, 1190, 1191, -2, -2, 1194, 1195, 1196, 1197,
	1198, 1199, 1202, -2, 1204, -2, -2, 1174, 1175, 1176,
	1177, 1166, 1167, 1168, 1169, 1170, 1171, -2, -2, -2,
	0, 206, 204, 562, 635, 0, -2, 0, 0, 0,
	582, 585, 588, 591, 0, 36, 37, 0, 0, 790,
	790, 790, 790, 790, 0, 790, 0, 0, 0, 765,
	766, 767, 788, 789, 814, 474, 470, 471, 472, 473,
	550, 0, 552, 555, 409, 359, 0, 0, 0, 371,
	365, 0, 0, 409, 0, 0, 557, 557, 0, 419,
	409, 409, -2, 409, 409, 409, 0, 376, 377, 378,
	365, 0, 365, 382, 383, 384, 395, 396, 420, 1343,
	0, 0, 312, 312, 0, 312, 312, 476, 223, 224,
	212, 214, 0, 218, 0, 211, 1453, 0, 0, 180,
	1520, 185, 0, 1401, 1467, 1416, 0, 0, 1434, 0,
	-2, 0, 250, 557, 0, 563, 0, 562, 0, 0,
	312, 312, 312, 312, 312, 312, 312, 0, 0, 312,
	0, 0, 600, 601, 596, 597, 598, 602, 603, 3,
	0, 0, 486, 0, 524, 0, 0, 557, -2, 0,
	432, 270, 948, 0, 0, 274, 275, 0, 0, 290,
	0, 293, 278, 279, 280, 0, 0, 262, 263, 0,
	0, 230, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 123, 120, 127, 130, 140, 147, 0, 159,
	161, 164, 121, 128, 133, 134, 141, 162, 122, 124,
	125, 129, 163, 165, 142, 146, 160, 144, 149, 152,
	153, 158, 0, 94, 0, 0, 0, 0, 0, 1220,
	0, 0, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1214, 0,
	0, 1023, 1024, 1025, 1026, 1029, 0, 1041, 0, 0,
	0, 1273, 0, 1212, 1212, 0, 1212, 1208, 0, 0,
	1212, 1150, 0, 0, 1152, 1163, 0, 0, 0, 1156,
	1157, 1212, 0, 1212, 1161, 1146, 1147, 0, 1208, 1208,
	0, 0, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
	1208, 1208, 1208, 1208, 0, 1320, 1338, 1275, 1276, 1277,
	1325, 1279, 1329, 1329, 1329, 1329, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 0, 0, 1318, 1298, 1327,
	1327, 1327, 1325, 1322, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1332, 1332,
	1335, 1332, 0, 557, 0, 0, 545, 0, 526, 0,
	579, 581, 0, 583, 584, 586, 587, 589, 590, 592,
	593, 38, 0, 697, 0, 700, 0, 0, 0, 0,
	0, 0, 0, 0, 790, 790, 790, 476, 475, 0,
	551, 0, 0, 608, 0, 0, 0, 365, 409, 370,
	367, 366, 415, 416, 412, 0, 412, 608, 0, 389,
	390, 391, 409, 409, 397, 558, 398, 399, 412, 0,
	417, 418, 0, 608, 608, 0, 406, 407, 408, 0,
	0, 790, 0, 367, 380, 367, 1344, 1345, 0, 0,
	0, 0, 427, 0, 0, 0, 477, 0, 0, 216,
	0, 221, 173, 0, 0, 0, 0, 0, 0, 202,
	203, 0, 0, 0, 0, 0, 193, 196, 902, 903,
	755, 756, 197, 198, 242, 243, 0, 526, 578, 580,
	574, 575, 576, 0, 0, 0, 0, 0, 0, 0,
	454, 0, 0, 616, 610, 612, 679, 53, 616, 0,
	0, 0, 499, 0, 493, 0, 0, 0, 909, 478,
	512, 480, 0, 501, 526, 548, 526, 0, 271, 0,
	276, 0, 0, 292, 294, 295, 296, 281, 282, 429,
	258, 259, 251, 252, 253, 254, 255, 256, 257, 261,
	63, 0, 231, 232, 0, 0, 0, 107, 108, 109,
	110, 111, 112, 114, 98, 446, 448, 747, 759, 0,
	750, 0, 117, 157, 90, 0, 0, 1215, 1216, 1217,
	1218, 1219, 1223, 0, 1225, 1227, 1229, 1231, 0, 1249,
	-2, -2, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1234, 1247, 1248, 0, 0, 0,
	0, 0, 0, 1245, 1245, 1240, 0, 1021, 0, 1038,
	1042, 0, 0, 0, 54, 1207, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 0, 1213, 0, 1214, 0,
	0, 0, 1209, 1210, 0, 0, 1111, 1112, 1113, 0,
	507, 0, 1173, 1151, 1164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 1341, 1339, 1340, 1278, 1326, 0, 1303, 0, 1304,
	1305, 1306, 0, 0, 1299, 0, 1300, 1301, 1302, 1294,
	0, 1295, 1296, 0, 1297, 205, 634, 636, 0, 516,
	518, 519, 0, 546, 559, 564, 565, 568, 34, 39,
	0, 702, 0, 555, 0, 0, 714, 310, 741, 0,
	0, 757, 780, 786, 0, 0, 0, 0, 553, 0,
	0, 648, 358, 0, 410, 411, 362, 1453, 367, 608,
	372, 368, 373, 0, 414, 374, 375, 0, 608, 608,
	409, 412, 412, 402, 403, 0, 421, 425, 422, 0,
	424, 379, 381, 555, 307, 0, 0, 310, 731, 621,
	0, 622, 623, 619, 650, 674, 674, 0, 674, 654,
	908, 225, 226, 0, 0, 220, 174, 175, 0, 177,
	178, 179, 186, 181, 183, 0, 0, 187, 199, 200,
	201, 0, 0, 0, 191, 192, 0, 0, 245, 246,
	248, 0, 544, 444, 445, 449, 0, 451, 906, 452,
	453, 702, 736, 608, 0, 617, 0, 613, 680, 0,
	682, 0, 608, 536, 0, 528, 485, 0, 512, 501,
	0, 0, 486, 505, 0, 522, 479, 509, 0, 513,
	0, 0, 484, 502, 0, 547, 549, 949, 0, 277,
	291, 0, 0, 0, 0, 101, 744, 0, 102, 106,
	96, 0, 0, 0, 749, 0, 746, 751, 0, 116,
	0, 0, 91, 92, 805, 810, 0, 1224, 1226, 1228,
	1230, 1232, 0, 1235, 1245, 1245, 1241, 0, 1236, 0,
	1238, 0, 1215, 0, 1043, 0, 0, 0, 0, 0,
	0, 1099, 1100, 0, 0, 1104, 0, 1106, 0, 0,
	0, 1110, 0, 1149, 1165, 1153, 1154, 0, 1158, 0,
	1160, 0, 562, 0, 1077, 1077, 0, 0, 0, 0,
	1077, 0, 0, 0, 0, 0, 0, 0, 0, 1321,
	1274, 1342, 0, 0, 0, 1323, 0, 0, 0, 0,
	0, 637, 528, 0, 0, 0, 571, 569, 570, 0,
	0, 703, 704, 706, 707, 0, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1386, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 701, 0, 791,
	721, 1346, 314, 0, 0, 743, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 463, 467, 33, 556,
	0, 609, 360, 0, 361, 409, 369, 413, 608, 908,
	392, 393, 608, 409, 409, 412, 0, 423, 0, 721,
	1346, 0, 0, 314, 728, 0, 0, 0, 0, 0,
	0, 641, 0, 0, 640, 0, 0, 0, 0, 0,
	555, 675, 0, 677, 678, 652, -2, 0, 621, 657,
	1212, 227, 215, 217, 0, 0, 0, 0, 188, 189,
	190, 194, 195, 244, 247, 249, 0, 0, 0, 606,
	611, 618, 681, 683, 54, 614, 606, 40, 0, 0,
	532, 0, 0, 492, 498, 0, 490, 486, 0, 0,
	0, 521, 0, 512, 514, 0, 512, 0, 0, 0,
	0, 430, 64, 297, 0, 0, 0, 0, 0, 447,
	0, 748, 98, 0, 0, 118, 0, 0, 808, 0,
	810, 1211, 1237, 1239, 0, 1246, 1242, 1022, 1030, 1039,
	0, 0, 1045, 1057, 1057, 0, 1048, 1329, 1329, 1051,
	1325, 1327, 1325, 1057, 1057, 0, 55, 0, 0, 1105,
	0, 0, 0, 508, 0, 0, 0, 1075, 1077, 1081,
	0, 1082, 1077, 1077, 1077, 1077, 1087, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1331, 1330, 1316, 0, 1317,
	1328, 1333, 0, 1336, 0, 517, 532, 560, 561, 566,
	567, 0, 0, 0, 0, 708, 0, 724, 722, 723,
	0, 1347, 738, 315, 316, 317, 318, 0, 0, 0,
	742, 0, 488, 0, 781, 782, 783, 784, 785, -2,
	794, 0, 800, 0, 910, 910, 910, 520, 0, -2,
	0, 0, 465, 0, 0, 649, 363, 608, 385, 0,
	400, 608, 608, 409, 426, 0, 724, 0, 0, 0,
	738, 730, 0, 732, 733, 0, 0, 608, 237, 0,
	644, 638, 0, 627, 642, 643, 630, 0, 632, 0,
	628, 629, 608, 620, 651, 676, 653, 656, 658, 659,
	665, 0, 0, 0, 0, 219, 176, 0, 334, 182,
	450, 907, 455, 604, 0, 0, 604, 537, 536, 534,
	78, 0, 0, 0, 487, 0, 0, 506, 512, 0,
	523, 510, 0, 515, 512, 483, 482, 503, 504, 950,
	272, 0, 745, 98, 103, 104, 105, 99, 97, 752,
	0, 754, 0, 806, 810, 0, 0, 1243, 1044, 1031,
	1046, 1058, 1059, 1047, 1032, 1049, 1050, 1052, 1053, 1054,
	1055, 1056, 1033, 1101, 0, 1103, 1107, 1108, 0, 1155,
	1159, 0, 0, 0, 1080, 1073, 1083, 1084, 1085, 1086,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1324, 0,
	0, 534, 572, 573, 696, 0, 705, 0, 712, 713,
	0, 0, 716, 717, 726, 0, 0, 0, 320, 321,
	0, 0, 0, 333, 329, 330, 331, 311, 737, 728,
	0, 0, 795, 1346, 1346, 1346, 0, 0, 911, 912,
	914, 915, 0, 0, 917, 974, 0, 926, 790, 926,
	0, 0, 928, 929, 0, 0, 674, 0, 0, 608,
	464, 467, 468, 554, 364, 608, 404, 401, 608, 303,
	304, 0, 0, 305, 309, 729, 734, 735, 562, 0,
	0, 624, 645, 0, 0, 625, 0, 626, 631, 633,
	236, 660, 0, 0, 662, 663, 664, 655, 184, 594,
	0, 0, 615, 595, 41, 536, 0, 533, 79, 0,
	0, 0, 0, 494, 491, 512, 497, 496, 0, 511,
	481, 100, 95, 753, 486, 809, 811, 807, 0, 1109,
	0, 1077, 1076, 562, 1074, 0, 1334, 1337, 536, 0,
	711, 709, 725, 715, 0, 739, 740, 0, 322, 323,
	0, 326, 332, 727, 489, 0, 0, 0, 0, 787,
	-2, 0, -2, 916, 975, 938, 938, 927, 938, 938,
	790, 0, 0, -2, 608, 608, -2, 461, 466, 0,
	386, 405, 308, 306, 557, 238, 239, 646, 0, 639,
	669, 666, 0, 0, 605, 607, 538, 535, 0, 529,
	531, 89, 500, 495, 487, 81, 1102, 1148, 1079, 1070,
	0, 538, 0, 0, 0, 319, 324, 0, 327, 328,
	0, 776, 1325, 0, 796, 797, 904, 905, 798, 815,
	-2, 858, 1346, 1346, 0, 1346, 1346, 1346, 1346, 0,
	0, 1346, 1346, 1346, 1346, 1346, 1346, 1346, 1346, 1346,
	1346, 1346, 1346, 1346, 1346, 0, 913, 940, -2, 953,
	955, 0, 0, 958, 959, 0, 0, 0, 0, 996,
	965, 0, 0, 969, 0, 1261, 1262, 0, 973, 0,
	930, 939, 0, 939, 0, 0, 938, 0, 802, 81,
	815, 562, 462, 235, 0, 0, 670, 672, 667, 668,
	42, 0, 80, 0, 51, 72, 0, 0, 1071, 0,
	1065, 1066, 1067, 1072, 527, 0, 710, 718, 0, 720,
	325, 769, 0, 568, 0, 817, 0, 799, 860, 0,
	0, 1346, 1346, 0, 0, 0, 0, 1346, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 954, 956, 957, 960, 961, 962,
	1001, 1002, 1003, 963, 998, 999, 1000, 964, 0, 0,
	0, 1259, 1260, 994, 0, 0, 0, 0, 0, 0,
	0, 924, 804, 817, 557, 647, 661, 0, 0, 0,
	43, 0, 69, 0, 82, 83, 0, 0, 0, 0,
	1078, 1068, 0, 0, 0, 0, 0, 719, 768, 777,
	778, 568, 801, 0, 854, 859, 861, 862, 0, 0,
	865, 866, 867, 868, 0, 0, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 896, 897, 898, 899,
	900, 901, 881, 882, 883, 884, 885, 886, 893, 0,
	0, 890, 0, 0, 0, 1162, 989, 0, 0, 931,
	933, 934, 935, 936, 937, 932, 0, 0, 0, 0,
	923, 925, 970, 0, 803, 460, 671, 673, 0, 540,
	530, 52, 56, 0, 78, 75, 0, 84, 0, 0,
	0, 0, 0, 1060, 1061, 1063, 1062, 1064, 699, 770,
	1346, 0, 0, 774, 775, 779, 0, 842, 0, 0,
	848, 0, 855, 863, 864, 869, 870, 887, 0, 0,
	889, 0, 0, 997, 0, 968, 977, 990, 0, 0,
	769, 769, 769, 769, 0, 971, 539, 0, 45, 0,
	0, 73, 74, 76, 0, 85, 0, 87, 88, 0,
	0, 772, 0, 818, 0, 820, 0, 0, 0, 0,
	0, 852, 0, 894, 895, 888, 891, 892, 966, 976,
	978, 979, 0, 991, 992, 993, 995, 918, 919, 920,
	921, 0, 541, 812, 0, 57, 0, 59, 61, 62,
	941, 70, 71, 77, 86, 1069, 771, 773, 0, 822,
	0, 843, 0, 0, 0, 0, 0, 0, 0, 967,
	980, 0, 981, 0, 0, 0, 922, 46, 47, 0,
	58, 0, 0, 819, 816, 0, 854, 844, 0, 846,
	0, 0, 0, 0, 982, 984, 985, 0, 0, 983,
	0, 0, 60, 942, 0, 824, 0, 840, 845, 847,
	849, 0, 853, 851, 986, 988, 987, 48, 49, 50,
	0, 823, 0, 836, 821, 0, 850, 943, 825, -2,
	0, 841, 826, -2, 0, 834, 0, 0, 827, 835,
	0, 830, 0, 0, 0, 829, 0, -2, 837, 0,
	0, 831, -2, 0, 839, 838,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 532,
	105, 104, 106, 3, 533, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 534, 117, 535, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:640
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:646
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:681
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:686
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:692
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:712
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:718
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:725
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:733
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:739
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:748
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:757
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:767
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:789
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[11].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:803
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:810
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:814
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:820
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:824
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:830
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:837
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:845
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:849
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:863
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:867
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:871
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:884
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:890
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:899
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:910
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:914
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:920
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:924
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:930
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:934
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:940
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:964
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:983
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:987
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:991
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1000
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1015
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1022
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1027
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1034
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1039
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1043
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1067
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1071
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1077
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1083
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1101
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1118
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1141
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1145
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1149
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1154
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1158
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1164
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1177
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1188
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1201
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1205
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1215
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1228
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1241
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1247
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1253
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1260
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1268
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1304
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1308
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1314
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1321
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1330
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1334
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1340
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1344
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1348
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1352
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1356
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1360
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1364
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1368
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1372
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1376
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1380
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1384
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1388
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1392
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1396
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1400
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1404
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1408
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1412
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1416
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1420
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1424
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1428
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1432
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1436
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1440
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1444
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1448
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1452
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1456
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1460
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1464
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1468
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1472
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1476
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1480
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1484
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1488
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1492
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1496
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1500
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1504
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1508
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1512
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1516
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1520
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1524
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1528
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1532
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1536
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1548
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1555
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1562
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1571
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1601
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1605
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1609
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1615
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1621
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1625
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1632
		{
			yyVAL.str = yyDollar[3].str
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1638
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1642
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1648
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1656
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1665
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1673
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1681
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1704
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1727
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1734
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1741
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1749
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1756
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1763
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1780
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1786
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1790
		{
			yyVAL.str = yyDollar[1].str
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1796
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1800
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1806
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1810
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1821
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1827
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1856
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1860
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1864
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1870
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1874
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1878
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1887
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1892
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1898
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1905
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1918
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1925
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1935
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1942
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1953
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1964
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1968
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1984
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1990
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1994
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2000
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2006
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2010
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2014
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2018
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2024
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2036
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2042
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2046
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2052
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2056
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2062
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2068
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2078
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2084
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2088
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2092
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2096
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2100
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2104
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2112
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2120
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2130
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2171
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2175
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2181
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2187
		{
			yyVAL.str = yyDollar[1].str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2192
		{
			yyVAL.str = "true"
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2193
		{
			yyVAL.str = "false"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2194
		{
			yyVAL.str = yyDollar[1].str
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2199
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2213
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2244
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2253
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2259
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2270
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2285
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2299
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2303
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2319
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2323
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2327
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2331
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2335
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2339
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2347
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2351
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2355
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2359
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2363
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2367
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2371
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2375
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2379
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2385
		{
			yyVAL.item = nil
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2390
		{
			yyVAL.item = nil
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2424
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2429
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2433
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2437
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2450
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2461
		{
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2465
		{
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2470
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2485
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2518
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2522
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2526
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2530
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2534
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2538
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2542
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2546
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2550
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2556
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2563
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2573
		{
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2575
		{
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2584
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2594
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2603
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2607
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2611
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2617
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2623
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2635
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2645
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2657
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2661
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2667
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2679
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2693
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2699
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2706
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2711
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2715
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2719
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2724
		{
			yyVAL.str = ""
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2728
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2734
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2747
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2751
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2757
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2762
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2766
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2770
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2776
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2780
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2786
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2792
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2796
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2800
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2806
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2810
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2831
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2840
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2849
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2853
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2859
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2868
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2877
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2899
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2905
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2922
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2927
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2934
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2950
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2963
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2974
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2978
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2984
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2989
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2996
		{
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2998
		{
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3001
		{
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3010
		{
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3014
		{
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3019
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3028
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3035
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3041
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3049
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3063
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3083
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3092
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3096
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3104
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3110
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3114
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3120
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3128
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3134
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3141
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3150
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3158
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3166
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3186
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3190
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3195
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3199
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3203
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3209
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3218
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3222
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3228
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3232
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3238
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3242
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3248
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3253
		{
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3264
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3268
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3284
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3290
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3294
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3300
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3304
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3313
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3333
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3340
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3358
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3377
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3383
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3390
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3394
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3407
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3411
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3416
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3420
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3427
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3432
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3445
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3465
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3471
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3478
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3487
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3491
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3497
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3505
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3509
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3514
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3518
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3524
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3528
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3532
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3541
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3547
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3553
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3557
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3563
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3568
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3572
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3576
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3581
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3585
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3589
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3595
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3599
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3603
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3617
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3621
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3631
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3641
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3651
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3663
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3671
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3679
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3688
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3696
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3712
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3728
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3736
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3744
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3752
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3762
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3773
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3787
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3791
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3795
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3800
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3804
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3808
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3821
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3830
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3839
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3845
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3849
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3855
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3859
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3864
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3868
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3873
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3881
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3887
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3895
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3903
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3913
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3919
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3928
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3937
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3946
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3956
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3960
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3970
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3974
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3978
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3982
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3988
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3998
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4002
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4008
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4018
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4024
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4030
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4034
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4038
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4048
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4054
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4058
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4064
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4068
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4074
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4078
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4088
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4101
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4107
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4113
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4126
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4144
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4148
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4154
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4164
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4168
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4172
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4177
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4181
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4185
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4189
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4198
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4202
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4206
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4210
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4215
		{
			yyVAL.str = ""
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4219
		{
			yyVAL.str = yyDollar[1].str
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4223
		{
			yyVAL.str = yyDollar[2].str
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4229
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4235
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4239
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4243
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4247
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4251
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4257
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4288
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4298
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4304
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 699:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4311
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4323
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4328
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4334
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4341
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4345
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4351
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4357
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4361
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4365
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4371
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4377
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4383
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4394
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4406
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4412
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4422
		{
			yyVAL.str = yyDollar[1].str
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4426
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4432
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4439
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4445
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4453
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4459
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4466
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4474
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4480
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4489
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4501
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4512
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4516
		{
			yyVAL.str = yyDollar[2].str
		}
	case 730:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4522
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4536
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4542
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4554
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4563
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4572
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4577
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4583
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4591
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4697
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4701
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4707
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4717
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4721
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4727
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4737
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4741
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4745
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4750
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4754
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4760
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4767
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4773
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4782
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4789
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4798
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4802
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4808
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4822
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4826
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4830
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4835
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4839
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4843
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4847
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4853
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4872
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4876
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4902
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4906
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4910
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4914
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4920
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4924
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4930
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4935
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4940
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4944
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4948
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4952
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4956
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4962
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:4973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:4977
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4987
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4991
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5000
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5006
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5010
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5016
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5020
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5024
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5029
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5033
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5039
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5051
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5060
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5073
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5080
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5090
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5098
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5109
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5113
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5118
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5122
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5129
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5140
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5144
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5153
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5167
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5174
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5185
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5198
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5204
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5208
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5214
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5223
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5237
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5243
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5247
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5253
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5260
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5269
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5273
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5278
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5282
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5287
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5291
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5296
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5300
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5310
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5314
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5325
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5333
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5341
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5349
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5360
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5369
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5379
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5389
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5393
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5398
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5402
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5411
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5417
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5421
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5425
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5431
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5435
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5439
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5443
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5447
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5451
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5456
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5460
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5464
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5468
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5472
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5476
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5480
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5488
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5492
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5496
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5500
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5504
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5508
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5512
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5516
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5520
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5524
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5528
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5532
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5536
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5540
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5544
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5551
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5555
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5561
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5566
		{
			yyVAL.str = ""
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5570
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5574
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5580
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5584
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5588
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5592
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5596
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5600
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5614
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5618
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5627
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5632
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5638
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5645
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5649
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5655
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5659
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5665
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5677
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5683
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5692
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5701
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5724
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5733
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5743
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5751
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5757
		{
			yyVAL.str = ""
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5761
		{
			yyVAL.str = yyDollar[1].str
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5771
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5777
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5783
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5797
		{
			yyVAL.str = ""
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5801
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5807
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5813
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5817
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5821
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5827
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5831
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5835
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5839
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5845
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5849
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5853
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5862
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5868
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5872
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5878
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5882
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5886
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5890
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5894
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5898
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5903
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5907
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5911
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5915
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5919
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5923
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5927
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5931
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5944
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5950
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5954
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5959
		{
			yyVAL.str = ""
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5963
		{
			yyVAL.str = yyDollar[1].str
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5969
		{
			yyVAL.str = ""
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5973
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5979
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5991
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5998
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6005
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6012
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6019
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6028
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6034
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6040
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6044
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6048
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6052
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6056
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6061
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6068
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6072
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6076
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6085
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6090
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6094
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6110
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6116
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6120
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6124
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6128
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6132
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6136
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6140
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6144
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6148
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6152
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6156
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6160
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6164
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6170
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6174
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6178
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6182
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6186
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6190
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6194
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6198
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6202
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6206
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6210
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6214
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6219
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6227
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6232
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6236
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6245
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6249
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6253
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6257
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6266
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6275
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6281
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6285
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6291
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6301
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6318
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6335
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6348
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6361
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6373
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6387
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6402
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6417
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6434
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6449
		{
		}
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6455
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6459
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6463
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6469
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6473
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6481
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6485
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6489
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6495
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6502
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6511
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6515
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6522
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6531
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6536
		{
			yyVAL.str = ","
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6540
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6545
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6549
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6559
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6570
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6580
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6589
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6598
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6608
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6618
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6628
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6638
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6648
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6658
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6668
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6678
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6688
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6698
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6708
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6718
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6735
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6743
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6751
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6759
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6767
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6777
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6785
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6794
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6805
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6815
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6827
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6838
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6860
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6896
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6908
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6920
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6931
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6939
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6946
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6953
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6965
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6973
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6981
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6992
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7001
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7010
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7018
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7028
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7036
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7050
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7060
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7079
		{
		}
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7081
		{
		}
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7122
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7133
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7137
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7141
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7147
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7156
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7162
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7166
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7173
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7177
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7181
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7189
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7193
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7197
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7201
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7207
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7211
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7215
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7219
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7223
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7227
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7231
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7235
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7239
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7243
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7251
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7255
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7259
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7263
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7267
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7271
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7275
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7279
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7283
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7287
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7297
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7303
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7307
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7314
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7318
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7322
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7328
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7332
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7336
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7340
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7344
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7348
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7352
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7358
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7362
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7366
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7370
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7376
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7380
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7393
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7398
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7402
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7406
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7410
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7414
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7418
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7432
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7436
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7443
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7454
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7459
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7465
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7477
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7489
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7501
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7514
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7527
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7540
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7553
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7566
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7579
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7592
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7605
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7618
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7631
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7646
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7669
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7707
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7755
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7772
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7784
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7804
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7824
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7844
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7860
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7873
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7886
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7899
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7912
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7924
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7936
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7948
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7960
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7972
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7984
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7996
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8008
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8033
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8046
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8061
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8069
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8078
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8088
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8111
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8116
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8122
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8129
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8133
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8138
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8142
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8148
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8154
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8161
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8168
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8177
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default scale for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8184
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8191
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8204
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8208
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8214
		{
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8216
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8226
		{
			yyVAL.str = ""
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8230
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

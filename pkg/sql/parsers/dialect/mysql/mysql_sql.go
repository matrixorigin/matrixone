// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const SEQUENCE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const CONSTRAINT = 57547
const SPATIAL = 57548
const FULLTEXT = 57549
const FOREIGN = 57550
const KEY_BLOCK_SIZE = 57551
const SHOW = 57552
const DESCRIBE = 57553
const EXPLAIN = 57554
const DATE = 57555
const ESCAPE = 57556
const REPAIR = 57557
const OPTIMIZE = 57558
const TRUNCATE = 57559
const MAXVALUE = 57560
const PARTITION = 57561
const REORGANIZE = 57562
const LESS = 57563
const THAN = 57564
const PROCEDURE = 57565
const TRIGGER = 57566
const STATUS = 57567
const VARIABLES = 57568
const ROLE = 57569
const PROXY = 57570
const AVG_ROW_LENGTH = 57571
const STORAGE = 57572
const DISK = 57573
const MEMORY = 57574
const CHECKSUM = 57575
const COMPRESSION = 57576
const DATA = 57577
const DIRECTORY = 57578
const DELAY_KEY_WRITE = 57579
const ENCRYPTION = 57580
const ENGINE = 57581
const MAX_ROWS = 57582
const MIN_ROWS = 57583
const PACK_KEYS = 57584
const ROW_FORMAT = 57585
const STATS_AUTO_RECALC = 57586
const STATS_PERSISTENT = 57587
const STATS_SAMPLE_PAGES = 57588
const DYNAMIC = 57589
const COMPRESSED = 57590
const REDUNDANT = 57591
const COMPACT = 57592
const FIXED = 57593
const COLUMN_FORMAT = 57594
const AUTO_RANDOM = 57595
const RESTRICT = 57596
const CASCADE = 57597
const ACTION = 57598
const PARTIAL = 57599
const SIMPLE = 57600
const CHECK = 57601
const ENFORCED = 57602
const RANGE = 57603
const LIST = 57604
const ALGORITHM = 57605
const LINEAR = 57606
const PARTITIONS = 57607
const SUBPARTITION = 57608
const SUBPARTITIONS = 57609
const CLUSTER = 57610
const TYPE = 57611
const ANY = 57612
const SOME = 57613
const EXTERNAL = 57614
const LOCALFILE = 57615
const URL = 57616
const PREPARE = 57617
const DEALLOCATE = 57618
const RESET = 57619
const EXTENSION = 57620
const INCREMENT = 57621
const CYCLE = 57622
const MINVALUE = 57623
const PUBLICATION = 57624
const SUBSCRIPTIONS = 57625
const PUBLICATIONS = 57626
const PROPERTIES = 57627
const PARSER = 57628
const VISIBLE = 57629
const INVISIBLE = 57630
const BTREE = 57631
const HASH = 57632
const RTREE = 57633
const BSI = 57634
const ZONEMAP = 57635
const LEADING = 57636
const BOTH = 57637
const TRAILING = 57638
const UNKNOWN = 57639
const EXPIRE = 57640
const ACCOUNT = 57641
const ACCOUNTS = 57642
const UNLOCK = 57643
const DAY = 57644
const NEVER = 57645
const PUMP = 57646
const MYSQL_COMPATBILITY_MODE = 57647
const SECOND = 57648
const ASCII = 57649
const COALESCE = 57650
const COLLATION = 57651
const HOUR = 57652
const MICROSECOND = 57653
const MINUTE = 57654
const MONTH = 57655
const QUARTER = 57656
const REPEAT = 57657
const REVERSE = 57658
const ROW_COUNT = 57659
const WEEK = 57660
const REVOKE = 57661
const FUNCTION = 57662
const PRIVILEGES = 57663
const TABLESPACE = 57664
const EXECUTE = 57665
const SUPER = 57666
const GRANT = 57667
const OPTION = 57668
const REFERENCES = 57669
const REPLICATION = 57670
const SLAVE = 57671
const CLIENT = 57672
const USAGE = 57673
const RELOAD = 57674
const FILE = 57675
const TEMPORARY = 57676
const ROUTINE = 57677
const EVENT = 57678
const SHUTDOWN = 57679
const NULLX = 57680
const AUTO_INCREMENT = 57681
const APPROXNUM = 57682
const SIGNED = 57683
const UNSIGNED = 57684
const ZEROFILL = 57685
const ENGINES = 57686
const LOW_CARDINALITY = 57687
const ADMIN_NAME = 57688
const RANDOM = 57689
const SUSPEND = 57690
const ATTRIBUTE = 57691
const HISTORY = 57692
const REUSE = 57693
const CURRENT = 57694
const OPTIONAL = 57695
const FAILED_LOGIN_ATTEMPTS = 57696
const PASSWORD_LOCK_TIME = 57697
const UNBOUNDED = 57698
const SECONDARY = 57699
const USER = 57700
const IDENTIFIED = 57701
const CIPHER = 57702
const ISSUER = 57703
const X509 = 57704
const SUBJECT = 57705
const SAN = 57706
const REQUIRE = 57707
const SSL = 57708
const NONE = 57709
const PASSWORD = 57710
const MAX_QUERIES_PER_HOUR = 57711
const MAX_UPDATES_PER_HOUR = 57712
const MAX_CONNECTIONS_PER_HOUR = 57713
const MAX_USER_CONNECTIONS = 57714
const FORMAT = 57715
const VERBOSE = 57716
const CONNECTION = 57717
const TRIGGERS = 57718
const PROFILES = 57719
const LOAD = 57720
const INFILE = 57721
const TERMINATED = 57722
const OPTIONALLY = 57723
const ENCLOSED = 57724
const ESCAPED = 57725
const STARTING = 57726
const LINES = 57727
const ROWS = 57728
const IMPORT = 57729
const MODUMP = 57730
const OVER = 57731
const PRECEDING = 57732
const FOLLOWING = 57733
const GROUPS = 57734
const DATABASES = 57735
const TABLES = 57736
const SEQUENCES = 57737
const EXTENDED = 57738
const FULL = 57739
const PROCESSLIST = 57740
const FIELDS = 57741
const COLUMNS = 57742
const OPEN = 57743
const ERRORS = 57744
const WARNINGS = 57745
const INDEXES = 57746
const SCHEMAS = 57747
const NODE = 57748
const LOCKS = 57749
const TABLE_NUMBER = 57750
const COLUMN_NUMBER = 57751
const TABLE_VALUES = 57752
const TABLE_SIZE = 57753
const NAMES = 57754
const GLOBAL = 57755
const SESSION = 57756
const ISOLATION = 57757
const LEVEL = 57758
const READ = 57759
const WRITE = 57760
const ONLY = 57761
const REPEATABLE = 57762
const COMMITTED = 57763
const UNCOMMITTED = 57764
const SERIALIZABLE = 57765
const LOCAL = 57766
const EVENTS = 57767
const PLUGINS = 57768
const CURRENT_TIMESTAMP = 57769
const DATABASE = 57770
const CURRENT_TIME = 57771
const LOCALTIME = 57772
const LOCALTIMESTAMP = 57773
const UTC_DATE = 57774
const UTC_TIME = 57775
const UTC_TIMESTAMP = 57776
const REPLACE = 57777
const CONVERT = 57778
const SEPARATOR = 57779
const TIMESTAMPDIFF = 57780
const CURRENT_DATE = 57781
const CURRENT_USER = 57782
const CURRENT_ROLE = 57783
const SECOND_MICROSECOND = 57784
const MINUTE_MICROSECOND = 57785
const MINUTE_SECOND = 57786
const HOUR_MICROSECOND = 57787
const HOUR_SECOND = 57788
const HOUR_MINUTE = 57789
const DAY_MICROSECOND = 57790
const DAY_SECOND = 57791
const DAY_MINUTE = 57792
const DAY_HOUR = 57793
const YEAR_MONTH = 57794
const SQL_TSI_HOUR = 57795
const SQL_TSI_DAY = 57796
const SQL_TSI_WEEK = 57797
const SQL_TSI_MONTH = 57798
const SQL_TSI_QUARTER = 57799
const SQL_TSI_YEAR = 57800
const SQL_TSI_SECOND = 57801
const SQL_TSI_MINUTE = 57802
const RECURSIVE = 57803
const CONFIG = 57804
const DRAINER = 57805
const MATCH = 57806
const AGAINST = 57807
const BOOLEAN = 57808
const LANGUAGE = 57809
const WITH = 57810
const QUERY = 57811
const EXPANSION = 57812
const ADDDATE = 57813
const BIT_AND = 57814
const BIT_OR = 57815
const BIT_XOR = 57816
const CAST = 57817
const COUNT = 57818
const APPROX_COUNT_DISTINCT = 57819
const APPROX_PERCENTILE = 57820
const CURDATE = 57821
const CURTIME = 57822
const DATE_ADD = 57823
const DATE_SUB = 57824
const EXTRACT = 57825
const GROUP_CONCAT = 57826
const MAX = 57827
const MID = 57828
const MIN = 57829
const NOW = 57830
const POSITION = 57831
const SESSION_USER = 57832
const STD = 57833
const STDDEV = 57834
const MEDIAN = 57835
const STDDEV_POP = 57836
const STDDEV_SAMP = 57837
const SUBDATE = 57838
const SUBSTR = 57839
const SUBSTRING = 57840
const SUM = 57841
const SYSDATE = 57842
const SYSTEM_USER = 57843
const TRANSLATE = 57844
const TRIM = 57845
const VARIANCE = 57846
const VAR_POP = 57847
const VAR_SAMP = 57848
const AVG = 57849
const RANK = 57850
const NEXTVAL = 57851
const SETVAL = 57852
const CURRVAL = 57853
const LASTVAL = 57854
const ARROW = 57855
const ROW = 57856
const OUTFILE = 57857
const HEADER = 57858
const MAX_FILE_SIZE = 57859
const FORCE_QUOTE = 57860
const PARALLEL = 57861
const UNUSED = 57862
const BINDINGS = 57863
const DO = 57864
const DECLARE = 57865
const KILL = 57866
const QUERY_RESULT = 57867

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8958

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 101,
	21, 575,
	-2, 556,
	-1, 110,
	215, 778,
	-2, 849,
	-1, 131,
	42, 400,
	215, 400,
	242, 407,
	243, 407,
	421, 400,
	-2, 433,
	-1, 457,
	291, 91,
	396, 91,
	-2, 1419,
	-1, 520,
	67, 1225,
	-2, 1559,
	-1, 521,
	67, 1243,
	-2, 1530,
	-1, 525,
	67, 1244,
	-2, 1558,
	-1, 548,
	67, 1157,
	-2, 1618,
	-1, 549,
	67, 1158,
	-2, 1617,
	-1, 550,
	67, 1159,
	-2, 1607,
	-1, 551,
	67, 1582,
	-2, 1602,
	-1, 552,
	67, 1583,
	-2, 1603,
	-1, 553,
	67, 1584,
	-2, 1609,
	-1, 554,
	67, 1585,
	-2, 1592,
	-1, 555,
	67, 1586,
	-2, 1600,
	-1, 556,
	67, 1587,
	-2, 1610,
	-1, 557,
	67, 1588,
	-2, 1611,
	-1, 558,
	67, 1589,
	-2, 1616,
	-1, 559,
	67, 1590,
	-2, 1621,
	-1, 560,
	67, 1591,
	-2, 1622,
	-1, 562,
	67, 1222,
	-2, 1411,
	-1, 569,
	67, 1231,
	-2, 1437,
	-1, 573,
	67, 1235,
	-2, 1476,
	-1, 574,
	67, 1236,
	-2, 1554,
	-1, 582,
	67, 1246,
	-2, 1539,
	-1, 584,
	67, 1248,
	-2, 1549,
	-1, 585,
	67, 1249,
	-2, 1573,
	-1, 596,
	67, 1135,
	-2, 1612,
	-1, 597,
	67, 1136,
	-2, 1613,
	-1, 598,
	67, 1137,
	-2, 1614,
	-1, 605,
	21, 576,
	-2, 539,
	-1, 664,
	416, 433,
	417, 433,
	-2, 401,
	-1, 713,
	104, 1411,
	115, 1411,
	135, 1411,
	-2, 1386,
	-1, 751,
	21, 576,
	-2, 539,
	-1, 850,
	21, 575,
	-2, 1040,
	-1, 1192,
	67, 1293,
	-2, 1556,
	-1, 1193,
	67, 1294,
	-2, 1557,
	-1, 1649,
	68, 1372,
	136, 1372,
	-2, 1541,
	-1, 1650,
	68, 1372,
	136, 1372,
	-2, 1540,
	-1, 1651,
	68, 1350,
	136, 1350,
	-2, 1527,
	-1, 1652,
	68, 1351,
	136, 1351,
	-2, 1532,
	-1, 1653,
	68, 1352,
	136, 1352,
	-2, 1464,
	-1, 1654,
	68, 1353,
	136, 1353,
	-2, 1458,
	-1, 1655,
	68, 1354,
	136, 1354,
	-2, 1402,
	-1, 1656,
	68, 1355,
	136, 1355,
	-2, 1529,
	-1, 1657,
	68, 1356,
	136, 1356,
	-2, 1462,
	-1, 1658,
	68, 1357,
	136, 1357,
	-2, 1457,
	-1, 1659,
	68, 1358,
	136, 1358,
	-2, 1450,
	-1, 1661,
	68, 1361,
	136, 1361,
	-2, 1573,
	-1, 1662,
	68, 1341,
	136, 1341,
	-2, 1559,
	-1, 1663,
	68, 1370,
	136, 1370,
	-2, 1530,
	-1, 1664,
	68, 1370,
	136, 1370,
	-2, 1558,
	-1, 1665,
	68, 1370,
	136, 1370,
	-2, 1420,
	-1, 1666,
	68, 1368,
	136, 1368,
	-2, 1549,
	-1, 1667,
	68, 1365,
	136, 1365,
	-2, 1442,
	-1, 1668,
	67, 1323,
	68, 1323,
	136, 1323,
	358, 1323,
	359, 1323,
	360, 1323,
	-2, 1401,
	-1, 1669,
	67, 1324,
	68, 1324,
	136, 1324,
	358, 1324,
	359, 1324,
	360, 1324,
	-2, 1403,
	-1, 1670,
	67, 1327,
	68, 1327,
	136, 1327,
	358, 1327,
	359, 1327,
	360, 1327,
	-2, 1531,
	-1, 1671,
	67, 1329,
	68, 1329,
	136, 1329,
	358, 1329,
	359, 1329,
	360, 1329,
	-2, 1514,
	-1, 1672,
	67, 1331,
	68, 1331,
	136, 1331,
	358, 1331,
	359, 1331,
	360, 1331,
	-2, 1463,
	-1, 1673,
	67, 1333,
	68, 1333,
	136, 1333,
	358, 1333,
	359, 1333,
	360, 1333,
	-2, 1446,
	-1, 1674,
	67, 1334,
	68, 1334,
	136, 1334,
	358, 1334,
	359, 1334,
	360, 1334,
	-2, 1447,
	-1, 1675,
	67, 1336,
	68, 1336,
	136, 1336,
	358, 1336,
	359, 1336,
	360, 1336,
	-2, 1400,
	-1, 1676,
	68, 1375,
	136, 1375,
	358, 1375,
	359, 1375,
	360, 1375,
	-2, 1425,
	-1, 1677,
	68, 1375,
	136, 1375,
	358, 1375,
	359, 1375,
	360, 1375,
	-2, 1438,
	-1, 1678,
	68, 1378,
	136, 1378,
	358, 1378,
	359, 1378,
	360, 1378,
	-2, 1421,
	-1, 1679,
	68, 1375,
	136, 1375,
	358, 1375,
	359, 1375,
	360, 1375,
	-2, 1499,
	-1, 1692,
	1, 806,
	68, 806,
	543, 806,
	-2, 813,
	-1, 1798,
	21, 575,
	-2, 667,
	-1, 1963,
	1, 807,
	68, 807,
	543, 807,
	-2, 813,
	-1, 1975,
	65, 483,
	136, 483,
	-2, 944,
	-1, 1993,
	276, 1008,
	-2, 987,
	-1, 2240,
	276, 1008,
	-2, 988,
	-1, 2365,
	88, 813,
	131, 813,
	168, 813,
	171, 813,
	-2, 892,
	-1, 2368,
	88, 813,
	131, 813,
	168, 813,
	171, 813,
	-2, 892,
	-1, 2378,
	65, 483,
	136, 483,
	-2, 945,
	-1, 2472,
	88, 813,
	131, 813,
	168, 813,
	171, 813,
	-2, 893,
	-1, 2760,
	68, 864,
	136, 864,
	-2, 813,
	-1, 2764,
	68, 864,
	136, 864,
	-2, 813,
	-1, 2778,
	68, 868,
	136, 868,
	-2, 813,
	-1, 2783,
	68, 869,
	136, 869,
	-2, 813,
}

const yyPrivate = 57344

const yyLast = 31922

var yyAct = [...]int{
	487, 2764, 1258, 1408, 2763, 2743, 2772, 1173, 2702, 2654,
	468, 1745, 489, 2672, 2694, 2439, 2530, 2444, 2252, 2613,
	1639, 2614, 2466, 2581, 2504, 2318, 2597, 2601, 1024, 2465,
	2524, 2464, 2319, 2546, 606, 2442, 461, 881, 1325, 2514,
	151, 151, 1368, 2492, 517, 1978, 151, 403, 410, 2471,
	2388, 410, 2217, 1176, 1169, 2434, 2057, 1470, 2348, 2058,
	2043, 2262, 2053, 1079, 1728, 2241, 1440, 2050, 470, 2056,
	1792, 1647, 2316, 1862, 2311, 1507, 1733, 421, 1538, 2294,
	2189, 466, 2079, 2192, 1483, 415, 2187, 2261, 1448, 408,
	31, 1701, 2215, 745, 712, 1645, 984, 459, 2097, 601,
	460, 1861, 465, 1515, 1411, 2136, 1903, 1964, 1335, 1534,
	1321, 1508, 1463, 643, 2093, 718, 1000, 1516, 1793, 1533,
	1781, 1946, 1942, 1443, 1997, 1729, 1700, 1257, 150, 150,
	3, 1405, 1032, 1343, 394, 722, 43, 1355, 1829, 601,
	919, 407, 19, 1167, 1172, 1002, 1535, 721, 30, 1108,
	151, 1316, 1566, 1643, 406, 7, 1441, 1088, 404, 8,
	100, 469, 405, 6, 1685, 1033, 1545, 1904, 1378, 1013,
	1467, 1627, 1222, 458, 1379, 1158, 716, 467, 399, 762,
	1206, 477, 43, 1514, 964, 1370, 1494, 1166, 1800, 704,
	1511, 396, 1058, 1354, 1396, 1009, 1071, 1228, 642, 1227,
	603, 423, 1326, 424, 16, 9, 4, 1025, 1107, 640,
	141, 2130, 2130, 409, 982, 1864, 659, 605, 1552, 144,
	1542, 146, 147, 2520, 2515, 2435, 670, 2317, 1339, 2590,
	876, 1510, 604, 882, 705, 614, 31, 2556, 747, 145,
	2457, 39, 133, 111, 782, 145, 1248, 39, 133, 111,
	1849, 1539, 2456, 1060, 392, 145, 145, 1857, 2565, 145,
	419, 39, 133, 111, 413, 145, 2159, 2645, 145, 1689,
	39, 133, 111, 1550, 1816, 1125, 1118, 743, 145, 138,
	2557, 145, 43, 145, 145, 816, 126, 1817, 19, 1481,
	139, 1122, 1115, 1021, 30, 99, 142, 685, 1451, 1452,
	684, 7, 142, 719, 1061, 8, 2690, 1944, 1143, 6,
	84, 1830, 1124, 1117, 2112, 1159, 142, 99, 1163, 2105,
	99, 680, 142, 420, 591, 142, 590, 592, 593, 615,
	594, 595, 809, 600, 1041, 142, 1392, 1042, 142, 2452,
	142, 142, 1162, 728, 723, 727, 729, 2688, 1175, 790,
	797, 1028, 792, 798, 814, 1027, 1030, 1031, 715, 714,
	1943, 1030, 1031, 1621, 2617, 2618, 819, 820, 821, 818,
	2591, 2592, 2676, 2677, 726, 2525, 2526, 2527, 2528, 2522,
	793, 800, 2098, 689, 2320, 2583, 134, 135, 2583, 136,
	137, 2099, 2586, 2100, 2518, 2320, 151, 755, 1244, 1844,
	686, 1178, 1241, 607, 756, 765, 1243, 1240, 1242, 1246,
	1247, 1464, 410, 410, 1245, 151, 2644, 2596, 1164, 754,
	1044, 1949, 731, 2329, 1456, 1154, 2349, 750, 752, 733,
	1546, 2356, 2203, 2201, 1772, 2193, 2538, 2125, 2462, 1161,
	110, 1684, 143, 1624, 1310, 1309, 724, 1937, 2259, 812,
	813, 1460, 786, 795, 110, 132, 143, 2047, 82, 688,
	2123, 1854, 131, 811, 2451, 785, 1019, 732, 2197, 1774,
	2453, 2541, 2459, 2208, 852, 788, 131, 125, 124, 2683,
	765, 1777, 749, 45, 753, 2198, 2199, 791, 794, 2692,
	454, 2214, 2221, 456, 2647, 2648, 777, 2553, 455, 822,
	2200, 2606, 1971, 773, 2616, 725, 1177, 1551, 851, 751,
	412, 787, 796, 411, 2408, 2602, 860, 1184, 1187, 1188,
	1053, 1479, 1480, 2687, 2757, 2773, 807, 808, 1185, 687,
	802, 2711, 2718, 803, 2656, 1008, 43, 43, 865, 2722,
	2572, 127, 128, 129, 1755, 717, 2401, 1160, 2276, 1251,
	1252, 1253, 1254, 1255, 1256, 1249, 1250, 1555, 1557, 1558,
	1754, 805, 2195, 719, 2506, 1955, 1043, 140, 2493, 2494,
	2495, 2497, 2496, 2652, 2653, 730, 2656, 2414, 2415, 758,
	759, 789, 799, 2697, 1067, 94, 767, 766, 1066, 130,
	2396, 95, 775, 1540, 418, 1958, 1959, 1960, 1961, 1540,
	1540, 1023, 1022, 1046, 2028, 2768, 2774, 1007, 1006, 2392,
	2744, 2547, 2780, 746, 2175, 1567, 2370, 981, 983, 985,
	774, 2333, 2129, 419, 2580, 770, 771, 1059, 1850, 2081,
	2083, 1807, 719, 801, 1543, 2128, 990, 961, 1737, 994,
	993, 2183, 643, 2555, 96, 992, 1554, 414, 2554, 760,
	854, 855, 856, 857, 38, 1030, 1031, 782, 2138, 2137,
	858, 767, 766, 637, 638, 639, 1734, 1737, 997, 806,
	2085, 913, 1020, 1806, 1805, 2646, 1804, 1029, 1064, 1454,
	1263, 40, 2593, 2594, 1136, 1137, 151, 1026, 1055, 1455,
	1553, 1803, 804, 1541, 604, 1453, 1030, 1031, 1948, 2698,
	691, 40, 1062, 1063, 692, 2458, 2693, 601, 601, 601,
	40, 2479, 1083, 1083, 112, 151, 986, 987, 988, 989,
	112, 991, 1858, 1465, 2194, 995, 2204, 2539, 2126, 2767,
	112, 112, 410, 983, 112, 1111, 1111, 2723, 781, 1976,
	112, 817, 776, 112, 693, 1090, 2505, 1186, 2196, 1120,
	2226, 1952, 1953, 112, 1741, 2291, 112, 2287, 112, 112,
	892, 893, 681, 1738, 782, 1951, 1081, 1081, 2463, 1141,
	1832, 1110, 1110, 1140, 1051, 608, 1085, 1457, 1155, 1126,
	2779, 1139, 1083, 681, 1083, 755, 2082, 1556, 97, 98,
	102, 2366, 1738, 2786, 1633, 695, 717, 1731, 2397, 2398,
	1017, 1732, 1735, 1089, 1459, 2212, 1849, 1174, 1035, 1036,
	2741, 1038, 1039, 1040, 966, 1791, 1010, 1014, 1014, 1014,
	1939, 1977, 1015, 1016, 2695, 2696, 1749, 968, 2029, 2031,
	2032, 2033, 2030, 2394, 2785, 1116, 605, 2393, 1010, 1123,
	1010, 2776, 683, 694, 1837, 682, 1818, 697, 696, 1371,
	1371, 999, 1497, 1736, 1179, 1180, 1181, 1182, 1183, 1150,
	1977, 817, 1054, 683, 1226, 1539, 682, 2758, 1045, 1723,
	1047, 736, 741, 742, 1266, 1267, 1268, 1276, 1034, 1740,
	1638, 1037, 698, 1598, 1744, 1742, 1597, 1282, 1283, 1743,
	2753, 2747, 817, 1171, 2746, 2727, 43, 2704, 1224, 1225,
	1290, 1291, 817, 1065, 1260, 43, 1077, 1078, 1637, 2777,
	1157, 1149, 1270, 601, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1168, 1189, 1146, 2213,
	1217, 1218, 1145, 392, 1152, 1548, 1127, 1091, 1602, 1132,
	2666, 1074, 1075, 1076, 1112, 1104, 2624, 1105, 819, 820,
	821, 818, 2619, 1530, 817, 2574, 1790, 1311, 2754, 1548,
	1128, 1332, 1548, 1548, 2573, 2705, 605, 1687, 1477, 1791,
	2291, 1285, 998, 1495, 1148, 1147, 1144, 819, 820, 821,
	818, 1220, 1165, 1068, 2570, 151, 1170, 1353, 1083, 1357,
	1333, 1359, 1360, 2157, 1275, 1259, 151, 1262, 2569, 643,
	1337, 1011, 1369, 2706, 1341, 1277, 1083, 1344, 2667, 1577,
	1055, 2568, 2381, 2567, 2543, 403, 1284, 2542, 1286, 2355,
	2543, 1336, 1636, 2575, 1215, 1216, 1208, 2416, 2278, 2227,
	1476, 782, 1705, 2095, 1391, 819, 820, 821, 818, 738,
	739, 740, 1397, 1397, 2076, 1055, 1055, 1979, 1055, 1323,
	1324, 151, 2543, 1353, 1353, 1395, 1352, 1083, 1438, 1450,
	1928, 1926, 1791, 1686, 1852, 1924, 2543, 1358, 1261, 601,
	1922, 1083, 1314, 1350, 1317, 1318, 1909, 608, 834, 2543,
	1576, 2543, 1851, 1843, 1364, 2543, 1720, 502, 101, 1361,
	1362, 1363, 1287, 1156, 779, 1818, 2279, 151, 1353, 1083,
	1012, 1488, 151, 151, 1491, 1865, 1847, 1493, 1337, 1593,
	1841, 1499, 1791, 1578, 1337, 1337, 1529, 1502, 1276, 1276,
	1518, 748, 1434, 1435, 1839, 1276, 1276, 2231, 1929, 1927,
	1525, 393, 1356, 1923, 101, 1349, 1834, 1704, 1923, 1403,
	1399, 1634, 1606, 1605, 817, 1461, 1380, 1306, 1382, 1383,
	1374, 1340, 1596, 1377, 1369, 1587, 1586, 1585, 1083, 1537,
	1328, 1388, 1331, 1334, 1547, 780, 780, 1485, 1386, 1387,
	1133, 1802, 1010, 817, 1705, 1129, 960, 1487, 1835, 863,
	1466, 1372, 1373, 768, 1385, 1484, 1489, 1490, 748, 1365,
	1484, 1484, 1840, 635, 962, 1014, 1531, 1366, 1519, 1389,
	2222, 1356, 1376, 1384, 1835, 1705, 1381, 1011, 2120, 1633,
	817, 817, 1560, 1003, 1401, 1072, 1402, 1004, 1390, 1400,
	817, 1393, 1394, 817, 817, 817, 1073, 2607, 2736, 1070,
	720, 2480, 1548, 2724, 101, 1513, 1746, 1398, 1134, 748,
	2292, 2283, 1513, 1168, 2373, 2371, 2280, 1439, 1474, 1475,
	1437, 837, 838, 839, 840, 841, 834, 1570, 1462, 2223,
	1574, 835, 836, 837, 838, 839, 840, 841, 834, 43,
	2608, 1471, 1472, 1473, 2481, 1482, 1265, 1264, 719, 1050,
	2131, 1052, 2048, 1056, 1057, 719, 1486, 2374, 2372, 1838,
	1809, 1603, 757, 1872, 1223, 1564, 1565, 2641, 1610, 1503,
	1584, 1223, 2224, 1573, 821, 818, 1012, 1351, 1591, 1522,
	1069, 1523, 1527, 1524, 1528, 1520, 818, 2404, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1604, 690, 1106, 1607,
	1608, 1609, 1532, 2403, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 2101, 2385, 1622, 2007, 2006, 2001, 459, 755,
	1680, 832, 842, 843, 835, 836, 837, 838, 839, 840,
	841, 834, 151, 151, 151, 1214, 1702, 1996, 1296, 1568,
	719, 1648, 1559, 2762, 2721, 454, 1709, 1055, 456, 2750,
	1211, 1213, 1210, 455, 1212, 1881, 1713, 1896, 1280, 1562,
	1563, 1561, 1208, 2712, 1572, 819, 820, 821, 818, 1281,
	1055, 2707, 2657, 1589, 1874, 2460, 2353, 755, 1706, 2632,
	2609, 959, 956, 957, 958, 2039, 2150, 1886, 2720, 1885,
	1884, 1882, 1747, 2037, 1750, 1751, 1752, 1753, 2558, 1727,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 2461, 2354, 1795, 1795, 1450, 1795,
	1694, 1695, 1696, 2516, 2038, 2035, 1588, 2486, 2025, 1724,
	2483, 2149, 2036, 819, 820, 821, 818, 1681, 2482, 2375,
	2352, 1640, 1641, 1620, 1712, 2202, 2178, 1083, 151, 819,
	820, 821, 818, 1883, 819, 820, 821, 818, 101, 101,
	720, 1581, 1629, 755, 2034, 2177, 1111, 2024, 1450, 2116,
	2023, 1824, 2022, 1826, 2021, 2018, 1748, 2012, 1337, 1337,
	1337, 2009, 2611, 2008, 1799, 1648, 1632, 1797, 1631, 1801,
	1722, 1642, 1717, 1688, 1630, 1718, 819, 820, 821, 818,
	1845, 1814, 1110, 1537, 1716, 819, 820, 821, 818, 1626,
	1083, 1625, 1083, 1130, 1083, 1710, 979, 2051, 2188, 755,
	825, 826, 827, 828, 829, 830, 831, 823, 2682, 850,
	2440, 1014, 2678, 1711, 1823, 1719, 1089, 819, 820, 821,
	818, 1859, 1714, 1715, 1721, 2642, 1288, 1289, 1083, 1890,
	1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 2578, 2540, 1897, 2301, 1855, 2600, 2517, 1083,
	2470, 2438, 1775, 2436, 2420, 2446, 2418, 1575, 719, 2044,
	1873, 1887, 1888, 819, 820, 821, 818, 2387, 1891, 1892,
	819, 820, 821, 818, 2351, 2350, 1894, 1895, 819, 820,
	821, 818, 1081, 2347, 2338, 1815, 2332, 1863, 1901, 1900,
	2286, 1889, 1810, 1811, 1812, 1822, 1820, 1876, 490, 499,
	2284, 2274, 2273, 1081, 491, 2182, 498, 492, 496, 495,
	493, 494, 1898, 1856, 819, 820, 821, 818, 2176, 2127,
	1337, 2088, 1870, 1932, 1933, 1344, 2026, 2019, 2445, 1848,
	1821, 2015, 1899, 1853, 1168, 2014, 2413, 1083, 2013, 1828,
	1956, 1930, 1846, 1635, 1353, 969, 1945, 547, 546, 2335,
	1975, 819, 820, 821, 818, 1628, 1981, 1504, 500, 819,
	820, 821, 818, 1905, 1346, 1866, 1867, 1880, 1910, 1131,
	1940, 1990, 819, 820, 821, 818, 891, 609, 610, 611,
	612, 1995, 887, 886, 864, 744, 2560, 2529, 497, 2368,
	608, 2003, 2004, 2005, 2367, 1869, 833, 832, 842, 843,
	835, 836, 837, 838, 839, 840, 841, 834, 2365, 1795,
	2010, 2011, 2342, 1966, 2341, 1600, 2016, 2017, 2337, 2040,
	1972, 2324, 1934, 2310, 1931, 1323, 1324, 2309, 1353, 755,
	1450, 1450, 1450, 1450, 2046, 2232, 1982, 2155, 1973, 1094,
	2148, 755, 1450, 31, 2140, 1795, 2135, 1965, 2092, 1993,
	1938, 2059, 1318, 1925, 1921, 1092, 1920, 1611, 1083, 1998,
	393, 1998, 145, 2059, 1601, 133, 111, 1599, 1595, 151,
	151, 1594, 1592, 1583, 1954, 1580, 1974, 1579, 1305, 1279,
	1999, 1356, 1278, 101, 1980, 1269, 1276, 101, 1276, 43,
	1095, 2111, 145, 1093, 2115, 19, 2775, 2072, 101, 2735,
	1083, 30, 1989, 2122, 1994, 1992, 1983, 101, 7, 2000,
	2153, 2729, 8, 1987, 1988, 2719, 6, 2716, 2714, 142,
	1337, 2631, 2576, 883, 1313, 1337, 2502, 2020, 2490, 1985,
	1328, 2487, 1331, 819, 820, 821, 818, 2428, 2426, 2411,
	2410, 1336, 2409, 2406, 2045, 2400, 2110, 2049, 1984, 142,
	2360, 1322, 1986, 1315, 1001, 2041, 2002, 2090, 2091, 2074,
	2071, 2134, 2108, 2075, 605, 2073, 1969, 1968, 2114, 1967,
	1327, 1330, 2089, 2143, 2106, 2145, 2152, 2086, 2119, 1319,
	2084, 2113, 1919, 2154, 1833, 2124, 2060, 2061, 2062, 2063,
	755, 2109, 2104, 2096, 2102, 884, 2191, 1808, 1770, 819,
	820, 821, 818, 2107, 1703, 1209, 2206, 142, 151, 2118,
	1492, 1348, 1648, 1320, 1153, 1119, 2132, 963, 755, 755,
	755, 2133, 911, 910, 909, 908, 907, 1450, 1702, 2151,
	2230, 906, 905, 904, 2139, 903, 2234, 902, 901, 900,
	1727, 1727, 1727, 2146, 2147, 899, 2144, 2263, 2265, 898,
	2263, 2263, 819, 820, 821, 818, 897, 2270, 896, 2160,
	895, 1083, 1083, 2161, 2162, 2163, 2164, 894, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 890, 2662, 1918, 889,
	2179, 2186, 888, 2141, 2142, 2184, 885, 880, 879, 2269,
	877, 876, 151, 2228, 875, 874, 2209, 2191, 873, 2407,
	2751, 819, 820, 821, 818, 1353, 1353, 872, 2260, 2264,
	2211, 2218, 2219, 871, 870, 1081, 1081, 2225, 1965, 2229,
	869, 2210, 868, 867, 2271, 2272, 866, 862, 861, 784,
	1708, 2238, 2295, 2296, 1691, 772, 2300, 2266, 2267, 1917,
	2660, 2615, 2065, 2064, 2298, 1957, 1890, 1916, 2268, 833,
	832, 842, 843, 835, 836, 837, 838, 839, 840, 841,
	834, 631, 819, 820, 821, 818, 1819, 2288, 2289, 1506,
	819, 820, 821, 818, 783, 2761, 2277, 2282, 1842, 151,
	1484, 2068, 2281, 2285, 1836, 2237, 2069, 1936, 2066, 1915,
	2180, 2181, 2299, 2067, 148, 1433, 1449, 842, 843, 835,
	836, 837, 838, 839, 840, 841, 834, 2185, 2306, 2307,
	2308, 2303, 819, 820, 821, 818, 1914, 83, 1307, 2233,
	42, 2315, 1831, 2235, 2236, 2070, 1913, 1787, 1788, 1640,
	1641, 2325, 2431, 1860, 2430, 388, 1682, 2334, 2326, 819,
	820, 821, 818, 41, 2336, 2327, 965, 1113, 2328, 819,
	820, 821, 818, 778, 2331, 720, 1912, 2595, 2339, 1353,
	1991, 389, 720, 1941, 390, 2364, 1911, 2330, 2429, 1698,
	1367, 101, 2669, 2361, 2362, 2363, 1795, 1450, 2378, 819,
	820, 821, 818, 1347, 633, 1773, 628, 391, 618, 819,
	820, 821, 818, 2290, 1436, 630, 629, 1265, 1264, 1083,
	977, 978, 2343, 1049, 2346, 2345, 1908, 1048, 2302, 967,
	151, 1907, 975, 976, 973, 974, 622, 971, 972, 2265,
	810, 2359, 2305, 1526, 1005, 2358, 2380, 2730, 2650, 819,
	820, 821, 818, 2638, 819, 820, 821, 818, 1353, 2636,
	2603, 2588, 755, 2377, 2587, 2585, 2376, 850, 2577, 609,
	610, 611, 612, 2389, 608, 2260, 2384, 627, 2513, 2512,
	2312, 626, 608, 2094, 2059, 2437, 2433, 616, 2340, 2322,
	1371, 621, 2321, 2313, 755, 2422, 2386, 970, 2117, 1337,
	2412, 1693, 2425, 2664, 2663, 2427, 1582, 769, 619, 2663,
	2417, 2419, 2664, 2454, 2402, 2323, 2059, 1018, 2405, 2432,
	2424, 2423, 1906, 50, 1478, 1087, 1, 2421, 1902, 617,
	1345, 755, 1083, 1083, 613, 2077, 2078, 755, 1893, 2473,
	2304, 2080, 2473, 634, 1544, 819, 820, 821, 818, 1871,
	2441, 819, 820, 821, 818, 1771, 1683, 2205, 996, 1727,
	636, 819, 820, 821, 818, 1271, 1138, 620, 735, 2455,
	764, 1135, 819, 820, 821, 818, 763, 755, 761, 2244,
	755, 755, 755, 2469, 2379, 1221, 1081, 2389, 2477, 2474,
	2382, 2476, 504, 2383, 2380, 2468, 1509, 1369, 2042, 2510,
	2509, 2668, 2701, 2254, 2630, 2671, 1151, 488, 2491, 2579,
	2521, 2499, 2500, 2501, 2447, 2634, 2247, 2488, 1219, 2523,
	2443, 2507, 2498, 2242, 1778, 1549, 815, 2537, 2257, 2258,
	2103, 655, 540, 515, 2243, 878, 1121, 632, 1114, 2508,
	2158, 819, 820, 821, 818, 737, 2549, 1783, 1786, 1787,
	1788, 1784, 514, 1785, 1789, 2357, 1950, 2534, 645, 2552,
	625, 755, 734, 656, 1623, 2535, 2519, 1308, 1329, 1312,
	2248, 2478, 2369, 755, 2545, 2544, 2220, 1970, 2771, 2760,
	2742, 2551, 2550, 2728, 1783, 1786, 1787, 1788, 1784, 2559,
	1785, 1789, 2566, 2655, 2561, 2756, 2562, 2686, 2717, 2450,
	2448, 2449, 2710, 2651, 2571, 1798, 425, 1458, 599, 702,
	2503, 1505, 426, 1707, 755, 2643, 2489, 623, 2589, 1690,
	681, 624, 2604, 1963, 2584, 2582, 1962, 1190, 824, 1207,
	2173, 2174, 2484, 2485, 859, 2599, 464, 1571, 2534, 476,
	1947, 2253, 2087, 2598, 49, 48, 2625, 2628, 47, 2605,
	46, 1498, 155, 506, 154, 1449, 2627, 2673, 2610, 2256,
	486, 1730, 485, 2629, 2620, 2621, 2622, 2623, 484, 483,
	482, 2637, 1782, 2639, 2640, 1780, 2635, 2633, 1779, 1445,
	1444, 1496, 1739, 1404, 2612, 2563, 2250, 2564, 2399, 2027,
	2395, 2649, 2391, 2275, 2472, 2239, 2240, 2246, 1697, 918,
	683, 914, 2675, 682, 2661, 2659, 2658, 916, 2249, 2251,
	917, 915, 1879, 2665, 2674, 1875, 1725, 1726, 2216, 980,
	2536, 755, 2344, 1646, 2679, 1644, 2681, 2297, 2680, 2293,
	2207, 1517, 1342, 1935, 1446, 1442, 1776, 668, 2700, 1692,
	2689, 2691, 75, 2684, 74, 646, 81, 123, 2534, 2699,
	2703, 37, 2475, 602, 2708, 32, 755, 27, 5, 29,
	28, 14, 15, 2709, 13, 1142, 934, 2733, 12, 18,
	26, 25, 673, 24, 93, 92, 2675, 2726, 1174, 23,
	91, 90, 89, 2259, 88, 755, 22, 755, 2674, 2725,
	11, 87, 2732, 86, 2734, 2245, 85, 21, 80, 78,
	20, 2255, 2738, 79, 2703, 76, 755, 1174, 77, 1174,
	2745, 61, 2752, 2749, 60, 2755, 833, 832, 842, 843,
	835, 836, 837, 838, 839, 840, 841, 834, 1174, 59,
	2759, 2740, 667, 666, 2766, 72, 71, 70, 2770, 2769,
	2713, 69, 2715, 68, 2778, 67, 66, 654, 2781, 665,
	2783, 1868, 2766, 2784, 2782, 58, 57, 2770, 644, 56,
	55, 101, 54, 73, 65, 64, 63, 62, 922, 647,
	676, 2737, 53, 52, 833, 832, 842, 843, 835, 836,
	837, 838, 839, 840, 841, 834, 942, 946, 948, 950,
	952, 953, 955, 671, 959, 956, 957, 958, 51, 109,
	937, 938, 939, 940, 920, 921, 943, 108, 923, 107,
	924, 925, 926, 927, 928, 929, 930, 931, 932, 933,
	935, 941, 106, 105, 104, 672, 677, 2731, 103, 945,
	947, 949, 951, 954, 33, 34, 35, 1449, 1449, 1449,
	1449, 36, 662, 119, 660, 664, 680, 118, 120, 1449,
	661, 658, 657, 122, 663, 648, 649, 650, 651, 652,
	653, 121, 678, 679, 116, 114, 936, 117, 115, 113,
	44, 10, 17, 2, 674, 675, 833, 832, 842, 843,
	835, 836, 837, 838, 839, 840, 841, 834, 0, 0,
	0, 845, 101, 849, 0, 0, 0, 0, 0, 101,
	0, 0, 0, 0, 0, 0, 0, 0, 846, 848,
	844, 669, 847, 833, 832, 842, 843, 835, 836, 837,
	838, 839, 840, 841, 834, 0, 0, 0, 0, 0,
	326, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 833, 832, 842, 843, 835, 836, 837, 838,
	839, 840, 841, 834, 478, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 513, 0, 0, 318, 272,
	2156, 0, 0, 0, 570, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 503,
	547, 546, 490, 499, 1877, 1878, 214, 153, 491, 101,
	498, 492, 496, 495, 493, 494, 0, 562, 0, 0,
	0, 0, 0, 0, 462, 475, 2531, 479, 0, 833,
	832, 842, 843, 835, 836, 837, 838, 839, 840, 841,
	834, 0, 0, 0, 1449, 0, 0, 0, 0, 0,
	472, 473, 0, 0, 0, 0, 523, 0, 474, 101,
	0, 518, 500, 501, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 497, 521, 525, 226, 584, 519, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 585, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 944,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 349, 0, 0, 568, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 520,
	0, 308, 290, 581, 463, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 566, 286,
	0, 0, 580, 561, 563, 564, 567, 571, 572, 573,
	574, 575, 577, 579, 583, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 1449, 202, 374, 0, 2532, 0,
	0, 1569, 2533, 0, 582, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 524, 276, 277, 278, 279, 569,
	0, 219, 373, 301, 833, 832, 842, 843, 835, 836,
	837, 838, 839, 840, 841, 834, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 591, 565, 590, 592, 593, 589, 594,
	595, 576, 481, 0, 528, 587, 586, 588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 554, 533, 534,
	535, 480, 536, 531, 532, 555, 526, 551, 552, 505,
	529, 537, 550, 538, 553, 556, 557, 596, 597, 544,
	598, 541, 558, 549, 548, 539, 527, 559, 560, 512,
	507, 542, 543, 530, 545, 508, 509, 510, 511, 326,
	522, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 513, 0, 0, 318, 272, 0,
	0, 0, 0, 570, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 503, 547,
	546, 490, 499, 0, 0, 214, 153, 491, 0, 498,
	492, 496, 495, 493, 494, 0, 562, 0, 0, 0,
	0, 0, 0, 462, 475, 0, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	473, 0, 0, 0, 0, 523, 0, 474, 0, 0,
	518, 500, 501, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 497, 521, 525, 226, 584, 519, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 585, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 349, 0, 0, 568, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 520, 0,
	308, 290, 581, 463, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 1273,
	1272, 1274, 361, 240, 197, 198, 344, 566, 286, 0,
	0, 580, 561, 563, 564, 567, 571, 572, 573, 574,
	575, 577, 579, 583, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 524, 276, 277, 278, 279, 569, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 591, 565, 590, 592, 593, 589, 594, 595,
	576, 481, 0, 528, 587, 586, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 554, 533, 534, 535,
	480, 536, 531, 532, 555, 526, 551, 552, 505, 529,
	537, 550, 538, 553, 556, 557, 596, 597, 544, 598,
	541, 558, 549, 548, 539, 527, 559, 560, 512, 507,
	542, 543, 530, 545, 508, 509, 510, 511, 326, 522,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 513, 0, 0, 318, 272, 0, 0,
	0, 0, 570, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 0, 0, 503, 547, 546,
	490, 499, 0, 0, 214, 153, 491, 0, 498, 492,
	496, 495, 493, 494, 0, 562, 0, 0, 0, 0,
	0, 0, 462, 475, 0, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 473,
	0, 0, 0, 0, 523, 0, 474, 0, 0, 518,
	500, 501, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	497, 521, 525, 226, 584, 519, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 585, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 349, 0, 0, 568, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 520, 0, 308,
	290, 581, 463, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 566, 286, 0, 0,
	580, 561, 563, 564, 567, 571, 572, 573, 574, 575,
	577, 579, 583, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 2532, 0, 0, 0,
	2533, 0, 582, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 524, 276, 277, 278, 279, 569, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 591, 565, 590, 592, 593, 589, 594, 595, 576,
	481, 0, 528, 587, 586, 588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 554, 533, 534, 535, 480,
	536, 531, 532, 555, 526, 551, 552, 505, 529, 537,
	550, 538, 553, 556, 557, 596, 597, 544, 598, 541,
	558, 549, 548, 539, 527, 559, 560, 512, 507, 542,
	543, 530, 545, 508, 509, 510, 511, 326, 522, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 0, 233, 1338, 0, 258, 0,
	0, 0, 513, 0, 0, 318, 272, 0, 0, 0,
	0, 570, 578, 0, 0, 0, 0, 0, 0, 0,
	1468, 0, 0, 471, 0, 0, 503, 547, 546, 490,
	499, 0, 0, 214, 153, 491, 0, 498, 492, 496,
	495, 493, 494, 0, 562, 0, 0, 0, 0, 0,
	0, 462, 475, 0, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 473, 0,
	0, 0, 0, 523, 0, 474, 0, 0, 1469, 500,
	501, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 497,
	521, 525, 226, 584, 519, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	585, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 349, 0, 0, 568, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 520, 0, 308, 290,
	581, 463, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 566, 286, 0, 0, 580,
	561, 563, 564, 567, 571, 572, 573, 574, 575, 577,
	579, 583, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 524, 276, 277, 278, 279, 569, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	591, 565, 590, 592, 593, 589, 594, 595, 576, 481,
	0, 528, 587, 586, 588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 554, 533, 534, 535, 480, 536,
	531, 532, 555, 526, 551, 552, 505, 529, 537, 550,
	538, 553, 556, 557, 596, 597, 544, 598, 541, 558,
	549, 548, 539, 527, 559, 560, 512, 507, 542, 543,
	530, 545, 508, 509, 510, 511, 145, 326, 522, 357,
	358, 359, 380, 343, 0, 230, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 853, 0, 0, 318, 272, 0, 0, 0,
	0, 570, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 503, 547, 546, 490,
	499, 0, 0, 214, 153, 491, 0, 498, 492, 496,
	495, 493, 494, 0, 562, 0, 0, 0, 0, 0,
	0, 462, 475, 0, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 473, 0,
	0, 0, 0, 523, 0, 474, 0, 0, 518, 500,
	501, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 497,
	521, 525, 226, 584, 519, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	585, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 349, 0, 0, 568, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 520, 0, 308, 290,
	581, 463, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 566, 286, 0, 0, 580,
	561, 563, 564, 567, 571, 572, 573, 574, 575, 577,
	579, 583, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 524, 276, 277, 278, 279, 569, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	591, 565, 590, 592, 593, 589, 594, 595, 576, 481,
	0, 528, 587, 586, 588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 112, 300, 238, 554, 533, 534, 535, 480, 536,
	531, 532, 555, 526, 551, 552, 505, 529, 537, 550,
	538, 553, 556, 557, 596, 597, 544, 598, 541, 558,
	549, 548, 539, 527, 559, 560, 512, 507, 542, 543,
	530, 545, 508, 509, 510, 511, 326, 522, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 0, 233, 2739, 0, 258, 0, 0,
	0, 513, 0, 0, 318, 272, 0, 0, 0, 0,
	570, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 503, 547, 546, 490, 499,
	0, 0, 214, 153, 491, 0, 498, 492, 496, 495,
	493, 494, 0, 562, 0, 0, 0, 0, 0, 0,
	462, 475, 0, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 473, 0, 0,
	0, 0, 523, 0, 474, 0, 0, 518, 500, 501,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 497, 521,
	525, 226, 584, 519, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 585,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 349, 0, 0, 568, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 520, 0, 308, 290, 581,
	463, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 566, 286, 0, 0, 580, 561,
	563, 564, 567, 571, 572, 573, 574, 575, 577, 579,
	583, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	524, 276, 277, 278, 279, 569, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 591,
	565, 590, 592, 593, 589, 594, 595, 576, 481, 0,
	528, 587, 586, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 554, 533, 534, 535, 480, 536, 531,
	532, 555, 526, 551, 552, 505, 529, 537, 550, 538,
	553, 556, 557, 596, 597, 544, 598, 541, 558, 549,
	548, 539, 527, 559, 560, 512, 507, 542, 543, 530,
	545, 508, 509, 510, 511, 326, 522, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 0, 233, 1338, 0, 258, 0, 0, 0,
	513, 0, 0, 318, 272, 0, 0, 0, 0, 570,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 0, 0, 503, 547, 546, 490, 499, 0,
	0, 214, 153, 491, 0, 498, 492, 496, 495, 493,
	494, 0, 562, 0, 0, 0, 0, 0, 0, 462,
	475, 0, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 473, 0, 0, 0,
	0, 523, 0, 474, 0, 0, 518, 500, 501, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 497, 521, 525,
	226, 584, 519, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 585, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	349, 0, 0, 568, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 520, 0, 308, 290, 581, 463,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 566, 286, 0, 0, 580, 561, 563,
	564, 567, 571, 572, 573, 574, 575, 577, 579, 583,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 524,
	276, 277, 278, 279, 569, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 591, 565,
	590, 592, 593, 589, 594, 595, 576, 481, 0, 528,
	587, 586, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 554, 533, 534, 535, 480, 536, 531, 532,
	555, 526, 551, 552, 505, 529, 537, 550, 538, 553,
	556, 557, 596, 597, 544, 598, 541, 558, 549, 548,
	539, 527, 559, 560, 512, 507, 542, 543, 530, 545,
	508, 509, 510, 511, 326, 522, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 513,
	0, 0, 318, 272, 0, 0, 0, 0, 570, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 0, 0, 503, 547, 546, 490, 499, 0, 0,
	214, 153, 491, 0, 498, 492, 496, 495, 493, 494,
	0, 562, 0, 0, 0, 0, 0, 0, 462, 475,
	0, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 473, 1109, 0, 0, 0,
	523, 0, 474, 0, 0, 518, 500, 501, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 497, 521, 525, 226,
	584, 519, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 585, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 349,
	0, 0, 568, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 520, 0, 308, 290, 581, 463, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 566, 286, 0, 0, 580, 561, 563, 564,
	567, 571, 572, 573, 574, 575, 577, 579, 583, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 524, 276,
	277, 278, 279, 569, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 591, 565, 590,
	592, 593, 589, 594, 595, 576, 481, 0, 528, 587,
	586, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 554, 533, 534, 535, 480, 536, 531, 532, 555,
	526, 551, 552, 505, 529, 537, 550, 538, 553, 556,
	557, 596, 597, 544, 598, 541, 558, 549, 548, 539,
	527, 559, 560, 512, 507, 542, 543, 530, 545, 508,
	509, 510, 511, 0, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 326, 522, 0, 0, 1590, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 513, 0,
	0, 318, 272, 0, 0, 0, 0, 570, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 503, 547, 546, 490, 499, 0, 0, 214,
	153, 491, 0, 498, 492, 496, 495, 493, 494, 0,
	562, 0, 0, 0, 0, 0, 0, 462, 475, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 473, 0, 0, 0, 0, 523,
	0, 474, 0, 0, 518, 500, 501, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 497, 521, 525, 226, 584,
	519, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 585, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 349, 0,
	0, 568, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 520, 0, 308, 290, 581, 463, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 566, 286, 0, 0, 580, 561, 563, 564, 567,
	571, 572, 573, 574, 575, 577, 579, 583, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 524, 276, 277,
	278, 279, 569, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 591, 565, 590, 592,
	593, 589, 594, 595, 576, 481, 0, 528, 587, 586,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	554, 533, 534, 535, 480, 536, 531, 532, 555, 526,
	551, 552, 505, 529, 537, 550, 538, 553, 556, 557,
	596, 597, 544, 598, 541, 558, 549, 548, 539, 527,
	559, 560, 512, 507, 542, 543, 530, 545, 508, 509,
	510, 511, 326, 522, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 513, 0, 0,
	318, 272, 0, 0, 0, 0, 570, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	0, 503, 547, 546, 490, 499, 0, 0, 214, 153,
	491, 0, 498, 492, 496, 495, 493, 494, 0, 562,
	0, 0, 0, 0, 0, 0, 462, 475, 0, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 473, 0, 0, 0, 0, 523, 0,
	474, 0, 0, 518, 500, 501, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 497, 521, 525, 226, 584, 519,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 585, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 516, 0, 0, 0, 349, 0, 0,
	568, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 520, 0, 308, 290, 581, 463, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	566, 286, 0, 0, 580, 561, 563, 564, 567, 571,
	572, 573, 574, 575, 577, 579, 583, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 524, 276, 277, 278,
	279, 569, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 591, 565, 590, 592, 593,
	589, 594, 595, 576, 481, 0, 528, 587, 586, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 554,
	533, 534, 535, 480, 536, 531, 532, 555, 526, 551,
	552, 505, 529, 537, 550, 538, 553, 556, 557, 596,
	597, 544, 598, 541, 558, 549, 548, 539, 527, 559,
	560, 512, 507, 542, 543, 530, 545, 508, 509, 510,
	511, 326, 522, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 1191, 0, 0, 0, 478, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 513, 0, 0, 318,
	272, 0, 0, 0, 0, 570, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 0, 0,
	503, 547, 546, 490, 499, 0, 0, 214, 153, 491,
	0, 498, 492, 496, 495, 493, 494, 0, 562, 0,
	0, 0, 0, 0, 0, 0, 475, 0, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 473, 0, 0, 0, 0, 523, 0, 474,
	0, 0, 518, 500, 501, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 497, 521, 525, 226, 584, 519, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 585, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 349, 0, 0, 568,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	520, 0, 308, 290, 581, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 1192, 1193, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 566,
	286, 0, 0, 580, 561, 563, 564, 567, 571, 572,
	573, 574, 575, 577, 579, 583, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 524, 276, 277, 278, 279,
	569, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 591, 565, 590, 592, 593, 589,
	594, 595, 576, 481, 0, 528, 587, 586, 588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 554, 533,
	534, 535, 480, 536, 531, 532, 555, 526, 551, 552,
	505, 529, 537, 550, 538, 553, 556, 557, 596, 597,
	544, 598, 541, 558, 549, 548, 539, 527, 559, 560,
	512, 507, 542, 543, 530, 545, 508, 509, 510, 511,
	326, 522, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 513, 0, 0, 318, 272,
	0, 0, 0, 0, 570, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	547, 546, 490, 499, 0, 0, 214, 153, 491, 0,
	498, 492, 496, 495, 493, 494, 0, 562, 0, 0,
	0, 0, 0, 0, 462, 475, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 473, 0, 0, 0, 0, 523, 0, 474, 0,
	0, 518, 500, 501, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 497, 521, 525, 226, 584, 519, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 585, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 349, 0, 0, 568, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 520,
	0, 308, 290, 581, 463, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 566, 286,
	0, 0, 580, 561, 563, 564, 567, 571, 572, 573,
	574, 575, 577, 579, 583, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 524, 276, 277, 278, 279, 569,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 591, 565, 590, 592, 593, 589, 594,
	595, 576, 481, 0, 528, 587, 586, 588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 554, 533, 534,
	535, 480, 536, 531, 532, 555, 526, 551, 552, 505,
	529, 537, 550, 538, 553, 556, 557, 596, 597, 544,
	598, 541, 558, 549, 548, 539, 527, 559, 560, 512,
	507, 542, 543, 530, 545, 508, 509, 510, 511, 326,
	522, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 513, 0, 0, 318, 272, 0,
	0, 0, 0, 570, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 503, 547,
	546, 490, 499, 0, 0, 214, 153, 491, 0, 498,
	492, 496, 495, 493, 494, 0, 562, 0, 0, 0,
	0, 0, 0, 0, 475, 0, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	473, 0, 0, 0, 0, 523, 0, 474, 0, 0,
	518, 500, 501, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 497, 521, 525, 226, 584, 519, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 585, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 349, 0, 0, 568, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 520, 0,
	308, 290, 581, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 566, 286, 0,
	0, 580, 561, 563, 564, 567, 571, 572, 573, 574,
	575, 577, 579, 583, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 524, 276, 277, 278, 279, 569, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 591, 565, 590, 592, 593, 589, 594, 595,
	576, 481, 0, 528, 587, 586, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 554, 533, 534, 535,
	480, 536, 531, 532, 555, 526, 551, 552, 505, 529,
	537, 550, 538, 553, 556, 557, 596, 597, 544, 598,
	541, 558, 549, 548, 539, 527, 559, 560, 512, 507,
	542, 543, 530, 545, 508, 509, 510, 511, 0, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 145, 326,
	39, 133, 111, 0, 0, 0, 0, 0, 0, 0,
	288, 397, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 398, 400,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	40, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 112, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 934, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	0, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 922,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 1668, 1670, 1671,
	1672, 1673, 1674, 1675, 0, 1679, 1676, 1677, 1678, 285,
	0, 1663, 1664, 1665, 1666, 920, 1649, 1669, 0, 1650,
	284, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1667, 296, 262, 297, 249, 274, 273, 275,
	945, 947, 949, 951, 954, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 1662, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	944, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 0, 193, 194, 195, 196, 326, 0, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 1734, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 349, 0, 0, 0, 1731, 0, 1730, 322,
	1732, 1735, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 1736, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 0, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1500,
	0, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 1501, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 819, 820, 821, 818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	0, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 701, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 709, 710, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 683, 347, 209, 682, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 699, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 700, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 703,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 711, 706, 707, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 145, 326, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	99, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 1521, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 112,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 145, 326, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	99, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 1512, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 112,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 145, 326, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	99, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1447, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 112,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 709, 710, 0, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 683, 347, 209, 682, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 711, 706, 707, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 0, 193,
	194, 195, 196, 326, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 2052, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 2055,
	0, 0, 2054, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 1086, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 1084, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 0,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 0, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	1080, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 1084, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1082, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 0, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2670, 0, 152,
	547, 0, 0, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 0, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 1084, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2390, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	1084, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1082,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 0, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 0, 193, 194, 195, 196, 326, 0, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 1796,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 0, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 1813, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 1084, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	0, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2748, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 547, 0, 0, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 0, 193,
	194, 195, 196, 326, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2685,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 0,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 2626, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 0, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2467, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 0, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 0, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 2511,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 0, 193, 194, 195, 196, 326,
	0, 0, 357, 358, 359, 380, 343, 0, 230, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 318, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 0, 0, 214, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 323, 339, 215, 314,
	352, 220, 321, 210, 287, 310, 0, 0, 207, 337,
	320, 269, 252, 253, 206, 0, 305, 231, 244, 227,
	285, 0, 336, 364, 226, 355, 0, 347, 209, 0,
	346, 284, 333, 338, 270, 264, 208, 335, 268, 263,
	256, 235, 379, 248, 296, 262, 297, 249, 274, 273,
	275, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 322, 0, 0, 257, 0, 0, 0, 365, 0,
	308, 290, 0, 0, 0, 306, 260, 334, 298, 340,
	324, 348, 302, 299, 200, 325, 229, 271, 211, 213,
	225, 232, 234, 236, 237, 280, 281, 293, 313, 327,
	328, 329, 228, 221, 307, 222, 246, 223, 201, 315,
	224, 203, 294, 332, 0, 242, 303, 267, 204, 266,
	295, 331, 330, 212, 356, 362, 363, 368, 0, 369,
	0, 0, 0, 377, 381, 382, 383, 385, 386, 387,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 361, 240, 197, 198, 344, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 360,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	251, 292, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 342, 354, 372,
	375, 0, 0, 0, 202, 374, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 370, 276, 277, 278, 279, 243, 0,
	219, 373, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 239, 245, 384, 247, 218, 291, 241, 351, 254,
	0, 378, 0, 0, 0, 0, 0, 283, 250, 316,
	255, 261, 304, 350, 289, 309, 216, 341, 317, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 259, 0, 300, 238, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 0, 193, 194, 195, 196, 326, 0,
	0, 357, 358, 359, 380, 343, 0, 230, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 318, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1447, 0, 0, 152, 0, 0,
	0, 0, 0, 0, 214, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 323, 339, 215, 314, 352,
	220, 321, 210, 287, 310, 0, 0, 207, 337, 320,
	269, 252, 253, 206, 0, 305, 231, 244, 227, 285,
	0, 336, 364, 226, 355, 0, 347, 209, 0, 346,
	284, 333, 338, 270, 264, 208, 335, 268, 263, 256,
	235, 379, 248, 296, 262, 297, 249, 274, 273, 275,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 0, 0, 0, 0,
	322, 0, 0, 257, 0, 0, 0, 365, 0, 308,
	290, 0, 0, 0, 306, 260, 334, 298, 340, 324,
	348, 302, 299, 200, 325, 229, 271, 211, 213, 225,
	232, 234, 236, 237, 280, 281, 293, 313, 327, 328,
	329, 228, 221, 307, 222, 246, 223, 201, 315, 224,
	203, 294, 332, 0, 242, 303, 267, 204, 266, 295,
	331, 330, 212, 356, 362, 363, 368, 0, 369, 0,
	0, 0, 377, 381, 382, 383, 385, 386, 387, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 361, 240, 197, 198, 344, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 360, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 251,
	292, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 342, 354, 372, 375,
	0, 0, 0, 202, 374, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 370, 276, 277, 278, 279, 243, 0, 219,
	373, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	239, 245, 384, 247, 218, 291, 241, 351, 254, 0,
	378, 0, 0, 0, 0, 0, 283, 250, 316, 255,
	261, 304, 350, 289, 309, 216, 341, 317, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 259, 0, 300, 238, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 0, 193, 194, 195, 196, 326, 0, 0,
	357, 358, 359, 380, 343, 0, 230, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 0, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 2190, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 302,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	0, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 1084, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 302, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 0, 193,
	194, 195, 196, 326, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 1796, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 0,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 0, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 0, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 1825, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 225, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 0, 193, 194, 195, 196, 0,
	0, 0, 357, 358, 359, 380, 343, 326, 230, 0,
	0, 1699, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 318, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 0, 0, 214, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 323, 339, 215, 314, 352, 220,
	321, 210, 287, 310, 0, 0, 207, 337, 320, 269,
	252, 253, 206, 0, 305, 231, 244, 227, 285, 0,
	336, 364, 226, 355, 0, 347, 209, 0, 346, 284,
	333, 338, 270, 264, 208, 335, 268, 263, 256, 235,
	379, 248, 296, 262, 297, 249, 274, 273, 275, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 257, 0, 0, 0, 365, 0, 308, 290,
	0, 0, 0, 306, 260, 334, 298, 340, 324, 348,
	302, 299, 200, 325, 229, 271, 211, 213, 225, 232,
	234, 236, 237, 280, 281, 293, 313, 327, 328, 329,
	228, 221, 307, 222, 246, 223, 201, 315, 224, 203,
	294, 332, 0, 242, 303, 267, 204, 266, 295, 331,
	330, 212, 356, 362, 363, 368, 0, 369, 0, 0,
	0, 377, 381, 382, 383, 385, 386, 387, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	361, 240, 197, 198, 344, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 360, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 251, 292,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 342, 354, 372, 375, 0,
	0, 0, 202, 374, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 370, 276, 277, 278, 279, 243, 0, 219, 373,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 239,
	245, 384, 247, 218, 291, 241, 351, 254, 0, 378,
	0, 0, 0, 0, 0, 283, 250, 316, 255, 261,
	304, 350, 289, 309, 216, 341, 317, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	259, 0, 300, 238, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 0, 193, 194, 195, 196, 326, 0, 0, 357,
	358, 359, 380, 343, 0, 230, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 318, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 1084, 0,
	0, 0, 214, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 323, 339, 215, 314, 352, 220, 321,
	210, 287, 310, 0, 0, 207, 337, 320, 269, 252,
	253, 206, 0, 305, 231, 244, 227, 285, 0, 336,
	364, 226, 355, 0, 347, 209, 0, 346, 284, 333,
	338, 270, 264, 208, 335, 268, 263, 256, 235, 379,
	248, 296, 262, 297, 249, 274, 273, 275, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 0, 0, 0, 0, 322, 0,
	0, 257, 0, 0, 0, 365, 0, 308, 290, 0,
	0, 0, 306, 260, 334, 298, 340, 324, 348, 1375,
	299, 200, 325, 229, 271, 211, 213, 225, 232, 234,
	236, 237, 280, 281, 293, 313, 327, 328, 329, 228,
	221, 307, 222, 246, 223, 201, 315, 224, 203, 294,
	332, 0, 242, 303, 267, 204, 266, 295, 331, 330,
	212, 356, 362, 363, 368, 0, 369, 0, 0, 0,
	377, 381, 382, 383, 385, 386, 387, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 361,
	240, 197, 198, 344, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 360, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 251, 292, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 342, 354, 372, 375, 0, 0,
	0, 202, 374, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	370, 276, 277, 278, 279, 243, 0, 219, 373, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 239, 245,
	384, 247, 218, 291, 241, 351, 254, 0, 378, 0,
	0, 0, 0, 0, 283, 250, 316, 255, 261, 304,
	350, 289, 309, 216, 341, 317, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 259,
	0, 300, 238, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	0, 193, 194, 195, 196, 326, 0, 0, 357, 358,
	359, 380, 343, 0, 230, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 318, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 0, 0,
	0, 214, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 323, 339, 215, 314, 352, 220, 321, 210,
	287, 310, 0, 0, 207, 337, 320, 269, 252, 253,
	206, 0, 305, 231, 244, 227, 285, 0, 336, 364,
	226, 355, 0, 347, 209, 0, 346, 284, 333, 338,
	270, 264, 208, 335, 268, 263, 256, 235, 379, 248,
	296, 262, 297, 249, 274, 273, 275, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	257, 0, 0, 0, 365, 0, 308, 290, 0, 0,
	0, 306, 260, 334, 298, 340, 324, 348, 302, 299,
	200, 325, 229, 271, 211, 213, 225, 232, 234, 236,
	237, 280, 281, 293, 313, 327, 328, 329, 228, 221,
	307, 222, 246, 223, 201, 315, 224, 203, 294, 332,
	0, 242, 303, 267, 204, 266, 295, 331, 330, 212,
	356, 362, 363, 368, 0, 369, 0, 0, 0, 377,
	381, 382, 383, 385, 386, 387, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 361, 240,
	197, 198, 344, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 360, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 251, 292, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 342, 354, 372, 375, 0, 0, 0,
	202, 374, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 370,
	276, 277, 278, 279, 243, 0, 219, 373, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 239, 245, 384,
	247, 218, 291, 241, 351, 254, 0, 378, 0, 0,
	0, 0, 0, 283, 250, 316, 255, 261, 304, 350,
	289, 309, 216, 341, 317, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 199, 0, 259, 0,
	300, 238, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 0,
	193, 194, 195, 196, 326, 0, 0, 357, 358, 359,
	380, 343, 0, 230, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 318, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 0, 0, 0, 0, 0, 0,
	214, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 323, 339, 215, 314, 352, 220, 321, 210, 287,
	310, 0, 0, 207, 337, 320, 269, 252, 253, 206,
	0, 305, 231, 244, 227, 285, 0, 336, 364, 226,
	355, 0, 347, 209, 0, 346, 284, 333, 338, 270,
	264, 208, 335, 268, 263, 256, 235, 379, 248, 296,
	262, 297, 249, 274, 273, 275, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 257,
	0, 0, 0, 365, 0, 308, 290, 0, 0, 0,
	306, 260, 334, 298, 340, 324, 348, 416, 299, 200,
	325, 229, 271, 211, 213, 225, 232, 234, 236, 237,
	280, 281, 293, 313, 327, 328, 329, 228, 221, 307,
	222, 246, 223, 201, 315, 224, 203, 294, 332, 0,
	242, 303, 267, 204, 266, 295, 331, 330, 212, 356,
	362, 363, 368, 0, 369, 0, 0, 0, 377, 381,
	382, 383, 385, 386, 387, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 361, 240, 197,
	198, 344, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 360, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 251, 292, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 342, 354, 372, 375, 0, 0, 0, 202,
	374, 0, 0, 0, 0, 0, 0, 417, 345, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 370, 276,
	277, 278, 279, 243, 0, 219, 373, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 239, 245, 384, 247,
	218, 291, 241, 351, 254, 0, 378, 0, 0, 0,
	0, 0, 283, 250, 316, 255, 261, 304, 350, 289,
	309, 216, 341, 317, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 259, 0, 300,
	238, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 0, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 0, 193,
	194, 195, 196, 326, 0, 0, 357, 358, 359, 380,
	343, 0, 230, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 318, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 214,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	323, 339, 215, 314, 352, 220, 321, 210, 287, 310,
	0, 0, 207, 337, 320, 269, 252, 253, 206, 0,
	305, 231, 244, 227, 285, 0, 336, 364, 226, 355,
	0, 347, 209, 0, 346, 284, 333, 338, 270, 264,
	208, 335, 268, 263, 256, 235, 379, 248, 296, 262,
	297, 249, 274, 273, 275, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 0, 349, 0,
	0, 0, 0, 0, 0, 322, 0, 0, 257, 0,
	0, 0, 365, 0, 308, 290, 0, 0, 0, 306,
	260, 334, 298, 340, 324, 348, 302, 299, 200, 325,
	229, 271, 211, 213, 225, 232, 234, 236, 237, 280,
	281, 293, 313, 327, 328, 329, 228, 221, 307, 222,
	246, 223, 201, 315, 224, 203, 294, 332, 0, 242,
	303, 267, 204, 266, 295, 331, 330, 212, 356, 362,
	363, 368, 0, 369, 0, 0, 0, 377, 381, 382,
	383, 385, 386, 387, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 361, 240, 197, 198,
	344, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 360, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 251, 292, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 342, 354, 372, 375, 0, 0, 0, 202, 374,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 370, 276, 277,
	278, 279, 243, 0, 219, 373, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 239, 245, 384, 247, 218,
	291, 241, 351, 254, 0, 378, 0, 0, 0, 0,
	0, 283, 250, 316, 255, 261, 304, 350, 289, 309,
	216, 341, 317, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 259, 0, 300, 238,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 193, 194,
	195, 196, 326, 0, 0, 357, 358, 359, 380, 343,
	0, 230, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	233, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	318, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 0, 0, 214, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 323,
	339, 215, 314, 352, 220, 321, 210, 287, 310, 0,
	0, 207, 337, 320, 269, 252, 253, 206, 0, 305,
	231, 244, 227, 285, 0, 336, 364, 226, 355, 0,
	347, 209, 0, 346, 284, 333, 338, 270, 264, 208,
	335, 268, 263, 256, 235, 379, 248, 296, 262, 297,
	249, 274, 273, 275, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 257, 0, 0,
	0, 365, 0, 308, 290, 0, 0, 0, 306, 260,
	334, 298, 340, 324, 348, 302, 299, 200, 325, 229,
	271, 211, 213, 225, 232, 234, 236, 237, 280, 281,
	293, 313, 327, 328, 329, 228, 221, 307, 222, 246,
	223, 201, 315, 224, 203, 294, 332, 0, 242, 303,
	267, 204, 266, 295, 331, 330, 212, 356, 362, 363,
	368, 0, 369, 0, 0, 0, 377, 381, 382, 383,
	385, 386, 387, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 361, 240, 197, 198, 344,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 360, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 251, 292, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	342, 354, 372, 375, 0, 0, 0, 202, 374, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 370, 276, 277, 278,
	279, 243, 0, 219, 373, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 239, 245, 384, 247, 218, 291,
	241, 351, 254, 0, 378, 0, 0, 0, 0, 0,
	283, 250, 316, 255, 261, 304, 350, 289, 309, 216,
	341, 317, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 259, 0, 300, 238, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 0, 193, 194, 195,
	196, 326, 0, 0, 357, 358, 359, 380, 343, 0,
	230, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 318,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 214, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 323, 339,
	215, 314, 352, 220, 321, 210, 287, 310, 0, 0,
	207, 337, 320, 269, 252, 253, 206, 0, 305, 231,
	244, 227, 285, 0, 336, 364, 226, 355, 0, 347,
	209, 0, 346, 284, 333, 338, 270, 264, 208, 335,
	268, 263, 256, 235, 379, 248, 296, 262, 297, 249,
	274, 273, 275, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 0, 0,
	0, 0, 0, 322, 0, 0, 257, 0, 0, 0,
	365, 0, 308, 290, 0, 0, 0, 306, 260, 334,
	298, 340, 324, 348, 302, 299, 200, 325, 229, 271,
	211, 213, 225, 232, 234, 236, 237, 280, 281, 293,
	313, 327, 328, 329, 228, 221, 307, 222, 246, 223,
	201, 315, 224, 203, 294, 332, 0, 242, 303, 267,
	204, 266, 295, 331, 330, 212, 356, 362, 363, 368,
	0, 369, 0, 0, 0, 377, 381, 382, 383, 385,
	386, 387, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 361, 240, 197, 198, 344, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 360, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 251, 292, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 342,
	354, 372, 375, 0, 0, 0, 202, 374, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 370, 276, 277, 278, 279,
	243, 0, 219, 373, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 239, 245, 384, 247, 218, 291, 241,
	351, 254, 0, 378, 0, 0, 0, 0, 0, 283,
	250, 316, 255, 261, 304, 350, 289, 309, 216, 341,
	317, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 259, 0, 300, 238, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 0, 193, 194, 195, 196,
	326, 0, 0, 357, 358, 359, 380, 343, 0, 230,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 318, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 0, 0, 0, 0, 214, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 323, 339, 215,
	314, 352, 220, 321, 210, 287, 310, 0, 0, 207,
	337, 320, 269, 252, 253, 206, 0, 305, 231, 244,
	227, 285, 0, 336, 364, 226, 355, 0, 347, 209,
	0, 346, 284, 333, 338, 270, 264, 208, 335, 268,
	263, 256, 235, 379, 248, 296, 262, 297, 249, 274,
	273, 275, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 0, 0,
	0, 0, 322, 0, 0, 257, 0, 0, 0, 365,
	0, 308, 290, 0, 0, 0, 306, 260, 334, 298,
	340, 324, 348, 302, 299, 200, 325, 229, 271, 211,
	213, 457, 232, 234, 236, 237, 280, 281, 293, 313,
	327, 328, 329, 228, 221, 307, 222, 246, 223, 201,
	315, 224, 203, 294, 332, 0, 242, 303, 267, 204,
	266, 295, 331, 330, 212, 356, 362, 363, 368, 0,
	369, 0, 0, 0, 377, 381, 382, 383, 385, 386,
	387, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 361, 240, 197, 198, 344, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	360, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 251, 292, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 342, 354,
	372, 375, 0, 0, 0, 202, 374, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 370, 276, 277, 278, 279, 243,
	0, 219, 373, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 239, 245, 384, 247, 218, 291, 241, 351,
	254, 0, 378, 0, 0, 0, 0, 0, 283, 250,
	316, 255, 261, 304, 350, 289, 309, 216, 341, 317,
	265, 934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 819, 820, 821, 818, 0,
	1248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 259, 0, 300, 238, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 934,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 0, 193, 194, 195, 196, 0,
	0, 1248, 357, 358, 359, 380, 343, 0, 230, 0,
	0, 0, 0, 922, 0, 0, 0, 912, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 942, 946, 948, 950, 952, 953, 955, 0, 959,
	956, 957, 958, 0, 0, 937, 938, 939, 940, 920,
	921, 943, 0, 923, 0, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 935, 941, 0, 0, 0,
	0, 0, 0, 0, 945, 947, 949, 951, 954, 0,
	0, 922, 1244, 0, 0, 0, 1241, 0, 0, 0,
	1243, 1240, 1242, 1246, 1247, 0, 0, 0, 1245, 942,
	946, 948, 950, 952, 953, 955, 0, 959, 956, 957,
	958, 936, 0, 937, 938, 939, 940, 920, 921, 943,
	0, 923, 1431, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 935, 941, 0, 0, 0, 0, 0,
	1431, 0, 945, 947, 949, 951, 954, 0, 0, 0,
	0, 0, 0, 1244, 0, 0, 1433, 1241, 0, 0,
	0, 1243, 1240, 1242, 1246, 1247, 0, 0, 0, 1245,
	0, 0, 0, 0, 1433, 0, 0, 0, 0, 936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 2765, 0, 0, 0, 0, 0, 0, 1431, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1251, 1252, 1253, 1254, 1255, 1256, 1249,
	1250, 0, 1433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 1431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1251, 1252, 1253, 1254, 1255, 1256,
	1249, 1250, 0, 0, 0, 0, 0, 1433, 0, 0,
	0, 0, 0, 1407, 0, 0, 1406, 0, 0, 0,
	0, 1417, 0, 0, 0, 0, 0, 0, 2548, 0,
	0, 0, 1421, 0, 0, 0, 0, 0, 0, 1417,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	1421, 0, 1410, 0, 944, 0, 1412, 1414, 1416, 0,
	1418, 1419, 1420, 1422, 1423, 1424, 1426, 1427, 1428, 1429,
	1410, 0, 0, 0, 1412, 1414, 1416, 0, 1418, 1419,
	1420, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 0, 0,
	0, 0, 0, 0, 0, 0, 436, 0, 435, 442,
	432, 0, 0, 0, 0, 0, 0, 1417, 1432, 0,
	439, 440, 0, 441, 445, 0, 0, 427, 1421, 0,
	0, 0, 944, 0, 0, 0, 1432, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 1412, 1414, 1416, 1430, 1418, 1419, 1420, 1422,
	1423, 1424, 1426, 1427, 1428, 1429, 454, 0, 0, 456,
	0, 0, 1409, 1430, 455, 0, 0, 0, 0, 436,
	0, 435, 442, 432, 0, 0, 0, 0, 0, 0,
	1409, 0, 1417, 439, 440, 0, 441, 445, 0, 0,
	427, 1425, 0, 1421, 1432, 0, 0, 0, 1415, 0,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 1425,
	0, 0, 0, 1410, 0, 0, 1415, 1412, 1414, 1416,
	0, 1418, 1419, 1420, 1422, 1423, 1424, 1426, 1427, 1428,
	1429, 1430, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 436, 1409, 435,
	442, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 439, 440, 0, 441, 445, 0, 0, 427, 1432,
	0, 0, 0, 0, 0, 0, 0, 1425, 450, 0,
	0, 0, 0, 0, 1415, 0, 0, 0, 0, 0,
	0, 428, 430, 429, 0, 0, 0, 0, 0, 0,
	0, 434, 0, 0, 0, 0, 1430, 454, 0, 0,
	456, 0, 0, 438, 0, 455, 0, 0, 0, 0,
	453, 0, 0, 1409, 0, 0, 0, 431, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1425, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 428, 430, 429, 0, 0, 0,
	0, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	431, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 437, 443, 0,
	444, 446, 0, 0, 447, 448, 449, 0, 0, 451,
	452, 0, 428, 430, 429, 0, 0, 0, 0, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 453, 0, 0, 0, 0, 0, 0, 431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	437, 443, 0, 444, 446, 0, 0, 447, 448, 449,
	0, 0, 451, 452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 437, 443,
	0, 444, 446, 0, 0, 447, 448, 449, 0, 0,
	451, 452,
}

var yyPact = [...]int{
	249, -1000, -322, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -320, 29451,
	29451, -1000, -1000, 1802, -1000, 28932, 9718, 29970, 221, 218,
	29970, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 434, -1000, 28413, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 404, 31416, 30489, 7631, 29970, -299,
	-1000, 2293, -157, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2022, 461, 27894, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2462, 84, 461, 558, 565, 701, 701, 11794, -52,
	-53, 2293, 274, 130, -1000, 840, 249, 1662, 377, 29970,
	-1000, 1053, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 377, -1000,
	-1000, -1000, 2293, 2293, -1000, 29970, 29970, 12, 1188, -1000,
	229, 258, 271, 1048, -1000, -1000, -1000, -1000, -1000, 2322,
	-1000, 29970, 29970, 2020, 29970, -1000, 1305, 348, 31567, 2168,
	1030, 521, 2060, -1000, -1000, 2012, -1000, 127, 136, 137,
	317, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 116, -1000,
	2244, -1000, -1000, 120, -1000, -1000, 103, -1000, -1000, -1000,
	-57, -1000, -1000, -1000, -1000, -1000, -1000, -156, -1000, -1000,
	605, 1522, 7631, -1000, 1446, -1000, 2826, -1000, -1000, -1000,
	-1000, 5026, 9188, 9188, 9188, 9188, -1000, -1000, 1890, 7631,
	2011, 2010, -1000, -1000, -1000, -1000, -1000, 1044, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1661, 8669, -1000, 2009, 2006, 2005, 2003, 1997, 1996, 1990,
	1981, 1978, 1977, 1974, 1973, 1971, 1970, 1806, 1878, 1969,
	1660, 1659, 1965, 1962, 1959, 1653, 1806, 1806, 1950, 1943,
	1941, 1939, 1932, 1928, 1922, 1921, 1920, 1918, 1916, 1915,
	1914, 1909, 1908, 1907, 1906, 1905, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30901,
	-1000, 1041, 1058, -1000, 1900, 2158, 2238, 1832, 2307, 2236,
	2233, 2231, 2219, 1467, -1000, -1000, 29970, 29970, 400, 400,
	400, 400, 400, 421, 400, 432, 427, 426, 400, -1000,
	-1000, -1000, -1000, -1000, -1000, 519, -1000, -1000, -1000, -1000,
	836, 29970, -1000, 1837, 1101, 2251, 366, 365, 256, -1000,
	1192, 1192, 1192, 1192, 1101, 251, 359, 2238, 2238, -60,
	1192, -93, 1101, 1101, -93, 1101, 1101, 1101, 121, -1000,
	-1000, -1000, 1192, 361, 1192, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2227, 2223, 404, 29970, 41, 29970, 404, 404,
	409, -1000, -181, -1000, -1000, 557, -1000, 531, -1000, 1305,
	344, 340, 847, 1206, -1000, 1111, 29970, 29970, 29970, 1111,
	1111, 15430, 14911, -1000, 29970, -1000, 2238, 1832, -1000, 1775,
	1721, 1772, 1832, 404, 404, 404, 404, 404, 404, 404,
	404, 29970, 29970, 404, 6583, 6583, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2159, 246, 1898, -1000, 29970, 245,
	2238, 2158, 2238, -1000, -1000, 1040, 1464, 1646, -1000, -1000,
	229, 1102, -1000, 599, -1000, -1000, -1000, -1000, 29970, 235,
	-1000, -1000, 1626, 1897, -1000, 394, 1029, 895, -1000, 102,
	31489, 24253, 1305, 24253, 29970, -1000, -1000, -1000, -1000, -1000,
	-1000, -63, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 110, -1000, 7631, 7631, 7631,
	7631, 7631, -1000, 433, 8150, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9188, 9188, 9188, 9188, 9188, 9188, 9188, 9188,
	9188, 9188, 9188, 9188, 1888, 1268, 9188, 9188, 9188, 9188,
	1721, 2380, 845, 163, -1000, -1000, -1000, -1000, -1000, 1195,
	1522, 7631, 7631, 29970, -1000, 30854, 7631, 7631, 30783, 7631,
	2216, 7631, 7631, 7631, 1767, 3468, 29970, 7631, -1000, 1764,
	1761, -1000, -1000, 1320, 7631, 7631, -1000, -1000, 7631, 9188,
	7631, -1000, -1000, -1000, 79, 2216, 2216, 7631, 7631, 2216,
	2216, 2216, 1245, 2216, 2216, 2216, 2216, 2216, 2216, 2216,
	2216, 1760, 29970, 2128, 86, -1000, -1000, -1000, 1807, -1000,
	1836, 1836, 1836, 1836, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1862, 1896, -1000, -1000, 1834, 1834, 1834,
	1807, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1853, 1853, 1854, 1853,
	29970, 2238, -299, 6064, -1000, -304, 2158, 7631, -1000, -1000,
	7631, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1641,
	2199, -1000, 1894, 1000, 29970, 1212, 29970, 24253, 29970, 1305,
	29970, 29970, 400, 400, 400, 29970, 409, -1000, 29970, 836,
	2186, 29970, 2304, 9188, 9188, 27375, 1192, 1101, -1000, 29970,
	-1000, -1000, -1000, 1192, 29970, 1192, 1192, 2304, 1192, -1000,
	-1000, -1000, 1101, 1101, -1000, -1000, -1000, -1000, 1192, 1192,
	-1000, -1000, 2304, 29970, -75, 2304, 2304, -55, -1000, -1000,
	-1000, 29970, 29970, 400, 29970, 29970, -1000, 29970, -1000, -1000,
	29970, 31136, 29970, 29970, 2214, -1000, 24253, 29970, 22177, -1000,
	-137, 552, 533, 544, -1000, -1000, 393, 420, 13873, 338,
	24253, 4506, -1000, -1000, 1111, 1111, 1111, 4506, 4506, 899,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 832, -1000, 87,
	2158, -1000, -1000, -1000, -1000, -1000, 29970, 29970, 24253, 1305,
	29970, 29970, 29970, 29970, -1000, 1893, 29970, 837, -1000, -1000,
	11275, 982, 837, 1634, 2055, -300, -1000, 12834, 29970, 29970,
	-1000, -1000, -300, -1000, 12314, 29970, 2158, -1000, 2158, 29970,
	-1000, 2250, -1000, 229, 196, -1000, -1000, -1000, -1000, -1000,
	-1000, 981, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 817, -1000, 29970, -1000, -1000, 102, 24253, 25291, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 115, -1000, -1000, 149,
	-1000, 417, 54, 1096, -1000, -1000, 55, 145, 448, 1522,
	-1000, 1211, 1211, 1222, -1000, 473, -1000, -1000, -1000, -1000,
	1890, -1000, -1000, -1000, 2028, 1233, -1000, 1128, 1128, 950,
	950, 950, 950, 950, 1140, 1140, -1000, -1000, -1000, 5026,
	1888, 9188, 9188, 9188, 9188, 384, 384, 2855, 3227, -1000,
	7631, 1202, -1000, 7631, 1573, 944, 978, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1759, 605, 1757,
	1476, 2321, 1755, 7631, -1000, -1000, 1089, 1088, 1087, -1000,
	1388, 7112, -1000, -1000, -1000, 1754, 974, 1753, -1000, -1000,
	-1000, 1750, 1084, 818, 1749, 1629, 1746, 802, 7631, 7631,
	1075, 1074, 7631, 7631, 7631, 7631, 1739, 7631, 7631, 7631,
	7631, 7631, 7631, 7631, 7631, -43, -1000, 7631, 83, -1000,
	-1000, -1000, -1000, 1462, -1000, 1460, -1000, -1000, -1000, 1632,
	1632, -1000, 1445, -1000, -1000, -1000, -1000, 1439, -1000, -1000,
	1437, -1000, -1000, -1000, -1000, 1073, -1000, 1522, -1000, 1620,
	-1000, 886, 744, -1000, 1435, -1000, -1000, 29970, 10237, 29970,
	1837, 2151, 78, -1000, 927, -1000, 54, -176, 628, 2019,
	2316, 29970, 29970, 29970, 2185, 26856, -1000, 1887, 1069, -1000,
	-1000, 7631, -1000, -1000, 2015, 29970, 29970, 2304, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 29970, 2304, 2304, 1101, 1192,
	-1000, -1000, 1192, -1000, -1000, 1192, -1000, 951, -1000, 29970,
	-1000, -1000, -1000, 1837, 733, -1000, 10756, 664, -1000, 1132,
	1132, 695, 1132, 1132, 1132, 1132, 307, 291, 1132, 1132,
	1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
	1132, 1132, 1881, -1000, 71, 2205, 147, 927, 165, 2424,
	926, -1000, -1000, -1000, -1000, 17506, 17506, 13354, 17506, -1000,
	1104, -1000, -1000, 547, 529, 527, -1000, -1000, 414, -1000,
	-1000, 628, -1000, -1000, -1000, 1880, 1186, -1000, -1000, 1878,
	-1000, 4506, 4506, 4506, -1000, -1000, 18025, 29970, -1000, -167,
	-1000, -148, -1000, 710, -1000, -1000, 729, 628, 2052, 710,
	710, -1000, 10237, -1000, 2304, 6583, -1000, 22177, -1000, -1000,
	26329, -1000, 25810, 2304, -105, -1000, 2133, 634, -1000, 1867,
	-1000, 1068, 2088, -1000, 708, -1000, 1185, 1056, -1000, 634,
	1042, 2082, 708, -1000, -1000, 948, 7, -1000, -1000, 29970,
	1626, 1038, 25291, 670, -1000, 411, 947, 929, -1000, 24253,
	119, 24253, -1000, 24253, -1000, -1000, 237, -1000, 29970, 2145,
	-1000, -1000, -1000, 1564, -330, -1000, -1000, -1000, -1000, -1000,
	1037, -1000, 384, 384, 2855, 2687, -1000, 9188, -1000, 9188,
	2311, 1191, -1000, 7631, 1304, 2666, 1253, 16987, 29970, -1000,
	-1000, 7631, 7631, -1000, 2300, -1000, -1000, -1000, -1000, 7631,
	7631, 1372, -1000, 29970, -1000, -1000, -1000, -1000, 16987, -1000,
	9188, -1000, 7631, 756, 2290, -43, -43, 2284, 2193, 2188,
	1008, -43, 2148, 2138, 2108, 2098, 2071, 2029, 2021, 1960,
	-1000, 1865, 1522, -1000, -1000, 1738, 1736, 1002, -1000, 997,
	1735, 993, 992, 6064, -1000, -105, 7631, 7631, 7631, 2094,
	-1000, -1000, 97, 1732, 684, -1000, -1000, -1000, 30969, 1836,
	1836, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1862, -1000, -1000, 1834, 1834, 1834, 1807, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1853, 1853, 1854, 1853,
	-1000, 2179, -1000, -58, 1132, 380, 24253, 321, -1000, 29970,
	2031, 289, 2105, 29970, 1852, 1850, 1849, 206, 30969, 29970,
	724, -1000, 912, 249, -1000, 29970, 1522, -1000, 1305, -1000,
	1101, -1000, 2304, 986, -1000, -1000, 2304, 1101, 1101, 1192,
	29970, -1000, 2176, 31136, -1000, -1000, -1000, 30969, 577, -1000,
	29970, 1277, 548, 400, 548, 1257, 1839, -1000, -1000, -1000,
	29970, 29970, 29970, 1256, 1255, 1434, -1000, 1432, 1132, 1132,
	1428, 1615, 1612, 1608, 1132, 1132, 1426, 1604, 24772, 1425,
	1423, 1421, 1418, 1603, 564, 1415, 1383, 1375, 29970, 1838,
	1536, -58, 1132, 135, 1178, 380, 1470, 14392, 29970, 22177,
	22177, 22177, 22177, -1000, 2040, 2039, -1000, 2085, 2078, 2122,
	29970, 22177, 1837, -1000, 24772, -1000, -1000, -1000, 1721, 976,
	2461, 568, 7631, -1000, -1000, -1000, 523, 24253, 1598, 338,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29970, 29970,
	1730, 2296, -1000, 679, -1000, -1000, 898, -1000, 2296, -20,
	-6, 1252, -300, 6064, 273, 29970, -300, 29970, 6064, -1000,
	29970, 268, -300, 29970, 1420, -1000, -1000, -1000, 2313, 24253,
	1305, 1085, 23734, -1000, 117, -1000, 114, 364, 1596, -1000,
	422, 76, -1000, 1176, 1564, -1000, -1000, -1000, 9188, -1000,
	-1000, -1000, -1000, 1522, 7631, 1728, -1000, 504, 504, 1726,
	-1000, 1836, 1836, -1000, 1807, 1834, 1807, 504, 504, 1722,
	-1000, 1393, 1911, -1000, 1858, 1792, 7631, -1000, 1719, 2932,
	857, -188, -43, -1000, -1000, -1000, -43, -43, -43, -43,
	-1000, -43, -43, -43, -43, -43, -43, -43, -43, 378,
	-1000, -1000, -1000, 1595, -1000, -1000, -1000, 1416, -1000, 1397,
	-1000, -20, 1522, 1522, -1000, -1000, 2096, 1582, 430, 10237,
	2117, 255, 1471, -1000, -1000, 23215, 358, -1000, -1000, -1000,
	428, 118, 1396, 353, -1000, 29970, 157, 29970, -1000, -1000,
	-1000, -1000, -1000, 2105, -1000, 674, 192, 10756, 10756, 10756,
	194, 1180, -1000, 377, 685, 894, 22177, 29970, -1000, 21658,
	1717, -1000, 628, 2304, -1000, 29970, -1000, 2304, 2304, 1101,
	-1000, 255, -1000, 2369, -1000, -1000, 29970, 29970, -1000, 29970,
	29970, 400, 7631, -1000, -1000, -1000, 29970, -1000, -1000, -1000,
	16987, 16987, -1000, -1000, -1000, -1000, 1579, 1578, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	301, 29970, 960, -1000, 1142, 1471, 23215, 1137, 1577, 358,
	-1000, 1567, -1000, 621, 29970, 29970, -1000, 834, -1000, 1136,
	2018, 2030, 2018, -1000, -1000, -1000, -1000, 2033, -1000, 1542,
	-1000, -1000, 834, -1000, -1000, -1000, -1000, -1000, 568, -1000,
	2249, 548, 548, 548, 1709, -1000, 670, 1705, -1000, -1000,
	-1000, -1000, -1000, 2292, 2303, 22696, 2292, -306, -2, 2302,
	2299, 2332, -1000, 1703, 658, -300, -1000, -1000, 634, -1000,
	-1000, -1000, -300, -1000, 634, -1000, -1000, 1305, -1000, 108,
	-1000, -1000, -1000, -1000, -1000, -1000, 38, -1000, 29970, -1000,
	1564, 1563, 75, -1000, 1522, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7631, -1000, -1000, -1000, 1631, -1000, -1000, 7631, 1700, 1561,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2285, -1000, 2298, -1000, 1696, 1694, -306,
	-1000, -1000, -1000, 30969, -1000, 1575, -1000, -1000, 1560, 50,
	-1000, -1000, -1000, 1552, 1551, 1391, -1000, -1000, 1366, 885,
	62, -1000, -1000, -1000, -1000, -1000, -1000, 1470, 29970, 1833,
	-1000, 1132, 1132, 1132, 29970, 1690, 655, -1000, 1676, 1671,
	381, 1166, 1165, -1000, 1390, 17506, 22177, 21658, 833, -1000,
	877, -1000, -1000, -1000, 2304, -1000, -1000, 2304, -1000, -1000,
	2369, -1000, -1000, 1259, 9188, -1000, -1000, 1544, 16468, 569,
	550, 1828, -1000, 270, 2331, -1000, 1243, 1227, -1000, 29970,
	-1000, 1826, 1984, 228, 1825, -1000, 1823, 1822, 29970, 1618,
	-1000, -1000, -1000, -1000, -1000, -1000, 329, 959, -1000, 1536,
	1533, -1000, 50, 1531, -1000, -1000, -1000, 29970, 621, 621,
	2285, 29970, 6064, -1000, -1000, 7631, 1821, -1000, 7631, -1000,
	-1000, -1000, -1000, -1000, 1820, 2165, -1000, -1000, -1000, -1000,
	-1000, -1000, 7631, 7631, -1000, -1000, -309, 1530, -1000, -1000,
	2295, 1528, 1487, 29970, -1000, 634, 634, 628, -1000, -1000,
	-55, -1000, -1000, -1000, 1610, -1000, 1537, -43, -1000, 61,
	7631, -1000, -1000, -309, -232, -1000, -1000, -1000, -1000, 220,
	-1000, -1000, 153, -1000, -1000, 1365, 398, -1000, -1000, 621,
	20620, 16987, 16468, 1527, -1000, 31297, 10756, 110, 31297, 573,
	1152, -1000, 1389, -1000, 1381, -1000, 2304, 833, 877, -1000,
	-1000, 1004, -1000, -1000, -1000, -1000, 2855, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1378, 1814, -120, -1000, -1000, 1811, 20620, 262, 262, 20620,
	20620, 20620, 1809, 469, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2238, -1000, -1000, 1522, 29970, 1522, 21139, -1000,
	2289, 2288, 1522, 605, -311, 1374, -1000, 1525, -5, -1000,
	-1000, 619, -313, -23, -22, -1000, -1000, -1000, 1669, -1000,
	2949, -1000, -1000, -1000, 605, -311, 29970, 363, 1520, -1000,
	-1000, 152, -1000, -1000, 949, -1000, 1807, 7631, -1000, -1000,
	-1000, 375, 31222, -1000, -1000, -1000, -55, 375, 351, 158,
	-1000, 1349, -1000, -1000, 2285, -1000, 1668, 7631, 1806, -223,
	20620, 945, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 943,
	930, 916, 20620, -1000, -1000, -1000, 263, -1000, 896, 887,
	-1000, -1000, -1000, -1000, -1000, 1805, -1000, -1000, 2278, -1000,
	1519, 406, -13, -22, -1000, 2275, -7, 2274, 2271, -1000,
	-1000, 3987, -302, -37, 275, -1000, 2173, -1000, -1000, 32,
	-1000, -1000, -1000, 20620, 2143, 1529, 230, 2270, 31297, -1000,
	-1000, 230, -1000, 204, -1000, 1148, -1000, 1331, -1000, 2238,
	-1000, 1444, -1000, 2027, -1000, 90, 884, -1000, -1000, -1000,
	-1000, 878, -1000, -1000, -1000, 20101, 29970, 1487, -1000, 1804,
	1330, -2, -16, 2269, -1000, 1487, 2263, 1487, 1487, 1203,
	-1000, -1000, -1000, -1000, -1000, 1502, -1000, 190, -1000, -1000,
	2143, -1000, 2258, 295, -1000, -1000, -1000, -1000, 1323, -1000,
	-1000, 469, -1000, 2026, 1963, 2320, -1000, -1000, -1000, -1000,
	190, 190, 190, 190, 104, -1000, -1000, 872, -1000, -1000,
	2192, 15949, -30, -1000, -1000, -1000, 1489, -1000, 1487, -1000,
	-1000, 3987, -1000, -1000, 1132, 1485, 176, -1000, -1000, -1000,
	19582, 241, 280, 239, -1000, 399, -1000, -1000, -1000, -1000,
	2329, -1000, 2325, 553, 553, -1000, -1000, 29970, -1000, 29970,
	-1000, 829, -1000, -1000, -1000, 868, -1000, -1000, -1000, -1000,
	-1000, 1322, -1000, 29970, -1000, 29970, 248, 1314, 9188, 1801,
	9188, 1800, 252, 1798, -1000, -1000, -1000, 1334, 266, -1000,
	-1000, 601, -1000, 1129, -1000, 19063, 29970, -1000, -1000, 827,
	1794, 2257, -1000, 2789, 29970, 2629, 29970, 1782, 1124, 9188,
	-1000, -1000, -1000, 29970, 5545, -1000, 675, -1000, -1000, 374,
	253, -1000, 826, -1000, 823, 18544, 1300, 1982, -1000, -1000,
	1522, 29970, 822, -1000, 29970, 240, -1000, -1000, -1000, 799,
	-1000, -1000, -1000, -1000, 374, 2079, -1000, 1294, -1000, -1000,
	31154, 491, -1000, -1000, 31154, 242, -1000, 367, 1779, -1000,
	-1000, 773, -1000, 29970, 545, 7631, -1000, 242, 31297, -1000,
	7631, 766, -1000, 31297, 725, -1000, -1000,
}

var yyPgo = [...]int{
	0, 130, 2903, 206, 162, 158, 205, 2902, 2901, 2193,
	2170, 2900, 2899, 2898, 2897, 2895, 2894, 2891, 2883, 2878,
	2877, 2873, 2871, 2866, 2865, 2864, 2858, 2854, 2853, 2852,
	2839, 2837, 2829, 204, 2828, 2803, 2802, 2797, 2796, 2795,
	2794, 2793, 2792, 2790, 2789, 2786, 2785, 2777, 2776, 2775,
	2773, 2771, 2767, 2766, 2765, 2759, 2744, 2741, 2738, 2735,
	2733, 141, 2730, 2167, 2729, 2728, 2727, 2726, 2723, 2721,
	2720, 178, 2716, 2714, 2712, 2711, 2710, 2709, 2705, 2704,
	2703, 2701, 2700, 2699, 2698, 2695, 2694, 2692, 2691, 154,
	2690, 2689, 147, 2688, 2687, 2685, 2683, 200, 184, 53,
	2682, 35, 2681, 2677, 2676, 2674, 2672, 67, 2669, 2666,
	89, 160, 210, 1087, 219, 208, 149, 126, 66, 2665,
	2144, 2664, 156, 188, 123, 20, 2663, 133, 2662, 115,
	34, 28, 207, 117, 42, 116, 93, 2661, 190, 62,
	2660, 79, 2659, 2657, 214, 153, 2655, 95, 2653, 2652,
	2650, 2649, 173, 92, 2648, 52, 2647, 125, 88, 91,
	84, 2646, 2645, 2642, 71, 2641, 2640, 2637, 2631, 140,
	2629, 2628, 105, 65, 2627, 2626, 2625, 49, 2624, 63,
	2623, 50, 2622, 2620, 2619, 2618, 55, 2617, 2615, 14,
	19, 21, 2614, 18, 2613, 131, 2612, 3, 2611, 186,
	185, 74, 114, 2610, 403, 2609, 2608, 2605, 120, 2602,
	680, 2600, 2599, 2598, 2592, 2590, 22, 2587, 171, 39,
	2586, 73, 101, 94, 174, 168, 2584, 2583, 2582, 11,
	70, 54, 0, 2581, 118, 2580, 2578, 2575, 213, 2574,
	191, 169, 194, 145, 216, 132, 2572, 2571, 64, 2570,
	121, 68, 102, 81, 2569, 177, 2567, 36, 152, 2566,
	180, 2564, 127, 2, 111, 2561, 2560, 37, 233, 2559,
	2558, 2557, 107, 2556, 2553, 96, 104, 2551, 2549, 2547,
	31, 2546, 29, 26, 2545, 77, 2543, 203, 2542, 144,
	109, 143, 137, 119, 187, 193, 59, 56, 2541, 744,
	112, 78, 24, 2540, 189, 2539, 234, 196, 2538, 170,
	2537, 201, 323, 175, 2536, 146, 7, 33, 27, 2533,
	9, 2532, 106, 167, 2531, 2530, 16, 2529, 17, 2528,
	2527, 2525, 2523, 5, 2513, 2510, 2509, 1, 6, 2508,
	4, 181, 2507, 2506, 2502, 2501, 38, 151, 2499, 110,
	202, 2498, 2497, 72, 2496, 2494, 2493, 594, 2492, 2490,
	2489, 2486, 2485, 2482, 2475, 2470, 2468, 2466, 75, 44,
	2465, 2463, 2462, 2461, 57, 108, 2460, 2456, 2455, 2450,
	30, 138, 2449, 15, 2445, 25, 23, 32, 2440, 98,
	2439, 12, 161, 2437, 2436, 13, 2435, 2434, 10, 8,
	2432, 2431, 87, 2430, 61, 43, 124, 76, 2428, 60,
	183, 103, 2426, 2422, 199, 197, 172, 2415, 135, 198,
	209, 2408, 179, 2406, 2401, 2400, 2398, 2396, 2395, 1193,
	2390, 2388, 192, 45, 69, 80, 2387, 2386, 2385, 58,
	122, 86, 83, 166, 2374, 164, 2371, 2370, 82, 2366,
	2365, 2364, 2360, 2356, 157, 2355, 2354, 2353, 195, 165,
	2347,
}

//line mysql_sql.y:8958
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 453, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 95, 451, 451, 451, 452, 452,
	93, 82, 94, 401, 401, 400, 400, 399, 399, 354,
	354, 398, 398, 398, 397, 397, 397, 396, 396, 395,
	395, 394, 394, 392, 392, 393, 391, 390, 390, 390,
	388, 388, 388, 384, 384, 386, 385, 385, 387, 379,
	379, 382, 382, 380, 380, 380, 380, 383, 378, 378,
	378, 377, 377, 81, 81, 81, 301, 301, 80, 80,
	315, 315, 315, 315, 315, 313, 313, 313, 313, 313,
	313, 312, 312, 311, 311, 316, 316, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 72, 72, 72,
	72, 75, 75, 75, 76, 310, 310, 310, 73, 74,
	74, 300, 300, 305, 305, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 309, 309, 309,
	307, 307, 306, 306, 308, 308, 66, 66, 66, 69,
	68, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	67, 67, 67, 67, 67, 67, 62, 62, 62, 62,
	62, 61, 61, 63, 63, 297, 297, 296, 77, 77,
	78, 455, 455, 454, 456, 456, 456, 456, 79, 85,
	85, 85, 85, 85, 85, 85, 84, 84, 87, 87,
	86, 88, 71, 71, 71, 71, 71, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 425, 425, 425, 427,
	427, 236, 237, 457, 239, 235, 235, 235, 421, 421,
	422, 423, 424, 424, 424, 83, 7, 7, 7, 7,
	7, 7, 60, 65, 194, 194, 195, 195, 195, 196,
	196, 196, 196, 196, 58, 64, 64, 438, 438, 59,
	445, 445, 357, 357, 250, 250, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 361, 362, 246, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	40, 39, 39, 39, 286, 286, 38, 458, 458, 225,
	225, 48, 49, 50, 51, 52, 53, 54, 37, 47,
	47, 47, 47, 47, 47, 47, 47, 47, 57, 57,
	373, 373, 460, 460, 460, 55, 56, 356, 356, 356,
	46, 45, 44, 43, 42, 42, 36, 36, 35, 35,
	41, 105, 106, 243, 243, 243, 245, 245, 241, 459,
	459, 328, 328, 244, 244, 34, 34, 34, 34, 242,
	242, 224, 240, 240, 240, 8, 8, 6, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 18,
	19, 21, 294, 294, 291, 20, 14, 13, 16, 12,
	15, 17, 5, 5, 5, 5, 9, 9, 10, 117,
	117, 159, 159, 433, 433, 429, 429, 430, 430, 430,
	431, 431, 432, 432, 89, 367, 367, 367, 367, 367,
	367, 4, 140, 140, 139, 139, 366, 366, 366, 366,
	366, 366, 298, 298, 410, 410, 410, 411, 138, 138,
	133, 133, 368, 368, 264, 412, 412, 376, 376, 375,
	375, 374, 374, 136, 136, 137, 137, 120, 120, 98,
	98, 381, 381, 381, 381, 389, 389, 353, 353, 186,
	186, 219, 219, 220, 220, 110, 110, 111, 111, 111,
	111, 111, 111, 418, 418, 420, 420, 419, 135, 135,
	131, 131, 132, 132, 132, 130, 130, 129, 128, 128,
	127, 125, 125, 125, 126, 126, 126, 113, 113, 113,
	112, 112, 112, 112, 112, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 114, 114, 426,
	426, 426, 358, 358, 358, 364, 364, 201, 201, 202,
	202, 200, 200, 115, 115, 116, 116, 116, 116, 199,
	199, 198, 118, 118, 124, 123, 123, 119, 119, 119,
	119, 209, 209, 208, 208, 208, 208, 92, 96, 96,
	97, 143, 143, 207, 206, 206, 206, 142, 142, 141,
	141, 134, 134, 122, 122, 122, 122, 205, 121, 203,
	450, 450, 449, 449, 448, 446, 446, 446, 447, 447,
	447, 447, 403, 403, 403, 403, 403, 230, 230, 230,
	234, 234, 233, 233, 233, 233, 233, 238, 3, 3,
	3, 3, 3, 25, 25, 25, 25, 25, 25, 25,
	31, 151, 152, 30, 144, 144, 145, 145, 146, 146,
	147, 148, 148, 148, 150, 149, 29, 22, 434, 437,
	435, 435, 439, 439, 439, 440, 440, 440, 441, 441,
	23, 102, 107, 107, 104, 109, 109, 109, 109, 109,
	103, 436, 442, 442, 442, 295, 295, 292, 293, 293,
	290, 289, 289, 289, 444, 444, 443, 443, 443, 231,
	231, 24, 285, 285, 287, 288, 288, 288, 279, 279,
	279, 279, 28, 283, 283, 284, 284, 284, 284, 284,
	280, 280, 282, 282, 278, 278, 278, 278, 278, 27,
	108, 108, 277, 277, 275, 275, 273, 273, 274, 274,
	272, 272, 272, 276, 276, 26, 26, 26, 100, 99,
	99, 99, 222, 222, 221, 221, 101, 32, 171, 171,
	342, 342, 342, 342, 342, 360, 360, 360, 343, 343,
	343, 344, 344, 344, 345, 345, 345, 345, 345, 359,
	359, 317, 317, 318, 318, 318, 321, 321, 334, 334,
	335, 335, 333, 333, 340, 340, 339, 339, 338, 338,
	337, 337, 336, 336, 336, 336, 331, 331, 330, 330,
	319, 319, 319, 319, 319, 320, 320, 320, 329, 329,
	332, 332, 177, 177, 178, 178, 178, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 408, 408, 409, 180,
	180, 180, 184, 184, 184, 184, 184, 184, 179, 179,
	181, 181, 160, 160, 158, 158, 153, 153, 154, 154,
	155, 155, 156, 156, 157, 157, 157, 157, 157, 157,
	303, 303, 406, 406, 407, 407, 402, 402, 402, 405,
	405, 405, 405, 405, 404, 404, 161, 217, 217, 217,
	232, 232, 232, 232, 216, 216, 216, 176, 176, 175,
	175, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 302, 302, 247, 247,
	248, 248, 193, 192, 192, 192, 192, 192, 190, 191,
	189, 189, 189, 189, 189, 188, 188, 187, 187, 187,
	281, 281, 185, 185, 183, 183, 183, 182, 182, 182,
	341, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 215, 256, 256, 261, 261,
	417, 417, 416, 162, 162, 162, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 172, 172, 172, 326, 326,
	326, 326, 326, 327, 327, 327, 324, 324, 325, 325,
	265, 266, 266, 365, 365, 322, 322, 323, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 372, 372, 372, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 428, 428, 428, 413, 413, 413,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 213,
	213, 213, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 267, 267, 268, 268, 369,
	369, 369, 369, 369, 369, 370, 370, 371, 371, 371,
	371, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	254, 210, 210, 210, 269, 262, 262, 263, 263, 257,
	257, 257, 257, 257, 257, 257, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 258, 258,
	260, 260, 271, 271, 271, 270, 270, 270, 270, 270,
	270, 270, 174, 174, 174, 174, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 164, 164, 164,
	164, 168, 168, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 169, 169, 169,
	169, 167, 167, 167, 167, 167, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 90, 91, 91, 166, 218, 218, 346, 346,
	349, 349, 347, 347, 348, 350, 350, 350, 351, 351,
	351, 352, 352, 352, 355, 355, 223, 223, 223, 229,
	229, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	10, 10, 2, 0, 2, 1, 3, 3, 3, 0,
	2, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 3, 0, 1, 3, 0, 1, 3, 0,
	2, 1, 2, 3, 4, 3, 3, 1, 0, 1,
	1, 0, 1, 8, 5, 7, 0, 3, 8, 5,
	1, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 4, 1, 3, 1, 2, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 2, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 6, 1, 1, 1, 2, 4,
	6, 1, 4, 1, 3, 3, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 2,
	2, 0, 1, 4, 2, 4, 1, 5, 3, 2,
	1, 2, 2, 4, 4, 5, 2, 1, 3, 4,
	4, 1, 2, 9, 7, 1, 3, 3, 1, 1,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 3, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 7, 4, 1, 3, 2, 2, 1, 2,
	2, 2, 3, 2, 7, 7, 8, 0, 4, 7,
	0, 3, 0, 2, 0, 1, 1, 1, 1, 4,
	2, 2, 3, 3, 4, 5, 3, 4, 4, 2,
	2, 2, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 2, 5, 5, 0, 2, 7, 0, 1, 0,
	1, 5, 3, 2, 4, 4, 4, 4, 4, 1,
	1, 1, 3, 2, 3, 1, 1, 1, 6, 8,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 4, 6, 7, 4, 4, 7, 8,
	3, 3, 3, 0, 2, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 4, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 1, 3, 1, 4, 6, 4, 4, 4,
	3, 6, 1, 1, 2, 2, 11, 8, 9, 1,
	3, 2, 4, 0, 2, 0, 1, 1, 1, 1,
	0, 1, 0, 1, 4, 2, 1, 5, 4, 4,
	2, 5, 0, 2, 1, 3, 2, 1, 5, 4,
	4, 2, 0, 5, 0, 1, 3, 3, 1, 3,
	1, 3, 1, 3, 4, 0, 1, 0, 1, 1,
	3, 1, 1, 0, 4, 1, 3, 2, 1, 0,
	8, 0, 4, 7, 4, 0, 2, 0, 2, 0,
	2, 0, 4, 1, 3, 1, 1, 4, 3, 4,
	5, 4, 5, 2, 3, 1, 3, 6, 0, 3,
	0, 1, 2, 4, 4, 0, 1, 3, 1, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 3, 3,
	1, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 7, 7, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 2, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 4, 4,
	3, 2, 2, 2, 3, 2, 3, 4, 1, 3,
	4, 0, 2, 1, 1, 2, 2, 0, 1, 2,
	4, 1, 3, 1, 3, 2, 3, 1, 4, 3,
	0, 1, 1, 2, 5, 2, 2, 2, 0, 2,
	3, 3, 0, 1, 3, 1, 3, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 1, 12, 1, 3, 0, 1, 1, 3,
	1, 1, 2, 4, 1, 1, 7, 7, 1, 4,
	1, 1, 3, 4, 3, 0, 1, 1, 0, 2,
	7, 8, 0, 2, 6, 0, 2, 2, 3, 3,
	4, 1, 0, 2, 2, 1, 3, 2, 1, 3,
	2, 1, 3, 2, 0, 1, 3, 4, 3, 1,
	1, 4, 1, 3, 1, 1, 1, 1, 0, 1,
	1, 1, 11, 0, 2, 3, 2, 3, 1, 1,
	1, 3, 3, 4, 0, 2, 2, 2, 2, 6,
	0, 4, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 11, 9, 11, 2, 2,
	4, 5, 1, 3, 0, 3, 5, 10, 0, 2,
	0, 3, 2, 4, 3, 0, 2, 1, 0, 2,
	3, 0, 2, 3, 0, 3, 2, 4, 3, 0,
	1, 0, 6, 0, 3, 5, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 5, 6, 5, 0, 3,
	0, 1, 0, 1, 1, 3, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 4, 1, 3, 3, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 1, 2, 1, 7, 7, 7, 7, 8, 5,
	0, 1, 0, 1, 1, 1, 1, 3, 3, 1,
	1, 1, 1, 1, 0, 1, 3, 1, 3, 5,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	2, 1, 2, 2, 1, 1, 2, 2, 2, 2,
	2, 1, 5, 6, 4, 1, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	1, 1, 1, 1, 1, 4, 0, 2, 0, 1,
	1, 2, 4, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 5, 0, 1,
	3, 0, 1, 0, 2, 0, 1, 6, 8, 6,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 4, 4, 4, 3, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 4, 6, 2,
	2, 4, 6, 4, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 2, 3, 5, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -453, -2, -1, -3, -93, -4, -89, -5, -6,
	-8, -70, -84, -86, -88, -87, -33, -7, -83, -61,
	-62, -66, -72, -77, -80, -81, -82, -94, -90, -91,
	-92, -110, -95, -25, -24, -23, -22, -102, 405, 12,
	452, -9, -10, -418, -11, 234, -235, -236, -237, -239,
	-457, -34, -35, -36, -42, -43, -44, -45, -46, -55,
	-56, -57, -37, -38, -39, -40, -48, -49, -50, -51,
	-52, -53, -54, -41, -105, -106, -59, -58, -64, -60,
	-65, -104, 209, -63, 61, -67, -68, -69, -73, -74,
	-75, -76, -78, -79, 336, 342, 395, 539, 540, 46,
	-111, -113, 541, -26, -27, -28, -29, -30, -31, -32,
	205, 14, 485, -12, -15, -13, -16, -14, -20, -21,
	-19, -17, -18, -103, 229, 228, 37, 292, 293, 294,
	340, 227, 206, 13, 137, 138, 140, 141, 30, 41,
	318, -112, 67, 207, -114, 10, 543, 542, -120, 38,
	-158, -232, 70, 78, -226, -228, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 455, 526, 527, 528, 529, 316, 317, 482,
	246, 270, 366, 273, 280, 137, 156, 150, 178, 170,
	145, 250, 285, 251, 77, 140, 438, 88, 417, 392,
	143, 265, 267, 269, 272, 252, 166, 161, 264, 248,
	539, 159, 253, 39, 254, 183, 255, 256, 487, 413,
	315, 419, 277, 390, 160, 414, 268, 416, 185, 189,
	430, 342, 154, 155, 421, 432, 182, 226, 42, 484,
	238, 433, 187, 181, 177, 441, 281, 279, 180, 153,
	176, 249, 50, 191, 190, 192, 386, 387, 388, 389,
	257, 258, 330, 429, 173, 162, 320, 146, 22, 436,
	233, 418, 343, 259, 274, 282, 186, 188, 240, 245,
	486, 394, 244, 278, 434, 158, 237, 266, 232, 437,
	147, 336, 345, 260, 141, 271, 431, 440, 49, 358,
	152, 144, 223, 138, 242, 247, 11, 261, 262, 263,
	284, 283, 275, 174, 239, 179, 164, 151, 175, 139,
	241, 439, 359, 537, 318, 375, 172, 169, 243, 216,
	435, 420, 142, 379, 360, 167, 286, 533, 534, 535,
	331, 314, 287, 288, 165, 230, 411, 412, 289, 291,
	385, 307, 361, 393, 367, 362, 198, 295, 423, 184,
	536, 296, 297, 298, 415, 299, 300, 301, -120, -63,
	-10, -9, -112, -113, -158, 213, -240, 23, 390, -71,
	391, 209, 67, -232, -5, -4, -89, -61, -110, -238,
	-232, 292, 292, -238, 213, -232, 244, 374, -357, 219,
	-312, -285, 245, -311, -287, -314, -288, 31, 205, 207,
	206, 241, 14, 340, 215, 12, 10, 341, 227, 24,
	25, 27, 13, 342, 344, 28, 345, 348, 349, 350,
	41, 353, 354, 234, 70, 78, 73, 252, -152, -232,
	-263, -257, 95, 235, -259, -252, -253, -255, -398, -392,
	-251, 67, 121, 122, 129, 96, -254, -341, 35, 98,
	492, 453, -211, -212, -213, -214, -215, -232, -393, -391,
	73, 79, 82, 85, 86, 84, 83, 163, 81, 74,
	133, 134, -113, 70, -413, 500, -227, 521, 526, 527,
	528, 529, 520, 46, -363, -371, 212, -369, 132, 168,
	230, 164, 12, 127, 385, 165, 497, 517, 455, 501,
	524, 494, 495, 489, 490, 491, 493, 502, 504, 516,
	-372, 512, 522, 523, 510, 525, 72, 71, 515, 514,
	503, 498, 499, 505, 488, 496, 506, 507, 513, 518,
	519, 324, 88, 325, 326, 445, 319, 327, 219, 390,
	55, 328, 329, 330, 331, 332, 452, 333, 56, 334,
	323, 234, 375, 335, 167, 184, 457, 456, 458, 449,
	446, 444, 447, 448, 450, 451, 508, 509, 511, -308,
	-306, -232, -96, -97, 531, -129, -130, -204, 19, 6,
	7, 8, 9, -451, 392, 486, 295, 337, 216, 316,
	375, 299, 244, -279, -277, -359, 289, 285, 214, 224,
	223, 89, 445, 212, 351, -429, -430, 202, 203, 204,
	-420, 478, -419, -232, 326, 26, 213, 337, 423, 424,
	425, 426, 427, 428, -47, -373, -356, 420, 419, -244,
	412, 418, 410, 422, 413, 317, 301, 300, 205, 479,
	-223, 361, 393, 240, 442, 443, 338, 394, 430, 431,
	414, 88, 171, 168, 216, 213, 316, 445, 375, 299,
	-429, 142, 139, -299, 142, 94, 147, 146, -299, 244,
	374, 40, -305, 385, -304, -306, 430, 431, 441, 71,
	72, 429, -223, 88, 411, 411, -130, -204, -129, -111,
	-113, -92, -418, 214, 316, 375, 244, 215, 213, 216,
	445, 292, 337, 299, -358, -426, 31, -364, 199, 200,
	201, 32, 33, -1, 73, -136, 236, -158, 135, -136,
	-130, -129, -130, -158, -216, -232, 392, 104, -71, -71,
	391, -421, -422, -423, -425, 209, 391, 390, 135, 15,
	-238, -238, 65, -158, -287, 244, -312, -285, 35, 64,
	136, 217, 136, 64, 67, 338, 316, 375, 339, 445,
	213, 351, 216, 244, 352, 316, 375, 213, 216, 445,
	244, 316, 213, 216, 375, 244, 352, 410, 411, 216,
	26, 343, 346, 347, 411, -377, 441, 136, 94, 91,
	92, 93, -257, 111, -270, 104, 105, 106, 107, 108,
	109, 110, 118, 117, 128, 121, 122, 123, 124, 125,
	126, 127, 119, 120, 114, 95, 112, 116, 113, 97,
	-113, -257, -263, 46, -255, -255, -255, -255, -341, -261,
	-257, 67, 67, 135, 73, -257, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, -370, 67,
	67, -267, -268, 67, 67, 67, 73, 73, 67, 67,
	67, 73, -268, -268, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 136, -164, -168, -165, -167, -166, -170, -169,
	168, 169, 132, 172, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 30, 184, 230, 164, 165, 166,
	167, 185, 150, 170, 483, 193, 151, 194, 152, 195,
	153, 196, 154, 155, 197, 156, 159, 160, 161, 158,
	135, -130, 136, 67, -98, 38, -132, 21, -114, -113,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 79,
	-151, -232, -144, -232, -275, 219, -275, -275, -275, -275,
	215, -275, 213, 213, 213, -275, -431, 149, 136, -420,
	-135, 67, -243, 112, 116, 23, 242, 242, 279, -458,
	-459, 15, 114, -241, -459, -241, -241, -243, -460, 215,
	421, 42, 243, 242, -131, -132, -131, 415, 411, -328,
	416, 417, -245, -459, -244, -243, -243, -244, -243, -243,
	-243, 213, 216, 445, 299, -458, 242, -458, 30, 30,
	-357, -158, -357, 479, -224, -232, -357, -357, -432, 218,
	434, 485, 145, 146, 147, -287, 244, 244, 136, 104,
	23, -307, 104, 115, -306, -306, -306, -307, -307, -179,
	40, -231, 132, -232, 73, -179, 40, -455, -454, -158,
	-131, -114, -113, 68, 68, 68, -357, -357, -357, -357,
	-357, -357, -357, -357, -238, -144, -357, -115, -116, 123,
	-257, -232, -115, 38, -366, 46, -110, 67, 30, 67,
	-232, -367, 46, -110, 67, 30, -131, -98, -132, 135,
	79, 73, -71, 68, 136, -424, 85, 86, -427, 182,
	174, -232, -85, 73, -3, -4, -5, -6, -33, -61,
	-110, -394, -392, 67, 31, 384, 64, 15, -313, 213,
	445, 337, 240, 216, 316, -311, -294, -291, -289, -231,
	-287, -290, -289, -316, -216, 411, -99, 396, 291, -257,
	-257, -257, -257, -257, 84, 95, 314, 85, 86, -252,
	-271, 31, 287, 288, -253, -253, -253, -253, -253, -253,
	-253, -253, -253, -253, -253, -253, -260, -269, -341, 67,
	114, 112, 116, 113, 97, -255, -255, -253, -253, 68,
	136, -417, -416, 99, -257, -257, -232, -414, -415, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	328, 323, 329, 327, 319, 335, 330, 331, 167, 476,
	477, 470, 471, 472, 473, 474, 475, -262, -263, -262,
	-257, -414, -262, -210, 32, 31, -263, -263, -263, 68,
	-257, -428, 312, 311, 313, -133, -232, -262, 68, 68,
	68, 79, -263, -263, -262, -253, -262, -415, -210, -210,
	-263, -263, -210, -210, -210, -210, 123, -210, -210, -210,
	-210, -210, -210, -210, -210, 68, -306, 40, -352, 359,
	358, -346, -348, 67, -347, 67, -347, -347, -347, 67,
	67, -349, 67, -349, -349, -346, -350, 67, -350, -351,
	67, -350, -232, -131, -97, -375, -374, -257, 40, 532,
	-98, -257, -128, -127, -257, -452, 73, 34, 67, 135,
	-158, 95, -434, -232, -295, -292, -289, -232, -285, -232,
	-232, -275, -275, -275, -158, -432, -419, 34, -134, -232,
	-200, 16, -255, -255, -289, 244, -458, -243, -225, -224,
	-245, -240, -245, -245, -200, -459, -243, -243, -245, -241,
	-200, -232, 411, -200, -200, -328, -242, -232, -242, -275,
	-224, -225, -225, -158, -194, -195, 210, 207, -197, 356,
	246, -276, 250, 77, 251, 392, 252, 215, 254, 255,
	256, 226, 257, 258, 259, 385, 260, 261, 262, 263,
	339, 6, 302, 40, -434, -434, 30, -295, -232, -123,
	-118, -122, -119, -124, -203, -205, -121, 67, -158, -113,
	-232, 435, 436, 143, 146, 145, 31, 384, -310, 384,
	31, -285, -304, -300, 73, 385, -290, -309, 64, 132,
	-374, -307, -307, -307, -309, -309, 131, 136, -456, 434,
	435, 202, -98, -160, -158, -434, -294, -285, -232, -160,
	-160, -232, 67, -232, -199, 136, -198, 15, -233, -232,
	34, 73, 135, -199, 73, -298, 64, -368, -264, -412,
	531, -138, 68, -133, -410, -411, -133, -137, -232, -368,
	-138, 68, -410, -98, -98, -232, 23, -71, -422, 135,
	136, -134, -313, -293, -290, -315, 123, -232, -301, 136,
	485, 544, 71, 217, -444, -443, 376, 68, 136, -378,
	218, 452, 73, 545, 198, 84, 314, 85, 86, -341,
	-263, -260, -255, -255, -253, -253, -258, 231, -258, 94,
	-257, -256, -416, 101, -257, 34, 136, 65, 135, 68,
	68, 15, 15, 68, -257, 68, 68, 68, 68, 15,
	15, -257, 68, 135, 68, 68, 68, 68, 65, 68,
	136, 68, 136, -263, -257, 68, 68, -257, -257, -257,
	-263, 68, -257, -257, -257, -257, -257, -257, -257, -257,
	-323, 406, -257, -355, 360, 79, 79, -218, 73, -218,
	79, 79, 79, 136, 68, 73, 136, 22, 136, -125,
	36, 37, -152, -145, -146, -147, -148, -164, -216, 169,
	172, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 230, 164, 165, 166, 167, 185, 150, 170,
	151, 152, 153, 154, 155, 156, 159, 160, 161, 158,
	-232, -135, 35, -437, 363, -445, 136, 40, -443, 445,
	-278, 65, -108, 15, -158, -158, -158, -171, 34, 15,
	-117, -159, -232, 67, 68, 136, -257, -286, 65, -232,
	-225, -200, -158, -232, -200, -200, -243, -245, -245, -241,
	135, -224, -135, 136, -155, -161, -156, -216, -248, -157,
	222, 220, 224, -407, 89, 225, 276, 90, 215, -196,
	215, 90, 221, 225, 220, -229, 104, -229, -223, 131,
	-229, -229, -229, -229, 253, 253, -229, -229, -229, -229,
	-229, -229, -229, -229, -229, -229, -229, -229, -229, -229,
	67, -438, 363, 30, 322, -445, -109, 316, 30, -206,
	-207, -208, -209, 53, 57, 59, 54, 55, 56, 60,
	30, 136, -230, -234, 34, -232, 73, -230, -113, -118,
	-123, -230, 67, 144, 147, 147, 146, 217, 67, 104,
	-309, -309, -309, 40, -231, -454, 441, 435, 136, 64,
	-145, -200, -116, -118, -232, 73, -232, 123, -200, -381,
	416, 39, 136, 67, 68, 136, 46, 136, 104, 68,
	136, 68, 46, 135, 392, -232, -392, 68, -315, 136,
	217, 135, 135, -291, 342, -231, -293, 20, 485, -216,
	38, -222, -221, 73, 545, 68, -258, -258, 94, -255,
	-252, 68, 102, -257, 100, -162, -164, 358, 359, -163,
	-169, 132, 168, 230, 167, 166, 164, 358, 359, -179,
	-232, -257, -257, 68, -257, -257, 15, -232, -179, -253,
	-257, -130, 68, -322, -323, -322, 68, 68, 68, 68,
	-322, 68, 68, 68, 68, 68, 68, 68, 68, 67,
	68, 68, 68, 136, 68, 68, 68, 136, 68, 136,
	-374, -381, -257, -257, -127, -126, 43, 350, 68, 136,
	-164, 34, -440, 418, 365, -229, -250, -249, 318, 41,
	-361, 385, 371, 372, -292, 244, -232, 64, 306, 307,
	308, 309, -273, -274, -272, -276, -434, 67, 67, 67,
	-342, 296, -164, -158, -117, -232, 15, 136, -433, 135,
	-1, -232, -285, -243, -200, -459, -200, -243, -243, -245,
	-232, 34, -195, -164, -157, -232, 90, -406, -407, -275,
	-406, 90, 67, -232, -232, -232, 90, 90, 79, 79,
	-229, -229, 79, 73, 73, 73, -229, -229, 79, 73,
	-234, 79, 79, 79, 79, 40, 73, -184, 40, 264,
	268, 265, 266, 267, 79, 40, 79, 40, 79, 40,
	-232, 67, -408, -409, 73, -440, -229, 322, 104, -250,
	-107, 77, 31, -139, 210, 207, -434, -297, -296, -216,
	-122, -122, -122, -122, 53, 53, 53, 58, 53, 58,
	53, -208, -297, -124, -135, -234, 68, -450, -449, -448,
	-446, 61, 218, 62, -262, 147, -293, -246, 73, -300,
	-158, -158, 68, -202, 17, 135, -202, -389, 402, 397,
	399, 90, -264, -376, -375, 46, -110, -133, -368, -411,
	-374, -232, 46, -110, -368, -232, 79, 15, -290, -285,
	123, 123, -232, 343, -301, 73, 364, 73, 213, 546,
	136, 104, -222, -252, -257, 68, -172, 155, 154, -172,
	68, -347, -347, -346, -349, -346, -172, -172, 68, 68,
	23, 68, 68, 68, -257, 68, 68, 136, -365, 454,
	-322, -322, -322, -322, -322, -322, -322, -322, -322, -322,
	-322, -322, -322, -266, -265, 236, 73, 79, 79, -389,
	44, 45, 73, 211, -147, 40, -110, -441, 77, -435,
	73, -232, -442, 77, 366, 134, 320, 40, 367, 368,
	382, 315, 79, 79, 373, -436, -232, -140, 316, -158,
	-272, -223, 131, 255, 299, -153, -154, -155, -153, -153,
	-343, 298, 20, 79, 122, -136, 65, 135, -118, -159,
	-232, 123, 68, -200, -232, -200, -200, -243, -110, -176,
	-175, -173, 84, 95, 40, 356, -174, 77, 131, 269,
	247, 270, -193, -247, 64, 362, 220, 89, 90, 344,
	-248, -402, -404, -232, -404, -232, -402, -402, -275, -257,
	-232, -179, -179, 73, 73, -180, 247, -160, 68, 136,
	104, -441, -435, 104, 73, -442, 73, 136, -139, -139,
	-200, 136, 104, -142, -141, 64, 65, -143, 64, -141,
	53, 53, -200, -448, -447, 23, -407, -407, -407, 68,
	68, -201, 18, 20, 123, -201, -353, 533, -385, -387,
	397, 20, 20, 13, 68, -368, -368, -285, -301, 385,
	-158, -221, 73, 546, -257, 68, -257, 68, 73, -130,
	20, 68, 68, -353, -149, -164, -251, 73, -439, 376,
	73, 73, 79, 40, 79, 134, 369, -362, -107, -139,
	67, -229, -229, -229, -232, 68, 136, 68, 68, -344,
	235, 79, 122, 79, 122, 79, -230, -118, -232, -200,
	-433, 135, -200, -200, -173, 84, -253, 73, -181, -231,
	132, -182, 40, 268, 264, -183, 40, 248, 249, -185,
	67, 276, 13, 90, 90, -158, 67, 65, 286, 67,
	67, 67, -404, 68, 248, 249, 68, -409, 73, -439,
	73, -434, -130, -296, -374, -257, 67, -257, 67, 53,
	19, 17, -257, -263, -186, 534, 73, 20, 73, -383,
	73, -297, -101, -379, -328, 68, 68, -322, -325, -324,
	-327, 403, 278, 409, -263, -186, 484, 20, 485, 319,
	40, 79, 40, 370, -280, -282, -216, 67, -179, -181,
	73, -177, -178, -197, -155, -100, -99, -177, -345, 138,
	79, 122, 79, 79, -200, -200, 79, 67, -369, -281,
	67, -280, -405, 306, 307, 308, 310, 309, -405, -280,
	-280, -280, 67, -303, -302, 277, 95, -131, -134, -403,
	-232, 220, 20, 20, -219, 535, 79, 73, 399, -354,
	536, -388, 402, -382, -380, 397, 398, 399, 400, 68,
	-326, 97, 369, 373, -257, -219, -150, -232, 73, 364,
	73, 319, 68, 136, -346, -257, -317, 236, 136, -197,
	-101, -317, -360, 146, 297, 485, 79, 122, 79, -130,
	68, -257, -267, -188, -187, 481, -280, 68, 68, 68,
	68, -280, 277, 68, 68, 136, 67, 20, 73, -390,
	218, -386, -387, 401, -380, 20, 399, 20, 20, -326,
	531, 407, 408, 407, 408, 34, 385, -283, -282, -125,
	68, -318, 285, 20, -197, -318, 297, 79, 122, 79,
	-131, 68, -192, -190, -191, 64, 414, 274, 275, 68,
	-283, -283, -283, -283, 68, -232, 220, -220, -232, -383,
	-397, 67, 79, -385, -384, -386, 20, -383, 20, -383,
	-383, 94, 73, -284, 226, 77, 485, 304, 305, -125,
	20, -319, 278, 279, -320, -332, 281, 79, -302, -191,
	64, -190, 64, 14, 13, -193, 68, 136, -401, 30,
	68, -396, -395, -217, -391, -232, 402, 403, 73, -383,
	-326, -229, 73, 303, -216, 67, -330, 282, 67, -328,
	67, -328, 90, 307, -189, 271, 272, 30, 146, -189,
	-232, -400, -399, -398, 68, 136, 135, 79, -232, -316,
	-321, 283, 79, -253, 67, -253, 67, -329, 280, 67,
	84, 40, 273, 136, 104, -395, -232, 68, -334, 67,
	20, 68, -316, 68, -316, 67, 104, -253, -399, 40,
	-257, 135, -335, -333, 236, -320, 68, 68, 68, -316,
	79, 68, -232, 68, 136, -232, -331, 284, 68, -333,
	-336, 46, 79, -340, -337, 67, -197, 238, 114, -340,
	-197, -339, -338, 283, 239, 67, 68, 136, -232, 235,
	67, -263, -338, -337, -263, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 698, 699, 700, 701, 702, 0, 0,
	0, 472, 473, 0, 447, 0, 0, 0, 0, 0,
	0, 345, 346, 347, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 368, 369, 296, 297, 298, 299,
	300, 301, 0, 231, 227, 206, 207, 208, 167, 168,
	169, 170, 238, 239, 322, 0, 0, 0, 0, 0,
	555, -2, 35, 703, 704, 705, 706, 707, 708, 709,
	-2, 485, 0, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 285, 286, 287, 281, 282, 284,
	283, -2, 0, 485, 220, 0, 211, 211, 0, 0,
	0, 575, 0, 0, 590, 612, 33, 0, 533, 0,
	538, 944, 980, 981, 982, 983, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 533, 232,
	474, 475, 575, 575, 445, 0, 267, 0, 1437, 271,
	0, 0, 0, 442, 262, 263, 264, 265, 266, 0,
	697, 0, 0, 258, 0, 226, 1496, 0, 0, 0,
	0, 0, 0, 111, 772, 113, 774, 117, 124, 0,
	0, 129, 130, 133, 134, 135, 136, 137, 0, 141,
	0, 143, 146, 0, 148, 149, 0, 152, 153, 154,
	0, 164, 165, 166, 775, 776, 777, -2, 42, 712,
	1362, 1257, 0, 1264, 1265, 1276, 1287, 1053, 1054, 1055,
	1056, 0, 0, 0, 0, 0, 1063, 1064, 0, 1078,
	1596, 0, 1070, 1071, 1072, 1073, 1074, 51, 63, 64,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	0, 1230, 1040, 980, 0, 1604, 0, 1624, 1629, 1630,
	1631, 1632, 1623, 0, 0, 1215, 0, 1205, 0, 0,
	-2, -2, 0, 0, 1564, -2, 1601, 1620, 1628, 1605,
	1627, 1598, 1599, 1593, 1594, 1595, 1597, 1606, 1608, 1619,
	0, 1615, 1625, 1626, 0, 0, 65, 66, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1221, -2, 1223, 1224, 1226, 1227, 1228, 1229, -2,
	1232, 1233, 1234, -2, -2, 1237, 1238, 1239, 1240, 1241,
	1242, 1245, -2, 1247, -2, -2, 1217, 1218, 1219, 1220,
	1209, 1210, 1211, 1212, 1213, 1214, -2, -2, -2, 0,
	204, 202, 575, 648, 0, -2, 0, 0, 0, 595,
	598, 601, 604, 0, 36, 37, 0, 0, 804, 804,
	804, 804, 804, 0, 804, 0, 0, 0, 804, 779,
	780, 781, 802, 803, 850, 490, 486, 487, 488, 489,
	563, 0, 565, 568, 423, 371, 0, 0, 0, 383,
	377, 0, 0, 0, 423, 0, 0, 570, 570, 0,
	426, 433, 423, 423, -2, 423, 423, 423, 0, 389,
	390, 391, 377, 0, 377, 395, 396, 397, 408, 409,
	434, 1386, 0, 0, 322, 0, 322, 0, 322, 322,
	492, 221, 222, 210, 212, 0, 216, 0, 209, 1496,
	0, 0, 178, 1564, 183, 0, 1444, 1510, 1459, 0,
	0, 1477, 0, -2, 0, 248, 570, 0, 576, 0,
	575, 0, 0, 322, 322, 322, 322, 322, 322, 322,
	322, 0, 0, 322, 0, 0, 613, 614, 609, 610,
	611, 615, 616, 3, 0, 0, 0, 537, 0, 0,
	570, -2, 0, 446, 268, 984, 0, 0, 272, 273,
	0, 0, 288, 0, 291, 276, 277, 278, 0, 0,
	260, 261, 0, 0, 228, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 121, 118, 125, 128, 138,
	145, 0, 157, 159, 162, 119, 126, 131, 132, 139,
	160, 120, 122, 123, 127, 161, 163, 140, 144, 158,
	142, 147, 150, 151, 156, 0, 92, 0, 0, 0,
	0, 0, 1263, 0, 0, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1257, 0, 0, 1059, 1060, 1061, 1062, 1065, 0,
	1079, 0, 0, 0, 1316, 0, 1255, 1255, 0, 1255,
	1251, 0, 0, 0, 0, 0, 0, 1255, 1193, 0,
	0, 1195, 1206, 0, 0, 0, 1199, 1200, 1255, 0,
	1255, 1204, 1189, 1190, 0, 1251, 1251, 0, 0, 1251,
	1251, 1251, 1251, 1251, 1251, 1251, 1251, 1251, 1251, 1251,
	1251, 0, 0, 1363, 1381, 1318, 1319, 1320, 1368, 1322,
	1372, 1372, 1372, 1372, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 0, 0, 1361, 1341, 1370, 1370, 1370,
	1368, 1365, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1375, 1375, 1378, 1375,
	0, 570, 0, 0, 558, 0, 539, 0, 592, 594,
	0, 596, 597, 599, 600, 602, 603, 605, 606, 38,
	0, 711, 0, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 804, 804, 804, 0, 492, 491, 0, 564,
	0, 0, 621, 0, 0, 0, 377, 423, 382, 379,
	378, 429, 430, 426, 0, 426, 426, 621, 0, 402,
	403, 404, 423, 423, 410, 571, 411, 412, 426, 0,
	431, 432, 621, 0, 0, 621, 621, 0, 420, 421,
	422, 0, 0, 804, 0, 379, 393, 379, 1387, 1388,
	0, 813, 0, 0, 0, 441, 0, 0, 0, 493,
	0, 0, 214, 0, 219, 171, 0, 0, 0, 0,
	0, 0, 200, 201, 0, 0, 0, 0, 0, 191,
	194, 938, 939, 769, 770, 195, 196, 240, 241, 0,
	539, 591, 593, 587, 588, 589, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 0, 0, 629, 623, 625,
	692, 51, 629, 0, 512, 525, 507, 0, 514, 0,
	945, 494, 525, 496, 0, 514, 539, 561, 539, 0,
	269, 0, 274, 0, 0, 290, 292, 293, 294, 279,
	280, 443, 256, 257, 249, 250, 251, 252, 253, 254,
	255, 259, 61, 0, 229, 230, 0, 0, 0, 105,
	106, 107, 108, 109, 110, 112, 96, 462, 464, 761,
	773, 0, 764, 0, 115, 155, 88, 0, 0, 1258,
	1259, 1260, 1261, 1262, 1266, 0, 1268, 1270, 1272, 1274,
	0, 1292, -2, -2, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1277, 1290, 1291, 0,
	0, 0, 0, 0, 0, 1288, 1288, 1283, 0, 1057,
	0, 1076, 1080, 0, 0, 0, 52, 1250, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 0, 1256, 0,
	1257, 0, 0, 0, 1252, 1253, 0, 0, 0, 1148,
	0, 0, 1154, 1155, 1156, 0, 520, 0, 1216, 1194,
	1207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 1384, 1382,
	1383, 1321, 1369, 0, 1346, 0, 1347, 1348, 1349, 0,
	0, 1342, 0, 1343, 1344, 1345, 1337, 0, 1338, 1339,
	0, 1340, 203, 647, 649, 0, 529, 531, 532, 0,
	559, 572, 577, 578, 581, 34, 39, 0, 716, 0,
	568, 0, 0, 728, 320, 755, 0, 0, 771, 794,
	800, 0, 0, 0, 828, 0, 566, 0, 0, 661,
	370, 0, 424, 425, 374, 1496, 379, 621, 384, 380,
	385, 428, 386, 387, 388, 0, 621, 621, 423, 426,
	413, 427, 426, 416, 417, 0, 435, 439, 436, 0,
	438, 392, 394, 568, 303, 304, 0, 0, 308, 1389,
	1389, 0, 1389, 1389, 1389, 1389, 0, 0, 1389, 1389,
	1389, 1389, 1389, 1389, 1389, 1389, 1389, 1389, 1389, 1389,
	1389, 1389, 0, 814, 317, 0, 0, 320, 745, 634,
	0, 635, 636, 632, 663, 687, 687, 0, 687, 667,
	944, 223, 224, 0, 0, 218, 172, 173, 0, 175,
	176, 177, 184, 179, 181, 0, 0, 185, 197, 198,
	199, 0, 0, 0, 189, 190, 0, 0, 243, 244,
	246, 0, 557, 459, 942, 460, 461, 465, 0, 467,
	468, 469, 716, 750, 621, 0, 630, 0, 626, 693,
	0, 695, 0, 621, 541, 501, 0, 506, 522, 0,
	526, 0, 0, 518, 511, 515, 0, 0, 535, 495,
	0, 0, 500, 560, 562, 985, 0, 275, 289, 0,
	0, 0, 0, 99, 758, 0, 100, 104, 94, 0,
	0, 0, 763, 0, 760, 765, 0, 114, 0, 0,
	89, 90, 819, 824, 0, 1267, 1269, 1271, 1273, 1275,
	0, 1278, 1288, 1288, 1284, 0, 1279, 0, 1281, 0,
	1258, 0, 1081, 0, 0, 0, 0, 0, 0, 1138,
	1139, 0, 0, 1143, 0, 1145, 1146, 1147, 1149, 0,
	0, 0, 1153, 0, 1192, 1208, 1196, 1197, 0, 1201,
	0, 1203, 0, 575, 0, 1115, 1115, 0, 0, 0,
	0, 1115, 0, 0, 0, 0, 0, 0, 0, 0,
	1075, 0, 1364, 1317, 1385, 0, 0, 0, 1366, 0,
	0, 0, 0, 0, 650, 541, 0, 0, 0, 584,
	582, 583, 0, 0, 717, 718, 720, 721, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1429, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	715, 0, 805, 735, 1389, 324, 0, 0, 757, 0,
	0, 0, -2, 0, 0, 0, 0, 830, 0, 0,
	0, 479, 483, 33, 569, 0, 622, 372, 0, 373,
	423, 381, 621, 944, 405, 406, 621, 423, 423, 426,
	0, 437, 0, 813, 306, 950, 951, 0, 0, 953,
	1010, 0, 962, 804, 962, 0, 0, 964, 965, 307,
	0, 0, 0, 0, 0, 0, 1390, 0, 1389, 1389,
	0, 0, 0, 0, 1389, 1389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 735, 1389, 0, 0, 324, 742, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 653, 0, 0, 0,
	0, 0, 568, 688, 0, 690, 691, 665, -2, 0,
	634, 670, 1255, 225, 213, 215, 0, 0, 0, 0,
	186, 187, 188, 192, 193, 242, 245, 247, 0, 0,
	0, 619, 624, 631, 694, 696, 52, 627, 619, 545,
	0, 0, 525, 527, 0, 0, 525, 0, 0, 534,
	0, 0, 525, 0, 0, 444, 62, 295, 0, 0,
	0, 0, 0, 463, 0, 762, 96, 0, 0, 116,
	0, 0, 822, 0, 824, 1254, 1280, 1282, 0, 1289,
	1285, 1058, 1066, 1077, 0, 0, 1083, 1095, 1095, 0,
	1086, 1372, 1372, 1089, 1368, 1370, 1368, 1095, 1095, 0,
	53, 0, 0, 1144, 0, 0, 0, 521, 0, 0,
	0, 1113, 1115, 1120, 1116, 1121, 1115, 1115, 1115, 1115,
	1126, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1111,
	1374, 1373, 1359, 0, 1360, 1371, 1376, 0, 1379, 0,
	530, 545, 573, 574, 579, 580, 0, 0, 0, 0,
	722, 0, 738, 736, 737, 0, 752, 325, 326, 327,
	328, 0, 0, 0, 756, 0, 502, 0, 795, 796,
	797, 798, 799, -2, 808, 0, 0, 946, 946, 946,
	838, 0, 829, 533, 0, -2, 0, 0, 481, 0,
	0, 662, 375, 621, 398, 0, 414, 621, 621, 423,
	440, 0, 305, -2, 952, 1011, 974, 974, 963, 974,
	974, 804, 0, 309, 310, 311, 0, 313, 897, 898,
	0, 0, 901, 902, 903, 904, 0, 0, 907, 908,
	909, 910, 911, 912, 913, 914, 915, 916, 932, 933,
	934, 935, 936, 937, 917, 918, 919, 920, 921, 922,
	929, 0, 0, 926, 0, 738, 0, 0, 0, 752,
	744, 0, 746, 747, 0, 0, 504, 621, 235, 0,
	657, 651, 0, 640, 655, 656, 643, 0, 645, 0,
	641, 642, 621, 633, 664, 689, 666, 669, 671, 672,
	678, 0, 0, 0, 0, 217, 174, 0, 344, 180,
	943, 466, 471, 617, 0, 0, 617, 547, 76, 0,
	0, 0, 523, 0, 528, 525, 510, 519, 509, 516,
	517, 536, 525, 499, 498, 986, 270, 0, 759, 96,
	101, 102, 103, 97, 95, 766, 0, 768, 0, 820,
	824, 0, 0, 1286, 1082, 1067, 1084, 1096, 1097, 1085,
	1068, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1069, 1140,
	0, 1142, 1150, 1151, 0, 1198, 1202, 0, 0, 0,
	1119, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 575, 1112, 0, 1367, 0, 0, 547,
	585, 586, 710, 0, 719, 0, 726, 727, 0, 0,
	730, 731, 740, 0, 0, 0, 330, 331, 0, 0,
	0, 343, 339, 340, 341, 321, 751, 742, 0, 0,
	809, 1389, 1389, 1389, 0, 0, 947, 948, 0, 0,
	841, 0, 0, 832, 0, 687, 0, 0, 621, 480,
	483, 484, 567, 376, 621, 418, 415, 621, 302, 976,
	-2, 989, 991, 0, 0, 994, 995, 0, 0, 0,
	0, 1032, 1001, 0, 0, 1005, 0, 1304, 1305, 0,
	1009, 0, 966, 975, 0, 975, 0, 0, 974, 0,
	312, 899, 900, 905, 906, 923, 0, 0, 925, 0,
	0, 314, 0, 0, 315, 319, 743, 0, 748, 749,
	575, 0, 0, 637, 658, 0, 0, 638, 0, 639,
	644, 646, 234, 673, 0, 0, 675, 676, 677, 668,
	182, 607, 0, 0, 628, 608, 549, 0, 546, 77,
	0, 0, 0, 0, 524, 508, 497, 98, 93, 767,
	79, 823, 825, 821, 0, 1152, 0, 1115, 1114, 1108,
	0, 1377, 1380, 549, 0, 725, 723, 739, 729, 0,
	753, 754, 0, 332, 333, 0, 336, 342, 741, 503,
	0, 0, 0, 0, 801, -2, 0, 0, -2, 844,
	0, 839, 0, 831, 0, 834, 621, 621, -2, 477,
	482, 0, 399, 419, 990, 992, 993, 996, 997, 940,
	941, 998, 1037, 1038, 1039, 999, 1034, 1035, 1036, 1000,
	0, 0, 0, 1302, 1303, 1030, 0, 0, 0, 0,
	0, 0, 0, 960, 930, 931, 924, 927, 928, 318,
	316, 505, 570, 236, 237, 659, 0, 652, 682, 679,
	0, 0, 618, 620, 551, 0, 548, 0, 542, 544,
	87, 513, 49, 70, 0, 1141, 1191, 1118, 0, 1109,
	0, 1103, 1104, 1105, 1110, 551, 0, 0, 0, 329,
	334, 0, 337, 338, 0, 790, 1368, 0, 810, 811,
	812, 851, -2, 894, 949, 816, 79, 851, 835, 0,
	842, 0, 840, 833, 575, 478, 0, 0, 1205, 1025,
	0, 0, 967, 969, 970, 971, 972, 973, 968, 0,
	0, 0, 0, 959, 961, 1006, 0, 233, 0, 0,
	683, 685, 680, 681, 40, 0, 550, 78, 0, 41,
	0, 67, 0, 80, 81, 0, 0, 0, 0, 1117,
	1106, 0, 0, 0, 0, 540, 0, 724, 732, 0,
	734, 335, 783, 0, 581, 0, 853, 0, 813, 896,
	818, 853, 827, 0, 837, 0, 846, 0, 843, 570,
	1033, 0, 1004, 1013, 1026, 0, 0, 783, 783, 783,
	783, 0, 1007, 660, 674, 0, 0, 0, 50, 54,
	0, 76, 73, 0, 82, 0, 0, 0, 0, 0,
	1098, 1099, 1101, 1100, 1102, 0, 733, 782, 791, 792,
	581, 815, 0, 890, 895, 817, 836, 845, 0, 848,
	476, 1002, 1012, 1014, 1015, 0, 1027, 1028, 1029, 1031,
	954, 955, 956, 957, 0, 684, 686, 0, 553, 543,
	43, 0, 0, 71, 72, 74, 0, 83, 0, 85,
	86, 0, 713, 784, 1389, 0, 0, 788, 789, 793,
	0, 878, 0, 0, 884, 0, 891, 847, 1003, 1016,
	0, 1017, 0, 0, 0, 958, 552, 0, 826, 0,
	55, 0, 57, 59, 60, 977, 68, 69, 75, 84,
	1107, 0, 786, 0, 854, 0, 856, 0, 0, 0,
	0, 0, 888, 0, 1018, 1020, 1021, 0, 0, 1019,
	554, 44, 45, 0, 56, 0, 0, 785, 787, 0,
	858, 0, 879, 0, 0, 0, 0, 0, 0, 0,
	1022, 1024, 1023, 0, 0, 58, 978, 855, 852, 0,
	890, 880, 0, 882, 0, 0, 0, 0, 46, 47,
	48, 0, 0, 860, 0, 876, 881, 883, 885, 0,
	889, 887, 979, 859, 0, 872, 857, 0, 886, 861,
	-2, 0, 877, 862, -2, 0, 870, 0, 0, 863,
	871, 0, 866, 0, 0, 0, 865, 0, -2, 873,
	0, 0, 867, -2, 0, 875, 874,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 543,
	105, 104, 106, 3, 544, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 545, 117, 546, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:660
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:666
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:701
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:706
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:712
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:732
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:738
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:745
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:753
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:759
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:768
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:789
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:802
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:809
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:813
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:819
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:823
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:829
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:836
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:844
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:848
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:862
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:866
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:870
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:875
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:883
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:889
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:898
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:909
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:913
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:919
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:923
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:929
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:933
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:939
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:963
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:982
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:986
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:990
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:995
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:999
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1006
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1014
		{
			yyVAL.str = ""
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1021
		{
			yyVAL.str = yyDollar[3].str
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1026
		{
			yyVAL.str = "\n"
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1033
		{
			yyVAL.str = yyDollar[3].str
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1042
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1066
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1070
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1076
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1082
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1100
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1117
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1140
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1144
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1148
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1153
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1157
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1163
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1176
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1187
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1204
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1214
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1227
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1240
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1246
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1252
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1259
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1267
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1276
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1280
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1284
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1288
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1292
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1296
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1303
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1307
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1313
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1320
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1329
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1333
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1339
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1343
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1347
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1351
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1355
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1359
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1363
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1367
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1371
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1375
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1379
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1383
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1387
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1391
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1395
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1399
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1403
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1407
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1411
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1415
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1419
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1423
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1427
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1431
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1435
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1439
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1443
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1447
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1451
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1455
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1459
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1463
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1467
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1471
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1475
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1479
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1483
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1487
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1491
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1495
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1499
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1503
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1507
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1511
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1515
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1519
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1523
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1527
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1531
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1535
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1547
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1554
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1561
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1570
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1600
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1604
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1608
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1620
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1624
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1631
		{
			yyVAL.str = yyDollar[3].str
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1637
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1641
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1647
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1655
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1664
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1672
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1680
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1703
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1726
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1733
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1740
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1748
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1755
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1762
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1779
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1785
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1789
		{
			yyVAL.str = yyDollar[1].str
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1795
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1799
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1805
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1809
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1820
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1826
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1831
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1835
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1839
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1843
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1847
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1851
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1855
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1859
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1863
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1869
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1873
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1877
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1881
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1886
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1891
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1917
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1924
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1934
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1941
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1952
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1963
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1967
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1973
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1983
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1989
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1993
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:1999
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2005
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2009
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2013
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2017
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2035
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2045
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2055
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2061
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2067
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2077
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2083
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2087
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2091
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2095
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2099
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2103
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2111
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2119
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2129
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2170
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2174
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2180
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2186
		{
			yyVAL.str = yyDollar[1].str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2191
		{
			yyVAL.str = "true"
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2192
		{
			yyVAL.str = "false"
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2193
		{
			yyVAL.str = yyDollar[1].str
		}
	case 295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2198
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2213
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2233
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2237
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2243
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2250
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2254
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2267
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2288
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2297
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2326
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2332
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2358
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2363
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2367
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2376
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2392
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2396
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2400
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2404
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2408
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2412
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2416
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2420
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2424
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2432
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2440
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2444
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2448
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2452
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2458
		{
			yyVAL.item = nil
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2463
		{
			yyVAL.item = nil
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2499
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2512
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2521
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2525
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2536
		{
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2540
		{
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2545
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2554
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2560
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2566
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2572
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2578
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2584
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2590
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2599
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2603
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2607
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2611
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2615
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2619
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2623
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2627
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2631
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2637
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2644
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2654
		{
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2656
		{
		}
	case 405:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2665
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2675
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2684
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2688
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2692
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2698
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2704
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2710
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2716
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2725
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2735
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2747
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2751
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2757
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2769
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2783
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2789
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2796
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2801
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2805
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2809
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2814
		{
			yyVAL.str = ""
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2818
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2824
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2837
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2841
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2847
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2852
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2856
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2860
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2866
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2870
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2876
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2882
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2886
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2890
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2896
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2900
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2922
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2931
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2949
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2953
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2959
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2977
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2987
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2993
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2999
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3005
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3011
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3022
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3027
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3034
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3050
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3063
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3074
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3078
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3084
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3089
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3096
		{
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3098
		{
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3101
		{
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3110
		{
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3114
		{
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3119
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3128
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3135
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3141
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3149
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3156
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3163
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3183
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3196
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3202
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3206
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3212
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3219
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3225
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3233
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3247
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3266
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3270
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3279
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3283
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3289
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3298
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3302
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3308
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3312
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3318
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3322
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3328
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3333
		{
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3337
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3344
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3348
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3355
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3364
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3370
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3374
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3380
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3384
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3393
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3406
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3413
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3420
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3438
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3463
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3470
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3474
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3487
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3491
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3496
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3500
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3507
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3512
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3519
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3525
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3529
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3533
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3537
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3541
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3545
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3551
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3558
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3567
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3571
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3577
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3589
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3598
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3604
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3608
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3612
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3621
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3627
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3633
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3637
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3643
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3648
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3652
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3656
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3661
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3665
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3669
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3675
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3679
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3683
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3697
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3701
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3721
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3731
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3743
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3751
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3759
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3768
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3776
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3784
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3792
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3800
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3808
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3816
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3824
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3832
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3842
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3853
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3867
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3871
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3875
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3880
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3884
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3888
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3901
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3906
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3910
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3919
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3925
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3929
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3935
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3939
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3944
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3948
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3953
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3961
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3967
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3975
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3983
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3993
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3999
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4008
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4017
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4026
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4036
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4040
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4050
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4054
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4058
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4062
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4068
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4078
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4082
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4088
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4094
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4098
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4104
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4110
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4114
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4118
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4124
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4128
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4138
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4144
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4148
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4154
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4158
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4168
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4181
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4187
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4193
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4206
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4224
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4228
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4234
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4244
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4248
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4252
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4257
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4261
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4265
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4269
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4278
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4282
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4286
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4290
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4295
		{
			yyVAL.str = ""
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4299
		{
			yyVAL.str = yyDollar[1].str
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4303
		{
			yyVAL.str = yyDollar[2].str
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4309
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4315
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4319
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4323
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4327
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4331
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4337
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4369
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4379
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4385
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 713:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4392
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4404
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4409
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4415
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4422
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4426
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4432
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4438
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4442
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4446
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4452
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4458
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4464
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4475
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4487
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4493
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4503
		{
			yyVAL.str = yyDollar[1].str
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4507
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4513
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4520
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4526
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4534
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4540
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4547
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4555
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4561
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4570
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4582
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4593
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4597
		{
			yyVAL.str = yyDollar[2].str
		}
	case 744:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4603
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4617
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4623
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4629
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4635
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4644
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4653
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4658
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4664
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4672
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4778
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4782
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4788
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4798
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4802
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4808
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4818
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4822
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4826
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4835
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4841
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4848
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4854
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4863
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4870
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4879
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4883
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4889
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4903
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4907
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4911
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4916
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4920
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4924
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4928
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4934
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4953
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4957
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4979
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4983
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4987
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4991
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4995
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5001
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5005
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5011
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5016
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5021
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5029
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5033
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5037
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5043
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5058
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5068
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5072
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5081
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5087
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5091
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5097
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5101
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5105
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5110
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5114
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5120
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5132
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5141
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5154
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5161
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5171
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5179
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5190
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5194
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5199
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5203
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5210
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5221
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5234
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5248
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5252
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5256
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5263
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5270
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5277
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5284
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5288
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5292
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5296
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5300
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5307
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5314
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5318
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5325
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5332
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5336
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5343
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5350
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5357
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5364
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5368
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5377
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5391
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5398
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5405
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5409
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5422
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5428
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5432
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5438
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5447
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5461
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5467
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5471
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5477
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5484
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5493
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5497
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5506
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5511
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5515
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5520
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5524
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5534
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5538
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5549
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5557
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5565
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5573
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5593
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5603
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5613
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5617
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5622
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5626
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5631
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5635
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5641
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5645
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5649
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5655
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5659
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5663
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5667
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5671
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5675
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5680
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5684
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5688
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5692
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5696
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5700
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5704
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5708
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5712
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5716
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5720
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5724
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5728
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5732
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5736
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5740
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5744
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5748
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5752
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5756
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5760
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5764
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5768
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5775
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5779
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5785
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5790
		{
			yyVAL.str = ""
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5794
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5798
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5804
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5808
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5812
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5816
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5820
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5824
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5838
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5842
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5851
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5856
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5862
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5869
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5873
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5879
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5883
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5889
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5901
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5907
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5916
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5925
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5948
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5957
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5967
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5975
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5981
		{
			yyVAL.str = ""
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5985
		{
			yyVAL.str = yyDollar[1].str
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5995
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6001
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6007
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6021
		{
			yyVAL.str = ""
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6025
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6031
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6037
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6041
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6045
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6051
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6055
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6059
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6063
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6069
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6073
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6077
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6086
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6092
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6096
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6102
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6106
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6110
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6114
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6118
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6122
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6127
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6131
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6135
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6139
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6143
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6147
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6151
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6155
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6168
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6174
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6178
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6183
		{
			yyVAL.str = ""
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6187
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6193
		{
			yyVAL.str = ""
		}
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6197
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1012:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6203
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6215
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6222
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6229
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6236
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6243
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6252
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6258
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6264
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6268
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6272
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6276
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6285
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6292
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6296
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6300
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6305
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6309
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6314
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6318
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6334
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6340
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6344
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6348
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6352
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6356
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6360
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6364
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6368
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6372
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6376
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6380
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6384
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6388
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6394
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6398
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6402
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6406
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6410
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6414
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6418
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6422
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6426
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6430
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6434
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6438
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6443
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6451
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6456
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6460
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6469
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6473
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6477
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6481
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6485
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6491
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6500
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6504
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6509
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6513
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6519
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6523
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6529
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6539
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6556
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6573
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6586
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6599
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6611
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6625
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6640
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6655
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6672
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6687
		{
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6693
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6697
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6701
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6707
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6711
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6719
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6723
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6727
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6733
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6740
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6753
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6760
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6765
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6769
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6774
		{
			yyVAL.str = ","
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6778
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6783
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6790
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6800
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6811
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6821
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6830
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6839
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6849
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6859
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6869
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6879
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6889
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6899
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6909
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6919
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6929
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6939
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6949
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6959
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6976
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6984
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6992
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7000
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7008
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7018
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7026
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7035
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7043
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7051
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7059
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7067
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7078
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7088
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7100
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7111
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7133
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7169
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7181
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7193
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7204
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7212
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7219
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7226
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7238
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7246
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7254
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7265
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7274
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7283
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7291
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7301
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7309
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7323
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7333
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7352
		{
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7354
		{
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7395
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7406
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7410
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7414
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7420
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7425
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7429
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7435
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7439
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7446
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7450
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7454
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7462
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7466
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7470
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7474
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7480
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7484
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7488
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7492
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7496
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7500
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7504
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7508
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7512
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7516
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7524
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7528
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7532
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7536
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7540
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7544
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7548
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7552
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7556
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7560
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7566
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7570
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7576
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7580
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7587
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7591
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7595
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7601
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7605
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7609
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7613
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7617
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7621
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7625
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7631
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7635
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7639
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7643
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7649
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7653
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7666
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7671
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7675
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7679
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7683
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7687
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7691
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7705
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7709
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7716
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7727
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7732
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7738
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7750
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7762
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7774
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7787
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7800
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7813
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7826
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7839
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7852
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7865
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7878
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7891
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7904
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7919
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7946
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7988
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8036
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8053
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8065
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8085
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8105
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8125
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8141
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8154
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8167
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8180
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8193
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8205
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8217
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8229
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8241
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8253
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8265
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8277
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8289
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8301
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8314
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8327
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8342
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8350
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8359
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8369
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8392
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8397
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8403
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8410
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8414
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8419
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8423
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8429
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8435
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8442
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8449
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8458
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8465
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8472
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8481
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8485
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8489
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8495
		{
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8497
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8507
		{
			yyVAL.str = ""
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

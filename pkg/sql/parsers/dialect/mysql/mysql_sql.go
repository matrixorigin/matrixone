// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const ELSEIF = 57442
const LOWER_THAN_EQ = 57443
const LE = 57444
const GE = 57445
const NE = 57446
const NULL_SAFE_EQUAL = 57447
const IS = 57448
const LIKE = 57449
const REGEXP = 57450
const IN = 57451
const ASSIGNMENT = 57452
const ILIKE = 57453
const SHIFT_LEFT = 57454
const SHIFT_RIGHT = 57455
const DIV = 57456
const MOD = 57457
const UNARY = 57458
const COLLATE = 57459
const BINARY = 57460
const UNDERSCORE_BINARY = 57461
const INTERVAL = 57462
const OUT = 57463
const INOUT = 57464
const BEGIN = 57465
const START = 57466
const TRANSACTION = 57467
const COMMIT = 57468
const ROLLBACK = 57469
const WORK = 57470
const CONSISTENT = 57471
const SNAPSHOT = 57472
const CHAIN = 57473
const NO = 57474
const RELEASE = 57475
const PRIORITY = 57476
const QUICK = 57477
const BIT = 57478
const TINYINT = 57479
const SMALLINT = 57480
const MEDIUMINT = 57481
const INT = 57482
const INTEGER = 57483
const BIGINT = 57484
const INTNUM = 57485
const REAL = 57486
const DOUBLE = 57487
const FLOAT_TYPE = 57488
const DECIMAL = 57489
const NUMERIC = 57490
const DECIMAL_VALUE = 57491
const TIME = 57492
const TIMESTAMP = 57493
const DATETIME = 57494
const YEAR = 57495
const CHAR = 57496
const VARCHAR = 57497
const BOOL = 57498
const CHARACTER = 57499
const VARBINARY = 57500
const NCHAR = 57501
const TEXT = 57502
const TINYTEXT = 57503
const MEDIUMTEXT = 57504
const LONGTEXT = 57505
const BLOB = 57506
const TINYBLOB = 57507
const MEDIUMBLOB = 57508
const LONGBLOB = 57509
const JSON = 57510
const ENUM = 57511
const UUID = 57512
const GEOMETRY = 57513
const POINT = 57514
const LINESTRING = 57515
const POLYGON = 57516
const GEOMETRYCOLLECTION = 57517
const MULTIPOINT = 57518
const MULTILINESTRING = 57519
const MULTIPOLYGON = 57520
const INT1 = 57521
const INT2 = 57522
const INT3 = 57523
const INT4 = 57524
const INT8 = 57525
const S3OPTION = 57526
const SQL_SMALL_RESULT = 57527
const SQL_BIG_RESULT = 57528
const SQL_BUFFER_RESULT = 57529
const LOW_PRIORITY = 57530
const HIGH_PRIORITY = 57531
const DELAYED = 57532
const CREATE = 57533
const ALTER = 57534
const DROP = 57535
const RENAME = 57536
const ANALYZE = 57537
const ADD = 57538
const RETURNS = 57539
const SCHEMA = 57540
const TABLE = 57541
const SEQUENCE = 57542
const INDEX = 57543
const VIEW = 57544
const TO = 57545
const IGNORE = 57546
const IF = 57547
const PRIMARY = 57548
const COLUMN = 57549
const CONSTRAINT = 57550
const SPATIAL = 57551
const FULLTEXT = 57552
const FOREIGN = 57553
const KEY_BLOCK_SIZE = 57554
const SHOW = 57555
const DESCRIBE = 57556
const EXPLAIN = 57557
const DATE = 57558
const ESCAPE = 57559
const REPAIR = 57560
const OPTIMIZE = 57561
const TRUNCATE = 57562
const MAXVALUE = 57563
const PARTITION = 57564
const REORGANIZE = 57565
const LESS = 57566
const THAN = 57567
const PROCEDURE = 57568
const TRIGGER = 57569
const STATUS = 57570
const VARIABLES = 57571
const ROLE = 57572
const PROXY = 57573
const AVG_ROW_LENGTH = 57574
const STORAGE = 57575
const DISK = 57576
const MEMORY = 57577
const CHECKSUM = 57578
const COMPRESSION = 57579
const DATA = 57580
const DIRECTORY = 57581
const DELAY_KEY_WRITE = 57582
const ENCRYPTION = 57583
const ENGINE = 57584
const MAX_ROWS = 57585
const MIN_ROWS = 57586
const PACK_KEYS = 57587
const ROW_FORMAT = 57588
const STATS_AUTO_RECALC = 57589
const STATS_PERSISTENT = 57590
const STATS_SAMPLE_PAGES = 57591
const DYNAMIC = 57592
const COMPRESSED = 57593
const REDUNDANT = 57594
const COMPACT = 57595
const FIXED = 57596
const COLUMN_FORMAT = 57597
const AUTO_RANDOM = 57598
const RESTRICT = 57599
const CASCADE = 57600
const ACTION = 57601
const PARTIAL = 57602
const SIMPLE = 57603
const CHECK = 57604
const ENFORCED = 57605
const RANGE = 57606
const LIST = 57607
const ALGORITHM = 57608
const LINEAR = 57609
const PARTITIONS = 57610
const SUBPARTITION = 57611
const SUBPARTITIONS = 57612
const CLUSTER = 57613
const TYPE = 57614
const ANY = 57615
const SOME = 57616
const EXTERNAL = 57617
const LOCALFILE = 57618
const URL = 57619
const PREPARE = 57620
const DEALLOCATE = 57621
const RESET = 57622
const EXTENSION = 57623
const INCREMENT = 57624
const CYCLE = 57625
const MINVALUE = 57626
const PUBLICATION = 57627
const SUBSCRIPTIONS = 57628
const PUBLICATIONS = 57629
const PROPERTIES = 57630
const PARSER = 57631
const VISIBLE = 57632
const INVISIBLE = 57633
const BTREE = 57634
const HASH = 57635
const RTREE = 57636
const BSI = 57637
const ZONEMAP = 57638
const LEADING = 57639
const BOTH = 57640
const TRAILING = 57641
const UNKNOWN = 57642
const EXPIRE = 57643
const ACCOUNT = 57644
const ACCOUNTS = 57645
const UNLOCK = 57646
const DAY = 57647
const NEVER = 57648
const PUMP = 57649
const MYSQL_COMPATBILITY_MODE = 57650
const SECOND = 57651
const ASCII = 57652
const COALESCE = 57653
const COLLATION = 57654
const HOUR = 57655
const MICROSECOND = 57656
const MINUTE = 57657
const MONTH = 57658
const QUARTER = 57659
const REPEAT = 57660
const REVERSE = 57661
const ROW_COUNT = 57662
const WEEK = 57663
const REVOKE = 57664
const FUNCTION = 57665
const PRIVILEGES = 57666
const TABLESPACE = 57667
const EXECUTE = 57668
const SUPER = 57669
const GRANT = 57670
const OPTION = 57671
const REFERENCES = 57672
const REPLICATION = 57673
const SLAVE = 57674
const CLIENT = 57675
const USAGE = 57676
const RELOAD = 57677
const FILE = 57678
const TEMPORARY = 57679
const ROUTINE = 57680
const EVENT = 57681
const SHUTDOWN = 57682
const NULLX = 57683
const AUTO_INCREMENT = 57684
const APPROXNUM = 57685
const SIGNED = 57686
const UNSIGNED = 57687
const ZEROFILL = 57688
const ENGINES = 57689
const LOW_CARDINALITY = 57690
const ADMIN_NAME = 57691
const RANDOM = 57692
const SUSPEND = 57693
const ATTRIBUTE = 57694
const HISTORY = 57695
const REUSE = 57696
const CURRENT = 57697
const OPTIONAL = 57698
const FAILED_LOGIN_ATTEMPTS = 57699
const PASSWORD_LOCK_TIME = 57700
const UNBOUNDED = 57701
const SECONDARY = 57702
const USER = 57703
const IDENTIFIED = 57704
const CIPHER = 57705
const ISSUER = 57706
const X509 = 57707
const SUBJECT = 57708
const SAN = 57709
const REQUIRE = 57710
const SSL = 57711
const NONE = 57712
const PASSWORD = 57713
const MAX_QUERIES_PER_HOUR = 57714
const MAX_UPDATES_PER_HOUR = 57715
const MAX_CONNECTIONS_PER_HOUR = 57716
const MAX_USER_CONNECTIONS = 57717
const FORMAT = 57718
const VERBOSE = 57719
const CONNECTION = 57720
const TRIGGERS = 57721
const PROFILES = 57722
const LOAD = 57723
const INFILE = 57724
const TERMINATED = 57725
const OPTIONALLY = 57726
const ENCLOSED = 57727
const ESCAPED = 57728
const STARTING = 57729
const LINES = 57730
const ROWS = 57731
const IMPORT = 57732
const MODUMP = 57733
const OVER = 57734
const PRECEDING = 57735
const FOLLOWING = 57736
const GROUPS = 57737
const DATABASES = 57738
const TABLES = 57739
const SEQUENCES = 57740
const EXTENDED = 57741
const FULL = 57742
const PROCESSLIST = 57743
const FIELDS = 57744
const COLUMNS = 57745
const OPEN = 57746
const ERRORS = 57747
const WARNINGS = 57748
const INDEXES = 57749
const SCHEMAS = 57750
const NODE = 57751
const LOCKS = 57752
const TABLE_NUMBER = 57753
const COLUMN_NUMBER = 57754
const TABLE_VALUES = 57755
const TABLE_SIZE = 57756
const NAMES = 57757
const GLOBAL = 57758
const SESSION = 57759
const ISOLATION = 57760
const LEVEL = 57761
const READ = 57762
const WRITE = 57763
const ONLY = 57764
const REPEATABLE = 57765
const COMMITTED = 57766
const UNCOMMITTED = 57767
const SERIALIZABLE = 57768
const LOCAL = 57769
const EVENTS = 57770
const PLUGINS = 57771
const CURRENT_TIMESTAMP = 57772
const DATABASE = 57773
const CURRENT_TIME = 57774
const LOCALTIME = 57775
const LOCALTIMESTAMP = 57776
const UTC_DATE = 57777
const UTC_TIME = 57778
const UTC_TIMESTAMP = 57779
const REPLACE = 57780
const CONVERT = 57781
const SEPARATOR = 57782
const TIMESTAMPDIFF = 57783
const CURRENT_DATE = 57784
const CURRENT_USER = 57785
const CURRENT_ROLE = 57786
const SECOND_MICROSECOND = 57787
const MINUTE_MICROSECOND = 57788
const MINUTE_SECOND = 57789
const HOUR_MICROSECOND = 57790
const HOUR_SECOND = 57791
const HOUR_MINUTE = 57792
const DAY_MICROSECOND = 57793
const DAY_SECOND = 57794
const DAY_MINUTE = 57795
const DAY_HOUR = 57796
const YEAR_MONTH = 57797
const SQL_TSI_HOUR = 57798
const SQL_TSI_DAY = 57799
const SQL_TSI_WEEK = 57800
const SQL_TSI_MONTH = 57801
const SQL_TSI_QUARTER = 57802
const SQL_TSI_YEAR = 57803
const SQL_TSI_SECOND = 57804
const SQL_TSI_MINUTE = 57805
const RECURSIVE = 57806
const CONFIG = 57807
const DRAINER = 57808
const MATCH = 57809
const AGAINST = 57810
const BOOLEAN = 57811
const LANGUAGE = 57812
const WITH = 57813
const QUERY = 57814
const EXPANSION = 57815
const ADDDATE = 57816
const BIT_AND = 57817
const BIT_OR = 57818
const BIT_XOR = 57819
const CAST = 57820
const COUNT = 57821
const APPROX_COUNT_DISTINCT = 57822
const APPROX_PERCENTILE = 57823
const CURDATE = 57824
const CURTIME = 57825
const DATE_ADD = 57826
const DATE_SUB = 57827
const EXTRACT = 57828
const GROUP_CONCAT = 57829
const MAX = 57830
const MID = 57831
const MIN = 57832
const NOW = 57833
const POSITION = 57834
const SESSION_USER = 57835
const STD = 57836
const STDDEV = 57837
const MEDIAN = 57838
const STDDEV_POP = 57839
const STDDEV_SAMP = 57840
const SUBDATE = 57841
const SUBSTR = 57842
const SUBSTRING = 57843
const SUM = 57844
const SYSDATE = 57845
const SYSTEM_USER = 57846
const TRANSLATE = 57847
const TRIM = 57848
const VARIANCE = 57849
const VAR_POP = 57850
const VAR_SAMP = 57851
const AVG = 57852
const RANK = 57853
const NEXTVAL = 57854
const SETVAL = 57855
const CURRVAL = 57856
const LASTVAL = 57857
const ARROW = 57858
const ROW = 57859
const OUTFILE = 57860
const HEADER = 57861
const MAX_FILE_SIZE = 57862
const FORCE_QUOTE = 57863
const PARALLEL = 57864
const UNUSED = 57865
const BINDINGS = 57866
const DO = 57867
const DECLARE = 57868
const LOOP = 57869
const WHILE = 57870
const LEAVE = 57871
const ITERATE = 57872
const UNTIL = 57873
const CALL = 57874
const SPBEGIN = 57875
const KILL = 57876
const QUERY_RESULT = 57877

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9346

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 107,
	21, 621,
	-2, 602,
	-1, 121,
	218, 838,
	-2, 909,
	-1, 143,
	42, 443,
	218, 443,
	245, 450,
	246, 450,
	424, 443,
	-2, 476,
	-1, 179,
	554, 1567,
	-2, 365,
	-1, 494,
	294, 130,
	399, 130,
	-2, 1481,
	-1, 557,
	67, 1287,
	-2, 1621,
	-1, 558,
	67, 1305,
	-2, 1592,
	-1, 562,
	67, 1306,
	-2, 1620,
	-1, 585,
	67, 1217,
	-2, 1680,
	-1, 586,
	67, 1218,
	-2, 1679,
	-1, 587,
	67, 1219,
	-2, 1669,
	-1, 588,
	67, 1644,
	-2, 1664,
	-1, 589,
	67, 1645,
	-2, 1665,
	-1, 590,
	67, 1646,
	-2, 1671,
	-1, 591,
	67, 1647,
	-2, 1654,
	-1, 592,
	67, 1648,
	-2, 1662,
	-1, 593,
	67, 1649,
	-2, 1672,
	-1, 594,
	67, 1650,
	-2, 1673,
	-1, 595,
	67, 1651,
	-2, 1678,
	-1, 596,
	67, 1652,
	-2, 1683,
	-1, 597,
	67, 1653,
	-2, 1684,
	-1, 599,
	67, 1284,
	-2, 1473,
	-1, 606,
	67, 1293,
	-2, 1499,
	-1, 610,
	67, 1297,
	-2, 1538,
	-1, 611,
	67, 1298,
	-2, 1616,
	-1, 619,
	67, 1308,
	-2, 1601,
	-1, 621,
	67, 1310,
	-2, 1611,
	-1, 622,
	67, 1311,
	-2, 1635,
	-1, 633,
	67, 1195,
	-2, 1674,
	-1, 634,
	67, 1196,
	-2, 1675,
	-1, 635,
	67, 1197,
	-2, 1676,
	-1, 639,
	21, 622,
	-2, 585,
	-1, 707,
	419, 476,
	420, 476,
	-2, 444,
	-1, 748,
	105, 1473,
	116, 1473,
	136, 1473,
	-2, 1448,
	-1, 848,
	21, 622,
	-2, 585,
	-1, 947,
	21, 621,
	-2, 1100,
	-1, 1286,
	67, 1355,
	-2, 1618,
	-1, 1287,
	67, 1356,
	-2, 1619,
	-1, 1419,
	68, 763,
	-2, 769,
	-1, 1742,
	68, 1434,
	137, 1434,
	-2, 1603,
	-1, 1743,
	68, 1434,
	137, 1434,
	-2, 1602,
	-1, 1744,
	68, 1412,
	137, 1412,
	-2, 1589,
	-1, 1745,
	68, 1413,
	137, 1413,
	-2, 1594,
	-1, 1746,
	68, 1414,
	137, 1414,
	-2, 1526,
	-1, 1747,
	68, 1415,
	137, 1415,
	-2, 1520,
	-1, 1748,
	68, 1416,
	137, 1416,
	-2, 1464,
	-1, 1749,
	68, 1417,
	137, 1417,
	-2, 1591,
	-1, 1750,
	68, 1418,
	137, 1418,
	-2, 1524,
	-1, 1751,
	68, 1419,
	137, 1419,
	-2, 1519,
	-1, 1752,
	68, 1420,
	137, 1420,
	-2, 1512,
	-1, 1754,
	68, 1423,
	137, 1423,
	-2, 1635,
	-1, 1755,
	68, 1403,
	137, 1403,
	-2, 1621,
	-1, 1756,
	68, 1432,
	137, 1432,
	-2, 1592,
	-1, 1757,
	68, 1432,
	137, 1432,
	-2, 1620,
	-1, 1758,
	68, 1432,
	137, 1432,
	-2, 1482,
	-1, 1759,
	68, 1430,
	137, 1430,
	-2, 1611,
	-1, 1760,
	68, 1427,
	137, 1427,
	-2, 1504,
	-1, 1761,
	67, 1385,
	68, 1385,
	137, 1385,
	361, 1385,
	362, 1385,
	363, 1385,
	-2, 1463,
	-1, 1762,
	67, 1386,
	68, 1386,
	137, 1386,
	361, 1386,
	362, 1386,
	363, 1386,
	-2, 1465,
	-1, 1763,
	67, 1389,
	68, 1389,
	137, 1389,
	361, 1389,
	362, 1389,
	363, 1389,
	-2, 1593,
	-1, 1764,
	67, 1391,
	68, 1391,
	137, 1391,
	361, 1391,
	362, 1391,
	363, 1391,
	-2, 1576,
	-1, 1765,
	67, 1393,
	68, 1393,
	137, 1393,
	361, 1393,
	362, 1393,
	363, 1393,
	-2, 1525,
	-1, 1766,
	67, 1395,
	68, 1395,
	137, 1395,
	361, 1395,
	362, 1395,
	363, 1395,
	-2, 1508,
	-1, 1767,
	67, 1396,
	68, 1396,
	137, 1396,
	361, 1396,
	362, 1396,
	363, 1396,
	-2, 1509,
	-1, 1768,
	67, 1398,
	68, 1398,
	137, 1398,
	361, 1398,
	362, 1398,
	363, 1398,
	-2, 1462,
	-1, 1769,
	68, 1437,
	137, 1437,
	361, 1437,
	362, 1437,
	363, 1437,
	-2, 1487,
	-1, 1770,
	68, 1437,
	137, 1437,
	361, 1437,
	362, 1437,
	363, 1437,
	-2, 1500,
	-1, 1771,
	68, 1440,
	137, 1440,
	361, 1440,
	362, 1440,
	363, 1440,
	-2, 1483,
	-1, 1772,
	68, 1437,
	137, 1437,
	361, 1437,
	362, 1437,
	363, 1437,
	-2, 1561,
	-1, 1785,
	88, 873,
	132, 873,
	171, 873,
	174, 873,
	258, 873,
	-2, 866,
	-1, 1893,
	21, 621,
	-2, 713,
	-1, 2071,
	88, 873,
	132, 873,
	171, 873,
	174, 873,
	258, 873,
	-2, 867,
	-1, 2083,
	65, 529,
	137, 529,
	-2, 1004,
	-1, 2101,
	279, 1068,
	-2, 1047,
	-1, 2361,
	279, 1068,
	-2, 1048,
	-1, 2494,
	88, 873,
	132, 873,
	171, 873,
	174, 873,
	-2, 952,
	-1, 2497,
	88, 873,
	132, 873,
	171, 873,
	174, 873,
	-2, 952,
	-1, 2507,
	65, 529,
	137, 529,
	-2, 1005,
	-1, 2605,
	88, 873,
	132, 873,
	171, 873,
	174, 873,
	-2, 953,
	-1, 2895,
	68, 924,
	137, 924,
	-2, 873,
	-1, 2899,
	68, 924,
	137, 924,
	-2, 873,
	-1, 2913,
	68, 928,
	137, 928,
	-2, 873,
	-1, 2918,
	68, 929,
	137, 929,
	-2, 873,
}

const yyPrivate = 57344

const yyLast = 34209

var yyAct = [...]int{
	524, 1205, 1481, 2898, 2899, 2878, 170, 2907, 503, 2789,
	1267, 505, 526, 2837, 2807, 2829, 2572, 2577, 2665, 2748,
	2373, 2749, 1720, 2716, 1080, 2637, 2449, 2732, 2736, 2598,
	2659, 640, 2450, 2597, 978, 2681, 2649, 2575, 1440, 413,
	1196, 2625, 1442, 554, 2086, 2604, 2338, 1130, 419, 1270,
	424, 424, 2567, 1263, 2167, 2517, 424, 440, 447, 2166,
	2165, 447, 155, 1538, 2477, 2152, 2383, 1821, 2362, 2162,
	1513, 2159, 1976, 1887, 2447, 507, 1630, 458, 1521, 1826,
	2435, 1599, 2418, 2313, 2310, 2188, 2308, 1551, 1040, 747,
	2072, 2382, 1730, 1794, 1484, 452, 2218, 1738, 1401, 2257,
	502, 1975, 1573, 1192, 496, 1607, 497, 1626, 1600, 1608,
	842, 1531, 2201, 2599, 1740, 1888, 2336, 1926, 1056, 1625,
	753, 2054, 1516, 2050, 686, 1876, 1514, 1822, 423, 423,
	1477, 2105, 1793, 6, 431, 166, 8, 1427, 1088, 165,
	7, 1197, 1943, 1409, 504, 1658, 797, 413, 1161, 1261,
	418, 1139, 1535, 1266, 2017, 1736, 506, 1187, 53, 1627,
	1069, 1451, 106, 1450, 1778, 495, 1316, 35, 1637, 2018,
	170, 1300, 170, 1252, 788, 789, 514, 436, 1014, 14,
	859, 751, 26, 497, 15, 1603, 1606, 1168, 1589, 1260,
	1563, 739, 1204, 1895, 1426, 1468, 1058, 433, 13, 685,
	1065, 460, 1114, 36, 637, 1122, 1322, 1321, 23, 16,
	1081, 10, 156, 1160, 1089, 446, 1038, 149, 702, 683,
	740, 979, 1644, 152, 2251, 461, 2251, 1978, 639, 1634,
	2442, 1932, 784, 713, 786, 1930, 443, 1929, 1927, 444,
	1175, 441, 781, 1171, 785, 781, 780, 781, 154, 420,
	1173, 916, 917, 918, 915, 442, 2565, 2214, 2212, 412,
	445, 916, 917, 918, 915, 1578, 2655, 2650, 2568, 2448,
	1405, 429, 1840, 973, 2725, 1602, 450, 638, 2691, 1342,
	153, 153, 49, 145, 122, 2780, 648, 153, 779, 2590,
	8, 2589, 153, 1971, 7, 153, 153, 1030, 49, 145,
	122, 153, 153, 49, 145, 122, 153, 1219, 2700, 757,
	153, 879, 1212, 754, 2280, 1963, 1642, 2233, 756, 1631,
	1782, 457, 2692, 1216, 1907, 913, 1549, 1908, 1209, 1253,
	456, 2226, 1257, 763, 758, 762, 764, 150, 150, 1413,
	1414, 1356, 105, 1237, 1218, 1077, 105, 2825, 1031, 1211,
	2052, 2823, 150, 150, 498, 1944, 1256, 641, 150, 150,
	768, 723, 894, 150, 761, 895, 628, 150, 627, 629,
	630, 1084, 631, 632, 906, 1083, 1086, 1087, 728, 887,
	649, 727, 889, 1086, 1087, 1464, 1269, 1097, 2752, 2753,
	1098, 911, 750, 897, 749, 916, 917, 918, 915, 1713,
	2585, 2726, 2727, 2051, 2811, 2812, 2660, 2661, 2662, 2663,
	890, 2451, 766, 2657, 2219, 2718, 2718, 2721, 2220, 769,
	2221, 2653, 2451, 424, 1272, 1958, 853, 862, 2731, 2460,
	1532, 1338, 1258, 424, 852, 1335, 759, 2779, 1524, 1337,
	1334, 1336, 1340, 1341, 2478, 1638, 2485, 1339, 1248, 447,
	447, 1867, 424, 1255, 1777, 1528, 2057, 767, 2324, 1174,
	1172, 847, 849, 2595, 732, 892, 1586, 899, 2673, 2042,
	900, 2314, 2246, 1100, 2380, 1181, 1180, 2244, 121, 882,
	151, 729, 883, 909, 910, 2322, 908, 1968, 2566, 2213,
	2156, 1869, 2329, 2818, 491, 760, 2827, 493, 902, 2676,
	143, 844, 492, 2592, 1872, 885, 2335, 752, 862, 2318,
	949, 850, 2393, 2394, 2342, 2782, 2783, 888, 891, 2741,
	2079, 1075, 782, 783, 893, 2584, 791, 787, 2751, 1271,
	870, 2586, 2688, 874, 449, 448, 846, 2319, 2320, 2537,
	731, 884, 1278, 1281, 1282, 2737, 2892, 851, 2908, 2846,
	1643, 848, 2321, 1279, 2639, 2707, 852, 2822, 1547, 1548,
	2791, 1254, 2853, 1064, 2857, 765, 2530, 1850, 904, 905,
	898, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1345, 1346, 1347, 1348, 1349, 1350, 1343, 1344,
	1109, 1647, 1649, 1650, 896, 2521, 1849, 2525, 757, 2400,
	2787, 2788, 754, 2791, 2316, 2832, 903, 756, 864, 863,
	730, 886, 2543, 2544, 2063, 855, 856, 443, 443, 1099,
	444, 444, 441, 441, 2626, 2627, 2628, 2630, 2629, 901,
	1102, 982, 455, 1118, 1117, 872, 442, 442, 1079, 1078,
	2879, 445, 445, 1063, 2464, 1062, 2250, 2066, 2067, 2068,
	2069, 724, 2909, 2682, 951, 952, 953, 954, 2137, 1036,
	419, 1039, 1632, 2915, 867, 868, 1632, 757, 1011, 983,
	1632, 754, 843, 2903, 2296, 2499, 756, 1659, 2563, 871,
	857, 781, 781, 2689, 1041, 686, 781, 2690, 781, 864,
	863, 2715, 955, 456, 781, 2333, 2781, 781, 1115, 1086,
	1087, 1964, 1928, 1086, 1087, 1645, 1827, 1830, 2190, 2192,
	879, 1898, 1176, 1633, 2728, 2729, 2828, 1635, 1839, 1830,
	1085, 1046, 2249, 1646, 2833, 1050, 1082, 1076, 1049, 424,
	1048, 1111, 451, 2304, 726, 1053, 2056, 725, 2041, 2638,
	638, 50, 413, 413, 413, 1533, 50, 1134, 1134, 1724,
	424, 1042, 1043, 1044, 1045, 2325, 1047, 2591, 123, 123,
	1051, 1972, 2674, 2315, 1034, 123, 2247, 447, 1039, 419,
	123, 1164, 1164, 123, 123, 1280, 1141, 873, 1417, 123,
	123, 724, 170, 1416, 123, 991, 992, 752, 123, 2060,
	2061, 413, 2317, 878, 1525, 1136, 2596, 2259, 2258, 2902,
	1132, 1132, 1723, 2059, 1249, 1726, 1725, 1107, 2526, 2527,
	1037, 1527, 680, 681, 682, 1032, 1033, 1415, 772, 777,
	778, 2334, 2523, 678, 1648, 1844, 2522, 650, 1140, 651,
	2612, 2858, 914, 2415, 2914, 1831, 1733, 1182, 2411, 1203,
	1824, 1206, 2347, 2921, 1825, 1828, 1214, 1831, 2920, 2830,
	2831, 1016, 1443, 2911, 919, 1690, 1071, 1072, 1689, 1734,
	1735, 879, 2893, 948, 726, 1018, 1235, 725, 2191, 1946,
	2495, 957, 1220, 654, 1834, 1443, 639, 1714, 1963, 1134,
	1886, 1134, 852, 2047, 2888, 2138, 2140, 2141, 2142, 2139,
	2044, 642, 1110, 962, 1073, 1951, 1829, 2882, 2881, 2862,
	1230, 1231, 1091, 1092, 1055, 1094, 1095, 1096, 1066, 1070,
	1070, 1070, 914, 1885, 2085, 1909, 1101, 914, 1103, 1157,
	1194, 1195, 2912, 1090, 653, 1631, 1093, 914, 656, 655,
	1066, 1640, 1066, 1067, 916, 917, 918, 915, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1128, 1129, 2839, 2889, 1311, 1312, 1185, 1816, 1188, 1189,
	1116, 1320, 1125, 1126, 1127, 2801, 1640, 1640, 1640, 733,
	1359, 1360, 1361, 1886, 1369, 429, 1142, 1199, 1719, 1202,
	2278, 1694, 1155, 1375, 1156, 1165, 1376, 1669, 1265, 774,
	775, 776, 1234, 1622, 1166, 1268, 2415, 1378, 1383, 1384,
	1233, 757, 1833, 2759, 2754, 757, 2084, 1837, 1835, 914,
	1545, 1177, 1836, 916, 917, 918, 915, 2709, 2708, 1566,
	1886, 2840, 1283, 2705, 2704, 1718, 1246, 1221, 642, 1054,
	1780, 2703, 1262, 1068, 2802, 1226, 1399, 443, 1314, 2702,
	444, 424, 441, 1425, 1134, 1429, 1210, 1431, 1432, 1243,
	1217, 1240, 424, 1119, 845, 686, 442, 1251, 1441, 1668,
	1222, 445, 1134, 2677, 2545, 1239, 1111, 2402, 639, 1250,
	1244, 440, 2678, 2678, 2185, 1242, 1241, 1402, 1238, 1259,
	2876, 2841, 2023, 1368, 2510, 1544, 2710, 1798, 1309, 1310,
	1463, 931, 2678, 2678, 916, 917, 918, 915, 1469, 1469,
	2678, 1111, 1111, 1424, 1111, 1264, 2348, 424, 2678, 1425,
	1425, 1467, 1979, 1134, 1511, 1523, 1456, 1961, 1302, 1422,
	413, 1955, 1134, 1430, 1953, 1163, 1163, 1779, 2085, 1948,
	1436, 1462, 2678, 1909, 1465, 1466, 2403, 1433, 1434, 1435,
	1717, 1564, 877, 1886, 2203, 2484, 1012, 1941, 424, 1425,
	1134, 914, 1556, 424, 424, 1559, 1351, 1352, 1939, 1355,
	1562, 1937, 2087, 1966, 1568, 1935, 1797, 1370, 1965, 1507,
	1508, 170, 1957, 1354, 170, 170, 1715, 170, 1698, 879,
	1377, 914, 1379, 1813, 876, 1475, 1798, 1697, 1471, 1688,
	1949, 1685, 1679, 1954, 1670, 1406, 1529, 1428, 1949, 1621,
	1380, 1571, 1421, 1223, 1444, 1445, 960, 865, 1452, 1553,
	1454, 1455, 1369, 1369, 1610, 1446, 1942, 1400, 1678, 1369,
	1369, 1677, 1639, 1460, 1617, 845, 1552, 1940, 1555, 1534,
	1936, 1552, 1552, 1577, 1936, 1798, 1580, 1581, 840, 1583,
	1557, 1558, 838, 1227, 2742, 1714, 1461, 914, 1441, 1897,
	2343, 2352, 1134, 1629, 1438, 1437, 914, 877, 914, 2241,
	1449, 914, 1472, 1448, 2871, 1473, 1428, 1474, 1453, 1273,
	1274, 1275, 1276, 1277, 652, 1458, 1459, 1066, 1358, 1357,
	2613, 1542, 1543, 2859, 1067, 2502, 1623, 914, 2743, 1457,
	914, 1640, 1059, 1123, 1470, 1841, 1060, 2416, 1611, 2407,
	1070, 2404, 2252, 1262, 1124, 1652, 1121, 1510, 1512, 2344,
	2500, 1530, 1228, 1318, 1319, 2157, 1656, 1657, 845, 1353,
	1550, 1605, 1952, 1900, 2614, 854, 1927, 1363, 1605, 2503,
	2440, 1539, 1540, 1541, 1986, 1921, 1381, 1382, 1575, 1554,
	1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1317, 2345, 2501, 1574, 1572, 1317, 2205, 1665,
	1106, 1169, 1108, 1575, 1112, 1113, 918, 915, 1403, 1423,
	757, 1389, 1407, 2776, 754, 1410, 915, 757, 2533, 756,
	1591, 754, 2532, 1695, 1068, 2222, 756, 657, 1120, 2115,
	1702, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1615,
	2114, 1616, 1159, 2109, 1612, 1619, 1614, 443, 2104, 1620,
	444, 2514, 441, 934, 935, 936, 937, 938, 931, 496,
	2856, 852, 1773, 2897, 1624, 2885, 442, 916, 917, 918,
	915, 445, 2847, 2842, 424, 424, 424, 1308, 1795, 932,
	933, 934, 935, 936, 937, 938, 931, 2792, 1802, 1111,
	1654, 1655, 2593, 1305, 1307, 1304, 1660, 1306, 1806, 2160,
	2482, 1651, 757, 1373, 2855, 2148, 754, 916, 917, 918,
	915, 756, 1111, 2817, 1374, 2767, 1653, 1403, 2443, 852,
	2744, 1302, 1664, 1403, 1403, 916, 917, 918, 915, 2146,
	2144, 2594, 1804, 2693, 2651, 2619, 1931, 527, 536, 2483,
	2134, 1807, 1808, 528, 2147, 535, 529, 533, 532, 530,
	531, 2616, 1787, 1788, 1789, 2615, 2504, 2481, 2271, 1890,
	1890, 1523, 1890, 491, 1576, 1817, 493, 1579, 2145, 2143,
	1582, 492, 2309, 1584, 1741, 2323, 1805, 2237, 852, 2133,
	2217, 1774, 2216, 2132, 2131, 1134, 424, 929, 939, 940,
	932, 933, 934, 935, 936, 937, 938, 931, 537, 2130,
	2127, 852, 419, 2270, 2121, 1164, 2118, 1523, 1712, 2117,
	1916, 1594, 1918, 1593, 1843, 1592, 170, 1681, 1588, 1587,
	1995, 1224, 1029, 2573, 1727, 2813, 916, 917, 918, 915,
	534, 1894, 1820, 1892, 1815, 1896, 2777, 1781, 1905, 2713,
	1810, 2675, 2652, 1811, 2603, 2571, 1913, 2569, 837, 834,
	835, 836, 1803, 982, 2000, 1920, 1999, 1998, 1996, 2549,
	2547, 2153, 1959, 2516, 1140, 1629, 2480, 2479, 1812, 2476,
	1680, 2469, 1134, 1814, 1134, 2910, 1134, 1915, 1922, 2463,
	1977, 852, 922, 923, 924, 925, 926, 927, 928, 920,
	2410, 983, 2408, 916, 917, 918, 915, 1809, 939, 940,
	932, 933, 934, 935, 936, 937, 938, 931, 2398, 1662,
	1134, 2004, 1666, 2397, 1741, 1870, 2301, 2300, 2248, 757,
	1997, 2215, 1070, 754, 2196, 2135, 2011, 1969, 756, 2128,
	2124, 1134, 1901, 1902, 1903, 2123, 2122, 1906, 584, 583,
	2695, 2013, 1716, 1596, 1590, 916, 917, 918, 915, 1412,
	2870, 1676, 1912, 1914, 2441, 1225, 1911, 2003, 990, 1683,
	986, 985, 961, 1132, 841, 2664, 2497, 2015, 916, 917,
	918, 915, 2496, 852, 2494, 2468, 1169, 1696, 2012, 2455,
	1699, 1700, 1701, 2446, 1132, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 2445, 1973, 1970, 1842, 2434, 1845, 1846,
	1847, 1848, 1984, 2433, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 2034, 1960,
	1134, 1967, 1990, 2064, 1962, 1262, 2353, 1425, 916, 917,
	918, 915, 153, 2083, 2276, 145, 122, 1988, 1799, 2089,
	1980, 1981, 2269, 2261, 1983, 2256, 2200, 2746, 2001, 2002,
	916, 917, 918, 915, 2098, 1994, 2046, 2043, 2735, 1923,
	916, 917, 918, 915, 2103, 1938, 1721, 1722, 1934, 1170,
	916, 917, 918, 915, 2111, 2112, 2113, 1933, 1703, 1693,
	2116, 916, 917, 918, 915, 1691, 2045, 2074, 2092, 150,
	2536, 1687, 2094, 2019, 1890, 1686, 2048, 1684, 2024, 2035,
	1675, 1194, 1195, 2038, 2149, 1672, 1671, 1595, 1398, 1372,
	1371, 2081, 1362, 1425, 852, 1523, 1523, 1523, 1523, 2090,
	2073, 916, 917, 918, 915, 153, 852, 1523, 1146, 1144,
	1890, 2864, 2854, 2851, 1403, 1403, 1403, 2579, 2849, 1134,
	2766, 1189, 2711, 980, 1184, 2106, 2080, 2106, 2635, 2623,
	424, 424, 1199, 1667, 1202, 2107, 2620, 2062, 2557, 1163,
	916, 917, 918, 915, 170, 2082, 2555, 2540, 2539, 170,
	2088, 2538, 8, 1428, 2535, 2101, 7, 2578, 2529, 2489,
	539, 107, 150, 1193, 1186, 2181, 107, 2100, 1057, 2102,
	1369, 2097, 1369, 2150, 2110, 2232, 2077, 2076, 2236, 2108,
	916, 917, 918, 915, 1134, 2075, 1198, 2243, 1201, 2129,
	916, 917, 918, 915, 930, 929, 939, 940, 932, 933,
	934, 935, 936, 937, 938, 931, 2206, 2168, 2198, 2199,
	2154, 2210, 2158, 1692, 430, 1190, 2797, 107, 2033, 2168,
	2091, 2169, 2170, 2171, 2172, 2184, 2183, 2095, 2096, 2182,
	2180, 1402, 2197, 1947, 639, 1899, 2231, 1865, 2194, 1796,
	1987, 2093, 643, 644, 645, 646, 1303, 2207, 2005, 2006,
	150, 1560, 2229, 2204, 1420, 642, 2008, 2009, 2235, 2264,
	1419, 2266, 2240, 2208, 1247, 1213, 2225, 2245, 852, 2014,
	2053, 1191, 1013, 1010, 2312, 2223, 1009, 2230, 1008, 2228,
	1007, 1006, 1005, 1004, 2327, 1003, 424, 1002, 1001, 1403,
	1000, 2239, 2036, 2037, 1410, 999, 852, 852, 852, 998,
	2253, 997, 996, 2254, 1145, 1523, 1795, 995, 2351, 994,
	2193, 755, 2260, 993, 2355, 107, 989, 988, 987, 1342,
	984, 2267, 2268, 2265, 2542, 2384, 2386, 757, 2384, 2384,
	107, 977, 107, 976, 757, 2391, 2119, 2120, 974, 973,
	1134, 1134, 2125, 2126, 2466, 972, 971, 916, 917, 918,
	915, 970, 2297, 969, 2354, 968, 967, 2302, 2356, 2357,
	2155, 966, 965, 964, 2330, 2305, 963, 916, 917, 918,
	915, 424, 2227, 2262, 2263, 2349, 2312, 959, 958, 2234,
	2303, 1741, 2331, 2332, 1425, 1425, 2073, 2395, 2396, 2381,
	881, 2281, 2385, 1132, 1132, 2282, 2283, 2284, 2285, 2350,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 839, 1820,
	1820, 1820, 2346, 2339, 2340, 2274, 2419, 2420, 2389, 2387,
	2388, 1801, 2273, 1784, 2004, 869, 2795, 2750, 757, 2414,
	2422, 2065, 1910, 2444, 1598, 880, 2425, 2424, 916, 917,
	918, 915, 2272, 2174, 2426, 916, 917, 918, 915, 1552,
	2177, 2175, 2173, 2412, 2413, 2178, 2176, 2896, 2401, 1956,
	2406, 2405, 2409, 93, 52, 916, 917, 918, 915, 1950,
	424, 1338, 2032, 2307, 2423, 1335, 2010, 2040, 757, 1337,
	1334, 1336, 1340, 1341, 2031, 1506, 2179, 1339, 1882, 1883,
	2430, 2431, 2432, 2427, 421, 916, 917, 918, 915, 2298,
	2299, 1945, 2209, 2306, 2211, 2439, 2030, 916, 917, 918,
	915, 2560, 51, 2559, 2358, 2029, 1178, 426, 427, 1974,
	2886, 1015, 1403, 2359, 1721, 1722, 1775, 1403, 2456, 916,
	917, 918, 915, 1207, 2028, 2457, 2458, 2459, 916, 917,
	918, 915, 1561, 875, 2462, 425, 2470, 2558, 2461, 2730,
	1425, 2099, 916, 917, 918, 915, 2493, 916, 917, 918,
	915, 2049, 1791, 2255, 1439, 1418, 428, 1890, 1523, 2507,
	930, 929, 939, 940, 932, 933, 934, 935, 936, 937,
	938, 931, 2027, 1358, 1357, 2275, 1027, 1028, 1025, 1026,
	1134, 2804, 2472, 1868, 2515, 1023, 1024, 1509, 107, 107,
	755, 424, 2475, 1021, 1022, 916, 917, 918, 915, 2429,
	2386, 1105, 2508, 1104, 907, 1618, 2509, 1061, 2511, 2488,
	2487, 2512, 1345, 1346, 1347, 1348, 1349, 1350, 1343, 1344,
	2026, 2865, 1425, 1017, 2785, 2773, 852, 2771, 2506, 2474,
	2505, 2738, 2723, 2518, 2722, 2720, 2712, 2025, 2646, 2381,
	2513, 2645, 2570, 916, 917, 918, 915, 2022, 2471, 2562,
	2453, 2452, 170, 2437, 1020, 642, 2551, 2436, 2202, 947,
	916, 917, 918, 915, 1443, 852, 2541, 2238, 2021, 2534,
	916, 917, 918, 915, 1786, 2390, 2799, 2798, 2798, 2546,
	2552, 2548, 2550, 2587, 643, 644, 645, 646, 1674, 866,
	2553, 916, 917, 918, 915, 2020, 1673, 642, 2799, 2531,
	852, 1134, 1134, 2016, 2454, 1074, 852, 2606, 2007, 60,
	2606, 157, 3, 2, 2564, 1546, 1138, 1985, 916, 917,
	918, 915, 1, 1411, 2574, 647, 916, 917, 918, 915,
	2186, 916, 917, 918, 915, 2588, 2187, 2428, 2189, 2168,
	916, 917, 918, 915, 1636, 1866, 852, 1776, 2601, 852,
	852, 852, 2607, 2610, 1132, 2518, 2609, 2602, 2617, 2618,
	2326, 1052, 2509, 679, 1364, 1232, 1441, 771, 2643, 861,
	1313, 1229, 916, 917, 918, 915, 2647, 2648, 2168, 2624,
	860, 858, 2632, 2633, 2634, 2621, 2640, 1315, 541, 2631,
	1601, 2151, 1019, 916, 917, 918, 915, 2642, 2803, 1873,
	2672, 2836, 2765, 2806, 2641, 1878, 1881, 1882, 1883, 1879,
	1245, 1880, 1884, 525, 2714, 2490, 2491, 2492, 2684, 1820,
	2656, 688, 1878, 1881, 1882, 1883, 1879, 2769, 1880, 1884,
	2658, 2576, 1641, 2580, 852, 2670, 2465, 912, 2224, 698,
	577, 552, 975, 2467, 1215, 1208, 852, 2279, 773, 551,
	2679, 2486, 2058, 2687, 668, 770, 2686, 2685, 699, 2694,
	1585, 2654, 1179, 1200, 1183, 2611, 2697, 2701, 2498, 2341,
	2078, 2906, 2895, 2877, 2863, 2790, 2891, 2821, 2852, 2706,
	2583, 2581, 2582, 724, 2845, 2786, 462, 1526, 411, 852,
	737, 2636, 1597, 463, 1800, 2724, 2739, 2778, 2622, 2719,
	2717, 666, 1783, 1143, 2868, 667, 2071, 2070, 430, 1284,
	921, 1301, 2734, 2294, 2295, 956, 501, 1663, 2733, 513,
	2055, 2760, 2763, 2374, 2195, 2740, 59, 58, 57, 2745,
	56, 1567, 107, 178, 543, 177, 2762, 2808, 674, 2764,
	2755, 2756, 2757, 2758, 523, 522, 521, 2772, 520, 2774,
	2775, 2770, 519, 2768, 930, 929, 939, 940, 932, 933,
	934, 935, 936, 937, 938, 931, 726, 1877, 2784, 725,
	1875, 1874, 1518, 1517, 1565, 2392, 1838, 2810, 1832, 2796,
	2794, 1403, 2793, 1476, 2554, 2747, 2698, 2556, 2699, 2809,
	2800, 2528, 2136, 107, 2524, 2520, 852, 107, 2399, 2605,
	2814, 2561, 2360, 711, 2361, 2815, 2367, 1790, 107, 796,
	792, 689, 794, 2835, 795, 2824, 2826, 107, 793, 1993,
	1989, 1818, 1819, 2337, 1732, 2834, 2838, 1731, 1729, 2843,
	1728, 852, 1035, 2671, 2473, 1739, 1737, 2421, 716, 2417,
	2328, 2844, 2848, 1609, 2850, 1408, 2039, 1519, 1515, 1871,
	1785, 2810, 2861, 85, 84, 91, 134, 46, 162, 161,
	852, 164, 852, 2809, 676, 2860, 671, 163, 661, 160,
	2867, 1924, 2869, 2872, 1925, 673, 672, 159, 1167, 158,
	2838, 852, 2873, 2608, 636, 2880, 37, 2887, 33, 12,
	2890, 2884, 659, 11, 34, 21, 665, 22, 710, 709,
	20, 1236, 19, 25, 32, 2894, 31, 30, 2901, 2819,
	100, 99, 2905, 2904, 29, 708, 98, 97, 96, 2913,
	95, 28, 2916, 18, 687, 41, 2901, 2919, 2918, 40,
	2917, 2905, 39, 9, 90, 690, 719, 670, 88, 27,
	89, 669, 86, 87, 1268, 71, 70, 658, 2669, 69,
	82, 664, 81, 80, 79, 78, 77, 76, 697, 714,
	68, 67, 66, 65, 64, 2680, 83, 75, 662, 74,
	73, 72, 63, 1268, 62, 1268, 61, 119, 120, 118,
	117, 116, 115, 114, 113, 2696, 42, 43, 44, 660,
	45, 715, 720, 2866, 1268, 130, 129, 131, 133, 135,
	132, 127, 125, 677, 128, 126, 124, 54, 705, 17,
	703, 707, 723, 24, 4, 0, 704, 701, 700, 0,
	706, 691, 692, 693, 694, 695, 696, 663, 721, 722,
	0, 2669, 0, 0, 0, 0, 0, 0, 0, 0,
	717, 718, 0, 930, 929, 939, 940, 932, 933, 934,
	935, 936, 937, 938, 931, 2277, 942, 0, 946, 0,
	0, 0, 2816, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 943, 945, 941, 712, 944, 930,
	929, 939, 940, 932, 933, 934, 935, 936, 937, 938,
	931, 0, 0, 0, 0, 0, 0, 675, 0, 0,
	0, 0, 0, 0, 0, 930, 929, 939, 940, 932,
	933, 934, 935, 936, 937, 938, 931, 0, 0, 0,
	0, 107, 0, 0, 107, 107, 0, 107, 349, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 2669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 258, 0, 0, 282,
	0, 0, 755, 550, 0, 0, 341, 296, 0, 755,
	0, 0, 607, 615, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 0, 508, 0, 0, 540, 584, 583,
	527, 536, 0, 0, 240, 176, 528, 0, 535, 529,
	533, 532, 530, 531, 0, 599, 0, 0, 0, 0,
	0, 0, 499, 512, 2666, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 2875, 930, 929, 939, 940, 932,
	933, 934, 935, 936, 937, 938, 931, 0, 0, 509,
	510, 0, 0, 0, 0, 560, 0, 511, 0, 0,
	555, 537, 538, 0, 947, 0, 0, 231, 346, 362,
	241, 337, 375, 246, 344, 236, 311, 334, 0, 0,
	233, 360, 343, 293, 276, 277, 232, 0, 329, 256,
	269, 253, 309, 534, 558, 562, 252, 621, 556, 370,
	235, 0, 369, 308, 356, 361, 294, 288, 234, 358,
	292, 287, 280, 260, 622, 273, 320, 286, 321, 274,
	298, 297, 299, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 0, 0, 0, 372, 0, 0, 605,
	0, 0, 0, 345, 0, 0, 281, 0, 0, 0,
	557, 0, 332, 314, 618, 500, 0, 330, 284, 357,
	322, 363, 347, 371, 326, 323, 226, 348, 255, 295,
	237, 239, 251, 257, 259, 261, 262, 304, 305, 317,
	336, 350, 351, 352, 254, 247, 331, 248, 271, 249,
	227, 338, 250, 229, 318, 355, 0, 267, 327, 291,
	230, 290, 319, 354, 353, 238, 379, 385, 386, 391,
	0, 392, 0, 0, 0, 400, 404, 405, 406, 408,
	409, 410, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 384, 265, 223, 224, 417, 603,
	310, 0, 0, 617, 598, 600, 601, 604, 608, 609,
	610, 611, 612, 614, 616, 620, 416, 0, 0, 0,
	0, 0, 415, 316, 0, 335, 0, 0, 0, 0,
	0, 1893, 0, 0, 0, 0, 0, 0, 342, 365,
	377, 395, 398, 0, 0, 0, 228, 397, 0, 2667,
	0, 0, 0, 2668, 0, 619, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 561, 300, 301, 302, 303,
	606, 0, 245, 396, 325, 0, 0, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 389, 390, 264, 270, 407, 272, 244, 315, 266,
	374, 278, 0, 401, 0, 0, 0, 0, 0, 307,
	275, 339, 279, 285, 328, 373, 313, 333, 242, 364,
	340, 289, 812, 1982, 628, 602, 627, 629, 630, 626,
	631, 632, 613, 518, 0, 565, 624, 623, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 930, 929, 939,
	940, 932, 933, 934, 935, 936, 937, 938, 931, 0,
	0, 0, 225, 0, 283, 0, 324, 263, 591, 570,
	571, 572, 517, 573, 568, 569, 592, 563, 588, 589,
	542, 566, 574, 587, 575, 590, 593, 594, 633, 634,
	581, 635, 578, 595, 586, 585, 576, 564, 596, 597,
	549, 544, 579, 580, 567, 582, 545, 546, 547, 548,
	0, 812, 0, 380, 381, 382, 403, 366, 0, 414,
	0, 0, 0, 0, 0, 800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 820, 824, 826, 828, 830,
	831, 833, 0, 837, 834, 835, 836, 0, 0, 815,
	816, 817, 818, 798, 799, 821, 0, 801, 0, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 811, 813,
	819, 0, 0, 0, 0, 0, 0, 0, 823, 825,
	827, 829, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 0,
	0, 0, 0, 0, 800, 0, 0, 0, 790, 0,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 0,
	0, 0, 0, 0, 820, 824, 826, 828, 830, 831,
	833, 0, 837, 834, 835, 836, 0, 0, 815, 816,
	817, 818, 798, 799, 821, 0, 801, 0, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 813, 819,
	0, 0, 0, 0, 1661, 0, 0, 823, 825, 827,
	829, 832, 0, 0, 0, 1522, 1522, 1522, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 930, 929,
	939, 940, 932, 933, 934, 935, 936, 937, 938, 931,
	0, 0, 0, 0, 814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1991, 1992, 0, 0, 0, 0, 107,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 559, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	258, 0, 0, 282, 0, 0, 0, 550, 0, 0,
	341, 296, 0, 0, 0, 0, 607, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 0,
	0, 540, 584, 583, 527, 536, 0, 0, 240, 176,
	528, 0, 535, 529, 533, 532, 530, 531, 0, 599,
	107, 0, 0, 0, 0, 0, 499, 512, 0, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 510, 1522, 0, 0, 0, 560,
	0, 511, 0, 0, 555, 537, 538, 0, 0, 0,
	107, 231, 346, 362, 241, 337, 375, 246, 344, 236,
	311, 334, 0, 0, 233, 360, 343, 293, 276, 277,
	232, 0, 329, 256, 269, 253, 309, 534, 558, 562,
	252, 621, 556, 370, 235, 0, 369, 308, 356, 361,
	294, 288, 234, 358, 292, 287, 280, 260, 622, 273,
	320, 286, 321, 274, 298, 297, 299, 822, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 0, 0, 0,
	372, 0, 0, 605, 0, 0, 0, 345, 0, 0,
	281, 0, 0, 0, 557, 0, 332, 314, 618, 500,
	0, 330, 284, 357, 322, 363, 347, 371, 326, 323,
	226, 348, 255, 295, 237, 239, 251, 257, 259, 261,
	262, 304, 305, 317, 336, 350, 351, 352, 254, 247,
	331, 248, 271, 249, 227, 338, 250, 229, 318, 355,
	0, 267, 327, 291, 230, 290, 319, 354, 353, 238,
	379, 385, 386, 391, 0, 392, 0, 0, 0, 400,
	404, 405, 406, 408, 409, 410, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 1366, 1365, 1367, 384, 265,
	223, 224, 417, 603, 310, 0, 0, 617, 598, 600,
	601, 604, 608, 609, 610, 611, 612, 614, 616, 620,
	416, 0, 0, 0, 0, 0, 415, 316, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 365, 377, 395, 398, 0, 0, 0,
	228, 397, 0, 0, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 376, 0, 0, 0, 0, 1522, 561,
	300, 301, 302, 303, 606, 0, 245, 396, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 264, 270, 407,
	272, 244, 315, 266, 374, 278, 0, 401, 0, 0,
	0, 0, 0, 307, 275, 339, 279, 285, 328, 373,
	313, 333, 242, 364, 340, 289, 0, 0, 628, 602,
	627, 629, 630, 626, 631, 632, 613, 518, 0, 565,
	624, 623, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 225, 0, 283, 0,
	324, 263, 591, 570, 571, 572, 517, 573, 568, 569,
	592, 563, 588, 589, 542, 566, 574, 587, 575, 590,
	593, 594, 633, 634, 581, 635, 578, 595, 586, 585,
	576, 564, 596, 597, 549, 544, 579, 580, 567, 582,
	545, 546, 547, 548, 349, 559, 0, 380, 381, 382,
	403, 366, 0, 414, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 258, 0, 0, 282, 0, 0, 0, 550,
	0, 0, 341, 296, 0, 0, 0, 0, 607, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	508, 0, 0, 540, 584, 583, 527, 536, 0, 0,
	240, 176, 528, 0, 535, 529, 533, 532, 530, 531,
	0, 599, 0, 0, 0, 0, 0, 0, 499, 512,
	0, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 0, 0, 0,
	0, 560, 0, 511, 0, 0, 555, 537, 538, 0,
	0, 0, 0, 231, 346, 362, 241, 337, 375, 246,
	344, 236, 311, 334, 0, 0, 233, 360, 343, 293,
	276, 277, 232, 0, 329, 256, 269, 253, 309, 534,
	558, 562, 252, 621, 556, 370, 235, 0, 369, 308,
	356, 361, 294, 288, 234, 358, 292, 287, 280, 260,
	622, 273, 320, 286, 321, 274, 298, 297, 299, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 0,
	0, 0, 372, 0, 0, 605, 0, 0, 0, 345,
	0, 0, 281, 0, 0, 0, 557, 0, 332, 314,
	618, 500, 0, 330, 284, 357, 322, 363, 347, 371,
	326, 323, 226, 348, 255, 295, 237, 239, 251, 257,
	259, 261, 262, 304, 305, 317, 336, 350, 351, 352,
	254, 247, 331, 248, 271, 249, 227, 338, 250, 229,
	318, 355, 0, 267, 327, 291, 230, 290, 319, 354,
	353, 238, 379, 385, 386, 391, 0, 392, 0, 0,
	0, 400, 404, 405, 406, 408, 409, 410, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	384, 265, 223, 224, 417, 603, 310, 0, 0, 617,
	598, 600, 601, 604, 608, 609, 610, 611, 612, 614,
	616, 620, 416, 0, 0, 0, 0, 0, 415, 316,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 365, 377, 395, 398, 0,
	0, 0, 228, 397, 0, 2667, 0, 0, 0, 2668,
	0, 619, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 561, 300, 301, 302, 303, 606, 0, 245, 396,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 264,
	270, 407, 272, 244, 315, 266, 374, 278, 0, 401,
	0, 0, 0, 0, 0, 307, 275, 339, 279, 285,
	328, 373, 313, 333, 242, 364, 340, 289, 0, 0,
	628, 602, 627, 629, 630, 626, 631, 632, 613, 518,
	0, 565, 624, 623, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	283, 0, 324, 263, 591, 570, 571, 572, 517, 573,
	568, 569, 592, 563, 588, 589, 542, 566, 574, 587,
	575, 590, 593, 594, 633, 634, 581, 635, 578, 595,
	586, 585, 576, 564, 596, 597, 549, 544, 579, 580,
	567, 582, 545, 546, 547, 548, 349, 559, 0, 380,
	381, 382, 403, 366, 0, 414, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 258, 1404, 0, 282, 0, 0,
	0, 550, 0, 0, 341, 296, 0, 0, 0, 0,
	607, 615, 0, 0, 0, 0, 0, 0, 0, 1536,
	0, 0, 508, 0, 0, 540, 584, 583, 527, 536,
	0, 0, 240, 176, 528, 0, 535, 529, 533, 532,
	530, 531, 0, 599, 0, 0, 0, 0, 0, 0,
	499, 512, 0, 516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 0,
	0, 0, 0, 560, 0, 511, 0, 0, 1537, 537,
	538, 0, 0, 0, 0, 231, 346, 362, 241, 337,
	375, 246, 344, 236, 311, 334, 0, 0, 233, 360,
	343, 293, 276, 277, 232, 0, 329, 256, 269, 253,
	309, 534, 558, 562, 252, 621, 556, 370, 235, 0,
	369, 308, 356, 361, 294, 288, 234, 358, 292, 287,
	280, 260, 622, 273, 320, 286, 321, 274, 298, 297,
	299, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 0, 0, 0, 372, 0, 0, 605, 0, 0,
	0, 345, 0, 0, 281, 0, 0, 0, 557, 0,
	332, 314, 618, 500, 0, 330, 284, 357, 322, 363,
	347, 371, 326, 323, 226, 348, 255, 295, 237, 239,
	251, 257, 259, 261, 262, 304, 305, 317, 336, 350,
	351, 352, 254, 247, 331, 248, 271, 249, 227, 338,
	250, 229, 318, 355, 0, 267, 327, 291, 230, 290,
	319, 354, 353, 238, 379, 385, 386, 391, 0, 392,
	0, 0, 0, 400, 404, 405, 406, 408, 409, 410,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 384, 265, 223, 224, 417, 603, 310, 0,
	0, 617, 598, 600, 601, 604, 608, 609, 610, 611,
	612, 614, 616, 620, 416, 0, 0, 0, 0, 0,
	415, 316, 0, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 365, 377, 395,
	398, 0, 0, 0, 228, 397, 0, 0, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 561, 300, 301, 302, 303, 606, 0,
	245, 396, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 264, 270, 407, 272, 244, 315, 266, 374, 278,
	0, 401, 0, 0, 0, 0, 0, 307, 275, 339,
	279, 285, 328, 373, 313, 333, 242, 364, 340, 289,
	0, 0, 628, 602, 627, 629, 630, 626, 631, 632,
	613, 518, 0, 565, 624, 623, 625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 283, 0, 324, 263, 591, 570, 571, 572,
	517, 573, 568, 569, 592, 563, 588, 589, 542, 566,
	574, 587, 575, 590, 593, 594, 633, 634, 581, 635,
	578, 595, 586, 585, 576, 564, 596, 597, 549, 544,
	579, 580, 567, 582, 545, 546, 547, 548, 153, 349,
	559, 380, 381, 382, 403, 366, 0, 414, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 0, 0, 0, 258, 0, 0,
	282, 0, 0, 0, 950, 0, 0, 341, 296, 0,
	0, 0, 0, 607, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 508, 0, 0, 540, 584,
	583, 527, 536, 0, 0, 240, 176, 528, 0, 535,
	529, 533, 532, 530, 531, 0, 599, 0, 0, 0,
	0, 0, 0, 499, 512, 0, 516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 0, 0, 0, 0, 560, 0, 511, 0,
	0, 555, 537, 538, 0, 0, 0, 0, 231, 346,
	362, 241, 337, 375, 246, 344, 236, 311, 334, 0,
	0, 233, 360, 343, 293, 276, 277, 232, 0, 329,
	256, 269, 253, 309, 534, 558, 562, 252, 621, 556,
	370, 235, 0, 369, 308, 356, 361, 294, 288, 234,
	358, 292, 287, 280, 260, 622, 273, 320, 286, 321,
	274, 298, 297, 299, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 0, 0, 0, 372, 0, 0,
	605, 0, 0, 0, 345, 0, 0, 281, 0, 0,
	0, 557, 0, 332, 314, 618, 500, 0, 330, 284,
	357, 322, 363, 347, 371, 326, 323, 226, 348, 255,
	295, 237, 239, 251, 257, 259, 261, 262, 304, 305,
	317, 336, 350, 351, 352, 254, 247, 331, 248, 271,
	249, 227, 338, 250, 229, 318, 355, 0, 267, 327,
	291, 230, 290, 319, 354, 353, 238, 379, 385, 386,
	391, 0, 392, 0, 0, 0, 400, 404, 405, 406,
	408, 409, 410, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 384, 265, 223, 224, 417,
	603, 310, 0, 0, 617, 598, 600, 601, 604, 608,
	609, 610, 611, 612, 614, 616, 620, 416, 0, 0,
	0, 0, 0, 415, 316, 0, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	365, 377, 395, 398, 0, 0, 0, 228, 397, 0,
	0, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 561, 300, 301, 302,
	303, 606, 0, 245, 396, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 390, 264, 270, 407, 272, 244, 315,
	266, 374, 278, 0, 401, 0, 0, 0, 0, 0,
	307, 275, 339, 279, 285, 328, 373, 313, 333, 242,
	364, 340, 289, 0, 0, 628, 602, 627, 629, 630,
	626, 631, 632, 613, 518, 0, 565, 624, 623, 625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 283, 123, 324, 263, 591,
	570, 571, 572, 517, 573, 568, 569, 592, 563, 588,
	589, 542, 566, 574, 587, 575, 590, 593, 594, 633,
	634, 581, 635, 578, 595, 586, 585, 576, 564, 596,
	597, 549, 544, 579, 580, 567, 582, 545, 546, 547,
	548, 349, 559, 0, 380, 381, 382, 403, 366, 0,
	414, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 0, 0, 0, 258,
	2874, 0, 282, 0, 0, 0, 550, 0, 0, 341,
	296, 0, 0, 0, 0, 607, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 508, 0, 0,
	540, 584, 583, 527, 536, 0, 0, 240, 176, 528,
	0, 535, 529, 533, 532, 530, 531, 0, 599, 0,
	0, 0, 0, 0, 0, 499, 512, 0, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 0, 0, 0, 0, 560, 0,
	511, 0, 0, 555, 537, 538, 0, 0, 0, 0,
	231, 346, 362, 241, 337, 375, 246, 344, 236, 311,
	334, 0, 0, 233, 360, 343, 293, 276, 277, 232,
	0, 329, 256, 269, 253, 309, 534, 558, 562, 252,
	621, 556, 370, 235, 0, 369, 308, 356, 361, 294,
	288, 234, 358, 292, 287, 280, 260, 622, 273, 320,
	286, 321, 274, 298, 297, 299, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 0, 0, 0, 372,
	0, 0, 605, 0, 0, 0, 345, 0, 0, 281,
	0, 0, 0, 557, 0, 332, 314, 618, 500, 0,
	330, 284, 357, 322, 363, 347, 371, 326, 323, 226,
	348, 255, 295, 237, 239, 251, 257, 259, 261, 262,
	304, 305, 317, 336, 350, 351, 352, 254, 247, 331,
	248, 271, 249, 227, 338, 250, 229, 318, 355, 0,
	267, 327, 291, 230, 290, 319, 354, 353, 238, 379,
	385, 386, 391, 0, 392, 0, 0, 0, 400, 404,
	405, 406, 408, 409, 410, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 384, 265, 223,
	224, 417, 603, 310, 0, 0, 617, 598, 600, 601,
	604, 608, 609, 610, 611, 612, 614, 616, 620, 416,
	0, 0, 0, 0, 0, 415, 316, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 365, 377, 395, 398, 0, 0, 0, 228,
	397, 0, 0, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 561, 300,
	301, 302, 303, 606, 0, 245, 396, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 390, 264, 270, 407, 272,
	244, 315, 266, 374, 278, 0, 401, 0, 0, 0,
	0, 0, 307, 275, 339, 279, 285, 328, 373, 313,
	333, 242, 364, 340, 289, 0, 0, 628, 602, 627,
	629, 630, 626, 631, 632, 613, 518, 0, 565, 624,
	623, 625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 283, 0, 324,
	263, 591, 570, 571, 572, 517, 573, 568, 569, 592,
	563, 588, 589, 542, 566, 574, 587, 575, 590, 593,
	594, 633, 634, 581, 635, 578, 595, 586, 585, 576,
	564, 596, 597, 549, 544, 579, 580, 567, 582, 545,
	546, 547, 548, 349, 559, 0, 380, 381, 382, 403,
	366, 0, 414, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 0, 0,
	0, 258, 1404, 0, 282, 0, 0, 0, 550, 0,
	0, 341, 296, 0, 0, 0, 0, 607, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 508,
	0, 0, 540, 584, 583, 527, 536, 0, 0, 240,
	176, 528, 0, 535, 529, 533, 532, 530, 531, 0,
	599, 0, 0, 0, 0, 0, 0, 499, 512, 0,
	516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 0, 0, 0, 0,
	560, 0, 511, 0, 0, 555, 537, 538, 0, 0,
	0, 0, 231, 346, 362, 241, 337, 375, 246, 344,
	236, 311, 334, 0, 0, 233, 360, 343, 293, 276,
	277, 232, 0, 329, 256, 269, 253, 309, 534, 558,
	562, 252, 621, 556, 370, 235, 0, 369, 308, 356,
	361, 294, 288, 234, 358, 292, 287, 280, 260, 622,
	273, 320, 286, 321, 274, 298, 297, 299, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 372, 0, 0, 605, 0, 0, 0, 345, 0,
	0, 281, 0, 0, 0, 557, 0, 332, 314, 618,
	500, 0, 330, 284, 357, 322, 363, 347, 371, 326,
	323, 226, 348, 255, 295, 237, 239, 251, 257, 259,
	261, 262, 304, 305, 317, 336, 350, 351, 352, 254,
	247, 331, 248, 271, 249, 227, 338, 250, 229, 318,
	355, 0, 267, 327, 291, 230, 290, 319, 354, 353,
	238, 379, 385, 386, 391, 0, 392, 0, 0, 0,
	400, 404, 405, 406, 408, 409, 410, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 384,
	265, 223, 224, 417, 603, 310, 0, 0, 617, 598,
	600, 601, 604, 608, 609, 610, 611, 612, 614, 616,
	620, 416, 0, 0, 0, 0, 0, 415, 316, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 365, 377, 395, 398, 0, 0,
	0, 228, 397, 0, 0, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	561, 300, 301, 302, 303, 606, 0, 245, 396, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 390, 264, 270,
	407, 272, 244, 315, 266, 374, 278, 0, 401, 0,
	0, 0, 0, 0, 307, 275, 339, 279, 285, 328,
	373, 313, 333, 242, 364, 340, 289, 0, 0, 628,
	602, 627, 629, 630, 626, 631, 632, 613, 518, 0,
	565, 624, 623, 625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 283,
	0, 324, 263, 591, 570, 571, 572, 517, 573, 568,
	569, 592, 563, 588, 589, 542, 566, 574, 587, 575,
	590, 593, 594, 633, 634, 581, 635, 578, 595, 586,
	585, 576, 564, 596, 597, 549, 544, 579, 580, 567,
	582, 545, 546, 547, 548, 349, 559, 0, 380, 381,
	382, 403, 366, 0, 414, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 515,
	0, 0, 0, 258, 0, 0, 282, 0, 0, 0,
	550, 0, 0, 341, 296, 0, 0, 0, 0, 607,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 0, 0, 540, 584, 583, 527, 536, 0,
	0, 240, 176, 528, 0, 535, 529, 533, 532, 530,
	531, 0, 599, 0, 0, 0, 0, 0, 0, 499,
	512, 0, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 1162, 0,
	0, 0, 560, 0, 511, 0, 0, 555, 537, 538,
	0, 0, 0, 0, 231, 346, 362, 241, 337, 375,
	246, 344, 236, 311, 334, 0, 0, 233, 360, 343,
	293, 276, 277, 232, 0, 329, 256, 269, 253, 309,
	534, 558, 562, 252, 621, 556, 370, 235, 0, 369,
	308, 356, 361, 294, 288, 234, 358, 292, 287, 280,
	260, 622, 273, 320, 286, 321, 274, 298, 297, 299,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	0, 0, 0, 372, 0, 0, 605, 0, 0, 0,
	345, 0, 0, 281, 0, 0, 0, 557, 0, 332,
	314, 618, 500, 0, 330, 284, 357, 322, 363, 347,
	371, 326, 323, 226, 348, 255, 295, 237, 239, 251,
	257, 259, 261, 262, 304, 305, 317, 336, 350, 351,
	352, 254, 247, 331, 248, 271, 249, 227, 338, 250,
	229, 318, 355, 0, 267, 327, 291, 230, 290, 319,
	354, 353, 238, 379, 385, 386, 391, 0, 392, 0,
	0, 0, 400, 404, 405, 406, 408, 409, 410, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 384, 265, 223, 224, 417, 603, 310, 0, 0,
	617, 598, 600, 601, 604, 608, 609, 610, 611, 612,
	614, 616, 620, 416, 0, 0, 0, 0, 0, 415,
	316, 0, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 365, 377, 395, 398,
	0, 0, 0, 228, 397, 0, 0, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 561, 300, 301, 302, 303, 606, 0, 245,
	396, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 390,
	264, 270, 407, 272, 244, 315, 266, 374, 278, 0,
	401, 0, 0, 0, 0, 0, 307, 275, 339, 279,
	285, 328, 373, 313, 333, 242, 364, 340, 289, 0,
	0, 628, 602, 627, 629, 630, 626, 631, 632, 613,
	518, 0, 565, 624, 623, 625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 283, 0, 324, 263, 591, 570, 571, 572, 517,
	573, 568, 569, 592, 563, 588, 589, 542, 566, 574,
	587, 575, 590, 593, 594, 633, 634, 581, 635, 578,
	595, 586, 585, 576, 564, 596, 597, 549, 544, 579,
	580, 567, 582, 545, 546, 547, 548, 0, 0, 0,
	380, 381, 382, 403, 366, 0, 414, 349, 559, 0,
	0, 1682, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 515, 0, 0, 0, 258, 0, 0, 282, 0,
	0, 0, 550, 0, 0, 341, 296, 0, 0, 0,
	0, 607, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 508, 0, 0, 540, 584, 583, 527,
	536, 0, 0, 240, 176, 528, 0, 535, 529, 533,
	532, 530, 531, 0, 599, 0, 0, 0, 0, 0,
	0, 499, 512, 0, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	0, 0, 0, 0, 560, 0, 511, 0, 0, 555,
	537, 538, 0, 0, 0, 0, 231, 346, 362, 241,
	337, 375, 246, 344, 236, 311, 334, 0, 0, 233,
	360, 343, 293, 276, 277, 232, 0, 329, 256, 269,
	253, 309, 534, 558, 562, 252, 621, 556, 370, 235,
	0, 369, 308, 356, 361, 294, 288, 234, 358, 292,
	287, 280, 260, 622, 273, 320, 286, 321, 274, 298,
	297, 299, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 0, 0, 0, 372, 0, 0, 605, 0,
	0, 0, 345, 0, 0, 281, 0, 0, 0, 557,
	0, 332, 314, 618, 500, 0, 330, 284, 357, 322,
	363, 347, 371, 326, 323, 226, 348, 255, 295, 237,
	239, 251, 257, 259, 261, 262, 304, 305, 317, 336,
	350, 351, 352, 254, 247, 331, 248, 271, 249, 227,
	338, 250, 229, 318, 355, 0, 267, 327, 291, 230,
	290, 319, 354, 353, 238, 379, 385, 386, 391, 0,
	392, 0, 0, 0, 400, 404, 405, 406, 408, 409,
	410, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 384, 265, 223, 224, 417, 603, 310,
	0, 0, 617, 598, 600, 601, 604, 608, 609, 610,
	611, 612, 614, 616, 620, 416, 0, 0, 0, 0,
	0, 415, 316, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 365, 377,
	395, 398, 0, 0, 0, 228, 397, 0, 0, 0,
	0, 0, 0, 0, 619, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 561, 300, 301, 302, 303, 606,
	0, 245, 396, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 390, 264, 270, 407, 272, 244, 315, 266, 374,
	278, 0, 401, 0, 0, 0, 0, 0, 307, 275,
	339, 279, 285, 328, 373, 313, 333, 242, 364, 340,
	289, 0, 0, 628, 602, 627, 629, 630, 626, 631,
	632, 613, 518, 0, 565, 624, 623, 625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 283, 0, 324, 263, 591, 570, 571,
	572, 517, 573, 568, 569, 592, 563, 588, 589, 542,
	566, 574, 587, 575, 590, 593, 594, 633, 634, 581,
	635, 578, 595, 586, 585, 576, 564, 596, 597, 549,
	544, 579, 580, 567, 582, 545, 546, 547, 548, 349,
	559, 0, 380, 381, 382, 403, 366, 0, 414, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 0, 0, 0, 258, 0, 0,
	282, 0, 0, 0, 550, 0, 0, 341, 296, 0,
	0, 0, 0, 607, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 508, 0, 0, 540, 584,
	583, 527, 536, 0, 0, 240, 176, 528, 0, 535,
	529, 533, 532, 530, 531, 0, 599, 0, 0, 0,
	0, 0, 0, 499, 512, 0, 516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 0, 0, 0, 0, 560, 0, 511, 0,
	0, 555, 537, 538, 0, 0, 0, 0, 231, 346,
	362, 241, 337, 375, 246, 344, 236, 311, 334, 0,
	0, 233, 360, 343, 293, 276, 277, 232, 0, 329,
	256, 269, 253, 309, 534, 558, 562, 252, 621, 556,
	370, 235, 0, 369, 308, 356, 361, 294, 288, 234,
	358, 292, 287, 280, 260, 622, 273, 320, 286, 321,
	274, 298, 297, 299, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 0, 0, 0, 372, 0, 0,
	605, 0, 0, 0, 345, 0, 0, 281, 0, 0,
	0, 557, 0, 332, 314, 618, 500, 0, 330, 284,
	357, 322, 363, 347, 371, 326, 323, 226, 348, 255,
	295, 237, 239, 251, 257, 259, 261, 262, 304, 305,
	317, 336, 350, 351, 352, 254, 247, 331, 248, 271,
	249, 227, 338, 250, 229, 318, 355, 0, 267, 327,
	291, 230, 290, 319, 354, 353, 238, 379, 385, 386,
	391, 0, 392, 0, 0, 0, 400, 404, 405, 406,
	408, 409, 410, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 384, 265, 223, 224, 417,
	603, 310, 0, 0, 617, 598, 600, 601, 604, 608,
	609, 610, 611, 612, 614, 616, 620, 416, 0, 0,
	0, 0, 0, 415, 316, 0, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	365, 377, 395, 398, 0, 0, 0, 228, 397, 0,
	0, 0, 0, 0, 0, 0, 619, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 561, 300, 301, 302,
	303, 606, 0, 245, 396, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 390, 264, 270, 407, 272, 244, 315,
	266, 374, 278, 0, 401, 0, 0, 0, 0, 0,
	307, 275, 339, 279, 285, 328, 373, 313, 333, 242,
	364, 340, 289, 0, 0, 628, 602, 627, 629, 630,
	626, 631, 632, 613, 518, 0, 565, 624, 623, 625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 283, 0, 324, 263, 591,
	570, 571, 572, 517, 573, 568, 569, 592, 563, 588,
	589, 542, 566, 574, 587, 575, 590, 593, 594, 633,
	634, 581, 635, 578, 595, 586, 585, 576, 564, 596,
	597, 549, 544, 579, 580, 567, 582, 545, 546, 547,
	548, 349, 559, 0, 380, 381, 382, 403, 366, 0,
	414, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 0, 0, 0, 515, 0, 0, 0, 258,
	0, 0, 282, 0, 0, 0, 550, 0, 0, 341,
	296, 0, 0, 0, 0, 607, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 508, 0, 0,
	540, 584, 583, 527, 536, 0, 0, 240, 176, 528,
	0, 535, 529, 533, 532, 530, 531, 0, 599, 0,
	0, 0, 0, 0, 0, 0, 512, 0, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 0, 0, 0, 0, 560, 0,
	511, 0, 0, 555, 537, 538, 0, 0, 0, 0,
	231, 346, 362, 241, 337, 375, 246, 344, 236, 311,
	334, 0, 0, 233, 360, 343, 293, 276, 277, 232,
	0, 329, 256, 269, 253, 309, 534, 558, 562, 252,
	621, 556, 370, 235, 0, 369, 308, 356, 361, 294,
	288, 234, 358, 292, 287, 280, 260, 622, 273, 320,
	286, 321, 274, 298, 297, 299, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 0, 0, 0, 372,
	0, 0, 605, 0, 0, 0, 345, 0, 0, 281,
	0, 0, 0, 557, 0, 332, 314, 618, 0, 0,
	330, 284, 357, 322, 363, 347, 371, 326, 323, 226,
	348, 255, 295, 237, 239, 251, 257, 259, 261, 262,
	304, 305, 317, 336, 350, 351, 352, 254, 247, 331,
	248, 271, 249, 227, 338, 250, 229, 318, 355, 0,
	267, 327, 291, 230, 290, 319, 354, 353, 238, 379,
	1286, 1287, 391, 0, 392, 0, 0, 0, 400, 404,
	405, 406, 408, 409, 410, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 384, 265, 223,
	224, 417, 603, 310, 0, 0, 617, 598, 600, 601,
	604, 608, 609, 610, 611, 612, 614, 616, 620, 416,
	0, 0, 0, 0, 0, 415, 316, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 365, 377, 395, 398, 0, 0, 0, 228,
	397, 0, 0, 0, 0, 0, 0, 0, 619, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 561, 300,
	301, 302, 303, 606, 0, 245, 396, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 390, 264, 270, 407, 272,
	244, 315, 266, 374, 278, 0, 401, 0, 0, 0,
	0, 0, 307, 275, 339, 279, 285, 328, 373, 313,
	333, 242, 364, 340, 289, 0, 0, 628, 602, 627,
	629, 630, 626, 631, 632, 613, 518, 0, 565, 624,
	623, 625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 283, 0, 324,
	263, 591, 570, 571, 572, 517, 573, 568, 569, 592,
	563, 588, 589, 542, 566, 574, 587, 575, 590, 593,
	594, 633, 634, 581, 635, 578, 595, 586, 585, 576,
	564, 596, 597, 549, 544, 579, 580, 567, 582, 545,
	546, 547, 548, 349, 559, 0, 380, 381, 382, 403,
	366, 0, 414, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 0, 0,
	0, 258, 0, 0, 282, 0, 0, 0, 550, 0,
	0, 341, 296, 0, 0, 0, 0, 607, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 584, 583, 527, 536, 0, 0, 240,
	176, 528, 0, 535, 529, 533, 532, 530, 531, 0,
	599, 0, 0, 0, 0, 0, 0, 499, 512, 0,
	516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 0, 0, 0, 0,
	560, 0, 511, 0, 0, 555, 537, 538, 0, 0,
	0, 0, 231, 346, 362, 241, 337, 375, 246, 344,
	236, 311, 334, 0, 0, 233, 360, 343, 293, 276,
	277, 232, 0, 329, 256, 269, 253, 309, 534, 558,
	562, 252, 621, 556, 370, 235, 0, 369, 308, 356,
	361, 294, 288, 234, 358, 292, 287, 280, 260, 622,
	273, 320, 286, 321, 274, 298, 297, 299, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 372, 0, 0, 605, 0, 0, 0, 345, 0,
	0, 281, 0, 0, 0, 557, 0, 332, 314, 618,
	500, 0, 330, 284, 357, 322, 363, 347, 371, 326,
	323, 226, 348, 255, 295, 237, 239, 251, 257, 259,
	261, 262, 304, 305, 317, 336, 350, 351, 352, 254,
	247, 331, 248, 271, 249, 227, 338, 250, 229, 318,
	355, 0, 267, 327, 291, 230, 290, 319, 354, 353,
	238, 379, 385, 386, 391, 0, 392, 0, 0, 0,
	400, 404, 405, 406, 408, 409, 410, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 384,
	265, 223, 224, 417, 603, 310, 0, 0, 617, 598,
	600, 601, 604, 608, 609, 610, 611, 612, 614, 616,
	620, 416, 0, 0, 0, 0, 0, 415, 316, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 365, 377, 395, 398, 0, 0,
	0, 228, 397, 0, 0, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	561, 300, 301, 302, 303, 606, 0, 245, 396, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 390, 264, 270,
	407, 272, 244, 315, 266, 374, 278, 0, 401, 0,
	0, 0, 0, 0, 307, 275, 339, 279, 285, 328,
	373, 313, 333, 242, 364, 340, 289, 0, 0, 628,
	602, 627, 629, 630, 626, 631, 632, 613, 518, 0,
	565, 624, 623, 625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 283,
	0, 324, 263, 591, 570, 571, 572, 517, 573, 568,
	569, 592, 563, 588, 589, 542, 566, 574, 587, 575,
	590, 593, 594, 633, 634, 581, 635, 578, 595, 586,
	585, 576, 564, 596, 597, 549, 544, 579, 580, 567,
	582, 545, 546, 547, 548, 349, 559, 0, 380, 381,
	382, 403, 366, 0, 414, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 515,
	0, 0, 0, 258, 0, 0, 282, 0, 0, 0,
	550, 0, 0, 341, 296, 0, 0, 0, 0, 607,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 0, 0, 540, 584, 583, 527, 536, 0,
	0, 240, 176, 528, 0, 535, 529, 533, 532, 530,
	531, 0, 599, 0, 0, 0, 0, 0, 0, 0,
	512, 0, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 0, 0,
	0, 0, 560, 0, 511, 0, 0, 555, 537, 538,
	0, 0, 0, 0, 231, 346, 362, 241, 337, 375,
	246, 344, 236, 311, 334, 0, 0, 233, 360, 343,
	293, 276, 277, 232, 0, 329, 256, 269, 253, 309,
	534, 558, 562, 252, 621, 556, 370, 235, 0, 369,
	308, 356, 361, 294, 288, 234, 358, 292, 287, 280,
	260, 622, 273, 320, 286, 321, 274, 298, 297, 299,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	0, 0, 0, 372, 0, 0, 605, 0, 0, 0,
	345, 0, 0, 281, 0, 0, 0, 557, 0, 332,
	314, 618, 0, 0, 330, 284, 357, 322, 363, 347,
	371, 326, 323, 226, 348, 255, 295, 237, 239, 251,
	257, 259, 261, 262, 304, 305, 317, 336, 350, 351,
	352, 254, 247, 331, 248, 271, 249, 227, 338, 250,
	229, 318, 355, 0, 267, 327, 291, 230, 290, 319,
	354, 353, 238, 379, 385, 386, 391, 0, 392, 0,
	0, 0, 400, 404, 405, 406, 408, 409, 410, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 384, 265, 223, 224, 417, 603, 310, 0, 0,
	617, 598, 600, 601, 604, 608, 609, 610, 611, 612,
	614, 616, 620, 416, 0, 0, 0, 0, 0, 415,
	316, 0, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 365, 377, 395, 398,
	0, 0, 0, 228, 397, 0, 0, 0, 0, 0,
	0, 0, 619, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 561, 300, 301, 302, 303, 606, 0, 245,
	396, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 390,
	264, 270, 407, 272, 244, 315, 266, 374, 278, 0,
	401, 0, 0, 0, 0, 0, 307, 275, 339, 279,
	285, 328, 373, 313, 333, 242, 364, 340, 289, 0,
	0, 628, 602, 627, 629, 630, 626, 631, 632, 613,
	518, 0, 565, 624, 623, 625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 283, 0, 324, 263, 591, 570, 571, 572, 517,
	573, 568, 569, 592, 563, 588, 589, 542, 566, 574,
	587, 575, 590, 593, 594, 633, 634, 581, 635, 578,
	595, 586, 585, 576, 564, 596, 597, 549, 544, 579,
	580, 567, 582, 545, 546, 547, 548, 0, 0, 0,
	380, 381, 382, 403, 366, 0, 414, 153, 349, 49,
	145, 122, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 138, 0, 258, 0, 147, 282,
	0, 0, 0, 105, 0, 0, 341, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 150, 0, 0, 175, 0, 0,
	0, 0, 0, 0, 240, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 346, 362,
	241, 337, 375, 246, 344, 236, 311, 334, 0, 0,
	233, 360, 343, 293, 276, 277, 232, 0, 329, 256,
	269, 253, 309, 0, 359, 387, 252, 378, 0, 370,
	235, 0, 369, 308, 356, 361, 294, 288, 234, 358,
	292, 287, 280, 260, 402, 273, 320, 286, 321, 274,
	298, 297, 299, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 121, 144, 151, 0, 92,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 168,
	0, 0, 0, 345, 0, 0, 281, 143, 137, 136,
	388, 0, 332, 314, 55, 0, 0, 330, 284, 357,
	322, 363, 347, 371, 326, 323, 226, 348, 255, 295,
	237, 239, 251, 257, 259, 261, 262, 304, 305, 317,
	336, 350, 351, 352, 254, 247, 331, 248, 271, 249,
	227, 338, 250, 229, 318, 355, 0, 267, 327, 291,
	230, 290, 319, 354, 353, 238, 379, 385, 386, 391,
	0, 392, 139, 140, 141, 400, 404, 405, 406, 408,
	409, 410, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 384, 265, 223, 224, 367, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 383, 171, 0, 0, 0, 179, 0, 0, 0,
	142, 0, 180, 316, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 365,
	377, 395, 398, 0, 0, 0, 228, 397, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 393, 300, 301, 302, 303,
	268, 0, 245, 396, 325, 103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 48, 0, 0, 0, 0,
	0, 389, 390, 264, 270, 407, 272, 244, 315, 266,
	374, 278, 0, 401, 0, 0, 0, 0, 0, 307,
	275, 339, 279, 285, 328, 373, 313, 333, 242, 364,
	340, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 283, 123, 324, 263, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 219, 220, 221, 222,
	0, 0, 0, 380, 381, 382, 403, 366, 349, 181,
	38, 169, 172, 174, 173, 0, 47, 5, 108, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 341, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 981, 0, 0, 175, 0, 0,
	527, 536, 0, 0, 240, 176, 528, 0, 535, 529,
	533, 532, 530, 531, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 537, 0, 0, 0, 0, 0, 231, 346, 362,
	241, 337, 375, 246, 344, 236, 311, 334, 0, 0,
	233, 360, 343, 293, 276, 277, 232, 0, 329, 256,
	269, 253, 309, 534, 359, 387, 252, 378, 0, 370,
	235, 0, 369, 308, 356, 361, 294, 288, 234, 358,
	292, 287, 280, 260, 402, 273, 320, 286, 321, 274,
	298, 297, 299, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 281, 0, 0, 0,
	388, 0, 332, 314, 0, 0, 0, 330, 284, 357,
	322, 363, 347, 371, 326, 323, 226, 348, 255, 295,
	237, 239, 251, 257, 259, 261, 262, 304, 305, 317,
	336, 350, 351, 352, 254, 247, 331, 248, 271, 249,
	227, 338, 250, 229, 318, 355, 0, 267, 327, 291,
	230, 290, 319, 354, 353, 238, 379, 385, 386, 391,
	0, 392, 0, 0, 0, 400, 404, 405, 406, 408,
	409, 410, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 384, 265, 223, 224, 417, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 383, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 415, 316, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 365,
	377, 395, 398, 0, 0, 0, 228, 397, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 393, 300, 301, 302, 303,
	268, 0, 245, 396, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 264, 270, 407, 272, 244, 315, 266,
	374, 278, 0, 401, 0, 0, 0, 0, 0, 307,
	275, 339, 279, 285, 328, 373, 313, 333, 242, 364,
	340, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 283, 0, 324, 263, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 219, 220, 221, 222,
	0, 0, 0, 380, 381, 382, 403, 366, 0, 414,
	153, 349, 49, 145, 122, 0, 0, 0, 0, 0,
	0, 0, 312, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 341,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 439, 0, 0,
	175, 0, 0, 0, 0, 0, 0, 240, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 346, 362, 241, 337, 375, 246, 344, 236, 311,
	334, 0, 0, 233, 360, 343, 293, 276, 277, 232,
	0, 329, 256, 269, 253, 309, 0, 359, 387, 252,
	378, 0, 370, 235, 0, 369, 308, 356, 361, 294,
	288, 234, 358, 292, 287, 280, 260, 402, 273, 320,
	286, 321, 274, 298, 297, 299, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 281,
	0, 0, 0, 388, 0, 332, 314, 0, 0, 0,
	330, 284, 357, 322, 363, 347, 371, 326, 323, 226,
	348, 255, 295, 237, 239, 251, 257, 259, 261, 262,
	304, 305, 317, 336, 350, 351, 352, 254, 247, 331,
	248, 271, 249, 227, 338, 250, 229, 318, 355, 0,
	267, 327, 291, 230, 290, 319, 354, 353, 238, 379,
	385, 386, 391, 0, 392, 0, 0, 0, 400, 404,
	405, 406, 408, 409, 410, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 384, 265, 223,
	224, 417, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 383, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 415, 316, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 365, 377, 395, 398, 0, 0, 0, 228,
	397, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 393, 300,
	301, 302, 303, 435, 437, 245, 396, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 390, 264, 270, 407, 272,
	244, 315, 266, 374, 278, 0, 401, 0, 0, 0,
	0, 0, 307, 275, 339, 279, 285, 328, 373, 313,
	333, 242, 364, 340, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 283, 123, 324,
	263, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 219,
	220, 221, 222, 349, 0, 0, 380, 381, 382, 403,
	366, 0, 414, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 812, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 341, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 0, 0, 240,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 800, 0, 0, 0, 0,
	0, 0, 231, 346, 362, 241, 337, 375, 246, 344,
	236, 311, 334, 0, 0, 1761, 1763, 1764, 1765, 1766,
	1767, 1768, 0, 1772, 1769, 1770, 1771, 309, 0, 1756,
	1757, 1758, 1759, 798, 1742, 1762, 0, 1743, 308, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1760, 320, 286, 321, 274, 298, 297, 299, 823, 825,
	827, 829, 832, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 281, 0, 0, 0, 1755, 0, 332, 314, 0,
	0, 0, 330, 284, 357, 322, 363, 347, 371, 326,
	323, 226, 348, 255, 295, 237, 239, 251, 257, 259,
	261, 262, 304, 305, 317, 336, 350, 351, 352, 254,
	247, 331, 248, 271, 249, 227, 338, 250, 229, 318,
	355, 0, 267, 327, 291, 230, 290, 319, 354, 353,
	238, 379, 385, 386, 391, 0, 392, 0, 0, 0,
	400, 404, 405, 406, 408, 409, 410, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 384,
	265, 223, 224, 417, 0, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 383, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 415, 316, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 365, 377, 395, 398, 0, 0,
	0, 228, 397, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	393, 300, 301, 302, 303, 268, 0, 245, 396, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 390, 264, 270,
	407, 272, 244, 315, 266, 374, 278, 0, 401, 0,
	0, 0, 0, 0, 307, 275, 339, 279, 285, 328,
	373, 313, 333, 242, 364, 340, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 822, 283,
	0, 324, 263, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 219, 220, 221, 222, 349, 0, 0, 380, 381,
	382, 403, 366, 0, 414, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 341, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 0,
	0, 240, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 1827, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 346, 362, 241, 337, 375,
	246, 344, 236, 311, 334, 0, 0, 233, 360, 343,
	293, 276, 277, 232, 0, 329, 256, 269, 253, 309,
	0, 359, 387, 252, 378, 0, 370, 235, 0, 369,
	308, 356, 361, 294, 288, 234, 358, 292, 287, 280,
	260, 402, 273, 320, 286, 321, 274, 298, 297, 299,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 372, 0, 0, 0, 1824, 0, 1823,
	345, 1825, 1828, 281, 0, 0, 0, 388, 0, 332,
	314, 0, 0, 0, 330, 284, 357, 322, 363, 347,
	371, 326, 323, 226, 348, 255, 295, 237, 239, 251,
	257, 259, 261, 262, 304, 305, 317, 336, 350, 351,
	352, 254, 247, 331, 248, 271, 249, 227, 338, 250,
	229, 318, 355, 1829, 267, 327, 291, 230, 290, 319,
	354, 353, 238, 379, 385, 386, 391, 0, 392, 0,
	0, 0, 400, 404, 405, 406, 408, 409, 410, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 384, 265, 223, 224, 417, 0, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 383, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 415,
	316, 0, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 365, 377, 395, 398,
	0, 0, 0, 228, 397, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 393, 300, 301, 302, 303, 268, 0, 245,
	396, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 390,
	264, 270, 407, 272, 244, 315, 266, 374, 278, 0,
	401, 0, 0, 0, 0, 0, 307, 275, 339, 279,
	285, 328, 373, 313, 333, 242, 364, 340, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 283, 0, 324, 263, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 219, 220, 221, 222, 349, 0, 0,
	380, 381, 382, 403, 366, 0, 414, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1569, 0, 0, 0, 0, 258, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 341, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 0, 1570,
	0, 0, 0, 240, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 916, 917, 918,
	915, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 346, 362, 241,
	337, 375, 246, 344, 236, 311, 334, 0, 0, 233,
	360, 343, 293, 276, 277, 232, 0, 329, 256, 269,
	253, 309, 0, 359, 387, 252, 378, 0, 370, 235,
	0, 369, 308, 356, 361, 294, 288, 234, 358, 292,
	287, 280, 260, 402, 273, 320, 286, 321, 274, 298,
	297, 299, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 281, 0, 0, 0, 388,
	0, 332, 314, 0, 0, 0, 330, 284, 357, 322,
	363, 347, 371, 326, 323, 226, 348, 255, 295, 237,
	239, 251, 257, 259, 261, 262, 304, 305, 317, 336,
	350, 351, 352, 254, 247, 331, 248, 271, 249, 227,
	338, 250, 229, 318, 355, 0, 267, 327, 291, 230,
	290, 319, 354, 353, 238, 379, 385, 386, 391, 0,
	392, 0, 0, 0, 400, 404, 405, 406, 408, 409,
	410, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 384, 265, 223, 224, 417, 0, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	383, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 415, 316, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 365, 377,
	395, 398, 0, 0, 0, 228, 397, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 393, 300, 301, 302, 303, 268,
	0, 245, 396, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 390, 264, 270, 407, 272, 244, 315, 266, 374,
	278, 0, 401, 0, 0, 0, 0, 0, 307, 275,
	339, 279, 285, 328, 373, 313, 333, 242, 364, 340,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 283, 0, 324, 263, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 219, 220, 221, 222, 349,
	0, 0, 380, 381, 382, 403, 366, 0, 414, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 736, 0,
	282, 0, 0, 0, 0, 0, 0, 341, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 744,
	745, 0, 0, 0, 0, 240, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 346,
	362, 241, 337, 375, 246, 344, 236, 311, 334, 0,
	0, 233, 360, 343, 293, 276, 277, 232, 0, 329,
	256, 269, 253, 309, 0, 359, 387, 252, 378, 726,
	370, 235, 725, 369, 308, 356, 361, 294, 288, 234,
	358, 292, 287, 280, 260, 402, 273, 320, 286, 321,
	274, 298, 297, 299, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 281, 0, 0,
	0, 388, 0, 332, 314, 0, 0, 0, 330, 284,
	357, 322, 363, 347, 371, 734, 323, 226, 348, 255,
	295, 237, 239, 251, 257, 259, 261, 262, 304, 305,
	317, 336, 350, 351, 352, 254, 247, 331, 248, 271,
	249, 227, 338, 250, 229, 318, 355, 0, 267, 327,
	291, 230, 290, 319, 354, 353, 238, 379, 385, 386,
	391, 0, 392, 0, 0, 0, 400, 404, 405, 406,
	408, 409, 410, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 384, 265, 223, 224, 417,
	0, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 383, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 415, 316, 0, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	365, 377, 395, 398, 0, 0, 0, 228, 397, 0,
	0, 0, 0, 0, 0, 735, 368, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 738, 300, 301, 302,
	303, 268, 0, 245, 396, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 390, 264, 270, 407, 272, 244, 315,
	266, 374, 278, 0, 401, 0, 0, 0, 0, 0,
	746, 741, 742, 279, 285, 328, 373, 313, 333, 242,
	364, 340, 743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 283, 0, 324, 263, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 219, 220, 221,
	222, 153, 349, 0, 380, 381, 382, 403, 366, 0,
	414, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 282, 0, 0, 0, 105, 0, 0,
	341, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 1613,
	0, 175, 0, 0, 0, 0, 0, 0, 240, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 346, 362, 241, 337, 375, 246, 344, 236,
	311, 334, 0, 0, 233, 360, 343, 293, 276, 277,
	232, 0, 329, 256, 269, 253, 309, 0, 359, 387,
	252, 378, 0, 370, 235, 0, 369, 308, 356, 361,
	294, 288, 234, 358, 292, 287, 280, 260, 402, 273,
	320, 286, 321, 274, 298, 297, 299, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	281, 0, 0, 0, 388, 0, 332, 314, 0, 0,
	0, 330, 284, 357, 322, 363, 347, 371, 326, 323,
	226, 348, 255, 295, 237, 239, 251, 257, 259, 261,
	262, 304, 305, 317, 336, 350, 351, 352, 254, 247,
	331, 248, 271, 249, 227, 338, 250, 229, 318, 355,
	0, 267, 327, 291, 230, 290, 319, 354, 353, 238,
	379, 385, 386, 391, 0, 392, 0, 0, 0, 400,
	404, 405, 406, 408, 409, 410, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 384, 265,
	223, 224, 417, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 383, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 415, 316, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 365, 377, 395, 398, 0, 0, 0,
	228, 397, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 393,
	300, 301, 302, 303, 268, 0, 245, 396, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 264, 270, 407,
	272, 244, 315, 266, 374, 278, 0, 401, 0, 0,
	0, 0, 0, 307, 275, 339, 279, 285, 328, 373,
	313, 333, 242, 364, 340, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 283, 123,
	324, 263, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	219, 220, 221, 222, 153, 349, 0, 380, 381, 382,
	403, 366, 0, 414, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 282, 0, 0, 0,
	105, 0, 0, 341, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 1604, 0, 175, 0, 0, 0, 0, 0,
	0, 240, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 346, 362, 241, 337, 375,
	246, 344, 236, 311, 334, 0, 0, 233, 360, 343,
	293, 276, 277, 232, 0, 329, 256, 269, 253, 309,
	0, 359, 387, 252, 378, 0, 370, 235, 0, 369,
	308, 356, 361, 294, 288, 234, 358, 292, 287, 280,
	260, 402, 273, 320, 286, 321, 274, 298, 297, 299,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 281, 0, 0, 0, 388, 0, 332,
	314, 0, 0, 0, 330, 284, 357, 322, 363, 347,
	371, 326, 323, 226, 348, 255, 295, 237, 239, 251,
	257, 259, 261, 262, 304, 305, 317, 336, 350, 351,
	352, 254, 247, 331, 248, 271, 249, 227, 338, 250,
	229, 318, 355, 0, 267, 327, 291, 230, 290, 319,
	354, 353, 238, 379, 385, 386, 391, 0, 392, 0,
	0, 0, 400, 404, 405, 406, 408, 409, 410, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 384, 265, 223, 224, 417, 0, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 383, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 415,
	316, 0, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 365, 377, 395, 398,
	0, 0, 0, 228, 397, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 393, 300, 301, 302, 303, 268, 0, 245,
	396, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 390,
	264, 270, 407, 272, 244, 315, 266, 374, 278, 0,
	401, 0, 0, 0, 0, 0, 307, 275, 339, 279,
	285, 328, 373, 313, 333, 242, 364, 340, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 283, 123, 324, 263, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 219, 220, 221, 222, 153, 349, 0,
	380, 381, 382, 403, 366, 0, 414, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 282,
	0, 0, 0, 105, 0, 0, 341, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 175, 0, 0,
	0, 0, 0, 0, 240, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 346, 362,
	241, 337, 375, 246, 344, 236, 311, 334, 0, 0,
	233, 360, 343, 293, 276, 277, 232, 0, 329, 256,
	269, 253, 309, 0, 359, 387, 252, 378, 0, 370,
	235, 0, 369, 308, 356, 361, 294, 288, 234, 358,
	292, 287, 280, 260, 402, 273, 320, 286, 321, 274,
	298, 297, 299, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 281, 0, 0, 0,
	388, 0, 332, 314, 0, 0, 0, 330, 284, 357,
	322, 363, 347, 371, 326, 323, 226, 348, 255, 295,
	237, 239, 251, 257, 259, 261, 262, 304, 305, 317,
	336, 350, 351, 352, 254, 247, 331, 248, 271, 249,
	227, 338, 250, 229, 318, 355, 0, 267, 327, 291,
	230, 290, 319, 354, 353, 238, 379, 385, 386, 391,
	0, 392, 0, 0, 0, 400, 404, 405, 406, 408,
	409, 410, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 384, 265, 223, 224, 417, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 383, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 415, 316, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 365,
	377, 395, 398, 0, 0, 0, 228, 397, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 393, 300, 301, 302, 303,
	268, 0, 245, 396, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 264, 270, 407, 272, 244, 315, 266,
	374, 278, 0, 401, 0, 0, 0, 0, 0, 307,
	275, 339, 279, 285, 328, 373, 313, 333, 242, 364,
	340, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 283, 123, 324, 263, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 219, 220, 221, 222,
	349, 0, 0, 380, 381, 382, 403, 366, 0, 414,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 341, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	744, 745, 0, 0, 0, 0, 240, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	346, 362, 241, 337, 375, 246, 344, 236, 311, 334,
	0, 0, 233, 360, 343, 293, 276, 277, 232, 0,
	329, 256, 269, 253, 309, 0, 359, 387, 252, 378,
	726, 370, 235, 725, 369, 308, 356, 361, 294, 288,
	234, 358, 292, 287, 280, 260, 402, 273, 320, 286,
	321, 274, 298, 297, 299, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 281, 0,
	0, 0, 388, 0, 332, 314, 0, 0, 0, 330,
	284, 357, 322, 363, 347, 371, 326, 323, 226, 348,
	255, 295, 237, 239, 251, 257, 259, 261, 262, 304,
	305, 317, 336, 350, 351, 352, 254, 247, 331, 248,
	271, 249, 227, 338, 250, 229, 318, 355, 0, 267,
	327, 291, 230, 290, 319, 354, 353, 238, 379, 385,
	386, 391, 0, 392, 0, 0, 0, 400, 404, 405,
	406, 408, 409, 410, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 384, 265, 223, 224,
	417, 0, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 383, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 415, 316, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 365, 377, 395, 398, 0, 0, 0, 228, 397,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 393, 300, 301,
	302, 303, 268, 0, 245, 396, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 264, 270, 407, 272, 244,
	315, 266, 374, 278, 0, 401, 0, 0, 0, 0,
	0, 746, 741, 742, 279, 285, 328, 373, 313, 333,
	242, 364, 340, 743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 283, 0, 324, 263,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 219, 220,
	221, 222, 349, 0, 0, 380, 381, 382, 403, 366,
	0, 414, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 2161, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	341, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 0, 0, 240, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 346, 362, 241, 337, 375, 246, 344, 236,
	311, 334, 0, 0, 233, 360, 343, 293, 276, 277,
	232, 0, 329, 256, 269, 253, 309, 0, 359, 387,
	252, 378, 0, 370, 235, 0, 369, 308, 356, 361,
	294, 288, 234, 358, 292, 287, 280, 260, 402, 273,
	320, 286, 321, 274, 298, 297, 299, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 2164, 0, 0, 2163, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	281, 0, 0, 0, 388, 0, 332, 314, 0, 0,
	0, 330, 284, 357, 322, 363, 347, 371, 326, 323,
	226, 348, 255, 295, 237, 239, 251, 257, 259, 261,
	262, 304, 305, 317, 336, 350, 351, 352, 254, 247,
	331, 248, 271, 249, 227, 338, 250, 229, 318, 355,
	0, 267, 327, 291, 230, 290, 319, 354, 353, 238,
	379, 385, 386, 391, 0, 392, 0, 0, 0, 400,
	404, 405, 406, 408, 409, 410, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 384, 265,
	223, 224, 417, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 383, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 415, 316, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 365, 377, 395, 398, 0, 0, 0,
	228, 397, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 393,
	300, 301, 302, 303, 268, 0, 245, 396, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 264, 270, 407,
	272, 244, 315, 266, 374, 278, 0, 401, 0, 0,
	0, 0, 0, 307, 275, 339, 279, 285, 328, 373,
	313, 333, 242, 364, 340, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 283, 0,
	324, 263, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	219, 220, 221, 222, 349, 0, 0, 380, 381, 382,
	403, 366, 0, 414, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 1137, 0, 282, 0, 0, 0, 0,
	0, 0, 341, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 1135, 0, 0, 0,
	240, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1133, 0, 0, 0,
	0, 0, 0, 231, 346, 362, 241, 337, 375, 246,
	344, 236, 311, 334, 0, 0, 233, 360, 343, 293,
	276, 277, 232, 0, 329, 256, 269, 253, 309, 0,
	359, 387, 252, 378, 0, 370, 235, 0, 369, 308,
	356, 361, 294, 288, 234, 358, 292, 287, 280, 260,
	402, 273, 320, 286, 321, 274, 298, 297, 299, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 281, 0, 0, 0, 388, 0, 332, 314,
	0, 0, 0, 330, 284, 357, 322, 363, 347, 371,
	326, 323, 226, 348, 255, 295, 237, 239, 251, 257,
	259, 261, 262, 304, 305, 317, 336, 350, 351, 352,
	254, 247, 331, 248, 271, 249, 227, 338, 250, 229,
	318, 355, 0, 267, 327, 291, 230, 290, 319, 354,
	353, 238, 379, 385, 386, 391, 0, 392, 0, 0,
	0, 400, 404, 405, 406, 408, 409, 410, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	384, 265, 223, 224, 417, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 383, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 415, 316,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 365, 377, 395, 398, 0,
	0, 0, 228, 397, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 393, 300, 301, 302, 303, 268, 0, 245, 396,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 264,
	270, 407, 272, 244, 315, 266, 374, 278, 0, 401,
	0, 0, 0, 0, 0, 307, 275, 339, 279, 285,
	328, 373, 313, 333, 242, 364, 340, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	283, 0, 324, 263, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 219, 220, 221, 222, 349, 0, 0, 380,
	381, 382, 403, 366, 0, 414, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 1131, 0, 282, 0, 0,
	0, 0, 0, 0, 341, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 1135, 0,
	0, 0, 240, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1133, 0,
	0, 0, 0, 0, 0, 231, 346, 362, 241, 337,
	375, 246, 344, 236, 311, 334, 0, 0, 233, 360,
	343, 293, 276, 277, 232, 0, 329, 256, 269, 253,
	309, 0, 359, 387, 252, 378, 0, 370, 235, 0,
	369, 308, 356, 361, 294, 288, 234, 358, 292, 287,
	280, 260, 402, 273, 320, 286, 321, 274, 298, 297,
	299, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 281, 0, 0, 0, 388, 0,
	332, 314, 0, 0, 0, 330, 284, 357, 322, 363,
	347, 371, 326, 323, 226, 348, 255, 295, 237, 239,
	251, 257, 259, 261, 262, 304, 305, 317, 336, 350,
	351, 352, 254, 247, 331, 248, 271, 249, 227, 338,
	250, 229, 318, 355, 0, 267, 327, 291, 230, 290,
	319, 354, 353, 238, 379, 385, 386, 391, 0, 392,
	0, 0, 0, 400, 404, 405, 406, 408, 409, 410,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 384, 265, 223, 224, 417, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 383,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	415, 316, 0, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 365, 377, 395,
	398, 0, 0, 0, 228, 397, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 393, 300, 301, 302, 303, 268, 0,
	245, 396, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 264, 270, 407, 272, 244, 315, 266, 374, 278,
	0, 401, 0, 0, 0, 0, 0, 307, 275, 339,
	279, 285, 328, 373, 313, 333, 242, 364, 340, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 283, 0, 324, 263, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 219, 220, 221, 222, 349, 0,
	0, 380, 381, 382, 403, 366, 0, 414, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 341, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2805, 0, 175, 584, 0,
	0, 0, 0, 0, 240, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 346, 362,
	241, 337, 375, 246, 344, 236, 311, 334, 0, 0,
	233, 360, 343, 293, 276, 277, 232, 0, 329, 256,
	269, 253, 309, 0, 359, 387, 252, 378, 0, 370,
	235, 0, 369, 308, 356, 361, 294, 288, 234, 358,
	292, 287, 280, 260, 402, 273, 320, 286, 321, 274,
	298, 297, 299, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 281, 0, 0, 0,
	388, 0, 332, 314, 0, 0, 0, 330, 284, 357,
	322, 363, 347, 371, 326, 323, 226, 348, 255, 295,
	237, 239, 251, 257, 259, 261, 262, 304, 305, 317,
	336, 350, 351, 352, 254, 247, 331, 248, 271, 249,
	227, 338, 250, 229, 318, 355, 0, 267, 327, 291,
	230, 290, 319, 354, 353, 238, 379, 385, 386, 391,
	0, 392, 0, 0, 0, 400, 404, 405, 406, 408,
	409, 410, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 384, 265, 223, 224, 417, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 383, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 415, 316, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 365,
	377, 395, 398, 0, 0, 0, 228, 397, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 393, 300, 301, 302, 303,
	268, 0, 245, 396, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 264, 270, 407, 272, 244, 315, 266,
	374, 278, 0, 401, 0, 0, 0, 0, 0, 307,
	275, 339, 279, 285, 328, 373, 313, 333, 242, 364,
	340, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 283, 0, 324, 263, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 219, 220, 221, 222,
	349, 0, 0, 380, 381, 382, 403, 366, 0, 414,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 341, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 1135, 0, 0, 0, 240, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2519, 0, 0, 0, 0, 0, 0, 231,
	346, 362, 241, 337, 375, 246, 344, 236, 311, 334,
	0, 0, 233, 360, 343, 293, 276, 277, 232, 0,
	329, 256, 269, 253, 309, 0, 359, 387, 252, 378,
	0, 370, 235, 0, 369, 308, 356, 361, 294, 288,
	234, 358, 292, 287, 280, 260, 402, 273, 320, 286,
	321, 274, 298, 297, 299, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 281, 0,
	0, 0, 388, 0, 332, 314, 0, 0, 0, 330,
	284, 357, 322, 363, 347, 371, 326, 323, 226, 348,
	255, 295, 237, 239, 251, 257, 259, 261, 262, 304,
	305, 317, 336, 350, 351, 352, 254, 247, 331, 248,
	271, 249, 227, 338, 250, 229, 318, 355, 0, 267,
	327, 291, 230, 290, 319, 354, 353, 238, 379, 385,
	386, 391, 0, 392, 0, 0, 0, 400, 404, 405,
	406, 408, 409, 410, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 384, 265, 223, 224,
	417, 0, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 383, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 415, 316, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 365, 377, 395, 398, 0, 0, 0, 228, 397,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 393, 300, 301,
	302, 303, 268, 0, 245, 396, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 264, 270, 407, 272, 244,
	315, 266, 374, 278, 0, 401, 0, 0, 0, 0,
	0, 307, 275, 339, 279, 285, 328, 373, 313, 333,
	242, 364, 340, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 283, 0, 324, 263,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 219, 220,
	221, 222, 349, 0, 0, 380, 381, 382, 403, 366,
	0, 414, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	341, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 1135, 0, 0, 0, 240, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1133, 0, 0, 0, 0, 0,
	0, 231, 346, 362, 241, 337, 375, 246, 344, 236,
	311, 334, 0, 0, 233, 360, 343, 293, 276, 277,
	232, 0, 329, 256, 269, 253, 309, 0, 359, 387,
	252, 378, 0, 370, 235, 0, 369, 308, 356, 361,
	294, 288, 234, 358, 292, 287, 280, 260, 402, 273,
	320, 286, 321, 274, 298, 297, 299, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	281, 0, 0, 0, 388, 0, 332, 314, 0, 0,
	0, 330, 284, 357, 322, 363, 347, 371, 326, 323,
	226, 348, 255, 295, 237, 239, 251, 257, 259, 261,
	262, 304, 305, 317, 336, 350, 351, 352, 254, 247,
	331, 248, 271, 249, 227, 338, 250, 229, 318, 355,
	0, 267, 327, 291, 230, 290, 319, 354, 353, 238,
	379, 385, 386, 391, 0, 392, 0, 0, 0, 400,
	404, 405, 406, 408, 409, 410, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 384, 265,
	223, 224, 417, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 383, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 415, 316, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 365, 377, 395, 398, 0, 0, 0,
	228, 397, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 393,
	300, 301, 302, 303, 268, 0, 245, 396, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 264, 270, 407,
	272, 244, 315, 266, 374, 278, 0, 401, 0, 0,
	0, 0, 0, 307, 275, 339, 279, 285, 328, 373,
	313, 333, 242, 364, 340, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 283, 0,
	324, 263, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	219, 220, 221, 222, 349, 0, 0, 380, 381, 382,
	403, 366, 0, 414, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1889, 0, 0,
	0, 0, 258, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 341, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 1891, 0, 0, 0,
	240, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 346, 362, 241, 337, 375, 246,
	344, 236, 311, 334, 0, 0, 233, 360, 343, 293,
	276, 277, 232, 0, 329, 256, 269, 253, 309, 0,
	359, 387, 252, 378, 0, 370, 235, 0, 369, 308,
	356, 361, 294, 288, 234, 358, 292, 287, 280, 260,
	402, 273, 320, 286, 321, 274, 298, 297, 299, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 281, 0, 0, 0, 388, 0, 332, 314,
	0, 0, 0, 330, 284, 357, 322, 363, 347, 371,
	326, 323, 226, 348, 255, 295, 237, 239, 251, 257,
	259, 261, 262, 304, 305, 317, 336, 350, 351, 352,
	254, 247, 331, 248, 271, 249, 227, 338, 250, 229,
	318, 355, 0, 267, 327, 291, 230, 290, 319, 354,
	353, 238, 379, 385, 386, 391, 0, 392, 0, 0,
	0, 400, 404, 405, 406, 408, 409, 410, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	384, 265, 223, 224, 417, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 383, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 415, 316,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 365, 377, 395, 398, 0,
	0, 0, 228, 397, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 393, 300, 301, 302, 303, 268, 0, 245, 396,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 264,
	270, 407, 272, 244, 315, 266, 374, 278, 0, 401,
	0, 0, 0, 0, 0, 307, 275, 339, 279, 285,
	328, 373, 313, 333, 242, 364, 340, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	283, 0, 324, 263, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 219, 220, 221, 222, 349, 0, 0, 380,
	381, 382, 403, 366, 0, 414, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 1904, 0, 282, 0, 0,
	0, 0, 0, 0, 341, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 1135, 0,
	0, 0, 240, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 346, 362, 241, 337,
	375, 246, 344, 236, 311, 334, 0, 0, 233, 360,
	343, 293, 276, 277, 232, 0, 329, 256, 269, 253,
	309, 0, 359, 387, 252, 378, 0, 370, 235, 0,
	369, 308, 356, 361, 294, 288, 234, 358, 292, 287,
	280, 260, 402, 273, 320, 286, 321, 274, 298, 297,
	299, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 281, 0, 0, 0, 388, 0,
	332, 314, 0, 0, 0, 330, 284, 357, 322, 363,
	347, 371, 326, 323, 226, 348, 255, 295, 237, 239,
	251, 257, 259, 261, 262, 304, 305, 317, 336, 350,
	351, 352, 254, 247, 331, 248, 271, 249, 227, 338,
	250, 229, 318, 355, 0, 267, 327, 291, 230, 290,
	319, 354, 353, 238, 379, 385, 386, 391, 0, 392,
	0, 0, 0, 400, 404, 405, 406, 408, 409, 410,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 384, 265, 223, 224, 417, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 383,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	415, 316, 0, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 365, 377, 395,
	398, 0, 0, 0, 228, 397, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 393, 300, 301, 302, 303, 268, 0,
	245, 396, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 264, 270, 407, 272, 244, 315, 266, 374, 278,
	0, 401, 0, 0, 0, 0, 0, 307, 275, 339,
	279, 285, 328, 373, 313, 333, 242, 364, 340, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 283, 0, 324, 263, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 219, 220, 221, 222, 349, 0,
	0, 380, 381, 382, 403, 366, 0, 414, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 341, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2883, 0, 175, 0, 0,
	0, 0, 0, 0, 240, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 346, 362,
	241, 337, 375, 246, 344, 236, 311, 334, 0, 0,
	233, 360, 343, 293, 276, 277, 232, 0, 329, 256,
	269, 253, 309, 0, 359, 387, 252, 378, 0, 370,
	235, 0, 369, 308, 356, 361, 294, 288, 234, 358,
	292, 287, 280, 260, 402, 273, 320, 286, 321, 274,
	298, 297, 299, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 281, 0, 0, 0,
	388, 0, 332, 314, 0, 0, 0, 330, 284, 357,
	322, 363, 347, 371, 326, 323, 226, 348, 255, 295,
	237, 239, 251, 257, 259, 261, 262, 304, 305, 317,
	336, 350, 351, 352, 254, 247, 331, 248, 271, 249,
	227, 338, 250, 229, 318, 355, 0, 267, 327, 291,
	230, 290, 319, 354, 353, 238, 379, 385, 386, 391,
	0, 392, 0, 0, 0, 400, 404, 405, 406, 408,
	409, 410, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 384, 265, 223, 224, 417, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 383, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 415, 316, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 365,
	377, 395, 398, 0, 0, 0, 228, 397, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 393, 300, 301, 302, 303,
	268, 0, 245, 396, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 264, 270, 407, 272, 244, 315, 266,
	374, 278, 0, 401, 0, 0, 0, 0, 0, 307,
	275, 339, 279, 285, 328, 373, 313, 333, 242, 364,
	340, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 283, 0, 324, 263, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 219, 220, 221, 222,
	349, 0, 0, 380, 381, 382, 403, 366, 0, 414,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 341, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	584, 0, 0, 0, 0, 0, 240, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	346, 362, 241, 337, 375, 246, 344, 236, 311, 334,
	0, 0, 233, 360, 343, 293, 276, 277, 232, 0,
	329, 256, 269, 253, 309, 0, 359, 387, 252, 378,
	0, 370, 235, 0, 369, 308, 356, 361, 294, 288,
	234, 358, 292, 287, 280, 260, 402, 273, 320, 286,
	321, 274, 298, 297, 299, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 281, 0,
	0, 0, 388, 0, 332, 314, 0, 0, 0, 330,
	284, 357, 322, 363, 347, 371, 326, 323, 226, 348,
	255, 295, 237, 239, 251, 257, 259, 261, 262, 304,
	305, 317, 336, 350, 351, 352, 254, 247, 331, 248,
	271, 249, 227, 338, 250, 229, 318, 355, 0, 267,
	327, 291, 230, 290, 319, 354, 353, 238, 379, 385,
	386, 391, 0, 392, 0, 0, 0, 400, 404, 405,
	406, 408, 409, 410, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 384, 265, 223, 224,
	417, 0, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 383, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 415, 316, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 365, 377, 395, 398, 0, 0, 0, 228, 397,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 393, 300, 301,
	302, 303, 268, 0, 245, 396, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 264, 270, 407, 272, 244,
	315, 266, 374, 278, 0, 401, 0, 0, 0, 0,
	0, 307, 275, 339, 279, 285, 328, 373, 313, 333,
	242, 364, 340, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 283, 0, 324, 263,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 219, 220,
	221, 222, 349, 0, 0, 380, 381, 382, 403, 366,
	0, 414, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	341, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2820, 0,
	0, 175, 0, 0, 0, 0, 0, 0, 240, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 346, 362, 241, 337, 375, 246, 344, 236,
	311, 334, 0, 0, 233, 360, 343, 293, 276, 277,
	232, 0, 329, 256, 269, 253, 309, 0, 359, 387,
	252, 378, 0, 370, 235, 0, 369, 308, 356, 361,
	294, 288, 234, 358, 292, 287, 280, 260, 402, 273,
	320, 286, 321, 274, 298, 297, 299, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	281, 0, 0, 0, 388, 0, 332, 314, 0, 0,
	0, 330, 284, 357, 322, 363, 347, 371, 326, 323,
	226, 348, 255, 295, 237, 239, 251, 257, 259, 261,
	262, 304, 305, 317, 336, 350, 351, 352, 254, 247,
	331, 248, 271, 249, 227, 338, 250, 229, 318, 355,
	0, 267, 327, 291, 230, 290, 319, 354, 353, 238,
	379, 385, 386, 391, 0, 392, 0, 0, 0, 400,
	404, 405, 406, 408, 409, 410, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 384, 265,
	223, 224, 417, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 383, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 415, 316, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 365, 377, 395, 398, 0, 0, 0,
	228, 397, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 393,
	300, 301, 302, 303, 268, 0, 245, 396, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 264, 270, 407,
	272, 244, 315, 266, 374, 278, 0, 401, 0, 0,
	0, 0, 0, 307, 275, 339, 279, 285, 328, 373,
	313, 333, 242, 364, 340, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 283, 0,
	324, 263, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	219, 220, 221, 222, 349, 0, 0, 380, 381, 382,
	403, 366, 0, 414, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 341, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 0, 0,
	240, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 346, 362, 241, 337, 375, 246,
	344, 236, 311, 334, 0, 0, 233, 360, 343, 293,
	276, 277, 232, 0, 329, 256, 269, 253, 309, 0,
	359, 387, 252, 378, 0, 370, 235, 0, 369, 308,
	356, 361, 294, 288, 234, 358, 292, 287, 280, 260,
	402, 273, 320, 286, 321, 274, 298, 297, 299, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 2761, 0, 0, 345,
	0, 0, 281, 0, 0, 0, 388, 0, 332, 314,
	0, 0, 0, 330, 284, 357, 322, 363, 347, 371,
	326, 323, 226, 348, 255, 295, 237, 239, 251, 257,
	259, 261, 262, 304, 305, 317, 336, 350, 351, 352,
	254, 247, 331, 248, 271, 249, 227, 338, 250, 229,
	318, 355, 0, 267, 327, 291, 230, 290, 319, 354,
	353, 238, 379, 385, 386, 391, 0, 392, 0, 0,
	0, 400, 404, 405, 406, 408, 409, 410, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	384, 265, 223, 224, 417, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 383, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 415, 316,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 365, 377, 395, 398, 0,
	0, 0, 228, 397, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 393, 300, 301, 302, 303, 268, 0, 245, 396,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 264,
	270, 407, 272, 244, 315, 266, 374, 278, 0, 401,
	0, 0, 0, 0, 0, 307, 275, 339, 279, 285,
	328, 373, 313, 333, 242, 364, 340, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	283, 0, 324, 263, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 219, 220, 221, 222, 349, 0, 0, 380,
	381, 382, 403, 366, 0, 414, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 341, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2600, 0, 0, 175, 0, 0, 0, 0,
	0, 0, 240, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 346, 362, 241, 337,
	375, 246, 344, 236, 311, 334, 0, 0, 233, 360,
	343, 293, 276, 277, 232, 0, 329, 256, 269, 253,
	309, 0, 359, 387, 252, 378, 0, 370, 235, 0,
	369, 308, 356, 361, 294, 288, 234, 358, 292, 287,
	280, 260, 402, 273, 320, 286, 321, 274, 298, 297,
	299, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 281, 0, 0, 0, 388, 0,
	332, 314, 0, 0, 0, 330, 284, 357, 322, 363,
	347, 371, 326, 323, 226, 348, 255, 295, 237, 239,
	251, 257, 259, 261, 262, 304, 305, 317, 336, 350,
	351, 352, 254, 247, 331, 248, 271, 249, 227, 338,
	250, 229, 318, 355, 0, 267, 327, 291, 230, 290,
	319, 354, 353, 238, 379, 385, 386, 391, 0, 392,
	0, 0, 0, 400, 404, 405, 406, 408, 409, 410,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 384, 265, 223, 224, 417, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 383,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	415, 316, 0, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 365, 377, 395,
	398, 0, 0, 0, 228, 397, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 393, 300, 301, 302, 303, 268, 0,
	245, 396, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 264, 270, 407, 272, 244, 315, 266, 374, 278,
	0, 401, 0, 0, 0, 0, 0, 307, 275, 339,
	279, 285, 328, 373, 313, 333, 242, 364, 340, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 283, 0, 324, 263, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 219, 220, 221, 222, 349, 0,
	0, 380, 381, 382, 403, 366, 0, 414, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 341, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 0, 0, 240, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 346, 362,
	241, 337, 375, 246, 344, 236, 311, 334, 0, 0,
	233, 360, 343, 293, 276, 277, 232, 0, 329, 256,
	269, 253, 309, 0, 359, 387, 252, 378, 0, 370,
	235, 0, 369, 308, 356, 361, 294, 288, 234, 358,
	292, 287, 280, 260, 402, 273, 320, 286, 321, 274,
	298, 297, 299, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	2644, 0, 0, 345, 0, 0, 281, 0, 0, 0,
	388, 0, 332, 314, 0, 0, 0, 330, 284, 357,
	322, 363, 347, 371, 326, 323, 226, 348, 255, 295,
	237, 239, 251, 257, 259, 261, 262, 304, 305, 317,
	336, 350, 351, 352, 254, 247, 331, 248, 271, 249,
	227, 338, 250, 229, 318, 355, 0, 267, 327, 291,
	230, 290, 319, 354, 353, 238, 379, 385, 386, 391,
	0, 392, 0, 0, 0, 400, 404, 405, 406, 408,
	409, 410, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 384, 265, 223, 224, 417, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 383, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 415, 316, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 365,
	377, 395, 398, 0, 0, 0, 228, 397, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 393, 300, 301, 302, 303,
	268, 0, 245, 396, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 264, 270, 407, 272, 244, 315, 266,
	374, 278, 0, 401, 0, 0, 0, 0, 0, 307,
	275, 339, 279, 285, 328, 373, 313, 333, 242, 364,
	340, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 283, 0, 324, 263, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 219, 220, 221, 222,
	349, 0, 0, 380, 381, 382, 403, 366, 0, 414,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 341, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 0, 0, 240, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	346, 362, 241, 337, 375, 246, 344, 236, 311, 334,
	0, 0, 233, 360, 343, 293, 276, 277, 232, 0,
	329, 256, 269, 253, 309, 0, 359, 387, 252, 378,
	0, 370, 235, 0, 369, 308, 356, 361, 294, 288,
	234, 358, 292, 287, 280, 260, 402, 273, 320, 286,
	321, 274, 298, 297, 299, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 281, 0,
	0, 0, 388, 0, 332, 314, 0, 0, 0, 330,
	284, 357, 322, 363, 347, 371, 326, 323, 226, 348,
	255, 295, 237, 239, 251, 257, 259, 261, 262, 304,
	305, 317, 336, 350, 351, 352, 254, 247, 331, 248,
	271, 249, 227, 338, 250, 229, 318, 355, 0, 267,
	327, 291, 230, 290, 319, 354, 353, 238, 379, 385,
	386, 391, 0, 392, 0, 0, 0, 400, 404, 405,
	406, 408, 409, 410, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 384, 265, 223, 224,
	417, 0, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 383, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 415, 316, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 365, 377, 395, 398, 0, 0, 0, 228, 397,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 393, 300, 301,
	302, 303, 268, 0, 245, 396, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 264, 270, 407, 272, 244,
	315, 266, 374, 278, 0, 401, 0, 0, 0, 0,
	0, 307, 275, 339, 279, 285, 328, 373, 313, 333,
	242, 364, 340, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 283, 0, 324, 263,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 219, 220,
	221, 222, 349, 0, 0, 380, 381, 382, 403, 366,
	0, 414, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	341, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	0, 175, 0, 0, 0, 0, 0, 0, 240, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 346, 362, 241, 337, 375, 246, 344, 236,
	311, 334, 0, 0, 233, 360, 343, 293, 276, 277,
	232, 0, 329, 256, 269, 253, 309, 0, 359, 387,
	252, 378, 0, 370, 235, 0, 369, 308, 356, 361,
	294, 288, 234, 358, 292, 287, 280, 260, 402, 273,
	320, 286, 321, 274, 298, 297, 299, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	281, 0, 0, 0, 388, 0, 332, 314, 0, 0,
	0, 330, 284, 357, 322, 363, 347, 371, 326, 323,
	226, 348, 255, 295, 237, 239, 251, 257, 259, 261,
	262, 304, 305, 317, 336, 350, 351, 352, 254, 247,
	331, 248, 271, 249, 227, 338, 250, 229, 318, 355,
	0, 267, 327, 291, 230, 290, 319, 354, 353, 238,
	379, 385, 386, 391, 0, 392, 0, 0, 0, 400,
	404, 405, 406, 408, 409, 410, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 384, 265,
	223, 224, 417, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 383, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 415, 316, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 365, 377, 395, 398, 0, 0, 0,
	228, 397, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 393,
	300, 301, 302, 303, 268, 0, 245, 396, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 264, 270, 407,
	272, 244, 315, 266, 374, 278, 0, 401, 0, 0,
	0, 0, 0, 307, 275, 339, 279, 285, 328, 373,
	313, 333, 242, 364, 340, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 283, 0,
	324, 263, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	219, 220, 221, 222, 349, 0, 0, 380, 381, 382,
	403, 366, 0, 414, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 341, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 0, 0,
	240, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 346, 362, 241, 337, 375, 246,
	344, 236, 311, 334, 0, 0, 233, 360, 343, 293,
	276, 277, 232, 0, 329, 256, 269, 253, 309, 0,
	359, 387, 252, 378, 0, 370, 235, 0, 369, 308,
	356, 361, 294, 288, 234, 358, 292, 287, 280, 260,
	402, 273, 320, 286, 321, 274, 298, 297, 299, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 281, 0, 0, 0, 388, 0, 332, 314,
	0, 0, 0, 330, 284, 357, 322, 363, 347, 371,
	326, 323, 226, 348, 255, 295, 237, 239, 251, 257,
	259, 261, 262, 304, 305, 317, 336, 350, 351, 352,
	254, 247, 331, 248, 271, 249, 227, 338, 250, 229,
	318, 355, 0, 267, 327, 291, 230, 290, 319, 354,
	353, 238, 379, 385, 386, 391, 0, 392, 0, 0,
	0, 400, 404, 405, 406, 408, 409, 410, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	384, 265, 223, 224, 417, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 383, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 415, 316,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 365, 377, 395, 398, 0,
	0, 0, 228, 397, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 393, 300, 301, 302, 303, 268, 0, 245, 396,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 264,
	270, 407, 272, 244, 315, 266, 374, 278, 0, 401,
	0, 0, 0, 0, 0, 307, 275, 339, 279, 285,
	328, 373, 313, 333, 242, 364, 340, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	283, 0, 324, 263, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 219, 220, 221, 222, 349, 0, 0, 380,
	381, 382, 403, 366, 0, 414, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 341, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 2311, 0,
	0, 0, 240, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 346, 362, 241, 337,
	375, 246, 344, 236, 311, 334, 0, 0, 233, 360,
	343, 293, 276, 277, 232, 0, 329, 256, 269, 253,
	309, 0, 359, 387, 252, 378, 0, 370, 235, 0,
	369, 308, 356, 361, 294, 288, 234, 358, 292, 287,
	280, 260, 402, 273, 320, 286, 321, 274, 298, 297,
	299, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 281, 0, 0, 0, 388, 0,
	332, 314, 0, 0, 0, 330, 284, 357, 322, 363,
	347, 371, 326, 323, 226, 348, 255, 295, 237, 239,
	251, 257, 259, 261, 262, 304, 305, 317, 336, 350,
	351, 352, 254, 247, 331, 248, 271, 249, 227, 338,
	250, 229, 318, 355, 0, 267, 327, 291, 230, 290,
	319, 354, 353, 238, 379, 385, 386, 391, 0, 392,
	0, 0, 0, 400, 404, 405, 406, 408, 409, 410,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 384, 265, 223, 224, 417, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 383,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	415, 316, 0, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 365, 377, 395,
	398, 0, 0, 0, 228, 397, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 393, 300, 301, 302, 303, 268, 0,
	245, 396, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 264, 270, 407, 272, 244, 315, 266, 374, 278,
	0, 401, 0, 0, 0, 0, 0, 307, 275, 339,
	279, 285, 328, 373, 313, 333, 242, 364, 340, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 283, 0, 324, 263, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 219, 220, 221, 222, 349, 0,
	0, 380, 381, 382, 403, 366, 0, 414, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 341, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 0, 0, 240, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 346, 362,
	241, 337, 375, 246, 344, 236, 311, 334, 0, 0,
	233, 360, 343, 293, 276, 277, 232, 0, 329, 256,
	269, 253, 309, 0, 359, 387, 252, 378, 0, 370,
	235, 0, 369, 308, 356, 361, 294, 288, 234, 358,
	292, 287, 280, 260, 402, 273, 320, 286, 321, 274,
	298, 297, 299, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 281, 0, 0, 0,
	388, 0, 332, 314, 0, 0, 0, 330, 284, 357,
	322, 363, 347, 371, 326, 323, 226, 348, 255, 295,
	237, 239, 251, 257, 259, 261, 262, 304, 305, 317,
	336, 350, 351, 352, 254, 247, 331, 248, 271, 249,
	227, 338, 250, 229, 318, 355, 0, 267, 327, 291,
	230, 290, 319, 354, 353, 238, 379, 385, 386, 391,
	0, 392, 0, 0, 0, 400, 404, 405, 406, 408,
	409, 410, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 384, 265, 223, 224, 417, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 383, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 415, 316, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 365,
	377, 395, 398, 0, 0, 0, 228, 397, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 393, 300, 301, 302, 303,
	268, 0, 245, 396, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 264, 270, 407, 272, 244, 315, 266,
	374, 278, 0, 401, 0, 0, 0, 0, 0, 307,
	275, 339, 279, 285, 328, 373, 313, 333, 242, 364,
	340, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 283, 0, 324, 263, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 219, 220, 221, 222,
	349, 0, 0, 380, 381, 382, 403, 366, 0, 414,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 341, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 1135, 0, 0, 0, 240, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	346, 362, 241, 337, 375, 246, 344, 236, 311, 334,
	0, 0, 233, 360, 343, 293, 276, 277, 232, 0,
	329, 256, 269, 253, 309, 0, 359, 387, 252, 378,
	0, 370, 235, 0, 369, 308, 356, 361, 294, 288,
	234, 358, 292, 287, 280, 260, 402, 273, 320, 286,
	321, 274, 298, 297, 299, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 281, 0,
	0, 0, 388, 0, 332, 314, 0, 0, 0, 330,
	284, 357, 322, 363, 347, 371, 326, 323, 226, 348,
	255, 295, 237, 239, 251, 257, 259, 261, 262, 304,
	305, 317, 336, 350, 351, 352, 254, 247, 331, 248,
	271, 249, 227, 338, 250, 229, 318, 355, 0, 267,
	327, 291, 230, 290, 319, 354, 353, 238, 379, 385,
	386, 391, 0, 392, 0, 0, 0, 400, 404, 405,
	406, 408, 409, 410, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 384, 265, 223, 224,
	417, 0, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 383, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 415, 316, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 365, 377, 395, 398, 0, 0, 0, 228, 397,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 393, 300, 301,
	302, 303, 268, 0, 245, 396, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 264, 270, 407, 272, 244,
	315, 266, 374, 278, 0, 401, 0, 0, 0, 0,
	0, 307, 275, 339, 279, 285, 328, 373, 313, 333,
	242, 364, 340, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 283, 0, 324, 263,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 219, 220,
	221, 222, 349, 0, 0, 380, 381, 382, 403, 366,
	0, 414, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	341, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 1891, 0, 0, 0, 240, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 346, 362, 241, 337, 375, 246, 344, 236,
	311, 334, 0, 0, 233, 360, 343, 293, 276, 277,
	232, 0, 329, 256, 269, 253, 309, 0, 359, 387,
	252, 378, 0, 370, 235, 0, 369, 308, 356, 361,
	294, 288, 234, 358, 292, 287, 280, 260, 402, 273,
	320, 286, 321, 274, 298, 297, 299, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	281, 0, 0, 0, 388, 0, 332, 314, 0, 0,
	0, 330, 284, 357, 322, 363, 347, 371, 326, 323,
	226, 348, 255, 295, 237, 239, 251, 257, 259, 261,
	262, 304, 305, 317, 336, 350, 351, 352, 254, 247,
	331, 248, 271, 249, 227, 338, 250, 229, 318, 355,
	0, 267, 327, 291, 230, 290, 319, 354, 353, 238,
	379, 385, 386, 391, 0, 392, 0, 0, 0, 400,
	404, 405, 406, 408, 409, 410, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 384, 265,
	223, 224, 417, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 383, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 415, 316, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 365, 377, 395, 398, 0, 0, 0,
	228, 397, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 393,
	300, 301, 302, 303, 268, 0, 245, 396, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 264, 270, 407,
	272, 244, 315, 266, 374, 278, 0, 401, 0, 0,
	0, 0, 0, 307, 275, 339, 279, 285, 328, 373,
	313, 333, 242, 364, 340, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 283, 0,
	324, 263, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	219, 220, 221, 222, 349, 0, 0, 380, 381, 382,
	403, 366, 0, 414, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 341, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 0, 0,
	240, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 346, 362, 241, 337, 375, 246,
	344, 236, 311, 334, 0, 0, 233, 360, 343, 293,
	276, 277, 232, 0, 329, 256, 269, 253, 309, 0,
	359, 387, 252, 378, 0, 370, 235, 0, 369, 308,
	356, 361, 294, 288, 234, 358, 292, 287, 280, 260,
	402, 273, 320, 286, 321, 274, 298, 297, 299, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 281, 0, 0, 0, 388, 0, 332, 314,
	0, 0, 0, 330, 284, 357, 322, 363, 347, 371,
	326, 323, 226, 348, 255, 295, 237, 239, 251, 257,
	259, 261, 262, 304, 305, 317, 336, 350, 351, 352,
	254, 247, 331, 248, 271, 249, 227, 338, 250, 229,
	318, 355, 0, 267, 327, 291, 230, 290, 319, 354,
	353, 238, 379, 385, 386, 391, 0, 392, 0, 0,
	0, 400, 404, 405, 406, 408, 409, 410, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	384, 265, 223, 224, 417, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 383, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 415, 316,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 365, 377, 395, 398, 0,
	0, 0, 228, 397, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 393, 300, 301, 302, 303, 268, 0, 245, 396,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 264,
	270, 407, 272, 244, 315, 266, 374, 278, 0, 401,
	0, 0, 0, 0, 0, 307, 275, 339, 279, 285,
	328, 373, 313, 333, 242, 364, 340, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	283, 0, 324, 263, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 219, 220, 221, 222, 349, 0, 0, 380,
	381, 382, 403, 366, 0, 414, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 341, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	0, 0, 240, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1919,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 346, 362, 241, 337,
	375, 246, 344, 236, 311, 334, 0, 0, 233, 360,
	343, 293, 276, 277, 232, 0, 329, 256, 269, 253,
	309, 0, 359, 387, 252, 378, 0, 370, 235, 0,
	369, 308, 356, 361, 294, 288, 234, 358, 292, 287,
	280, 260, 402, 273, 320, 286, 321, 274, 298, 297,
	299, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 281, 0, 0, 0, 388, 0,
	332, 314, 0, 0, 0, 330, 284, 357, 322, 363,
	347, 371, 326, 323, 226, 348, 255, 295, 237, 239,
	251, 257, 259, 261, 262, 304, 305, 317, 336, 350,
	351, 352, 254, 247, 331, 248, 271, 249, 227, 338,
	250, 229, 318, 355, 0, 267, 327, 291, 230, 290,
	319, 354, 353, 238, 379, 385, 386, 391, 0, 392,
	0, 0, 0, 400, 404, 405, 406, 408, 409, 410,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 384, 265, 223, 224, 417, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 383,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	415, 316, 0, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 365, 377, 395,
	398, 0, 0, 0, 228, 397, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 393, 300, 301, 302, 303, 268, 0,
	245, 396, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 264, 270, 407, 272, 244, 315, 266, 374, 278,
	0, 401, 0, 0, 0, 0, 0, 307, 275, 339,
	279, 285, 328, 373, 313, 333, 242, 364, 340, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 283, 0, 324, 263, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 219, 220, 221, 222, 349, 0,
	0, 380, 381, 382, 403, 366, 0, 414, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 341, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	1917, 0, 0, 0, 240, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 346, 362,
	241, 337, 375, 246, 344, 236, 311, 334, 0, 0,
	233, 360, 343, 293, 276, 277, 232, 0, 329, 256,
	269, 253, 309, 0, 359, 387, 252, 378, 0, 370,
	235, 0, 369, 308, 356, 361, 294, 288, 234, 358,
	292, 287, 280, 260, 402, 273, 320, 286, 321, 274,
	298, 297, 299, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 281, 0, 0, 0,
	388, 0, 332, 314, 0, 0, 0, 330, 284, 357,
	322, 363, 347, 371, 326, 323, 226, 348, 255, 295,
	237, 239, 251, 257, 259, 261, 262, 304, 305, 317,
	336, 350, 351, 352, 254, 247, 331, 248, 271, 249,
	227, 338, 250, 229, 318, 355, 0, 267, 327, 291,
	230, 290, 319, 354, 353, 238, 379, 385, 386, 391,
	0, 392, 0, 0, 0, 400, 404, 405, 406, 408,
	409, 410, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 384, 265, 223, 224, 417, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 383, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 415, 316, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 365,
	377, 395, 398, 0, 0, 0, 228, 397, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 393, 300, 301, 302, 303,
	268, 0, 245, 396, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 264, 270, 407, 272, 244, 315, 266,
	374, 278, 0, 401, 0, 0, 0, 0, 0, 307,
	275, 339, 279, 285, 328, 373, 313, 333, 242, 364,
	340, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 283, 0, 324, 263, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 219, 220, 221, 222,
	0, 0, 0, 380, 381, 382, 403, 366, 349, 414,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 341, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 0, 0, 240, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 346, 362,
	241, 337, 375, 246, 344, 236, 311, 334, 0, 0,
	233, 360, 343, 293, 276, 277, 232, 0, 329, 256,
	269, 253, 309, 0, 359, 387, 252, 378, 0, 370,
	235, 0, 369, 308, 356, 361, 294, 288, 234, 358,
	292, 287, 280, 260, 402, 273, 320, 286, 321, 274,
	298, 297, 299, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 281, 0, 0, 0,
	388, 0, 332, 314, 0, 0, 0, 330, 284, 357,
	322, 363, 347, 371, 326, 323, 226, 348, 255, 295,
	237, 239, 251, 257, 259, 261, 262, 304, 305, 317,
	336, 350, 351, 352, 254, 247, 331, 248, 271, 249,
	227, 338, 250, 229, 318, 355, 0, 267, 327, 291,
	230, 290, 319, 354, 353, 238, 379, 385, 386, 391,
	0, 392, 0, 0, 0, 400, 404, 405, 406, 408,
	409, 410, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 384, 265, 223, 224, 417, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 383, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 415, 316, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 365,
	377, 395, 398, 0, 0, 0, 228, 397, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 393, 300, 301, 302, 303,
	268, 0, 245, 396, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 264, 270, 407, 272, 244, 315, 266,
	374, 278, 0, 401, 0, 0, 0, 0, 0, 307,
	275, 339, 279, 285, 328, 373, 313, 333, 242, 364,
	340, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 283, 0, 324, 263, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 219, 220, 221, 222,
	349, 0, 0, 380, 381, 382, 403, 366, 0, 414,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 341, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 1135, 0, 0, 0, 240, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	346, 362, 241, 337, 375, 246, 344, 236, 311, 334,
	0, 0, 233, 360, 343, 293, 276, 277, 232, 0,
	329, 256, 269, 253, 309, 0, 359, 387, 252, 378,
	0, 370, 235, 0, 369, 308, 356, 361, 294, 288,
	234, 358, 292, 287, 280, 260, 402, 273, 320, 286,
	321, 274, 298, 297, 299, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 281, 0,
	0, 0, 388, 0, 332, 314, 0, 0, 0, 330,
	284, 357, 322, 363, 347, 371, 1447, 323, 226, 348,
	255, 295, 237, 239, 251, 257, 259, 261, 262, 304,
	305, 317, 336, 350, 351, 352, 254, 247, 331, 248,
	271, 249, 227, 338, 250, 229, 318, 355, 0, 267,
	327, 291, 230, 290, 319, 354, 353, 238, 379, 385,
	386, 391, 0, 392, 0, 0, 0, 400, 404, 405,
	406, 408, 409, 410, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 384, 265, 223, 224,
	417, 0, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 383, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 415, 316, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 365, 377, 395, 398, 0, 0, 0, 228, 397,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 393, 300, 301,
	302, 303, 268, 0, 245, 396, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 264, 270, 407, 272, 244,
	315, 266, 374, 278, 0, 401, 0, 0, 0, 0,
	0, 307, 275, 339, 279, 285, 328, 373, 313, 333,
	242, 364, 340, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 283, 0, 324, 263,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 219, 220,
	221, 222, 349, 0, 0, 380, 381, 382, 403, 366,
	0, 414, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	341, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 0, 0, 240, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 346, 362, 241, 337, 375, 246, 344, 236,
	311, 334, 0, 0, 233, 360, 343, 293, 276, 277,
	232, 0, 329, 256, 269, 253, 309, 0, 359, 387,
	252, 378, 0, 370, 235, 0, 369, 308, 356, 361,
	294, 288, 234, 358, 292, 287, 280, 260, 402, 273,
	320, 286, 321, 274, 298, 297, 299, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 1158, 0, 0, 0, 345, 0, 0,
	281, 0, 0, 0, 388, 0, 332, 314, 0, 0,
	0, 330, 284, 357, 322, 363, 347, 371, 326, 323,
	226, 348, 255, 295, 237, 239, 251, 257, 259, 261,
	262, 304, 305, 317, 336, 350, 351, 352, 254, 247,
	331, 248, 271, 249, 227, 338, 250, 229, 318, 355,
	0, 267, 327, 291, 230, 290, 319, 354, 353, 238,
	379, 385, 386, 391, 0, 392, 0, 0, 0, 400,
	404, 405, 406, 408, 409, 410, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 384, 265,
	223, 224, 417, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 383, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 415, 316, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 365, 377, 395, 398, 0, 0, 0,
	228, 397, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 393,
	300, 301, 302, 303, 268, 0, 245, 396, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 264, 270, 407,
	272, 244, 315, 266, 374, 278, 0, 401, 0, 0,
	0, 0, 0, 307, 275, 339, 279, 285, 328, 373,
	313, 333, 242, 364, 340, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 283, 0,
	324, 263, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	219, 220, 221, 222, 349, 0, 0, 380, 381, 382,
	403, 366, 0, 414, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 341, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 0, 0,
	240, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 346, 362, 241, 337, 375, 246,
	344, 236, 311, 334, 0, 0, 233, 360, 343, 293,
	276, 277, 232, 0, 329, 256, 269, 253, 309, 0,
	359, 387, 252, 378, 0, 370, 235, 0, 369, 308,
	356, 361, 294, 288, 234, 358, 292, 287, 280, 260,
	402, 273, 320, 286, 321, 274, 298, 297, 299, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 281, 0, 0, 0, 388, 0, 332, 314,
	0, 0, 0, 330, 284, 357, 322, 363, 347, 371,
	326, 323, 226, 348, 255, 295, 237, 239, 251, 257,
	259, 261, 262, 304, 305, 317, 336, 350, 351, 352,
	254, 247, 331, 248, 271, 249, 227, 338, 250, 229,
	318, 355, 0, 267, 327, 291, 230, 290, 319, 354,
	353, 238, 379, 385, 386, 391, 0, 392, 0, 0,
	0, 400, 404, 405, 406, 408, 409, 410, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	384, 265, 223, 224, 417, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 383, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 415, 316,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 365, 377, 395, 398, 0,
	0, 0, 228, 397, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 393, 300, 301, 302, 303, 268, 0, 245, 396,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 264,
	270, 407, 272, 244, 315, 266, 374, 278, 0, 401,
	0, 0, 0, 0, 0, 307, 275, 339, 279, 285,
	328, 373, 313, 333, 242, 364, 340, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 225, 0,
	283, 0, 324, 263, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 219, 220, 221, 222, 349, 0, 0, 380,
	381, 382, 403, 366, 0, 414, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 341, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	0, 0, 240, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 346, 362, 241, 337,
	375, 246, 344, 236, 311, 334, 0, 0, 233, 360,
	343, 293, 276, 277, 232, 0, 329, 256, 269, 253,
	309, 0, 359, 387, 252, 378, 0, 370, 235, 0,
	369, 308, 356, 361, 294, 288, 234, 358, 292, 287,
	280, 260, 402, 273, 320, 286, 321, 274, 298, 297,
	299, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 281, 0, 0, 0, 388, 0,
	332, 314, 0, 0, 0, 330, 284, 357, 322, 363,
	347, 371, 453, 323, 226, 348, 255, 295, 237, 239,
	251, 257, 259, 261, 262, 304, 305, 317, 336, 350,
	351, 352, 254, 247, 331, 248, 271, 249, 227, 338,
	250, 229, 318, 355, 0, 267, 327, 291, 230, 290,
	319, 354, 353, 238, 379, 385, 386, 391, 0, 392,
	0, 0, 0, 400, 404, 405, 406, 408, 409, 410,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 384, 265, 223, 224, 417, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 383,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	415, 316, 0, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 365, 377, 395,
	398, 0, 0, 0, 228, 397, 0, 0, 0, 0,
	0, 0, 454, 368, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 393, 300, 301, 302, 303, 268, 0,
	245, 396, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 264, 270, 407, 272, 244, 315, 266, 374, 278,
	0, 401, 0, 0, 0, 0, 0, 307, 275, 339,
	279, 285, 328, 373, 313, 333, 242, 364, 340, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 283, 0, 324, 263, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 219, 220, 221, 222, 349, 0,
	0, 380, 381, 382, 403, 366, 0, 414, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 341, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 0, 0, 240, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 346, 362,
	241, 337, 375, 246, 344, 236, 311, 334, 0, 0,
	233, 360, 343, 293, 276, 277, 232, 0, 329, 256,
	269, 253, 309, 0, 359, 387, 252, 378, 0, 370,
	235, 0, 369, 308, 356, 361, 294, 288, 234, 358,
	292, 287, 280, 260, 402, 273, 320, 286, 321, 274,
	298, 297, 299, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 432, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 281, 0, 0, 0,
	388, 0, 332, 314, 0, 0, 0, 330, 284, 357,
	322, 363, 347, 371, 326, 323, 226, 348, 255, 295,
	237, 239, 251, 257, 259, 261, 262, 304, 305, 317,
	336, 350, 351, 352, 254, 247, 331, 248, 271, 249,
	227, 338, 250, 229, 318, 355, 0, 267, 327, 291,
	230, 290, 319, 354, 353, 238, 379, 385, 386, 391,
	0, 392, 0, 0, 0, 400, 404, 405, 406, 408,
	409, 410, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 384, 265, 223, 224, 417, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 383, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 415, 316, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 365,
	377, 395, 398, 0, 0, 0, 228, 397, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 393, 300, 301, 302, 303,
	268, 0, 245, 396, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 264, 270, 407, 272, 244, 315, 266,
	374, 278, 0, 401, 0, 0, 0, 0, 0, 307,
	275, 339, 279, 285, 328, 373, 313, 333, 242, 364,
	340, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 283, 0, 324, 263, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 219, 220, 221, 222,
	349, 0, 0, 380, 381, 382, 403, 366, 0, 414,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 422, 258, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 341, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 0, 0, 240, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	346, 362, 241, 337, 375, 246, 344, 236, 311, 334,
	0, 0, 233, 360, 343, 293, 276, 277, 232, 0,
	329, 256, 269, 253, 309, 0, 359, 387, 252, 378,
	0, 370, 235, 0, 369, 308, 356, 361, 294, 288,
	234, 358, 292, 287, 280, 260, 402, 273, 320, 286,
	321, 274, 298, 297, 299, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 281, 0,
	0, 0, 388, 0, 332, 314, 0, 0, 0, 330,
	284, 357, 322, 363, 347, 371, 326, 323, 226, 348,
	255, 295, 237, 239, 251, 257, 259, 261, 262, 304,
	305, 317, 336, 350, 351, 352, 254, 247, 331, 248,
	271, 249, 227, 338, 250, 229, 318, 355, 0, 267,
	327, 291, 230, 290, 319, 354, 353, 238, 379, 385,
	386, 391, 0, 392, 0, 0, 0, 400, 404, 405,
	406, 408, 409, 410, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 384, 265, 223, 224,
	417, 0, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 383, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 415, 316, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 365, 377, 395, 398, 0, 0, 0, 228, 397,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 393, 300, 301,
	302, 303, 268, 0, 245, 396, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 390, 264, 270, 407, 272, 244,
	315, 266, 374, 278, 0, 401, 0, 0, 0, 0,
	0, 307, 275, 339, 279, 285, 328, 373, 313, 333,
	242, 364, 340, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 283, 0, 324, 263,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 219, 220,
	221, 222, 349, 0, 0, 380, 381, 382, 403, 366,
	0, 414, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	341, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 0, 0, 240, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 346, 362, 241, 337, 375, 246, 344, 236,
	311, 334, 0, 0, 233, 360, 343, 293, 276, 277,
	232, 0, 329, 256, 269, 253, 309, 0, 359, 387,
	252, 378, 0, 370, 235, 0, 369, 308, 356, 361,
	294, 288, 234, 358, 292, 287, 280, 260, 402, 273,
	320, 286, 321, 274, 298, 297, 299, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	281, 0, 0, 0, 388, 0, 332, 314, 0, 0,
	0, 330, 284, 357, 322, 363, 347, 371, 326, 323,
	226, 348, 255, 295, 237, 239, 251, 257, 259, 261,
	262, 304, 305, 317, 336, 350, 351, 352, 254, 247,
	331, 248, 271, 249, 227, 338, 250, 229, 318, 355,
	0, 267, 327, 291, 230, 290, 319, 354, 353, 238,
	379, 385, 386, 391, 0, 392, 0, 0, 0, 400,
	404, 405, 406, 408, 409, 410, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 384, 265,
	223, 224, 417, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 383, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 415, 316, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 365, 377, 395, 398, 0, 0, 0,
	228, 397, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 393,
	300, 301, 302, 303, 268, 0, 245, 396, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 264, 270, 407,
	272, 244, 315, 266, 374, 278, 0, 401, 0, 0,
	0, 0, 0, 307, 275, 339, 279, 285, 328, 373,
	313, 333, 242, 364, 340, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 283, 0,
	324, 263, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	219, 220, 221, 222, 349, 0, 0, 380, 381, 382,
	403, 366, 0, 414, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 341, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 0, 0,
	240, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 346, 362, 241, 337, 375, 246,
	344, 236, 311, 334, 0, 0, 233, 360, 343, 293,
	276, 277, 232, 0, 329, 256, 269, 253, 309, 0,
	359, 387, 252, 378, 0, 370, 235, 0, 369, 308,
	356, 361, 294, 288, 234, 358, 292, 287, 280, 260,
	402, 273, 320, 286, 321, 274, 298, 297, 299, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 281, 0, 0, 0, 388, 0, 332, 314,
	0, 0, 0, 330, 284, 357, 322, 363, 347, 371,
	326, 323, 226, 348, 255, 295, 237, 239, 494, 257,
	259, 261, 262, 304, 305, 317, 336, 350, 351, 352,
	254, 247, 331, 248, 271, 249, 227, 338, 250, 229,
	318, 355, 0, 267, 327, 291, 230, 290, 319, 354,
	353, 238, 379, 385, 386, 391, 0, 392, 0, 0,
	0, 400, 404, 405, 406, 408, 409, 410, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	384, 265, 223, 224, 417, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 383, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 415, 316,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 365, 377, 395, 398, 0,
	0, 0, 228, 397, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 393, 300, 301, 302, 303, 268, 0, 245, 396,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 390, 264,
	270, 407, 272, 244, 315, 266, 374, 278, 153, 401,
	49, 145, 122, 0, 0, 307, 275, 339, 279, 285,
	328, 373, 313, 333, 242, 364, 340, 289, 146, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 0, 147,
	0, 218, 0, 0, 105, 0, 0, 812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 150, 0, 0, 225, 0,
	283, 0, 324, 263, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 219, 220, 221, 222, 0, 0, 0, 380,
	381, 382, 403, 366, 0, 414, 153, 0, 49, 145,
	122, 0, 0, 0, 0, 0, 0, 0, 109, 110,
	0, 111, 112, 0, 0, 0, 146, 0, 0, 0,
	800, 0, 0, 138, 0, 0, 0, 147, 0, 0,
	0, 0, 105, 0, 0, 0, 0, 0, 0, 0,
	820, 824, 826, 828, 830, 831, 833, 94, 837, 834,
	835, 836, 0, 150, 815, 816, 817, 818, 798, 799,
	821, 1504, 801, 0, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 813, 819, 121, 144, 151, 0,
	92, 0, 0, 823, 825, 827, 829, 832, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 143, 137,
	136, 0, 0, 0, 0, 55, 916, 917, 918, 915,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	814, 0, 0, 0, 0, 0, 109, 110, 0, 111,
	112, 0, 1486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 140, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1342, 0, 0, 0, 148,
	0, 0, 0, 0, 121, 144, 151, 0, 92, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 1504, 0,
	0, 142, 0, 102, 0, 0, 143, 137, 136, 0,
	0, 0, 0, 55, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1480, 1479, 103, 0, 1478, 2900,
	0, 0, 0, 1490, 0, 0, 48, 0, 0, 1486,
	0, 139, 140, 141, 1494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 1483, 0, 0, 148, 1485, 1487,
	1489, 0, 1491, 1492, 1493, 1495, 1496, 1497, 1499, 1500,
	1501, 1502, 0, 50, 0, 101, 0, 0, 0, 142,
	0, 102, 0, 1506, 0, 0, 0, 1338, 0, 0,
	0, 1335, 0, 0, 0, 1337, 1334, 1336, 1340, 1341,
	0, 0, 0, 1339, 0, 0, 123, 1504, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1486, 0, 0, 822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 48, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	104, 38, 0, 0, 1482, 0, 0, 47, 5, 108,
	1490, 0, 0, 0, 0, 0, 0, 0, 1486, 0,
	2683, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 0, 1498, 0, 0, 0, 0, 0, 0,
	1488, 1483, 0, 0, 0, 1485, 1487, 1489, 0, 1491,
	1492, 1493, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 0,
	0, 0, 0, 0, 123, 0, 0, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1345, 1346,
	1347, 1348, 1349, 1350, 1343, 1344, 0, 0, 0, 0,
	473, 0, 472, 479, 469, 0, 0, 1505, 0, 0,
	0, 1490, 0, 0, 476, 477, 0, 478, 482, 0,
	0, 464, 1494, 0, 0, 0, 0, 0, 104, 38,
	0, 487, 0, 0, 0, 47, 0, 108, 0, 0,
	0, 0, 1483, 0, 1503, 0, 1485, 1487, 1489, 0,
	1491, 1492, 1493, 1495, 1496, 1497, 1499, 1500, 1501, 1502,
	491, 1482, 0, 493, 0, 0, 0, 0, 492, 1490,
	473, 0, 472, 479, 469, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 476, 477, 0, 478, 482, 0,
	1498, 464, 0, 0, 0, 0, 0, 1488, 1505, 0,
	1483, 487, 0, 0, 1485, 1487, 1489, 0, 1491, 1492,
	1493, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 0, 0, 493, 2365, 1503, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 1482, 472, 479, 469, 1505, 0, 2375, 0,
	0, 0, 0, 0, 0, 476, 477, 0, 478, 482,
	0, 2368, 464, 0, 0, 0, 0, 0, 2363, 0,
	0, 1498, 487, 2378, 2379, 0, 0, 0, 1488, 2364,
	0, 0, 0, 1503, 0, 0, 0, 0, 465, 467,
	466, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	1482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	475, 0, 0, 0, 0, 0, 2369, 490, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 459, 1498,
	0, 0, 0, 0, 0, 0, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 467,
	466, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	475, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2377, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 470, 474, 480, 0, 481, 483, 0,
	0, 484, 485, 486, 2371, 0, 488, 489, 0, 465,
	467, 466, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 0, 0, 2370, 2372, 0, 0,
	0, 475, 0, 0, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 470, 474, 480, 0, 481, 483, 0,
	0, 484, 485, 486, 0, 0, 488, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2366, 0, 0, 0, 0, 0, 2376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 474, 480, 0, 481, 483,
	0, 0, 484, 485, 486, 0, 0, 488, 489,
}

var yyPact = [...]int{
	33078, -1000, -1000, -1000, -305, 10187, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32141, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 32141, -303, 31619,
	31619, -1000, -1000, 1782, -1000, 31097, 11250, 32141, 240, 239,
	32141, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 516, -1000, 30575, -1000, -1000, -1000, -1000, -1000,
	-1000, 471, 33700, 32663, 8088, -257, -1000, 2468, -109, 682,
	687, 779, 779, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2639, 607, 30053, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2585, 162, 607, 13338, -20, -22, 2468,
	300, 117, -1000, 787, 33196, 144, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 8088, 8088, 10187,
	-310, 10187, 8088, 32141, 32141, -1000, -1000, -1000, -1000, 471,
	33700, 8088, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -22, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3611, -1000, 1106, -1000, -1000, -1000, -1000, 2121, 1102,
	1651, 433, 32141, -1000, 1089, 433, -1000, -1000, -1000, 2468,
	2468, -1000, 32141, 32141, 31, 1220, -1000, 291, 286, 296,
	1071, -1000, -1000, -1000, -1000, -1000, 2464, -1000, 32141, 32141,
	2140, 32141, -1000, 1453, 388, 33770, 2288, 1120, 573, 2151,
	-1000, -1000, 2103, -1000, 138, 163, 146, 251, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 155, -1000, 2368, -1000, -1000,
	140, -1000, -1000, 134, -1000, -1000, -1000, -23, -1000, -1000,
	-1000, -1000, -1000, -1000, -119, -1000, -1000, 695, 1336, 8088,
	-1000, 1537, -1000, 2951, -1000, -1000, -1000, -1000, 5468, 9654,
	9654, 9654, 9654, -1000, -1000, 1963, 8088, 2091, 2090, -1000,
	-1000, -1000, -1000, -1000, 1070, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1649, 9132, -1000,
	2079, 2076, 2075, 2074, 2069, 2068, 2066, 2064, 2059, 2058,
	2052, 2051, 2046, 2044, 1836, 10717, 2033, 1648, 1647, 2031,
	2030, 2029, 1645, 1836, 1836, 2026, 2022, 2020, 2015, 2014,
	2012, 2008, 2003, 2001, 2000, 1998, 1996, 1995, 1994, 1993,
	1991, 1989, 1986, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1009, -1000, 1985, 2263,
	2392, 1875, 2424, 2352, 2344, 2337, 2335, 1503, -1000, -1000,
	-1000, -140, -1000, -1000, 667, -1000, 614, -1000, 32141, 32141,
	32141, 462, 462, 462, 462, 462, 503, 462, 514, 512,
	509, 462, -1000, -1000, -1000, -1000, -1000, -1000, 583, -1000,
	-1000, -1000, -1000, 892, 32141, -1000, 1881, 1179, 2374, 400,
	398, 281, -1000, 1269, 1269, 1269, 1269, 1179, 303, 393,
	2392, 2392, -43, 1269, -56, 1179, 1179, -56, 1179, 1179,
	1179, 171, -1000, -1000, -1000, 1269, 385, 1269, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2363, 2361, 471, 32141, 108,
	32141, 471, 471, 477, 1453, 387, 386, 916, 1283, -1000,
	1188, 32141, 32141, 32141, 1188, 1188, 16995, 16473, -1000, 32141,
	-1000, 2392, 1875, -1000, 1821, 2016, 1820, 1875, 471, 471,
	471, 471, 471, 471, 471, 471, 32141, 32141, 29531, 471,
	7034, 7034, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 10187, 1637, 1729, 141, -85, -308, 170, -1000, -1000,
	32141, 2256, 114, -1000, -1000, -1000, 1837, -1000, 1877, 1877,
	1877, 1877, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1928, 1984, -1000, -1000, 1876, 1876, 1876, 1837, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1899, 1899, 1901, 1899, 32141, 8088,
	32141, 2275, 282, 1978, -1000, 32141, 277, 2392, 2263, 2392,
	-1000, -1000, 1067, 1502, 1642, -1000, -1000, 291, 1175, -1000,
	815, -1000, -1000, -1000, -1000, 32141, 270, -1000, -1000, 1627,
	1977, -1000, 417, 1005, 1042, -1000, 113, 33851, 25869, 1453,
	25869, 32141, -1000, -1000, -1000, -1000, -1000, -1000, -28, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 130, -1000, 8088, 8088, 8088, 8088, 8088, -1000,
	458, 8610, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9654,
	9654, 9654, 9654, 9654, 9654, 9654, 9654, 9654, 9654, 9654,
	9654, 1959, 1340, 9654, 9654, 9654, 9654, 2016, 2492, 901,
	206, -1000, -1000, -1000, -1000, -1000, 1253, 1336, 8088, 8088,
	32141, -1000, 33225, 8088, 8088, 109, 8088, 2332, 8088, 8088,
	8088, 1804, 3901, 32141, 8088, -1000, 1802, 1801, -1000, -1000,
	1395, 8088, -1000, -1000, 8088, -1000, -1000, 8088, 9654, 8088,
	-1000, -1000, -1000, 1929, 2332, 2332, 8088, 8088, 2332, 2332,
	2332, 1247, 2332, 2332, 2332, 2332, 2332, 2332, 2332, 2332,
	1800, 2392, -257, 6512, -1000, -265, 2263, 8088, -1000, -1000,
	8088, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1636,
	-99, 671, 634, 630, -1000, 2311, -1000, 1973, 1967, 1066,
	32141, 1274, 32141, 25869, 32141, 1453, 32141, 32141, 462, 462,
	462, 32141, 477, -1000, 32141, 892, 2310, 32141, 2438, 9654,
	9654, 29009, 1269, 1179, -1000, 32141, -1000, -1000, -1000, 1269,
	32141, 1269, 1269, 2438, 1269, -1000, -1000, -1000, 1179, 1179,
	-1000, -1000, -1000, -1000, 1269, 1269, -1000, -1000, 2438, 32141,
	-29, 2438, 2438, -36, -1000, -1000, -1000, 32141, 32141, 462,
	32141, 32141, -1000, 32141, -1000, -1000, 32141, 33265, 32141, 32141,
	2347, -1000, 25869, 32141, 23781, -1000, -1000, 407, 424, 15429,
	357, 25869, 4945, -1000, -1000, 1188, 1188, 1188, 4945, 4945,
	953, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 873, -1000,
	121, 2263, -1000, -1000, -1000, -1000, -1000, 32141, 32141, 25869,
	1453, 32141, 32141, 32141, 32141, -1000, 1964, -1000, 2287, 32141,
	1004, -1000, -1000, 12816, 1065, 1004, -1000, 1262, -1000, 8088,
	10187, -279, 8088, 10187, 10187, 8088, 10187, -1000, 8088, 103,
	-1000, -1000, -1000, -1000, 1500, -1000, 1499, -1000, -1000, -1000,
	1631, 1631, -1000, 1496, -1000, -1000, -1000, -1000, 1494, -1000,
	-1000, 1492, -1000, -1000, 1799, 695, -1000, 1630, 2150, -259,
	-1000, 14384, 32141, 32141, -1000, -1000, -259, -1000, 13861, 32141,
	2263, -1000, 2263, 32141, -1000, 2372, -1000, 291, 215, -1000,
	-1000, -1000, -1000, -1000, -1000, 1063, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 856, -1000, 32141, -1000, -1000,
	113, 25869, 26913, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	182, -1000, -1000, 158, -1000, 497, 66, 1154, -1000, -1000,
	95, 149, 522, 1336, -1000, 1273, 1273, 1282, -1000, 507,
	-1000, -1000, -1000, -1000, 1963, -1000, -1000, -1000, 1538, 1428,
	-1000, 1289, 1289, 962, 962, 962, 962, 962, 1317, 1317,
	-1000, -1000, -1000, 5468, 1959, 9654, 9654, 9654, 9654, 443,
	443, 3097, 3710, -1000, 8088, 1258, -1000, 8088, 1879, 922,
	1058, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1798, 1797, 2471, 2463, 1792, 8088, -1000, -1000, 1153,
	1150, 1124, -1000, 1562, 7566, -1000, -1000, -1000, 1789, 1055,
	1787, -1000, -1000, -1000, 1783, 1121, 790, 1777, 1856, 1771,
	844, 8088, 8088, 1119, 1110, 8088, 8088, 8088, 8088, 1770,
	8088, 8088, 8088, 8088, 8088, 8088, 8088, 8088, -10, -1000,
	-1000, 1108, -1000, 1336, -1000, 1629, -1000, 1003, 841, -1000,
	1790, -1000, -1000, -1000, -1000, 655, 599, 656, 32141, 721,
	11772, 32141, 1881, 2271, 88, -1000, 990, -1000, 66, -128,
	724, 2138, 2449, 32141, 32141, 32141, 2308, 28487, -1000, 1952,
	1098, -1000, -1000, 8088, -1000, -1000, 2136, 32141, 32141, 2438,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 32141, 2438, 2438,
	1179, 1269, -1000, -1000, 1269, -1000, -1000, 1269, -1000, 1047,
	-1000, 32141, -1000, -1000, -1000, 1881, 820, -1000, 12294, 784,
	500, -1000, 1190, 1190, 693, 1190, 1190, 1190, 1190, 340,
	311, 1190, 1190, 1190, 1190, 1190, 1190, 1190, 1190, 1190,
	1190, 1190, 1190, 1190, 1190, 1950, -1000, 85, 2343, 166,
	990, 185, 2559, 883, -1000, -1000, -1000, -1000, 19083, 19083,
	14907, 19083, -1000, 1182, -1000, -1000, 491, -1000, -1000, 724,
	-1000, -1000, -1000, 1948, 1218, -1000, -1000, 10717, -1000, 4945,
	4945, 4945, -1000, -1000, 19605, 32141, -1000, -120, -1000, -111,
	-1000, 778, -1000, -1000, 788, 724, 2148, 778, 778, -1000,
	11772, 32141, -1000, 2438, 7034, -1000, 23781, -1000, -1000, 27957,
	-1000, 27435, 2438, 1233, -1000, 10187, 1719, 135, -1000, 160,
	-311, 133, 1394, 129, 1336, -1000, -1000, 1769, 1760, 1097,
	-1000, 1093, 1757, 1090, 1079, -1000, -64, -1000, 2242, 732,
	-1000, 1946, -1000, 1061, 2203, -1000, 758, -1000, 1217, 1056,
	-1000, 732, 1053, 2193, 758, -1000, -1000, 1036, 30, -1000,
	-1000, 32141, 1627, 1049, 26913, 741, -1000, 481, 1032, 1027,
	-1000, 25869, 142, 25869, -1000, 25869, -1000, -1000, 273, -1000,
	32141, 2261, -1000, -1000, -1000, 1567, -329, -1000, -1000, -1000,
	-1000, -1000, 1044, -1000, 443, 443, 3097, 3459, -1000, 9654,
	-1000, 9654, 2439, 1232, -1000, 8088, 1697, 3522, 1447, 18561,
	32141, -1000, -1000, 8088, 8088, -1000, 2430, -1000, -1000, -1000,
	-1000, 8088, 8088, 2241, -1000, 32141, -1000, -1000, -1000, -1000,
	18561, -1000, 9654, -1000, 8088, 872, 2425, -10, -10, 2417,
	2390, 2369, 1014, -10, 2359, 2342, 2294, 2246, 2227, 2218,
	2196, 2184, -1000, 1931, 6512, -1000, -64, 8088, 8088, 8088,
	2214, -1000, -1000, -1000, -1000, -1000, 588, 116, 1749, 753,
	-1000, -1000, 32141, -1000, -1000, -1000, 1748, 746, -1000, -1000,
	-1000, 33097, 1877, 1877, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1928, -1000, -1000, 1876, 1876, 1876, 1837,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1899,
	1899, 1901, 1899, -1000, 2307, -1000, -18, 1190, 415, 25869,
	367, -1000, 32141, 2147, 338, 2225, 32141, 1898, 1890, 1889,
	221, 33097, 32141, 991, -1000, 1026, 33196, -1000, 32141, 1336,
	-1000, 1453, -1000, 1179, -1000, 2438, 918, -1000, -1000, 2438,
	1179, 1179, 1269, 32141, -1000, 2297, 33265, -1000, -1000, -1000,
	33097, 617, -1000, 32141, 1318, 629, 462, 629, 1313, 1887,
	-1000, -1000, -1000, 32141, 32141, 32141, 1310, 1299, -1000, 32141,
	1490, -1000, 1487, 1190, 1190, 1485, 1623, 1622, 1617, 1190,
	1190, 1481, 1616, 26391, 1480, 1465, 1464, 1460, 1612, 618,
	1450, 1449, 1425, 32141, 1886, 1548, -18, 1190, 165, 1210,
	415, 1382, 15951, 32141, 23781, 23781, 23781, 23781, -1000, 2179,
	2170, -1000, 2178, 2177, 2213, 32141, 23781, 1881, -1000, 26391,
	-1000, -1000, -1000, 2016, 1006, 2542, 647, 8088, 25869, 1611,
	357, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32141,
	32141, 1738, -1000, 2431, -1000, 743, -1000, -1000, 1008, -1000,
	2431, 1260, -306, 10187, 1237, 1223, -1000, 8088, 10187, 8088,
	-286, 154, -288, -1000, -1000, -1000, 1608, -1000, -1000, -1000,
	1463, -1000, 1461, 9, 18, 1295, -259, 6512, 285, 32141,
	-259, 32141, 6512, -1000, 32141, 271, -259, 32141, 1458, -1000,
	-1000, -1000, 2442, 25869, 1453, 1135, 25347, -1000, 131, -1000,
	178, 399, 1605, -1000, 506, 89, -1000, 1197, 1567, -1000,
	-1000, -1000, 9654, -1000, -1000, -1000, -1000, 1336, 8088, 1737,
	-1000, 640, 640, 1735, -1000, 1877, 1877, -1000, 1837, 1876,
	1837, 640, 640, 1734, -1000, 1495, 2154, -1000, 2134, 2127,
	8088, -1000, 1726, 2977, 843, -143, -10, -1000, -1000, -1000,
	-10, -10, -10, -10, -1000, -10, -10, -10, -10, -10,
	-10, -10, -10, 435, -1000, 9, 1336, 1336, -1000, -1000,
	2235, -1000, 1604, 1603, 721, 33097, 519, 11772, 2243, 292,
	1455, -1000, -1000, 24825, 394, -1000, -1000, -1000, 469, 167,
	1456, 379, -1000, 32141, 173, 32141, -1000, -1000, -1000, -1000,
	-1000, 2225, -1000, 563, 204, 12294, 12294, 12294, 213, 1230,
	-1000, 433, 777, 970, 23781, 32141, -1000, 23259, 1718, -1000,
	724, 2438, -1000, 32141, -1000, 2438, 2438, 1179, -1000, 292,
	-1000, 33804, -1000, -1000, 32141, 32141, -1000, 32141, 32141, 462,
	8088, -1000, -1000, -1000, 32141, -1000, 205, -1000, -1000, 18561,
	18561, -1000, -1000, -1000, -1000, 1600, 1595, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 349,
	32141, 999, -1000, 1196, 1455, 24825, 1194, 1579, 394, -1000,
	1577, -1000, 701, 32141, 32141, -1000, 859, -1000, 1192, 2132,
	2146, 2132, -1000, -1000, -1000, -1000, 2164, -1000, 2163, -1000,
	-1000, 859, -1000, -1000, -1000, -1000, -1000, 647, -1000, 2366,
	629, 629, 629, 1695, 741, 1689, -1000, -1000, -1000, -1000,
	-1000, 2429, 2423, 24303, 2429, -1000, -306, 1228, -1000, 1614,
	128, 1376, 32141, -1000, -1000, -1000, 1685, 1675, -267, 22,
	2421, 2420, 2481, -1000, 1671, 740, -259, -1000, -1000, 732,
	-1000, -1000, -1000, -259, -1000, 732, -1000, -1000, 1453, -1000,
	174, -1000, -1000, -1000, -1000, -1000, -1000, 41, -1000, 32141,
	-1000, 1567, 1566, 87, -1000, 1336, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8088, -1000, -1000, -1000, 2056, -1000, -1000, 8088, 1667,
	1558, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2426, -1000, 2418, -267, -1000, -1000,
	-1000, -1000, -1000, -1000, 33097, -1000, 1424, -1000, -1000, 1556,
	65, -1000, -1000, -1000, 1554, 1553, 1438, -1000, -1000, 1420,
	1010, 74, -1000, -1000, -1000, -1000, -1000, -1000, 1382, 32141,
	1872, -1000, 1190, 1190, 1190, 32141, 1666, 733, -1000, 1664,
	1658, 437, 1231, 1206, -1000, 1437, 19083, 23781, 23259, 836,
	-1000, 948, -1000, -1000, -1000, 2438, -1000, -1000, 2438, -1000,
	-1000, 33804, -1000, -1000, 1327, 9654, -1000, -1000, 1550, 18039,
	555, 557, 1871, -1000, 287, 2476, -1000, 1292, 1288, -1000,
	32141, -1000, 1867, 1785, 250, 1864, -1000, 1861, 1860, 32141,
	2036, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	361, 996, -1000, 1548, 1547, -1000, 65, 1546, -1000, -1000,
	-1000, 32141, 701, 701, 2426, 32141, 6512, -1000, -1000, 8088,
	1859, -1000, 8088, -1000, -1000, -1000, -1000, -1000, 1851, 2274,
	-1000, -1000, -1000, -1000, -1000, -1000, 8088, 8088, -1000, -1000,
	456, 10187, -289, 153, -1000, -1000, -1000, -269, 1534, -1000,
	-1000, 2412, 1532, 1510, 32141, -1000, 732, 732, 724, -1000,
	-1000, -36, -1000, -1000, -1000, 1869, -1000, 1829, -10, -1000,
	119, 8088, -269, -196, -1000, -1000, -1000, -1000, 269, -1000,
	-1000, 181, -1000, -1000, 1412, 423, -1000, -1000, 701, 22215,
	18561, 18039, 1531, -1000, 33561, 12294, 130, 33561, 689, 1201,
	-1000, 1436, -1000, 1432, -1000, 2438, 836, 948, -1000, -1000,
	1127, -1000, -1000, -1000, -1000, 3097, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1416,
	1849, -81, -1000, -1000, 1842, 22215, 315, 315, 22215, 22215,
	22215, 1841, 459, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2392, -1000, -1000, 1336, 32141, 1336, 22737, -1000, 2411,
	2408, 1336, 695, -1000, -306, 32141, 32141, -271, 1415, -1000,
	1529, 19, -1000, -1000, 696, -273, 8, 6, -1000, -1000,
	-1000, 1657, -1000, 3107, -1000, -1000, -1000, 695, -271, 32141,
	395, 1528, -1000, -1000, 177, -1000, -1000, 995, -1000, 1837,
	8088, -1000, -1000, -1000, 414, 33503, -1000, -1000, -1000, -36,
	414, 383, 199, -1000, 1414, -1000, -1000, 2426, -1000, 1632,
	8088, 1836, -176, 22215, 971, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 963, 956, 955, 22215, -1000, -1000, -1000, 275,
	-1000, 950, 949, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1835, -1000, -1000, 2406, -1000, 1526, 470, 11, 6, -1000,
	2405, 15, 2404, 2402, -1000, -1000, 4423, -260, -9, 304,
	-1000, 2295, -1000, -1000, 40, -1000, -1000, -1000, 22215, 2268,
	1750, 257, 2401, 33561, -1000, -1000, 257, -1000, 219, -1000,
	1165, -1000, 1401, -1000, 2392, -1000, 1739, -1000, 2143, -1000,
	111, 936, -1000, -1000, -1000, -1000, 935, -1000, -1000, -1000,
	21693, 32141, 1510, -1000, 1833, 1396, 22, 12, 2397, -1000,
	1510, 2395, 1510, 1510, 1279, -1000, -1000, -1000, -1000, -1000,
	1523, -1000, 208, -1000, -1000, 2268, -1000, 2394, 319, -1000,
	-1000, -1000, -1000, 1368, -1000, -1000, 459, -1000, 2142, 1932,
	2453, -1000, -1000, -1000, -1000, 208, 208, 208, 208, 127,
	-1000, -1000, 897, -1000, -1000, 2341, 17517, -1, -1000, -1000,
	-1000, 1512, -1000, 1510, -1000, -1000, 4423, -1000, -1000, 1190,
	1400, 187, -1000, -1000, -1000, 21171, 272, 284, 280, -1000,
	406, -1000, -1000, -1000, -1000, 2475, -1000, 2454, 575, 575,
	-1000, -1000, 32141, -1000, 32141, -1000, 884, -1000, -1000, -1000,
	945, -1000, -1000, -1000, -1000, -1000, 1354, -1000, 32141, -1000,
	32141, 263, 1353, 9654, 1831, 9654, 1826, 279, 1825, -1000,
	-1000, -1000, 1380, 288, -1000, -1000, 694, -1000, 1178, -1000,
	20649, 32141, -1000, -1000, 831, 1824, 2391, -1000, 2915, 32141,
	2626, 32141, 1643, 1159, 9654, -1000, -1000, -1000, 32141, 5990,
	-1000, 944, -1000, -1000, 401, 276, -1000, 830, -1000, 829,
	20127, 1346, 2232, -1000, -1000, 1336, 32141, 816, -1000, 32141,
	259, -1000, -1000, -1000, 794, -1000, -1000, -1000, -1000, 401,
	2191, -1000, 1344, -1000, -1000, 33412, 558, -1000, -1000, 33412,
	262, -1000, 410, 1568, -1000, -1000, 785, -1000, 32141, 596,
	8088, -1000, 262, 33561, -1000, 8088, 780, -1000, 33561, 775,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 133, 2501, 212, 139, 3004, 62, 211, 198, 184,
	209, 3003, 2999, 2292, 2244, 2997, 2996, 2995, 2994, 2992,
	2991, 2990, 2989, 2988, 2987, 2986, 2985, 2980, 2978, 2977,
	2976, 2974, 2973, 2972, 2971, 2970, 2969, 2968, 2967, 208,
	2966, 2964, 2962, 2961, 2960, 2959, 2957, 2956, 2954, 2953,
	2952, 2951, 2950, 2948, 2947, 2946, 2945, 2944, 2943, 2942,
	2940, 2939, 2936, 2935, 2933, 2932, 2930, 182, 2929, 2243,
	2928, 2924, 2923, 2922, 2919, 2915, 2913, 177, 2911, 2910,
	2908, 2907, 2906, 2904, 2901, 2900, 2897, 2896, 2894, 2893,
	2892, 2891, 2890, 2887, 2885, 179, 2884, 135, 167, 2883,
	2879, 2878, 2876, 2874, 204, 178, 49, 2873, 37, 2869,
	187, 2868, 102, 2867, 117, 2864, 2861, 2859, 2857, 2851,
	2849, 2848, 2847, 2846, 2845, 2844, 2843, 71, 2840, 2839,
	203, 162, 217, 1940, 223, 213, 148, 132, 70, 2838,
	2274, 2837, 126, 193, 122, 22, 2836, 143, 2835, 120,
	31, 24, 210, 109, 38, 118, 110, 2833, 185, 69,
	2830, 82, 2829, 2827, 216, 155, 2826, 97, 2825, 2824,
	2823, 2822, 165, 150, 2820, 2818, 92, 2817, 2814, 116,
	2813, 46, 2812, 127, 78, 93, 87, 2811, 2810, 2809,
	114, 2808, 2804, 2802, 2800, 146, 2799, 2797, 99, 68,
	2796, 2794, 2792, 45, 2789, 47, 2788, 55, 2785, 2784,
	2782, 2781, 52, 2778, 2776, 15, 19, 21, 2775, 20,
	2773, 130, 2768, 2766, 2765, 2, 2764, 190, 42, 80,
	112, 2763, 357, 2762, 2761, 2760, 125, 2757, 341, 2742,
	2738, 2736, 2735, 2734, 113, 2727, 188, 36, 2726, 72,
	101, 89, 161, 163, 2725, 2724, 2723, 272, 73, 53,
	0, 2721, 115, 2720, 2718, 2717, 215, 2716, 197, 160,
	195, 196, 218, 138, 2714, 2713, 67, 2710, 121, 75,
	100, 8, 2709, 144, 2707, 354, 145, 2706, 171, 2705,
	192, 1, 108, 2704, 2703, 34, 221, 2701, 2700, 2699,
	90, 2697, 2696, 88, 94, 2695, 2692, 2691, 33, 2688,
	29, 27, 2687, 77, 2684, 225, 2683, 153, 107, 149,
	137, 119, 189, 194, 54, 59, 2682, 1274, 111, 76,
	25, 2681, 191, 2680, 220, 205, 2678, 152, 2677, 201,
	321, 173, 2676, 159, 10, 35, 28, 2675, 9, 2674,
	154, 169, 2672, 2671, 18, 2670, 17, 2668, 2667, 2666,
	2665, 5, 2664, 2663, 2662, 4, 7, 2661, 3, 176,
	2660, 2659, 2658, 2655, 40, 157, 2654, 103, 141, 2653,
	2652, 74, 2651, 2650, 2648, 632, 2645, 2644, 2643, 2642,
	2641, 2639, 2638, 2637, 2635, 2634, 81, 43, 2632, 2631,
	2630, 2629, 63, 98, 2628, 2627, 2622, 2621, 30, 142,
	2620, 16, 2617, 26, 23, 32, 2610, 96, 2604, 12,
	156, 2603, 2600, 14, 2593, 2592, 11, 13, 2591, 2588,
	91, 2587, 66, 41, 131, 79, 2581, 65, 186, 105,
	2580, 2578, 207, 206, 166, 2577, 158, 199, 219, 2571,
	180, 2570, 2561, 2559, 2557, 2555, 2554, 823, 2553, 2551,
	202, 44, 60, 84, 2550, 2537, 2535, 64, 123, 86,
	83, 168, 2534, 164, 2528, 2527, 85, 2526, 2520, 2515,
	2513, 2512, 151, 2506, 2505, 2503, 2499, 200, 214, 2495,
}

//line mysql_sql.y:9346
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 481, 485, 485, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 102, 479, 479, 479, 480, 480, 99, 119,
	118, 121, 121, 120, 120, 117, 117, 113, 116, 116,
	115, 115, 114, 109, 111, 111, 110, 112, 112, 100,
	88, 101, 429, 429, 428, 428, 427, 427, 382, 382,
	426, 426, 426, 425, 425, 425, 424, 424, 423, 423,
	422, 422, 420, 420, 421, 419, 418, 418, 418, 416,
	416, 416, 412, 412, 414, 413, 413, 415, 407, 407,
	410, 410, 408, 408, 408, 408, 411, 406, 406, 406,
	405, 405, 87, 87, 87, 329, 329, 86, 86, 343,
	343, 343, 343, 343, 341, 341, 341, 341, 341, 341,
	340, 340, 339, 339, 344, 344, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 78, 78, 78, 78,
	81, 81, 81, 82, 338, 338, 338, 79, 80, 80,
	328, 328, 333, 333, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 337, 337, 337, 335,
	335, 334, 334, 336, 336, 72, 72, 72, 75, 74,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 73,
	73, 73, 73, 73, 73, 68, 68, 68, 68, 68,
	67, 67, 69, 69, 325, 325, 324, 83, 83, 84,
	483, 483, 482, 484, 484, 484, 484, 85, 91, 91,
	91, 91, 91, 91, 91, 90, 90, 93, 93, 92,
	94, 77, 77, 77, 77, 77, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 453, 453, 453, 455, 455,
	264, 265, 486, 267, 263, 263, 263, 449, 449, 450,
	451, 452, 452, 452, 89, 11, 11, 11, 11, 11,
	11, 66, 71, 220, 220, 221, 221, 221, 221, 222,
	222, 222, 222, 222, 223, 224, 224, 64, 70, 70,
	466, 466, 65, 473, 473, 385, 385, 278, 278, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 389, 390, 274, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 46, 45, 45, 45, 314, 314, 44,
	487, 487, 253, 253, 54, 55, 56, 57, 58, 59,
	60, 43, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 63, 63, 401, 401, 489, 489, 489, 61, 62,
	384, 384, 384, 52, 51, 50, 49, 48, 48, 42,
	42, 41, 41, 47, 125, 126, 271, 271, 271, 273,
	273, 269, 488, 488, 356, 356, 272, 272, 40, 40,
	40, 40, 270, 270, 252, 268, 268, 268, 12, 12,
	10, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 23, 24, 26, 322, 322, 319, 25,
	18, 17, 20, 16, 19, 21, 22, 22, 9, 9,
	9, 9, 13, 13, 14, 137, 137, 185, 185, 461,
	461, 457, 457, 458, 458, 458, 459, 459, 460, 460,
	95, 395, 395, 395, 395, 395, 395, 8, 160, 160,
	159, 159, 394, 394, 394, 394, 394, 394, 326, 326,
	438, 438, 438, 439, 158, 158, 153, 153, 396, 396,
	292, 440, 440, 404, 404, 403, 403, 402, 402, 156,
	156, 157, 157, 140, 140, 105, 105, 409, 409, 409,
	409, 417, 417, 381, 381, 212, 212, 247, 247, 248,
	248, 130, 130, 131, 131, 131, 131, 131, 131, 446,
	446, 448, 448, 447, 155, 155, 151, 151, 152, 152,
	152, 150, 150, 149, 148, 148, 147, 145, 145, 145,
	146, 146, 146, 133, 133, 133, 132, 132, 132, 132,
	132, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 134, 134, 454, 454, 454, 386, 386,
	386, 392, 392, 229, 229, 230, 230, 228, 228, 135,
	135, 136, 136, 136, 136, 227, 227, 226, 138, 138,
	144, 143, 143, 139, 139, 139, 139, 237, 237, 236,
	236, 236, 236, 98, 103, 103, 104, 163, 163, 235,
	234, 234, 234, 162, 162, 161, 161, 154, 154, 142,
	142, 142, 142, 233, 141, 231, 478, 478, 477, 477,
	476, 474, 474, 474, 475, 475, 475, 475, 431, 431,
	431, 431, 431, 258, 258, 258, 262, 262, 261, 261,
	261, 261, 261, 266, 7, 7, 7, 7, 7, 30,
	30, 30, 30, 30, 30, 30, 30, 36, 171, 172,
	37, 173, 173, 174, 174, 175, 175, 176, 177, 178,
	178, 178, 178, 35, 164, 164, 165, 165, 166, 166,
	167, 168, 168, 168, 170, 169, 34, 27, 462, 465,
	463, 463, 467, 467, 467, 468, 468, 468, 469, 469,
	28, 122, 127, 127, 124, 129, 129, 129, 129, 129,
	123, 464, 470, 470, 470, 323, 323, 320, 321, 321,
	318, 317, 317, 317, 472, 472, 471, 471, 471, 259,
	259, 29, 313, 313, 315, 316, 316, 316, 307, 307,
	307, 307, 33, 311, 311, 312, 312, 312, 312, 312,
	308, 308, 310, 310, 306, 306, 306, 306, 306, 32,
	128, 128, 305, 305, 303, 303, 301, 301, 302, 302,
	300, 300, 300, 304, 304, 31, 31, 31, 107, 106,
	106, 106, 250, 250, 249, 249, 108, 38, 197, 197,
	370, 370, 370, 370, 370, 388, 388, 388, 371, 371,
	371, 372, 372, 372, 373, 373, 373, 373, 373, 387,
	387, 345, 345, 346, 346, 346, 349, 349, 362, 362,
	363, 363, 361, 361, 368, 368, 367, 367, 366, 366,
	365, 365, 364, 364, 364, 364, 359, 359, 358, 358,
	347, 347, 347, 347, 347, 348, 348, 348, 357, 357,
	360, 360, 203, 203, 204, 204, 204, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 436, 436, 437, 206,
	206, 206, 210, 210, 210, 210, 210, 210, 205, 205,
	207, 207, 186, 186, 184, 184, 179, 179, 180, 180,
	181, 181, 182, 182, 183, 183, 183, 183, 183, 183,
	331, 331, 434, 434, 435, 435, 430, 430, 430, 433,
	433, 433, 433, 433, 432, 432, 187, 245, 245, 245,
	260, 260, 260, 260, 244, 244, 244, 202, 202, 201,
	201, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 330, 330, 275, 275,
	276, 276, 219, 218, 218, 218, 218, 218, 216, 217,
	215, 215, 215, 215, 215, 214, 214, 213, 213, 213,
	309, 309, 211, 211, 209, 209, 209, 208, 208, 208,
	369, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 243, 284, 284, 289, 289,
	445, 445, 444, 188, 188, 188, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 198, 198, 198, 354, 354,
	354, 354, 354, 355, 355, 355, 352, 352, 353, 353,
	293, 294, 294, 393, 393, 350, 350, 351, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 400, 400, 400, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 456, 456, 456, 441, 441, 441,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 241,
	241, 241, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 295, 295, 296,
	296, 397, 397, 397, 397, 397, 397, 398, 398, 399,
	399, 399, 399, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 282, 238, 238, 238, 297, 290, 290, 291,
	291, 285, 285, 285, 285, 285, 285, 285, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	286, 286, 288, 288, 299, 299, 299, 298, 298, 298,
	298, 298, 298, 298, 200, 200, 200, 200, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 190,
	190, 190, 190, 194, 194, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 195,
	195, 195, 195, 193, 193, 193, 193, 193, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 96, 97, 97, 192, 246, 246,
	374, 374, 377, 377, 375, 375, 376, 378, 378, 378,
	379, 379, 379, 380, 380, 380, 383, 383, 251, 251,
	251, 257, 257, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 4, 6, 1, 1, 1, 2, 4, 6,
	1, 4, 1, 3, 3, 4, 4, 4, 3, 3,
	2, 4, 4, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 2, 2,
	0, 1, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 2, 4, 3,
	3, 1, 1, 1, 1, 1, 2, 3, 4, 7,
	2, 3, 3, 4, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 2,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 2, 2, 1, 2,
	2, 2, 3, 2, 3, 1, 1, 7, 7, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 2, 5, 5, 0, 2, 7,
	0, 1, 0, 1, 5, 3, 2, 4, 4, 4,
	4, 4, 1, 1, 1, 3, 2, 3, 1, 1,
	1, 6, 8, 0, 1, 1, 1, 1, 5, 5,
	0, 1, 1, 3, 3, 3, 4, 6, 7, 4,
	4, 7, 8, 3, 3, 3, 0, 2, 2, 0,
	2, 2, 1, 1, 1, 1, 0, 1, 4, 4,
	5, 4, 1, 3, 1, 1, 3, 5, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 6, 3, 5, 1, 1,
	2, 2, 11, 8, 9, 1, 3, 2, 4, 0,
	2, 0, 1, 1, 1, 1, 0, 1, 0, 1,
	4, 2, 1, 5, 4, 4, 2, 5, 0, 2,
	1, 3, 2, 1, 5, 4, 4, 2, 0, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 1, 3,
	4, 0, 1, 0, 1, 1, 3, 1, 1, 0,
	4, 1, 3, 2, 1, 0, 8, 0, 4, 7,
	4, 0, 2, 0, 2, 0, 2, 0, 4, 1,
	3, 1, 1, 4, 3, 4, 5, 4, 5, 2,
	3, 1, 3, 6, 0, 3, 0, 1, 2, 4,
	4, 0, 1, 3, 1, 3, 3, 0, 1, 1,
	0, 2, 2, 3, 3, 3, 1, 3, 3, 3,
	3, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 7, 7, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 2, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 4, 4, 3, 2, 2, 2,
	3, 2, 3, 4, 1, 3, 4, 0, 2, 1,
	1, 2, 2, 0, 1, 2, 4, 1, 3, 1,
	3, 2, 3, 1, 4, 3, 0, 1, 1, 2,
	5, 2, 2, 2, 0, 2, 3, 3, 0, 1,
	3, 1, 3, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 7, 1, 1,
	7, 1, 3, 0, 1, 1, 3, 1, 3, 0,
	1, 1, 1, 12, 1, 3, 0, 1, 1, 3,
	1, 1, 2, 4, 1, 1, 7, 7, 1, 4,
	1, 1, 3, 4, 3, 0, 1, 1, 0, 2,
	7, 8, 0, 2, 6, 0, 2, 2, 3, 3,
	4, 1, 0, 2, 2, 1, 3, 2, 1, 3,
	2, 1, 3, 2, 0, 1, 3, 4, 3, 1,
	1, 4, 1, 3, 1, 1, 1, 1, 0, 1,
	1, 1, 11, 0, 2, 3, 2, 3, 1, 1,
	1, 3, 3, 4, 0, 2, 2, 2, 2, 6,
	0, 4, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 11, 9, 11, 2, 2,
	4, 5, 1, 3, 0, 3, 5, 10, 0, 2,
	0, 3, 2, 4, 3, 0, 2, 1, 0, 2,
	3, 0, 2, 3, 0, 3, 2, 4, 3, 0,
	1, 0, 6, 0, 3, 5, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 5, 6, 5, 0, 3,
	0, 1, 0, 1, 1, 3, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 4, 1, 3, 3, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 1, 2, 1, 7, 7, 7, 7, 8, 5,
	0, 1, 0, 1, 1, 1, 1, 3, 3, 1,
	1, 1, 1, 1, 0, 1, 3, 1, 3, 5,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	2, 1, 2, 2, 1, 1, 2, 2, 2, 2,
	2, 1, 5, 6, 4, 1, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	1, 1, 1, 1, 1, 4, 0, 2, 0, 1,
	1, 2, 4, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 5, 0, 1,
	3, 0, 1, 0, 2, 0, 1, 6, 8, 6,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 4, 4, 4, 3, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 2, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 2, 3, 5, 1, 1, 3,
	0, 1, 0, 3, 0, 3, 3, 0, 3, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -481, -485, -2, -5, 550, -1, -4, -97, -72,
	-7, -99, -100, -8, -95, -9, -10, -12, -76, -90,
	-92, -94, -93, -39, -11, -89, -67, -68, -78, -83,
	-86, -87, -88, -101, -96, -98, -130, -102, 543, -73,
	-74, -75, -30, -29, -28, -27, -122, 549, 408, 12,
	455, -13, -14, -446, -15, 237, -263, -264, -265, -267,
	-486, -40, -41, -42, -48, -49, -50, -51, -52, -61,
	-62, -63, -43, -44, -45, -46, -54, -55, -56, -57,
	-58, -59, -60, -47, -125, -126, -65, -64, -70, -66,
	-71, -124, 212, -69, 61, -79, -80, -81, -82, -84,
	-85, 339, 345, 398, 542, 46, -131, -133, 551, 140,
	141, 143, 144, -31, -32, -33, -34, -35, -36, -38,
	-37, 208, 14, 488, -16, -19, -17, -20, -18, -25,
	-26, -24, -21, -23, -123, -22, 232, 231, 37, 295,
	296, 297, 343, 230, 209, 13, 30, 41, 321, -132,
	67, 210, -134, 10, 553, -6, -3, -2, -109, -113,
	-117, -120, -121, -118, -119, -4, -97, 98, 222, 544,
	-260, 335, 545, 547, 546, 70, 78, -254, -256, 339,
	345, 542, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 458, 529,
	530, 531, 532, 319, 320, 485, 249, 273, 369, 276,
	283, 140, 159, 153, 181, 173, 148, 253, 288, 254,
	77, 143, 441, 88, 420, 395, 146, 268, 270, 272,
	275, 255, 169, 164, 267, 251, 162, 256, 39, 257,
	186, 258, 259, 490, 416, 318, 422, 280, 393, 163,
	417, 271, 419, 188, 192, 433, 157, 158, 424, 435,
	185, 229, 42, 487, 241, 436, 190, 184, 180, 444,
	284, 282, 183, 156, 179, 252, 50, 194, 193, 195,
	389, 390, 391, 392, 260, 261, 333, 432, 176, 165,
	323, 149, 22, 439, 236, 421, 346, 262, 277, 285,
	189, 191, 243, 248, 489, 397, 247, 281, 437, 161,
	240, 269, 235, 440, 150, 348, 263, 144, 274, 434,
	443, 49, 361, 155, 147, 226, 141, 245, 250, 11,
	264, 265, 266, 287, 286, 278, 177, 242, 182, 167,
	154, 178, 142, 244, 442, 362, 540, 321, 378, 175,
	172, 246, 219, 438, 423, 145, 382, 363, 170, 289,
	536, 537, 538, 334, 317, 290, 291, 168, 233, 414,
	415, 292, 294, 388, 310, 364, 396, 370, 365, 201,
	298, 426, 187, 539, 299, 300, 301, 418, 302, 303,
	304, -336, -334, -260, 542, 345, 339, 321, -173, -260,
	552, -140, 38, -184, -260, -140, -69, -14, -13, -132,
	-133, -184, 216, -268, 23, 393, -77, 394, 212, 67,
	-260, -9, -8, -95, -67, -130, -266, -260, 295, 295,
	-266, 216, -260, 247, 377, -385, 222, -340, -313, 248,
	-339, -315, -342, -316, 31, 208, 210, 209, 244, 14,
	343, 218, 12, 10, 344, 230, 24, 25, 27, 13,
	345, 347, 28, 348, 351, 352, 353, 41, 356, 357,
	237, 70, 78, 73, 255, -172, -260, -291, -285, 95,
	238, -287, -280, -281, -283, -426, -420, -279, 67, 122,
	123, 130, 96, -282, -369, 35, 98, 495, 456, -239,
	-240, -241, -242, -243, -260, -421, -419, 73, 79, 82,
	85, 86, 84, 83, 166, 81, 74, 134, 135, -133,
	70, -441, 503, -255, 524, 529, 530, 531, 532, 523,
	46, -391, -399, 215, -397, 133, 171, 233, 167, 12,
	128, 388, 168, 500, 520, 458, 504, 527, 497, 498,
	492, 493, 494, 496, 505, 507, 519, -400, 515, 525,
	526, 513, 528, 72, 71, 518, 517, 506, 501, 502,
	508, 491, 499, 509, 510, 516, 521, 522, 327, 88,
	328, 329, 448, 322, 330, 222, 393, 55, 331, 332,
	333, 334, 335, 455, 336, 56, 337, 326, 237, 378,
	338, 170, 187, 460, 459, 461, 452, 449, 447, 450,
	451, 453, 454, 511, 512, 514, -103, -104, 534, -149,
	-150, -232, 19, 6, 7, 8, 9, -479, 395, 489,
	145, 142, -327, 145, 94, 150, 149, -327, 298, 243,
	340, 219, 319, 378, 302, 247, -307, -305, -387, 292,
	288, 217, 227, 226, 89, 448, 215, 354, -457, -458,
	205, 206, 207, -448, 481, -447, -260, 329, 26, 216,
	340, 426, 427, 428, 429, 430, 431, -53, -401, -384,
	423, 422, -272, 415, 421, 413, 425, 416, 320, 304,
	303, 208, 482, -251, 364, 396, 243, 445, 446, 341,
	397, 433, 434, 417, 88, 174, 171, 219, 216, 319,
	448, 378, 302, -457, 247, 377, 40, -333, 388, -332,
	-334, 433, 434, 444, 71, 72, 432, -251, 88, 414,
	414, -150, -232, -149, -131, -133, -98, -446, 217, 319,
	378, 247, 218, 216, 219, 448, 295, 340, 243, 302,
	-386, -454, 31, -392, 202, 203, 204, 32, 33, -1,
	102, 553, -285, -285, -6, 554, -6, -285, -260, -260,
	137, -190, -194, -191, -193, -192, -196, -195, 171, 172,
	133, 175, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 30, 187, 233, 167, 168, 169, 170, 188,
	153, 173, 486, 196, 154, 197, 155, 198, 156, 199,
	157, 158, 200, 159, 162, 163, 164, 161, 136, 67,
	136, 73, -156, 239, -184, 136, -156, -150, -149, -150,
	-184, -244, -260, 395, 105, -77, -77, 394, -449, -450,
	-451, -453, 212, 394, 393, 136, 15, -266, -266, 65,
	-184, -315, 247, -340, -313, 35, 64, 137, 220, 137,
	64, 67, 341, 319, 378, 342, 448, 216, 354, 219,
	247, 355, 319, 378, 216, 219, 448, 247, 319, 216,
	219, 378, 247, 355, 413, 414, 219, 26, 346, 349,
	350, 414, -405, 444, 137, 94, 91, 92, 93, -285,
	112, -298, 105, 106, 107, 108, 109, 110, 111, 119,
	118, 129, 122, 123, 124, 125, 126, 127, 128, 120,
	121, 115, 95, 113, 117, 114, 97, -133, -285, -291,
	46, -283, -283, -283, -283, -369, -289, -285, 67, 67,
	136, 73, -285, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, -398, 67, 67, -295, -296,
	67, 67, -279, -244, 67, 73, 73, 67, 67, 67,
	73, -296, -296, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, -150, 137, 67, -105, 38, -152, 21, -134, -133,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 79,
	437, 488, 148, 149, 150, -171, -260, -173, -164, -260,
	-303, 222, -303, -303, -303, -303, 218, -303, 216, 216,
	216, -303, -459, 152, 137, -448, -155, 67, -271, 113,
	117, 23, 245, 245, 282, -487, -488, 15, 115, -269,
	-488, -269, -269, -271, -489, 218, 424, 42, 246, 245,
	-151, -152, -151, 418, 414, -356, 419, 420, -273, -488,
	-272, -271, -271, -272, -271, -271, -271, 216, 219, 448,
	302, -487, 245, -487, 30, 30, -385, -184, -385, 482,
	-252, -260, -385, -385, -460, 221, -315, 247, 247, 137,
	105, 23, -335, 105, 116, -334, -334, -334, -335, -335,
	-205, 40, -259, 133, -260, 73, -205, 40, -483, -482,
	-184, -151, -134, -133, 68, 68, 68, -385, -385, -385,
	-385, -385, -385, -385, -385, -266, -164, -173, 222, -385,
	-135, -136, 124, -285, -260, -135, -3, -111, -110, 99,
	100, 102, 545, 335, 544, 548, 542, -334, 40, -380,
	362, 361, -374, -376, 67, -375, 67, -375, -375, -375,
	67, 67, -377, 67, -377, -377, -374, -378, 67, -378,
	-379, 67, -378, -260, -290, -291, -260, 38, -394, 46,
	-130, 67, 30, 67, -260, -395, 46, -130, 67, 30,
	-151, -105, -152, 136, 79, 73, -77, 68, 137, -452,
	85, 86, -455, 185, 177, -260, -91, 73, -7, -8,
	-9, -10, -39, -67, -130, -422, -420, 67, 31, 387,
	64, 15, -341, 216, 448, 340, 243, 219, 319, -339,
	-322, -319, -317, -259, -315, -318, -317, -344, -244, 414,
	-106, 399, 294, -285, -285, -285, -285, -285, 84, 95,
	317, 85, 86, -280, -299, 31, 290, 291, -281, -281,
	-281, -281, -281, -281, -281, -281, -281, -281, -281, -281,
	-288, -297, -369, 67, 115, 113, 117, 114, 97, -283,
	-283, -281, -281, 68, 137, -445, -444, 99, -285, -285,
	-260, -442, -443, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 331, 326, 332, 330, 322, 338,
	333, 334, 170, 479, 480, 473, 474, 475, 476, 477,
	478, -290, -290, -285, -442, -290, -238, 32, 31, -291,
	-291, -291, 68, -285, -456, 315, 314, 316, -153, -260,
	-290, 68, 68, 68, 79, -291, -291, -290, -281, -290,
	-443, -238, -238, -291, -291, -238, -238, -238, -238, 124,
	-238, -238, -238, -238, -238, -238, -238, -238, 68, -151,
	-104, -403, -402, -285, 40, 535, -105, -285, -148, -147,
	-285, -480, 73, 438, 439, 146, 149, 148, 34, 67,
	67, 136, -184, 95, -462, -260, -323, -320, -317, -260,
	-313, -260, -260, -303, -303, -303, -184, -460, -447, 34,
	-154, -260, -228, 16, -283, -283, -317, 247, -487, -271,
	-253, -252, -273, -268, -273, -273, -228, -488, -271, -271,
	-273, -269, -228, -260, 414, -228, -228, -356, -270, -260,
	-270, -303, -252, -253, -253, -184, -220, -221, 213, 210,
	209, -225, 359, 249, -304, 253, 77, 254, 395, 255,
	218, 257, 258, 259, 229, 260, 261, 262, 388, 263,
	264, 265, 266, 342, 6, 305, 40, -462, -462, 30,
	-323, -260, -143, -138, -142, -139, -144, -231, -233, -141,
	67, -184, -133, -260, 31, 387, -338, 387, 31, -313,
	-332, -328, 73, 388, -318, -337, 64, 133, -402, -335,
	-335, -335, -337, -337, 132, 137, -484, 437, 438, 205,
	-105, -186, -184, -462, -322, -313, -260, -186, -186, -260,
	67, 35, -260, -227, 137, -226, 15, -261, -260, 34,
	73, 136, -227, -112, -110, 101, -285, -6, 544, -285,
	-6, -6, -285, -6, -285, -383, 363, 79, 79, -246,
	73, -246, 79, 79, 79, 68, 73, -326, 64, -396,
	-292, -440, 534, -158, 68, -153, -438, -439, -153, -157,
	-260, -396, -158, 68, -438, -105, -105, -260, 23, -77,
	-450, 136, 137, -154, -341, -321, -318, -343, 124, -260,
	-329, 137, 488, 555, 71, 220, -472, -471, 379, 68,
	137, -406, 221, 455, 73, 556, 201, 84, 317, 85,
	86, -369, -291, -288, -283, -283, -281, -281, -286, 234,
	-286, 94, -285, -284, -444, 101, -285, 34, 137, 65,
	136, 68, 68, 15, 15, 68, -285, 68, 68, 68,
	68, 15, 15, -285, 68, 136, 68, 68, 68, 68,
	65, 68, 137, 68, 137, -291, -285, 68, 68, -285,
	-285, -285, -291, 68, -285, -285, -285, -285, -285, -285,
	-285, -285, -351, 409, 137, 68, 73, 137, 22, 137,
	-145, 36, 37, 147, 150, 150, 149, -172, -174, -175,
	-176, -177, -178, 115, 138, 139, -165, -166, -167, -168,
	-190, -244, 172, 175, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 233, 167, 168, 169, 170,
	188, 153, 173, 154, 155, 156, 157, 158, 159, 162,
	163, 164, 161, -260, -155, 35, -465, 366, -473, 137,
	40, -471, 448, -306, 65, -128, 15, -184, -184, -184,
	-197, 34, 15, -137, -185, -260, 67, 68, 137, -285,
	-314, 65, -260, -253, -228, -184, -260, -228, -228, -271,
	-273, -273, -269, 136, -252, -155, 137, -181, -187, -182,
	-244, -276, -183, 225, 223, 227, -435, 89, 228, 279,
	90, 218, -222, 218, 90, 224, 228, 223, -223, 218,
	-257, 105, -257, -251, 132, -257, -257, -257, -257, 256,
	256, -257, -257, -257, -257, -257, -257, -257, -257, -257,
	-257, -257, -257, -257, -257, 67, -466, 366, 30, 325,
	-473, -129, 319, 30, -234, -235, -236, -237, 53, 57,
	59, 54, 55, 56, 60, 30, 137, -258, -262, 34,
	-260, 73, -258, -133, -138, -143, -258, 67, 220, 67,
	105, -337, -337, -337, 40, -259, -482, 444, 438, 137,
	64, -165, -173, -228, -136, -138, -260, 73, -260, 124,
	-228, 102, -6, 100, -116, -115, -114, 103, 542, 548,
	102, 102, 102, 68, 68, 68, 137, 68, 68, 68,
	137, 68, 137, -409, 419, 39, 137, 67, 68, 137,
	46, 137, 105, 68, 137, 68, 46, 136, 395, -260,
	-420, 68, -343, 137, 220, 136, 136, -319, 345, -259,
	-321, 20, 488, -244, 38, -250, -249, 73, 556, 68,
	-286, -286, 94, -283, -280, 68, 102, -285, 100, -188,
	-190, 361, 362, -189, -195, 133, 171, 233, 170, 169,
	167, 361, 362, -205, -260, -285, -285, 68, -285, -285,
	15, -260, -205, -281, -285, -150, 68, -350, -351, -350,
	68, 68, 68, 68, -350, 68, 68, 68, 68, 68,
	68, 68, 68, 67, -402, -409, -285, -285, -147, -146,
	43, 150, 353, 68, 137, -244, 68, 137, -190, 34,
	-468, 421, 368, -257, -278, -277, 321, 41, -389, 388,
	374, 375, -320, 247, -260, 64, 309, 310, 311, 312,
	-301, -302, -300, -304, -462, 67, 67, 67, -370, 299,
	-190, -184, -137, -260, 15, 137, -461, 136, -1, -260,
	-313, -271, -228, -488, -228, -271, -271, -273, -260, 34,
	-221, -190, -183, -260, 90, -434, -435, -303, -434, 90,
	67, -260, -260, -260, 90, 90, -260, 79, 79, -257,
	-257, 79, 73, 73, 73, -257, -257, 79, 73, -262,
	79, 79, 79, 79, 40, 73, -210, 40, 267, 271,
	268, 269, 270, 79, 40, 79, 40, 79, 40, -260,
	67, -436, -437, 73, -468, -257, 325, 105, -278, -127,
	77, 31, -159, 213, 210, -462, -325, -324, -244, -142,
	-142, -142, -142, 53, 53, 53, 58, 53, 58, 53,
	-236, -325, -144, -155, -262, 68, -478, -477, -476, -474,
	61, 221, 62, -290, -321, -274, 73, -328, -184, -184,
	68, -230, 17, 136, -230, 98, -6, -112, -114, -285,
	-6, -285, 544, 335, 545, 73, 79, 79, -417, 405,
	400, 402, 90, -292, -404, -403, 46, -130, -153, -396,
	-439, -402, -260, 46, -130, -396, -260, 79, 15, -318,
	-313, 124, 124, -260, 346, -329, 73, 367, 73, 216,
	557, 137, 105, -250, -280, -285, 68, -198, 158, 157,
	-198, 68, -375, -375, -374, -377, -374, -198, -198, 68,
	68, 23, 68, 68, 68, -285, 68, 68, 137, -393,
	457, -350, -350, -350, -350, -350, -350, -350, -350, -350,
	-350, -350, -350, -350, -294, -293, 239, -417, 44, 45,
	73, 73, -176, -190, 214, -167, 40, -130, -469, 77,
	-463, 73, -260, -470, 77, 369, 135, 323, 40, 370,
	371, 385, 318, 79, 79, 376, -464, -260, -160, 319,
	-184, -300, -251, 132, 258, 302, -179, -180, -181, -179,
	-179, -371, 301, 20, 79, 123, -156, 65, 136, -138,
	-185, -260, 124, 68, -228, -260, -228, -228, -271, -130,
	-202, -201, -199, 84, 95, 40, 359, -200, 77, 132,
	272, 250, 273, -219, -275, 64, 365, 223, 89, 90,
	347, -276, -430, -432, -260, -432, -260, -430, -430, -303,
	-285, -260, -224, 307, 308, -205, -205, 73, 73, -206,
	250, -186, 68, 137, 105, -469, -463, 105, 73, -470,
	73, 137, -159, -159, -228, 137, 105, -162, -161, 64,
	65, -163, 64, -161, 53, 53, -228, -476, -475, 23,
	-435, -435, -435, 68, 68, -229, 18, 20, 124, -229,
	102, 100, 102, 102, -260, 68, 68, -381, 536, -413,
	-415, 400, 20, 20, 13, 68, -396, -396, -313, -329,
	388, -184, -249, 73, 557, -285, 68, -285, 68, 73,
	-150, 20, -381, -169, -190, -279, 73, -467, 379, 73,
	73, 79, 40, 79, 135, 372, -390, -127, -159, 67,
	-257, -257, -257, -260, 68, 137, 68, 68, -372, 238,
	79, 123, 79, 123, 79, -258, -138, -260, -228, -461,
	136, -228, -228, -199, 84, -281, 73, -207, -259, 133,
	-208, 40, 271, 267, -209, 40, 251, 252, -211, 67,
	279, 13, 90, 90, -184, 67, 65, 289, 67, 67,
	67, -432, 68, 251, 252, 68, -437, 73, -467, 73,
	-462, -150, -324, -402, -285, 67, -285, 67, 53, 19,
	17, -285, -291, 222, -6, 545, 335, -212, 537, 73,
	20, 73, -411, 73, -325, -108, -407, -356, 68, 68,
	-350, -353, -352, -355, 406, 281, 412, -291, -212, 487,
	20, 488, 322, 40, 79, 40, 373, -308, -310, -244,
	67, -205, -207, 73, -203, -204, -225, -181, -107, -106,
	-203, -373, 141, 79, 123, 79, 79, -228, -228, 79,
	67, -397, -309, 67, -308, -433, 309, 310, 311, 313,
	312, -433, -308, -308, -308, 67, -331, -330, 280, 95,
	-151, -154, -431, -260, 223, 20, 20, -260, -260, -247,
	538, 79, 73, 402, -382, 539, -416, 405, -410, -408,
	400, 401, 402, 403, 68, -354, 97, 372, 376, -285,
	-247, -170, -260, 73, 367, 73, 322, 68, 137, -374,
	-285, -345, 239, 137, -225, -108, -345, -388, 149, 300,
	488, 79, 123, 79, -150, 68, -285, -295, -214, -213,
	484, -308, 68, 68, 68, 68, -308, 280, 68, 68,
	137, 67, 20, 73, -418, 221, -414, -415, 404, -408,
	20, 402, 20, 20, -354, 534, 410, 411, 410, 411,
	34, 388, -311, -310, -145, 68, -346, 288, 20, -225,
	-346, 300, 79, 123, 79, -151, 68, -218, -216, -217,
	64, 417, 277, 278, 68, -311, -311, -311, -311, 68,
	-260, 223, -248, -260, -411, -425, 67, 79, -413, -412,
	-414, 20, -411, 20, -411, -411, 94, 73, -312, 229,
	77, 488, 307, 308, -145, 20, -347, 281, 282, -348,
	-360, 284, 79, -330, -217, 64, -216, 64, 14, 13,
	-219, 68, 137, -429, 30, 68, -424, -423, -245, -419,
	-260, 405, 406, 73, -411, -354, -257, 73, 306, -244,
	67, -358, 285, 67, -356, 67, -356, 90, 310, -215,
	274, 275, 30, 149, -215, -260, -428, -427, -426, 68,
	137, 136, 79, -260, -344, -349, 286, 79, -281, 67,
	-281, 67, -357, 283, 67, 84, 40, 276, 137, 105,
	-423, -260, 68, -362, 67, 20, 68, -344, 68, -344,
	67, 105, -281, -427, 40, -285, 136, -363, -361, 239,
	-348, 68, 68, 68, -344, 79, 68, -260, 68, 137,
	-260, -359, 287, 68, -361, -364, 46, 79, -368, -365,
	67, -225, 241, 115, -368, -225, -367, -366, 286, 242,
	67, 68, 137, -260, 238, 67, -291, -366, -365, -291,
	68, 68,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 245,
	246, 247, 744, 745, 746, 747, 748, 0, 0, 0,
	0, 518, 519, 0, 490, 0, 0, 0, 0, 0,
	0, 388, 389, 390, 391, 392, 393, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 335, 336, 337, 338,
	339, 340, 0, 270, 266, 206, 207, 208, 209, 277,
	278, 365, 0, 0, 0, 0, 601, -2, 53, 259,
	0, 250, 250, 749, 750, 751, 752, 753, 754, 755,
	756, -2, 531, 0, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 324, 325, 326, 320,
	321, 323, 322, -2, 0, 531, 0, 0, 0, 621,
	0, 0, 636, 658, 23, 0, 7, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 0, 0, 19,
	0, 19, 0, 0, 0, 1040, 1041, 1042, 1043, -2,
	1507, 1486, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 0, 243, 241, 1486, 1507, 1567, 1600, 0, 761,
	0, 579, 0, 584, 1004, 579, 271, 520, 521, 621,
	621, 488, 0, 306, 0, 1499, 310, 0, 0, 0,
	485, 301, 302, 303, 304, 305, 0, 743, 0, 0,
	297, 0, 265, 1558, 0, 0, 0, 0, 0, 0,
	150, 832, 152, 834, 156, 163, 0, 0, 168, 169,
	172, 173, 174, 175, 176, 0, 180, 0, 182, 185,
	0, 187, 188, 0, 191, 192, 193, 0, 203, 204,
	205, 835, 836, 837, -2, 81, 759, 1424, 1319, 0,
	1326, 1327, 1338, 1349, 1113, 1114, 1115, 1116, 0, 0,
	0, 0, 0, 1123, 1124, 0, 1138, 1658, 0, 1130,
	1131, 1132, 1133, 1134, 90, 102, 103, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 0, 1292, 1100,
	1040, 0, 1666, 0, 1686, 1691, 1692, 1693, 1694, 1685,
	0, 0, 1277, 0, 1267, 0, 0, -2, -2, 0,
	0, 1626, -2, 1663, 1682, 1690, 1667, 1689, 1660, 1661,
	1655, 1656, 1657, 1659, 1668, 1670, 1681, 0, 1677, 1687,
	1688, 0, 0, 104, 105, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1283, -2,
	1285, 1286, 1288, 1289, 1290, 1291, -2, 1294, 1295, 1296,
	-2, -2, 1299, 1300, 1301, 1302, 1303, 1304, 1307, -2,
	1309, -2, -2, 1279, 1280, 1281, 1282, 1271, 1272, 1273,
	1274, 1275, 1276, -2, -2, -2, 621, 694, 0, -2,
	0, 0, 0, 641, 644, 647, 650, 0, 54, 55,
	260, 261, 249, 251, 0, 255, 0, 248, 0, 0,
	0, 864, 864, 864, 864, 864, 0, 864, 0, 0,
	0, 864, 839, 840, 841, 862, 863, 910, 536, 532,
	533, 534, 535, 609, 0, 611, 614, 466, 414, 0,
	0, 0, 426, 420, 0, 0, 0, 466, 0, 0,
	616, 616, 0, 469, 476, 466, 466, -2, 466, 466,
	466, 0, 432, 433, 434, 420, 0, 420, 438, 439,
	440, 451, 452, 477, 1448, 0, 0, 365, 0, 365,
	0, 365, 365, 538, 1558, 0, 0, 217, 1626, 222,
	0, 1506, 1572, 1521, 0, 0, 1539, 0, -2, 0,
	287, 616, 0, 622, 0, 621, 0, 0, 365, 365,
	365, 365, 365, 365, 365, 365, 0, 0, 0, 365,
	0, 0, 659, 660, 655, 656, 657, 661, 662, 5,
	6, 19, 0, 0, 0, 0, 0, 0, 60, 59,
	0, 1425, 1443, 1380, 1381, 1382, 1430, 1384, 1434, 1434,
	1434, 1434, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 0, 0, 1423, 1403, 1432, 1432, 1432, 1430, 1427,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1437, 1437, 1440, 1437, 0, 1317,
	0, 0, 0, 0, 583, 0, 0, 616, -2, 0,
	489, 307, 1044, 0, 0, 311, 312, 0, 0, 327,
	0, 330, 315, 316, 317, 0, 0, 299, 300, 0,
	0, 267, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 160, 157, 164, 167, 177, 184, 0, 196,
	198, 201, 158, 165, 170, 171, 178, 199, 159, 161,
	162, 166, 200, 202, 179, 183, 197, 181, 186, 189,
	190, 195, 0, 131, 0, 0, 0, 0, 0, 1325,
	0, 0, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1319, 0,
	0, 1119, 1120, 1121, 1122, 1125, 0, 1139, 0, 0,
	0, 1378, 0, 1317, 1317, 0, 1317, 1313, 0, 0,
	0, 0, 0, 0, 1317, 1253, 0, 0, 1255, 1268,
	0, 0, 1257, 1258, 0, 1261, 1262, 1317, 0, 1317,
	1266, 1249, 1250, 0, 1313, 1313, 0, 0, 1313, 1313,
	1313, 1313, 1313, 1313, 1313, 1313, 1313, 1313, 1313, 1313,
	0, 616, 0, 0, 604, 0, 585, 0, 638, 640,
	0, 642, 643, 645, 646, 648, 649, 651, 652, 56,
	0, 0, 253, 0, 258, 0, 758, 0, 0, 774,
	0, 0, 0, 0, 0, 0, 0, 0, 864, 864,
	864, 0, 538, 537, 0, 610, 0, 0, 667, 0,
	0, 0, 420, 466, 425, 422, 421, 472, 473, 469,
	0, 469, 469, 667, 0, 445, 446, 447, 466, 466,
	453, 617, 454, 455, 469, 0, 474, 475, 667, 0,
	0, 667, 667, 0, 463, 464, 465, 0, 0, 864,
	0, 422, 436, 422, 1449, 1450, 0, 873, 0, 0,
	0, 484, 0, 0, 0, 539, 210, 0, 0, 0,
	0, 0, 0, 239, 240, 0, 0, 0, 0, 0,
	230, 233, 998, 999, 829, 830, 234, 235, 279, 280,
	0, 585, 637, 639, 633, 634, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 0, 516, 0, 0,
	675, 669, 671, 738, 90, 675, 8, 77, 74, 0,
	19, 0, 0, 19, 19, 0, 19, 244, 0, 1446,
	1444, 1445, 1383, 1431, 0, 1408, 0, 1409, 1410, 1411,
	0, 0, 1404, 0, 1405, 1406, 1407, 1399, 0, 1400,
	1401, 0, 1402, 242, 0, 1318, 762, 0, 558, 571,
	553, 0, 560, 0, 1005, 540, 571, 542, 0, 560,
	585, 607, 585, 0, 308, 0, 313, 0, 0, 329,
	331, 332, 333, 318, 319, 486, 295, 296, 288, 289,
	290, 291, 292, 293, 294, 298, 100, 0, 268, 269,
	0, 0, 0, 144, 145, 146, 147, 148, 149, 151,
	135, 506, 508, 821, 833, 0, 824, 0, 154, 194,
	127, 0, 0, 1320, 1321, 1322, 1323, 1324, 1328, 0,
	1330, 1332, 1334, 1336, 0, 1354, -2, -2, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1339, 1352, 1353, 0, 0, 0, 0, 0, 0, 1350,
	1350, 1345, 0, 1117, 0, 1136, 1140, 0, 0, 0,
	91, 1312, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 0, 0, 1319, 0, 0, 0, 1314, 1315, 0,
	0, 0, 1208, 0, 0, 1214, 1215, 1216, 0, 566,
	0, 1278, 1254, 1269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 693,
	695, 0, 575, 577, 578, 0, 605, 618, 623, 624,
	627, 52, 57, 262, 263, 0, 0, 257, 0, -2,
	776, 0, 614, 0, 0, 788, 363, 815, 0, 0,
	831, 854, 860, 0, 0, 0, 888, 0, 612, 0,
	0, 707, 413, 0, 467, 468, 417, 1558, 422, 667,
	427, 423, 428, 471, 429, 430, 431, 0, 667, 667,
	466, 469, 456, 470, 469, 459, 460, 0, 478, 482,
	479, 0, 481, 435, 437, 614, 342, 343, 0, 0,
	0, 348, 1451, 1451, 0, 1451, 1451, 1451, 1451, 0,
	0, 1451, 1451, 1451, 1451, 1451, 1451, 1451, 1451, 1451,
	1451, 1451, 1451, 1451, 1451, 0, 874, 360, 0, 0,
	363, 805, 680, 0, 681, 682, 678, 709, 733, 733,
	0, 733, 713, 1004, 211, 212, 0, 214, 215, 216,
	223, 218, 220, 0, 0, 224, 236, 237, 238, 0,
	0, 0, 228, 229, 0, 0, 282, 283, 285, 0,
	603, 503, 1002, 504, 505, 509, 0, 511, 512, 513,
	776, 0, 810, 667, 0, 676, 0, 672, 739, 0,
	741, 0, 667, 0, 75, 19, 0, 68, 65, 0,
	0, 0, 0, 0, 1426, 1379, 1447, 0, 0, 0,
	1428, 0, 0, 0, 0, 58, 587, 547, 0, 552,
	568, 0, 572, 0, 0, 564, 557, 561, 0, 0,
	581, 541, 0, 0, 546, 606, 608, 1045, 0, 314,
	328, 0, 0, 0, 0, 138, 818, 0, 139, 143,
	133, 0, 0, 0, 823, 0, 820, 825, 0, 153,
	0, 0, 128, 129, 879, 884, 0, 1329, 1331, 1333,
	1335, 1337, 0, 1340, 1350, 1350, 1346, 0, 1341, 0,
	1343, 0, 1320, 0, 1141, 0, 0, 0, 0, 0,
	0, 1198, 1199, 0, 0, 1203, 0, 1205, 1206, 1207,
	1209, 0, 0, 0, 1213, 0, 1252, 1270, 1256, 1259,
	0, 1263, 0, 1265, 0, 621, 0, 1175, 1175, 0,
	0, 0, 0, 1175, 0, 0, 0, 0, 0, 0,
	0, 0, 1135, 0, 0, 696, 587, 0, 0, 0,
	630, 628, 629, 264, 252, 254, 0, 0, 0, 764,
	765, 767, 0, 770, 771, 772, 0, 777, 778, 780,
	781, 0, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1491, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 775, 0, 865, 795, 1451, 367, 0,
	0, 817, 0, 0, 0, -2, 0, 0, 0, 0,
	890, 0, 0, 0, 525, 529, 23, 615, 0, 668,
	415, 0, 416, 466, 424, 667, 1004, 448, 449, 667,
	466, 466, 469, 0, 480, 0, 873, 345, 1010, 1011,
	0, 0, 1013, 1070, 0, 1022, 864, 1022, 0, 0,
	1024, 1025, 346, 0, 0, 0, 0, 0, 347, 0,
	0, 1452, 0, 1451, 1451, 0, 0, 0, 0, 1451,
	1451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 795, 1451, 0, 0,
	367, 802, 0, 0, 0, 0, 0, 0, 700, 0,
	0, 699, 0, 0, 0, 0, 0, 614, 734, 0,
	736, 737, 711, -2, 0, 680, 716, 1317, 0, 0,
	0, 225, 226, 227, 231, 232, 281, 284, 286, 0,
	0, 0, 517, 665, 670, 677, 740, 742, 91, 673,
	665, 0, 78, 19, 77, 69, 70, 0, 19, 0,
	0, 0, 0, 1436, 1435, 1421, 0, 1422, 1433, 1438,
	0, 1441, 0, 591, 0, 0, 571, 573, 0, 0,
	571, 0, 0, 580, 0, 0, 571, 0, 0, 487,
	101, 334, 0, 0, 0, 0, 0, 507, 0, 822,
	135, 0, 0, 155, 0, 0, 882, 0, 884, 1316,
	1342, 1344, 0, 1351, 1347, 1118, 1126, 1137, 0, 0,
	1143, 1155, 1155, 0, 1146, 1434, 1434, 1149, 1430, 1432,
	1430, 1155, 1155, 0, 92, 0, 0, 1204, 0, 0,
	0, 567, 0, 0, 0, 1173, 1175, 1180, 1176, 1181,
	1175, 1175, 1175, 1175, 1186, 1175, 1175, 1175, 1175, 1175,
	1175, 1175, 1175, 1171, 576, 591, 619, 620, 625, 626,
	0, 256, 0, 0, 769, 0, 0, 0, 782, 0,
	798, 796, 797, 0, 812, 368, 369, 370, 371, 0,
	0, 0, 816, 0, 548, 0, 855, 856, 857, 858,
	859, -2, 868, 0, 0, 1006, 1006, 1006, 898, 0,
	889, 579, 0, -2, 0, 0, 527, 0, 0, 708,
	418, 667, 441, 0, 457, 667, 667, 466, 483, 0,
	344, -2, 1012, 1071, 1034, 1034, 1023, 1034, 1034, 864,
	0, 349, 350, 351, 0, 353, 0, 957, 958, 0,
	0, 961, 962, 963, 964, 0, 0, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 992, 993, 994,
	995, 996, 997, 977, 978, 979, 980, 981, 982, 989,
	0, 0, 986, 0, 798, 0, 0, 0, 812, 804,
	0, 806, 807, 0, 0, 550, 667, 274, 0, 703,
	697, 0, 686, 701, 702, 689, 0, 691, 0, 687,
	688, 667, 679, 710, 735, 712, 715, 717, 718, 724,
	0, 0, 0, 0, 213, 0, 387, 219, 1003, 510,
	515, 663, 0, 0, 663, 73, 76, 0, 71, 0,
	0, 0, 0, 63, 61, 1429, 0, 0, 593, 115,
	0, 0, 0, 569, 0, 574, 571, 556, 565, 555,
	562, 563, 582, 571, 545, 544, 1046, 309, 0, 819,
	135, 140, 141, 142, 136, 134, 826, 0, 828, 0,
	880, 884, 0, 0, 1348, 1142, 1127, 1144, 1156, 1157,
	1145, 1128, 1147, 1148, 1150, 1151, 1152, 1153, 1154, 1129,
	1200, 0, 1202, 1210, 1211, 0, 1260, 1264, 0, 0,
	0, 1179, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 621, 1172, 0, 593, 631, 632,
	757, 760, 766, 768, 0, 779, 0, 786, 787, 0,
	0, 790, 791, 800, 0, 0, 0, 373, 374, 0,
	0, 0, 386, 382, 383, 384, 364, 811, 802, 0,
	0, 869, 1451, 1451, 1451, 0, 0, 1007, 1008, 0,
	0, 901, 0, 0, 892, 0, 733, 0, 0, 667,
	526, 529, 530, 613, 419, 667, 461, 458, 667, 341,
	1036, -2, 1049, 1051, 0, 0, 1054, 1055, 0, 0,
	0, 0, 1092, 1061, 0, 0, 1065, 0, 1366, 1367,
	0, 1069, 0, 1026, 1035, 0, 1035, 0, 0, 1034,
	0, 352, 354, 355, 356, 959, 960, 965, 966, 983,
	0, 0, 985, 0, 0, 357, 0, 0, 358, 362,
	803, 0, 808, 809, 621, 0, 0, 683, 704, 0,
	0, 684, 0, 685, 690, 692, 273, 719, 0, 0,
	721, 722, 723, 714, 221, 653, 0, 0, 674, 654,
	0, 19, 0, 0, 66, 1439, 1442, 595, 0, 592,
	116, 0, 0, 0, 0, 570, 554, 543, 137, 132,
	827, 118, 883, 885, 881, 0, 1212, 0, 1175, 1174,
	1168, 0, 595, 0, 785, 783, 799, 789, 0, 813,
	814, 0, 375, 376, 0, 379, 385, 801, 549, 0,
	0, 0, 0, 861, -2, 0, 0, -2, 904, 0,
	899, 0, 891, 0, 894, 667, 667, -2, 523, 528,
	0, 442, 462, 1050, 1052, 1053, 1056, 1057, 1000, 1001,
	1058, 1097, 1098, 1099, 1059, 1094, 1095, 1096, 1060, 0,
	0, 0, 1364, 1365, 1090, 0, 0, 0, 0, 0,
	0, 0, 1020, 990, 991, 984, 987, 988, 361, 359,
	551, 616, 275, 276, 705, 0, 698, 728, 725, 0,
	0, 664, 666, 67, 72, 0, 0, 597, 0, 594,
	0, 588, 590, 126, 559, 88, 109, 0, 1201, 1251,
	1178, 0, 1169, 0, 1163, 1164, 1165, 1170, 597, 0,
	0, 0, 372, 377, 0, 380, 381, 0, 850, 1430,
	0, 870, 871, 872, 911, -2, 954, 1009, 876, 118,
	911, 895, 0, 902, 0, 900, 893, 621, 524, 0,
	0, 1267, 1085, 0, 0, 1027, 1029, 1030, 1031, 1032,
	1033, 1028, 0, 0, 0, 0, 1019, 1021, 1066, 0,
	272, 0, 0, 729, 731, 726, 727, 62, 64, 79,
	0, 596, 117, 0, 80, 0, 106, 0, 119, 120,
	0, 0, 0, 0, 1177, 1166, 0, 0, 0, 0,
	586, 0, 784, 792, 0, 794, 378, 843, 0, 627,
	0, 913, 0, 873, 956, 878, 913, 887, 0, 897,
	0, 906, 0, 903, 616, 1093, 0, 1064, 1073, 1086,
	0, 0, 843, 843, 843, 843, 0, 1067, 706, 720,
	0, 0, 0, 89, 93, 0, 115, 112, 0, 121,
	0, 0, 0, 0, 0, 1158, 1159, 1161, 1160, 1162,
	0, 793, 842, 851, 852, 627, 875, 0, 950, 955,
	877, 896, 905, 0, 908, 522, 1062, 1072, 1074, 1075,
	0, 1087, 1088, 1089, 1091, 1014, 1015, 1016, 1017, 0,
	730, 732, 0, 599, 589, 82, 0, 0, 110, 111,
	113, 0, 122, 0, 124, 125, 0, 773, 844, 1451,
	0, 0, 848, 849, 853, 0, 938, 0, 0, 944,
	0, 951, 907, 1063, 1076, 0, 1077, 0, 0, 0,
	1018, 598, 0, 886, 0, 94, 0, 96, 98, 99,
	1037, 107, 108, 114, 123, 1167, 0, 846, 0, 914,
	0, 916, 0, 0, 0, 0, 0, 948, 0, 1078,
	1080, 1081, 0, 0, 1079, 600, 83, 84, 0, 95,
	0, 0, 845, 847, 0, 918, 0, 939, 0, 0,
	0, 0, 0, 0, 0, 1082, 1084, 1083, 0, 0,
	97, 1038, 915, 912, 0, 950, 940, 0, 942, 0,
	0, 0, 0, 85, 86, 87, 0, 0, 920, 0,
	936, 941, 943, 945, 0, 949, 947, 1039, 919, 0,
	932, 917, 0, 946, 921, -2, 0, 937, 922, -2,
	0, 930, 0, 0, 923, 931, 0, 926, 0, 0,
	0, 925, 0, -2, 933, 0, 0, 927, -2, 0,
	935, 934,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 127, 119, 3,
	67, 68, 124, 122, 137, 123, 136, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 554, 553,
	106, 105, 107, 3, 555, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 556, 118, 557, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 104,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	120, 121, 126, 128, 131, 132, 133, 134, 135, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:707
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:714
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:720
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:728
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:734
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:738
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:753
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:757
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:763
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:768
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:772
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:804
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:811
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:831
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:837
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:844
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:852
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:858
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:867
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:877
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:885
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:893
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:901
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:911
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:919
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:929
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:936
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:945
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:959
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:965
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:969
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:975
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:984
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:994
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:998
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1004
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1017
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1023
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1044
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1057
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1068
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1074
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1078
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1084
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1091
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1099
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1103
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1117
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1121
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1125
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1138
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1144
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1153
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1164
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1168
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1174
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1178
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1184
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1188
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1194
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1218
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1237
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1241
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1245
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1254
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1261
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1269
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1276
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1281
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1288
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1297
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1321
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1325
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1331
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1337
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1355
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1372
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1395
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1399
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1403
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1408
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1412
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1418
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1431
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1442
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1455
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1459
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1469
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1482
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1495
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1501
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1507
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1514
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1522
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1531
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1535
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1539
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1543
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1547
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1551
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1558
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1562
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1568
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1575
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1584
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1588
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1594
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1598
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1602
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1606
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1614
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1618
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1622
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1626
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1630
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1634
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1654
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1658
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1662
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1666
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1670
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1674
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1678
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1682
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1686
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1690
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1694
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1698
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1702
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1706
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1710
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1714
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1718
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1722
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1726
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1730
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1734
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1738
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1742
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1746
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1750
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1754
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1758
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1762
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1766
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1770
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1774
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1778
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1782
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1786
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1802
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1809
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1816
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1825
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1855
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1859
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1869
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1886
		{
			yyVAL.str = yyDollar[3].str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1892
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1896
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1902
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1919
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1927
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1935
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1958
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1981
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2010
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2017
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2026
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2030
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2034
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2040
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2044
		{
			yyVAL.str = yyDollar[1].str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2050
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2054
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2060
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2064
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2075
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2081
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2086
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2090
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2094
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2098
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2102
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2106
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2110
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2114
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2118
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2124
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2128
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2132
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2136
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2141
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2152
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2159
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2165
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2172
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2179
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2189
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2196
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2207
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2218
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2222
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2238
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2244
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2248
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2254
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2260
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2264
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2272
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2296
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2306
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2316
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2332
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2338
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2350
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2358
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2374
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2384
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2425
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2429
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2435
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2441
		{
			yyVAL.str = yyDollar[1].str
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2446
		{
			yyVAL.str = "true"
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2447
		{
			yyVAL.str = "false"
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2448
		{
			yyVAL.str = yyDollar[1].str
		}
	case 334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2453
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2488
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2492
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2498
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2505
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2509
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2513
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2519
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2526
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2533
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2540
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2547
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2555
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2564
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2568
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2575
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2587
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2595
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2604
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2610
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2621
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2636
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2641
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2645
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2650
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2654
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2670
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2674
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2678
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2682
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2686
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2690
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2694
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2698
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2702
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2706
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2710
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2714
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2718
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2722
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2726
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2730
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2736
		{
			yyVAL.item = nil
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2741
		{
			yyVAL.item = nil
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2777
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2782
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2786
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2790
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2799
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2803
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2809
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2814
		{
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2818
		{
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2823
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2832
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2838
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2844
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2850
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2856
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2862
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2868
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2877
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2881
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2885
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2897
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2901
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2905
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2909
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2915
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2922
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2932
		{
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2934
		{
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2943
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2953
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2962
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2966
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2970
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2982
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2988
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2994
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3003
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3013
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3025
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3029
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3035
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3047
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3061
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3067
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3074
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3079
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3083
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3087
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3092
		{
			yyVAL.str = ""
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3096
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3102
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3115
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3119
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3125
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3130
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3134
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3138
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3144
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3148
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3154
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3160
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3164
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3168
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3174
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3178
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3201
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3210
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3219
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3228
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3232
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3247
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3256
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3266
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3272
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3278
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3284
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3290
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3299
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3317
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3322
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3358
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3369
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3373
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3379
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3384
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3391
		{
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3393
		{
		}
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3396
		{
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3405
		{
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3409
		{
		}
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3414
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3423
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3430
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3436
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3444
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3451
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3458
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3478
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3491
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3497
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3501
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3507
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3514
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3520
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3528
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3535
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3542
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3561
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3565
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3570
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3574
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3578
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3584
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3593
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3597
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3603
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3607
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3613
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3617
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3623
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3628
		{
		}
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3639
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3643
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3650
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3655
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3659
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3665
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3669
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3675
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3679
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3688
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3701
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3708
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3715
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3733
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3752
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3758
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3765
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3769
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3782
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3786
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3791
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3795
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3802
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3807
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3814
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3820
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3824
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3828
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3832
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3836
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3840
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3846
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3853
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3862
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3866
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3872
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3884
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3893
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3899
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3903
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3907
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3916
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3922
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3928
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3932
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3938
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3943
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3947
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3951
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3956
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3960
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3964
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3970
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3974
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3978
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3992
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3996
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4006
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4016
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4026
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4038
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4046
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4054
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4063
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4071
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4079
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4087
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4095
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4103
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4111
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4119
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4127
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4137
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4148
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4162
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4166
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4170
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4175
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4179
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4183
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4196
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4205
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4214
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4220
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4224
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4230
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4234
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4239
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4243
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4248
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4256
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4262
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4270
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4278
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4288
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4294
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4303
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4312
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4321
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4331
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4335
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4345
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4349
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4353
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4357
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4363
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4373
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4377
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4383
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4393
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4399
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4405
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4409
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4413
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4419
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4423
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4429
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4433
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4439
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4443
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4449
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4453
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4463
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4476
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4482
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4488
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4501
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4512
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4519
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4523
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4529
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4539
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4543
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4547
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4552
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4556
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4560
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4564
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4573
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4577
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4581
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4585
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4590
		{
			yyVAL.str = ""
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4594
		{
			yyVAL.str = yyDollar[1].str
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4598
		{
			yyVAL.str = yyDollar[2].str
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4604
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4610
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4614
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4618
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4622
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4626
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4632
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 757:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4665
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4675
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4681
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 760:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4687
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4697
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4702
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4708
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4715
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4719
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4725
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4731
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4736
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4740
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4744
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4748
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4755
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4767
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4772
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4778
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4785
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4789
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4795
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4801
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4805
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4809
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4815
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4821
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4827
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4838
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4850
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4856
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4866
		{
			yyVAL.str = yyDollar[1].str
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4870
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4876
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4883
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4889
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4897
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4903
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4910
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4918
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4924
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4933
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4945
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4956
		{
			yyVAL.str = ""
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4960
		{
			yyVAL.str = yyDollar[2].str
		}
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4966
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4980
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4986
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4992
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4998
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5007
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5016
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5021
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5035
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5141
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5145
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5151
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5161
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5165
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5171
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5181
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5185
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5189
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5198
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5204
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5211
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5217
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5226
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5233
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5242
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5246
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5252
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5266
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5270
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5274
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5279
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5283
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5287
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5291
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5297
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5316
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5320
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5342
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5346
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5350
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5354
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5358
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5364
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5368
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5374
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5379
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5384
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5388
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5392
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5396
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5400
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5406
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5417
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5421
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5431
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5435
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5440
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5444
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5450
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5454
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5460
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5464
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5468
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5473
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5477
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5483
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5495
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5504
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5517
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5524
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5534
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5542
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5553
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5557
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5562
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5566
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5573
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5597
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5611
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5619
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5626
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5633
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5640
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5647
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5651
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5655
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5659
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5663
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5670
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5677
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5681
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5688
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5699
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5706
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5713
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5720
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5727
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5731
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5740
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5750
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5754
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5761
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5768
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5772
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5785
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5791
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5795
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5801
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5810
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5824
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5830
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5834
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5840
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5847
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5856
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5860
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5869
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5874
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5878
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5883
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5887
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5897
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5901
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5912
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5920
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5928
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5936
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5947
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5956
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5966
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5976
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5980
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5985
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5989
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5998
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6004
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6008
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6012
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6018
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6022
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6026
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6030
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6034
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6038
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6043
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6047
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6051
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6055
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6059
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6063
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6067
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6071
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6075
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6079
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6083
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6087
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6091
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6095
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6099
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6103
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6107
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6111
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6115
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6119
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6123
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6127
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6131
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6138
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6142
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6148
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6153
		{
			yyVAL.str = ""
		}
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6157
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6161
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6167
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6171
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6175
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6179
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6183
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6187
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6201
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6205
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6214
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6219
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6225
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6232
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6236
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6242
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6246
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6252
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6264
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6270
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6279
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6288
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6311
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6320
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6330
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6338
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6344
		{
			yyVAL.str = ""
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6348
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6358
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6364
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6370
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6384
		{
			yyVAL.str = ""
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6388
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6394
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6400
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6404
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6408
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6414
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6418
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6422
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6426
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6432
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6436
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6440
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6449
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6455
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6459
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6465
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6469
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6473
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6477
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6481
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6485
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6490
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6494
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6498
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6502
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6506
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6510
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6514
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6518
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6531
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6537
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6541
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6546
		{
			yyVAL.str = ""
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6550
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6556
		{
			yyVAL.str = ""
		}
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6560
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6566
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6578
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6585
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6592
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6599
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6606
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6615
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6621
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6627
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6631
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6635
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6639
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6643
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6648
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6655
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6659
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6663
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6668
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6672
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6677
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6681
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6697
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6703
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6707
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6711
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6715
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6719
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6723
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6727
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6731
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6735
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6739
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6743
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6747
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6751
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6757
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6761
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6765
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6769
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6773
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6777
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6781
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6785
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6789
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6793
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6797
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6801
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6806
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6814
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6819
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6823
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6832
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6836
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6840
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6844
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6848
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6854
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6867
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6872
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6876
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6882
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6886
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6892
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6901
		{
			t := yyVAL.columnTypeUnion()
			if strings.ToLower(t.InternalType.FamilyString) == "binary" {
				t.InternalType.Scale = -1
			}
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6907
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6924
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6941
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6954
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6967
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6979
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6993
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7008
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7023
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7040
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7055
		{
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7061
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7065
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7069
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7075
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7079
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7087
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7091
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7095
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7101
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7108
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7117
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7121
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7128
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7137
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7142
		{
			yyVAL.str = ","
		}
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7146
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7158
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7168
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7179
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7189
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7198
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7207
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7217
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7227
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7237
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7247
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7257
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7267
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7277
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7287
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7297
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7307
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7317
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7327
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7344
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7352
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7360
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7368
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7376
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7386
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7394
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7403
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7411
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7419
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7427
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7435
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7446
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7456
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7468
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7479
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7501
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7537
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7549
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7561
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7572
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7580
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7587
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7594
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7606
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7614
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7624
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7634
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7642
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7653
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7662
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7671
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7679
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7689
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7697
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7711
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7721
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7740
		{
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7742
		{
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7783
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7794
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7798
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7802
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7808
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7817
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7823
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7827
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7834
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7838
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7842
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7850
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7854
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7858
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7862
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7868
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7872
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7876
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7880
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7884
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7888
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7892
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7896
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7900
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7904
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7912
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7916
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7920
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7924
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7928
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7932
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7936
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7940
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7944
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7948
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7958
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7964
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7968
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7975
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7979
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7983
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7989
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7993
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7997
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8001
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8005
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8009
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8013
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8019
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8023
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8027
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8031
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8037
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8041
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8054
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8059
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8063
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8067
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8071
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8075
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8079
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8093
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8097
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8104
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8115
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8120
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8126
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8138
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8150
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8162
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8175
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8188
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8201
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8214
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8227
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8240
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8253
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8266
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8279
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8292
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8307
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8334
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8376
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8424
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8441
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8453
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8473
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8493
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8513
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8529
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8542
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8555
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8568
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8581
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8593
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8605
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8617
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8629
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8641
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8653
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8665
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8677
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8689
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8702
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8715
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8730
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8738
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8747
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8757
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8780
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8785
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8791
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8798
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8802
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8807
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8811
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8817
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8823
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8830
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8837
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8846
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8853
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8860
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8869
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8873
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8877
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8883
		{
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8885
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8895
		{
			yyVAL.str = ""
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8899
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

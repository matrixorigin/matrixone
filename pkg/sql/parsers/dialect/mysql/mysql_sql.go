// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const SQL_SMALL_RESULT = 57521
const SQL_BIG_RESULT = 57522
const SQL_BUFFER_RESULT = 57523
const LOW_PRIORITY = 57524
const HIGH_PRIORITY = 57525
const DELAYED = 57526
const CREATE = 57527
const ALTER = 57528
const DROP = 57529
const RENAME = 57530
const ANALYZE = 57531
const ADD = 57532
const SCHEMA = 57533
const TABLE = 57534
const INDEX = 57535
const VIEW = 57536
const TO = 57537
const IGNORE = 57538
const IF = 57539
const PRIMARY = 57540
const COLUMN = 57541
const CONSTRAINT = 57542
const SPATIAL = 57543
const FULLTEXT = 57544
const FOREIGN = 57545
const KEY_BLOCK_SIZE = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const MAXVALUE = 57555
const PARTITION = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const STATUS = 57562
const VARIABLES = 57563
const ROLE = 57564
const PROXY = 57565
const AVG_ROW_LENGTH = 57566
const STORAGE = 57567
const DISK = 57568
const MEMORY = 57569
const CHECKSUM = 57570
const COMPRESSION = 57571
const DATA = 57572
const DIRECTORY = 57573
const DELAY_KEY_WRITE = 57574
const ENCRYPTION = 57575
const ENGINE = 57576
const MAX_ROWS = 57577
const MIN_ROWS = 57578
const PACK_KEYS = 57579
const ROW_FORMAT = 57580
const STATS_AUTO_RECALC = 57581
const STATS_PERSISTENT = 57582
const STATS_SAMPLE_PAGES = 57583
const DYNAMIC = 57584
const COMPRESSED = 57585
const REDUNDANT = 57586
const COMPACT = 57587
const FIXED = 57588
const COLUMN_FORMAT = 57589
const AUTO_RANDOM = 57590
const RESTRICT = 57591
const CASCADE = 57592
const ACTION = 57593
const PARTIAL = 57594
const SIMPLE = 57595
const CHECK = 57596
const ENFORCED = 57597
const RANGE = 57598
const LIST = 57599
const ALGORITHM = 57600
const LINEAR = 57601
const PARTITIONS = 57602
const SUBPARTITION = 57603
const SUBPARTITIONS = 57604
const TYPE = 57605
const ANY = 57606
const SOME = 57607
const EXTERNAL = 57608
const LOCALFILE = 57609
const URL = 57610
const PREPARE = 57611
const DEALLOCATE = 57612
const PROPERTIES = 57613
const PARSER = 57614
const VISIBLE = 57615
const INVISIBLE = 57616
const BTREE = 57617
const HASH = 57618
const RTREE = 57619
const BSI = 57620
const ZONEMAP = 57621
const LEADING = 57622
const BOTH = 57623
const TRAILING = 57624
const UNKNOWN = 57625
const EXPIRE = 57626
const ACCOUNT = 57627
const UNLOCK = 57628
const DAY = 57629
const NEVER = 57630
const PUMP = 57631
const SECOND = 57632
const ASCII = 57633
const COALESCE = 57634
const COLLATION = 57635
const HOUR = 57636
const MICROSECOND = 57637
const MINUTE = 57638
const MONTH = 57639
const QUARTER = 57640
const REPEAT = 57641
const REVERSE = 57642
const ROW_COUNT = 57643
const WEEK = 57644
const REVOKE = 57645
const FUNCTION = 57646
const PRIVILEGES = 57647
const TABLESPACE = 57648
const EXECUTE = 57649
const SUPER = 57650
const GRANT = 57651
const OPTION = 57652
const REFERENCES = 57653
const REPLICATION = 57654
const SLAVE = 57655
const CLIENT = 57656
const USAGE = 57657
const RELOAD = 57658
const FILE = 57659
const TEMPORARY = 57660
const ROUTINE = 57661
const EVENT = 57662
const SHUTDOWN = 57663
const NULLX = 57664
const AUTO_INCREMENT = 57665
const APPROXNUM = 57666
const SIGNED = 57667
const UNSIGNED = 57668
const ZEROFILL = 57669
const ENGINES = 57670
const ADMIN_NAME = 57671
const RANDOM = 57672
const SUSPEND = 57673
const ATTRIBUTE = 57674
const HISTORY = 57675
const REUSE = 57676
const CURRENT = 57677
const OPTIONAL = 57678
const FAILED_LOGIN_ATTEMPTS = 57679
const PASSWORD_LOCK_TIME = 57680
const UNBOUNDED = 57681
const SECONDARY = 57682
const USER = 57683
const IDENTIFIED = 57684
const CIPHER = 57685
const ISSUER = 57686
const X509 = 57687
const SUBJECT = 57688
const SAN = 57689
const REQUIRE = 57690
const SSL = 57691
const NONE = 57692
const PASSWORD = 57693
const MAX_QUERIES_PER_HOUR = 57694
const MAX_UPDATES_PER_HOUR = 57695
const MAX_CONNECTIONS_PER_HOUR = 57696
const MAX_USER_CONNECTIONS = 57697
const FORMAT = 57698
const VERBOSE = 57699
const CONNECTION = 57700
const TRIGGERS = 57701
const PROFILES = 57702
const LOAD = 57703
const INFILE = 57704
const TERMINATED = 57705
const OPTIONALLY = 57706
const ENCLOSED = 57707
const ESCAPED = 57708
const STARTING = 57709
const LINES = 57710
const ROWS = 57711
const IMPORT = 57712
const DATABASES = 57713
const TABLES = 57714
const EXTENDED = 57715
const FULL = 57716
const PROCESSLIST = 57717
const FIELDS = 57718
const COLUMNS = 57719
const OPEN = 57720
const ERRORS = 57721
const WARNINGS = 57722
const INDEXES = 57723
const SCHEMAS = 57724
const NAMES = 57725
const GLOBAL = 57726
const SESSION = 57727
const ISOLATION = 57728
const LEVEL = 57729
const READ = 57730
const WRITE = 57731
const ONLY = 57732
const REPEATABLE = 57733
const COMMITTED = 57734
const UNCOMMITTED = 57735
const SERIALIZABLE = 57736
const LOCAL = 57737
const EVENTS = 57738
const PLUGINS = 57739
const CURRENT_TIMESTAMP = 57740
const DATABASE = 57741
const CURRENT_TIME = 57742
const LOCALTIME = 57743
const LOCALTIMESTAMP = 57744
const UTC_DATE = 57745
const UTC_TIME = 57746
const UTC_TIMESTAMP = 57747
const REPLACE = 57748
const CONVERT = 57749
const SEPARATOR = 57750
const CURRENT_DATE = 57751
const CURRENT_USER = 57752
const CURRENT_ROLE = 57753
const SECOND_MICROSECOND = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const HOUR_MICROSECOND = 57757
const HOUR_SECOND = 57758
const HOUR_MINUTE = 57759
const DAY_MICROSECOND = 57760
const DAY_SECOND = 57761
const DAY_MINUTE = 57762
const DAY_HOUR = 57763
const YEAR_MONTH = 57764
const SQL_TSI_HOUR = 57765
const SQL_TSI_DAY = 57766
const SQL_TSI_WEEK = 57767
const SQL_TSI_MONTH = 57768
const SQL_TSI_QUARTER = 57769
const SQL_TSI_YEAR = 57770
const SQL_TSI_SECOND = 57771
const SQL_TSI_MINUTE = 57772
const RECURSIVE = 57773
const CONFIG = 57774
const DRAINER = 57775
const MATCH = 57776
const AGAINST = 57777
const BOOLEAN = 57778
const LANGUAGE = 57779
const WITH = 57780
const QUERY = 57781
const EXPANSION = 57782
const ADDDATE = 57783
const BIT_AND = 57784
const BIT_OR = 57785
const BIT_XOR = 57786
const CAST = 57787
const COUNT = 57788
const APPROX_COUNT_DISTINCT = 57789
const APPROX_PERCENTILE = 57790
const CURDATE = 57791
const CURTIME = 57792
const DATE_ADD = 57793
const DATE_SUB = 57794
const EXTRACT = 57795
const GROUP_CONCAT = 57796
const MAX = 57797
const MID = 57798
const MIN = 57799
const NOW = 57800
const POSITION = 57801
const SESSION_USER = 57802
const STD = 57803
const STDDEV = 57804
const STDDEV_POP = 57805
const STDDEV_SAMP = 57806
const SUBDATE = 57807
const SUBSTR = 57808
const SUBSTRING = 57809
const SUM = 57810
const SYSDATE = 57811
const SYSTEM_USER = 57812
const TRANSLATE = 57813
const TRIM = 57814
const VARIANCE = 57815
const VAR_POP = 57816
const VAR_SAMP = 57817
const AVG = 57818
const JSON_EXTRACT = 57819
const UNNEST = 57820
const ROW = 57821
const OUTFILE = 57822
const HEADER = 57823
const MAX_FILE_SIZE = 57824
const FORCE_QUOTE = 57825
const UNUSED = 57826
const BINDINGS = 57827

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"UNNEST",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7711

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 71,
	21, 476,
	-2, 457,
	-1, 76,
	210, 647,
	-2, 689,
	-1, 93,
	42, 323,
	210, 323,
	237, 330,
	238, 330,
	398, 323,
	-2, 351,
	-1, 391,
	21, 477,
	-2, 440,
	-1, 432,
	393, 351,
	394, 351,
	-2, 324,
	-1, 475,
	103, 1379,
	114, 1379,
	133, 1379,
	-2, 1187,
	-1, 505,
	21, 477,
	-2, 440,
	-1, 693,
	67, 1536,
	-2, 1544,
	-1, 701,
	67, 1537,
	-2, 1552,
	-1, 703,
	67, 1533,
	-2, 1554,
	-1, 704,
	67, 1534,
	-2, 1555,
	-1, 709,
	67, 1535,
	-2, 1561,
	-1, 710,
	67, 1538,
	-2, 1562,
	-1, 711,
	67, 1539,
	-2, 1563,
	-1, 712,
	67, 946,
	-2, 1564,
	-1, 713,
	67, 947,
	-2, 1565,
	-1, 714,
	67, 948,
	-2, 1566,
	-1, 716,
	67, 1540,
	-2, 1568,
	-1, 717,
	67, 967,
	-2, 1569,
	-1, 718,
	67, 966,
	-2, 1570,
	-1, 721,
	67, 1541,
	-2, 1573,
	-1, 722,
	67, 1542,
	-2, 1574,
	-1, 728,
	67, 1029,
	-2, 1379,
	-1, 729,
	67, 1038,
	-2, 1404,
	-1, 730,
	67, 1042,
	-2, 1443,
	-1, 731,
	67, 1050,
	-2, 1496,
	-1, 732,
	67, 1053,
	-2, 1505,
	-1, 733,
	67, 1055,
	-2, 1515,
	-1, 734,
	67, 1043,
	-2, 1520,
	-1, 735,
	67, 1051,
	-2, 1524,
	-1, 736,
	67, 1032,
	-2, 1525,
	-1, 904,
	1, 673,
	68, 673,
	503, 673,
	-2, 680,
	-1, 1052,
	21, 476,
	-2, 874,
	-1, 1100,
	133, 1197,
	-2, 1195,
	-1, 1102,
	133, 591,
	-2, 1192,
	-1, 1103,
	133, 592,
	-2, 1193,
	-1, 1320,
	1, 674,
	68, 674,
	503, 674,
	-2, 680,
	-1, 1410,
	67, 1098,
	-2, 1522,
	-1, 1411,
	67, 1099,
	-2, 1523,
	-1, 1585,
	65, 395,
	134, 395,
	-2, 780,
	-1, 1922,
	87, 680,
	129, 680,
	166, 680,
	169, 680,
	-2, 728,
	-1, 1924,
	271, 842,
	-2, 822,
	-1, 1954,
	65, 395,
	134, 395,
	-2, 781,
	-1, 2034,
	87, 680,
	129, 680,
	166, 680,
	169, 680,
	-2, 729,
	-1, 2062,
	271, 842,
	-2, 823,
	-1, 2475,
	68, 701,
	134, 701,
	-2, 680,
	-1, 2479,
	68, 701,
	134, 701,
	-2, 680,
	-1, 2493,
	68, 705,
	134, 705,
	-2, 680,
	-1, 2498,
	68, 706,
	134, 706,
	-2, 680,
}

const yyPrivate = 57344

const yyLast = 23494

var yyAct = [...]int{
	884, 1413, 2481, 2487, 2479, 2478, 2456, 872, 2324, 740,
	2100, 2445, 2405, 2074, 2389, 1370, 2390, 2296, 759, 2292,
	2363, 2272, 2021, 2030, 1304, 2098, 980, 661, 1071, 615,
	1916, 110, 945, 2280, 2099, 1414, 110, 335, 341, 113,
	341, 778, 2127, 1366, 392, 738, 868, 1977, 339, 25,
	2083, 1561, 2019, 1947, 2116, 1738, 2063, 473, 345, 913,
	1588, 771, 71, 109, 875, 909, 2082, 1734, 326, 1090,
	1970, 603, 692, 1980, 592, 1988, 967, 1992, 1603, 420,
	938, 1743, 1928, 1739, 1082, 1365, 351, 1791, 1280, 1824,
	1806, 1816, 1670, 1327, 739, 325, 1753, 1276, 71, 1749,
	500, 474, 1732, 1091, 1092, 880, 1631, 70, 1097, 110,
	1100, 1498, 1083, 1484, 607, 749, 941, 960, 1602, 939,
	1275, 1352, 3, 478, 1326, 1563, 1321, 1558, 897, 889,
	866, 919, 481, 33, 338, 16, 336, 6, 337, 5,
	2038, 502, 1277, 741, 1415, 1412, 476, 684, 871, 964,
	1427, 435, 920, 921, 328, 25, 1313, 983, 1310, 931,
	1287, 1291, 516, 857, 480, 574, 1368, 1072, 71, 33,
	932, 986, 893, 865, 653, 465, 331, 1393, 927, 896,
	419, 640, 630, 389, 353, 13, 7, 4, 2023, 2371,
	106, 616, 1294, 1284, 354, 391, 2134, 2026, 1915, 885,
	1085, 390, 2091, 105, 340, 642, 101, 683, 535, 105,
	479, 30, 95, 77, 104, 2352, 105, 1540, 30, 95,
	77, 105, 105, 30, 95, 77, 2342, 105, 590, 499,
	105, 1532, 466, 1281, 1292, 569, 948, 949, 417, 33,
	324, 16, 822, 6, 343, 5, 812, 612, 811, 813,
	814, 2378, 815, 816, 858, 643, 862, 627, 819, 628,
	102, 409, 1560, 1696, 1549, 550, 102, 551, 621, 622,
	2376, 445, 842, 102, 923, 428, 2393, 2394, 102, 821,
	861, 562, 348, 874, 102, 567, 568, 102, 2367, 2368,
	543, 2125, 545, 1725, 2228, 553, 486, 485, 487, 619,
	2225, 2137, 618, 621, 622, 2128, 2129, 2130, 2131, 1559,
	1726, 1917, 1727, 876, 519, 1527, 510, 2295, 1910, 961,
	546, 1936, 1288, 957, 449, 2096, 484, 953, 110, 509,
	1943, 1311, 853, 1764, 2113, 1754, 1762, 1976, 1975, 508,
	2080, 350, 1715, 341, 555, 110, 556, 863, 538, 2196,
	1537, 1717, 564, 565, 566, 1758, 2199, 2093, 548, 2351,
	507, 2380, 384, 342, 2403, 385, 860, 2488, 2190, 504,
	506, 2472, 2412, 489, 558, 2322, 2323, 526, 2326, 2326,
	450, 411, 2375, 539, 2419, 1759, 1760, 2349, 2183, 482,
	2152, 408, 407, 2294, 71, 71, 480, 393, 2392, 519,
	1761, 76, 2466, 103, 541, 2281, 2282, 2283, 2285, 2284,
	2151, 387, 402, 386, 549, 610, 544, 547, 2332, 420,
	2174, 93, 2382, 2383, 1566, 1402, 1405, 1406, 2354, 2355,
	2489, 1572, 593, 571, 649, 530, 1403, 554, 2483, 540,
	648, 528, 479, 2223, 1293, 483, 634, 1756, 1671, 505,
	606, 620, 614, 613, 2457, 579, 405, 617, 560, 561,
	2140, 859, 501, 349, 629, 33, 33, 591, 474, 474,
	474, 559, 552, 665, 665, 400, 594, 595, 641, 597,
	2448, 521, 520, 1574, 1575, 1576, 1577, 1533, 1722, 1380,
	341, 687, 687, 557, 1285, 535, 596, 542, 1747, 477,
	891, 667, 1720, 488, 824, 600, 670, 598, 406, 512,
	513, 344, 456, 2495, 1634, 1636, 1637, 1972, 1971, 663,
	663, 1624, 2178, 840, 1377, 951, 686, 686, 1376, 1282,
	646, 401, 1379, 1378, 825, 665, 952, 665, 509, 672,
	950, 527, 452, 325, 2501, 624, 625, 524, 873, 820,
	644, 645, 1282, 453, 1282, 2257, 2431, 1522, 2482, 455,
	2022, 2500, 71, 458, 457, 2381, 521, 520, 414, 415,
	416, 2293, 849, 534, 855, 914, 71, 621, 622, 1640,
	514, 535, 1516, 1923, 576, 71, 1297, 1532, 1690, 410,
	631, 1362, 631, 2353, 2449, 665, 621, 622, 904, 1496,
	1389, 878, 420, 611, 391, 910, 665, 1755, 578, 882,
	1640, 1765, 900, 887, 962, 1586, 890, 1744, 1747, 1748,
	1757, 989, 635, 2197, 1295, 1718, 1283, 1640, 928, 928,
	1281, 933, 1303, 1315, 870, 877, 933, 2092, 2097, 2176,
	665, 110, 1404, 2175, 533, 659, 660, 33, 78, 926,
	881, 474, 1541, 665, 78, 647, 33, 602, 848, 956,
	845, 78, 844, 954, 1272, 892, 78, 78, 854, 851,
	974, 826, 78, 905, 570, 78, 2494, 665, 914, 979,
	110, 110, 899, 867, 924, 925, 1565, 995, 324, 882,
	529, 831, 671, 1362, 682, 882, 882, 984, 827, 817,
	656, 657, 658, 915, 930, 623, 2491, 982, 626, 847,
	846, 843, 981, 981, 2473, 446, 2446, 2447, 864, 446,
	2468, 985, 477, 1361, 999, 2179, 2180, 1314, 917, 918,
	869, 1635, 638, 639, 1587, 1774, 958, 1569, 1570, 1748,
	987, 601, 886, 898, 1741, 1054, 1302, 2460, 1742, 1745,
	963, 1568, 1686, 856, 911, 1685, 879, 1580, 532, 631,
	650, 2146, 916, 2459, 978, 675, 676, 677, 678, 679,
	680, 681, 2492, 922, 2258, 2260, 2261, 2262, 2259, 1053,
	1290, 906, 907, 835, 836, 1942, 2469, 1061, 898, 912,
	2407, 492, 497, 498, 448, 934, 1788, 447, 448, 2400,
	1746, 447, 2454, 2395, 1587, 1052, 1063, 929, 2384, 971,
	972, 935, 394, 1290, 992, 993, 994, 991, 937, 936,
	2372, 1640, 1089, 1089, 1094, 867, 959, 1362, 533, 1290,
	2347, 968, 969, 970, 1679, 2346, 975, 2409, 2345, 1055,
	1056, 1057, 1058, 2344, 1102, 2334, 2219, 1957, 976, 2217,
	977, 479, 1775, 910, 2215, 2213, 2408, 665, 1301, 992,
	993, 994, 991, 1723, 2206, 2201, 1059, 2200, 1103, 2201,
	1017, 839, 535, 2110, 1389, 2108, 1879, 1076, 1581, 838,
	1633, 1589, 1535, 480, 1534, 1037, 2373, 1526, 1025, 1521,
	1345, 1299, 110, 110, 71, 1865, 2201, 1803, 1801, 1271,
	1648, 2201, 1647, 1678, 2201, 1530, 110, 1328, 973, 2201,
	1524, 2335, 2220, 933, 1518, 2218, 1330, 110, 1273, 1890,
	2214, 2214, 1714, 335, 1307, 1309, 1088, 572, 1298, 479,
	1331, 933, 1289, 2201, 832, 998, 984, 828, 1324, 2111,
	1885, 2109, 1640, 669, 522, 1864, 1861, 1862, 1863, 1336,
	1335, 1895, 503, 1894, 1893, 1891, 494, 495, 496, 1279,
	985, 1640, 1779, 1804, 1802, 33, 1640, 632, 1640, 608,
	1712, 1331, 654, 1713, 665, 2443, 1525, 1337, 1338, 2432,
	1519, 1562, 1331, 655, 1371, 1371, 1417, 1416, 687, 1079,
	110, 1095, 1499, 1096, 1297, 1101, 1270, 1398, 1290, 1400,
	833, 2336, 2231, 1789, 882, 882, 882, 1721, 1374, 1269,
	1278, 1523, 1382, 511, 1892, 652, 454, 1423, 1424, 1274,
	1387, 1491, 1499, 686, 1676, 994, 991, 1394, 1395, 1396,
	1397, 1372, 1556, 895, 1339, 991, 1489, 1490, 1488, 1296,
	412, 992, 993, 994, 991, 1322, 1390, 2186, 2185, 1420,
	1887, 1932, 1927, 1341, 1373, 1343, 1692, 2209, 2210, 1316,
	2169, 1076, 1462, 2207, 2208, 633, 1750, 1089, 2477, 2462,
	1392, 2429, 1334, 2413, 1407, 1509, 1422, 1342, 1340, 922,
	1344, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1348, 1347, 651, 1493, 1494, 1500, 2465,
	1503, 1346, 2268, 1036, 1035, 1045, 1046, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1037, 1839, 459, 2266, 1383, 1384,
	1385, 1511, 1688, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1037, 1896, 1897, 1425, 2310, 1391, 451, 2402, 2307, 1514,
	2267, 1874, 2464, 1426, 1492, 2306, 2463, 1040, 1041, 1042,
	1043, 1044, 1037, 2274, 2252, 2265, 1418, 1419, 2251, 1421,
	1048, 2250, 1051, 1486, 2247, 1457, 1458, 1459, 1460, 1461,
	2241, 1505, 1467, 1468, 1469, 1470, 391, 1049, 1050, 1047,
	1471, 1036, 1035, 1045, 1046, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1037, 1036, 1035, 1045, 1046, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1037, 992, 993, 994, 991, 2238,
	1502, 1504, 1681, 1506, 1501, 1827, 992, 993, 994, 991,
	1510, 2237, 1512, 1045, 1046, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1037, 1847, 1851, 1853, 1855, 1857, 1858, 1860,
	2135, 1864, 1861, 1862, 1863, 2264, 2121, 1842, 1843, 1844,
	1845, 1825, 1826, 1848, 2120, 1828, 2119, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1840, 1846, 2254,
	2094, 1940, 1528, 2014, 2115, 2386, 1850, 1852, 1854, 1856,
	1859, 2387, 665, 2263, 665, 2114, 665, 992, 993, 994,
	991, 509, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1000,
	1547, 1542, 1939, 992, 993, 994, 991, 2253, 2095, 1941,
	1841, 1305, 1306, 1763, 1708, 665, 829, 1657, 2013, 901,
	902, 903, 384, 2493, 2273, 385, 1585, 2031, 2369, 2330,
	1538, 2329, 1591, 882, 2317, 2305, 2255, 1550, 1551, 890,
	992, 993, 994, 991, 1644, 2248, 1599, 2244, 2470, 2243,
	509, 110, 110, 110, 110, 2242, 2198, 2171, 1583, 2136,
	1604, 2132, 509, 110, 1619, 992, 993, 994, 991, 2117,
	1656, 2029, 1604, 2027, 1546, 1767, 509, 1966, 25, 1555,
	1579, 665, 1965, 894, 1950, 1938, 1623, 1937, 1934, 110,
	110, 71, 992, 993, 994, 991, 1594, 1912, 1903, 1595,
	992, 993, 994, 991, 1752, 1719, 1539, 1371, 1627, 1544,
	1513, 1620, 1536, 2299, 786, 785, 1529, 1531, 2358, 1300,
	1592, 1629, 1630, 1645, 1033, 1032, 1031, 1817, 1818, 830,
	867, 2357, 2337, 1552, 2304, 992, 993, 994, 991, 2303,
	2302, 2301, 2216, 1571, 2212, 2211, 2017, 1578, 2015, 1593,
	1584, 1641, 1590, 2012, 1642, 1643, 1596, 2004, 1597, 1969,
	2440, 1322, 33, 898, 16, 1951, 6, 1922, 5, 1906,
	1605, 1606, 1607, 1608, 1601, 1600, 1598, 1805, 1780, 1618,
	1617, 1687, 1616, 105, 1684, 1683, 95, 77, 1682, 1665,
	1680, 1664, 1649, 1651, 1652, 1653, 1654, 1655, 391, 1659,
	1628, 1625, 1646, 1660, 1661, 1662, 1663, 1036, 1035, 1045,
	1046, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1037, 1639,
	1089, 2221, 1700, 1089, 1638, 1621, 1703, 1508, 1507, 105,
	673, 2490, 1673, 665, 2442, 1677, 1668, 1669, 1849, 2195,
	102, 2436, 1706, 992, 993, 994, 991, 2122, 1689, 1052,
	2420, 2417, 2415, 882, 2000, 1018, 2309, 2290, 509, 882,
	2278, 992, 993, 994, 991, 2275, 1707, 1697, 1737, 992,
	993, 994, 991, 2270, 110, 2232, 992, 993, 994, 991,
	71, 1979, 2193, 509, 1667, 2192, 102, 110, 1328, 1999,
	1778, 2438, 2191, 1737, 881, 479, 2188, 2182, 2167, 604,
	1702, 1989, 1666, 1981, 1486, 1699, 1768, 1993, 1996, 1675,
	1986, 992, 993, 994, 991, 1985, 1963, 1945, 1933, 1487,
	1711, 1691, 102, 1695, 1698, 1582, 1701, 1557, 1716, 1693,
	1710, 1769, 1770, 1771, 1809, 1704, 1998, 1705, 1036, 1035,
	1045, 1046, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1037,
	1902, 1517, 1381, 1781, 1375, 1329, 1782, 1783, 992, 993,
	994, 991, 1787, 1078, 1077, 1075, 1074, 1776, 1073, 1070,
	1069, 1067, 992, 993, 994, 991, 1811, 1799, 2189, 1884,
	665, 1777, 1066, 1065, 1773, 1772, 1866, 665, 1064, 1062,
	1034, 1800, 1030, 1872, 1873, 1796, 1029, 1028, 1786, 1027,
	1785, 992, 993, 994, 991, 1878, 1026, 1898, 1024, 1023,
	1022, 1021, 1886, 1784, 1900, 1877, 1020, 1899, 1019, 1016,
	1015, 110, 1014, 110, 1809, 1876, 663, 992, 993, 994,
	991, 1013, 110, 663, 1901, 1012, 1011, 992, 993, 994,
	991, 1926, 1010, 1009, 852, 1883, 823, 992, 993, 994,
	991, 573, 537, 1911, 1333, 1913, 1792, 1793, 1554, 1318,
	1880, 1875, 525, 2425, 1921, 2423, 1882, 2391, 1889, 1795,
	665, 665, 1573, 1388, 1081, 110, 1954, 536, 1798, 1920,
	1871, 1907, 1904, 992, 993, 994, 991, 1797, 1613, 509,
	1611, 1610, 71, 1614, 1609, 1612, 1908, 1946, 2476, 1604,
	1909, 1323, 992, 993, 994, 991, 395, 396, 397, 398,
	1968, 1520, 1615, 1371, 1358, 1359, 663, 1948, 1930, 394,
	1728, 1729, 1925, 1870, 1929, 882, 1929, 1931, 1962, 1924,
	2016, 1964, 1959, 1515, 1305, 1306, 1955, 1545, 1869, 1956,
	1543, 575, 1731, 1967, 1958, 992, 993, 994, 991, 1868,
	1354, 1357, 1358, 1359, 1355, 1953, 1356, 1360, 2138, 1952,
	992, 993, 994, 991, 1312, 531, 1961, 1960, 674, 1730,
	1364, 992, 993, 994, 991, 1983, 1984, 1036, 1035, 1045,
	1046, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1037, 1973,
	1987, 1867, 2360, 1991, 908, 577, 56, 1417, 1416, 563,
	1982, 32, 31, 587, 588, 637, 1089, 585, 586, 636,
	2001, 583, 584, 992, 993, 994, 991, 581, 582, 1268,
	1990, 605, 2437, 2003, 509, 2035, 1814, 2314, 2084, 2086,
	321, 2084, 2084, 1813, 1737, 322, 323, 1812, 2005, 2312,
	1994, 2007, 1997, 2009, 2235, 2233, 509, 2230, 992, 993,
	994, 991, 2229, 2227, 2002, 992, 993, 994, 991, 992,
	993, 994, 991, 1495, 910, 2006, 2024, 2010, 2011, 2090,
	2008, 395, 396, 397, 398, 2018, 1349, 2028, 1919, 2085,
	2081, 1918, 1808, 580, 394, 992, 993, 994, 991, 2106,
	394, 2060, 1807, 2032, 1632, 914, 1709, 2087, 2088, 1354,
	1357, 1358, 1359, 1355, 1650, 1356, 1360, 2089, 2427, 2426,
	2427, 523, 2104, 2105, 2426, 1956, 2103, 2184, 1905, 1363,
	609, 39, 1, 1286, 1935, 421, 1766, 1751, 599, 2107,
	1881, 413, 1463, 589, 837, 491, 518, 2142, 834, 517,
	515, 2118, 1497, 1428, 772, 1084, 2271, 2359, 2404, 2308,
	2123, 2362, 1036, 1035, 1045, 1046, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1037, 850, 758, 2222, 1724, 2124, 2224,
	2126, 665, 1548, 2020, 1694, 424, 783, 776, 1068, 1080,
	818, 110, 493, 775, 1944, 1567, 446, 399, 2143, 2144,
	2086, 2147, 2148, 2149, 2150, 490, 2145, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 425, 2170, 2187, 2112, 1914, 1974, 1948, 2081, 2168,
	1995, 1978, 2486, 2475, 2172, 1036, 1035, 1045, 1046, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1037, 2203, 2455, 2435,
	2194, 2325, 2471, 2374, 2236, 2418, 2411, 2321, 2202, 2205,
	1672, 2139, 355, 955, 463, 2291, 2204, 356, 1332, 2350,
	2277, 403, 1317, 404, 1320, 448, 2269, 1319, 447, 2226,
	1408, 1001, 1036, 1035, 1045, 1046, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1037, 1485, 1060, 690, 2234, 1674, 509,
	748, 742, 509, 509, 509, 1371, 1564, 2239, 2240, 2249,
	71, 433, 509, 2245, 2246, 2075, 1626, 38, 422, 37,
	36, 990, 1098, 773, 2279, 112, 1099, 2287, 2288, 2289,
	2318, 2133, 2364, 757, 2286, 756, 2276, 2298, 755, 754,
	753, 1353, 1351, 2319, 438, 2300, 2297, 1350, 943, 942,
	665, 665, 988, 2388, 2340, 2341, 2025, 2181, 2256, 2177,
	2173, 2313, 2331, 2315, 2316, 2311, 2034, 2320, 2033, 2061,
	2062, 2068, 1823, 1819, 1821, 1822, 1820, 2327, 2328, 1888,
	1815, 110, 1735, 1736, 1733, 1794, 1790, 1086, 1093, 509,
	888, 1553, 944, 107, 940, 2102, 663, 663, 388, 24,
	12, 509, 11, 841, 10, 15, 23, 2333, 22, 21,
	20, 64, 63, 981, 2343, 2339, 62, 61, 19, 9,
	2366, 2338, 60, 59, 58, 18, 2348, 17, 53, 54,
	49, 441, 48, 47, 2356, 423, 46, 45, 2365, 44,
	43, 52, 51, 50, 42, 41, 40, 75, 2370, 74,
	73, 72, 26, 27, 436, 2377, 2379, 28, 29, 85,
	84, 86, 82, 80, 83, 81, 79, 2385, 34, 8,
	14, 2, 2396, 2397, 2398, 2399, 0, 0, 0, 0,
	2406, 0, 0, 0, 2410, 437, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	445, 0, 0, 0, 429, 427, 426, 0, 431, 0,
	443, 444, 0, 2401, 0, 2424, 2422, 2421, 0, 2366,
	2434, 0, 439, 440, 2428, 0, 509, 0, 509, 2430,
	0, 0, 2414, 2439, 2416, 2441, 873, 2365, 873, 2433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2450,
	0, 2406, 0, 509, 2451, 0, 2458, 0, 434, 0,
	2461, 0, 0, 873, 0, 2467, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2444, 0, 2453, 0,
	0, 0, 0, 0, 0, 0, 2474, 0, 0, 0,
	0, 0, 2485, 0, 0, 2484, 0, 0, 0, 0,
	0, 0, 2496, 0, 0, 0, 2497, 2499, 2498, 1214,
	1256, 2485, 0, 1203, 0, 1161, 1216, 1134, 1150, 1224,
	1151, 1152, 1189, 1113, 1171, 237, 1148, 0, 0, 0,
	0, 0, 0, 1206, 1105, 1137, 1138, 1107, 1144, 1108,
	1135, 1163, 182, 1133, 1174, 207, 1186, 1147, 1168, 1222,
	0, 0, 267, 221, 0, 0, 1166, 1208, 1169, 1194,
	1160, 1190, 1121, 1182, 1217, 1149, 0, 1187, 1218, 0,
	0, 0, 0, 901, 902, 903, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 1185, 1212, 1146, 0,
	167, 1215, 1167, 1188, 0, 0, 1106, 1183, 0, 1111,
	1114, 1223, 1210, 1141, 1142, 0, 0, 0, 0, 0,
	0, 0, 0, 1164, 1170, 1191, 1157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1139, 0, 1179, 0,
	0, 0, 1116, 1112, 0, 1162, 0, 0, 156, 272,
	287, 165, 263, 300, 170, 270, 161, 236, 259, 0,
	1255, 158, 285, 269, 218, 201, 202, 157, 0, 254,
	180, 193, 177, 234, 0, 284, 312, 176, 303, 1115,
	295, 160, 1250, 294, 233, 281, 286, 219, 213, 159,
	283, 217, 212, 205, 184, 0, 197, 245, 211, 246,
	198, 223, 222, 224, 1234, 1235, 1236, 1237, 1238, 1246,
	1247, 0, 1251, 1252, 1253, 1120, 0, 1140, 1192, 0,
	1104, 1201, 1209, 1159, 297, 1211, 1156, 1155, 1241, 0,
	1240, 271, 1242, 1243, 206, 1207, 1136, 1145, 313, 1143,
	257, 239, 1213, 1178, 1254, 255, 209, 282, 247, 288,
	273, 296, 251, 248, 152, 274, 179, 220, 162, 163,
	175, 181, 183, 185, 186, 229, 230, 242, 262, 275,
	276, 277, 178, 171, 256, 172, 195, 173, 153, 264,
	174, 154, 243, 280, 1239, 191, 252, 216, 155, 215,
	244, 279, 278, 304, 310, 311, 315, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	1248, 0, 1249, 309, 189, 150, 292, 0, 235, 0,
	1204, 1109, 1119, 1117, 1153, 1180, 1181, 231, 308, 1196,
	1200, 1197, 1225, 260, 0, 0, 0, 0, 0, 200,
	241, 1198, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 268, 290, 302, 319, 1257,
	1258, 1259, 1260, 0, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 293, 1154, 1127, 1165, 301, 1130, 1128, 1195, 1129,
	1184, 317, 225, 226, 227, 228, 192, 0, 169, 320,
	250, 1175, 1158, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1176, 1132, 314, 188, 194, 0, 196, 168, 240, 190,
	299, 203, 1202, 232, 199, 265, 204, 210, 253, 298,
	238, 258, 166, 289, 266, 214, 0, 0, 1126, 1131,
	1125, 1172, 1173, 1219, 1220, 1221, 1193, 1118, 1205, 1122,
	1124, 1123, 1035, 1045, 1046, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1037, 0, 0, 0, 0, 0, 0, 0,
	0, 1199, 780, 0, 1177, 151, 0, 208, 1226, 249,
	187, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 182,
	0, 0, 207, 0, 0, 0, 774, 0, 0, 267,
	221, 0, 0, 0, 0, 795, 801, 0, 0, 1244,
	1245, 305, 306, 307, 291, 0, 0, 743, 0, 0,
	691, 786, 785, 760, 769, 0, 0, 164, 761, 0,
	768, 762, 766, 765, 763, 764, 0, 728, 0, 0,
	0, 0, 0, 0, 688, 747, 0, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 744,
	745, 0, 0, 0, 0, 781, 0, 746, 0, 0,
	782, 0, 770, 0, 0, 156, 272, 287, 165, 263,
	300, 170, 270, 161, 236, 259, 0, 0, 158, 285,
	269, 218, 201, 202, 157, 0, 254, 180, 193, 177,
	234, 767, 731, 735, 176, 733, 779, 295, 160, 0,
	294, 233, 281, 286, 219, 213, 159, 283, 217, 212,
	205, 184, 806, 197, 245, 211, 246, 198, 223, 222,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 777, 0,
	0, 297, 0, 0, 794, 0, 0, 0, 271, 0,
	0, 206, 0, 0, 0, 736, 0, 257, 239, 804,
	689, 0, 255, 209, 282, 247, 288, 273, 296, 251,
	248, 152, 274, 179, 220, 162, 163, 175, 181, 183,
	185, 186, 229, 230, 242, 262, 275, 276, 277, 178,
	171, 256, 172, 195, 173, 153, 264, 174, 154, 243,
	280, 0, 191, 252, 216, 155, 215, 244, 279, 278,
	304, 310, 311, 315, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 1465, 1464, 1466,
	309, 189, 150, 292, 792, 235, 0, 803, 788, 789,
	790, 793, 796, 797, 730, 734, 798, 800, 802, 805,
	260, 0, 0, 0, 0, 0, 200, 241, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 290, 302, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 732, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 737, 225,
	226, 227, 228, 729, 0, 169, 320, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	188, 194, 0, 196, 168, 240, 190, 299, 203, 0,
	232, 199, 265, 204, 210, 253, 298, 238, 258, 166,
	289, 266, 214, 0, 0, 812, 791, 811, 813, 814,
	810, 815, 816, 799, 752, 0, 808, 807, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 208, 0, 249, 187, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 129, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 784, 787, 0, 0, 305, 306,
	307, 291, 105, 0, 780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 182, 0, 0, 207, 0, 0, 0, 774, 0,
	0, 267, 221, 0, 0, 0, 0, 795, 801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 743,
	0, 0, 691, 786, 785, 760, 769, 0, 0, 164,
	761, 0, 768, 762, 766, 765, 763, 764, 0, 728,
	0, 0, 0, 0, 0, 0, 688, 747, 0, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 745, 0, 0, 0, 0, 781, 0, 746,
	0, 0, 782, 0, 770, 0, 0, 156, 272, 287,
	165, 263, 300, 170, 270, 161, 236, 259, 0, 0,
	158, 285, 269, 218, 201, 202, 157, 0, 254, 180,
	193, 177, 234, 767, 731, 735, 176, 733, 779, 295,
	160, 0, 294, 233, 281, 286, 219, 213, 159, 283,
	217, 212, 205, 184, 806, 197, 245, 211, 246, 198,
	223, 222, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	777, 0, 0, 297, 0, 0, 794, 0, 0, 0,
	271, 0, 0, 206, 0, 0, 0, 736, 0, 257,
	239, 804, 689, 0, 255, 209, 282, 247, 288, 273,
	296, 251, 248, 152, 274, 179, 220, 162, 163, 175,
	181, 183, 185, 186, 229, 230, 242, 262, 275, 276,
	277, 178, 171, 256, 172, 195, 173, 153, 264, 174,
	154, 243, 280, 0, 191, 252, 216, 155, 215, 244,
	279, 278, 304, 310, 311, 315, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 309, 189, 150, 292, 792, 235, 0, 803,
	788, 789, 790, 793, 796, 797, 730, 734, 798, 800,
	802, 805, 260, 0, 0, 0, 0, 0, 200, 241,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 290, 302, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	737, 225, 226, 227, 228, 729, 0, 169, 320, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 188, 194, 0, 196, 168, 240, 190, 299,
	203, 0, 232, 199, 265, 204, 210, 253, 298, 238,
	258, 166, 289, 266, 214, 0, 0, 812, 791, 811,
	813, 814, 810, 815, 816, 799, 752, 0, 808, 807,
	809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 208, 78, 249, 187,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 129, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 784, 787, 780, 0,
	305, 306, 307, 291, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 182, 883, 0, 207, 0,
	0, 0, 774, 0, 0, 267, 221, 0, 0, 0,
	0, 795, 801, 0, 0, 0, 0, 0, 0, 0,
	965, 0, 0, 743, 0, 0, 691, 786, 785, 760,
	769, 0, 0, 164, 761, 0, 768, 762, 766, 765,
	763, 764, 0, 728, 0, 0, 0, 0, 0, 0,
	688, 747, 0, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 744, 745, 0, 0, 0,
	0, 781, 0, 746, 0, 0, 966, 0, 770, 0,
	0, 156, 272, 287, 165, 263, 300, 170, 270, 161,
	236, 259, 0, 0, 158, 285, 269, 218, 201, 202,
	157, 0, 254, 180, 193, 177, 234, 767, 731, 735,
	176, 733, 779, 295, 160, 0, 294, 233, 281, 286,
	219, 213, 159, 283, 217, 212, 205, 184, 806, 197,
	245, 211, 246, 198, 223, 222, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 777, 0, 0, 297, 0, 0,
	794, 0, 0, 0, 271, 0, 0, 206, 0, 0,
	0, 736, 0, 257, 239, 804, 689, 0, 255, 209,
	282, 247, 288, 273, 296, 251, 248, 152, 274, 179,
	220, 162, 163, 175, 181, 183, 185, 186, 229, 230,
	242, 262, 275, 276, 277, 178, 171, 256, 172, 195,
	173, 153, 264, 174, 154, 243, 280, 0, 191, 252,
	216, 155, 215, 244, 279, 278, 304, 310, 311, 315,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 309, 189, 150, 292,
	792, 235, 0, 803, 788, 789, 790, 793, 796, 797,
	730, 734, 798, 800, 802, 805, 260, 0, 0, 0,
	0, 0, 200, 241, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 290,
	302, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 737, 225, 226, 227, 228, 729,
	0, 169, 320, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 188, 194, 0, 196,
	168, 240, 190, 299, 203, 0, 232, 199, 265, 204,
	210, 253, 298, 238, 258, 166, 289, 266, 214, 0,
	0, 812, 791, 811, 813, 814, 810, 815, 816, 799,
	752, 0, 808, 807, 809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	208, 0, 249, 187, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 129,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	784, 787, 780, 0, 305, 306, 307, 291, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 182,
	2452, 0, 207, 0, 0, 0, 774, 0, 0, 267,
	221, 0, 0, 0, 0, 795, 801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 743, 0, 0,
	691, 786, 785, 760, 769, 0, 0, 164, 761, 0,
	768, 762, 766, 765, 763, 764, 0, 728, 0, 0,
	0, 0, 0, 0, 688, 747, 0, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 744,
	745, 0, 0, 0, 0, 781, 0, 746, 0, 0,
	782, 0, 770, 0, 0, 156, 272, 287, 165, 263,
	300, 170, 270, 161, 236, 259, 0, 0, 158, 285,
	269, 218, 201, 202, 157, 0, 254, 180, 193, 177,
	234, 767, 731, 735, 176, 733, 779, 295, 160, 0,
	294, 233, 281, 286, 219, 213, 159, 283, 217, 212,
	205, 184, 806, 197, 245, 211, 246, 198, 223, 222,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 777, 0,
	0, 297, 0, 0, 794, 0, 0, 0, 271, 0,
	0, 206, 0, 0, 0, 736, 0, 257, 239, 804,
	689, 0, 255, 209, 282, 247, 288, 273, 296, 251,
	248, 152, 274, 179, 220, 162, 163, 175, 181, 183,
	185, 186, 229, 230, 242, 262, 275, 276, 277, 178,
	171, 256, 172, 195, 173, 153, 264, 174, 154, 243,
	280, 0, 191, 252, 216, 155, 215, 244, 279, 278,
	304, 310, 311, 315, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	309, 189, 150, 292, 792, 235, 0, 803, 788, 789,
	790, 793, 796, 797, 730, 734, 798, 800, 802, 805,
	260, 0, 0, 0, 0, 0, 200, 241, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 290, 302, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 732, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 737, 225,
	226, 227, 228, 729, 0, 169, 320, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	188, 194, 0, 196, 168, 240, 190, 299, 203, 0,
	232, 199, 265, 204, 210, 253, 298, 238, 258, 166,
	289, 266, 214, 0, 0, 812, 791, 811, 813, 814,
	810, 815, 816, 799, 752, 0, 808, 807, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 208, 0, 249, 187, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 129, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 784, 787, 780, 0, 305, 306,
	307, 291, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 182, 883, 0, 207, 0, 0, 0,
	774, 0, 0, 267, 221, 0, 0, 0, 0, 795,
	801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 743, 0, 0, 691, 786, 785, 760, 769, 0,
	0, 164, 761, 0, 768, 762, 766, 765, 763, 764,
	0, 728, 0, 0, 0, 0, 0, 0, 688, 747,
	0, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 745, 0, 0, 0, 0, 781,
	0, 746, 0, 0, 782, 0, 770, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 767, 731, 735, 176, 733,
	779, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 806, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 777, 0, 0, 297, 0, 0, 794, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 736,
	0, 257, 239, 804, 689, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 792, 235,
	0, 803, 788, 789, 790, 793, 796, 797, 730, 734,
	798, 800, 802, 805, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 737, 225, 226, 227, 228, 729, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 812,
	791, 811, 813, 814, 810, 815, 816, 799, 752, 0,
	808, 807, 809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 208, 0,
	249, 187, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 129, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 784, 787,
	0, 0, 305, 306, 307, 291, 780, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 182, 0, 0, 207, 0, 0, 0,
	774, 0, 0, 267, 221, 0, 0, 0, 0, 795,
	801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 743, 0, 0, 691, 786, 785, 760, 769, 0,
	0, 164, 761, 0, 768, 762, 766, 765, 763, 764,
	0, 728, 0, 0, 0, 0, 0, 0, 688, 747,
	0, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 745, 0, 0, 0, 0, 781,
	0, 746, 0, 0, 782, 0, 770, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 767, 731, 735, 176, 733,
	779, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 806, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 777, 0, 0, 297, 0, 0, 794, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 736,
	0, 257, 239, 804, 689, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 792, 235,
	0, 803, 788, 789, 790, 793, 796, 797, 730, 734,
	798, 800, 802, 805, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 737, 225, 226, 227, 228, 729, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 812,
	791, 811, 813, 814, 810, 815, 816, 799, 752, 0,
	808, 807, 809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 208, 0,
	249, 187, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 129, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 784, 787,
	780, 0, 305, 306, 307, 291, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 750, 0, 0, 0, 182, 0, 0,
	207, 0, 0, 0, 774, 0, 0, 267, 221, 0,
	0, 0, 0, 795, 801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 743, 0, 0, 691, 786,
	785, 760, 769, 0, 0, 164, 761, 0, 768, 762,
	766, 765, 763, 764, 0, 728, 0, 0, 0, 0,
	0, 0, 688, 747, 0, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 744, 745, 685,
	0, 0, 0, 781, 0, 746, 0, 0, 782, 0,
	770, 0, 0, 156, 272, 287, 165, 263, 300, 170,
	270, 161, 236, 259, 0, 0, 158, 285, 269, 218,
	201, 202, 157, 0, 254, 180, 193, 177, 234, 767,
	731, 735, 176, 733, 779, 295, 160, 0, 294, 233,
	281, 286, 219, 213, 159, 283, 217, 212, 205, 184,
	806, 197, 245, 211, 246, 198, 223, 222, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 777, 0, 0, 297,
	0, 0, 794, 0, 0, 0, 271, 0, 0, 206,
	0, 0, 0, 736, 0, 257, 239, 804, 689, 0,
	255, 209, 282, 247, 288, 273, 296, 251, 248, 152,
	274, 179, 220, 162, 163, 175, 181, 183, 185, 186,
	229, 230, 242, 262, 275, 276, 277, 178, 171, 256,
	172, 195, 173, 153, 264, 174, 154, 243, 280, 0,
	191, 252, 216, 155, 215, 244, 279, 278, 304, 310,
	311, 315, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 309, 189,
	150, 292, 792, 235, 0, 803, 788, 789, 790, 793,
	796, 797, 730, 734, 798, 800, 802, 805, 260, 0,
	0, 0, 0, 0, 200, 241, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 290, 302, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 732, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 737, 225, 226, 227,
	228, 729, 0, 169, 320, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 188, 194,
	0, 196, 168, 240, 190, 299, 203, 0, 232, 199,
	265, 204, 210, 253, 298, 238, 258, 166, 289, 266,
	214, 0, 0, 812, 791, 811, 813, 814, 810, 815,
	816, 799, 752, 0, 808, 807, 809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 208, 0, 249, 187, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 129, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 784, 787, 780, 0, 305, 306, 307, 291,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 182, 0, 0, 207, 0, 0, 0, 774, 0,
	0, 267, 221, 0, 0, 0, 0, 795, 801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 743,
	0, 0, 691, 786, 785, 760, 769, 0, 0, 164,
	761, 0, 768, 762, 766, 765, 763, 764, 0, 728,
	0, 0, 0, 0, 0, 0, 688, 747, 0, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 745, 0, 0, 0, 0, 781, 0, 746,
	0, 0, 782, 0, 770, 0, 0, 156, 272, 287,
	165, 263, 300, 170, 270, 161, 236, 259, 0, 0,
	158, 285, 269, 218, 201, 202, 157, 0, 254, 180,
	193, 177, 234, 767, 731, 735, 176, 733, 779, 295,
	160, 0, 294, 233, 281, 286, 219, 213, 159, 283,
	217, 212, 205, 184, 806, 197, 245, 211, 246, 198,
	223, 222, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	777, 0, 0, 297, 0, 0, 794, 0, 0, 0,
	271, 0, 0, 206, 0, 0, 0, 736, 0, 257,
	239, 804, 689, 0, 255, 209, 282, 247, 288, 273,
	296, 251, 248, 152, 274, 179, 220, 162, 163, 175,
	181, 183, 185, 186, 229, 230, 242, 262, 275, 276,
	277, 178, 171, 256, 172, 195, 173, 153, 264, 174,
	154, 243, 280, 0, 191, 252, 216, 155, 215, 244,
	279, 278, 304, 310, 311, 315, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 309, 189, 150, 292, 792, 235, 0, 803,
	788, 789, 790, 793, 796, 797, 730, 734, 798, 800,
	802, 805, 260, 0, 0, 0, 0, 0, 200, 241,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 290, 302, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	737, 225, 226, 227, 228, 729, 0, 169, 320, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 188, 194, 0, 196, 168, 240, 190, 299,
	203, 0, 232, 199, 265, 204, 210, 253, 298, 238,
	258, 166, 289, 266, 214, 0, 0, 812, 791, 811,
	813, 814, 810, 815, 816, 799, 752, 0, 808, 807,
	809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 208, 0, 249, 187,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 129, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 784, 787, 780, 0,
	305, 306, 307, 291, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 750, 0, 0, 0, 182, 0, 0, 207, 0,
	0, 0, 774, 0, 0, 267, 221, 0, 0, 0,
	0, 795, 801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 743, 0, 0, 691, 786, 785, 760,
	769, 0, 0, 164, 761, 0, 768, 762, 766, 765,
	763, 764, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 747, 0, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 744, 745, 0, 0, 0,
	0, 781, 0, 746, 0, 0, 782, 0, 770, 0,
	0, 156, 272, 287, 165, 263, 300, 170, 270, 161,
	236, 259, 0, 0, 158, 285, 269, 218, 201, 202,
	157, 0, 254, 180, 193, 177, 234, 767, 731, 735,
	176, 733, 779, 295, 160, 0, 294, 233, 281, 286,
	219, 213, 159, 283, 217, 212, 205, 184, 806, 197,
	245, 211, 246, 198, 223, 222, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 777, 0, 0, 297, 0, 0,
	794, 0, 0, 0, 271, 0, 0, 206, 0, 0,
	0, 736, 0, 257, 239, 804, 0, 0, 255, 209,
	282, 247, 288, 273, 296, 251, 248, 152, 274, 179,
	220, 162, 163, 175, 181, 183, 185, 186, 229, 230,
	242, 262, 275, 276, 277, 178, 171, 256, 172, 195,
	173, 153, 264, 174, 154, 243, 280, 0, 191, 252,
	216, 155, 215, 244, 279, 278, 304, 1410, 1411, 315,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 309, 189, 150, 292,
	792, 235, 0, 803, 788, 789, 790, 793, 796, 797,
	730, 734, 798, 800, 802, 805, 260, 0, 0, 0,
	0, 0, 200, 241, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 290,
	302, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 737, 225, 226, 227, 228, 729,
	0, 169, 320, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 188, 194, 0, 196,
	168, 240, 190, 299, 203, 0, 232, 199, 265, 204,
	210, 253, 298, 238, 258, 166, 289, 266, 214, 0,
	0, 812, 791, 811, 813, 814, 810, 815, 816, 799,
	752, 0, 808, 807, 809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	208, 0, 249, 187, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 129,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	784, 787, 780, 0, 305, 306, 307, 291, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 750, 0, 0, 0, 182,
	0, 0, 207, 0, 0, 0, 774, 0, 0, 267,
	221, 0, 0, 0, 0, 795, 801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	691, 786, 785, 760, 769, 0, 0, 164, 761, 0,
	768, 762, 766, 765, 763, 764, 0, 728, 0, 0,
	0, 0, 0, 0, 688, 747, 0, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 744,
	745, 0, 0, 0, 0, 781, 0, 746, 0, 0,
	782, 0, 770, 0, 0, 156, 272, 287, 165, 263,
	300, 170, 270, 161, 236, 259, 0, 0, 158, 285,
	269, 218, 201, 202, 157, 0, 254, 180, 193, 177,
	234, 767, 731, 735, 176, 733, 779, 295, 160, 0,
	294, 233, 281, 286, 219, 213, 159, 283, 217, 212,
	205, 184, 806, 197, 245, 211, 246, 198, 223, 222,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 777, 0,
	0, 297, 0, 0, 794, 0, 0, 0, 271, 0,
	0, 206, 0, 0, 0, 736, 0, 257, 239, 804,
	689, 0, 255, 209, 282, 247, 288, 273, 296, 251,
	248, 152, 274, 179, 220, 162, 163, 175, 181, 183,
	185, 186, 229, 230, 242, 262, 275, 276, 277, 178,
	171, 256, 172, 195, 173, 153, 264, 174, 154, 243,
	280, 0, 191, 252, 216, 155, 215, 244, 279, 278,
	304, 310, 311, 315, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	309, 189, 150, 292, 792, 235, 0, 803, 788, 789,
	790, 793, 796, 797, 730, 734, 798, 800, 802, 805,
	260, 0, 0, 0, 0, 0, 200, 241, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 290, 302, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 732, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 737, 225,
	226, 227, 228, 729, 0, 169, 320, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	188, 194, 0, 196, 168, 240, 190, 299, 203, 0,
	232, 199, 265, 204, 210, 253, 298, 238, 258, 166,
	289, 266, 214, 0, 0, 812, 791, 811, 813, 814,
	810, 815, 816, 799, 752, 0, 808, 807, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 208, 0, 249, 187, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 129, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 784, 787, 780, 0, 305, 306,
	307, 291, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 182, 0, 0, 207, 0, 0, 0,
	774, 0, 0, 267, 221, 0, 0, 0, 0, 795,
	801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 743, 0, 0, 691, 786, 785, 760, 769, 0,
	0, 164, 761, 0, 768, 762, 766, 765, 763, 764,
	0, 728, 0, 0, 0, 0, 0, 0, 0, 747,
	0, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 744, 745, 0, 0, 0, 0, 781,
	0, 746, 0, 0, 782, 0, 770, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 767, 731, 735, 176, 733,
	779, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 806, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 777, 0, 0, 297, 0, 0, 794, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 736,
	0, 257, 239, 804, 0, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 792, 235,
	0, 803, 788, 789, 790, 793, 796, 797, 730, 734,
	798, 800, 802, 805, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 737, 225, 226, 227, 228, 729, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 812,
	791, 811, 813, 814, 810, 815, 816, 799, 752, 0,
	808, 807, 809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 208, 0,
	249, 187, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 129, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 784, 787,
	0, 0, 305, 306, 307, 291, 105, 0, 30, 95,
	77, 0, 0, 0, 0, 0, 0, 0, 237, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 267, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 272, 287, 165, 263, 300, 170, 270, 161,
	236, 259, 0, 0, 158, 285, 269, 218, 201, 202,
	157, 0, 254, 180, 193, 177, 234, 0, 284, 312,
	176, 303, 0, 295, 160, 0, 294, 233, 281, 286,
	219, 213, 159, 283, 217, 212, 205, 184, 0, 197,
	245, 211, 246, 198, 223, 222, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 206, 0, 0,
	0, 313, 0, 257, 239, 0, 0, 0, 255, 209,
	282, 247, 288, 273, 296, 251, 248, 152, 274, 179,
	220, 162, 163, 175, 181, 183, 185, 186, 229, 230,
	242, 262, 275, 276, 277, 178, 171, 256, 172, 195,
	173, 153, 264, 174, 154, 243, 280, 0, 191, 252,
	216, 155, 215, 244, 279, 278, 304, 310, 311, 315,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 1448, 309, 189, 150, 292,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 308, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 200, 241, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 290,
	302, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 317, 225, 226, 227, 228, 330,
	332, 169, 320, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 188, 194, 0, 196,
	168, 240, 190, 299, 203, 0, 232, 199, 265, 204,
	210, 253, 298, 238, 258, 166, 289, 266, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1444, 0, 0, 1441, 0, 0,
	0, 1443, 1440, 1442, 1446, 1447, 0, 0, 151, 1445,
	208, 78, 249, 187, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	237, 0, 0, 0, 305, 306, 307, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 267, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 1744, 1747, 0, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1451, 1452, 1453, 1454, 1455, 1456, 1449, 1450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 272, 287, 165, 263, 300, 170,
	270, 161, 236, 259, 0, 0, 158, 285, 269, 218,
	201, 202, 157, 0, 254, 180, 193, 177, 234, 0,
	284, 312, 176, 303, 0, 295, 160, 0, 294, 233,
	281, 286, 219, 213, 159, 283, 217, 212, 205, 184,
	0, 197, 245, 211, 246, 198, 223, 222, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 297,
	0, 0, 0, 1741, 0, 1740, 271, 1742, 1745, 206,
	0, 0, 0, 313, 0, 257, 239, 0, 0, 0,
	255, 209, 282, 247, 288, 273, 296, 251, 248, 152,
	274, 179, 220, 162, 163, 175, 181, 183, 185, 186,
	229, 230, 242, 262, 275, 276, 277, 178, 171, 256,
	172, 195, 173, 153, 264, 174, 154, 243, 280, 1746,
	191, 252, 216, 155, 215, 244, 279, 278, 304, 310,
	311, 315, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 309, 189,
	150, 292, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 308, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 200, 241, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 290, 302, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 317, 225, 226, 227,
	228, 192, 0, 169, 320, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 188, 194,
	0, 196, 168, 240, 190, 299, 203, 0, 232, 199,
	265, 204, 210, 253, 298, 238, 258, 166, 289, 266,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 208, 0, 249, 187, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 237, 0, 0, 0, 305, 306, 307, 291,
	0, 0, 0, 0, 996, 0, 0, 0, 0, 182,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 267,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 997, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	992, 993, 994, 991, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 272, 287, 165, 263,
	300, 170, 270, 161, 236, 259, 0, 0, 158, 285,
	269, 218, 201, 202, 157, 0, 254, 180, 193, 177,
	234, 0, 284, 312, 176, 303, 0, 295, 160, 0,
	294, 233, 281, 286, 219, 213, 159, 283, 217, 212,
	205, 184, 0, 197, 245, 211, 246, 198, 223, 222,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 206, 0, 0, 0, 313, 0, 257, 239, 0,
	0, 0, 255, 209, 282, 247, 288, 273, 296, 251,
	248, 152, 274, 179, 220, 162, 163, 175, 181, 183,
	185, 186, 229, 230, 242, 262, 275, 276, 277, 178,
	171, 256, 172, 195, 173, 153, 264, 174, 154, 243,
	280, 0, 191, 252, 216, 155, 215, 244, 279, 278,
	304, 310, 311, 315, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	309, 189, 150, 292, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 308, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 200, 241, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 290, 302, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 317, 225,
	226, 227, 228, 192, 0, 169, 320, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	188, 194, 0, 196, 168, 240, 190, 299, 203, 0,
	232, 199, 265, 204, 210, 253, 298, 238, 258, 166,
	289, 266, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 208, 0, 249, 187, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 237, 0, 0, 0, 305, 306,
	307, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 462, 0, 207, 0, 0, 0, 0, 0,
	0, 267, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 470, 471, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 272, 287,
	165, 263, 300, 170, 270, 161, 236, 259, 0, 0,
	158, 285, 269, 218, 201, 202, 157, 0, 254, 180,
	193, 177, 234, 0, 284, 312, 176, 303, 448, 295,
	160, 447, 294, 233, 281, 286, 219, 213, 159, 283,
	217, 212, 205, 184, 0, 197, 245, 211, 246, 198,
	223, 222, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 206, 0, 0, 0, 313, 0, 257,
	239, 0, 0, 0, 255, 209, 282, 247, 288, 273,
	296, 460, 248, 152, 274, 179, 220, 162, 163, 175,
	181, 183, 185, 186, 229, 230, 242, 262, 275, 276,
	277, 178, 171, 256, 172, 195, 173, 153, 264, 174,
	154, 243, 280, 0, 191, 252, 216, 155, 215, 244,
	279, 278, 304, 310, 311, 315, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 309, 189, 150, 292, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 308, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 200, 241,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 290, 302, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	293, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	464, 225, 226, 227, 228, 192, 0, 169, 320, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 188, 194, 0, 196, 168, 240, 190, 299,
	203, 0, 472, 467, 468, 204, 210, 253, 298, 238,
	258, 166, 289, 266, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 208, 0, 249, 187,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 105, 0, 0, 0,
	305, 306, 307, 291, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 267, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 1087, 0, 111, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 272, 287, 165, 263, 300, 170, 270, 161,
	236, 259, 0, 0, 158, 285, 269, 218, 201, 202,
	157, 0, 254, 180, 193, 177, 234, 0, 284, 312,
	176, 303, 0, 295, 160, 0, 294, 233, 281, 286,
	219, 213, 159, 283, 217, 212, 205, 184, 0, 197,
	245, 211, 246, 198, 223, 222, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 206, 0, 0,
	0, 313, 0, 257, 239, 0, 0, 0, 255, 209,
	282, 247, 288, 273, 296, 251, 248, 152, 274, 179,
	220, 162, 163, 175, 181, 183, 185, 186, 229, 230,
	242, 262, 275, 276, 277, 178, 171, 256, 172, 195,
	173, 153, 264, 174, 154, 243, 280, 0, 191, 252,
	216, 155, 215, 244, 279, 278, 304, 310, 311, 315,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 309, 189, 150, 292,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 308, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 200, 241, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 290,
	302, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 317, 225, 226, 227, 228, 192,
	0, 169, 320, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 188, 194, 0, 196,
	168, 240, 190, 299, 203, 0, 232, 199, 265, 204,
	210, 253, 298, 238, 258, 166, 289, 266, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	208, 78, 249, 187, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	237, 0, 0, 0, 305, 306, 307, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 267, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 470,
	471, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 272, 287, 165, 263, 300, 170,
	270, 161, 236, 259, 0, 0, 158, 285, 269, 218,
	201, 202, 157, 0, 254, 180, 193, 177, 234, 0,
	284, 312, 176, 303, 448, 295, 160, 447, 294, 233,
	281, 286, 219, 213, 159, 283, 217, 212, 205, 184,
	0, 197, 245, 211, 246, 198, 223, 222, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 206,
	0, 0, 0, 313, 0, 257, 239, 0, 0, 0,
	255, 209, 282, 247, 288, 273, 296, 251, 248, 152,
	274, 179, 220, 162, 163, 175, 181, 183, 185, 186,
	229, 230, 242, 262, 275, 276, 277, 178, 171, 256,
	172, 195, 173, 153, 264, 174, 154, 243, 280, 0,
	191, 252, 216, 155, 215, 244, 279, 278, 304, 310,
	311, 315, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 309, 189,
	150, 292, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 308, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 200, 241, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 290, 302, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 317, 225, 226, 227,
	228, 192, 0, 169, 320, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 188, 194,
	0, 196, 168, 240, 190, 299, 203, 0, 472, 467,
	468, 204, 210, 253, 298, 238, 258, 166, 289, 266,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 208, 0, 249, 187, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 237, 0, 0, 0, 305, 306, 307, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	668, 0, 207, 0, 0, 0, 0, 0, 0, 267,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 666, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 156, 272, 287, 165, 263,
	300, 170, 270, 161, 236, 259, 0, 0, 158, 285,
	269, 218, 201, 202, 157, 0, 254, 180, 193, 177,
	234, 0, 284, 312, 176, 303, 0, 295, 160, 0,
	294, 233, 281, 286, 219, 213, 159, 283, 217, 212,
	205, 184, 0, 197, 245, 211, 246, 198, 223, 222,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 206, 0, 0, 0, 313, 0, 257, 239, 0,
	0, 0, 255, 209, 282, 247, 288, 273, 296, 251,
	248, 152, 274, 179, 220, 162, 163, 175, 181, 183,
	185, 186, 229, 230, 242, 262, 275, 276, 277, 178,
	171, 256, 172, 195, 173, 153, 264, 174, 154, 243,
	280, 0, 191, 252, 216, 155, 215, 244, 279, 278,
	304, 310, 311, 315, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	309, 189, 150, 292, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 308, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 200, 241, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 290, 302, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 317, 225,
	226, 227, 228, 192, 0, 169, 320, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	188, 194, 0, 196, 168, 240, 190, 299, 203, 0,
	232, 199, 265, 204, 210, 253, 298, 238, 258, 166,
	289, 266, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 208, 0, 249, 187, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 237, 0, 0, 0, 305, 306,
	307, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 662, 0, 207, 0, 0, 0, 0, 0,
	0, 267, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 0, 666, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 0, 0, 0, 156, 272, 287,
	165, 263, 300, 170, 270, 161, 236, 259, 0, 0,
	158, 285, 269, 218, 201, 202, 157, 0, 254, 180,
	193, 177, 234, 0, 284, 312, 176, 303, 0, 295,
	160, 0, 294, 233, 281, 286, 219, 213, 159, 283,
	217, 212, 205, 184, 0, 197, 245, 211, 246, 198,
	223, 222, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 206, 0, 0, 0, 313, 0, 257,
	239, 0, 0, 0, 255, 209, 282, 247, 288, 273,
	296, 251, 248, 152, 274, 179, 220, 162, 163, 175,
	181, 183, 185, 186, 229, 230, 242, 262, 275, 276,
	277, 178, 171, 256, 172, 195, 173, 153, 264, 174,
	154, 243, 280, 0, 191, 252, 216, 155, 215, 244,
	279, 278, 304, 310, 311, 315, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 309, 189, 150, 292, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 308, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 200, 241,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 290, 302, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	317, 225, 226, 227, 228, 192, 0, 169, 320, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 188, 194, 0, 196, 168, 240, 190, 299,
	203, 0, 232, 199, 265, 204, 210, 253, 298, 238,
	258, 166, 289, 266, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 208, 0, 249, 187,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 237, 0, 0, 0,
	305, 306, 307, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 267, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2361, 0, 111, 786, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 0, 284, 312, 176, 303,
	0, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 0, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 313,
	0, 257, 239, 0, 0, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 308,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 317, 225, 226, 227, 228, 192, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 208, 0,
	249, 187, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 237, 0,
	0, 0, 305, 306, 307, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 267, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 666,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 0, 0, 0,
	0, 156, 272, 287, 165, 263, 300, 170, 270, 161,
	236, 259, 0, 0, 158, 285, 269, 218, 201, 202,
	157, 0, 254, 180, 193, 177, 234, 0, 284, 312,
	176, 303, 0, 295, 160, 0, 294, 233, 281, 286,
	219, 213, 159, 283, 217, 212, 205, 184, 0, 197,
	245, 211, 246, 198, 223, 222, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 206, 0, 0,
	0, 313, 0, 257, 239, 0, 0, 0, 255, 209,
	282, 247, 288, 273, 296, 251, 248, 152, 274, 179,
	220, 162, 163, 175, 181, 183, 185, 186, 229, 230,
	242, 262, 275, 276, 277, 178, 171, 256, 172, 195,
	173, 153, 264, 174, 154, 243, 280, 0, 191, 252,
	216, 155, 215, 244, 279, 278, 304, 310, 311, 315,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 309, 189, 150, 292,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 308, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 200, 241, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 290,
	302, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 317, 225, 226, 227, 228, 192,
	0, 169, 320, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 188, 194, 0, 196,
	168, 240, 190, 299, 203, 0, 232, 199, 265, 204,
	210, 253, 298, 238, 258, 166, 289, 266, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	208, 0, 249, 187, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	237, 0, 0, 0, 305, 306, 307, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 267, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	0, 666, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 0,
	0, 0, 0, 156, 272, 287, 165, 263, 300, 170,
	270, 161, 236, 259, 0, 0, 158, 285, 269, 218,
	201, 202, 157, 0, 254, 180, 193, 177, 234, 0,
	284, 312, 176, 303, 0, 295, 160, 0, 294, 233,
	281, 286, 219, 213, 159, 283, 217, 212, 205, 184,
	0, 197, 245, 211, 246, 198, 223, 222, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 206,
	0, 0, 0, 313, 0, 257, 239, 0, 0, 0,
	255, 209, 282, 247, 288, 273, 296, 251, 248, 152,
	274, 179, 220, 162, 163, 175, 181, 183, 185, 186,
	229, 230, 242, 262, 275, 276, 277, 178, 171, 256,
	172, 195, 173, 153, 264, 174, 154, 243, 280, 0,
	191, 252, 216, 155, 215, 244, 279, 278, 304, 310,
	311, 315, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 309, 189,
	150, 292, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 308, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 200, 241, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 290, 302, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 317, 225, 226, 227,
	228, 192, 0, 169, 320, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 188, 194,
	0, 196, 168, 240, 190, 299, 203, 0, 232, 199,
	265, 204, 210, 253, 298, 238, 258, 166, 289, 266,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 208, 0, 249, 187, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 237, 0, 0, 0, 305, 306, 307, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 267,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 946, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 272, 287, 165, 263,
	300, 170, 270, 161, 236, 259, 0, 0, 158, 285,
	269, 218, 201, 202, 157, 0, 254, 180, 193, 177,
	234, 0, 284, 312, 176, 303, 0, 295, 160, 0,
	294, 233, 281, 286, 219, 213, 159, 283, 217, 212,
	205, 184, 0, 197, 245, 211, 246, 198, 223, 222,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 206, 0, 0, 0, 313, 0, 257, 239, 0,
	0, 0, 255, 209, 282, 247, 288, 273, 296, 251,
	248, 152, 274, 179, 220, 162, 163, 175, 181, 183,
	185, 186, 229, 230, 242, 262, 275, 276, 277, 178,
	171, 256, 172, 195, 173, 153, 264, 174, 154, 243,
	280, 0, 191, 252, 216, 155, 215, 244, 279, 278,
	304, 310, 311, 315, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	309, 189, 150, 292, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 308, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 200, 241, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 290, 302, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 317, 225,
	226, 227, 228, 192, 0, 169, 320, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	188, 194, 0, 196, 168, 240, 190, 299, 203, 0,
	232, 199, 265, 204, 210, 253, 298, 238, 258, 166,
	289, 266, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 208, 0, 249, 187, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 237, 947, 0, 0, 305, 306,
	307, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 1386, 0, 207, 0, 0, 0, 0, 0,
	0, 267, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 0, 666, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 272, 287,
	165, 263, 300, 170, 270, 161, 236, 259, 0, 0,
	158, 285, 269, 218, 201, 202, 157, 0, 254, 180,
	193, 177, 234, 0, 284, 312, 176, 303, 0, 295,
	160, 0, 294, 233, 281, 286, 219, 213, 159, 283,
	217, 212, 205, 184, 0, 197, 245, 211, 246, 198,
	223, 222, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 206, 0, 0, 0, 313, 0, 257,
	239, 0, 0, 0, 255, 209, 282, 247, 288, 273,
	296, 251, 248, 152, 274, 179, 220, 162, 163, 175,
	181, 183, 185, 186, 229, 230, 242, 262, 275, 276,
	277, 178, 171, 256, 172, 195, 173, 153, 264, 174,
	154, 243, 280, 0, 191, 252, 216, 155, 215, 244,
	279, 278, 304, 310, 311, 315, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 309, 189, 150, 292, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 308, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 200, 241,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 290, 302, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	317, 225, 226, 227, 228, 192, 0, 169, 320, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 188, 194, 0, 196, 168, 240, 190, 299,
	203, 0, 232, 199, 265, 204, 210, 253, 298, 238,
	258, 166, 289, 266, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 208, 0, 249, 187,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 237, 0, 0, 0,
	305, 306, 307, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 267, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 786, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 0, 284, 312, 176, 303,
	0, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 0, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 313,
	0, 257, 239, 0, 0, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 308,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 317, 225, 226, 227, 228, 192, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 208, 0,
	249, 187, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 237, 0,
	0, 0, 305, 306, 307, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 267, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2101, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 272, 287, 165, 263, 300, 170, 270, 161,
	236, 259, 0, 0, 158, 285, 269, 218, 201, 202,
	157, 0, 254, 180, 193, 177, 234, 0, 284, 312,
	176, 303, 0, 295, 160, 0, 294, 233, 281, 286,
	219, 213, 159, 283, 217, 212, 205, 184, 0, 197,
	245, 211, 246, 198, 223, 222, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 206, 0, 0,
	0, 313, 0, 257, 239, 0, 0, 0, 255, 209,
	282, 247, 288, 273, 296, 251, 248, 152, 274, 179,
	220, 162, 163, 175, 181, 183, 185, 186, 229, 230,
	242, 262, 275, 276, 277, 178, 171, 256, 172, 195,
	173, 153, 264, 174, 154, 243, 280, 0, 191, 252,
	216, 155, 215, 244, 279, 278, 304, 310, 311, 315,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 309, 189, 150, 292,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 308, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 200, 241, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 290,
	302, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 317, 225, 226, 227, 228, 192,
	0, 169, 320, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 188, 194, 0, 196,
	168, 240, 190, 299, 203, 0, 232, 199, 265, 204,
	210, 253, 298, 238, 258, 166, 289, 266, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	208, 0, 249, 187, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	237, 0, 0, 0, 305, 306, 307, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 267, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 272, 287, 165, 263, 300, 170,
	270, 161, 236, 259, 0, 0, 158, 285, 269, 218,
	201, 202, 157, 0, 254, 180, 193, 177, 234, 0,
	284, 312, 176, 303, 0, 295, 160, 0, 294, 233,
	281, 286, 219, 213, 159, 283, 217, 212, 205, 184,
	0, 197, 245, 211, 246, 198, 223, 222, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 206,
	0, 0, 0, 313, 0, 257, 239, 0, 0, 0,
	255, 209, 282, 247, 288, 273, 296, 251, 248, 152,
	274, 179, 220, 162, 163, 175, 181, 183, 185, 186,
	229, 230, 242, 262, 275, 276, 277, 178, 171, 256,
	172, 195, 173, 153, 264, 174, 154, 243, 280, 0,
	191, 252, 216, 155, 215, 244, 279, 278, 304, 310,
	311, 315, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 309, 189,
	150, 292, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 308, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 200, 241, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 290, 302, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 317, 225, 226, 227,
	228, 192, 0, 169, 320, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 188, 194,
	0, 196, 168, 240, 190, 299, 203, 0, 232, 199,
	265, 204, 210, 253, 298, 238, 258, 166, 289, 266,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 208, 0, 249, 187, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 237, 0, 0, 0, 305, 306, 307, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 267,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 272, 287, 165, 263,
	300, 170, 270, 161, 236, 259, 0, 0, 158, 285,
	269, 218, 201, 202, 157, 0, 254, 180, 193, 177,
	234, 0, 284, 312, 176, 303, 0, 295, 160, 0,
	294, 233, 281, 286, 219, 213, 159, 283, 217, 212,
	205, 184, 0, 197, 245, 211, 246, 198, 223, 222,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 206, 0, 0, 0, 313, 0, 257, 239, 0,
	0, 0, 255, 209, 282, 247, 288, 273, 296, 251,
	248, 152, 274, 179, 220, 162, 163, 175, 181, 183,
	185, 186, 229, 230, 242, 262, 275, 276, 277, 178,
	171, 256, 172, 195, 173, 153, 264, 174, 154, 243,
	280, 0, 191, 252, 216, 155, 215, 244, 279, 278,
	304, 310, 311, 315, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	309, 189, 150, 292, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 308, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 200, 241, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 290, 302, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 317, 225,
	226, 227, 228, 192, 0, 169, 320, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	188, 194, 0, 196, 168, 240, 190, 299, 203, 0,
	232, 199, 265, 204, 210, 253, 298, 238, 258, 166,
	289, 266, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 208, 0, 249, 187, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 237, 0, 0, 0, 305, 306,
	307, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 267, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 0, 666, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 272, 287,
	165, 263, 300, 170, 270, 161, 236, 259, 0, 0,
	158, 285, 269, 218, 201, 202, 157, 0, 254, 180,
	193, 177, 234, 0, 284, 312, 176, 303, 0, 295,
	160, 0, 294, 233, 281, 286, 219, 213, 159, 283,
	217, 212, 205, 184, 0, 197, 245, 211, 246, 198,
	223, 222, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 206, 0, 0, 0, 313, 0, 257,
	239, 0, 0, 0, 255, 209, 282, 247, 288, 273,
	296, 251, 248, 152, 274, 179, 220, 162, 163, 175,
	181, 183, 185, 186, 229, 230, 242, 262, 275, 276,
	277, 178, 171, 256, 172, 195, 173, 153, 264, 174,
	154, 243, 280, 0, 191, 252, 216, 155, 215, 244,
	279, 278, 304, 310, 311, 315, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 309, 189, 150, 292, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 308, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 200, 241,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 290, 302, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	317, 225, 226, 227, 228, 192, 0, 169, 320, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 188, 194, 0, 196, 168, 240, 190, 299,
	203, 0, 232, 199, 265, 204, 210, 253, 298, 238,
	258, 166, 289, 266, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 208, 0, 249, 187,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 237, 0, 0, 0,
	305, 306, 307, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 267, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 0, 0, 1622, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 0, 284, 312, 176, 303,
	0, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 0, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 313,
	0, 257, 239, 0, 0, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 308,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 317, 225, 226, 227, 228, 192, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 208, 0,
	249, 187, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 237, 0,
	0, 0, 305, 306, 307, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 267, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 272, 287, 165, 263, 300, 170, 270, 161,
	236, 259, 0, 0, 158, 285, 269, 218, 201, 202,
	157, 0, 254, 180, 193, 177, 234, 0, 284, 312,
	176, 303, 0, 295, 160, 0, 294, 233, 281, 286,
	219, 213, 159, 283, 217, 212, 205, 184, 0, 197,
	245, 211, 246, 198, 223, 222, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 206, 0, 0,
	0, 313, 0, 257, 239, 0, 0, 0, 255, 209,
	282, 247, 288, 273, 296, 251, 248, 152, 274, 179,
	220, 162, 163, 175, 181, 183, 185, 186, 229, 230,
	242, 262, 275, 276, 277, 178, 171, 256, 172, 195,
	173, 153, 264, 174, 154, 243, 280, 0, 191, 252,
	216, 155, 215, 244, 279, 278, 304, 310, 311, 315,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 309, 189, 150, 292,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 308, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 200, 241, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 290,
	302, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 317, 225, 226, 227, 228, 192,
	0, 169, 320, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 188, 194, 0, 196,
	168, 240, 190, 299, 203, 0, 232, 199, 265, 204,
	210, 253, 298, 238, 258, 166, 289, 266, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	208, 0, 249, 187, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	237, 0, 0, 0, 305, 306, 307, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 267, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	0, 1399, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 272, 287, 165, 263, 300, 170,
	270, 161, 236, 259, 0, 0, 158, 285, 269, 218,
	201, 202, 157, 0, 254, 180, 193, 177, 234, 0,
	284, 312, 176, 303, 0, 295, 160, 0, 294, 233,
	281, 286, 219, 213, 159, 283, 217, 212, 205, 184,
	0, 197, 245, 211, 246, 198, 223, 222, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 206,
	0, 0, 0, 313, 0, 257, 239, 0, 0, 0,
	255, 209, 282, 247, 288, 273, 296, 251, 248, 152,
	274, 179, 220, 162, 163, 175, 181, 183, 185, 186,
	229, 230, 242, 262, 275, 276, 277, 178, 171, 256,
	172, 195, 173, 153, 264, 174, 154, 243, 280, 0,
	191, 252, 216, 155, 215, 244, 279, 278, 304, 310,
	311, 315, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 309, 189,
	150, 292, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 308, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 200, 241, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 290, 302, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 317, 225, 226, 227,
	228, 192, 0, 169, 320, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 188, 194,
	0, 196, 168, 240, 190, 299, 203, 0, 232, 199,
	265, 204, 210, 253, 298, 238, 258, 166, 289, 266,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 208, 0, 249, 187, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 0, 1325, 0, 0, 305, 306, 307, 291,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 267, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 272, 287, 165, 263, 300, 170,
	270, 161, 236, 259, 0, 0, 158, 285, 269, 218,
	201, 202, 157, 0, 254, 180, 193, 177, 234, 0,
	284, 312, 176, 303, 0, 295, 160, 0, 294, 233,
	281, 286, 219, 213, 159, 283, 217, 212, 205, 184,
	0, 197, 245, 211, 246, 198, 223, 222, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 206,
	0, 0, 0, 313, 0, 257, 239, 0, 0, 0,
	255, 209, 282, 247, 288, 273, 296, 251, 248, 152,
	274, 179, 220, 162, 163, 175, 181, 183, 185, 186,
	229, 230, 242, 262, 275, 276, 277, 178, 171, 256,
	172, 195, 173, 153, 264, 174, 154, 243, 280, 0,
	191, 252, 216, 155, 215, 244, 279, 278, 304, 310,
	311, 315, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 309, 189,
	150, 292, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 308, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 200, 241, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 290, 302, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 317, 225, 226, 227,
	228, 192, 0, 169, 320, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 188, 194,
	0, 196, 168, 240, 190, 299, 203, 0, 232, 199,
	265, 204, 210, 253, 298, 238, 258, 166, 289, 266,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 208, 0, 249, 187, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 237, 0, 0, 0, 305, 306, 307, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 267,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 272, 287, 165, 263,
	300, 170, 270, 161, 236, 259, 0, 0, 158, 285,
	269, 218, 201, 202, 157, 0, 254, 180, 193, 177,
	234, 0, 284, 312, 176, 303, 0, 295, 160, 0,
	294, 233, 281, 286, 219, 213, 159, 283, 217, 212,
	205, 184, 0, 197, 245, 211, 246, 198, 223, 222,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 1308, 0, 0, 0, 271, 0,
	0, 206, 0, 0, 0, 313, 0, 257, 239, 0,
	0, 0, 255, 209, 282, 247, 288, 273, 296, 251,
	248, 152, 274, 179, 220, 162, 163, 175, 181, 183,
	185, 186, 229, 230, 242, 262, 275, 276, 277, 178,
	171, 256, 172, 195, 173, 153, 264, 174, 154, 243,
	280, 0, 191, 252, 216, 155, 215, 244, 279, 278,
	304, 310, 311, 315, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	309, 189, 150, 292, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 308, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 200, 241, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 290, 302, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 317, 225,
	226, 227, 228, 192, 0, 169, 320, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	188, 194, 0, 196, 168, 240, 190, 299, 203, 0,
	232, 199, 265, 204, 210, 253, 298, 238, 258, 166,
	289, 266, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 208, 0, 249, 187, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 237, 0, 0, 0, 305, 306,
	307, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 267, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 272, 287,
	165, 263, 300, 170, 270, 161, 236, 259, 0, 0,
	158, 285, 269, 218, 201, 202, 157, 0, 254, 180,
	193, 177, 234, 0, 284, 312, 176, 303, 0, 295,
	160, 0, 294, 233, 281, 286, 219, 213, 159, 283,
	217, 212, 205, 184, 0, 197, 245, 211, 246, 198,
	223, 222, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 206, 0, 0, 0, 313, 0, 257,
	239, 0, 0, 0, 255, 209, 282, 247, 288, 273,
	296, 251, 248, 152, 274, 179, 220, 162, 163, 175,
	181, 183, 185, 186, 229, 230, 242, 262, 275, 276,
	277, 178, 171, 256, 172, 195, 173, 153, 264, 174,
	154, 243, 280, 0, 191, 252, 216, 155, 215, 244,
	279, 278, 304, 310, 311, 315, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 309, 189, 150, 292, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 308, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 200, 241,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 290, 302, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	317, 225, 226, 227, 228, 192, 0, 169, 320, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 188, 194, 0, 196, 168, 240, 190, 299,
	203, 0, 232, 199, 265, 204, 210, 253, 298, 238,
	258, 166, 289, 266, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 151, 0, 208, 0, 249, 187,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 237, 0, 0, 0,
	305, 306, 307, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 267, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 0, 284, 312, 176, 303,
	0, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 0, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 313,
	0, 257, 239, 0, 0, 0, 255, 209, 282, 247,
	288, 273, 296, 346, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 308,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 293, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 317, 225, 226, 227, 228, 192, 0, 169,
	320, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 208, 0,
	249, 187, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 237, 0,
	0, 0, 305, 306, 307, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 267, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 272, 287, 165, 263, 300, 170, 270, 161,
	236, 259, 0, 0, 158, 285, 269, 218, 201, 202,
	157, 0, 254, 180, 193, 177, 234, 0, 284, 312,
	176, 303, 0, 295, 160, 0, 294, 233, 281, 286,
	219, 213, 159, 283, 217, 212, 205, 184, 0, 197,
	245, 211, 246, 198, 223, 222, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 297, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 206, 0, 0,
	0, 313, 0, 257, 239, 0, 0, 0, 255, 209,
	282, 247, 288, 273, 296, 251, 248, 152, 274, 179,
	220, 162, 163, 175, 181, 183, 185, 186, 229, 230,
	242, 262, 275, 276, 277, 178, 171, 256, 172, 195,
	173, 153, 264, 174, 154, 243, 280, 0, 191, 252,
	216, 155, 215, 244, 279, 278, 304, 310, 311, 315,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 309, 189, 150, 292,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 308, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 200, 241, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 290,
	302, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 317, 225, 226, 227, 228, 192,
	0, 169, 320, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 188, 194, 0, 196,
	168, 240, 190, 299, 203, 0, 232, 199, 265, 204,
	210, 253, 298, 238, 258, 166, 289, 266, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	208, 0, 249, 187, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	237, 0, 0, 0, 305, 306, 307, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 182, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 267, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 272, 287, 165, 263, 300, 170,
	270, 161, 236, 259, 0, 0, 158, 285, 269, 218,
	201, 202, 157, 0, 254, 180, 193, 177, 234, 0,
	284, 312, 176, 303, 0, 295, 160, 0, 294, 233,
	281, 286, 219, 213, 159, 283, 217, 212, 205, 184,
	0, 197, 245, 211, 246, 198, 223, 222, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 206,
	0, 0, 0, 313, 0, 257, 239, 0, 0, 0,
	255, 209, 282, 247, 288, 273, 296, 251, 248, 152,
	274, 179, 220, 162, 163, 175, 181, 183, 185, 186,
	229, 230, 242, 262, 275, 276, 277, 178, 171, 256,
	172, 195, 173, 153, 264, 174, 154, 243, 280, 0,
	191, 252, 216, 155, 215, 244, 279, 278, 304, 310,
	311, 315, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 309, 189,
	150, 292, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 308, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 200, 241, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 290, 302, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 317, 225, 226, 227,
	228, 192, 0, 169, 320, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 188, 194,
	0, 196, 168, 240, 190, 299, 203, 0, 232, 199,
	265, 204, 210, 253, 298, 238, 258, 166, 289, 266,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 208, 0, 249, 187, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 237, 0, 0, 0, 305, 306, 307, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 267,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 272, 287, 165, 263,
	300, 170, 270, 161, 236, 259, 0, 0, 158, 285,
	269, 218, 201, 202, 157, 0, 254, 180, 193, 177,
	234, 0, 284, 312, 176, 303, 0, 295, 160, 0,
	294, 233, 281, 286, 219, 213, 159, 283, 217, 212,
	205, 184, 0, 197, 245, 211, 246, 198, 223, 222,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 206, 0, 0, 0, 313, 0, 257, 239, 0,
	0, 0, 255, 209, 282, 247, 288, 273, 296, 251,
	248, 152, 274, 179, 220, 162, 163, 175, 181, 183,
	185, 186, 229, 230, 242, 262, 275, 276, 277, 178,
	171, 256, 172, 195, 173, 153, 264, 174, 154, 243,
	280, 0, 191, 252, 216, 155, 215, 244, 279, 278,
	304, 310, 311, 315, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	309, 189, 150, 292, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 308, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 200, 241, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 290, 302, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 317, 225,
	226, 227, 228, 192, 0, 169, 320, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	188, 194, 0, 196, 168, 240, 190, 299, 203, 0,
	232, 199, 265, 204, 210, 253, 298, 238, 258, 166,
	289, 266, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 208, 0, 249, 187, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 237, 0, 0, 0, 305, 306,
	307, 291, 0, 0, 0, 0, 1367, 0, 0, 0,
	0, 182, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 267, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 901, 902, 903, 1369, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 272, 287,
	165, 263, 300, 170, 270, 161, 236, 259, 0, 0,
	158, 285, 269, 218, 201, 202, 157, 0, 254, 180,
	193, 177, 234, 0, 284, 312, 176, 303, 0, 295,
	160, 0, 294, 233, 281, 286, 219, 213, 159, 283,
	217, 212, 205, 184, 0, 197, 245, 211, 246, 198,
	223, 222, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 206, 0, 0, 0, 313, 0, 257,
	239, 0, 0, 0, 255, 209, 282, 247, 288, 273,
	296, 251, 248, 152, 274, 179, 220, 162, 163, 175,
	181, 183, 185, 186, 229, 230, 242, 262, 275, 276,
	277, 178, 171, 256, 172, 195, 173, 153, 264, 174,
	154, 243, 280, 0, 191, 252, 216, 155, 215, 244,
	279, 278, 304, 310, 311, 315, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 309, 189, 150, 292, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 308, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 200, 241,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 290, 302, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	317, 225, 226, 227, 228, 192, 0, 169, 320, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 188, 194, 0, 196, 168, 240, 190, 299,
	203, 0, 232, 199, 265, 204, 210, 253, 298, 238,
	258, 166, 289, 266, 214, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 267, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 208, 0, 249, 187,
	0, 0, 0, 901, 902, 903, 1369, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 306, 307, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 272,
	287, 165, 263, 300, 170, 270, 161, 236, 259, 0,
	0, 158, 285, 269, 218, 201, 202, 157, 0, 254,
	180, 193, 177, 234, 0, 284, 312, 176, 303, 0,
	295, 160, 0, 294, 233, 281, 286, 219, 213, 159,
	283, 217, 212, 205, 184, 0, 197, 245, 211, 246,
	198, 223, 222, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 206, 0, 0, 0, 313, 0,
	257, 239, 0, 0, 0, 255, 209, 282, 247, 288,
	273, 296, 251, 248, 152, 274, 179, 220, 162, 163,
	175, 181, 183, 185, 186, 229, 230, 242, 262, 275,
	276, 277, 178, 171, 256, 172, 195, 173, 153, 264,
	174, 154, 243, 280, 0, 191, 252, 216, 155, 215,
	244, 279, 278, 304, 310, 311, 315, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 309, 189, 150, 292, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 308, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 200,
	241, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 290, 302, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 317, 225, 226, 227, 228, 192, 0, 169, 320,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 188, 194, 0, 196, 168, 240, 190,
	299, 203, 0, 232, 199, 265, 204, 210, 253, 298,
	238, 258, 166, 289, 266, 214, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 267, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 208, 0, 249,
	187, 0, 0, 0, 901, 902, 903, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	272, 287, 165, 263, 300, 170, 270, 161, 236, 259,
	0, 0, 158, 285, 269, 218, 201, 202, 157, 0,
	254, 180, 193, 177, 234, 0, 284, 312, 176, 303,
	0, 295, 160, 0, 294, 233, 281, 286, 219, 213,
	159, 283, 217, 212, 205, 184, 0, 197, 245, 211,
	246, 198, 223, 222, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 206, 0, 0, 0, 313,
	0, 257, 239, 0, 0, 0, 255, 209, 282, 247,
	288, 273, 296, 251, 248, 152, 274, 179, 220, 162,
	163, 175, 181, 183, 185, 186, 229, 230, 242, 262,
	275, 276, 277, 178, 171, 256, 172, 195, 173, 153,
	264, 174, 154, 243, 280, 0, 191, 252, 216, 155,
	215, 244, 279, 278, 304, 310, 311, 315, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 309, 189, 150, 292, 0, 235,
	992, 993, 994, 991, 0, 0, 0, 0, 231, 308,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	200, 241, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 268, 290, 302, 319,
	0, 0, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 293, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 317, 225, 226, 227, 228, 192, 0, 169,
	320, 250, 0, 0, 0, 1448, 0, 0, 0, 0,
	0, 1323, 0, 314, 188, 194, 0, 196, 168, 240,
	190, 299, 203, 0, 232, 199, 265, 204, 210, 253,
	298, 238, 258, 166, 289, 266, 214, 0, 2480, 105,
	0, 30, 95, 77, 0, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 1827, 89, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 151, 0, 208, 0,
	249, 187, 0, 1847, 1851, 1853, 1855, 1857, 1858, 1860,
	57, 1864, 1861, 1862, 1863, 0, 102, 1842, 1843, 1844,
	1845, 1825, 1826, 1848, 0, 1828, 0, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1840, 1846, 0,
	0, 0, 305, 306, 307, 291, 1850, 1852, 1854, 1856,
	1859, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1444, 0, 0, 1441, 0, 0,
	0, 1443, 1440, 1442, 1446, 1447, 0, 0, 0, 1445,
	1841, 0, 0, 0, 96, 97, 1323, 98, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 2058, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 2039, 2041, 2043, 1323,
	2045, 2046, 2047, 2049, 2050, 2051, 2053, 2054, 2055, 2056,
	0, 76, 94, 103, 0, 55, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 88, 87, 0, 0, 2040, 0, 35, 2059,
	2141, 0, 0, 0, 0, 0, 0, 0, 0, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1451, 1452, 1453, 1454, 1455, 1456, 1449, 1450, 366, 0,
	365, 372, 362, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 0, 371, 375, 0, 0, 357,
	0, 2036, 0, 0, 0, 90, 91, 0, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 2052,
	0, 0, 0, 0, 0, 0, 2042, 2048, 384, 65,
	2066, 385, 0, 92, 0, 66, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 2039, 2041, 2043, 2076, 2045, 2046, 2047, 2049, 2050,
	2051, 2053, 2054, 2055, 2056, 0, 0, 2069, 1849, 2044,
	0, 0, 0, 2064, 0, 0, 0, 0, 2078, 2079,
	2048, 0, 0, 0, 2065, 0, 0, 67, 0, 0,
	0, 0, 0, 0, 2059, 0, 68, 0, 0, 0,
	2037, 0, 0, 0, 2039, 2041, 2043, 0, 2045, 2046,
	2047, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 0, 2070,
	0, 0, 0, 366, 0, 365, 372, 362, 0, 2057,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 0,
	371, 375, 0, 0, 357, 0, 2036, 2059, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	358, 360, 359, 0, 78, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 2052, 366, 0, 365, 372, 362,
	368, 2042, 2057, 384, 0, 0, 385, 383, 0, 369,
	370, 0, 371, 375, 361, 0, 357, 0, 352, 2036,
	0, 0, 0, 0, 0, 2077, 380, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2052, 0, 0,
	0, 0, 2072, 0, 2042, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2071, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 367, 373, 0, 374, 376, 0, 0,
	377, 378, 379, 0, 0, 381, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 360, 359, 2080, 0,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 368, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 360, 359,
	0, 0, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 367, 373,
	0, 374, 376, 0, 0, 377, 378, 379, 0, 0,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	367, 373, 0, 374, 376, 0, 0, 377, 378, 379,
	0, 0, 381, 382,
}

var yyPact = [...]int{
	22699, -1000, -313, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20568, -1000, -1000, 1473, -1000, 20096, 8276, 21040, 77, 21040,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 302, -1000, 19624, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 249, 22948, 166, 164, -295,
	-1000, 1965, -1000, -1000, -1000, -1000, 173, 369, 19152, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1999, 22, 369, 402, 416, 419, 419,
	9692, 1965, 220, 87, -1000, 760, 22699, 231, 21040, -1000,
	819, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1965, 1965, -1000, 21040, 21040, -59,
	910, -1000, 211, 206, 193, 811, -1000, -1000, -1000, -1000,
	1996, -1000, 21040, 1697, 21040, -1000, 1252, 202, 23103, 1830,
	694, 361, 1713, -1000, -1000, 1685, -1000, 26, 81, 56,
	135, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 70, -1000,
	1873, -1000, -1000, 25, -1000, -1000, 23, -1000, -1000, -1000,
	-104, -1000, -1000, -1000, -1000, -1000, -177, -177, 793, -1000,
	1684, 1803, 1874, 1519, 1963, 1886, 1880, 1876, 1872, 19,
	218, 218, 218, 286, 218, 298, -1000, -1000, -1000, -1000,
	-1000, -1000, 358, -1000, -1000, -1000, -1000, 607, 21040, -1000,
	1532, 1898, 213, 858, 205, 215, 1874, 1874, -90, -120,
	858, 858, -120, 48, -1000, -1000, -1000, 952, 209, 952,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1879, 1875, 249,
	249, 265, -1000, -200, -1000, -1000, 407, -1000, 385, -1000,
	1252, 201, 195, 626, 992, -1000, 869, 21040, 21040, 21040,
	869, 869, 11592, 11120, 810, -1000, 1874, 1519, -1000, 1462,
	1800, 1519, 249, 249, 249, 249, 249, 249, 249, 21040,
	5848, 5848, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	212, 1679, -1000, 21040, 1874, 1803, 1874, -1000, -1000, 804,
	1238, 1356, -1000, -1000, 211, 866, -1000, 699, -1000, -1000,
	-1000, -1000, 21040, 199, -1000, 1343, 1677, -1000, 301, 510,
	738, -1000, 45, 23155, 16312, 1252, 16312, 21040, -1000, -1000,
	-1000, -1000, -1000, -1000, -106, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -66, -1000,
	-66, 1874, -295, 4874, -1000, -298, 1803, 6332, -1000, -1000,
	6332, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 289,
	218, -1000, 1313, 939, 16312, 1252, 1249, 21040, 218, 265,
	-1000, 21040, 607, 1860, 21040, 16312, 952, 1979, 7784, 952,
	-1000, -1000, -1000, 858, 858, -1000, -1000, -1000, -1000, 952,
	952, -1000, -1000, -115, 1979, 1979, -125, 21040, 21040, 218,
	21040, -1000, -1000, -1000, -1000, 21040, -1000, -1000, 1313, 16312,
	13480, -1000, -170, 399, 381, 393, -1000, -1000, 296, 292,
	10648, 246, 16312, 3906, -1000, -1000, 869, 869, 869, 3906,
	3906, 779, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21040,
	1803, -1000, -1000, -1000, -1000, 1313, 16312, 1252, 21040, 21040,
	21040, 22294, -1000, 606, -1000, -1000, 9220, 802, 6332, -1000,
	1189, 1676, -1000, -1000, 1675, 1669, 1668, 1664, 1655, 1653,
	1652, -1000, 1488, -1000, -1000, 1651, 1649, 1644, 1643, -1000,
	-1000, -1000, -1000, -1000, -1000, 1642, -1000, -1000, -1000, 1641,
	1488, -1000, -1000, 1639, 1632, 1630, 1629, 1625, -1000, -1000,
	-1000, 1353, -1000, -1000, -1000, 1352, 1351, 1623, 1066, -1000,
	-1000, -1000, -1000, 3422, 7784, 7784, 7784, 7784, -1000, -1000,
	1555, 6332, 1622, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7300, -1000, 1621, 1616, 1615, 1604, 1603, 1602, 1488, 1601,
	1599, 1598, 7784, 1597, 1596, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 606, 1710, -296,
	-1000, 10176, 21040, 21040, -1000, 1803, -1000, 1803, 2493, -1000,
	1896, -1000, 211, 108, -1000, -1000, -1000, -1000, -1000, -1000,
	766, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	530, -1000, 21040, -1000, -1000, 45, 16312, 889, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 99, -1000, -1000, 122, -1000,
	282, -37, 864, -1000, -1000, 21, 119, 21, -1000, -1000,
	860, -1000, 1115, -1000, 758, 1346, -1000, 724, 498, -1000,
	1275, 18680, 21040, -15, -1000, 1829, 593, -1000, -37, 447,
	1694, -1000, -1000, -1000, 1761, 21040, 18208, -1000, 1588, 848,
	-1000, 1689, 21040, -1000, 6332, -1000, 21040, 1979, 1979, 858,
	22294, 952, 21040, 952, -1000, -1000, 952, -1000, 757, -1000,
	21040, -1000, -1000, -1000, -1000, -15, 593, 1946, 693, -1000,
	-1000, -1000, -1000, 1836, 21512, 21512, 220, 1587, -1000, -1000,
	386, 379, 388, -1000, -1000, 277, -1000, -1000, 447, -1000,
	-1000, -1000, 1585, 909, -1000, -1000, 7784, -1000, 3906, 3906,
	3906, -1000, -1000, 13952, -1000, -1000, -1000, 496, 447, 1709,
	466, -1000, 466, -1000, -1000, -1000, 1979, 5848, -1000, 13480,
	-1000, 6332, 6332, 6332, 6332, -1000, 17728, -1000, 17256, -1000,
	342, 6816, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6332,
	1866, 1866, 1866, 6332, 955, 6332, 6332, -1000, 1065, 8410,
	1866, 1866, 1866, 1866, 1866, -1000, 2930, 1866, 1866, 1866,
	1866, -1000, -1000, -1000, 6332, 7784, 7784, 7784, 7784, 7784,
	7784, 7784, 7784, 7784, 7784, 7784, 7784, 1552, 925, 7784,
	7784, 7784, 1800, 1895, 465, -1000, -1000, -1000, -1000, -1000,
	894, 1115, 6332, 22510, 6332, 6332, 21040, 6332, -1000, 1460,
	1459, -1000, -1000, 6332, 6332, 7784, -1000, 1866, 1337, 1979,
	-1000, 1794, 448, -1000, 1584, -1000, 846, 1765, -1000, 756,
	423, -1000, 908, 842, -1000, -1000, -1000, -1000, 754, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -60, -1000,
	-1000, 21040, 1343, 837, 889, 453, -1000, 275, 751, 749,
	-1000, 16312, 24, 16312, -1000, 16312, -1000, -1000, 197, -1000,
	21040, 1802, -1000, -1000, -1000, 1336, 1799, 4874, -1000, 21040,
	-129, 6332, 6332, 6332, 1715, -1000, -1000, 1532, 938, 1560,
	-86, 878, -1000, 383, 16312, 192, -1000, 1708, 191, -1000,
	1761, -1000, 628, -1000, 1558, 21040, 600, -1000, 748, 22699,
	-1000, 21040, -1000, 1252, 858, 1115, 1979, -1000, -1000, 1979,
	-1000, 858, -1000, 858, 952, 21040, -1000, -86, 383, 21040,
	13480, 13480, 13480, 13480, -1000, 1741, 1738, -1000, 1737, 1735,
	1759, 21040, 13480, 21040, -1000, -1000, -1000, 21903, -1000, -1000,
	-1000, -1000, -1000, 1457, 1965, 16784, -1000, -1000, -1000, 376,
	16312, 1335, 246, -1000, -1000, -1000, -1000, -1000, 21040, 21040,
	1977, -1000, 457, 1797, -1000, 933, 933, 942, -1000, -1000,
	747, -1000, -1000, 431, -1000, -1000, -1000, -1000, 1555, -1000,
	-1000, -1000, 1451, 445, 1115, 6332, -1000, -1000, 6332, 6332,
	1310, 6332, 1434, 834, 832, -1000, 1424, 1989, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 6332, 6332, 6332,
	6332, 6332, 1302, 5364, -1000, -1000, -1000, 6332, 6332, 6332,
	6332, 1423, 1106, 2806, -1000, 1026, 1026, 759, 759, 759,
	759, 759, 1004, 1004, -1000, -1000, -1000, 3422, 1552, 7784,
	7784, 7784, 222, 2010, 2057, -1000, 6332, 924, -1000, 6332,
	769, -1000, 1422, 1197, 1420, 1417, 1416, -1000, -1000, 687,
	1413, 988, 6332, 454, 1977, 967, -296, 4874, 217, 21040,
	-296, 21040, 21040, 4874, -1000, 21040, 2493, 1236, -1000, -1000,
	-1000, 1981, 16312, 1252, 849, 852, -1000, 15, -1000, 97,
	278, 1332, -1000, 293, 904, 279, -1000, 730, -92, -70,
	1115, 1115, -1000, -1000, 1776, 1835, 1807, 8748, 989, -1000,
	-1000, 1331, -1000, 258, -1000, -1000, -1000, 315, 35, 1235,
	255, -1000, 1305, 21040, -1000, -1000, -1000, -1000, -1000, 878,
	878, 878, 8748, 231, 670, 719, 13480, 21040, -1000, 15368,
	1410, -1000, 447, 1979, -1000, -1000, 1979, 1979, 858, -1000,
	989, 258, 662, -1000, 900, 1692, 1705, 1692, -1000, -1000,
	-1000, -1000, 1734, -1000, 1725, -1000, -1000, 662, -1000, 1532,
	-1000, -1000, 830, 829, -1000, 453, 1409, -1000, -1000, -1000,
	-1000, 1974, 1962, 15840, -1000, -1000, -1000, -1000, -1000, -1000,
	6332, 1869, 1865, 1858, 1085, 827, -1000, -1000, -1000, -1000,
	6332, 1823, 1781, 1770, 1755, 1712, -1000, 6332, 6332, 1126,
	1693, 1657, 1647, 1637, -1000, 808, -1000, 222, 2010, 1937,
	-1000, 7784, 7784, 1611, 839, -1000, 6332, 951, 789, 12536,
	-1000, 6332, -1000, -1000, -1000, -1000, 12536, -1000, 7784, 1582,
	1325, 1974, 2005, -1000, 1401, 452, -296, -1000, -1000, 448,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1252,
	-1000, 74, -1000, -1000, -1000, -1000, -1000, -1000, -50, -1000,
	21040, 1324, 21040, 21040, -300, -69, 1961, 1958, -1000, -1000,
	220, 21040, 1399, 449, -1000, -1000, -1000, 22605, 529, -1000,
	21040, 963, 409, 218, 409, 962, 1551, -1000, -1000, -1000,
	1315, -38, -1000, -1000, 1314, 1312, 1224, -1000, -1000, 1231,
	653, -22, -1000, -1000, -1000, -1000, -1000, -1000, 1550, 12536,
	13008, 1311, 1397, 21512, 13480, 15368, 559, -1000, 714, -1000,
	-1000, -1000, -1000, -1000, 1979, -1000, -1000, 1971, 21040, 4874,
	-1000, -1000, 6332, 1549, -1000, 6332, -1000, -1000, -1000, -1000,
	-1000, -1000, 1309, -1000, 1304, -1000, -1000, 6332, 6332, -1000,
	-1000, 1115, -1000, -1000, -1000, 1391, -1000, 365, 365, -5,
	-1000, -1000, -1000, 1514, -1000, 1536, 1536, 1514, 1514, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1548, 1543,
	-1000, -1000, 1514, 1534, 1534, 1514, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1540, 1540, 1541, 1540, -1000, 1568, -1000, -1000, -1000,
	-1000, -1000, 1521, 1486, 6332, -1000, -1000, -1000, -1000, -1000,
	-1000, 7784, -1000, -1000, -1000, -1000, 1115, 6332, 1389, -1000,
	1514, 1536, -1000, 1514, 1534, 1514, 365, 365, 1385, 1250,
	1380, 1762, -1000, 1378, -1000, 21040, -1000, 448, 447, -1000,
	-1000, -125, 54, -125, -302, 1300, -1000, 1957, 1298, 1254,
	-1000, 1532, 22849, 8748, 22980, -1000, -1000, 21040, 21040, -1000,
	21040, 21040, 218, 6332, -1000, -1000, 182, -1000, -1000, 53,
	-1000, -1000, 1230, 285, -1000, 14896, -1000, -1000, -1000, -1000,
	-1000, -66, 1979, 559, 714, -1000, -1000, 841, -1000, 1874,
	-1000, -1000, 1115, 21040, 1115, 807, 805, 1115, 445, -1000,
	-1000, -1000, -1000, -1000, -10, -1000, -1000, -1000, -1000, 1207,
	-1000, 1196, -1000, -1000, -1000, 1296, 1296, -1000, -1000, 1178,
	-1000, -1000, -1000, 1176, -1000, -1000, 1168, -1000, -1000, -1000,
	-1000, 1479, -1000, 1115, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 6332, -1000, -1000, -1000, 423, -1000,
	-94, -75, -1000, 1288, -1000, -304, 1162, -1000, 1286, -81,
	-1000, -1000, 1824, 229, 22796, -1000, 878, 878, 632, 878,
	878, 878, 878, 162, 142, 878, 878, 878, 878, 878,
	878, 878, 878, 878, 878, 878, 878, 878, 878, 1531,
	-1000, -1000, 22980, -1000, -1000, 977, 7784, -1000, -1000, 1284,
	13008, 380, 482, 1530, -1000, 117, 2004, 959, 958, -1000,
	21040, -1000, 1529, 1613, 88, 1525, -1000, 1518, 1515, 21040,
	1471, 276, 1283, -1000, -1000, 52, -1000, -1000, 799, -1000,
	1514, 6332, -1000, -125, 1971, -1000, -1000, 796, -1000, 979,
	-1000, 973, -1000, -1000, 1377, 1376, 787, -1000, 786, 1374,
	781, 778, -1000, 1453, 230, -84, -75, -1000, 1933, -88,
	1932, 1927, 899, -1000, 1508, -1000, -1000, 1925, 220, -1000,
	1924, 22849, -1000, 1143, 1131, 878, 878, 1092, 1282, 1276,
	1274, 878, 878, 1086, 1272, 21903, 1083, 1080, 1076, 1229,
	1263, 515, 1205, 1077, 1062, 21040, 1506, 1251, -1000, -1000,
	2010, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1075, 1498, -169, -1000, -1000, 1493, 14896, 113,
	113, 14896, 14896, 14896, 1490, 299, -1000, -51, -1000, -1000,
	-1000, 14896, 1798, 1345, -1000, 1874, -1000, 1373, 1372, 1371,
	1366, -1000, -1000, -1000, 1262, -1000, -1000, -1000, 1067, -1000,
	1060, -1000, 1489, 1056, -69, 1919, -1000, 1254, 1907, 1254,
	1254, 1261, 21040, 1254, -1000, 102, -1000, -1000, -1000, 12536,
	12536, -1000, -1000, -1000, -1000, 1258, 1256, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 176,
	21040, 777, -1000, 898, 1364, 6332, 1488, -225, 14896, 775,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 770, 767, 762,
	14896, -1000, -1000, -1000, 115, -1000, 138, -1000, -1000, 1798,
	-1000, -1000, -1000, -1000, -1000, -1000, 1363, 1350, 1862, 12064,
	-97, -1000, 1255, -1000, 1254, -1000, -1000, -317, 752, -1000,
	-1000, 105, 203, 184, -1000, 272, -1000, -1000, -1000, -1000,
	-1000, -1000, 179, 740, -1000, 1251, 1202, -1000, 1213, -1000,
	1703, -1000, 7, 735, -1000, -1000, -1000, -1000, 731, -1000,
	-1000, 878, 1064, 75, -1000, -1000, -1000, -1000, -1000, -1000,
	21040, -1000, 722, -1000, -1000, -1000, 704, -1000, -1000, -1000,
	-1000, -1000, -1000, 21040, 94, 995, 7784, 1485, 7784, 1484,
	109, 1483, -1000, -1000, -1000, -1000, -1000, 299, -1000, 1701,
	1699, 1995, -1000, -1000, -1000, -1000, 138, 138, 138, 138,
	12, 993, -1000, 1249, 422, -1000, 876, -1000, 14424, 21040,
	-1000, 1474, 1902, -1000, 1523, 21040, 1392, 21040, 1467, 872,
	7784, -1000, -1000, 1997, -1000, 2000, 450, 450, -1000, -1000,
	-1000, 21040, 4390, -1000, 669, -1000, 223, 103, -1000, 695,
	-1000, 679, 21040, 991, 1078, -1000, -1000, -1000, 1059, 134,
	-1000, -1000, -1000, 1115, 21040, 652, -1000, 1278, 92, -1000,
	-1000, 646, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 223,
	1752, -1000, 990, -1000, -1000, 22641, 325, -1000, -1000, 22641,
	89, -1000, 196, 1464, -1000, -1000, 638, -1000, 1253, 446,
	6332, -1000, 89, 22849, -1000, 6332, 493, -1000, 22849, 476,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 122, 2361, 187, 138, 136, 186, 2360, 2359, 1902,
	1901, 2358, 2356, 2355, 2354, 2353, 2352, 2351, 2350, 2349,
	2348, 2347, 2343, 2342, 2341, 2340, 2339, 2337, 185, 2336,
	2335, 2334, 2333, 2332, 2331, 2330, 2329, 2327, 2326, 2325,
	2323, 2322, 2320, 2319, 2318, 134, 2317, 1896, 2315, 2314,
	2313, 2312, 2309, 176, 2308, 2307, 2306, 2302, 2301, 2300,
	2299, 2298, 2296, 2295, 2294, 2293, 2292, 2290, 2289, 2288,
	183, 165, 64, 2285, 52, 48, 107, 206, 61, 214,
	207, 147, 80, 124, 177, 119, 2284, 2283, 116, 2282,
	24, 2281, 129, 2280, 123, 44, 29, 191, 104, 65,
	71, 100, 2278, 2277, 87, 2276, 2275, 102, 2274, 67,
	2273, 83, 32, 93, 26, 2272, 2270, 2269, 91, 2266,
	2265, 2264, 2263, 89, 2262, 70, 56, 2261, 2260, 2259,
	2258, 2256, 27, 2252, 53, 2250, 2249, 2248, 2247, 2246,
	2245, 2244, 11, 14, 16, 2243, 13, 2, 2242, 171,
	59, 90, 106, 2239, 397, 2238, 2237, 2232, 121, 2231,
	144, 2230, 2229, 2228, 2225, 2223, 10, 2222, 54, 2221,
	2220, 2216, 57, 170, 159, 2215, 2213, 110, 39, 51,
	108, 2212, 2211, 85, 166, 15, 46, 0, 157, 43,
	2210, 2209, 2207, 204, 154, 153, 178, 114, 275, 131,
	2206, 2205, 55, 2196, 125, 2191, 72, 45, 2190, 94,
	2188, 35, 92, 2186, 113, 2185, 145, 1, 112, 28,
	167, 2184, 2171, 2170, 126, 2167, 2164, 74, 140, 2163,
	2162, 2161, 25, 2160, 34, 17, 2159, 86, 2158, 194,
	2157, 148, 97, 130, 128, 120, 173, 179, 78, 118,
	1016, 117, 88, 19, 2155, 175, 2154, 232, 174, 149,
	2153, 184, 341, 163, 2152, 142, 7, 2151, 2147, 8,
	2146, 22, 2145, 2143, 2142, 2141, 6, 2139, 2138, 2123,
	4, 3, 2122, 5, 115, 47, 73, 2121, 75, 77,
	2120, 2116, 2115, 2114, 2111, 282, 2095, 2087, 2085, 2084,
	2083, 2082, 2080, 2079, 84, 41, 2078, 2077, 2076, 2075,
	76, 105, 2074, 286, 161, 2073, 42, 2072, 2070, 23,
	2069, 30, 2068, 2067, 2066, 18, 143, 2065, 2064, 20,
	2051, 2049, 9, 12, 2048, 2047, 66, 50, 33, 82,
	81, 2046, 21, 69, 103, 2045, 2044, 150, 2043, 111,
	2042, 132, 180, 238, 2040, 162, 2039, 2038, 2036, 2035,
	2034, 2033, 2032, 1040, 2031, 2028, 181, 60, 172, 2027,
	2026, 158, 2024, 127, 99, 96, 160, 2023, 156, 2022,
	2021, 182, 152, 2020, 2019,
}

//line mysql_sql.y:7711
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 379, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 62, 61, 335,
	335, 334, 334, 333, 333, 332, 332, 332, 331, 331,
	331, 330, 330, 329, 329, 328, 328, 326, 326, 327,
	325, 324, 324, 324, 322, 322, 320, 320, 321, 321,
	315, 315, 318, 318, 316, 316, 316, 316, 319, 314,
	314, 314, 313, 313, 60, 60, 60, 252, 252, 59,
	59, 265, 265, 265, 265, 265, 263, 263, 263, 263,
	263, 263, 262, 262, 261, 261, 266, 266, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 54, 54,
	54, 54, 57, 57, 57, 58, 260, 260, 260, 55,
	56, 56, 251, 251, 256, 256, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 259, 259,
	259, 258, 258, 257, 257, 48, 48, 48, 51, 50,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 49,
	49, 49, 49, 49, 49, 46, 46, 46, 46, 46,
	45, 45, 47, 47, 249, 249, 248, 65, 65, 65,
	65, 65, 65, 65, 64, 64, 67, 67, 66, 53,
	53, 53, 53, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 358, 358, 358, 360, 360, 191, 192, 380,
	190, 190, 190, 354, 354, 355, 356, 357, 357, 357,
	63, 7, 7, 43, 44, 378, 378, 295, 295, 204,
	204, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 298, 299, 200,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 34, 34, 238, 238, 33, 381, 381,
	174, 174, 32, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 42, 309, 309, 383, 383, 383, 40, 41,
	294, 294, 294, 38, 37, 36, 35, 35, 31, 31,
	30, 30, 197, 197, 199, 199, 195, 382, 382, 271,
	271, 198, 198, 29, 29, 29, 196, 196, 173, 194,
	194, 194, 8, 8, 6, 11, 11, 11, 11, 11,
	11, 11, 11, 17, 19, 246, 246, 243, 18, 14,
	13, 16, 12, 15, 5, 5, 5, 5, 9, 9,
	10, 83, 83, 113, 113, 367, 367, 363, 363, 364,
	364, 364, 365, 365, 366, 366, 4, 302, 302, 302,
	302, 302, 302, 303, 303, 343, 343, 343, 344, 103,
	103, 98, 98, 304, 304, 218, 345, 345, 312, 312,
	311, 311, 310, 310, 101, 101, 102, 102, 87, 87,
	71, 71, 317, 317, 317, 317, 323, 323, 292, 292,
	139, 139, 169, 169, 170, 170, 75, 75, 76, 76,
	76, 76, 76, 76, 351, 351, 353, 353, 352, 100,
	100, 96, 96, 97, 97, 97, 95, 95, 94, 93,
	93, 92, 90, 90, 90, 91, 91, 91, 78, 78,
	77, 77, 77, 77, 77, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 79, 79, 359,
	359, 359, 296, 296, 296, 301, 301, 151, 151, 152,
	152, 150, 150, 80, 80, 81, 81, 81, 81, 149,
	149, 148, 82, 82, 88, 84, 84, 86, 86, 86,
	86, 159, 159, 158, 158, 158, 158, 68, 69, 69,
	70, 106, 106, 157, 156, 156, 156, 105, 105, 104,
	104, 99, 99, 85, 85, 85, 155, 89, 89, 89,
	89, 89, 89, 89, 89, 384, 384, 153, 183, 183,
	183, 189, 189, 182, 182, 182, 182, 182, 193, 188,
	188, 184, 184, 185, 185, 185, 3, 3, 3, 3,
	23, 23, 23, 23, 27, 27, 361, 361, 20, 368,
	371, 369, 372, 372, 372, 373, 373, 373, 374, 374,
	21, 370, 375, 375, 375, 247, 247, 244, 245, 245,
	242, 241, 241, 241, 377, 377, 376, 376, 376, 186,
	186, 22, 237, 237, 239, 240, 240, 231, 231, 231,
	231, 26, 235, 235, 236, 236, 236, 236, 236, 232,
	232, 234, 234, 230, 230, 230, 230, 230, 25, 229,
	229, 227, 227, 225, 225, 226, 226, 224, 224, 224,
	228, 228, 24, 24, 73, 72, 72, 72, 74, 297,
	297, 267, 267, 270, 270, 277, 277, 278, 278, 276,
	276, 283, 283, 282, 282, 281, 281, 280, 280, 279,
	279, 279, 279, 274, 274, 273, 273, 268, 268, 268,
	268, 268, 269, 269, 272, 272, 275, 275, 130, 130,
	131, 131, 131, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 341, 341, 342, 133, 133, 133, 137, 137,
	137, 137, 137, 137, 132, 132, 134, 134, 114, 114,
	112, 112, 107, 107, 108, 108, 109, 109, 110, 110,
	111, 111, 111, 111, 111, 111, 254, 254, 339, 339,
	340, 340, 336, 336, 336, 338, 338, 338, 338, 338,
	337, 337, 115, 167, 167, 167, 187, 187, 187, 166,
	166, 166, 129, 129, 128, 128, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	253, 253, 201, 201, 202, 202, 146, 145, 145, 145,
	145, 145, 143, 144, 142, 142, 142, 142, 142, 141,
	141, 140, 140, 140, 233, 233, 138, 138, 136, 136,
	136, 135, 135, 135, 284, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 210,
	210, 215, 215, 350, 350, 349, 116, 116, 116, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 125, 125,
	125, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 308, 308, 308, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 165, 362, 362, 362, 346, 346, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 163, 163, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 219, 219, 220, 220, 305, 305, 305, 305,
	305, 305, 306, 306, 307, 307, 307, 307, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 208, 160, 160,
	160, 221, 216, 216, 217, 217, 211, 211, 211, 211,
	211, 211, 211, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 212, 212, 214, 214, 223, 223, 223,
	222, 222, 222, 222, 222, 222, 222, 127, 127, 127,
	127, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 118, 118, 118, 118, 122, 122, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 123, 123, 123, 123, 121, 121, 121, 121, 121,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 120, 168, 168, 285,
	285, 288, 288, 286, 286, 287, 289, 289, 289, 290,
	290, 290, 291, 291, 291, 293, 293, 172, 172, 172,
	179, 179, 171, 171, 180, 180, 181, 181, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 9, 9, 0,
	2, 1, 3, 3, 3, 1, 3, 5, 0, 2,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 0, 3, 3, 0, 3, 0, 3, 0, 3,
	0, 2, 1, 2, 3, 4, 3, 3, 1, 0,
	1, 1, 0, 1, 8, 5, 7, 0, 3, 8,
	5, 1, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 4, 1, 3, 1, 2,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 2,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 4, 6, 1, 1, 1, 2,
	4, 6, 1, 4, 1, 3, 3, 4, 4, 4,
	3, 3, 2, 4, 4, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 2,
	0, 1, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 2, 4, 3, 1,
	1, 1, 1, 2, 3, 4, 7, 2, 3, 3,
	4, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 7, 7, 0, 3, 0, 2, 0,
	1, 1, 1, 1, 4, 2, 2, 3, 3, 4,
	5, 3, 4, 4, 2, 2, 2, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 5, 0, 2, 7, 0, 1,
	0, 1, 4, 1, 1, 1, 3, 2, 3, 1,
	1, 1, 6, 0, 1, 1, 1, 1, 5, 5,
	0, 1, 1, 3, 3, 3, 6, 7, 4, 4,
	7, 8, 0, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 1, 3, 1, 1,
	3, 5, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 3, 1, 4, 6,
	4, 4, 4, 3, 1, 1, 2, 2, 11, 8,
	9, 1, 3, 2, 4, 0, 2, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 5, 2, 1, 5,
	4, 4, 2, 0, 5, 0, 1, 3, 3, 1,
	3, 1, 3, 1, 3, 4, 0, 1, 0, 1,
	1, 3, 1, 1, 0, 4, 1, 3, 2, 1,
	0, 8, 0, 4, 7, 4, 0, 2, 0, 2,
	0, 2, 0, 4, 1, 3, 1, 1, 4, 3,
	4, 5, 4, 5, 2, 3, 1, 3, 6, 0,
	3, 0, 1, 2, 4, 4, 0, 1, 3, 1,
	3, 3, 0, 1, 1, 0, 2, 2, 3, 3,
	1, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 7, 7, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 2, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 4, 4,
	3, 2, 2, 2, 3, 2, 3, 4, 1, 3,
	4, 0, 2, 1, 1, 2, 2, 0, 1, 2,
	4, 1, 3, 1, 4, 2, 3, 4, 6, 8,
	8, 4, 6, 8, 8, 0, 1, 2, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 11, 0, 1, 7, 1,
	4, 1, 3, 4, 3, 0, 1, 1, 0, 2,
	7, 1, 0, 2, 2, 1, 3, 2, 1, 3,
	2, 1, 3, 2, 0, 1, 3, 4, 3, 1,
	1, 4, 1, 3, 1, 1, 1, 0, 1, 1,
	1, 11, 0, 2, 3, 2, 3, 1, 1, 1,
	3, 3, 4, 0, 2, 2, 2, 2, 5, 1,
	1, 0, 3, 0, 1, 1, 2, 4, 4, 4,
	0, 1, 10, 9, 2, 2, 6, 10, 5, 0,
	1, 0, 6, 0, 4, 0, 3, 1, 3, 4,
	5, 0, 3, 1, 3, 2, 3, 1, 2, 0,
	4, 6, 5, 0, 2, 0, 2, 4, 5, 4,
	5, 1, 6, 5, 0, 3, 0, 1, 0, 1,
	1, 3, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 4, 1, 3, 3, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 1,
	7, 7, 7, 7, 8, 5, 0, 1, 0, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 1, 5, 6, 4,
	1, 2, 0, 1, 1, 2, 5, 0, 1, 1,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 3, 5, 2, 2, 2, 2, 1, 1, 2,
	5, 6, 6, 6, 1, 1, 1, 1, 1, 0,
	2, 0, 1, 1, 2, 4, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 5, 4, 4, 5, 5, 5, 5, 4, 5,
	5, 5, 5, 5, 5, 5, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 5, 4, 6, 6,
	7, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 4,
	2, 3, 2, 4, 6, 2, 2, 4, 6, 4,
	2, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -379, -2, -1, -3, -4, -5, -6, -8, -52,
	-64, -66, -67, -28, -7, -63, -45, -46, -48, -54,
	-59, -60, -61, -62, -68, -75, -23, -22, -21, -20,
	12, -9, -10, -351, -11, 229, -190, -191, -192, -380,
	-29, -30, -31, -35, -36, -37, -38, -40, -41, -42,
	-32, -33, -34, -44, -43, 206, -47, 61, -49, -50,
	-51, -55, -56, -57, -58, 320, 326, 378, 387, 46,
	-76, -78, -24, -25, -26, -27, 202, 14, 455, -12,
	-15, -13, -16, -14, -18, -19, -17, 224, 223, 37,
	286, 287, 324, 222, 203, 13, 135, 136, 138, 139,
	30, -77, 67, 204, -79, 10, 503, -87, 38, -112,
	-187, 70, -175, -178, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	302, 452, 241, 265, 268, 275, 135, 154, 148, 176,
	168, 143, 245, 246, 77, 138, 409, 87, 394, 375,
	141, 260, 262, 264, 267, 247, 164, 159, 259, 243,
	157, 248, 39, 249, 181, 250, 251, 457, 390, 301,
	396, 272, 373, 158, 391, 263, 393, 183, 187, 401,
	326, 152, 153, 398, 403, 180, 221, 42, 454, 233,
	404, 185, 179, 175, 412, 276, 274, 178, 151, 174,
	244, 50, 189, 188, 190, 369, 370, 371, 372, 252,
	253, 314, 400, 171, 160, 305, 144, 22, 407, 228,
	395, 327, 254, 269, 277, 184, 186, 235, 240, 456,
	377, 239, 273, 405, 156, 232, 261, 227, 408, 145,
	320, 329, 255, 139, 266, 402, 411, 49, 342, 150,
	142, 218, 136, 237, 242, 256, 257, 258, 279, 278,
	270, 172, 234, 177, 162, 149, 173, 137, 236, 410,
	343, 501, 303, 358, 170, 167, 238, 211, 406, 397,
	140, 362, 344, 165, 280, 498, 499, 500, 315, 300,
	281, 282, 163, 225, 389, 283, 285, 368, 293, 345,
	376, -47, -10, -9, -77, -78, -112, 209, -194, 23,
	373, -53, 374, 206, 67, -187, -5, -4, -45, -75,
	-193, -187, 286, -193, 209, -187, 239, 357, -295, 214,
	-262, -237, 240, -261, -239, -264, -240, 31, 202, 204,
	203, 236, 14, 324, 210, 12, 10, 325, 222, 24,
	25, 27, 13, 326, 328, 28, 329, 332, 333, 334,
	41, 337, 338, 229, 70, 73, 247, 247, -69, -70,
	496, -94, -95, -154, 19, 6, 7, 8, 9, -297,
	302, 358, 239, -231, -229, 283, 335, 219, 218, 88,
	416, 208, -363, -364, 199, 200, 201, -353, 448, -352,
	-187, 26, 209, -39, -309, -294, 397, 396, -198, 395,
	388, 399, 390, 202, 449, -172, 345, 376, 235, 413,
	414, 322, 377, 401, 402, 391, 87, 169, 166, 302,
	358, -363, 140, 137, -250, 140, 93, 145, 144, -250,
	239, 357, 40, -256, 368, -255, -257, 401, 402, 412,
	71, 72, 400, -172, -187, 87, -95, -154, -94, -76,
	-78, -351, 302, 358, 239, 210, 209, 211, 416, 286,
	-296, -359, 31, -301, 196, 197, 198, 32, 33, -1,
	-101, 231, -112, 133, -95, -94, -95, -112, -166, -187,
	375, 103, -53, -53, 374, -354, -355, -356, -358, 206,
	374, 373, 133, 15, -193, 65, -112, -239, 239, -262,
	-237, 35, 64, 134, 212, 134, 64, 67, 322, 302,
	358, 323, 416, 209, 335, 211, 239, 336, 302, 358,
	209, 211, 416, 239, 302, 209, 211, 358, 239, 336,
	388, 389, 211, 26, 327, 330, 331, 389, -313, 412,
	-313, -95, 134, 67, -71, 38, -97, 21, -79, -78,
	20, 31, 32, 31, 32, 31, 32, 31, 32, -361,
	209, 448, -227, 214, -227, -227, 210, -227, 209, -365,
	147, 134, -353, -100, 67, 23, 237, -197, 111, -383,
	210, 398, 42, 238, 237, -96, -97, -96, 392, 389,
	-271, 393, 394, -198, -197, -197, -198, 209, 211, 416,
	-381, -382, 15, 113, 237, -381, 30, 30, -295, -295,
	-366, 213, 405, 455, 143, 144, 145, -239, 239, 239,
	134, 103, 23, -258, 103, 114, -257, -257, -257, -258,
	-258, -132, 40, -186, 130, -187, 73, -132, 40, 133,
	-96, -79, -78, 68, 68, -295, -295, -295, -295, -295,
	-295, -295, -193, -80, -81, 121, -211, -187, 94, 230,
	-213, 70, -206, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 87, 373,
	314, 162, 358, 165, 315, 163, 225, 368, -207, -209,
	-332, -326, -205, 67, 119, 120, 127, 95, -208, -284,
	35, 97, 424, -161, -162, -163, -164, -165, -327, -325,
	73, 78, 81, 84, 85, 83, 82, 161, 80, 74,
	132, -78, -346, -176, 46, -300, -307, 208, -305, 166,
	12, 125, 130, -308, 494, 72, 71, 495, 308, 309,
	310, 416, 304, 311, 214, 55, 312, 313, 316, 423,
	317, 56, 318, 307, 229, 319, 182, 427, 426, 428,
	420, 417, 415, 418, 419, 421, 422, -80, -302, 46,
	-75, 67, 30, 67, -187, -96, -71, -97, 133, 78,
	73, -53, 68, 134, -357, 84, 85, -360, 180, 172,
	-187, -65, 73, -3, -4, -5, -6, -28, -45, -75,
	-328, -326, 67, 31, 367, 64, 15, -263, 209, 416,
	321, 235, 211, 302, -261, -246, -243, -241, -186, -239,
	-242, -241, -266, -166, 389, -72, 379, -72, -96, -70,
	-311, -310, -211, 40, -187, 497, -71, -211, -93, -92,
	-211, 211, -227, -368, 70, 94, -247, -244, -241, -237,
	-185, 70, 71, 72, -187, -227, -366, -352, 34, -99,
	-187, -241, -381, -150, 16, -209, -382, -197, -197, -199,
	-382, -195, -382, 389, -150, -150, -271, -196, -187, -196,
	-227, -174, -173, -187, -174, -368, -247, -84, -82, -85,
	-86, -88, -153, -155, -89, -112, 67, 495, 406, 407,
	141, 144, 143, 31, 367, -260, 367, 31, -237, -255,
	-251, 73, 368, -242, -259, 64, 130, -310, -258, -258,
	-258, -259, -259, 129, -187, -71, -368, -246, -237, -187,
	-114, -112, -114, -188, -185, -178, -149, 134, -148, 15,
	-182, 93, 90, 91, 92, -187, 34, 73, 133, -211,
	110, -222, 103, 104, 105, 106, 107, 108, 109, 67,
	67, 67, 67, 67, 67, 67, 67, -220, 67, 67,
	67, 67, 67, 67, 67, -220, 67, 67, 67, 67,
	67, 73, 73, 73, 67, 116, 115, 126, 119, 120,
	121, 122, 123, 124, 125, 117, 118, 113, 94, 111,
	112, 96, -78, -211, -217, -209, -209, -209, -209, -284,
	-215, -211, 67, -211, 67, 67, 67, 67, -306, 67,
	67, -219, -220, 67, 67, 67, -209, 67, 67, -149,
	-303, 64, -304, -218, -345, 496, -103, 68, -98, -187,
	-343, -344, -98, -102, -187, -71, -71, -180, -181, -171,
	-177, -184, -185, -178, 207, 31, 93, 34, 36, 308,
	340, 96, 130, 20, 97, 166, 129, 310, 424, 309,
	202, 59, 426, 428, 427, 417, 415, 360, 364, 366,
	363, 416, 388, 40, 14, 37, 223, 32, 33, 123,
	204, 100, 101, 226, 35, 224, 85, 44, 23, 62,
	15, 17, 18, 311, 359, 214, 213, 113, 379, 210,
	57, 12, 132, 38, 110, 361, 53, 89, 45, 55,
	111, 21, 418, 419, 41, 378, 387, 451, 230, 125,
	312, 313, 60, 94, 367, 83, 43, 64, 90, 19,
	58, 112, 205, 423, 56, 365, 316, 318, 328, 448,
	317, 208, 399, 10, 307, 425, 30, 222, 54, 209,
	99, 212, 84, 229, 6, 88, 13, 61, 65, 420,
	421, 422, 46, 98, 16, 319, 455, 380, 381, 382,
	383, 384, 385, 386, 191, 192, 193, 194, 195, 271,
	217, 215, 219, 220, 496, 497, 196, 197, 297, 299,
	169, 199, 200, 201, 231, 147, 7, 346, 347, 348,
	349, 351, 352, 353, 354, 355, 356, 357, 23, -53,
	-355, 133, 134, -99, -263, -245, -242, -265, 121, 70,
	-252, 134, 455, 504, 71, 212, -377, -376, 359, 68,
	134, -314, 213, 423, 73, 505, -314, 134, 68, 133,
	73, 134, 22, 134, -90, 36, 37, -112, 214, -112,
	-371, 346, 35, -378, 134, 40, -376, -230, 65, -225,
	-226, -224, -228, 40, -112, 15, -83, -113, -187, 67,
	68, 134, -238, 65, -174, -211, -112, -150, -150, -197,
	-188, -199, -194, -199, -195, 133, -173, -371, -378, 30,
	-156, -157, -158, -159, 53, 57, 59, 54, 55, 56,
	60, 30, 134, -384, 34, -183, -189, 34, -184, 73,
	-185, -178, -183, -76, -78, 67, 142, 145, 145, 144,
	212, 67, 103, -259, -259, -259, 40, -186, 64, 134,
	-150, -81, -82, -84, -211, -211, -211, -211, -187, 73,
	-187, 121, 83, 94, 300, 84, 85, -206, -223, 31,
	281, 282, -216, -217, -211, -160, 32, 31, -160, -160,
	-211, -160, 121, -217, -217, 68, 78, -347, -348, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	312, 307, 313, 311, 304, 319, 314, 315, 165, 446,
	447, 440, 441, 442, 443, 444, 445, -160, -160, -160,
	-160, -160, -211, -362, 298, 297, 299, -160, -160, -160,
	-160, -216, -207, -207, -207, -207, -207, -207, -207, -207,
	-207, -207, -207, -207, -214, -221, -284, 67, 113, 111,
	112, 96, -209, -207, -207, 68, 134, -350, -349, 98,
	-211, -347, -216, -211, -216, -98, -216, 68, 68, -217,
	-216, -207, -160, 73, -150, 39, 134, 67, 68, 134,
	46, 133, 134, 103, 68, 134, 133, 375, -187, -326,
	68, -265, 134, 212, 133, 133, -243, 326, -186, -245,
	20, 455, -166, 38, 73, 38, -310, -187, -317, 393,
	-211, -211, -92, -91, 43, -100, 94, 67, -373, 395,
	348, -179, 103, -204, -203, 303, 41, -298, 368, 354,
	355, -244, 239, 64, 292, 293, 294, 295, -224, -172,
	129, 250, 67, -112, -83, -187, 15, 134, -367, 133,
	-1, -187, -237, -197, -150, -150, -197, -197, -199, -187,
	-373, -204, -249, -248, -166, -85, -85, -85, -85, 53,
	53, 53, 58, 53, 58, 53, -158, -249, -88, -187,
	-189, 68, 73, -166, 145, -245, -200, 73, -251, -112,
	-112, -152, 17, 133, 83, 300, 84, 85, -284, 68,
	134, -211, -211, -211, 34, -217, 68, 68, 68, 68,
	15, -211, -211, -211, -211, -211, 68, 15, 15, -211,
	-211, -211, -211, -211, 68, -217, -214, -209, -207, -207,
	-212, 226, 93, -211, -210, -349, 100, -211, 134, 65,
	68, 15, 68, 68, 68, 68, 65, 68, 134, -211,
	134, -152, 89, -218, -312, -311, 46, -75, -98, -304,
	-187, -344, -310, -187, -180, -177, -185, -178, 78, 15,
	-242, -237, 121, 121, 70, 327, -252, 73, 347, 73,
	209, 103, 209, 133, -323, 385, 380, 382, 44, 45,
	34, 35, -107, -108, -109, -115, -110, -166, -202, -111,
	217, 215, 219, -340, 88, 220, 271, 89, 210, -374,
	77, -369, 73, -375, 77, 349, 132, 305, 40, 350,
	351, 365, 301, 78, 78, 356, -370, 70, -112, -179,
	-179, -179, -107, -101, 65, 133, -82, -113, -187, 121,
	68, -150, -150, -150, -197, -374, -375, -150, 134, 103,
	-105, -104, 64, 65, -106, 64, -104, 53, 53, -150,
	-100, 68, 134, 68, 134, 68, -151, 18, 20, -187,
	121, -211, 68, 68, 68, -116, -118, 342, 343, -122,
	-119, -121, -120, -124, -123, 166, 167, 130, 170, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 30,
	182, 225, 162, 163, 164, 165, 183, 148, 168, 453,
	191, 149, 192, 150, 193, 151, 194, 152, 153, 195,
	154, 157, 158, 159, 156, 68, -211, 68, 68, 68,
	68, 68, -211, -211, 15, 68, 68, 68, 68, 68,
	-212, 93, -209, -206, 68, 101, -211, 99, -117, -123,
	130, 166, 225, 165, 164, 162, 342, 343, -132, -211,
	-132, -207, 68, 73, -151, 13, 68, -304, -237, -252,
	368, -112, 73, -112, -292, 498, -321, 380, 20, 20,
	-75, -112, 68, 134, -118, -111, -187, 89, -339, -340,
	-227, -339, 89, 67, 73, -372, 359, 73, 73, 78,
	40, 78, 132, 352, -299, 67, -132, -134, -186, 130,
	73, 68, -183, -82, -187, -150, -367, 133, -150, -95,
	-248, -310, -211, 67, -211, 73, 73, -211, -217, 68,
	-125, 153, 152, -125, -291, 343, 342, -285, -287, 67,
	-286, 67, -286, -285, -285, 67, 67, -285, -288, 67,
	-288, -285, -289, 67, -289, -290, 67, -289, 68, 68,
	68, -211, -206, -211, 68, -285, -286, -285, -288, -285,
	-125, -125, 68, 68, 23, 68, 68, 68, -343, -74,
	-315, -271, 506, 134, -74, -139, 499, 73, 20, 73,
	-319, 73, -100, -130, -131, -147, 340, 241, -228, 245,
	77, 246, 375, 247, 210, 249, 250, 251, 221, 252,
	253, 254, 368, 255, 256, 257, 258, 323, 6, 288,
	-109, -129, -128, -126, 83, 94, 40, 340, -127, 77,
	129, 264, 242, 265, -146, -201, 64, 215, 88, 89,
	328, -202, -336, -337, -187, -337, -187, -336, -336, -227,
	-211, 20, 455, 304, 40, 78, 40, 353, -232, -234,
	-166, 67, -73, -72, -150, -150, -96, -99, 68, 134,
	68, 134, -293, 344, 78, 78, -168, 73, -168, 78,
	78, 78, 68, -211, -322, 385, -318, -316, 380, 381,
	382, 383, 73, -169, 500, 78, 73, 382, 34, -267,
	231, 134, -147, -179, -179, -172, 129, -179, -179, -179,
	-179, 248, 248, -179, -179, -179, -179, -179, -179, -179,
	-179, -179, -179, -179, -179, -179, -179, 67, -126, 83,
	-207, 73, -134, -135, 40, 263, 259, -136, 40, 243,
	244, -138, 67, 271, 13, 89, 89, -112, 67, 65,
	280, 67, 67, 67, -337, 68, 73, 347, 73, 304,
	68, 134, -285, -211, -74, -95, 68, 84, 85, 84,
	85, 68, 68, 68, 134, 68, 68, 68, 134, 68,
	134, 68, -324, 213, -320, 384, -316, 20, 382, 20,
	20, 103, 67, 20, -75, 20, -147, 78, 78, -179,
	-179, 78, 73, 73, 73, -179, -179, 78, 73, -189,
	78, 78, 78, 78, 40, 73, -137, 40, 259, 263,
	260, 261, 262, 78, 40, 78, 40, 78, 40, -187,
	67, -341, -342, 73, 78, 67, -305, -233, 67, -232,
	-338, 292, 293, 294, 296, 295, -338, -232, -232, -232,
	67, -254, -253, 272, 94, 368, -235, -234, -90, 68,
	-96, 68, 68, 68, 68, 73, 78, 78, -331, 67,
	78, -321, 20, -319, 20, -319, -319, 73, -170, -187,
	-319, -268, 273, 274, -269, -275, 276, -132, -132, 73,
	73, -133, 242, -114, 68, 134, 103, 68, -211, -219,
	-141, -140, 451, -232, 68, 68, 68, 68, -232, 272,
	-236, 221, 77, 455, 290, 291, -90, 68, 68, -335,
	30, 68, -330, -329, -167, -325, -187, 385, 386, 73,
	-319, 506, 68, 134, -273, 277, 67, -271, 67, -271,
	89, 293, 243, 244, 68, -342, 73, 68, -145, -143,
	-144, 64, 391, 269, 270, 68, -235, -235, -235, -235,
	68, -179, 73, 289, -334, -333, -332, 68, 134, 133,
	-187, -270, 278, 78, -207, 67, -207, 67, -272, 275,
	67, -253, -144, 64, -143, 64, 14, 13, -146, 78,
	-185, 134, 103, -329, -187, -277, 67, 20, 68, -266,
	68, -266, 67, 103, -207, -142, 266, 267, 30, 144,
	-142, -333, 40, -211, 133, -278, -276, 231, -269, 68,
	68, -266, 78, 68, 83, 40, 268, -187, 68, 134,
	70, -274, 279, 68, -276, -279, 46, 78, -283, -280,
	67, -147, 233, 113, -283, -147, -282, -281, 278, 234,
	67, 68, 134, 70, 230, 67, -217, -281, -280, -217,
	68, 68,
}

var yyDef = [...]int{
	26, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 596, 597, 598, 599,
	0, 384, 385, 0, 364, 0, 0, 0, 0, 0,
	290, 291, 292, 293, 294, 295, 296, 297, 298, 299,
	300, 301, 302, 261, 262, 0, 210, 206, 185, 186,
	187, 148, 149, 150, 151, 267, 0, 0, 0, 0,
	456, -2, 600, 601, 602, 603, -2, 397, 0, 365,
	366, 367, 368, 369, 370, 371, 372, 250, 251, 252,
	247, 248, 249, -2, 0, 397, 199, 0, 190, 190,
	0, 476, 0, 0, 490, 512, 26, 434, 0, 439,
	780, 816, 817, 818, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 211, 386, 387, 476, 476, 362, 0, 233, 0,
	1404, 237, 0, 0, 0, 359, 229, 230, 231, 232,
	0, 588, 0, 226, 0, 205, 1463, 0, 0, 0,
	0, 0, 0, 92, 642, 94, 644, 98, 105, 0,
	0, 110, 111, 114, 115, 116, 117, 118, 0, 122,
	0, 124, 127, 0, 129, 130, 0, 133, 134, 135,
	0, 145, 146, 147, 645, 646, 72, 72, 476, 548,
	0, -2, 0, 0, 0, 495, 498, 501, 504, 606,
	671, 671, 671, 0, 671, 0, 690, 648, 649, 650,
	669, 670, 402, 398, 399, 400, 401, 464, 0, 466,
	469, 303, 0, 342, 0, 0, 471, 471, 0, 351,
	342, 342, -2, 0, 313, 314, 315, 308, 0, 308,
	319, 320, 321, 331, 332, 352, 1187, 0, 0, 267,
	267, 404, 200, 201, 189, 191, 0, 195, 0, 188,
	1463, 0, 0, 159, 1529, 164, 0, 1411, 1477, 1426,
	0, 0, 1444, 0, 183, -2, 471, 0, 477, 0,
	476, 0, 267, 267, 267, 267, 267, 267, 267, 0,
	0, 0, 513, 514, 509, 510, 511, 515, 516, 3,
	0, 0, 438, 0, 471, -2, 0, 363, 234, 819,
	0, 0, 238, 239, 0, 0, 253, 0, 256, 242,
	243, 244, 0, 0, 228, 0, 0, 207, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 102, 99,
	106, 109, 119, 126, 0, 138, 140, 143, 100, 107,
	112, 113, 120, 141, 101, 103, 104, 108, 142, 144,
	121, 125, 139, 123, 128, 131, 132, 137, 0, 73,
	0, 471, 0, 0, 459, 0, 440, 0, 492, 494,
	0, 496, 497, 499, 500, 502, 503, 505, 506, 0,
	671, 607, 0, 0, 0, 0, 0, 0, 671, 404,
	403, 0, 465, 0, 0, 0, 308, 521, 0, 0,
	325, 326, 327, 342, 342, 333, 472, 334, 335, 344,
	0, 349, 350, 0, 521, 521, 0, 0, 0, 671,
	310, 309, 347, 348, 317, 310, 1188, 1189, 0, 0,
	0, 405, 0, 0, 193, 0, 198, 152, 0, 0,
	0, 0, 0, 0, 181, 182, 0, 0, 0, 0,
	0, 172, 175, 774, 775, 639, 640, 176, 177, 0,
	440, 491, 493, 488, 489, 0, 0, 0, 0, 0,
	0, 0, 383, 529, 523, 525, 583, 35, 0, 1071,
	1072, 816, 1083, -2, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, -2, 1553, -2, -2, 1556, 1557, 1558, 1560, -2,
	-2, -2, -2, -2, -2, 1567, -2, -2, -2, 1571,
	1572, -2, -2, 1575, 1576, 1577, 1578, 1579, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1529, 1092, 887,
	888, 889, 890, 0, 0, 0, 0, 0, 897, 898,
	0, 911, 0, 904, 905, 906, 907, 908, 47, 48,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
	1037, 874, 0, 0, 0, 0, 1022, 0, 1012, 0,
	0, 0, 0, 0, 0, 49, 50, 1543, 1028, 1030,
	1031, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1044, 1045,
	1046, 1047, 1048, 1049, 1052, 1054, 1056, 1024, 1025, 1026,
	1027, 1016, 1017, 1018, 1019, 1020, 1021, 529, 413, 426,
	408, 0, 415, 0, 781, 440, 462, 440, 0, 235,
	0, 240, 0, 0, 255, 257, 258, 259, 245, 246,
	360, 224, 225, 217, 218, 219, 220, 221, 222, 223,
	227, 45, 0, 208, 209, 0, 0, 0, 86, 87,
	88, 89, 90, 91, 93, 77, 375, 377, 631, 643,
	0, 634, 0, 96, 136, 69, 0, 69, 547, 549,
	0, 430, 432, 433, 35, 0, 460, 473, 478, 479,
	482, 0, 0, 0, 609, 0, 265, 625, 0, 641,
	663, 593, 594, 595, -2, 0, 0, 467, 0, 0,
	561, 305, 310, 312, 0, 343, 0, 521, 521, 342,
	0, 344, 0, 344, 338, 339, 0, 353, 356, 354,
	0, 316, 311, 358, 318, 0, 265, 534, 0, 535,
	536, 532, 563, 575, 578, 578, 0, 0, 202, 203,
	0, 0, 197, 153, 154, 0, 156, 157, 158, 165,
	160, 162, 0, 0, 166, 178, 179, 180, 0, 0,
	0, 170, 171, 0, 184, 458, 373, 374, 378, 0,
	380, 778, 381, 382, 589, 590, 521, 0, 530, 0,
	526, 0, 0, 0, 0, 584, 0, 586, 0, 1070,
	0, 0, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1062,
	1058, 1058, 1058, 0, 1058, 0, 0, 997, 0, 0,
	1058, 1058, 1058, 1058, 1058, 998, 0, 1058, 1058, 1058,
	1058, 1006, 1011, 1005, 1062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 1064, 0, 893, 894, 895, 896, 899,
	0, 912, 0, 0, 1062, 1062, 0, 1062, 1000, 0,
	0, 1002, 1013, 0, 1062, 0, 1010, 1058, 0, 521,
	406, 0, 407, 423, 0, 427, 0, 0, 419, 421,
	412, 416, 0, 0, 436, 461, 463, 820, 0, 1194,
	-2, 1196, -2, -2, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 0, 241,
	254, 0, 0, 0, 0, 80, 628, 0, 81, 85,
	75, 0, 0, 0, 633, 0, 630, 635, 0, 95,
	0, 0, 70, 71, 685, 0, 0, 0, 550, 0,
	442, 0, 0, 0, 485, 483, 484, 469, 0, 0,
	615, 1190, 672, 269, 0, 0, 627, 0, 0, 668,
	-2, 675, 0, 681, 0, 0, 0, 391, 395, 26,
	470, 0, 304, 0, 342, 522, 521, 328, 329, 521,
	345, 342, 346, 342, 344, 0, 355, 615, 269, 0,
	0, 0, 0, 0, 554, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 576, 565, 579, 0, 581, 582,
	591, 592, 577, 0, 476, 0, 204, 192, 194, 0,
	0, 0, 0, 167, 168, 169, 173, 174, 0, 0,
	519, 524, 531, 534, 1066, 1067, 1068, 1069, 585, 587,
	36, 527, 1073, 0, 1075, 1077, 1079, 1081, 0, 1097,
	-2, -2, 0, 1063, 1064, 0, 1059, 1060, 0, 0,
	0, 0, 0, 0, 0, 1014, 0, 0, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 0, 0, 0,
	0, 0, 0, 0, 963, 964, 965, 0, 0, 0,
	0, 0, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 1084, 1095, 1096, 0, 0, 0,
	0, 0, 1093, 1088, 0, 891, 0, 909, 913, 0,
	0, 1057, 0, 1064, 0, 0, 0, 1023, 1001, 0,
	0, 0, 0, 0, 519, 0, 426, 428, 0, 0,
	426, 0, 0, 0, 435, 0, 0, 0, 361, 46,
	260, 0, 0, 0, 0, 0, 376, 0, 632, 77,
	0, 0, 97, 0, 0, 0, 431, 36, 446, 0,
	474, 475, 480, 481, 0, 0, 0, 782, 618, 616,
	617, 0, 1191, 622, 270, 271, 272, 273, 0, 0,
	0, 626, 0, 0, 664, 665, 666, 667, 676, 1190,
	1190, 1190, 782, 434, 0, -2, 0, 0, 393, 0,
	0, 562, 306, 521, 322, 336, 521, 521, 342, 357,
	618, 622, 521, 214, 0, 557, 551, 0, 540, 555,
	556, 543, 0, 545, 0, 541, 542, 521, 533, 469,
	580, 566, 0, 0, 196, 155, 0, 289, 161, 379,
	779, 517, 0, 0, 1074, 1076, 1078, 1080, 1082, 949,
	0, 0, 0, 0, 0, 0, 938, 932, 933, 1015,
	0, 0, 0, 0, 0, 0, 957, 0, 0, 0,
	0, 0, 0, 0, 1009, 0, 1085, 1093, 1089, 0,
	1086, 0, 0, 1065, 0, 914, 0, 0, 0, 0,
	950, 0, 954, 961, 999, 1003, 0, 1007, 0, 0,
	0, 517, 0, 424, 0, 429, 426, 411, 420, 410,
	422, 417, 418, 437, 821, 1195, 1192, 1193, 236, 0,
	629, 77, 82, 83, 84, 78, 76, 636, 0, 638,
	0, 0, 0, 0, 448, 58, 0, 0, 486, 487,
	0, 0, 0, 783, 784, 786, 787, 0, 0, 789,
	844, 0, 798, 671, 798, 0, 0, 800, 801, 608,
	0, 0, 611, 620, 0, 0, 0, 275, 276, 0,
	0, 0, 288, 284, 285, 286, 266, 621, 0, 0,
	0, 0, 0, 578, 0, 0, 521, 392, 395, 396,
	468, 307, 340, 337, 521, 263, 264, 476, 0, 0,
	537, 558, 0, 0, 538, 0, 539, 544, 546, 213,
	564, 567, 0, 571, 0, 163, 507, 0, 0, 37,
	528, 1065, 934, 935, 936, 0, 916, 928, 928, 1182,
	1122, 1123, 1124, 1169, 1126, 1173, 1173, 1169, 1169, 1154,
	1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 0, 0,
	1165, 1145, 1169, 1171, 1171, 1169, 1166, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1176, 1176, 1179, 1176, 937, 0, 956, 939, 940,
	943, 941, 0, 0, 0, 955, 944, 945, 931, 1061,
	1087, 0, 1094, 1090, 892, 900, 910, 0, 0, 919,
	1169, 1173, 922, 1169, 1171, 1169, 928, 928, 0, 0,
	0, 0, 942, 0, 508, 415, 425, 409, 79, 74,
	637, 60, 0, 60, 450, 0, 447, 0, 0, 0,
	604, 469, -2, 0, -2, 788, 845, 810, 810, 799,
	810, 810, 671, 0, 619, 610, 0, 623, 624, 0,
	277, 278, 0, 281, 287, 0, 677, 678, 776, 777,
	679, 0, 521, 521, -2, 389, 394, 0, 341, 471,
	215, 216, 559, 0, 552, 0, 0, 518, 520, 901,
	917, 929, 930, 918, 1185, 1183, 1184, 1125, 1170, 0,
	1150, 0, 1151, 1152, 1153, 0, 0, 1146, 1147, 0,
	1148, 1149, 1141, 0, 1142, 1143, 0, 1144, 953, 958,
	959, 0, 1091, 915, 902, 920, 921, 923, 924, 925,
	926, 927, 903, 951, 0, 1004, 1008, 962, 414, 28,
	54, 0, 686, 0, 27, 452, 0, 449, 0, 443,
	445, 68, 0, 691, -2, 730, 1190, 1190, 0, 1190,
	1190, 1190, 1190, 0, 0, 1190, 1190, 1190, 1190, 1190,
	1190, 1190, 1190, 1190, 1190, 1190, 1190, 1190, 1190, 0,
	785, 812, -2, 824, 826, 0, 0, 829, 830, 0,
	0, 0, 0, 866, 836, 0, 0, 0, 1109, 1110,
	0, 843, 0, 802, 811, 0, 811, 0, 0, 810,
	0, 0, 0, 274, 279, 0, 282, 283, 0, 659,
	1169, 0, 683, 60, 476, 390, 212, 0, 568, 0,
	572, 0, 1121, 1186, 0, 0, 0, 1167, 0, 0,
	0, 0, 960, 0, 51, 56, 61, 62, 0, 0,
	0, 0, 0, 441, 0, 451, 59, 0, 0, 682,
	0, 680, 732, 0, 0, 1190, 1190, 0, 0, 0,
	0, 1190, 1190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 825, 827,
	828, 831, 832, 833, 871, 872, 873, 834, 868, 869,
	870, 835, 0, 0, 0, 1107, 1108, 864, 0, 0,
	0, 0, 0, 0, 0, 796, 612, 0, 614, 280,
	652, 0, 482, 0, 684, 471, 560, 0, 0, 0,
	0, 1175, 1174, 1163, 0, 1164, 1172, 1177, 0, 1180,
	0, 952, 38, 0, 58, 0, 63, 0, 0, 0,
	0, 0, 0, 0, 605, 726, 731, 733, 734, 0,
	0, 737, 738, 739, 740, 0, 0, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 768, 769, 770,
	771, 772, 773, 753, 754, 755, 756, 757, 758, 765,
	0, 0, 762, 0, 0, 0, 1012, 859, 0, 0,
	803, 805, 806, 807, 808, 809, 804, 0, 0, 0,
	0, 795, 797, 840, 0, 613, 651, 660, 661, 482,
	388, 569, 570, 573, 574, 1168, 0, 0, 29, 0,
	0, 55, 0, 64, 0, 66, 67, 0, 0, 454,
	444, 715, 0, 0, 721, 0, 727, 735, 736, 741,
	742, 759, 0, 0, 761, 0, 0, 867, 0, 839,
	847, 860, 0, 0, 652, 652, 652, 652, 0, 841,
	653, 1190, 0, 0, 657, 658, 662, 1178, 1181, 688,
	0, 39, 0, 41, 43, 44, 813, 52, 53, 57,
	65, 687, 453, 0, 693, 0, 0, 0, 0, 0,
	724, 0, 766, 767, 760, 763, 764, 837, 846, 848,
	849, 0, 861, 862, 863, 865, 790, 791, 792, 793,
	0, 0, 655, 0, 30, 31, 0, 40, 0, 0,
	455, 695, 0, 716, 0, 0, 0, 0, 0, 0,
	0, 838, 850, 0, 851, 0, 0, 0, 794, 654,
	656, 0, 0, 42, 814, 692, 0, 726, 717, 0,
	719, 0, 0, 0, 0, 852, 854, 855, 0, 0,
	853, 32, 33, 34, 0, 0, 697, 0, 713, 718,
	720, 0, 725, 723, 856, 858, 857, 815, 696, 0,
	709, 694, 0, 722, 698, -2, 0, 714, 699, -2,
	0, 707, 0, 0, 700, 708, 0, 703, 0, 0,
	0, 702, 0, -2, 710, 0, 0, 704, -2, 0,
	712, 711,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 503,
	104, 103, 105, 3, 504, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 505, 115, 506, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:555
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:561
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:590
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:594
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:600
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:612
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:627
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:633
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:637
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:643
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:650
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:659
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:663
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:667
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:680
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:686
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:695
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:706
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:710
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:716
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:720
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:726
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:730
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:736
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:760
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:779
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:783
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:787
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:792
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:796
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:804
		{
			yyVAL.str = ""
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:808
		{
			yyVAL.str = yyDollar[3].str
		}
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:813
		{
			yyVAL.str = "\n"
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:817
		{
			yyVAL.str = yyDollar[3].str
		}
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:822
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:826
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:850
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:854
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:860
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:866
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:884
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:901
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:924
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:928
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:932
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:937
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:941
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:960
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:971
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:984
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:988
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:998
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1011
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1024
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1030
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1036
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1043
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1051
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1060
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1064
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1068
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1072
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1076
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1080
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1087
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1091
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1097
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1104
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1113
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1117
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1123
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1127
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1131
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1135
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1139
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1143
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1147
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1151
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1155
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1159
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1163
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1167
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1171
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1175
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1179
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1183
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1187
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1191
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1195
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1199
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1203
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1207
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1211
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1215
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1219
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1223
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1227
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1231
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1235
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1239
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1243
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1247
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1251
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1255
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1259
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1263
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1267
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1271
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1275
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1279
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1283
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1287
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1291
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1299
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1303
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1307
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1311
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1315
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1319
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1331
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1338
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1345
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1354
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1384
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1388
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1392
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1398
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1408
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1415
		{
			yyVAL.str = yyDollar[3].str
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1421
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1425
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1431
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1439
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1448
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1456
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1464
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1487
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1510
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1517
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1539
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1546
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1555
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1559
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1563
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1569
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1573
		{
			yyVAL.str = yyDollar[1].str
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1580
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1591
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1597
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1602
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1606
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1614
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1618
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1622
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1626
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1630
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1634
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1640
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1644
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1648
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1652
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1657
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1662
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1668
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1675
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1681
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1688
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1695
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1705
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1712
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1723
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1734
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1738
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1744
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1756
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1762
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1766
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1782
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1791
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1797
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1801
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1817
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1825
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1833
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1843
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1881
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1885
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1891
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1897
		{
			yyVAL.str = yyDollar[1].str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1902
		{
			yyVAL.str = "true"
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1903
		{
			yyVAL.str = "false"
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1904
		{
			yyVAL.str = yyDollar[1].str
		}
	case 260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1909
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1920
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1947
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1952
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1956
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1965
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1981
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1985
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1989
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1993
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1997
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2005
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2013
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2017
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2021
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2025
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2033
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2037
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2047
		{
			yyVAL.item = nil
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2052
		{
			yyVAL.item = nil
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2076
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2080
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2089
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2095
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2100
		{
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2104
		{
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2109
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2122
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2126
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2130
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2134
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2142
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2150
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2156
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2164
		{
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2166
		{
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2194
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2198
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2202
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2208
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2214
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2220
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2226
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2248
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2258
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2270
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2287
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2292
		{
			yyVAL.str = ""
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2296
		{
			yyVAL.str = yyDollar[2].str
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2302
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2315
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2319
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2334
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2340
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2344
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2353
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2357
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2361
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2367
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2371
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2390
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2399
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2408
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2412
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2418
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2446
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2452
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2477
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2513
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2524
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2528
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2534
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2539
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2546
		{
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2548
		{
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2551
		{
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2560
		{
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2564
		{
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2569
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2579
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2586
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2592
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2600
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2607
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2614
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2633
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2637
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2660
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2664
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2670
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2679
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2683
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2689
		{
			yyVAL.str = yyDollar[1].str
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2693
		{
			yyVAL.str = yyDollar[3].str
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2699
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2703
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2709
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2714
		{
		}
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2718
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2725
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2729
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2736
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2741
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2745
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2751
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2755
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2761
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2765
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2770
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2774
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2787
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2794
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2801
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2819
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2838
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2844
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2851
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2855
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2868
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2872
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2877
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2881
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2888
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2893
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2910
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2918
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2922
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2926
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2939
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2948
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2952
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2958
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2970
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2979
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2989
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2993
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3002
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3008
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3014
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3018
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3024
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3029
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3033
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3037
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3042
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3046
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3050
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3060
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3066
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3120
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3128
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3137
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3145
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3153
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3161
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3169
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3177
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3185
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3193
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3201
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3211
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3222
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3240
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3244
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3248
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3261
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3266
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3270
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3279
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3285
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3289
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3295
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3299
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3303
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3307
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3312
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3320
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3334
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3338
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3351
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3360
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3370
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3379
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3389
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3393
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3403
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3407
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3411
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3415
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3421
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3431
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3435
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3441
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3451
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3457
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3463
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3467
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3471
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3477
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3481
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3487
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3491
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3497
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3501
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3507
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3511
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3521
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3537
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3543
		{
			a1 := yyDollar[3].str
			a2 := "$"
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3561
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3582
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3603
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3624
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3642
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3663
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3684
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3707
		{
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3708
		{
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3712
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3724
		{
			yyVAL.str = ""
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3728
		{
			yyVAL.str = yyDollar[1].str
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3732
		{
			yyVAL.str = yyDollar[2].str
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3741
		{
			yyVAL.str = ""
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3745
		{
			yyVAL.str = yyDollar[1].str
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3749
		{
			yyVAL.str = yyDollar[2].str
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3753
		{
			yyVAL.str = yyDollar[1].str
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3757
		{
			yyVAL.str = yyDollar[2].str
		}
	case 604:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3791
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3801
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3812
		{
		}
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3817
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3829
		{
			yyVAL.str = yyDollar[1].str
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3835
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3845
		{
			yyVAL.str = yyDollar[1].str
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3851
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3858
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3864
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3872
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3878
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3885
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3893
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3899
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3908
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3920
		{
			yyVAL.str = yyDollar[1].str
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3925
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3931
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3939
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4045
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4049
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4055
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4065
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4069
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4075
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4085
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4089
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4093
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4098
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4102
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4108
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4115
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4121
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4143
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4147
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4153
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4170
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4174
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4178
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4182
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4188
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4207
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4211
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4233
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4237
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4241
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4245
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4249
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4255
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4259
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4265
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4270
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4275
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4279
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4283
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4287
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4291
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4311
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4315
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4324
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4330
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4334
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4340
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4344
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4348
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4353
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4357
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4363
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4374
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4385
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4392
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4399
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4410
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4423
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4434
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4438
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4447
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4461
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4470
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4474
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4480
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4484
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4490
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4499
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4509
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4513
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4519
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4523
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4529
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4536
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4545
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4549
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4554
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4558
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4563
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4567
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4572
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4576
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4586
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4590
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4609
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4617
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4625
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4636
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4646
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4656
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4660
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4665
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4669
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4678
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4684
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4688
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4692
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4698
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4702
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4706
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4710
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4714
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4718
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4722
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4726
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4730
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4734
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4738
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4742
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4746
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4750
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4754
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4758
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4762
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4766
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4770
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4774
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4778
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4782
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4786
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4790
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4794
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4798
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4802
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4806
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4810
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4817
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4821
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4827
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4832
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4836
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4840
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4846
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4850
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4854
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4858
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4862
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4866
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4880
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4884
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4893
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4898
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4904
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4911
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4915
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4921
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4925
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4931
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4941
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4947
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4956
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4965
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4988
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4997
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5007
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5015
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5021
		{
			yyVAL.str = ""
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5025
		{
			yyVAL.str = yyDollar[1].str
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5035
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5041
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5047
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5061
		{
			yyVAL.str = ""
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5068
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5074
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5078
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5082
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5093
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5097
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5101
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5106
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5110
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5116
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5120
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5126
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5130
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5134
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5138
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5142
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5146
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5150
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5154
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5158
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5162
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5166
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5170
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5174
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5178
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5193
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5197
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5202
		{
			yyVAL.str = ""
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5206
		{
			yyVAL.str = yyDollar[1].str
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5212
		{
			yyVAL.str = ""
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5216
		{
			yyVAL.str = yyDollar[2].str
		}
	case 846:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5222
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5234
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5241
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5248
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5255
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5262
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5271
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5277
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5283
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5287
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5291
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5295
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5299
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5304
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5311
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5315
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5319
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5328
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5333
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5337
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5353
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5359
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5363
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5367
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5371
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5375
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5379
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5383
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5387
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5395
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5403
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5407
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5413
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5417
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5421
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5425
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5429
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5433
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5437
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5441
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5445
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5449
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5453
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5457
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5462
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5470
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5474
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5478
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5487
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5491
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5495
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5499
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5503
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5508
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5512
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5517
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5521
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5527
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5531
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5537
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5547
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5564
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5581
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5594
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5607
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5619
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5633
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5648
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5663
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5680
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5695
		{
		}
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5701
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5710
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5718
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5726
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5735
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5744
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5753
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5762
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5771
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5780
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5789
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5798
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5807
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5816
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5825
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5841
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5849
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5857
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5865
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5873
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5882
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5890
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5899
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5908
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5916
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5924
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5933
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5942
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5953
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5974
		{
			yyVAL.str = yyDollar[1].str
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6010
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6022
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6036
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6044
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6051
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6058
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6070
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6078
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6089
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6098
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6107
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6115
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6125
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6133
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6141
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6155
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6165
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6184
		{
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6186
		{
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6227
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6237
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6241
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6245
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6251
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6260
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6266
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6270
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6277
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6281
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6285
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6293
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6297
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6301
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6305
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6311
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6315
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6319
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6323
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6327
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6331
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6335
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6339
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6343
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6347
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6355
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6359
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6363
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6367
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6371
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6375
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6379
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6383
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6393
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6399
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6403
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6410
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6414
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6418
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6424
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6428
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6432
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6436
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6440
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6444
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6448
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6454
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6458
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6462
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6466
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6472
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6476
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6489
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6494
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6498
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6502
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6506
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6520
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6524
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6538
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6544
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6555
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6560
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6566
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6578
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6590
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6602
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6615
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6628
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6641
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6654
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6667
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6680
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6693
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6706
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6719
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6732
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6747
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6770
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6807
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6855
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6872
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6884
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6899
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6919
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6939
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6955
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6968
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6981
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6994
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7007
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7019
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7031
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7043
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7055
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7067
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7079
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7091
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7103
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7115
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7128
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7141
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7158
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7181
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7186
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7192
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7199
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7203
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7208
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7212
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7218
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7224
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7231
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7238
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7247
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7254
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7261
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7274
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7278
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7284
		{
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7286
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7296
		{
			yyVAL.str = ""
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7300
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

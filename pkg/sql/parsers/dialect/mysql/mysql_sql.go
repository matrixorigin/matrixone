// Code generated by goyacc -o mysql_sql.go -c mysql mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"go/constant"
	"strings"

	"matrixone/pkg/defines"
	"matrixone/pkg/sql/parsers/tree"
)

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const DISTINCTROW = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const KEYS = 57374
const VALUES = 57375
const LAST_INSERT_ID = 57376
const NEXT = 57377
const VALUE = 57378
const SHARE = 57379
const MODE = 57380
const SQL_NO_CACHE = 57381
const SQL_CACHE = 57382
const JOIN = 57383
const STRAIGHT_JOIN = 57384
const LEFT = 57385
const RIGHT = 57386
const INNER = 57387
const OUTER = 57388
const CROSS = 57389
const NATURAL = 57390
const USE = 57391
const FORCE = 57392
const ON = 57393
const USING = 57394
const SUBQUERY_AS_EXPR = 57395
const ID = 57396
const AT_ID = 57397
const AT_AT_ID = 57398
const STRING = 57399
const VALUE_ARG = 57400
const LIST_ARG = 57401
const COMMENT = 57402
const COMMENT_KEYWORD = 57403
const INTEGRAL = 57404
const HEX = 57405
const HEXNUM = 57406
const BIT_LITERAL = 57407
const FLOAT = 57408
const NULL = 57409
const TRUE = 57410
const FALSE = 57411
const EMPTY_FROM_CLAUSE = 57412
const LOWER_THAN_CHARSET = 57413
const CHARSET = 57414
const UNIQUE = 57415
const KEY = 57416
const OR = 57417
const XOR = 57418
const AND = 57419
const NOT = 57420
const BETWEEN = 57421
const CASE = 57422
const WHEN = 57423
const THEN = 57424
const ELSE = 57425
const END = 57426
const LE = 57427
const GE = 57428
const NE = 57429
const NULL_SAFE_EQUAL = 57430
const IS = 57431
const LIKE = 57432
const REGEXP = 57433
const IN = 57434
const ASSIGNMENT = 57435
const SHIFT_LEFT = 57436
const SHIFT_RIGHT = 57437
const DIV = 57438
const MOD = 57439
const UNARY = 57440
const COLLATE = 57441
const BINARY = 57442
const UNDERSCORE_BINARY = 57443
const INTERVAL = 57444
const BEGIN = 57445
const START = 57446
const TRANSACTION = 57447
const COMMIT = 57448
const ROLLBACK = 57449
const WORK = 57450
const CONSISTENT = 57451
const SNAPSHOT = 57452
const CHAIN = 57453
const NO = 57454
const RELEASE = 57455
const BIT = 57456
const TINYINT = 57457
const SMALLINT = 57458
const MEDIUMINT = 57459
const INT = 57460
const INTEGER = 57461
const BIGINT = 57462
const INTNUM = 57463
const REAL = 57464
const DOUBLE = 57465
const FLOAT_TYPE = 57466
const DECIMAL = 57467
const NUMERIC = 57468
const TIME = 57469
const TIMESTAMP = 57470
const DATETIME = 57471
const YEAR = 57472
const CHAR = 57473
const VARCHAR = 57474
const BOOL = 57475
const CHARACTER = 57476
const VARBINARY = 57477
const NCHAR = 57478
const TEXT = 57479
const TINYTEXT = 57480
const MEDIUMTEXT = 57481
const LONGTEXT = 57482
const BLOB = 57483
const TINYBLOB = 57484
const MEDIUMBLOB = 57485
const LONGBLOB = 57486
const JSON = 57487
const ENUM = 57488
const GEOMETRY = 57489
const POINT = 57490
const LINESTRING = 57491
const POLYGON = 57492
const GEOMETRYCOLLECTION = 57493
const MULTIPOINT = 57494
const MULTILINESTRING = 57495
const MULTIPOLYGON = 57496
const INT1 = 57497
const INT2 = 57498
const INT3 = 57499
const INT4 = 57500
const INT8 = 57501
const CREATE = 57502
const ALTER = 57503
const DROP = 57504
const RENAME = 57505
const ANALYZE = 57506
const ADD = 57507
const SCHEMA = 57508
const TABLE = 57509
const INDEX = 57510
const VIEW = 57511
const TO = 57512
const IGNORE = 57513
const IF = 57514
const PRIMARY = 57515
const COLUMN = 57516
const CONSTRAINT = 57517
const SPATIAL = 57518
const FULLTEXT = 57519
const FOREIGN = 57520
const KEY_BLOCK_SIZE = 57521
const SHOW = 57522
const DESCRIBE = 57523
const EXPLAIN = 57524
const DATE = 57525
const ESCAPE = 57526
const REPAIR = 57527
const OPTIMIZE = 57528
const TRUNCATE = 57529
const MAXVALUE = 57530
const PARTITION = 57531
const REORGANIZE = 57532
const LESS = 57533
const THAN = 57534
const PROCEDURE = 57535
const TRIGGER = 57536
const STATUS = 57537
const VARIABLES = 57538
const ROLE = 57539
const PROXY = 57540
const AVG_ROW_LENGTH = 57541
const STORAGE = 57542
const DISK = 57543
const MEMORY = 57544
const CHECKSUM = 57545
const COMPRESSION = 57546
const DATA = 57547
const DIRECTORY = 57548
const DELAY_KEY_WRITE = 57549
const ENCRYPTION = 57550
const ENGINE = 57551
const MAX_ROWS = 57552
const MIN_ROWS = 57553
const PACK_KEYS = 57554
const ROW_FORMAT = 57555
const STATS_AUTO_RECALC = 57556
const STATS_PERSISTENT = 57557
const STATS_SAMPLE_PAGES = 57558
const DYNAMIC = 57559
const COMPRESSED = 57560
const REDUNDANT = 57561
const COMPACT = 57562
const FIXED = 57563
const COLUMN_FORMAT = 57564
const AUTO_RANDOM = 57565
const RESTRICT = 57566
const CASCADE = 57567
const ACTION = 57568
const PARTIAL = 57569
const SIMPLE = 57570
const CHECK = 57571
const ENFORCED = 57572
const RANGE = 57573
const LIST = 57574
const ALGORITHM = 57575
const LINEAR = 57576
const PARTITIONS = 57577
const SUBPARTITION = 57578
const SUBPARTITIONS = 57579
const TYPE = 57580
const PARSER = 57581
const VISIBLE = 57582
const INVISIBLE = 57583
const BTREE = 57584
const HASH = 57585
const RTREE = 57586
const EXPIRE = 57587
const ACCOUNT = 57588
const UNLOCK = 57589
const DAY = 57590
const NEVER = 57591
const SECOND = 57592
const ASCII = 57593
const COALESCE = 57594
const COLLATION = 57595
const HOUR = 57596
const MICROSECOND = 57597
const MINUTE = 57598
const MONTH = 57599
const QUARTER = 57600
const REPEAT = 57601
const REVERSE = 57602
const ROW_COUNT = 57603
const WEEK = 57604
const REVOKE = 57605
const FUNCTION = 57606
const PRIVILEGES = 57607
const TABLESPACE = 57608
const EXECUTE = 57609
const SUPER = 57610
const GRANT = 57611
const OPTION = 57612
const REFERENCES = 57613
const REPLICATION = 57614
const SLAVE = 57615
const CLIENT = 57616
const USAGE = 57617
const RELOAD = 57618
const FILE = 57619
const TEMPORARY = 57620
const ROUTINE = 57621
const EVENT = 57622
const SHUTDOWN = 57623
const NULLX = 57624
const AUTO_INCREMENT = 57625
const APPROXNUM = 57626
const SIGNED = 57627
const UNSIGNED = 57628
const ZEROFILL = 57629
const USER = 57630
const IDENTIFIED = 57631
const CIPHER = 57632
const ISSUER = 57633
const X509 = 57634
const SUBJECT = 57635
const SAN = 57636
const REQUIRE = 57637
const SSL = 57638
const NONE = 57639
const PASSWORD = 57640
const MAX_QUERIES_PER_HOUR = 57641
const MAX_UPDATES_PER_HOUR = 57642
const MAX_CONNECTIONS_PER_HOUR = 57643
const MAX_USER_CONNECTIONS = 57644
const FORMAT = 57645
const CONNECTION = 57646
const LOAD = 57647
const INFILE = 57648
const TERMINATED = 57649
const OPTIONALLY = 57650
const ENCLOSED = 57651
const ESCAPED = 57652
const STARTING = 57653
const LINES = 57654
const DATABASES = 57655
const TABLES = 57656
const EXTENDED = 57657
const FULL = 57658
const PROCESSLIST = 57659
const FIELDS = 57660
const COLUMNS = 57661
const OPEN = 57662
const ERRORS = 57663
const WARNINGS = 57664
const INDEXES = 57665
const NAMES = 57666
const GLOBAL = 57667
const SESSION = 57668
const ISOLATION = 57669
const LEVEL = 57670
const READ = 57671
const WRITE = 57672
const ONLY = 57673
const REPEATABLE = 57674
const COMMITTED = 57675
const UNCOMMITTED = 57676
const SERIALIZABLE = 57677
const LOCAL = 57678
const EXCEPT = 57679
const CURRENT_TIMESTAMP = 57680
const DATABASE = 57681
const CURRENT_TIME = 57682
const LOCALTIME = 57683
const LOCALTIMESTAMP = 57684
const UTC_DATE = 57685
const UTC_TIME = 57686
const UTC_TIMESTAMP = 57687
const REPLACE = 57688
const CONVERT = 57689
const SEPARATOR = 57690
const CURRENT_DATE = 57691
const CURRENT_USER = 57692
const CURRENT_ROLE = 57693
const MATCH = 57694
const AGAINST = 57695
const BOOLEAN = 57696
const LANGUAGE = 57697
const WITH = 57698
const QUERY = 57699
const EXPANSION = 57700
const ADDDATE = 57701
const BIT_AND = 57702
const BIT_OR = 57703
const BIT_XOR = 57704
const CAST = 57705
const COUNT = 57706
const APPROX_COUNT_DISTINCT = 57707
const APPROX_PERCENTILE = 57708
const CURDATE = 57709
const CURTIME = 57710
const DATE_ADD = 57711
const DATE_SUB = 57712
const EXTRACT = 57713
const GROUP_CONCAT = 57714
const MAX = 57715
const MID = 57716
const MIN = 57717
const NOW = 57718
const POSITION = 57719
const SESSION_USER = 57720
const STD = 57721
const STDDEV = 57722
const STDDEV_POP = 57723
const STDDEV_SAMP = 57724
const SUBDATE = 57725
const SUBSTR = 57726
const SUBSTRING = 57727
const SUM = 57728
const SYSDATE = 57729
const SYSTEM_USER = 57730
const TRANSLATE = 57731
const TRIM = 57732
const VARIANCE = 57733
const VAR_POP = 57734
const VAR_SAMP = 57735
const AVG = 57736
const UNUSED = 57737

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"HEXNUM",
	"BIT_LITERAL",
	"FLOAT",
	"NULL",
	"TRUE",
	"FALSE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"CONNECTION",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EXCEPT",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"UNUSED",
	"';'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:5682

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 50,
	17, 310,
	-2, 301,
	-1, 54,
	185, 447,
	-2, 482,
	-1, 63,
	212, 233,
	213, 233,
	-2, 253,
	-1, 301,
	58, 1180,
	414, 1180,
	-2, 91,
	-1, 320,
	58, 603,
	414, 603,
	-2, 445,
	-1, 321,
	58, 438,
	414, 438,
	-2, 446,
	-1, 327,
	17, 311,
	-2, 303,
	-1, 557,
	54, 723,
	-2, 1218,
	-1, 558,
	54, 724,
	-2, 1219,
	-1, 559,
	54, 725,
	-2, 1220,
	-1, 566,
	54, 782,
	-2, 1185,
	-1, 567,
	54, 784,
	-2, 1196,
	-1, 703,
	1, 472,
	413, 472,
	-2, 479,
	-1, 813,
	17, 310,
	-2, 661,
	-1, 851,
	119, 902,
	-2, 900,
	-1, 853,
	119, 392,
	-2, 897,
	-1, 854,
	119, 393,
	-2, 898,
	-1, 1039,
	1, 473,
	413, 473,
	-2, 479,
	-1, 1397,
	1, 519,
	206, 519,
	413, 519,
	-2, 479,
	-1, 1399,
	246, 628,
	-2, 609,
	-1, 1496,
	1, 520,
	206, 520,
	413, 520,
	-2, 479,
	-1, 1523,
	246, 628,
	-2, 610,
	-1, 1883,
	55, 494,
	56, 494,
	-2, 479,
	-1, 1887,
	55, 494,
	56, 494,
	-2, 479,
	-1, 1899,
	55, 498,
	56, 498,
	-2, 479,
	-1, 1902,
	55, 499,
	56, 499,
	-2, 479,
}

const yyPrivate = 57344

const yyLast = 16000

var yyAct = [...]int{
	695, 1088, 1889, 1887, 1886, 1894, 1860, 570, 1833, 1493,
	686, 1089, 568, 1735, 587, 1804, 1535, 1849, 1788, 1711,
	519, 1789, 484, 79, 1766, 1653, 278, 1491, 753, 1029,
	288, 1648, 1701, 1492, 1392, 82, 1311, 426, 79, 290,
	517, 1524, 1560, 377, 1559, 1212, 471, 322, 322, 1471,
	1307, 1284, 1327, 78, 1629, 546, 1316, 1473, 1476, 1447,
	1188, 1465, 1289, 1312, 1032, 837, 1343, 740, 1246, 283,
	378, 527, 488, 838, 842, 848, 851, 1122, 79, 49,
	595, 50, 569, 733, 1301, 282, 18, 579, 1182, 1500,
	680, 648, 737, 1040, 708, 328, 697, 1087, 327, 655,
	539, 1012, 428, 1004, 786, 710, 50, 681, 402, 294,
	1090, 273, 709, 509, 276, 414, 683, 292, 370, 755,
	75, 672, 293, 1019, 493, 73, 443, 371, 1169, 1015,
	284, 495, 1285, 1183, 1420, 1749, 1176, 1727, 491, 347,
	727, 463, 722, 723, 1778, 712, 1776, 485, 486, 392,
	391, 387, 388, 1792, 1793, 357, 50, 689, 496, 458,
	1808, 18, 454, 297, 297, 324, 384, 483, 1646, 386,
	482, 485, 486, 1719, 339, 1649, 1650, 1651, 1652, 390,
	1722, 528, 1764, 693, 1290, 1291, 1292, 1293, 1157, 449,
	407, 1191, 1189, 1186, 1190, 1192, 1015, 1185, 1184, 1331,
	1344, 1017, 734, 1328, 1294, 1191, 1189, 358, 1190, 1192,
	1628, 445, 1544, 1543, 456, 457, 1540, 450, 1489, 455,
	1408, 1382, 1640, 1352, 1350, 1351, 444, 1456, 1349, 1460,
	1348, 1347, 1345, 1459, 1780, 1427, 1431, 1433, 1435, 1437,
	1438, 1440, 1791, 1443, 1441, 1442, 673, 1773, 1422, 1423,
	1424, 1425, 1406, 1407, 1428, 1330, 1409, 1634, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1426, 1726,
	389, 1879, 675, 79, 406, 1895, 1430, 1432, 1434, 1436,
	1439, 341, 1815, 405, 1346, 1775, 447, 1702, 1703, 1704,
	1737, 338, 337, 1194, 1195, 1196, 1822, 1757, 448, 451,
	1733, 1734, 1623, 1737, 1421, 1713, 453, 1870, 446, 430,
	492, 1177, 333, 326, 764, 765, 763, 1593, 1592, 1743,
	1852, 393, 1457, 381, 431, 1782, 1783, 505, 481, 480,
	1729, 1730, 452, 472, 1896, 1890, 1861, 1581, 401, 1618,
	1247, 494, 404, 674, 1717, 1173, 1063, 1614, 1023, 474,
	1320, 1383, 476, 1478, 1477, 440, 1210, 381, 50, 362,
	1061, 1060, 1059, 1199, 499, 497, 498, 322, 725, 435,
	436, 726, 1058, 378, 378, 378, 724, 354, 359, 360,
	473, 1874, 475, 1837, 1287, 1221, 1353, 1354, 1167, 1166,
	510, 1156, 409, 342, 1679, 542, 383, 1587, 1277, 1201,
	1152, 511, 1053, 332, 647, 1027, 541, 999, 364, 363,
	467, 653, 406, 79, 79, 79, 79, 1781, 522, 1853,
	516, 656, 768, 650, 524, 485, 486, 485, 486, 748,
	383, 1191, 1189, 1201, 1190, 1192, 410, 798, 403, 510,
	322, 322, 406, 322, 430, 489, 1728, 1285, 430, 508,
	511, 687, 478, 1034, 340, 466, 477, 735, 1321, 431,
	1455, 322, 322, 431, 1856, 670, 530, 1847, 1317, 1320,
	1458, 1712, 322, 1200, 322, 1429, 703, 694, 79, 1018,
	698, 50, 442, 297, 504, 1170, 644, 460, 487, 515,
	490, 1279, 717, 1302, 322, 702, 1065, 1014, 1002, 408,
	512, 513, 514, 1137, 765, 763, 322, 378, 705, 322,
	464, 529, 700, 715, 533, 534, 535, 536, 537, 507,
	1625, 741, 351, 704, 763, 749, 669, 741, 1619, 1620,
	352, 1850, 1851, 1624, 322, 322, 752, 79, 668, 718,
	479, 1278, 766, 657, 658, 659, 660, 1013, 1451, 1084,
	685, 691, 1616, 706, 707, 769, 1615, 297, 756, 688,
	1085, 676, 699, 1092, 1091, 1446, 1869, 754, 1609, 692,
	1222, 1885, 714, 757, 1690, 815, 1866, 1321, 1129, 361,
	713, 690, 1314, 523, 719, 814, 1315, 1318, 1816, 518,
	297, 701, 1127, 1128, 1126, 329, 1812, 711, 1762, 1680,
	1682, 1683, 1684, 1681, 1715, 3, 822, 1868, 746, 1714,
	1689, 432, 433, 434, 520, 1693, 736, 432, 433, 434,
	520, 1674, 297, 731, 750, 732, 743, 744, 745, 799,
	800, 801, 802, 803, 804, 805, 798, 1673, 1319, 801,
	802, 803, 804, 805, 798, 1867, 843, 845, 365, 1672,
	1097, 297, 751, 387, 813, 281, 11, 816, 817, 818,
	819, 847, 432, 433, 434, 520, 385, 792, 820, 1669,
	521, 853, 764, 765, 763, 349, 521, 350, 357, 1663,
	1026, 399, 348, 346, 345, 353, 854, 355, 356, 835,
	797, 796, 806, 807, 799, 800, 801, 802, 803, 804,
	805, 798, 1688, 827, 307, 79, 306, 310, 302, 279,
	6, 1100, 278, 432, 433, 434, 1394, 1025, 298, 1055,
	1102, 521, 1660, 1659, 1251, 387, 388, 1250, 322, 317,
	756, 11, 1573, 50, 1686, 1043, 1572, 1520, 1687, 1571,
	764, 765, 763, 1676, 846, 757, 1000, 386, 1568, 322,
	764, 765, 763, 852, 1388, 741, 741, 741, 280, 5,
	542, 1042, 79, 1009, 1387, 1386, 1785, 998, 1081, 1082,
	1685, 541, 1395, 1385, 1272, 1078, 1079, 1080, 1656, 1675,
	651, 1047, 1899, 1838, 1056, 6, 1098, 1099, 764, 765,
	763, 1767, 1022, 1041, 1095, 1810, 1502, 1044, 1045, 1046,
	764, 765, 763, 1772, 1751, 1049, 1741, 1051, 1740, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1052, 835, 1050, 1131, 1132, 1677, 1086, 711, 1048,
	1140, 1077, 1670, 1135, 5, 1666, 1066, 1067, 1068, 1665,
	1639, 1664, 1630, 1611, 297, 1062, 1142, 432, 433, 434,
	1074, 741, 772, 773, 774, 775, 776, 777, 1373, 770,
	1075, 1069, 764, 765, 763, 1071, 1213, 1396, 1299, 1298,
	1030, 1031, 1297, 1296, 1024, 300, 299, 303, 831, 830,
	764, 765, 763, 305, 829, 652, 1224, 1904, 1844, 1368,
	1759, 1093, 1094, 1130, 1096, 309, 1124, 1898, 1897, 1103,
	1104, 1105, 1106, 1877, 1107, 1108, 1109, 1148, 747, 677,
	1758, 764, 765, 763, 1021, 1880, 1254, 1506, 1155, 1224,
	1253, 1138, 1842, 764, 765, 763, 1745, 1362, 1510, 1641,
	1141, 1483, 1143, 797, 796, 806, 807, 799, 800, 801,
	802, 803, 804, 805, 798, 1876, 1875, 1144, 1499, 764,
	765, 763, 1501, 1503, 1505, 1482, 1507, 1508, 1509, 1511,
	1512, 1513, 1515, 1516, 1517, 1518, 1481, 797, 796, 806,
	807, 799, 800, 801, 802, 803, 804, 805, 798, 331,
	1464, 1361, 304, 308, 678, 1360, 312, 679, 1397, 330,
	314, 315, 316, 1021, 1864, 318, 319, 1021, 1863, 1332,
	1158, 1260, 406, 764, 765, 763, 1257, 764, 765, 763,
	1228, 656, 1359, 1255, 1161, 1519, 322, 1162, 1252, 322,
	1164, 1358, 406, 1233, 322, 1230, 1357, 1223, 1180, 1209,
	532, 1172, 1498, 1356, 764, 765, 763, 1178, 1179, 1855,
	698, 1836, 1835, 764, 765, 763, 1342, 1514, 764, 765,
	763, 1577, 1799, 1504, 1207, 764, 765, 763, 1139, 74,
	1341, 22, 37, 23, 322, 764, 765, 763, 764, 765,
	763, 671, 997, 79, 79, 1577, 1794, 1073, 1784, 1577,
	1755, 741, 764, 765, 763, 1198, 806, 807, 799, 800,
	801, 802, 803, 804, 805, 798, 1159, 649, 1229, 386,
	531, 1160, 1225, 1216, 1217, 1226, 1227, 71, 1340, 74,
	1642, 22, 37, 23, 1174, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1204, 1168, 1205, 1181, 1224, 1241, 1145, 1041,
	764, 765, 763, 1197, 1484, 1171, 1133, 1577, 1754, 1203,
	1001, 1244, 1245, 1577, 1753, 1208, 1249, 1206, 459, 1214,
	1398, 843, 438, 1266, 1211, 1267, 1258, 71, 764, 765,
	763, 1015, 1215, 1261, 1275, 761, 322, 1577, 1752, 439,
	322, 322, 1698, 1699, 322, 1698, 1697, 1270, 1220, 797,
	796, 806, 807, 799, 800, 801, 802, 803, 804, 805,
	798, 440, 1271, 1134, 79, 1644, 1643, 1577, 1576, 1377,
	1376, 1224, 1363, 406, 1242, 387, 813, 1224, 1355, 759,
	1243, 1073, 1310, 440, 1124, 1224, 1232, 1265, 1028, 1259,
	74, 79, 1337, 506, 1300, 1264, 1224, 1231, 1154, 1153,
	50, 1273, 1268, 1269, 1900, 1263, 1339, 796, 806, 807,
	799, 800, 801, 802, 803, 804, 805, 798, 1295, 1150,
	1149, 1021, 1020, 74, 74, 437, 1276, 1846, 1884, 438,
	1840, 1823, 1820, 1818, 1283, 1761, 1709, 1696, 71, 1372,
	1694, 1692, 1637, 741, 1636, 1635, 1632, 1622, 1466, 1324,
	1262, 643, 322, 1472, 1303, 1304, 1280, 1282, 1337, 1474,
	1336, 1551, 1370, 1550, 1452, 1371, 1322, 1323, 1390, 839,
	1125, 71, 645, 649, 1367, 1202, 1163, 1064, 411, 1057,
	836, 834, 1364, 833, 1445, 832, 828, 1369, 787, 416,
	419, 420, 421, 417, 1393, 418, 422, 825, 1375, 1374,
	1366, 823, 416, 419, 420, 421, 417, 1463, 418, 422,
	821, 71, 1391, 795, 794, 1828, 1462, 793, 1381, 791,
	790, 1384, 789, 788, 785, 1389, 784, 783, 416, 419,
	420, 421, 417, 1449, 418, 422, 782, 781, 780, 779,
	778, 1527, 1448, 646, 1448, 1444, 441, 1450, 1485, 1454,
	322, 322, 1005, 1006, 79, 1633, 1037, 1826, 1790, 1193,
	1072, 406, 1008, 291, 461, 1011, 665, 1010, 1378, 406,
	1497, 666, 1475, 662, 661, 1151, 1530, 1467, 1310, 1468,
	1469, 1470, 1525, 1479, 1490, 663, 1453, 1801, 1538, 1539,
	664, 1480, 667, 1526, 420, 421, 525, 526, 1042, 1286,
	1520, 1030, 1031, 1488, 1035, 1379, 1541, 721, 395, 397,
	398, 323, 1380, 424, 1092, 1091, 465, 1561, 1563, 1521,
	1561, 1561, 469, 470, 1042, 1841, 1809, 1531, 1768, 1765,
	1724, 1723, 1721, 1657, 1567, 1461, 1545, 1335, 1546, 1547,
	1548, 1549, 1256, 331, 468, 330, 1334, 1219, 649, 1888,
	1830, 1829, 1829, 330, 1552, 1553, 1554, 1555, 1165, 1502,
	1562, 1556, 272, 1558, 1564, 1565, 1486, 1487, 1566, 1583,
	1557, 1830, 423, 343, 1, 1800, 1579, 1570, 1832, 1760,
	1803, 586, 571, 1575, 1716, 1645, 1763, 1718, 797, 796,
	806, 807, 799, 800, 801, 802, 803, 804, 805, 798,
	1647, 1574, 1537, 1175, 1313, 462, 1146, 1147, 607, 597,
	1610, 79, 824, 598, 1586, 642, 396, 596, 1569, 1329,
	336, 394, 1393, 344, 1627, 1578, 1542, 1101, 1136, 1533,
	1541, 1893, 1883, 1859, 1839, 1608, 1612, 1563, 1736, 1878,
	1774, 1626, 1821, 1814, 1732, 1580, 295, 728, 406, 500,
	368, 1532, 1534, 1584, 1585, 1658, 1588, 1589, 1590, 1591,
	1710, 375, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1631, 1691, 1655, 1638,
	1506, 1654, 654, 1288, 1187, 1033, 1016, 430, 682, 296,
	1725, 1510, 1695, 334, 1036, 335, 1039, 1038, 771, 1123,
	1540, 826, 431, 406, 1671, 544, 406, 406, 406, 578,
	572, 1499, 1528, 1326, 1325, 1501, 1503, 1505, 1536, 1507,
	1508, 1509, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 716,
	1700, 25, 425, 1706, 1707, 1708, 762, 1705, 849, 81,
	1054, 1661, 1662, 850, 1805, 585, 584, 1667, 1668, 1720,
	583, 582, 415, 413, 412, 287, 1731, 286, 1218, 1333,
	758, 760, 1787, 79, 1786, 1747, 1748, 406, 1621, 1678,
	1617, 1613, 1738, 1739, 1742, 1496, 1746, 1495, 1519, 1522,
	406, 1523, 1529, 1404, 1405, 1400, 1402, 1403, 1401, 1399,
	1308, 1744, 1309, 754, 1750, 1498, 1306, 1305, 1007, 1003,
	840, 844, 400, 1274, 696, 76, 285, 1756, 1076, 538,
	1514, 70, 17, 809, 16, 812, 1504, 15, 1769, 1770,
	45, 44, 43, 42, 14, 8, 1777, 1779, 41, 810,
	811, 808, 1807, 797, 796, 806, 807, 799, 800, 801,
	802, 803, 804, 805, 798, 40, 1806, 39, 1795, 1796,
	1797, 1798, 13, 12, 36, 35, 34, 33, 32, 1817,
	31, 1819, 30, 1811, 1813, 29, 28, 27, 26, 9,
	53, 52, 51, 19, 20, 1824, 21, 59, 1827, 1834,
	1825, 1771, 58, 57, 56, 55, 1831, 24, 10, 406,
	7, 406, 4, 2, 0, 0, 0, 0, 687, 1843,
	687, 1845, 0, 0, 0, 0, 1848, 1807, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 1854, 0,
	0, 1806, 1857, 0, 0, 1862, 687, 1865, 0, 0,
	0, 0, 0, 1834, 1871, 0, 0, 0, 1873, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	1892, 0, 1891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1903, 1902, 1901, 1892, 967, 953, 0, 915,
	969, 887, 903, 977, 905, 906, 941, 865, 924, 205,
	901, 857, 890, 891, 859, 898, 860, 888, 917, 150,
	886, 956, 927, 175, 975, 177, 0, 0, 234, 190,
	0, 0, 920, 958, 922, 946, 914, 942, 873, 935,
	970, 902, 939, 971, 0, 0, 0, 0, 432, 433,
	434, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	0, 938, 963, 900, 0, 0, 874, 968, 921, 940,
	0, 858, 936, 0, 863, 866, 976, 961, 895, 896,
	0, 0, 0, 0, 0, 0, 0, 918, 923, 943,
	911, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	892, 0, 931, 0, 0, 0, 868, 864, 0, 916,
	0, 124, 239, 253, 134, 230, 267, 138, 237, 130,
	204, 226, 126, 251, 236, 187, 169, 170, 125, 0,
	221, 148, 161, 145, 202, 965, 966, 144, 270, 867,
	261, 128, 129, 260, 201, 248, 252, 188, 182, 127,
	250, 186, 181, 173, 152, 165, 214, 180, 215, 166,
	192, 191, 193, 987, 988, 989, 990, 991, 872, 0,
	893, 944, 0, 856, 952, 959, 913, 263, 962, 910,
	909, 994, 0, 993, 238, 995, 996, 174, 957, 889,
	899, 894, 897, 224, 207, 964, 930, 212, 222, 178,
	249, 216, 254, 240, 262, 947, 217, 120, 241, 147,
	189, 131, 132, 143, 149, 151, 153, 154, 198, 199,
	210, 229, 242, 243, 244, 146, 139, 223, 140, 163,
	141, 121, 231, 142, 122, 211, 247, 992, 160, 219,
	185, 123, 184, 213, 246, 245, 271, 0, 0, 0,
	0, 0, 0, 157, 855, 258, 0, 203, 954, 861,
	871, 869, 907, 932, 933, 934, 979, 949, 951, 950,
	978, 227, 0, 0, 0, 0, 0, 168, 209, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 862, 0, 235, 256, 269, 259, 908, 880, 919,
	268, 883, 881, 948, 882, 937, 980, 194, 195, 196,
	197, 904, 137, 928, 912, 981, 982, 983, 984, 985,
	986, 885, 960, 156, 162, 0, 164, 136, 208, 159,
	266, 171, 200, 167, 232, 172, 179, 220, 265, 206,
	225, 135, 255, 233, 183, 158, 879, 884, 878, 925,
	926, 972, 973, 974, 945, 870, 955, 875, 877, 876,
	929, 119, 603, 176, 264, 218, 155, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 150, 742, 0, 0, 175, 0, 177, 0,
	0, 234, 190, 0, 0, 0, 0, 619, 627, 0,
	0, 0, 0, 257, 0, 738, 0, 0, 573, 0,
	0, 545, 609, 608, 588, 0, 1365, 0, 133, 589,
	0, 0, 0, 590, 593, 591, 592, 0, 0, 611,
	0, 0, 0, 0, 0, 543, 577, 797, 796, 806,
	807, 799, 800, 801, 802, 803, 804, 805, 798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	575, 0, 0, 0, 0, 604, 0, 576, 0, 0,
	739, 0, 594, 0, 124, 239, 253, 134, 230, 267,
	138, 237, 130, 204, 226, 126, 251, 236, 187, 169,
	170, 125, 0, 221, 148, 161, 145, 202, 601, 602,
	144, 567, 599, 261, 128, 129, 260, 201, 248, 252,
	188, 182, 127, 250, 186, 181, 173, 152, 165, 214,
	180, 215, 166, 192, 191, 193, 797, 796, 806, 807,
	799, 800, 801, 802, 803, 804, 805, 798, 0, 0,
	263, 0, 0, 617, 0, 0, 0, 238, 0, 0,
	174, 0, 0, 0, 600, 0, 224, 207, 630, 0,
	212, 222, 178, 249, 216, 254, 240, 262, 0, 217,
	120, 241, 147, 189, 131, 132, 143, 149, 151, 153,
	154, 198, 199, 210, 229, 242, 243, 244, 146, 139,
	223, 140, 163, 141, 121, 231, 142, 122, 211, 247,
	0, 160, 219, 185, 123, 184, 213, 246, 245, 271,
	0, 0, 0, 0, 0, 0, 157, 0, 258, 615,
	203, 629, 610, 612, 613, 616, 620, 621, 622, 623,
	624, 626, 628, 631, 227, 0, 0, 0, 0, 0,
	168, 209, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 256, 269, 566,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 605,
	194, 195, 196, 197, 618, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 162, 0, 164,
	136, 208, 159, 266, 171, 200, 167, 232, 172, 179,
	220, 265, 206, 225, 135, 255, 233, 183, 158, 637,
	614, 636, 638, 639, 635, 640, 641, 625, 581, 0,
	633, 632, 634, 0, 119, 0, 176, 264, 218, 155,
	83, 547, 548, 549, 550, 551, 552, 553, 91, 554,
	93, 94, 95, 96, 555, 98, 556, 100, 101, 102,
	557, 558, 559, 560, 107, 108, 109, 561, 562, 112,
	113, 114, 115, 563, 564, 565, 257, 603, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 150, 1872, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 619, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 573, 0, 0, 545, 609, 608, 588,
	0, 1248, 0, 133, 589, 0, 0, 0, 590, 593,
	591, 592, 0, 0, 611, 0, 0, 0, 0, 0,
	543, 577, 797, 796, 806, 807, 799, 800, 801, 802,
	803, 804, 805, 798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 575, 0, 0, 0, 0,
	604, 0, 576, 0, 0, 606, 0, 594, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 601, 602, 144, 567, 599, 261, 128,
	129, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 617, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 600,
	0, 224, 207, 630, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 0, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 157, 0, 258, 615, 203, 629, 610, 612, 613,
	616, 620, 621, 622, 623, 624, 626, 628, 631, 227,
	0, 0, 0, 0, 0, 168, 209, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 256, 269, 566, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 605, 194, 195, 196, 197, 618,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 162, 0, 164, 136, 208, 159, 266, 171,
	200, 167, 232, 172, 179, 220, 265, 206, 225, 135,
	255, 233, 183, 158, 637, 614, 636, 638, 639, 635,
	640, 641, 625, 581, 0, 633, 632, 634, 0, 119,
	0, 176, 264, 218, 155, 83, 547, 548, 549, 550,
	551, 552, 553, 91, 554, 93, 94, 95, 96, 555,
	98, 556, 100, 101, 102, 557, 558, 559, 560, 107,
	108, 109, 561, 562, 112, 113, 114, 115, 563, 564,
	565, 257, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 150, 742, 0, 0, 175, 0, 177, 0,
	0, 234, 190, 0, 0, 0, 0, 619, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 573, 0,
	0, 545, 609, 608, 588, 0, 0, 0, 133, 589,
	0, 0, 0, 590, 593, 591, 592, 0, 0, 611,
	0, 0, 0, 0, 0, 543, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	575, 0, 0, 0, 0, 604, 0, 576, 0, 0,
	606, 0, 594, 0, 124, 239, 253, 134, 230, 267,
	138, 237, 130, 204, 226, 126, 251, 236, 187, 169,
	170, 125, 0, 221, 148, 161, 145, 202, 601, 602,
	144, 567, 599, 261, 128, 129, 260, 201, 248, 252,
	188, 182, 127, 250, 186, 181, 173, 152, 165, 214,
	180, 215, 166, 192, 191, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 617, 0, 0, 0, 238, 0, 0,
	174, 0, 0, 0, 600, 0, 224, 207, 630, 0,
	212, 222, 178, 249, 216, 254, 240, 262, 0, 217,
	120, 241, 147, 189, 131, 132, 143, 149, 151, 153,
	154, 198, 199, 210, 229, 242, 243, 244, 146, 139,
	223, 140, 163, 141, 121, 231, 142, 122, 211, 247,
	0, 160, 219, 185, 123, 184, 213, 246, 245, 271,
	0, 0, 0, 0, 0, 0, 157, 0, 258, 615,
	203, 629, 610, 612, 613, 616, 620, 621, 622, 623,
	624, 626, 628, 631, 227, 0, 0, 0, 0, 0,
	168, 209, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 256, 269, 566,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 605,
	194, 195, 196, 197, 618, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 162, 0, 164,
	136, 208, 159, 266, 171, 200, 167, 232, 172, 179,
	220, 265, 206, 225, 135, 255, 233, 183, 158, 637,
	614, 636, 638, 639, 635, 640, 641, 625, 581, 0,
	633, 632, 634, 0, 119, 0, 176, 264, 218, 155,
	83, 547, 548, 549, 550, 551, 552, 553, 91, 554,
	93, 94, 95, 96, 555, 98, 556, 100, 101, 102,
	557, 558, 559, 560, 107, 108, 109, 561, 562, 112,
	113, 114, 115, 563, 564, 565, 257, 74, 0, 603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 150,
	0, 0, 0, 175, 0, 177, 0, 0, 234, 190,
	0, 0, 0, 0, 619, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 573, 0, 0, 545, 609,
	608, 588, 0, 0, 0, 133, 589, 0, 0, 0,
	590, 593, 591, 592, 0, 0, 611, 0, 0, 0,
	0, 0, 543, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 574, 575, 0, 0,
	0, 0, 604, 0, 576, 0, 0, 606, 0, 594,
	0, 124, 239, 253, 134, 230, 267, 138, 237, 130,
	204, 226, 126, 251, 236, 187, 169, 170, 125, 0,
	221, 148, 161, 145, 202, 601, 602, 144, 567, 599,
	261, 128, 129, 260, 201, 248, 252, 188, 182, 127,
	250, 186, 181, 173, 152, 165, 214, 180, 215, 166,
	192, 191, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	617, 0, 0, 0, 238, 0, 0, 174, 0, 0,
	0, 600, 0, 224, 207, 630, 0, 212, 222, 178,
	249, 216, 254, 240, 262, 0, 217, 120, 241, 147,
	189, 131, 132, 143, 149, 151, 153, 154, 198, 199,
	210, 229, 242, 243, 244, 146, 139, 223, 140, 163,
	141, 121, 231, 142, 122, 211, 247, 0, 160, 219,
	185, 123, 184, 213, 246, 245, 271, 0, 0, 0,
	0, 0, 0, 157, 0, 258, 615, 203, 629, 610,
	612, 613, 616, 620, 621, 622, 623, 624, 626, 628,
	631, 227, 0, 0, 0, 0, 0, 168, 209, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 256, 269, 566, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 605, 194, 195, 196,
	197, 618, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 162, 0, 164, 136, 208, 159,
	266, 171, 200, 167, 232, 172, 179, 220, 265, 206,
	225, 135, 255, 233, 183, 158, 637, 614, 636, 638,
	639, 635, 640, 641, 625, 581, 0, 633, 632, 634,
	0, 119, 0, 176, 264, 218, 155, 83, 547, 548,
	549, 550, 551, 552, 553, 91, 554, 93, 94, 95,
	96, 555, 98, 556, 100, 101, 102, 557, 558, 559,
	560, 107, 108, 109, 561, 562, 112, 113, 114, 115,
	563, 564, 565, 257, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 150, 0, 0, 0, 175, 0,
	177, 0, 0, 234, 190, 0, 0, 0, 0, 619,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	573, 0, 0, 545, 609, 608, 588, 0, 0, 0,
	133, 589, 0, 0, 0, 590, 593, 591, 592, 0,
	0, 611, 0, 0, 0, 0, 0, 543, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 575, 540, 0, 0, 0, 604, 0, 576,
	0, 0, 606, 0, 594, 0, 124, 239, 253, 134,
	230, 267, 138, 237, 130, 204, 226, 126, 251, 236,
	187, 169, 170, 125, 0, 221, 148, 161, 145, 202,
	601, 602, 144, 567, 599, 261, 128, 129, 260, 201,
	248, 252, 188, 182, 127, 250, 186, 181, 173, 152,
	165, 214, 180, 215, 166, 192, 191, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 617, 0, 0, 0, 238,
	0, 0, 174, 0, 0, 0, 600, 0, 224, 207,
	630, 0, 212, 222, 178, 249, 216, 254, 240, 262,
	0, 217, 120, 241, 147, 189, 131, 132, 143, 149,
	151, 153, 154, 198, 199, 210, 229, 242, 243, 244,
	146, 139, 223, 140, 163, 141, 121, 231, 142, 122,
	211, 247, 0, 160, 219, 185, 123, 184, 213, 246,
	245, 271, 0, 0, 0, 0, 0, 0, 157, 0,
	258, 615, 203, 629, 610, 612, 613, 616, 620, 621,
	622, 623, 624, 626, 628, 631, 227, 0, 0, 0,
	0, 0, 168, 209, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 256,
	269, 566, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 605, 194, 195, 196, 197, 618, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 162,
	0, 164, 136, 208, 159, 266, 171, 200, 167, 232,
	172, 179, 220, 265, 206, 225, 135, 255, 233, 183,
	158, 637, 614, 636, 638, 639, 635, 640, 641, 625,
	581, 0, 633, 632, 634, 0, 119, 0, 176, 264,
	218, 155, 83, 547, 548, 549, 550, 551, 552, 553,
	91, 554, 93, 94, 95, 96, 555, 98, 556, 100,
	101, 102, 557, 558, 559, 560, 107, 108, 109, 561,
	562, 112, 113, 114, 115, 563, 564, 565, 257, 603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 150,
	0, 0, 0, 175, 0, 177, 0, 0, 234, 190,
	0, 0, 0, 0, 619, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 573, 0, 0, 545, 609,
	608, 588, 0, 0, 0, 133, 589, 0, 0, 0,
	590, 593, 591, 592, 0, 0, 611, 0, 0, 0,
	0, 0, 543, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 574, 575, 0, 0,
	0, 0, 604, 0, 576, 0, 0, 606, 0, 594,
	0, 124, 239, 253, 134, 230, 267, 138, 237, 130,
	204, 226, 126, 251, 236, 187, 169, 170, 125, 0,
	221, 148, 161, 145, 202, 601, 602, 144, 567, 599,
	261, 128, 129, 260, 201, 248, 252, 188, 182, 127,
	250, 186, 181, 173, 152, 165, 214, 180, 215, 166,
	192, 191, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	617, 0, 0, 0, 238, 0, 0, 174, 0, 0,
	0, 600, 0, 224, 207, 630, 0, 212, 222, 178,
	249, 216, 254, 240, 262, 0, 217, 120, 241, 147,
	189, 131, 132, 143, 149, 151, 153, 154, 198, 199,
	210, 229, 242, 243, 244, 146, 139, 223, 140, 163,
	141, 121, 231, 142, 122, 211, 247, 0, 160, 219,
	185, 123, 184, 213, 246, 245, 271, 0, 0, 0,
	0, 0, 0, 157, 0, 258, 615, 203, 629, 610,
	612, 613, 616, 620, 621, 622, 623, 624, 626, 628,
	631, 227, 0, 0, 0, 0, 0, 168, 209, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 256, 269, 566, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 605, 194, 195, 196,
	197, 618, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 162, 0, 164, 136, 208, 159,
	266, 171, 200, 167, 232, 172, 179, 220, 265, 206,
	225, 135, 255, 233, 183, 158, 637, 614, 636, 638,
	639, 635, 640, 641, 625, 581, 0, 633, 632, 634,
	0, 119, 0, 176, 264, 218, 155, 83, 547, 548,
	549, 550, 551, 552, 553, 91, 554, 93, 94, 95,
	96, 555, 98, 556, 100, 101, 102, 557, 558, 559,
	560, 107, 108, 109, 561, 562, 112, 113, 114, 115,
	563, 564, 565, 257, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 150, 0, 0, 0, 175, 0,
	177, 0, 0, 234, 190, 0, 0, 0, 0, 619,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	573, 0, 0, 545, 609, 608, 588, 0, 0, 0,
	133, 589, 0, 0, 0, 590, 593, 591, 592, 0,
	0, 611, 0, 0, 0, 0, 0, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 575, 0, 0, 0, 0, 604, 0, 576,
	0, 0, 606, 0, 594, 0, 124, 239, 253, 134,
	230, 267, 138, 237, 130, 204, 226, 126, 251, 236,
	187, 169, 170, 125, 0, 221, 148, 161, 145, 202,
	601, 602, 144, 567, 599, 261, 128, 129, 260, 201,
	248, 252, 188, 182, 127, 250, 186, 181, 173, 152,
	165, 214, 180, 215, 166, 192, 191, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 617, 0, 0, 0, 238,
	0, 0, 174, 0, 0, 0, 600, 0, 224, 207,
	630, 0, 212, 222, 178, 249, 216, 254, 240, 262,
	0, 217, 120, 241, 147, 189, 131, 132, 143, 149,
	151, 153, 154, 198, 199, 210, 229, 242, 243, 244,
	146, 139, 223, 140, 163, 141, 121, 231, 142, 122,
	211, 247, 0, 160, 219, 185, 123, 184, 213, 246,
	245, 271, 0, 0, 0, 0, 0, 0, 157, 0,
	258, 615, 203, 629, 610, 612, 613, 616, 620, 621,
	622, 623, 624, 626, 628, 631, 227, 0, 0, 0,
	0, 0, 168, 209, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 256,
	269, 566, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 605, 194, 195, 196, 197, 618, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 162,
	0, 164, 136, 208, 159, 266, 171, 200, 167, 232,
	172, 179, 220, 265, 206, 225, 135, 255, 233, 183,
	158, 637, 614, 636, 638, 639, 635, 640, 641, 625,
	581, 0, 633, 632, 634, 0, 119, 0, 176, 264,
	218, 155, 83, 547, 548, 549, 550, 551, 552, 553,
	91, 554, 93, 94, 95, 96, 555, 98, 556, 100,
	101, 102, 557, 558, 559, 560, 107, 108, 109, 561,
	562, 112, 113, 114, 115, 563, 564, 565, 257, 603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 150,
	0, 0, 0, 175, 0, 177, 0, 0, 234, 190,
	0, 0, 0, 0, 619, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 545, 609,
	608, 588, 0, 0, 0, 133, 589, 0, 0, 0,
	590, 593, 591, 592, 0, 0, 611, 0, 0, 0,
	0, 0, 543, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 574, 575, 0, 0,
	0, 0, 604, 0, 576, 0, 0, 606, 0, 594,
	0, 124, 239, 253, 134, 230, 267, 138, 237, 130,
	204, 226, 126, 251, 236, 187, 169, 170, 125, 0,
	221, 148, 161, 145, 202, 601, 602, 144, 567, 599,
	261, 128, 129, 260, 201, 248, 252, 188, 182, 127,
	250, 186, 181, 173, 152, 165, 214, 180, 215, 166,
	192, 191, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	617, 0, 0, 0, 238, 0, 0, 174, 0, 0,
	0, 600, 0, 224, 207, 630, 0, 212, 222, 178,
	249, 216, 254, 240, 262, 0, 217, 120, 241, 147,
	189, 131, 132, 143, 149, 151, 153, 154, 198, 199,
	210, 229, 242, 243, 244, 146, 139, 223, 140, 163,
	141, 121, 231, 142, 122, 211, 247, 0, 160, 219,
	185, 123, 184, 213, 246, 245, 271, 0, 0, 0,
	0, 0, 0, 157, 0, 258, 615, 203, 629, 610,
	612, 613, 616, 620, 621, 622, 623, 624, 626, 628,
	631, 227, 0, 0, 0, 0, 0, 168, 209, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 256, 269, 566, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 605, 194, 195, 196,
	197, 618, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 162, 0, 164, 136, 208, 159,
	266, 171, 200, 167, 232, 172, 179, 220, 265, 206,
	225, 135, 255, 233, 183, 158, 637, 614, 636, 638,
	639, 635, 640, 641, 625, 581, 0, 633, 632, 634,
	0, 119, 0, 176, 264, 218, 155, 83, 547, 548,
	549, 550, 551, 552, 553, 91, 554, 93, 94, 95,
	96, 555, 98, 556, 100, 101, 102, 557, 558, 559,
	560, 107, 108, 109, 561, 562, 112, 113, 114, 115,
	563, 564, 565, 257, 307, 0, 306, 310, 302, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 317,
	175, 0, 177, 0, 0, 234, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 0, 0, 321, 0,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 239,
	253, 134, 230, 267, 138, 237, 130, 204, 226, 126,
	251, 236, 187, 169, 170, 125, 0, 221, 148, 161,
	145, 202, 0, 0, 144, 270, 0, 261, 128, 129,
	260, 201, 248, 252, 188, 182, 127, 250, 186, 181,
	173, 152, 165, 214, 180, 215, 166, 192, 191, 193,
	0, 0, 0, 0, 0, 300, 299, 303, 0, 0,
	0, 0, 0, 305, 263, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 174, 309, 0, 0, 0, 0,
	224, 207, 0, 0, 212, 222, 178, 249, 216, 301,
	240, 262, 0, 325, 120, 241, 147, 189, 131, 132,
	143, 149, 151, 153, 154, 198, 199, 210, 229, 242,
	243, 244, 146, 139, 223, 140, 163, 141, 121, 231,
	142, 122, 211, 247, 0, 160, 219, 185, 123, 184,
	213, 246, 245, 271, 0, 0, 0, 0, 0, 0,
	157, 0, 258, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 304, 308, 311, 209, 312, 313, 0, 0,
	314, 315, 316, 0, 0, 318, 319, 0, 0, 0,
	235, 256, 269, 259, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 194, 195, 196, 197, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 162, 0, 164, 136, 208, 159, 266, 171, 200,
	167, 232, 172, 179, 220, 265, 206, 225, 135, 255,
	233, 183, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	176, 264, 218, 155, 83, 84, 85, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	257, 307, 0, 306, 310, 302, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 317, 175, 0, 177,
	0, 0, 234, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 321, 0, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 239, 253, 134, 230,
	267, 138, 237, 130, 204, 226, 126, 251, 236, 187,
	169, 170, 125, 0, 221, 148, 161, 145, 202, 0,
	0, 144, 270, 0, 261, 128, 129, 260, 201, 248,
	252, 188, 182, 127, 250, 186, 181, 173, 152, 165,
	214, 180, 215, 166, 192, 191, 193, 0, 0, 0,
	0, 0, 300, 299, 303, 0, 0, 0, 0, 0,
	305, 263, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 174, 309, 0, 0, 0, 0, 224, 207, 0,
	0, 212, 222, 178, 249, 216, 301, 240, 262, 0,
	217, 120, 241, 147, 189, 131, 132, 143, 149, 151,
	153, 154, 198, 199, 210, 229, 242, 243, 244, 146,
	139, 223, 140, 163, 141, 121, 231, 142, 122, 211,
	247, 0, 160, 219, 185, 123, 184, 213, 246, 245,
	271, 0, 0, 0, 0, 0, 0, 157, 0, 258,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 304,
	308, 311, 209, 312, 313, 0, 0, 314, 315, 316,
	0, 0, 318, 319, 0, 0, 0, 235, 256, 269,
	259, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 194, 195, 196, 197, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 162, 0,
	164, 136, 208, 159, 266, 171, 200, 167, 232, 172,
	179, 220, 265, 206, 225, 135, 255, 233, 183, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 176, 264, 218,
	155, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 257, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 175, 0, 177, 0, 0, 234, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1317, 1320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 239, 253, 134, 230, 267, 138, 237, 130, 204,
	226, 126, 251, 236, 187, 169, 170, 125, 0, 221,
	148, 161, 145, 202, 0, 0, 144, 270, 0, 261,
	128, 129, 260, 201, 248, 252, 188, 182, 127, 250,
	186, 181, 173, 152, 165, 214, 180, 215, 166, 192,
	191, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1321, 263, 0, 0, 0,
	1314, 0, 1313, 238, 1315, 1318, 174, 0, 0, 0,
	0, 0, 224, 207, 0, 0, 212, 222, 178, 249,
	216, 254, 240, 262, 0, 217, 120, 241, 147, 189,
	131, 132, 143, 149, 151, 153, 154, 198, 199, 210,
	229, 242, 243, 244, 146, 139, 223, 140, 163, 141,
	121, 231, 142, 122, 211, 247, 1319, 160, 219, 185,
	123, 184, 213, 246, 245, 271, 0, 0, 0, 0,
	0, 0, 157, 0, 258, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 168, 209, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 256, 269, 259, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 194, 195, 196, 197,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 162, 0, 164, 136, 208, 159, 266,
	171, 200, 167, 232, 172, 179, 220, 265, 206, 225,
	135, 255, 233, 183, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 176, 264, 218, 155, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 257, 74, 0, 22, 37, 23, 0, 0,
	0, 0, 0, 0, 0, 205, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 175,
	0, 177, 0, 0, 234, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 80, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 239, 253,
	134, 230, 267, 138, 237, 130, 204, 226, 126, 251,
	236, 187, 169, 170, 125, 0, 221, 148, 161, 145,
	202, 0, 0, 144, 270, 0, 261, 128, 129, 260,
	201, 248, 252, 188, 182, 127, 250, 186, 181, 173,
	152, 165, 214, 180, 215, 166, 192, 191, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 174, 0, 0, 0, 0, 0, 224,
	207, 0, 0, 212, 222, 178, 249, 216, 254, 240,
	262, 0, 217, 120, 241, 147, 189, 131, 132, 143,
	149, 151, 153, 154, 198, 199, 210, 229, 242, 243,
	244, 146, 139, 223, 140, 163, 141, 121, 231, 142,
	122, 211, 247, 0, 160, 219, 185, 123, 184, 213,
	246, 245, 271, 0, 0, 0, 0, 0, 0, 157,
	0, 258, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 168, 209, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	256, 269, 259, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 194, 195, 196, 197, 275, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	162, 0, 164, 136, 208, 159, 266, 171, 200, 167,
	232, 172, 179, 220, 265, 206, 225, 135, 255, 233,
	183, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 0, 176,
	264, 218, 155, 83, 84, 85, 86, 87, 88, 89,
	90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
	100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 257,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 367, 0, 0, 175, 0, 177, 0, 0, 234,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	379, 380, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 239, 253, 134, 230, 267, 138, 237,
	130, 204, 226, 126, 251, 236, 187, 169, 170, 125,
	0, 221, 148, 161, 145, 202, 0, 0, 144, 270,
	383, 261, 128, 382, 260, 201, 248, 252, 188, 182,
	127, 250, 186, 181, 173, 152, 165, 214, 180, 215,
	166, 192, 191, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 174, 0,
	0, 0, 0, 0, 224, 207, 0, 0, 212, 222,
	178, 249, 216, 254, 240, 262, 366, 217, 120, 241,
	147, 189, 131, 132, 143, 149, 151, 153, 154, 198,
	199, 210, 229, 242, 243, 244, 146, 139, 223, 140,
	163, 141, 121, 231, 142, 122, 211, 247, 0, 160,
	219, 185, 123, 184, 213, 246, 245, 271, 0, 0,
	0, 0, 0, 0, 157, 0, 258, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 168, 209,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 256, 269, 259, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 369, 194, 195,
	196, 197, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 162, 0, 164, 136, 208,
	159, 266, 171, 376, 372, 373, 172, 179, 220, 265,
	206, 225, 135, 255, 233, 374, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 176, 264, 218, 155, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 257, 205, 0, 0, 0, 0,
	767, 0, 0, 0, 0, 150, 0, 0, 0, 175,
	0, 177, 0, 0, 234, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 764, 765, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 239, 253,
	134, 230, 267, 138, 237, 130, 204, 226, 126, 251,
	236, 187, 169, 170, 125, 0, 221, 148, 161, 145,
	202, 0, 0, 144, 270, 0, 261, 128, 129, 260,
	201, 248, 252, 188, 182, 127, 250, 186, 181, 173,
	152, 165, 214, 180, 215, 166, 192, 191, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 174, 0, 0, 0, 0, 0, 224,
	207, 0, 0, 212, 222, 178, 249, 216, 254, 240,
	262, 0, 217, 120, 241, 147, 189, 131, 132, 143,
	149, 151, 153, 154, 198, 199, 210, 229, 242, 243,
	244, 146, 139, 223, 140, 163, 141, 121, 231, 142,
	122, 211, 247, 0, 160, 219, 185, 123, 184, 213,
	246, 245, 271, 0, 0, 0, 0, 0, 0, 157,
	0, 258, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 168, 209, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	256, 269, 259, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 194, 195, 196, 197, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	162, 0, 164, 136, 208, 159, 266, 171, 200, 167,
	232, 172, 179, 220, 265, 206, 225, 135, 255, 233,
	183, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 0, 176,
	264, 218, 155, 83, 84, 85, 86, 87, 88, 89,
	90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
	100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 257,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 175, 0, 177, 0, 0, 234,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	379, 380, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 239, 253, 134, 230, 267, 138, 237,
	130, 204, 226, 126, 251, 236, 187, 169, 170, 125,
	0, 221, 148, 161, 145, 202, 0, 0, 144, 270,
	383, 261, 128, 382, 260, 201, 248, 252, 188, 182,
	127, 250, 186, 181, 173, 152, 165, 214, 180, 215,
	166, 192, 191, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 174, 0,
	0, 0, 0, 0, 224, 207, 0, 0, 212, 222,
	178, 249, 216, 254, 240, 262, 0, 217, 120, 241,
	147, 189, 131, 132, 143, 149, 151, 153, 154, 198,
	199, 210, 229, 242, 243, 244, 146, 139, 223, 140,
	163, 141, 121, 231, 142, 122, 211, 247, 0, 160,
	219, 185, 123, 184, 213, 246, 245, 271, 0, 0,
	0, 0, 0, 0, 157, 0, 258, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 168, 209,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 256, 269, 259, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 194, 195,
	196, 197, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 162, 0, 164, 136, 208,
	159, 266, 171, 376, 372, 373, 172, 179, 220, 265,
	206, 225, 135, 255, 233, 374, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 176, 264, 218, 155, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 257, 205, 0, 501, 0, 0,
	0, 0, 0, 0, 0, 150, 502, 0, 0, 175,
	0, 177, 0, 0, 234, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 0, 0, 321, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 239, 253,
	134, 230, 267, 138, 237, 130, 204, 226, 126, 251,
	236, 187, 169, 170, 125, 0, 221, 148, 161, 145,
	202, 0, 0, 144, 270, 0, 261, 128, 129, 260,
	201, 248, 252, 188, 182, 127, 250, 186, 181, 173,
	152, 165, 214, 180, 215, 166, 192, 191, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 174, 0, 0, 0, 0, 0, 224,
	207, 0, 0, 212, 222, 178, 249, 216, 254, 240,
	262, 0, 217, 120, 241, 147, 189, 131, 132, 143,
	149, 151, 153, 154, 198, 199, 210, 229, 242, 243,
	244, 146, 139, 223, 140, 163, 141, 121, 231, 142,
	122, 211, 247, 0, 160, 219, 185, 123, 184, 213,
	246, 245, 271, 0, 0, 0, 0, 0, 0, 157,
	0, 258, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 168, 209, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	256, 269, 259, 0, 0, 0, 268, 0, 0, 0,
	0, 503, 0, 194, 195, 196, 197, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	162, 0, 164, 136, 208, 159, 266, 171, 200, 167,
	232, 172, 179, 220, 265, 206, 225, 135, 255, 233,
	183, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 0, 176,
	264, 218, 155, 83, 84, 85, 86, 87, 88, 89,
	90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
	100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 257,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 175, 0, 177, 0,
	0, 234, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	841, 80, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 239, 253, 134, 230, 267,
	138, 237, 130, 204, 226, 126, 251, 236, 187, 169,
	170, 125, 0, 221, 148, 161, 145, 202, 0, 0,
	144, 270, 0, 261, 128, 129, 260, 201, 248, 252,
	188, 182, 127, 250, 186, 181, 173, 152, 165, 214,
	180, 215, 166, 192, 191, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	174, 0, 0, 0, 0, 0, 224, 207, 0, 0,
	212, 222, 178, 249, 216, 254, 240, 262, 0, 217,
	120, 241, 147, 189, 131, 132, 143, 149, 151, 153,
	154, 198, 199, 210, 229, 242, 243, 244, 146, 139,
	223, 140, 163, 141, 121, 231, 142, 122, 211, 247,
	0, 160, 219, 185, 123, 184, 213, 246, 245, 271,
	0, 0, 0, 0, 0, 0, 157, 0, 258, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	168, 209, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 256, 269, 259,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	194, 195, 196, 197, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 162, 0, 164,
	136, 208, 159, 266, 171, 200, 167, 232, 172, 179,
	220, 265, 206, 225, 135, 255, 233, 183, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 176, 264, 218, 155,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 257, 205, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 0, 0, 321,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 0, 0, 144, 270, 0, 261, 128,
	129, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 0,
	0, 224, 207, 0, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 0, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 157, 0, 258, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 168, 209, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 256, 269, 259, 0, 0, 0, 268, 0,
	0, 0, 0, 729, 0, 194, 195, 196, 197, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 162, 0, 164, 136, 208, 159, 266, 171,
	200, 167, 232, 172, 179, 220, 265, 206, 225, 135,
	255, 233, 183, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 176, 264, 218, 155, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 257, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 175, 0, 177, 0,
	0, 234, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 80, 609, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 239, 253, 134, 230, 267,
	138, 237, 130, 204, 226, 126, 251, 236, 187, 169,
	170, 125, 0, 221, 148, 161, 145, 202, 0, 0,
	144, 270, 0, 261, 128, 129, 260, 201, 248, 252,
	188, 182, 127, 250, 186, 181, 173, 152, 165, 214,
	180, 215, 166, 192, 191, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	174, 0, 0, 0, 0, 0, 224, 207, 0, 0,
	212, 222, 178, 249, 216, 254, 240, 262, 0, 217,
	120, 241, 147, 189, 131, 132, 143, 149, 151, 153,
	154, 198, 199, 210, 229, 242, 243, 244, 146, 139,
	223, 140, 163, 141, 121, 231, 142, 122, 211, 247,
	0, 160, 219, 185, 123, 184, 213, 246, 245, 271,
	0, 0, 0, 0, 0, 0, 157, 0, 258, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	168, 209, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 256, 269, 259,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	194, 195, 196, 197, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 162, 0, 164,
	136, 208, 159, 266, 171, 200, 167, 232, 172, 179,
	220, 265, 206, 225, 135, 255, 233, 183, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 176, 264, 218, 155,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 257, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 0, 684,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 0, 0, 144, 270, 0, 261, 128,
	129, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 0,
	0, 224, 207, 0, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 0, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 157, 0, 258, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 168, 209, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 256, 269, 259, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 1281, 194, 195, 196, 197, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 162, 0, 164, 136, 208, 159, 266, 171,
	200, 167, 232, 172, 179, 220, 265, 206, 225, 135,
	255, 233, 183, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 176, 264, 218, 155, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 257, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 1070, 0, 0, 175, 0, 177, 0,
	0, 234, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 0, 684, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 239, 253, 134, 230, 267,
	138, 237, 130, 204, 226, 126, 251, 236, 187, 169,
	170, 125, 0, 221, 148, 161, 145, 202, 0, 0,
	144, 270, 0, 261, 128, 129, 260, 201, 248, 252,
	188, 182, 127, 250, 186, 181, 173, 152, 165, 214,
	180, 215, 166, 192, 191, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	174, 0, 0, 0, 0, 0, 224, 207, 0, 0,
	212, 222, 178, 249, 216, 254, 240, 262, 0, 217,
	120, 241, 147, 189, 131, 132, 143, 149, 151, 153,
	154, 198, 199, 210, 229, 242, 243, 244, 146, 139,
	223, 140, 163, 141, 121, 231, 142, 122, 211, 247,
	0, 160, 219, 185, 123, 184, 213, 246, 245, 271,
	0, 0, 0, 0, 0, 0, 157, 0, 258, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	168, 209, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 256, 269, 259,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	194, 195, 196, 197, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 162, 0, 164,
	136, 208, 159, 266, 171, 200, 167, 232, 172, 179,
	220, 265, 206, 225, 135, 255, 233, 183, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 176, 264, 218, 155,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 257, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 609, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 0, 0, 144, 270, 0, 261, 128,
	129, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 0,
	0, 224, 207, 0, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 0, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 157, 0, 258, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 168, 209, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 256, 269, 259, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 194, 195, 196, 197, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 162, 0, 164, 136, 208, 159, 266, 171,
	200, 167, 232, 172, 179, 220, 265, 206, 225, 135,
	255, 233, 183, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 176, 264, 218, 155, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 257, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 175, 0, 177, 0,
	0, 234, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 80, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 239, 253, 134, 230, 267,
	138, 237, 130, 204, 226, 126, 251, 236, 187, 169,
	170, 125, 0, 221, 148, 161, 145, 202, 0, 0,
	144, 270, 0, 261, 128, 129, 260, 201, 248, 252,
	188, 182, 127, 250, 186, 181, 173, 152, 165, 214,
	180, 215, 166, 192, 191, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	174, 0, 0, 0, 0, 0, 224, 207, 0, 0,
	212, 222, 178, 249, 216, 254, 240, 262, 0, 217,
	120, 241, 147, 189, 131, 132, 143, 149, 151, 153,
	154, 198, 199, 210, 229, 242, 243, 244, 146, 139,
	223, 140, 163, 141, 121, 231, 142, 122, 211, 247,
	0, 160, 219, 185, 123, 184, 213, 246, 245, 271,
	0, 0, 0, 0, 0, 0, 157, 0, 258, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	168, 209, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 256, 269, 259,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	194, 195, 196, 197, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 162, 0, 164,
	136, 208, 159, 266, 171, 200, 167, 232, 172, 179,
	220, 265, 206, 225, 135, 255, 233, 183, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 176, 264, 218, 155,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 257, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 0, 684,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 0, 0, 144, 270, 0, 261, 128,
	129, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 0,
	0, 224, 207, 0, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 0, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 157, 0, 258, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 168, 209, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 256, 269, 259, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 194, 195, 196, 197, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 162, 0, 164, 136, 208, 159, 266, 171,
	200, 167, 232, 172, 179, 220, 265, 206, 225, 135,
	255, 233, 183, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 176, 264, 218, 155, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 257, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 175, 0, 177, 0,
	0, 234, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 239, 253, 134, 230, 267,
	138, 237, 130, 204, 226, 126, 251, 236, 187, 169,
	170, 125, 0, 221, 148, 161, 145, 202, 0, 0,
	144, 270, 0, 261, 128, 129, 260, 201, 248, 252,
	188, 182, 127, 250, 186, 181, 173, 152, 165, 214,
	180, 215, 166, 192, 191, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	174, 0, 0, 0, 0, 0, 224, 207, 0, 0,
	212, 222, 178, 249, 216, 254, 240, 262, 0, 217,
	120, 241, 147, 189, 131, 132, 143, 149, 151, 153,
	154, 198, 199, 210, 229, 242, 243, 244, 146, 139,
	223, 140, 163, 141, 121, 231, 142, 122, 211, 247,
	0, 160, 219, 185, 123, 184, 213, 246, 245, 271,
	0, 0, 0, 0, 0, 0, 157, 0, 258, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	168, 209, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 256, 269, 259,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	194, 195, 196, 197, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 162, 0, 164,
	136, 208, 159, 266, 171, 200, 167, 232, 172, 179,
	220, 265, 206, 225, 135, 255, 233, 183, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 176, 264, 218, 155,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 257, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 0, 0, 144, 270, 0, 261, 128,
	129, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 0,
	0, 224, 207, 0, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 0, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 157, 0, 258, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 168, 209, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 256, 269, 259, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 194, 195, 196, 197, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 162, 0, 164, 136, 208, 159, 266, 171,
	200, 167, 232, 172, 179, 220, 265, 206, 225, 135,
	255, 233, 183, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 176, 264, 218, 155, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 257, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 175, 0, 177, 0,
	0, 234, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 239, 253, 134, 230, 267,
	138, 237, 130, 204, 226, 126, 251, 236, 187, 169,
	170, 125, 0, 221, 148, 161, 145, 202, 0, 0,
	144, 270, 0, 261, 128, 129, 260, 201, 248, 252,
	188, 182, 127, 250, 186, 181, 173, 152, 165, 214,
	180, 215, 166, 192, 191, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	174, 0, 0, 0, 0, 0, 224, 207, 0, 0,
	212, 222, 178, 249, 216, 254, 240, 262, 0, 217,
	120, 241, 147, 189, 131, 132, 143, 149, 151, 153,
	154, 198, 199, 210, 229, 242, 243, 244, 146, 139,
	223, 140, 163, 141, 121, 231, 142, 122, 211, 247,
	0, 160, 219, 185, 123, 184, 213, 246, 245, 271,
	0, 0, 0, 0, 0, 0, 157, 0, 258, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	168, 209, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 256, 269, 259,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	194, 195, 196, 197, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 162, 0, 164,
	136, 208, 159, 266, 171, 200, 167, 232, 172, 179,
	220, 265, 206, 225, 135, 255, 233, 183, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 176, 264, 218, 155,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 257, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 0, 0, 321,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 0, 0, 144, 270, 0, 261, 128,
	129, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 0,
	0, 224, 207, 0, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 0, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 157, 0, 258, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 168, 209, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 256, 269, 259, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 194, 195, 196, 197, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 162, 0, 164, 136, 208, 159, 266, 171,
	200, 167, 232, 172, 179, 220, 265, 206, 225, 135,
	255, 233, 183, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 176, 264, 218, 155, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 257, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 175, 0, 177, 0,
	0, 234, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 0, 684, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 239, 253, 134, 230, 267,
	138, 237, 130, 204, 226, 126, 251, 236, 187, 169,
	170, 125, 0, 221, 148, 161, 145, 202, 0, 0,
	144, 270, 0, 261, 128, 129, 260, 201, 248, 252,
	188, 182, 127, 250, 186, 181, 173, 152, 165, 214,
	180, 215, 166, 192, 191, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	174, 0, 0, 0, 0, 0, 224, 207, 0, 0,
	212, 222, 178, 249, 216, 254, 240, 262, 0, 217,
	120, 241, 147, 189, 131, 132, 143, 149, 151, 153,
	154, 198, 199, 210, 229, 242, 243, 244, 146, 139,
	223, 140, 163, 141, 121, 231, 142, 122, 211, 247,
	0, 160, 219, 185, 123, 184, 213, 246, 245, 271,
	0, 0, 0, 0, 0, 0, 157, 0, 258, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	168, 209, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 256, 269, 720,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	194, 195, 196, 197, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 162, 0, 164,
	136, 208, 159, 266, 171, 200, 167, 232, 172, 179,
	220, 265, 206, 225, 135, 255, 233, 183, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 176, 264, 218, 155,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 257, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 150, 0, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 0, 0, 144, 270, 0, 261, 128,
	129, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 0,
	0, 224, 207, 0, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 0, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 157, 0, 258, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 168, 209, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 256, 269, 259, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 194, 195, 196, 197, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 162, 0, 164, 136, 208, 159, 266, 171,
	200, 167, 232, 172, 179, 220, 265, 206, 225, 135,
	255, 233, 183, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 176, 264, 218, 155, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 257, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 175, 0, 177, 0,
	0, 234, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 239, 253, 134, 230, 267,
	138, 237, 130, 204, 226, 126, 251, 236, 187, 169,
	170, 125, 0, 221, 148, 161, 145, 202, 0, 0,
	144, 270, 0, 261, 128, 129, 260, 201, 248, 252,
	188, 182, 127, 250, 186, 181, 173, 152, 165, 214,
	180, 215, 166, 192, 191, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	174, 0, 0, 0, 0, 0, 224, 207, 0, 0,
	212, 222, 178, 249, 216, 254, 240, 262, 0, 217,
	120, 241, 147, 189, 131, 132, 143, 149, 151, 153,
	154, 198, 199, 210, 229, 242, 243, 244, 146, 139,
	223, 140, 163, 141, 121, 231, 142, 122, 211, 247,
	0, 160, 219, 185, 123, 184, 213, 246, 245, 271,
	0, 0, 0, 0, 0, 0, 157, 0, 258, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	168, 209, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 256, 269, 259,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	194, 195, 196, 197, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 162, 0, 164,
	136, 208, 159, 266, 171, 200, 167, 232, 172, 179,
	220, 265, 206, 225, 135, 255, 233, 183, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 176, 264, 218, 155,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 257, 205, 0, 0,
	0, 0, 427, 0, 0, 0, 0, 150, 0, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 432, 433, 434, 429,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 0, 0, 144, 270, 0, 261, 128,
	129, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 0,
	0, 224, 207, 0, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 0, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 157, 0, 258, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 168, 209, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 256, 269, 259, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 194, 195, 196, 197, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 162, 0, 164, 136, 208, 159, 266, 171,
	200, 167, 232, 172, 179, 220, 265, 206, 225, 135,
	255, 233, 183, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 0, 119,
	0, 176, 264, 218, 155, 0, 150, 0, 0, 0,
	175, 0, 177, 0, 0, 234, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 432, 433, 434, 429, 0,
	0, 257, 133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 239,
	253, 134, 230, 267, 138, 237, 130, 204, 226, 126,
	251, 236, 187, 169, 170, 125, 0, 221, 148, 161,
	145, 202, 0, 0, 144, 270, 0, 261, 128, 129,
	260, 201, 248, 252, 188, 182, 127, 250, 186, 181,
	173, 152, 165, 214, 180, 215, 166, 192, 191, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 174, 0, 0, 0, 0, 0,
	224, 207, 0, 0, 212, 222, 178, 249, 216, 254,
	240, 262, 0, 217, 120, 241, 147, 189, 131, 132,
	143, 149, 151, 153, 154, 198, 199, 210, 229, 242,
	243, 244, 146, 139, 223, 140, 163, 141, 121, 231,
	142, 122, 211, 247, 0, 160, 219, 185, 123, 184,
	213, 246, 245, 271, 0, 0, 0, 0, 0, 0,
	157, 0, 258, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 168, 209, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 256, 269, 259, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 194, 195, 196, 197, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 162, 0, 164, 136, 208, 159, 266, 171, 200,
	167, 232, 172, 179, 220, 265, 206, 225, 135, 255,
	233, 183, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 119, 0,
	176, 264, 218, 155, 0, 150, 0, 0, 0, 175,
	0, 177, 0, 0, 234, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 432, 433, 434, 0, 0, 0,
	257, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 239, 253,
	134, 230, 267, 138, 237, 130, 204, 226, 126, 251,
	236, 187, 169, 170, 125, 0, 221, 148, 161, 145,
	202, 0, 0, 144, 270, 0, 261, 128, 129, 260,
	201, 248, 252, 188, 182, 127, 250, 186, 181, 173,
	152, 165, 214, 180, 215, 166, 192, 191, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 174, 0, 0, 0, 0, 0, 224,
	207, 0, 0, 212, 222, 178, 249, 216, 254, 240,
	262, 0, 217, 120, 241, 147, 189, 131, 132, 143,
	149, 151, 153, 154, 198, 199, 210, 229, 242, 243,
	244, 146, 139, 223, 140, 163, 141, 121, 231, 142,
	122, 211, 247, 0, 160, 219, 185, 123, 184, 213,
	246, 245, 271, 0, 0, 0, 0, 0, 1520, 157,
	0, 258, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 1042, 168, 209, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	256, 269, 259, 0, 0, 0, 268, 0, 1582, 0,
	0, 0, 0, 194, 195, 196, 197, 1502, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	162, 0, 164, 136, 208, 159, 266, 171, 200, 167,
	232, 172, 179, 220, 265, 206, 225, 135, 255, 233,
	183, 158, 0, 74, 0, 22, 37, 23, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 0, 176,
	264, 218, 155, 62, 0, 0, 0, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 38, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 65, 66, 1499,
	67, 68, 0, 1501, 1503, 1505, 0, 1507, 1508, 1509,
	1511, 1512, 1513, 1515, 1516, 1517, 1518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 64, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 63, 61, 60, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1514, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 46, 0, 0,
	0, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
}

var yyPact = [...]int{
	15677, -1000, -293, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13839, 1481, -1000, 6717, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12259, 14234, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 5915, 5508, 91, -1000,
	1468, -1000, -1000, -1000, 98, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 345, -98, 253, 257, 279, 279, 7112,
	1468, 1214, -35, -1000, 1418, 15677, 132, 14234, -1000, 319,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 12259, 14234, -131, 410, -1000, 1103, 317, -1000,
	-1000, -1000, -1000, 1278, -1000, -1000, -1000, 1420, 14629, 1214,
	-1000, 1204, 1158, -1000, -1000, 1322, -1000, 68, -56, -85,
	3, -1000, -1000, 118, -1000, -1000, -1000, -1000, -1000, -24,
	-1000, -68, -1000, -76, -1000, -1000, -1000, -172, -1000, -1000,
	-1000, -1000, -1000, 1097, 300, 1343, -212, -1000, 1429, 1214,
	1458, 1432, 144, 144, 164, 144, 168, -1000, -1000, -1000,
	-1000, -1000, -1000, 441, 116, -1000, -1000, -164, -178, 348,
	-178, -46, -1000, -1000, -1000, -1000, -1000, -1000, 152, -1000,
	-215, -1000, 237, -1000, 234, -1000, 8297, 113, 1168, 430,
	-1000, 350, 14234, 14234, 14234, 301, 560, 554, 305, -1000,
	-1000, -1000, 1396, 1397, 1429, 1214, -1000, 1044, 974, 152,
	152, 152, 152, 152, 3886, -1000, -1000, -1000, -1000, -1000,
	1248, 1319, -1000, 14234, 1291, -1000, 304, 715, 825, -1000,
	14234, 14234, 12259, 12259, 12259, 12259, -1000, 1363, 1362, -1000,
	1374, 1355, 1381, 15327, -1000, -1000, -1000, 14978, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1015, 1468, 62, 698, 11469,
	13049, 14234, 11469, -1000, -1000, -1000, -1000, -1000, -174, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 62,
	11469, 11469, -140, -1000, -1000, 4291, -1000, -1000, 4291, -1000,
	-1000, 11469, 431, 13049, 790, 14234, 144, 14234, -1000, -1000,
	348, 348, -1000, 441, 441, -1000, -1000, -186, 1466, 4696,
	-188, 14234, 144, 13444, 1413, -205, 250, 239, 243, -1000,
	-1000, -214, -1000, -1000, 1136, 9099, 7902, 142, 11469, 2264,
	-1000, -1000, 350, 350, 350, 2264, 851, 314, -1000, -1000,
	-1000, -1000, -1000, -1000, 14234, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 11469, 13049, 14234, 14234, 15327, 1154, -1000,
	-1000, 7507, 303, 4291, 763, 1316, -1000, 1315, 1314, 1313,
	1312, 1303, 1302, 1300, 1264, 1299, 1298, -1000, -1000, -1000,
	1296, 1295, 1264, 1293, 1290, 1289, -1000, -1000, 1662, -1000,
	-1000, -1000, -1000, 3481, 4696, 4696, 4696, 4696, -1000, -1000,
	1287, 1286, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 5101, -1000, 1277, 1273, 1264, 1262,
	824, 819, 818, 1261, 1259, 1257, 4696, 1256, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1245, -1000, 8704, 14234, -1000, 1460, 4291,
	1901, -1000, 1053, 288, 1085, -1000, 409, 1331, 1341, 1331,
	-1000, -1000, -1000, -1000, 1356, -1000, 1354, -1000, -1000, -1000,
	-1000, -1000, 440, -1000, -1000, -1000, -1000, -1000, -68, -76,
	1106, -1000, -105, 65, -1000, -1000, 1196, -1000, -1000, -1000,
	440, 1106, 161, 814, 662, 286, 1163, -1000, 845, 141,
	1410, 1136, 1334, 1399, 14234, 1466, 1466, 1466, 348, 15327,
	441, 14234, 441, -1000, -1000, 441, -1000, 283, 14234, 141,
	1255, -1000, -1000, -1000, 245, 232, 231, 13049, 159, -1000,
	-1000, 1136, -1000, -1000, -1000, 1253, 407, -1000, -1000, 4696,
	-1000, 594, -1000, 2264, 2264, 2264, -1000, 350, 10284, -1000,
	1106, 1136, 1339, 1156, -1000, -1000, -1000, -1000, 1466, 3886,
	-1000, 12259, -1000, 4291, 4291, 4291, -1000, 14234, 12654, -1000,
	479, 4696, -1000, -1000, -1000, -1000, -1000, -1000, 4291, 1424,
	1424, 1424, 4291, 543, 4291, 4291, -1000, 655, 1424, 1424,
	1424, 1424, -1000, 1424, 1424, 1424, 4696, 4696, 4696, 4696,
	4696, 4696, 4696, 4696, 4696, 4696, 4696, 4696, 1246, 495,
	4696, 4696, 4696, 974, 1080, 1138, -1000, -1000, -1000, -1000,
	-1000, 4291, 236, 4291, -1000, 1002, -1000, -1000, 4291, -1000,
	-1000, -1000, 4291, 4696, 4291, -1000, 1424, 1073, -1000, 3074,
	1194, 1372, -1000, 281, 1173, -1000, 1429, 594, -1000, 272,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -133, -1000, 14234,
	1460, 14234, 4291, -1000, -1000, 4291, 1252, -1000, 4291, -1000,
	-1000, -1000, 1477, 270, 269, 11469, -1000, 112, 11469, -1000,
	-1000, 14234, 158, 11469, -52, 4291, 4291, 14234, 4291, -1000,
	-1000, -1000, -240, -1000, -116, -1000, 1338, 34, -1000, 1399,
	-1000, 248, -1000, 1251, -1000, -1000, -1000, 1466, -1000, 348,
	-1000, 348, 441, 14234, -1000, -1000, -240, 973, -1000, -1000,
	-1000, 226, 1136, 11469, 806, 142, -1000, -1000, -1000, 2264,
	-1000, -1000, 14234, 14234, 1464, -1000, 1123, 1317, -1000, 425,
	444, -1000, 266, -1000, -1000, 500, -1000, 971, 1071, 594,
	4291, -1000, -1000, 4291, 4291, 987, 4291, 969, 1171, 1160,
	-1000, 967, -1000, 4291, 4291, 4291, 4291, 4291, 4291, 4291,
	983, 1135, -1000, 532, 532, 325, 325, 325, 325, 325,
	524, 524, -1000, -1000, -1000, 3481, 1246, 4696, 4696, 4696,
	139, 2335, 2651, -1000, 4291, 672, -1000, -1000, 962, -1000,
	864, 957, 1417, 950, 4291, 1245, 945, 1108, -1000, 1247,
	14234, 1245, 14234, -1000, 14234, -1000, 1901, 709, -1000, 1429,
	-1000, 594, 594, 14234, 594, 11469, 291, 434, -1000, 9889,
	11469, -1000, -1000, 11469, 74, 1402, -1000, -1000, 594, 594,
	265, -1000, -1000, -132, -1000, -1000, -1000, 124, -1000, 813,
	812, 809, 808, 14234, -1000, -1000, -1000, -1000, 404, 404,
	404, 1396, 6310, -1000, 1466, 1466, 348, -1000, -60, -107,
	-1000, 1106, 943, -1000, -1000, -1000, -1000, -1000, 1462, 1451,
	12259, 11864, -1000, -1000, 4291, 1052, 1004, 990, 84, 1152,
	-1000, -1000, -1000, -1000, 977, 970, 965, 956, 929, 925,
	871, 1146, -1000, 139, 2335, 2246, -1000, 4696, 4696, 833,
	84, 605, -1000, -1000, 605, -1000, 4696, -1000, 802, -1000,
	-1000, 3074, 1245, -1000, -1000, 1073, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1144, -1000, 1106, -1000, -1000, -1000,
	-1000, 11469, 1419, 141, -1000, -65, 167, 14234, -132, -1000,
	708, 700, 699, 689, -102, -1000, -1000, -1000, -1000, -1000,
	1244, 605, -1000, 656, 807, 932, 1095, -1000, -1000, -1000,
	104, 392, -1000, 14234, 488, 273, 144, 273, 471, 1240,
	-1000, -1000, -1000, -1000, 1466, -1000, -60, -1000, 196, 204,
	-33, 1449, -1000, -1000, 4291, 4291, 1317, -1000, -1000, 594,
	-1000, -1000, -1000, 924, 1224, 1224, -1000, 1224, 1224, 1224,
	1229, 1235, 1229, 218, 218, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4696, -1000, -1000, -1000, 910,
	899, 875, 1078, -1000, -1000, 1073, -1000, 14234, -1000, 11469,
	11469, -241, -69, 14234, -1000, -1000, -1000, -1000, -1000, -1000,
	11074, -1000, -1000, -1000, -1000, -1000, -1000, 732, 6310, 1342,
	-90, -1000, -1000, -1000, 1224, -1000, 1224, 1224, 1224, 1224,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1239,
	1237, -1000, 1224, 1224, 1224, 1224, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1229, 1235, 1229, -1000, -1000, 14234, 14234, -1000, 14234,
	14234, 144, 4291, -1000, -1000, -1000, -1000, 683, -1000, -1000,
	-1000, 806, 594, 1071, -1000, -1000, 674, -1000, -1000, -1000,
	-1000, -1000, 671, -1000, 667, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-188, 1142, -1000, 1224, 4291, 131, 15583, -1000, 404, 404,
	282, 404, 404, 404, 404, 95, 94, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, -1000, -1000, 1342, -1000, -1000, 498, 4696, -1000, -1000,
	783, 656, 318, 310, 1223, -1000, 56, 456, 443, -1000,
	14234, -1000, -94, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	782, 782, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1222,
	1333, 2, 1221, -1000, 1220, 1218, 14234, 784, -43, -1000,
	-1000, 873, 1055, 1140, -161, -149, -1000, 11074, 1406, 722,
	-1000, 1447, 732, -1000, 658, 657, 404, 404, 614, 781,
	779, 775, 404, 404, 604, 772, 14978, 584, 572, 556,
	714, 766, 365, 705, 673, 545, 14234, 1217, -1000, -1000,
	2335, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 550, 1216, -1000, -1000, 1213, -1000, -1000, 1120,
	-1000, 1117, 11074, 28, 28, 11074, 11074, 11074, 1212, 224,
	-1000, -1000, 544, -1000, 539, 156, -155, -149, -1000, 1446,
	-146, 1445, 1444, 73, -1000, -1000, 1406, 52, -1000, -1000,
	-1000, 605, 605, -1000, -1000, -1000, -1000, 748, 746, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 102, 14234, 870, 4291, -234, 11074, -1000, 744, -1000,
	1112, -1000, -1000, -1000, -1000, -1000, 1088, 1082, 1024, 11074,
	-1000, -1000, -1000, 50, 854, 834, 1211, 533, -142, 1443,
	-1000, 731, 1442, 731, 731, -1000, 404, 743, -9, -1000,
	-1000, -1000, 33, 92, 90, -1000, 157, -1000, -1000, -1000,
	-1000, -1000, -1000, 107, 1022, -1000, 710, 1337, -1000, -91,
	1020, -1000, -1000, -1000, -1000, -1000, 996, -1000, -1000, -1000,
	1387, 9494, -169, -1000, 1440, 735, -1000, -1000, 731, -1000,
	-1000, 531, -1000, 790, 29, 523, 4696, 1209, 4696, 1208,
	46, 1207, -1000, -1000, -1000, 224, -1000, -1000, 1336, 1294,
	1471, -1000, -1000, -1000, -1000, 73, 73, 73, 73, -72,
	-1000, 14234, -1000, 986, -1000, -1000, -1000, 264, -1000, 723,
	-1000, -1000, -1000, -1000, 1206, 1439, -1000, 866, 14234, 832,
	14234, 1203, 378, 4696, -1000, -1000, 1492, -1000, 1472, 290,
	290, -1000, 984, -1000, 375, -1000, 10679, 14234, -1000, -1000,
	130, 39, -1000, 942, -1000, 938, 14234, 511, 589, -1000,
	-1000, -1000, 537, 64, -1000, 14234, 2669, -1000, 262, 890,
	-1000, 846, 17, -1000, -1000, 859, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 594, 14234, -1000, 130, 1225, -1000, 506,
	-1000, -1000, -1000, 1425, 127, -1000, -1000, 1425, 22, -1000,
	125, -1000, -1000, 842, -1000, 725, 1180, -1000, 22, 732,
	4291, -1000, 732, 831, -1000,
}

var yyPgo = [...]int{
	0, 605, 1823, 1822, 758, 709, 1820, 1818, 1817, 1815,
	1814, 1813, 1812, 1807, 1806, 1804, 1803, 1802, 1801, 1800,
	1799, 1798, 1797, 1796, 1795, 1792, 1790, 1788, 1787, 1786,
	1785, 1784, 655, 1783, 1782, 1777, 1775, 1758, 1755, 114,
	1754, 1753, 1752, 1751, 1750, 1747, 1744, 1742, 85, 79,
	1741, 80, 125, 1739, 100, 1738, 69, 130, 1736, 1735,
	29, 96, 1734, 98, 95, 71, 181, 74, 1733, 1732,
	1731, 1730, 103, 1729, 1728, 1727, 1726, 50, 1722, 63,
	30, 28, 1720, 66, 1719, 1718, 1717, 1716, 1715, 1714,
	1713, 58, 41, 1712, 1711, 1709, 1707, 1705, 40, 1704,
	34, 1701, 1700, 1699, 1698, 1696, 1695, 17, 18, 21,
	1694, 1692, 16, 2, 1691, 1690, 91, 1689, 1688, 1687,
	595, 1685, 1684, 1683, 115, 1682, 110, 1681, 1680, 1676,
	1675, 9, 1674, 54, 1673, 43, 1670, 1669, 76, 35,
	84, 75, 1668, 1666, 1662, 102, 20, 116, 0, 119,
	37, 1661, 111, 105, 1659, 72, 139, 94, 45, 1648,
	36, 52, 1644, 1643, 1640, 55, 12, 1639, 82, 11,
	68, 1635, 77, 97, 1, 73, 1631, 104, 1629, 1628,
	93, 1627, 1626, 46, 89, 1625, 1624, 1623, 27, 1622,
	33, 25, 1620, 117, 109, 1619, 1618, 1616, 107, 90,
	64, 1615, 1614, 60, 1613, 88, 62, 99, 1612, 579,
	1591, 83, 51, 19, 1590, 118, 1580, 127, 113, 92,
	1579, 1577, 122, 1393, 121, 1576, 101, 10, 1575, 1574,
	13, 1573, 22, 1572, 1570, 1569, 1568, 6, 1564, 1563,
	1562, 3, 5, 1561, 4, 87, 1558, 1557, 61, 49,
	57, 1556, 1554, 1553, 124, 1551, 1550, 1549, 1548, 1547,
	1546, 1545, 65, 1543, 1542, 1539, 1538, 67, 1537, 1536,
	1535, 1533, 1531, 31, 1530, 24, 1517, 1516, 1515, 1514,
	14, 1512, 1511, 15, 1510, 1509, 7, 8, 1508, 1505,
	44, 42, 32, 59, 56, 1504, 1503, 112, 1502,
}

//line mysql_sql.y:5682
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) intervalTypeUnion() tree.IntervalType {
	v, _ := st.union.(tree.IntervalType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 295, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	47, 289, 289, 288, 288, 287, 287, 286, 286, 286,
	285, 285, 285, 284, 284, 283, 283, 281, 281, 282,
	280, 279, 279, 278, 278, 276, 276, 277, 277, 272,
	272, 274, 274, 273, 273, 273, 273, 275, 271, 271,
	271, 270, 270, 46, 46, 46, 212, 212, 45, 45,
	226, 226, 226, 226, 226, 224, 224, 224, 224, 223,
	223, 222, 222, 227, 227, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 40, 40,
	40, 40, 43, 44, 220, 220, 220, 220, 220, 221,
	221, 221, 41, 42, 42, 211, 211, 216, 216, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 210, 210, 219, 219, 219, 218, 218, 217, 217,
	34, 34, 34, 37, 36, 209, 209, 209, 209, 209,
	209, 209, 209, 35, 35, 35, 35, 35, 35, 33,
	33, 32, 208, 208, 207, 39, 39, 39, 39, 38,
	38, 38, 38, 38, 38, 38, 151, 151, 151, 7,
	31, 31, 254, 254, 162, 162, 163, 163, 161, 161,
	161, 161, 161, 161, 257, 258, 158, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 30, 296, 296,
	296, 28, 29, 253, 253, 253, 27, 26, 25, 24,
	24, 23, 22, 22, 155, 155, 157, 157, 153, 297,
	297, 232, 232, 156, 156, 21, 21, 154, 154, 136,
	152, 152, 152, 6, 8, 8, 8, 8, 8, 13,
	12, 11, 10, 9, 5, 4, 261, 261, 261, 261,
	261, 71, 71, 67, 67, 262, 262, 175, 269, 269,
	268, 268, 267, 267, 69, 69, 70, 70, 59, 59,
	48, 48, 49, 49, 49, 65, 65, 66, 66, 66,
	64, 64, 63, 62, 62, 61, 60, 60, 60, 51,
	51, 50, 50, 50, 50, 50, 120, 120, 120, 52,
	255, 255, 255, 260, 260, 117, 117, 118, 118, 116,
	116, 53, 53, 54, 54, 54, 54, 115, 115, 114,
	55, 55, 56, 56, 58, 58, 58, 58, 125, 125,
	124, 124, 124, 124, 74, 74, 123, 122, 122, 122,
	73, 73, 72, 72, 68, 68, 57, 57, 121, 298,
	298, 119, 144, 144, 144, 150, 150, 143, 143, 143,
	149, 149, 145, 145, 146, 146, 146, 3, 3, 3,
	16, 16, 16, 14, 205, 205, 204, 204, 206, 206,
	206, 206, 200, 200, 201, 201, 201, 201, 202, 202,
	202, 203, 203, 203, 203, 199, 199, 198, 196, 196,
	196, 197, 197, 197, 197, 197, 197, 147, 147, 15,
	193, 193, 194, 194, 194, 195, 195, 187, 187, 187,
	187, 19, 191, 191, 192, 192, 192, 192, 192, 188,
	188, 190, 190, 186, 186, 186, 186, 18, 185, 185,
	183, 183, 181, 181, 182, 182, 180, 180, 180, 184,
	184, 17, 256, 256, 228, 228, 231, 231, 238, 238,
	239, 239, 237, 237, 244, 244, 243, 243, 242, 242,
	241, 241, 240, 240, 235, 235, 234, 234, 229, 229,
	229, 229, 229, 230, 230, 233, 233, 236, 236, 96,
	96, 97, 97, 97, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 99, 99, 99, 103, 103, 103, 103, 103,
	103, 98, 98, 98, 100, 100, 100, 81, 81, 80,
	80, 75, 75, 76, 76, 77, 77, 78, 78, 79,
	79, 79, 79, 79, 79, 214, 214, 293, 293, 294,
	294, 290, 290, 290, 292, 292, 292, 291, 291, 82,
	132, 132, 132, 148, 148, 148, 131, 131, 131, 95,
	95, 94, 94, 92, 92, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 213, 213, 159, 159,
	160, 160, 112, 110, 110, 111, 111, 111, 111, 108,
	109, 107, 107, 107, 107, 107, 106, 106, 105, 105,
	105, 189, 189, 104, 104, 102, 102, 102, 101, 101,
	101, 245, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 91, 91, 91, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 266, 266, 266, 127, 129, 129, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 176, 176, 177, 177, 263, 263, 263, 263, 263,
	263, 264, 264, 265, 265, 265, 265, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 167, 126, 126, 126, 246,
	178, 173, 173, 174, 174, 169, 169, 169, 169, 169,
	171, 171, 171, 171, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 170, 170, 172, 172, 179, 179, 179,
	179, 179, 179, 93, 93, 93, 93, 247, 164, 164,
	164, 164, 164, 164, 84, 84, 84, 84, 88, 88,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 89, 89, 89, 87, 87, 87,
	87, 87, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 86, 133, 133,
	248, 248, 249, 249, 250, 250, 250, 251, 251, 251,
	252, 252, 135, 135, 135, 140, 140, 134, 134, 141,
	141, 142, 142, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	14, 0, 2, 1, 3, 3, 3, 1, 3, 5,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	2, 1, 2, 3, 4, 3, 3, 1, 0, 1,
	1, 0, 1, 9, 4, 7, 0, 3, 7, 4,
	1, 3, 3, 3, 1, 0, 1, 1, 1, 1,
	3, 1, 4, 1, 3, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 3, 6, 3, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 6, 1, 4, 1, 3, 3,
	4, 4, 4, 3, 5, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 2, 0, 4, 2, 4, 1,
	5, 3, 2, 1, 2, 2, 4, 4, 5, 2,
	1, 7, 1, 3, 3, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 5, 3, 1, 1, 1, 1,
	7, 9, 0, 2, 0, 1, 1, 2, 2, 2,
	1, 4, 2, 2, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 1, 1,
	1, 5, 5, 0, 1, 1, 2, 2, 3, 6,
	7, 4, 7, 8, 0, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 5, 1, 3, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 4, 4, 6, 4, 2, 1, 5, 4,
	4, 1, 3, 1, 3, 1, 3, 3, 0, 1,
	1, 3, 1, 1, 0, 4, 1, 3, 2, 1,
	1, 1, 3, 2, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 1, 2, 2, 7,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 0, 2, 1, 1, 2, 2,
	0, 1, 2, 4, 1, 3, 1, 3, 3, 0,
	1, 2, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 0, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 2, 2, 2, 2, 1, 3,
	2, 2, 2, 2, 2, 1, 3, 2, 1, 3,
	2, 0, 3, 3, 5, 5, 4, 1, 1, 4,
	1, 3, 1, 3, 2, 1, 1, 0, 1, 1,
	1, 11, 0, 2, 3, 2, 3, 1, 1, 1,
	3, 3, 4, 0, 2, 2, 2, 5, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 10, 0, 1, 0, 6, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 6, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 6, 5, 0, 3, 0, 1, 0,
	1, 1, 3, 2, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 1, 7,
	7, 7, 7, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 5, 6, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 1, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 2,
	2, 0, 3, 0, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 3, 5,
	2, 2, 2, 2, 1, 1, 2, 6, 6, 6,
	1, 1, 1, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 0, 1, 1, 5, 4,
	4, 5, 5, 5, 5, 4, 5, 5, 5, 5,
	5, 5, 5, 1, 1, 1, 4, 2, 2, 4,
	2, 2, 4, 6, 2, 2, 2, 4, 6, 4,
	2, 0, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 1,
	3, 0, 1, 1, 3, 3, 3, 3, 2, 1,
	3, 4, 3, 1, 3, 4, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -295, -2, -1, -3, -4, -5, -6, -38, -20,
	-7, -32, -33, -34, -40, -45, -46, -47, -48, -16,
	-15, -14, 8, 10, -8, -151, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -31, 9, 49, -35,
	-36, -37, -41, -42, -43, -44, 280, 286, 322, -49,
	-51, -17, -18, -19, 177, -9, -10, -11, -12, -13,
	199, 198, 26, 197, 178, 120, 121, 123, 124, 30,
	-50, 54, 179, -52, 6, 413, -59, 27, -80, -148,
	57, -137, -139, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 370,
	216, 240, 243, 250, 120, 137, 131, 158, 150, 151,
	128, 220, 221, 64, 123, 350, 336, 321, 126, 235,
	237, 239, 242, 222, 146, 142, 234, 218, 140, 223,
	28, 224, 163, 225, 226, 375, 332, 262, 354, 338,
	247, 141, 333, 238, 335, 164, 168, 342, 286, 135,
	136, 340, 344, 162, 196, 32, 372, 34, 208, 345,
	166, 161, 157, 353, 251, 249, 160, 134, 156, 219,
	38, 170, 169, 171, 316, 317, 318, 319, 227, 228,
	341, 153, 143, 266, 129, 18, 348, 203, 337, 287,
	229, 244, 206, 252, 165, 167, 210, 215, 374, 248,
	346, 139, 207, 236, 202, 349, 130, 280, 289, 230,
	124, 241, 343, 352, 37, 302, 133, 127, 193, 121,
	212, 217, 231, 232, 233, 254, 253, 245, 154, 209,
	159, 132, 155, 122, 211, 351, 303, 412, 264, 305,
	152, 149, 213, 186, 373, 347, 339, 125, 309, 304,
	147, 255, 11, -152, 19, 320, -39, 181, -148, -5,
	-4, -32, -48, -56, -57, -58, -119, -121, -80, 54,
	-148, -223, -193, -222, -194, -225, -195, -147, 20, 178,
	177, 211, 10, 179, 284, 185, 8, 6, 285, 197,
	9, 286, 288, 289, 292, 293, 294, 31, 297, 298,
	57, 60, -148, -223, -193, 215, 222, -63, -64, -120,
	15, 5, 305, 214, -187, -185, -256, 194, 193, 76,
	356, 183, 295, -296, -253, 339, 338, -156, 337, 330,
	332, 177, 185, 340, 32, 342, 343, 333, 305, 125,
	122, -209, 80, 130, 129, -209, 214, 29, -216, 315,
	-215, -217, 342, 343, 353, -210, 341, -135, -148, 58,
	59, 75, 151, 148, -64, -120, -63, -49, -51, 305,
	214, 185, 184, 356, -255, 20, -260, 21, 22, -1,
	-69, 206, -80, 119, -56, -131, -148, 321, 89, -39,
	119, 30, -122, -123, -124, -125, 41, 45, 47, 42,
	43, 44, 48, -298, 23, -144, -150, 23, -145, 60,
	-146, -139, 57, 58, 59, -49, -51, 51, 55, 11,
	55, 54, 414, 58, 282, 296, 305, 283, 295, 186,
	214, 296, 214, 330, 186, 287, 290, 291, 331, 51,
	187, 51, -270, 353, -66, 17, -52, -51, 16, 20,
	21, -183, 189, -183, 185, -183, 184, -297, 11, 99,
	213, 212, 334, 331, -232, 335, 336, -156, -155, 97,
	-156, 184, 356, -254, 189, 346, 373, 128, 129, 130,
	-220, 20, 29, 314, -193, 214, 55, 89, 19, -218,
	89, 100, -217, -217, -217, -218, 119, -98, 29, -146,
	60, 116, -98, 29, 119, 30, 30, -65, -66, -52,
	-51, 56, 56, -254, -254, -254, -254, -254, -53, -54,
	107, -169, -148, 81, -171, 57, -165, 377, 378, 379,
	380, 381, 382, 383, 385, 390, 392, 396, 397, 398,
	399, 403, 404, 409, 410, 411, 305, 147, -166, -168,
	-286, -281, -164, 54, 105, 106, 113, 82, -167, -245,
	24, 364, -127, -128, -129, -130, -282, -280, 60, 65,
	69, 71, 72, 70, 118, -51, -259, -265, -263, 148,
	200, 144, 145, 8, 111, 315, 116, -266, 59, 58,
	268, 75, 269, 270, 356, 265, 271, 189, 320, 43,
	272, 273, 274, 275, 276, 363, 277, 44, 278, 267,
	204, 279, 367, 366, 368, 360, 357, 355, 358, 359,
	361, 362, -261, 33, -48, 54, 54, -148, -116, 12,
	119, 65, 60, -148, -208, -207, -131, -57, -57, -57,
	-57, 41, 41, 41, 46, 41, 46, 41, -124, -145,
	-150, 56, -224, 184, 281, 210, -222, 211, 286, 289,
	-199, -198, -196, -147, 60, -194, -227, -131, -147, 331,
	-224, -199, -198, 323, -169, -148, -62, -61, -169, -199,
	81, -193, -146, -148, -183, -80, -155, -155, -157, -297,
	-153, -297, 331, -116, -168, -232, -154, -148, -183, -199,
	305, 24, 347, 348, 126, 129, 128, 354, -221, 314,
	20, -193, -215, -211, 60, 315, -198, -219, 51, 116,
	-267, -169, 29, -218, -218, -218, -219, 57, 115, -148,
	-199, -193, -148, -81, -80, -149, -146, -139, -115, 55,
	-114, 11, -143, 80, 78, 79, -148, 23, 119, -169,
	96, -179, 89, 90, 91, 92, 93, 94, 54, 54,
	54, 54, 54, 54, 54, 54, -177, 54, 54, 54,
	54, 54, -177, 54, 54, 54, 102, 101, 112, 105,
	106, 107, 108, 109, 110, 111, 103, 104, 99, 81,
	97, 98, 83, -51, -169, -174, -168, -168, -168, -168,
	-245, 54, -169, 54, -264, 54, -176, -177, 54, 60,
	60, 60, 54, 54, 54, -168, 54, -262, -175, 54,
	-71, 56, -67, -148, -70, -148, -64, -169, -141, -142,
	-134, -138, -145, -146, -139, 263, 182, 20, 80, 23,
	25, 268, 300, 83, 116, 16, 84, 148, 115, 270,
	364, 269, 177, 47, 75, 366, 368, 367, 357, 355,
	307, 311, 313, 310, 356, 330, 29, 10, 26, 198,
	21, 22, 109, 179, 200, 87, 88, 201, 24, 199,
	72, 19, 50, 11, 320, 13, 14, 271, 306, 189,
	188, 99, 323, 185, 45, 8, 118, 27, 96, 308,
	41, 77, 43, 97, 17, 358, 359, 31, 322, 369,
	205, 111, 272, 273, 274, 48, 81, 314, 70, 51,
	78, 15, 46, 98, 180, 363, 44, 214, 312, 276,
	278, 277, 183, 6, 267, 365, 30, 197, 42, 184,
	331, 86, 187, 71, 204, 144, 145, 5, 76, 9,
	49, 52, 360, 361, 362, 33, 85, 12, 279, 275,
	315, 324, 325, 326, 327, 328, 329, 172, 173, 174,
	175, 176, 246, 192, 190, 194, 195, 19, -39, 119,
	-116, 55, 89, -73, -72, 51, 52, -74, 51, -72,
	41, 41, -226, 107, 57, 55, -197, 306, 414, 58,
	56, 55, -226, 187, 60, 55, 18, 119, 55, -60,
	25, 26, -200, -201, 312, 24, -186, 52, -181, -182,
	-180, -184, 29, -80, -116, -116, -116, -155, -149, -157,
	-152, -157, -153, 119, -136, -148, -200, 54, 127, 130,
	130, 129, -193, 187, 54, 89, -219, -219, -219, -218,
	29, -147, 51, 55, -116, -54, -55, -56, -169, -169,
	-169, -148, -148, 107, 70, 81, -165, -173, -174, -169,
	-126, 21, 20, -126, -126, -169, -126, 107, -174, -174,
	56, -247, 65, -126, -126, -126, -126, -126, -126, -126,
	-166, -166, -166, -166, -166, -166, -166, -166, -166, -166,
	-166, -166, -172, -178, -245, 54, 99, 97, 98, 83,
	-168, -166, -166, 56, 55, -169, -246, 267, -173, 56,
	-174, -173, -166, -173, -126, 55, -269, -268, -267, 56,
	55, 33, 119, 56, 55, -65, 119, 321, -148, -64,
	-207, -169, -169, 54, -169, 11, 119, 119, -198, 16,
	373, -147, -131, 187, -199, -271, 188, 363, -169, -169,
	-148, -61, -205, 373, 314, 313, 309, -202, -203, 308,
	310, 307, 311, 51, 259, 260, 261, -180, -135, 115,
	225, 151, 54, -116, -155, -155, -157, -148, -205, 56,
	130, -199, -158, 60, -211, -219, -80, -80, -118, 13,
	55, 119, 70, 56, 55, -169, -169, -169, 23, -174,
	56, 56, 56, 56, -169, -169, -169, -169, -169, -169,
	-169, -174, -172, -168, -166, -166, -170, 201, 80, -169,
	55, 52, 56, 56, 52, 56, 55, 56, -169, -175,
	56, 55, 33, -48, -67, -262, -148, -148, -141, -138,
	-146, -139, 65, -65, -68, -148, -199, 107, 107, 57,
	-147, 315, -147, -199, -212, 373, 27, 119, -204, -206,
	316, 317, 318, 319, 80, -203, 60, 60, 60, 60,
	-80, -140, 89, -140, -140, -75, -76, -77, -82, -78,
	-131, -160, -79, 192, 190, 194, -294, 76, 195, 246,
	77, 185, -116, -116, -155, -162, -163, -161, 263, -257,
	315, 306, 56, -117, 14, 16, -56, -148, 107, -169,
	56, 56, 56, -83, 116, 148, 200, 147, 146, 144,
	140, 141, 139, 302, 303, 56, 56, 56, 56, 56,
	56, 56, 56, 56, -170, 80, -168, -165, 56, -83,
	-98, -98, -166, 56, -267, -262, 56, 55, -147, 16,
	23, -200, 286, 184, -206, 65, 65, 65, 65, -203,
	54, -98, -100, -146, 60, 116, 60, 56, 55, -84,
	-88, -85, -87, -86, -90, -89, 148, 149, 116, 152,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	30, 200, 144, 145, 146, 147, 164, 131, 150, 371,
	172, 132, 173, 133, 174, 134, 175, 135, 136, 176,
	137, 140, 141, 139, -79, -148, 77, -293, -294, -183,
	-293, 77, 54, -116, -161, 264, 31, 118, 266, 29,
	262, 16, -169, -174, 56, -248, 54, -248, -248, -248,
	-248, -249, 54, -250, 54, -249, -91, 136, 135, -91,
	-165, 56, 56, 56, 56, -148, -147, -147, -212, 287,
	-80, -188, -190, -131, 54, -96, -97, -113, 300, 216,
	-184, 220, 64, 221, 321, 222, 185, 224, 225, 226,
	196, 227, 228, 229, 315, 230, 231, 232, 233, 283,
	5, -77, -95, -94, -92, 70, 81, 29, 300, -93,
	64, 115, 239, 217, 240, -112, -159, 190, 76, 77,
	288, -160, -251, 303, 302, -248, -248, -248, -248, -248,
	54, 54, -248, -248, -248, -248, -249, -250, -249, -290,
	-291, -148, -291, -148, -290, -290, -183, -169, 65, -258,
	-158, 65, 65, 65, -272, -232, 56, 55, -248, -169,
	-228, 206, 55, -113, -140, -140, -135, 115, -140, -140,
	-140, -140, 223, 223, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -92, 70,
	-166, 60, -100, -101, 29, 238, 234, -102, 29, 218,
	219, -104, 54, 246, 77, 77, -80, -252, 304, -133,
	60, -133, 54, 52, 255, 54, 54, 54, -291, 56,
	265, 56, 55, 56, 55, -278, 329, -274, -273, 324,
	325, 326, 327, -191, -190, -60, 56, 16, -113, 65,
	65, -140, -140, 65, 60, 60, 60, -140, -140, 65,
	60, -150, 65, 65, 65, 65, 29, 60, -103, 29,
	234, 238, 235, 236, 237, 65, 29, 65, 29, 65,
	29, -148, 54, 65, 54, -189, 54, 56, 55, 56,
	-188, -292, 259, 260, 261, -292, -188, -188, -188, 54,
	-214, -213, 247, 81, 65, 65, -279, 188, -276, 328,
	-273, 16, 326, 16, 16, -192, 196, 64, 373, 257,
	258, -60, -229, 248, 249, -230, -236, 251, -98, -98,
	60, 60, -99, 217, -81, 56, -169, -106, -105, 369,
	-188, 60, 56, 56, 56, 56, -188, 247, 56, 56,
	-285, 54, 65, -277, 324, 16, -275, 60, 16, -275,
	-275, -140, 60, 256, -234, 252, 54, -232, 54, -232,
	77, 260, 218, 219, 56, 56, -110, -111, -108, -109,
	51, 333, 244, 245, 56, -191, -191, -191, -191, 56,
	-289, 30, 56, -284, -283, -132, -280, -148, 329, 16,
	60, -275, 65, -146, -231, 253, 65, -166, 54, -166,
	54, -233, 250, 54, -213, -109, 51, -108, 51, 10,
	9, -112, -288, -287, -286, 56, 55, 119, 60, -238,
	54, 16, 56, -227, 56, -227, 54, 89, -166, -107,
	241, 242, 30, 129, -107, 55, 89, -283, -148, -239,
	-237, 206, -230, 56, 56, -227, 65, 56, 70, 29,
	243, -287, 29, -169, 119, 56, 55, 57, -235, 254,
	56, -148, -237, -240, 33, 65, -244, -241, 54, -113,
	208, -244, -113, -243, -242, 253, 209, 56, 55, 57,
	54, -242, -241, -174, 56,
}

var yyDef = [...]int{
	19, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 397,
	398, 399, 0, 0, 263, 0, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 199, 0, 180, 160,
	161, 162, 118, 119, 120, 121, 0, 0, 0, 300,
	-2, 400, 401, 402, -2, 264, 265, 266, 267, 268,
	196, 197, 198, -2, 0, 173, 0, 165, 165, 0,
	310, 0, 0, 321, 330, 19, 294, 0, 299, 569,
	603, 604, 605, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224,
	1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 0, 189, 0, 0, 193, 0, 260, 185,
	186, 187, 188, 0, 352, 353, 376, 379, 382, 0,
	179, 0, 0, 79, 440, 81, 442, 0, 85, 87,
	88, -2, 92, 93, 94, 95, 96, 97, 98, 0,
	100, 1094, 102, 1154, 105, 106, 107, 0, 116, 117,
	-2, -2, 437, 0, 0, 1143, 61, -2, 0, 0,
	0, 326, 470, 470, 0, 470, 0, 448, 449, 450,
	468, 469, 483, 0, 0, 236, 237, 0, 253, 244,
	253, 0, 228, 229, 230, 234, 235, 254, 202, 174,
	175, 164, 0, 169, 0, 163, 0, 0, 132, 0,
	137, 0, 1093, 1158, 1109, 0, 1126, 0, 158, 151,
	152, 892, 1055, 0, 305, 0, 311, 0, 310, 202,
	202, 202, 202, 202, 0, 331, 332, 333, 334, 3,
	0, 0, 298, 0, 339, 190, 606, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 367, 0, 0, 366,
	0, 0, 0, 0, 380, 381, 383, 0, 385, 386,
	392, 393, 394, 395, 396, 0, 310, 75, 0, 0,
	0, 0, 0, 444, 86, 115, 89, 90, 0, 110,
	112, 114, 113, 99, 111, 101, 103, 104, 109, 75,
	0, 0, 0, 62, 304, 0, 323, 325, 0, 327,
	328, 0, 0, 0, 0, 0, 470, 0, 249, 250,
	244, 244, 238, 246, 0, 251, 252, 0, 339, 0,
	0, 0, 470, 0, 0, 0, 0, 167, 0, 172,
	122, 127, 125, 126, 128, 0, 0, 0, 0, 0,
	156, 157, 0, 0, 0, 0, 0, 145, 148, 561,
	562, 563, 149, 150, 0, 893, 894, 302, 306, 322,
	324, 319, 320, 0, 0, 0, 0, 0, 347, 341,
	343, 387, 27, 0, 799, 603, 803, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1207, 1212, 1214, -2, -2, -2,
	1221, 1225, 1226, 1231, 1232, 1233, -2, -2, 812, 674,
	675, 676, 677, 0, 0, 0, 0, 0, 684, 685,
	0, 0, 690, 691, 692, 693, 37, 38, 828, 829,
	830, 831, 832, 833, 766, 661, 0, 751, 741, 0,
	761, 779, 780, 0, 0, 0, 0, 0, 39, 40,
	757, 758, 759, 760, 762, 763, 764, 765, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	781, 783, 753, 754, 755, 756, 745, 746, 747, 748,
	749, 750, 275, 0, 277, 0, 0, 570, 310, 0,
	0, 191, 0, 261, 339, 182, 0, 370, 364, 0,
	357, 368, 369, 360, 0, 362, 0, 358, 359, 377,
	384, 378, 0, 76, 77, 78, 80, 91, 0, 0,
	69, 425, 431, 428, 438, 441, 0, 83, 443, 108,
	0, 64, 0, 0, 307, 27, 312, 313, 316, 412,
	0, 439, 463, -2, 0, 339, 339, 339, 244, 0,
	246, 0, 246, 241, 245, 0, 255, 257, 0, 412,
	1185, 203, 176, 177, 0, 0, 171, 0, 0, 129,
	130, 131, 138, 133, 135, 0, 0, 139, 153, 154,
	155, 292, 293, 0, 0, 0, 143, 0, 0, 159,
	269, 270, 0, 272, 567, 273, 390, 391, 339, 0,
	348, 0, 344, 0, 0, 0, 388, 0, 0, 798,
	0, 0, 817, 818, 819, 820, 821, 822, 791, 786,
	786, 786, 0, 786, 0, 0, 727, 0, 786, 786,
	786, 786, 728, 786, 786, 786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 793, 0, 680, 681, 682, 683,
	686, 0, 0, 791, 730, 0, 731, 742, 0, 734,
	735, 736, 791, 0, 791, 740, 786, 276, 285, 288,
	0, 0, 281, 283, 0, 296, 305, 340, 607, 0,
	899, -2, 901, -2, -2, 903, 904, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 956, 957,
	958, 959, 960, 961, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 0, 194, 0,
	310, 0, 0, 354, 371, 0, 0, 355, 0, 356,
	361, 363, 0, 70, 74, 0, 427, 0, 0, 430,
	82, 0, 0, 0, 58, 0, 0, 0, 0, 315,
	317, 318, 404, 413, 0, 471, 0, 0, 467, -2,
	474, 0, 480, 0, 227, 231, 232, 339, 247, 244,
	248, 244, 246, 0, 256, 259, 404, 0, 178, 166,
	168, 0, 124, 0, 0, 0, 140, 141, 142, 0,
	146, 147, 0, 0, 337, 342, 349, 350, 795, 796,
	797, 389, 28, 345, 800, 0, 802, 0, 792, 793,
	0, 787, 788, 0, 0, 0, 0, 0, 0, 0,
	743, 0, 827, 0, 0, 0, 0, 0, 0, 0,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 804, 815, 816, 0, 0, 0, 0, 0,
	813, 808, 0, 678, 0, 0, 785, 789, 0, 752,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 0,
	0, 0, 0, 295, 0, 274, 0, 0, 262, 305,
	183, 184, 372, 0, 365, 0, 0, 0, 426, 0,
	0, 429, 84, 0, 66, 0, 59, 60, 308, 309,
	28, 314, 403, 0, 414, 415, 416, 417, 418, 0,
	0, 0, 0, 0, 464, 465, 466, 475, 895, 895,
	895, 0, 571, 239, 339, 339, 244, 258, 204, 0,
	170, 123, 0, 216, 134, 144, 271, 568, 335, 0,
	0, 0, 801, 726, 0, 0, 0, 0, 0, 0,
	715, 709, 710, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 805, 813, 809, 0, 806, 0, 0, 794,
	0, 0, 729, 732, 0, 737, 0, 739, 0, 286,
	287, 0, 0, 280, 282, 279, 284, 297, 608, 900,
	897, 898, 192, 181, 0, 374, 68, 71, 72, 73,
	432, 0, 433, 412, 65, 0, 0, 0, 405, 406,
	0, 0, 0, 0, 0, 420, 421, 422, 423, 424,
	0, 0, 896, 0, 0, 0, 572, 573, 575, 576,
	0, 0, 578, 630, 0, 587, 470, 587, 0, 0,
	589, 590, 242, 240, 339, 200, 205, 206, 0, 210,
	0, 0, 136, 329, 0, 0, 351, 29, 346, 794,
	711, 712, 713, 0, 880, 880, 696, 880, 880, 880,
	882, 884, 882, 705, 705, 714, 716, 717, 720, 718,
	721, 722, 708, 790, 807, 0, 814, 810, 679, 0,
	0, 0, 0, 719, 291, 278, 373, 0, 436, 0,
	0, 66, 0, 0, 407, 408, 409, 410, 411, 419,
	0, 476, 477, 564, 565, 566, 478, -2, 0, -2,
	887, 835, 836, 837, 880, 839, 880, 880, 880, 880,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 0,
	0, 857, 880, 880, 880, 880, 877, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 882, 884, 882, 577, 631, 597, 597, 588, 597,
	597, 470, 0, 243, 207, 208, 209, 0, 212, 213,
	215, 0, 336, 338, 687, 694, 0, 695, 697, 698,
	699, 700, 0, 701, 0, 702, 703, 706, 707, 704,
	811, 688, 689, 733, 738, 375, 434, 435, 63, 67,
	49, 0, 459, 880, 0, 484, -2, 521, 895, 895,
	0, 895, 895, 895, 895, 0, 0, 895, 895, 895,
	895, 895, 895, 895, 895, 895, 895, 895, 895, 895,
	895, 574, 599, -2, 611, 613, 0, 0, 616, 617,
	0, 0, 0, 0, 653, 623, 0, 0, 825, 826,
	0, 629, 890, 888, 889, 838, 862, 863, 864, 865,
	0, 0, 858, 859, 860, 861, 854, 855, 856, 0,
	591, 598, 0, 598, 0, 0, 597, 0, 0, 214,
	201, 0, 0, 0, 43, 0, 452, 0, 316, 0,
	481, 0, 479, 523, 0, 0, 895, 895, 0, 0,
	0, 0, 895, 895, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 612, 614,
	615, 618, 619, 620, 658, 659, 660, 621, 655, 656,
	657, 622, 0, 0, 823, 824, 651, 834, 891, 0,
	878, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	211, 881, 0, 885, 0, 41, 45, 50, 51, 0,
	0, 0, 0, 451, 460, 461, 316, 517, 522, 524,
	525, 0, 0, 528, 529, 530, 531, 0, 0, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 555,
	556, 557, 558, 559, 560, 544, 545, 546, 547, 548,
	549, 552, 0, 0, 0, 646, 0, 875, 0, 876,
	0, 592, 594, 595, 596, 593, 0, 0, 0, 0,
	584, 586, 626, 0, 0, 0, 30, 0, 47, 0,
	52, 0, 0, 0, 0, 453, 895, 0, 0, 457,
	458, 462, 506, 0, 0, 512, 0, 518, 526, 527,
	532, 533, 550, 0, 0, 654, 0, 633, 647, 0,
	0, 879, 452, 452, 452, 452, 0, 627, 883, 886,
	21, 0, 0, 44, 0, 0, 53, 57, 0, 55,
	56, 0, 455, 0, 486, 0, 0, 0, 0, 0,
	515, 0, 553, 554, 551, 624, 632, 634, 635, 636,
	0, 648, 649, 650, 652, 579, 580, 581, 582, 0,
	20, 0, 31, 0, 33, 35, 36, 600, 42, 0,
	46, 54, 454, 456, 488, 0, 507, 0, 0, 0,
	0, 0, 0, 0, 625, 637, 0, 638, 0, 0,
	0, 583, 22, 23, 0, 32, 0, 0, 48, 485,
	0, 517, 508, 0, 510, 0, 0, 0, 0, 639,
	641, 642, 0, 0, 640, 0, 0, 34, 601, 0,
	490, 0, 504, 509, 511, 0, 516, 514, 643, 645,
	644, 24, 25, 26, 0, 489, 0, 502, 487, 0,
	513, 602, 491, -2, 0, 505, 492, -2, 0, 500,
	0, 493, 501, 0, 496, 0, 0, 495, 0, -2,
	0, 497, -2, 0, 503,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 82, 3, 3, 3, 110, 102, 3,
	54, 56, 107, 105, 55, 106, 119, 108, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 413,
	90, 89, 91, 3, 414, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 112, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 101, 3, 113,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 83, 84, 85,
	86, 87, 88, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 103, 104, 109, 111, 114, 115, 116, 117,
	118, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:455
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:461
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:483
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:487
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:493
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				File:              yyDollar[5].str,
				DuplicateHandling: yyDollar[6].duplicateKeyUnion(),
				Table:             yyDollar[9].tableNameUnion(),
				Fields:            yyDollar[10].fieldsUnion(),
				Lines:             yyDollar[11].linesUnion(),
				IgnoredLines:      uint64(yyDollar[12].int64ValUnion()),
				ColumnList:        yyDollar[13].loadColumnsUnion(),
				Assignments:       yyDollar[14].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 21:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:508
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:512
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:518
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 24:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:522
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:528
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:535
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:544
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:548
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:552
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:557
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:565
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:571
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:580
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:591
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:595
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:601
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:605
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:611
		{
			v := strings.ToLower(yyDollar[1].str)
			isGlobal := false
			if strings.HasPrefix(v, "global.") {
				isGlobal = true
			}
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:626
		{
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:635
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:639
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:644
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:648
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:656
		{
			yyVAL.str = ""
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:660
		{
			yyVAL.str = yyDollar[3].str
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:665
		{
			yyVAL.str = "\n"
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:669
		{
			yyVAL.str = yyDollar[3].str
		}
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:678
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  []byte("\\")[0],
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:702
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:706
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:712
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:718
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EscapedBy:  b,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:736
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:753
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:776
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:780
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:784
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:789
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:793
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:799
		{
			yyLOCAL = &tree.Grant{
				Privileges:  yyDollar[2].privilegesUnion(),
				ObjType:     yyDollar[4].objectTypeUnion(),
				Level:       yyDollar[5].privilegeLevelUnion(),
				Users:       yyDollar[7].usersUnion(),
				GrantOption: yyDollar[9].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = &tree.Grant{
				IsGrantRole:      true,
				RolesInGrantRole: yyDollar[2].rolesUnion(),
				Users:            yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:817
		{
			yyLOCAL = &tree.Grant{
				IsProxy:     true,
				ProxyUser:   yyDollar[4].userUnion(),
				Users:       yyDollar[6].usersUnion(),
				GrantOption: yyDollar[7].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:827
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:831
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:841
		{
			yyLOCAL = &tree.Revoke{
				Privileges: yyDollar[2].privilegesUnion(),
				ObjType:    yyDollar[4].objectTypeUnion(),
				Level:      yyDollar[5].privilegeLevelUnion(),
				Users:      yyDollar[7].usersUnion(),
				Roles:      nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:851
		{
			yyLOCAL = &tree.Revoke{
				IsRevokeRole:      true,
				RolesInRevokeRole: yyDollar[2].rolesUnion(),
				Users:             yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:861
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_DATABASE,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:867
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_GLOBAL,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:873
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:880
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:888
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:896
		{
			yyLOCAL = tree.OBJECT_TYPE_NONE
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:900
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:904
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:908
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:914
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:918
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:924
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:931
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:940
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:944
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:950
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:954
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:958
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:962
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:966
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:970
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:974
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:978
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:982
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:986
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:990
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:994
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:998
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1002
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1006
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1010
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1014
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1018
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1022
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1026
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1030
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1034
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1038
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1042
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1046
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1050
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1054
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1058
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1062
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1066
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1070
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1074
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1078
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1090
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1096
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1104
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1108
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1112
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1116
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1120
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1126
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1130
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1134
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1140
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1146
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1150
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1157
		{
			yyVAL.str = yyDollar[3].str
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1163
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1167
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1173
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1181
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1190
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1198
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1206
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1214
		{
			v := strings.ToLower(yyDollar[1].str)
			if v != "session" && v != "global" && v != "local" {
				yylex.Error("expecting session or global")
				return 1
			}
			var isGlobal bool
			if v == "global" {
				isGlobal = true
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   yyDollar[3].str,
				Value:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1232
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1239
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1246
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
				Reserved: tree.NewNumVal(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1254
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1261
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1268
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1289
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1299
		{
			yyVAL.str = yyDollar[1].str
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1306
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1317
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1323
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1328
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1332
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1336
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1340
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1344
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1348
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1352
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1356
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1362
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1366
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1370
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1374
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1379
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1384
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1390
		{
			yyLOCAL = &tree.Use{Name: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1394
		{
			yyLOCAL = &tree.Use{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1400
		{
			yyLOCAL = &tree.Update{
				Table:   yyDollar[2].tableExprUnion(),
				Exprs:   yyDollar[4].updateExprsUnion(),
				Where:   yyDollar[5].whereUnion(),
				OrderBy: yyDollar[6].orderByUnion(),
				Limit:   yyDollar[7].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1413
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1417
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1423
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1432
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1438
		{
			st := &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
			yyLOCAL = tree.NewExplainStmt(st, "")
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1443
		{
			st := &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
			yyLOCAL = tree.NewExplainStmt(st, "")
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1448
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1452
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1456
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "row")
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1460
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[5].statementUnion(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1464
		{
			yyLOCAL = tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "")
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1479
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:   yyDollar[3].boolValUnion(),
				IsUserFunc: false,
				Users:      yyDollar[4].usersUnion(),
				TlsOpts:    yyDollar[5].tlsOptionsUnion(),
				ResOpts:    yyDollar[6].resourceOptionsUnion(),
				MiscOpts:   yyDollar[7].userMiscOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1490
		{
			auth := &tree.User{
				AuthString: yyDollar[9].str,
				ByAuth:     true,
			}
			yyLOCAL = &tree.AlterUser{
				IfExists:   yyDollar[3].boolValUnion(),
				IsUserFunc: true,
				UserFunc:   auth,
			}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1503
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1507
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1512
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1516
		{
			yyLOCAL = yyDollar[1].userMiscOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1522
		{
			yyLOCAL = []tree.UserMiscOption{yyDollar[1].userMiscOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1526
		{
			yyLOCAL = append(yyDollar[1].userMiscOptionsUnion(), yyDollar[2].userMiscOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1536
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1540
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1548
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1552
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1558
		{
			yyVAL.item = nil
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1563
		{
			yyVAL.item = nil
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1584
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[4].tableNameUnion(),
				Where:     yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1598
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1608
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1617
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1621
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1625
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1631
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1637
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1643
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1649
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1659
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1671
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1677
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1689
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:1702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:1706
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1711
		{
			yyVAL.str = ""
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:1715
		{
			yyVAL.str = yyDollar[2].str
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1721
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1734
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1738
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1744
		{
			yyLOCAL = &tree.ShowCreate{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1748
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1754
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1758
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[1].str, yyDollar[3].str})
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[1].str, yyDollar[3].str})
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[1].str, yyDollar[3].str, yyDollar[5].str})
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1791
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1800
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1809
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1819
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1825
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1831
		{
			yyLOCAL = &tree.Delete{
				Table:   yyDollar[3].tableExprUnion(),
				Where:   yyDollar[4].whereUnion(),
				OrderBy: yyDollar[5].orderByUnion(),
				Limit:   yyDollar[6].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1846
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1855
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1862
		{
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(yyDollar[1].selectUnion(), nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1868
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1876
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(yyDollar[4].selectUnion(), nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1892
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1896
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1902
		{
			yyVAL.str = yyDollar[1].str
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1906
		{
			yyVAL.str = yyDollar[3].str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:1912
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:1916
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:1922
		{
			yyLOCAL = yyDollar[2].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:1927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:1934
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:1938
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1945
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1954
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1960
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1964
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:1970
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:1974
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:1981
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:1987
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:1991
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion()}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2004
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2010
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2014
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2018
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2027
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2033
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2039
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2043
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:2049
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2054
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2058
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2062
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2069
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2073
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2079
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2083
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2093
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2103
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2113
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2125
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2133
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2141
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2151
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2163
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2167
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2171
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2184
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:2189
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:2193
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2202
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:2208
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:2212
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2218
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2222
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2226
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2230
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2236
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier("dual"), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2244
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2250
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2258
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2262
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2272
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2291
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2300
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2310
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2314
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2324
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2328
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2332
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2336
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2342
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2352
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2358
		{
			yyVAL.str = ""
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2362
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2366
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2376
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2382
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2386
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2392
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2396
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2402
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2406
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:2418
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2423
		{
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2424
		{
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2440
		{
			yyVAL.str = ""
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2444
		{
			yyVAL.str = yyDollar[1].str
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2448
		{
			yyVAL.str = yyDollar[2].str
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2457
		{
			yyVAL.str = ""
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2461
		{
			yyVAL.str = yyDollar[1].str
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2465
		{
			yyVAL.str = yyDollar[2].str
		}
	case 403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2494
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Users:       yyDollar[4].usersUnion(),
				TlsOpts:     yyDollar[5].tlsOptionsUnion(),
				ResOpts:     yyDollar[6].resourceOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2508
		{
			yyLOCAL = yyDollar[2].resourceOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2514
		{
			yyLOCAL = []tree.ResourceOption{yyDollar[1].resourceOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2518
		{
			yyLOCAL = append(yyDollar[1].resourceOptionsUnion(), yyDollar[2].resourceOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2524
		{
			yyLOCAL = &tree.ResourceOptionMaxQueriesPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2528
		{
			yyLOCAL = &tree.ResourceOptionMaxUpdatesPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2532
		{
			yyLOCAL = &tree.ResourceOptionMaxConnectionPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2536
		{
			yyLOCAL = &tree.ResourceOptionMaxUserConnections{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2542
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2549
		{
			t := &tree.TlsOptionNone{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2554
		{
			t := &tree.TlsOptionSSL{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2559
		{
			t := &tree.TlsOptionX509{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2564
		{
			yyLOCAL = yyDollar[2].tlsOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2570
		{
			yyLOCAL = []tree.TlsOption{yyDollar[1].tlsOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2574
		{
			yyLOCAL = append(yyDollar[1].tlsOptionsUnion(), yyDollar[3].tlsOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2578
		{
			yyLOCAL = append(yyDollar[1].tlsOptionsUnion(), yyDollar[2].tlsOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2584
		{
			yyLOCAL = &tree.TlsOptionIssuer{Issuer: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2588
		{
			yyLOCAL = &tree.TlsOptionSubject{Subject: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2592
		{
			yyLOCAL = &tree.TlsOptionCipher{Cipher: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2596
		{
			yyLOCAL = &tree.TlsOptionSan{San: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2602
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2606
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2612
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthPlugin: yyDollar[2].authRecordUnion().AuthPlugin,
				AuthString: yyDollar[2].authRecordUnion().AuthString,
				HashString: yyDollar[2].authRecordUnion().HashString,
				ByAuth:     yyDollar[2].authRecordUnion().ByAuth,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2625
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2633
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2638
		{
			yyLOCAL = &tree.AuthRecord{}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2642
		{
			yyLOCAL = &tree.AuthRecord{
				AuthString: yyDollar[3].str,
				ByAuth:     true,
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2649
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2655
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
				AuthString: yyDollar[5].str,
				ByAuth:     true,
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2663
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
				HashString: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2670
		{
			yyLOCAL = &tree.AuthRecord{
				HashString: yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2682
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2691
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2695
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2701
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: "%"}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2705
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2709
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2718
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2722
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2726
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2730
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2736
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2759
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2781
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2785
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2789
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2793
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2797
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:2803
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:2807
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:2813
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:2818
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:2823
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:2827
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:2831
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:2835
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2841
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2855
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2859
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:2864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:2868
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:2874
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:2878
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:2884
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:2888
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:2892
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2897
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2901
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2919
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2923
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:2928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:2932
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:2942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:2946
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:2955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:2959
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:2965
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:2969
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:2975
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:2984
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:2994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:2998
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3004
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3008
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:3014
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3030
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3034
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:3039
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:3043
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3048
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3052
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3062
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3066
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3077
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3085
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3093
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3101
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3122
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3132
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3136
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3141
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3145
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3150
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3154
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3160
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3164
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3168
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3174
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3178
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3182
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3186
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3190
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3194
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3198
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3202
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3206
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3210
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3214
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3218
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3222
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3226
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3230
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3234
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3242
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3246
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3250
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3254
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3262
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3266
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3270
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3274
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3278
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3282
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3288
		{
			yyVAL.str = ""
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3292
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3296
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3302
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3306
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3310
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3314
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3318
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3322
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:3338
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:3342
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3351
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3356
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3362
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3369
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3373
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3379
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3383
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3389
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3399
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3405
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3414
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3423
		{
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3433
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3442
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3452
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3460
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3466
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3470
		{
			yyVAL.str = yyDollar[1].str
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3480
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3486
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3492
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3504
		{
			yyVAL.str = ""
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:3511
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3517
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3521
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3525
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3536
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3540
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3544
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3549
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3553
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3559
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3563
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3569
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3573
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3577
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3581
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3585
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3589
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false))
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3593
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3597
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3601
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3605
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3609
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3613
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3617
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3627
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3631
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3636
		{
			yyVAL.str = ""
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3640
		{
			yyVAL.str = yyDollar[1].str
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3646
		{
			yyVAL.str = ""
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3650
		{
			yyVAL.str = yyDollar[2].str
		}
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:3656
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3667
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3677
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3684
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3698
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3707
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3713
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3719
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3723
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3727
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3731
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3735
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3740
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3747
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3751
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3755
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3764
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3769
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3773
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:3789
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3795
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3799
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3803
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3807
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3811
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3815
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3819
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3823
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3827
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3831
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3835
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3839
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3843
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3849
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3853
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3857
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3861
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3865
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3869
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3873
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3877
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3881
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3885
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3889
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3893
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3898
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3902
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3906
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumVal(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3915
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3919
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3923
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3927
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3933
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3946
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3959
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3971
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3985
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4000
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4015
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4030
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4045
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4060
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4073
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4088
		{
		}
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4094
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4103
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4111
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4119
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4128
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4137
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4146
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4155
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumVal(constant.MakeString("*"), "*", false)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4164
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4173
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4182
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4191
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4200
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4209
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4218
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4234
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4252
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4264
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4278
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4286
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4293
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4305
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4313
		{
			cn := tree.NewNumVal(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4324
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4333
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4342
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4351
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4359
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4369
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4377
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4390
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4400
		{
			yyLOCAL = yyDollar[2].numValUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4413
		{
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4415
		{
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4455
		{
			yyLOCAL = &tree.IntervalExpr{
				Expr: yyDollar[2].exprUnion(),
				Type: yyDollar[3].intervalTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4463
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4467
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4471
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IntervalType
//line mysql_sql.y:4477
		{
			yyLOCAL = tree.INTERVAL_TYPE_SECOND
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:4483
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4492
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4498
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4502
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4509
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4513
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4517
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4521
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4525
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4531
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4535
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4539
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4546
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4550
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4554
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4558
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4562
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4566
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4570
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4574
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4584
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4590
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4594
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4601
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4605
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4609
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4613
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4617
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4621
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4628
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4632
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4636
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4640
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.NumVal
//line mysql_sql.y:4646
		{
			ival, errStr := getInt64(yyDollar[1].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			if ival > 0 {
				yyLOCAL = tree.NewNumValWithResInt(constant.MakeInt64(ival), yylex.(*Lexer).scanner.LastToken, false, ival)
			} else {
				yyLOCAL = tree.NewNumValWithResInt(constant.MakeInt64(ival), yylex.(*Lexer).scanner.LastToken, true, ival)
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4661
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4665
		{
			ival := getUint64(yyDollar[1].item)
			yyLOCAL = tree.NewNumVal(constant.MakeUint64(ival), yylex.(*Lexer).scanner.LastToken, false)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4670
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithResFoalt(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, fval)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4675
		{
			yyLOCAL = tree.NewNumVal(constant.MakeBool(true), "", false)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4679
		{
			yyLOCAL = tree.NewNumVal(constant.MakeBool(false), "", false)
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4683
		{
			yyLOCAL = tree.NewNumVal(constant.MakeUnknown(), "", false)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4693
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4704
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4709
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4715
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4727
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4739
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4751
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4764
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4777
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4790
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4803
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4816
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4829
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4842
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4855
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4868
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4881
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4896
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4911
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4938
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4955
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4967
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4982
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4997
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5012
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5028
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5041
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5054
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5067
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5080
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5092
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5104
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5116
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5128
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5140
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5152
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5164
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5176
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5188
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5201
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5216
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5239
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5244
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:5250
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:5254
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5260
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 0,
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5267
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5276
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 0,
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5283
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5290
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5299
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5303
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5307
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5313
		{
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5315
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5325
		{
			yyVAL.str = ""
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5329
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

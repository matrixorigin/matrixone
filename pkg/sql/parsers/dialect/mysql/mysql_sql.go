// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const MODIFY = 57671
const CHANGE = 57672
const SECOND = 57673
const ASCII = 57674
const COALESCE = 57675
const COLLATION = 57676
const HOUR = 57677
const MICROSECOND = 57678
const MINUTE = 57679
const MONTH = 57680
const QUARTER = 57681
const REPEAT = 57682
const REVERSE = 57683
const ROW_COUNT = 57684
const WEEK = 57685
const REVOKE = 57686
const FUNCTION = 57687
const PRIVILEGES = 57688
const TABLESPACE = 57689
const EXECUTE = 57690
const SUPER = 57691
const GRANT = 57692
const OPTION = 57693
const REFERENCES = 57694
const REPLICATION = 57695
const SLAVE = 57696
const CLIENT = 57697
const USAGE = 57698
const RELOAD = 57699
const FILE = 57700
const TEMPORARY = 57701
const ROUTINE = 57702
const EVENT = 57703
const SHUTDOWN = 57704
const NULLX = 57705
const AUTO_INCREMENT = 57706
const APPROXNUM = 57707
const SIGNED = 57708
const UNSIGNED = 57709
const ZEROFILL = 57710
const ENGINES = 57711
const LOW_CARDINALITY = 57712
const AUTOEXTEND_SIZE = 57713
const ADMIN_NAME = 57714
const RANDOM = 57715
const SUSPEND = 57716
const ATTRIBUTE = 57717
const HISTORY = 57718
const REUSE = 57719
const CURRENT = 57720
const OPTIONAL = 57721
const FAILED_LOGIN_ATTEMPTS = 57722
const PASSWORD_LOCK_TIME = 57723
const UNBOUNDED = 57724
const SECONDARY = 57725
const RESTRICTED = 57726
const USER = 57727
const IDENTIFIED = 57728
const CIPHER = 57729
const ISSUER = 57730
const X509 = 57731
const SUBJECT = 57732
const SAN = 57733
const REQUIRE = 57734
const SSL = 57735
const NONE = 57736
const PASSWORD = 57737
const SHARED = 57738
const EXCLUSIVE = 57739
const MAX_QUERIES_PER_HOUR = 57740
const MAX_UPDATES_PER_HOUR = 57741
const MAX_CONNECTIONS_PER_HOUR = 57742
const MAX_USER_CONNECTIONS = 57743
const FORMAT = 57744
const VERBOSE = 57745
const CONNECTION = 57746
const TRIGGERS = 57747
const PROFILES = 57748
const LOAD = 57749
const INLINE = 57750
const INFILE = 57751
const TERMINATED = 57752
const OPTIONALLY = 57753
const ENCLOSED = 57754
const ESCAPED = 57755
const STARTING = 57756
const LINES = 57757
const ROWS = 57758
const IMPORT = 57759
const DISCARD = 57760
const MODUMP = 57761
const OVER = 57762
const PRECEDING = 57763
const FOLLOWING = 57764
const GROUPS = 57765
const DATABASES = 57766
const TABLES = 57767
const SEQUENCES = 57768
const EXTENDED = 57769
const FULL = 57770
const PROCESSLIST = 57771
const FIELDS = 57772
const COLUMNS = 57773
const OPEN = 57774
const ERRORS = 57775
const WARNINGS = 57776
const INDEXES = 57777
const SCHEMAS = 57778
const NODE = 57779
const LOCKS = 57780
const ROLES = 57781
const TABLE_NUMBER = 57782
const COLUMN_NUMBER = 57783
const TABLE_VALUES = 57784
const TABLE_SIZE = 57785
const NAMES = 57786
const GLOBAL = 57787
const PERSIST = 57788
const SESSION = 57789
const ISOLATION = 57790
const LEVEL = 57791
const READ = 57792
const WRITE = 57793
const ONLY = 57794
const REPEATABLE = 57795
const COMMITTED = 57796
const UNCOMMITTED = 57797
const SERIALIZABLE = 57798
const LOCAL = 57799
const EVENTS = 57800
const PLUGINS = 57801
const CURRENT_TIMESTAMP = 57802
const DATABASE = 57803
const CURRENT_TIME = 57804
const LOCALTIME = 57805
const LOCALTIMESTAMP = 57806
const UTC_DATE = 57807
const UTC_TIME = 57808
const UTC_TIMESTAMP = 57809
const REPLACE = 57810
const CONVERT = 57811
const SEPARATOR = 57812
const TIMESTAMPDIFF = 57813
const CURRENT_DATE = 57814
const CURRENT_USER = 57815
const CURRENT_ROLE = 57816
const SECOND_MICROSECOND = 57817
const MINUTE_MICROSECOND = 57818
const MINUTE_SECOND = 57819
const HOUR_MICROSECOND = 57820
const HOUR_SECOND = 57821
const HOUR_MINUTE = 57822
const DAY_MICROSECOND = 57823
const DAY_SECOND = 57824
const DAY_MINUTE = 57825
const DAY_HOUR = 57826
const YEAR_MONTH = 57827
const SQL_TSI_HOUR = 57828
const SQL_TSI_DAY = 57829
const SQL_TSI_WEEK = 57830
const SQL_TSI_MONTH = 57831
const SQL_TSI_QUARTER = 57832
const SQL_TSI_YEAR = 57833
const SQL_TSI_SECOND = 57834
const SQL_TSI_MINUTE = 57835
const RECURSIVE = 57836
const CONFIG = 57837
const DRAINER = 57838
const SOURCE = 57839
const STREAM = 57840
const HEADERS = 57841
const MATCH = 57842
const AGAINST = 57843
const BOOLEAN = 57844
const LANGUAGE = 57845
const WITH = 57846
const QUERY = 57847
const EXPANSION = 57848
const WITHOUT = 57849
const VALIDATION = 57850
const ADDDATE = 57851
const BIT_AND = 57852
const BIT_OR = 57853
const BIT_XOR = 57854
const CAST = 57855
const COUNT = 57856
const APPROX_COUNT = 57857
const APPROX_COUNT_DISTINCT = 57858
const APPROX_PERCENTILE = 57859
const CURDATE = 57860
const CURTIME = 57861
const DATE_ADD = 57862
const DATE_SUB = 57863
const EXTRACT = 57864
const GROUP_CONCAT = 57865
const MAX = 57866
const MID = 57867
const MIN = 57868
const NOW = 57869
const POSITION = 57870
const SESSION_USER = 57871
const STD = 57872
const STDDEV = 57873
const MEDIAN = 57874
const STDDEV_POP = 57875
const STDDEV_SAMP = 57876
const SUBDATE = 57877
const SUBSTR = 57878
const SUBSTRING = 57879
const SUM = 57880
const SYSDATE = 57881
const SYSTEM_USER = 57882
const TRANSLATE = 57883
const TRIM = 57884
const VARIANCE = 57885
const VAR_POP = 57886
const VAR_SAMP = 57887
const AVG = 57888
const RANK = 57889
const ROW_NUMBER = 57890
const DENSE_RANK = 57891
const BIT_CAST = 57892
const NEXTVAL = 57893
const SETVAL = 57894
const CURRVAL = 57895
const LASTVAL = 57896
const ARROW = 57897
const ROW = 57898
const OUTFILE = 57899
const HEADER = 57900
const MAX_FILE_SIZE = 57901
const FORCE_QUOTE = 57902
const PARALLEL = 57903
const UNUSED = 57904
const BINDINGS = 57905
const DO = 57906
const DECLARE = 57907
const LOOP = 57908
const WHILE = 57909
const LEAVE = 57910
const ITERATE = 57911
const UNTIL = 57912
const CALL = 57913
const SPBEGIN = 57914
const BACKEND = 57915
const SERVERS = 57916
const KILL = 57917
const BACKUP = 57918
const FILESYSTEM = 57919
const QUERY_RESULT = 57920

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10347

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 116,
	21, 699,
	-2, 680,
	-1, 132,
	233, 1031,
	235, 954,
	-2, 994,
	-1, 155,
	42, 519,
	235, 519,
	262, 526,
	263, 526,
	452, 519,
	-2, 552,
	-1, 191,
	599, 1738,
	-2, 435,
	-1, 525,
	314, 133,
	425, 133,
	426, 133,
	-2, 1650,
	-1, 589,
	81, 1448,
	-2, 1792,
	-1, 590,
	81, 1466,
	-2, 1763,
	-1, 594,
	81, 1467,
	-2, 1791,
	-1, 620,
	81, 1378,
	-2, 1860,
	-1, 621,
	81, 1379,
	-2, 1859,
	-1, 622,
	81, 1380,
	-2, 1849,
	-1, 623,
	81, 1823,
	-2, 1844,
	-1, 624,
	81, 1824,
	-2, 1845,
	-1, 625,
	81, 1825,
	-2, 1851,
	-1, 626,
	81, 1826,
	-2, 1833,
	-1, 627,
	81, 1827,
	-2, 1842,
	-1, 628,
	81, 1828,
	-2, 1852,
	-1, 629,
	81, 1829,
	-2, 1853,
	-1, 630,
	81, 1830,
	-2, 1858,
	-1, 631,
	81, 1831,
	-2, 1863,
	-1, 632,
	81, 1832,
	-2, 1864,
	-1, 634,
	81, 1445,
	-2, 1639,
	-1, 638,
	81, 1450,
	-2, 1651,
	-1, 641,
	81, 1454,
	-2, 1669,
	-1, 645,
	81, 1458,
	-2, 1709,
	-1, 646,
	81, 1459,
	-2, 1787,
	-1, 654,
	81, 1469,
	-2, 1772,
	-1, 655,
	81, 1470,
	-2, 1816,
	-1, 656,
	81, 1471,
	-2, 1782,
	-1, 657,
	81, 1472,
	-2, 1806,
	-1, 668,
	81, 1356,
	-2, 1854,
	-1, 669,
	81, 1357,
	-2, 1855,
	-1, 670,
	81, 1358,
	-2, 1856,
	-1, 674,
	21, 700,
	-2, 663,
	-1, 753,
	447, 552,
	448, 552,
	-2, 520,
	-1, 798,
	122, 1639,
	133, 1639,
	153, 1639,
	-2, 1614,
	-1, 902,
	21, 700,
	-2, 663,
	-1, 1002,
	21, 699,
	-2, 1253,
	-1, 1375,
	81, 1516,
	-2, 1789,
	-1, 1376,
	81, 1517,
	-2, 1790,
	-1, 1515,
	82, 845,
	-2, 851,
	-1, 1899,
	82, 1600,
	154, 1600,
	-2, 1774,
	-1, 1900,
	82, 1600,
	154, 1600,
	-2, 1773,
	-1, 1901,
	82, 1578,
	154, 1578,
	-2, 1760,
	-1, 1902,
	82, 1579,
	154, 1579,
	-2, 1765,
	-1, 1903,
	82, 1580,
	154, 1580,
	-2, 1697,
	-1, 1904,
	82, 1581,
	154, 1581,
	-2, 1691,
	-1, 1905,
	82, 1582,
	154, 1582,
	-2, 1630,
	-1, 1906,
	82, 1583,
	154, 1583,
	-2, 1762,
	-1, 1907,
	82, 1584,
	154, 1584,
	-2, 1695,
	-1, 1908,
	82, 1585,
	154, 1585,
	-2, 1690,
	-1, 1909,
	82, 1586,
	154, 1586,
	-2, 1683,
	-1, 1911,
	82, 1589,
	154, 1589,
	-2, 1806,
	-1, 1912,
	82, 1569,
	154, 1569,
	-2, 1792,
	-1, 1913,
	82, 1598,
	154, 1598,
	-2, 1763,
	-1, 1914,
	82, 1598,
	154, 1598,
	-2, 1791,
	-1, 1915,
	82, 1598,
	154, 1598,
	-2, 1652,
	-1, 1916,
	82, 1596,
	154, 1596,
	-2, 1782,
	-1, 1917,
	82, 1593,
	154, 1593,
	-2, 1674,
	-1, 1918,
	81, 1550,
	82, 1550,
	154, 1550,
	383, 1550,
	384, 1550,
	385, 1550,
	-2, 1629,
	-1, 1919,
	81, 1551,
	82, 1551,
	154, 1551,
	383, 1551,
	384, 1551,
	385, 1551,
	-2, 1631,
	-1, 1920,
	81, 1554,
	82, 1554,
	154, 1554,
	383, 1554,
	384, 1554,
	385, 1554,
	-2, 1764,
	-1, 1921,
	81, 1556,
	82, 1556,
	154, 1556,
	383, 1556,
	384, 1556,
	385, 1556,
	-2, 1747,
	-1, 1922,
	81, 1558,
	82, 1558,
	154, 1558,
	383, 1558,
	384, 1558,
	385, 1558,
	-2, 1696,
	-1, 1923,
	81, 1560,
	82, 1560,
	154, 1560,
	383, 1560,
	384, 1560,
	385, 1560,
	-2, 1679,
	-1, 1924,
	81, 1561,
	82, 1561,
	154, 1561,
	383, 1561,
	384, 1561,
	385, 1561,
	-2, 1680,
	-1, 1925,
	81, 1563,
	82, 1563,
	154, 1563,
	383, 1563,
	384, 1563,
	385, 1563,
	-2, 1628,
	-1, 1926,
	82, 1603,
	154, 1603,
	383, 1603,
	384, 1603,
	385, 1603,
	-2, 1657,
	-1, 1927,
	82, 1603,
	154, 1603,
	383, 1603,
	384, 1603,
	385, 1603,
	-2, 1670,
	-1, 1928,
	82, 1606,
	154, 1606,
	383, 1606,
	384, 1606,
	385, 1606,
	-2, 1653,
	-1, 1929,
	82, 1606,
	154, 1606,
	383, 1606,
	384, 1606,
	385, 1606,
	-2, 1712,
	-1, 1930,
	82, 1603,
	154, 1603,
	383, 1603,
	384, 1603,
	385, 1603,
	-2, 1732,
	-1, 1948,
	105, 989,
	149, 989,
	188, 989,
	191, 989,
	275, 989,
	-2, 982,
	-1, 2085,
	21, 699,
	-2, 793,
	-1, 2287,
	105, 989,
	149, 989,
	188, 989,
	191, 989,
	275, 989,
	-2, 983,
	-1, 2299,
	79, 609,
	154, 609,
	-2, 1140,
	-1, 2635,
	191, 989,
	299, 1221,
	-2, 1193,
	-1, 2773,
	105, 989,
	149, 989,
	188, 989,
	191, 989,
	-2, 1083,
	-1, 2775,
	105, 989,
	149, 989,
	188, 989,
	191, 989,
	-2, 1083,
	-1, 2785,
	79, 609,
	154, 609,
	-2, 1141,
	-1, 2794,
	191, 989,
	299, 1221,
	-2, 1194,
	-1, 2921,
	105, 989,
	149, 989,
	188, 989,
	191, 989,
	-2, 1084,
	-1, 3290,
	82, 1049,
	154, 1049,
	-2, 989,
	-1, 3294,
	82, 1049,
	154, 1049,
	-2, 989,
	-1, 3308,
	82, 1053,
	154, 1053,
	-2, 989,
	-1, 3313,
	82, 1054,
	154, 1054,
	-2, 989,
}

const yyPrivate = 57344

const yyLast = 37908

var yyAct = [...]int{
	556, 1595, 3294, 3293, 3302, 3273, 182, 1355, 534, 3165,
	536, 3226, 558, 529, 3191, 3244, 3173, 2653, 3174, 2874,
	544, 2869, 2017, 3084, 2962, 3098, 2808, 1874, 3075, 1351,
	2716, 1154, 3102, 2912, 2911, 1035, 2717, 2997, 586, 2909,
	441, 3042, 1293, 3035, 1283, 675, 538, 2259, 1214, 797,
	448, 2748, 453, 453, 2872, 3085, 3087, 2987, 453, 469,
	478, 1548, 2764, 478, 2916, 2302, 2920, 2927, 1358, 2571,
	1987, 2923, 2888, 2795, 2864, 2417, 2416, 1681, 1684, 2599,
	2753, 2399, 2339, 2319, 2415, 167, 2650, 2714, 2639, 2776,
	2632, 1649, 2409, 2569, 2079, 1778, 1897, 2702, 2438, 1747,
	2685, 2412, 2278, 483, 2583, 2580, 2572, 2578, 896, 489,
	1990, 1957, 2638, 527, 1696, 2063, 2288, 1895, 1887, 1878,
	1207, 2475, 1274, 533, 2612, 2513, 1877, 1756, 1755, 1677,
	1774, 1748, 1721, 2127, 1495, 729, 2080, 1773, 803, 2458,
	1652, 2262, 1127, 2068, 1650, 1577, 2321, 1988, 1279, 1587,
	1956, 1526, 2294, 6, 2267, 1503, 528, 178, 8, 441,
	177, 7, 2144, 1550, 850, 1287, 1284, 535, 2190, 1349,
	1807, 537, 1775, 2107, 1223, 1248, 1939, 2574, 791, 2573,
	1953, 1193, 182, 115, 182, 447, 841, 842, 1893, 1785,
	526, 1405, 1389, 835, 836, 913, 1559, 1983, 840, 2220,
	1143, 2221, 1340, 1751, 35, 760, 1737, 801, 465, 545,
	1711, 1560, 1162, 26, 1754, 15, 1163, 1255, 440, 1348,
	672, 13, 2087, 1354, 14, 790, 32, 1525, 1139, 728,
	462, 1192, 1412, 23, 16, 1292, 528, 1190, 491, 1074,
	1411, 10, 1155, 168, 492, 477, 1247, 1100, 706, 161,
	164, 710, 1782, 726, 748, 674, 3029, 2246, 2246, 2246,
	838, 1792, 1036, 1107, 2767, 2709, 2179, 837, 2133, 839,
	2131, 1508, 474, 2130, 470, 2128, 1258, 1262, 833, 834,
	472, 166, 834, 473, 1091, 471, 834, 449, 2798, 1129,
	1175, 1260, 971, 972, 973, 970, 971, 972, 973, 970,
	2862, 2471, 2469, 1726, 2993, 458, 2988, 36, 481, 2865,
	2715, 1499, 1030, 3089, 1750, 673, 2025, 683, 934, 3156,
	832, 165, 165, 2165, 8, 165, 2810, 7, 822, 1092,
	165, 51, 157, 133, 165, 51, 157, 133, 165, 2801,
	165, 51, 157, 133, 165, 165, 804, 165, 2258, 2796,
	2898, 2173, 3046, 1779, 2818, 2819, 1307, 2260, 2889, 2887,
	2797, 3120, 1300, 1104, 1521, 487, 475, 806, 2537, 2490,
	2483, 1790, 663, 114, 662, 664, 665, 488, 666, 667,
	1943, 1341, 1119, 1093, 1345, 2105, 1304, 968, 55, 2106,
	162, 162, 1297, 114, 162, 1171, 3047, 2802, 1172, 162,
	3018, 949, 1694, 162, 950, 1325, 1661, 1306, 1344, 162,
	2445, 2446, 2444, 1299, 162, 1194, 162, 1196, 684, 2093,
	3209, 676, 2092, 942, 2264, 2094, 944, 1662, 1663, 1509,
	1510, 1151, 952, 1158, 2265, 3207, 2145, 1157, 1160, 1161,
	1160, 1161, 3177, 3178, 769, 961, 1573, 1357, 2883, 966,
	800, 799, 453, 3092, 945, 3092, 3151, 3091, 3150, 3090,
	3149, 3091, 453, 906, 3090, 1865, 2995, 817, 813, 808,
	812, 815, 3195, 3196, 3155, 2998, 2999, 3000, 3001, 2476,
	478, 478, 2263, 453, 1174, 2718, 3077, 1346, 2817, 3077,
	1991, 2477, 3080, 2478, 2991, 820, 1361, 2718, 2160, 811,
	907, 1794, 2355, 1678, 901, 903, 2270, 947, 916, 3095,
	1343, 2727, 1668, 2754, 1786, 2806, 1672, 1261, 1259, 1336,
	2761, 2057, 2903, 2592, 1937, 1734, 2594, 1268, 1267, 938,
	717, 2249, 964, 965, 2820, 2584, 844, 2803, 2807, 2805,
	2804, 3153, 916, 132, 974, 163, 905, 3024, 2403, 2501,
	818, 807, 1446, 1003, 940, 3158, 3159, 821, 2503, 963,
	2170, 1012, 2023, 900, 937, 155, 943, 946, 2863, 522,
	948, 2470, 524, 2064, 809, 2812, 2813, 523, 2589, 2590,
	2882, 2060, 1004, 802, 1019, 2059, 3027, 2884, 906, 2900,
	3176, 3202, 939, 3211, 2591, 2832, 929, 819, 902, 3010,
	2588, 2613, 3011, 2282, 2283, 2284, 2285, 1360, 1359, 1367,
	1370, 1371, 2608, 954, 2651, 2652, 955, 2820, 1791, 3043,
	1368, 3108, 2295, 480, 1149, 2408, 1342, 479, 1945, 2799,
	1796, 1798, 1799, 2825, 1039, 2811, 3287, 810, 1184, 3242,
	1173, 1106, 1105, 3206, 957, 3103, 951, 1692, 1693, 3303,
	959, 960, 804, 3235, 3167, 3013, 3163, 3164, 1138, 3167,
	1090, 2835, 3094, 2963, 2964, 2965, 2967, 2966, 941, 2953,
	3267, 1040, 2006, 806, 3247, 909, 910, 2655, 1986, 2008,
	474, 474, 470, 470, 2034, 1780, 3012, 2942, 472, 472,
	1780, 473, 473, 471, 471, 1098, 448, 1101, 918, 917,
	3028, 2730, 2507, 2245, 719, 2033, 720, 2875, 1006, 1007,
	1008, 1009, 2586, 816, 920, 2054, 2055, 1071, 2948, 953,
	1780, 1993, 2276, 804, 3274, 922, 923, 2109, 729, 926,
	1203, 1202, 918, 917, 1153, 1152, 2007, 927, 1136, 1135,
	1134, 1808, 834, 3304, 806, 834, 476, 834, 911, 3157,
	814, 834, 476, 834, 3036, 834, 1010, 958, 3298, 1986,
	897, 2554, 2777, 2860, 2816, 2129, 3310, 1781, 1159, 1263,
	1108, 1793, 487, 3044, 475, 475, 453, 3045, 1186, 1156,
	3074, 1191, 956, 2647, 441, 441, 1160, 1161, 2260, 934,
	2440, 2442, 1113, 441, 441, 2166, 2097, 1218, 1218, 2021,
	453, 1160, 1161, 2383, 673, 1783, 2269, 52, 2003, 2506,
	3248, 1117, 1116, 52, 3010, 3019, 3212, 3011, 1115, 478,
	1101, 448, 482, 2815, 1251, 1251, 1216, 1216, 1679, 2595,
	134, 134, 3005, 1225, 134, 182, 2585, 1250, 1250, 134,
	1996, 1150, 2564, 134, 441, 1369, 1220, 134, 1795, 134,
	3025, 2899, 2174, 134, 134, 1992, 134, 807, 1048, 1049,
	1994, 2504, 2273, 2274, 928, 2654, 1797, 2455, 2456, 1124,
	3013, 2955, 933, 2356, 2353, 2357, 2358, 2272, 2904, 1512,
	802, 1099, 2651, 2652, 3297, 1102, 2515, 2514, 2648, 723,
	724, 725, 1669, 1291, 1269, 1294, 1671, 2248, 3006, 1337,
	1302, 3012, 3086, 2587, 1883, 1882, 1881, 1096, 1094, 1095,
	2374, 2375, 1513, 1880, 1995, 1212, 1213, 1511, 1076, 686,
	1323, 2046, 721, 687, 2928, 3250, 1551, 1078, 807, 969,
	2682, 2944, 934, 1308, 1218, 2943, 1218, 906, 3245, 3246,
	3309, 3316, 1145, 1146, 674, 1551, 2949, 2950, 2147, 1103,
	2678, 2745, 718, 2441, 1993, 1996, 1140, 1144, 1144, 1144,
	2729, 2618, 1198, 1200, 1109, 1110, 1111, 1112, 1997, 1114,
	1868, 1210, 1211, 1118, 1272, 677, 1275, 1276, 2300, 1140,
	1140, 1126, 2165, 1362, 1363, 1364, 1365, 1366, 2657, 1185,
	770, 1176, 1177, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1164, 1243, 3315, 1167, 1400,
	1401, 2002, 2760, 969, 3306, 2000, 770, 1410, 1281, 1282,
	1356, 1132, 1264, 825, 830, 831, 1137, 1407, 1408, 1409,
	1201, 1459, 2373, 1147, 2606, 1443, 2301, 1180, 2077, 1318,
	1319, 1165, 1166, 1453, 1168, 1169, 1170, 2384, 2386, 2387,
	2388, 2385, 3288, 1226, 1468, 1286, 1289, 458, 1290, 2078,
	2020, 2254, 1236, 2078, 1241, 3271, 1353, 1242, 1449, 1450,
	1451, 1252, 3283, 772, 779, 1819, 771, 3277, 1253, 969,
	781, 1465, 2682, 1997, 1466, 2649, 3307, 1497, 1992, 1986,
	1991, 1501, 1989, 1994, 1504, 2251, 1334, 1475, 1476, 772,
	1372, 2152, 771, 1493, 971, 972, 973, 970, 1523, 2109,
	1218, 1528, 1529, 3006, 1531, 1532, 2301, 3007, 969, 453,
	1314, 1941, 1218, 1779, 1788, 474, 729, 470, 3276, 1549,
	1890, 1322, 677, 472, 1218, 1331, 473, 1328, 471, 1321,
	1186, 674, 1309, 1327, 3284, 469, 1310, 1995, 1840, 1788,
	1818, 1839, 1496, 1891, 1892, 1330, 1329, 1350, 1458, 3254,
	2607, 1660, 2078, 1326, 1572, 2197, 1398, 1399, 1981, 690,
	1873, 1347, 1578, 1578, 1844, 1186, 3228, 1186, 1186, 1352,
	3185, 453, 453, 3179, 1523, 1523, 1770, 1576, 1218, 1646,
	1647, 1659, 1522, 891, 887, 888, 889, 890, 1141, 2202,
	1788, 2201, 2200, 2198, 1298, 441, 1391, 1218, 1305, 3130,
	1714, 827, 828, 829, 775, 773, 1339, 774, 1338, 475,
	689, 1497, 1530, 969, 692, 691, 1497, 1497, 1690, 1332,
	1125, 1788, 453, 1523, 1218, 1940, 1701, 3068, 453, 453,
	1705, 1706, 971, 972, 973, 970, 1709, 1710, 3229, 1403,
	3067, 1716, 3186, 3063, 1597, 3032, 1441, 1442, 182, 1445,
	1204, 182, 182, 1444, 182, 2199, 3062, 1460, 1641, 1642,
	1724, 3230, 2788, 1727, 986, 1072, 1730, 2619, 2460, 1732,
	1467, 3032, 1469, 1470, 2303, 807, 931, 2976, 2535, 807,
	1687, 1688, 3061, 1494, 932, 3060, 2168, 2167, 1552, 1553,
	1459, 1459, 1758, 780, 1872, 3031, 2893, 1459, 1459, 3069,
	2839, 1565, 1765, 1673, 1142, 2666, 1500, 1698, 1579, 1665,
	776, 1667, 1961, 2435, 2227, 3032, 1571, 2159, 2219, 1574,
	1575, 1685, 1686, 1527, 1977, 899, 1549, 1680, 3032, 1835,
	1218, 1777, 2180, 1725, 1700, 1541, 1728, 1729, 1712, 1731,
	1657, 1140, 1703, 1704, 934, 1546, 1561, 1554, 1563, 1564,
	1570, 1545, 932, 1556, 3032, 1566, 1518, 3032, 1519, 1520,
	1820, 1569, 2163, 1582, 1583, 1562, 1144, 3032, 2894, 1533,
	1534, 1535, 2109, 778, 2156, 1769, 1581, 2667, 1719, 2154,
	971, 972, 973, 970, 2149, 2078, 969, 1771, 2203, 2204,
	969, 2142, 452, 452, 1759, 1805, 1806, 2140, 460, 2138,
	2136, 1527, 1960, 1648, 969, 1645, 1869, 1811, 1517, 1311,
	1815, 1016, 1850, 1849, 919, 1557, 1558, 1753, 899, 1664,
	1674, 1666, 894, 1838, 1753, 1801, 1871, 1580, 892, 2623,
	2837, 1829, 1567, 1568, 1961, 987, 988, 989, 990, 991,
	992, 993, 986, 1699, 1828, 1827, 2150, 1350, 1787, 777,
	1826, 2155, 1689, 1720, 3109, 1695, 2150, 1315, 1833, 1448,
	1447, 2089, 1722, 2143, 1448, 1447, 2498, 1141, 2614, 2141,
	3263, 2137, 2137, 804, 1961, 1739, 1846, 3251, 1868, 2929,
	804, 1851, 1852, 1853, 969, 969, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 806, 969, 2018, 2780, 3110, 2778,
	1760, 806, 1768, 969, 1845, 527, 1847, 906, 1931, 453,
	453, 453, 1762, 1854, 1767, 1206, 969, 969, 1130, 474,
	1788, 470, 1131, 2930, 453, 453, 453, 472, 1208, 1316,
	473, 1772, 471, 899, 688, 3030, 1958, 3002, 1763, 1209,
	1764, 2781, 2946, 2779, 2615, 1397, 1965, 1186, 971, 972,
	973, 970, 1803, 1804, 2945, 1962, 2766, 1970, 2128, 2710,
	1809, 1394, 1396, 1393, 2683, 1395, 804, 2676, 2671, 1481,
	1723, 1186, 2668, 1800, 1474, 2601, 1802, 989, 990, 991,
	992, 993, 986, 1142, 2405, 2013, 1813, 806, 2616, 2280,
	1898, 2247, 2178, 1391, 1471, 1472, 1473, 2153, 2099, 1477,
	1478, 1479, 1480, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1121, 1120, 475, 1205, 2024, 908, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2707, 2187, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2019, 2047, 2048,
	2049, 2050, 2051, 2122, 2052, 2082, 2082, 1659, 2082, 977,
	978, 979, 980, 981, 982, 983, 975, 693, 486, 971,
	972, 973, 970, 1406, 1406, 1814, 441, 441, 2462, 1497,
	2132, 1497, 1524, 1256, 906, 1723, 1875, 1876, 807, 3148,
	1218, 453, 1864, 1866, 1867, 807, 973, 970, 970, 1497,
	1497, 2958, 2957, 453, 2479, 1884, 2345, 2344, 906, 448,
	2327, 2325, 2937, 1251, 3266, 1659, 1018, 1942, 2117, 2103,
	2119, 1967, 1968, 2901, 182, 2765, 1250, 3292, 1980, 1017,
	1039, 1971, 1972, 971, 972, 973, 970, 2906, 2907, 1817,
	571, 116, 2708, 2095, 2758, 2096, 116, 2395, 2086, 2393,
	2084, 2391, 2088, 1966, 971, 972, 973, 970, 971, 972,
	973, 970, 1256, 2100, 2101, 1979, 1985, 1040, 1984, 3280,
	2161, 2380, 3236, 1777, 3231, 3265, 3169, 1976, 3139, 2902,
	1218, 807, 1218, 1974, 1218, 1935, 1975, 1998, 1999, 906,
	2004, 1898, 1978, 1144, 1463, 3111, 459, 3053, 3048, 116,
	2759, 2410, 898, 2394, 2989, 2392, 2116, 2390, 1464, 2123,
	2932, 2171, 904, 971, 972, 973, 970, 2111, 2931, 2782,
	1218, 2206, 2061, 971, 972, 973, 970, 2379, 2188, 2757,
	2593, 2494, 2189, 925, 2474, 2473, 2213, 2207, 2208, 2378,
	804, 1218, 2090, 2528, 2377, 2210, 2211, 2376, 2368, 1216,
	2362, 2215, 3170, 2361, 1198, 1200, 2360, 2359, 2216, 1973,
	1742, 806, 1741, 1740, 1736, 2104, 2279, 1735, 2205, 1312,
	1216, 1089, 2175, 2579, 3201, 2114, 3117, 1831, 971, 972,
	973, 970, 1497, 2870, 2121, 2240, 2241, 1504, 2115, 2214,
	906, 2217, 3197, 3152, 2113, 2212, 2112, 971, 972, 973,
	970, 3097, 2527, 805, 2910, 1816, 2124, 116, 971, 972,
	973, 970, 3083, 2191, 2191, 522, 3072, 1257, 524, 3057,
	2177, 2172, 116, 523, 116, 3052, 3051, 3026, 971, 972,
	973, 970, 2990, 2939, 2185, 2919, 453, 2158, 2905, 2868,
	2866, 1218, 2162, 1830, 2277, 2164, 2846, 2238, 3113, 2169,
	1523, 2843, 559, 569, 2841, 2400, 2299, 2756, 3003, 2755,
	2266, 560, 2305, 568, 561, 565, 564, 562, 563, 971,
	972, 973, 970, 2252, 2181, 2182, 2184, 2752, 2314, 971,
	972, 973, 970, 2196, 906, 2735, 2194, 971, 972, 973,
	970, 2677, 2324, 2673, 2664, 2255, 2663, 2602, 3101, 906,
	906, 906, 1578, 1350, 2561, 906, 2560, 2335, 2336, 2337,
	906, 2559, 2341, 2342, 1879, 2343, 566, 2508, 2505, 2472,
	2289, 2449, 2389, 1276, 971, 972, 973, 970, 2381, 2242,
	2371, 2369, 2365, 2239, 2290, 2364, 2363, 1870, 2082, 619,
	618, 3129, 2351, 2352, 1744, 807, 1738, 1507, 567, 2222,
	2223, 2296, 2396, 1597, 1506, 2228, 2366, 2367, 1313, 1047,
	441, 1043, 1042, 1281, 1282, 1523, 906, 1659, 1659, 1659,
	1659, 895, 685, 2897, 2306, 2256, 2257, 2775, 906, 1659,
	2402, 2774, 2082, 2330, 2331, 2773, 2744, 2734, 2334, 2722,
	2318, 2713, 2275, 2340, 1286, 1289, 2712, 1290, 1218, 165,
	2322, 157, 133, 2701, 2322, 2329, 2298, 2700, 2624, 2533,
	453, 453, 2526, 2304, 2518, 2517, 2512, 8, 2457, 2253,
	7, 971, 972, 973, 970, 182, 1182, 2250, 2139, 2135,
	182, 2317, 2315, 2308, 2134, 2320, 1855, 2310, 1848, 1843,
	2326, 1841, 2466, 1837, 2468, 1836, 1834, 2333, 1825, 2418,
	1224, 1459, 1822, 1459, 2431, 1821, 2489, 1743, 1492, 1491,
	2493, 2418, 1497, 1490, 1527, 1462, 1218, 1497, 162, 2500,
	1461, 1452, 165, 2877, 2370, 985, 984, 994, 995, 987,
	988, 989, 990, 991, 992, 993, 986, 2309, 1230, 2313,
	678, 679, 680, 681, 1842, 677, 1228, 3305, 2401, 971,
	972, 973, 970, 2511, 3262, 1823, 3256, 116, 116, 805,
	2463, 2419, 2420, 2421, 2422, 2467, 2406, 3243, 2434, 2432,
	2430, 3240, 2433, 3238, 674, 3138, 2532, 1496, 1037, 2450,
	3070, 3059, 2488, 3054, 1271, 2447, 2971, 2956, 2404, 2952,
	2854, 162, 3217, 2876, 2852, 2521, 2827, 2523, 2826, 2823,
	2822, 2486, 2768, 2577, 2323, 906, 2307, 2492, 2464, 906,
	2465, 2461, 2829, 2576, 2311, 2312, 1229, 2582, 2502, 971,
	972, 973, 970, 1280, 1273, 1128, 2497, 2597, 2485, 2480,
	1002, 2487, 453, 2482, 2692, 2732, 2397, 2328, 971, 972,
	973, 970, 906, 906, 906, 2293, 2496, 971, 972, 973,
	970, 1659, 1958, 2292, 2622, 2291, 2509, 2510, 2531, 1285,
	2626, 971, 972, 973, 970, 1288, 1277, 2237, 2148, 2516,
	2519, 2520, 2637, 2098, 2640, 2443, 2640, 2640, 2053, 2524,
	2525, 906, 1959, 1392, 971, 972, 973, 970, 1898, 2605,
	162, 1707, 2644, 1516, 1515, 2659, 3215, 2530, 1335, 2563,
	2522, 2529, 1218, 1218, 1301, 2656, 1278, 1073, 1070, 2289,
	1069, 2555, 2236, 1068, 1067, 1066, 2558, 1065, 2658, 1064,
	2562, 1063, 2565, 971, 972, 973, 970, 971, 972, 973,
	970, 1216, 1216, 1062, 1061, 2609, 2610, 2611, 971, 972,
	973, 970, 2620, 2598, 1060, 1059, 1058, 1057, 453, 1056,
	2660, 2661, 1055, 2582, 2604, 1054, 2617, 1053, 1052, 1051,
	2636, 1050, 1046, 2621, 1523, 1523, 2635, 1079, 2538, 2539,
	2645, 1045, 1044, 1041, 2540, 2541, 2542, 2543, 1034, 2544,
	2545, 2546, 2547, 2548, 2549, 2550, 2551, 2646, 2641, 2642,
	2630, 3281, 1033, 1181, 1031, 1183, 1030, 1187, 1188, 1189,
	1029, 1028, 1027, 1026, 1025, 1024, 1023, 2484, 1022, 1021,
	1020, 2206, 1015, 1014, 2491, 1013, 936, 893, 3127, 1536,
	2711, 2625, 2686, 2687, 3125, 2627, 2628, 1231, 1232, 1233,
	1234, 1235, 3123, 1237, 1238, 1239, 1240, 2824, 1964, 3175,
	1245, 1246, 2235, 1947, 985, 984, 994, 995, 987, 988,
	989, 990, 991, 992, 993, 986, 924, 453, 2670, 2669,
	2675, 2674, 2665, 2689, 2281, 2679, 2680, 2110, 971, 972,
	973, 970, 2690, 1746, 2427, 2672, 935, 2691, 2234, 2428,
	2425, 1584, 1585, 2424, 2423, 2426, 2694, 2183, 807, 3291,
	2157, 2151, 2731, 1227, 2429, 807, 2074, 2075, 459, 2733,
	1122, 2697, 2698, 2699, 971, 972, 973, 970, 2233, 2706,
	101, 985, 984, 994, 995, 987, 988, 989, 990, 991,
	992, 993, 986, 2232, 2600, 116, 54, 2749, 906, 2244,
	2681, 450, 1697, 2723, 971, 972, 973, 970, 1697, 1697,
	2724, 2643, 2022, 2726, 53, 2693, 1543, 1544, 2736, 971,
	972, 973, 970, 2629, 2856, 2725, 1538, 1539, 1540, 2772,
	2633, 2857, 2634, 2741, 2347, 2834, 455, 1633, 2082, 1659,
	2785, 2348, 2349, 2350, 2631, 2556, 2557, 2231, 2769, 2770,
	2771, 2566, 456, 2146, 454, 906, 1265, 116, 2230, 1875,
	1876, 116, 2176, 2738, 2637, 1075, 2229, 1295, 906, 1938,
	457, 1708, 116, 971, 972, 973, 970, 930, 906, 3093,
	2855, 2740, 116, 1218, 971, 972, 973, 970, 2575, 2568,
	2567, 2751, 971, 972, 973, 970, 2316, 1954, 1547, 1523,
	1514, 1448, 1447, 906, 1087, 1088, 1497, 2226, 2787, 1085,
	1086, 2763, 1216, 1083, 1084, 1081, 1082, 1497, 3188, 3056,
	2851, 2662, 2062, 2853, 2058, 807, 2821, 2814, 1644, 182,
	2784, 2838, 2783, 971, 972, 973, 970, 2858, 2792, 1179,
	2791, 1178, 906, 962, 2696, 2108, 1766, 2848, 1133, 1077,
	3257, 2831, 2828, 3161, 3145, 2833, 3143, 2830, 3104, 3082,
	2836, 2340, 3081, 3079, 3071, 2984, 906, 2859, 2983, 2840,
	2844, 2842, 2867, 2737, 2720, 2845, 2719, 2704, 2849, 2225,
	2009, 1080, 2850, 2847, 2703, 2459, 2418, 1551, 2495, 906,
	1218, 1218, 2895, 2896, 1949, 2922, 1824, 2922, 3219, 3218,
	2885, 921, 2224, 3218, 2786, 971, 972, 973, 970, 3219,
	2789, 2954, 2891, 2790, 2861, 2721, 2065, 2451, 2871, 1216,
	2917, 1148, 677, 1218, 62, 2418, 2, 2938, 971, 972,
	973, 970, 1195, 2886, 2091, 2892, 2890, 1691, 2915, 169,
	3, 453, 1222, 906, 906, 1, 1505, 906, 906, 682,
	2436, 2437, 2917, 2070, 2073, 2074, 2075, 2071, 2695, 2072,
	2076, 2974, 2926, 2925, 2439, 1784, 2407, 2973, 2056, 1936,
	2968, 2787, 2913, 1549, 2596, 2981, 1123, 2960, 2961, 2935,
	2975, 2969, 2970, 2985, 2986, 2821, 2814, 2940, 2936, 1932,
	1933, 1934, 2218, 722, 1454, 2742, 2743, 1320, 824, 915,
	2978, 1317, 914, 2746, 1950, 1951, 1952, 912, 3016, 1404,
	573, 1749, 2209, 2398, 2372, 2749, 2980, 3187, 971, 972,
	973, 970, 3009, 3225, 3137, 1702, 2913, 2913, 2977, 3190,
	2913, 2913, 1333, 557, 2979, 3073, 2994, 1969, 971, 972,
	973, 970, 3141, 3038, 2186, 2996, 2873, 1789, 3034, 967,
	2481, 1658, 744, 1402, 2878, 610, 584, 3004, 3008, 1032,
	1303, 1296, 3021, 3022, 3014, 3023, 3020, 2933, 2934, 2536,
	971, 972, 973, 970, 826, 583, 807, 807, 3033, 971,
	972, 973, 970, 2762, 807, 2271, 678, 679, 680, 681,
	3041, 677, 906, 3039, 2454, 823, 1218, 3050, 745, 3049,
	3040, 2070, 2073, 2074, 2075, 2071, 1733, 2072, 2076, 997,
	2992, 1001, 1266, 3055, 1270, 3301, 3290, 3272, 116, 3066,
	3255, 116, 116, 3166, 116, 1216, 3064, 998, 1000, 996,
	3286, 999, 985, 984, 994, 995, 987, 988, 989, 990,
	991, 992, 993, 986, 3065, 3205, 3088, 1019, 3241, 2881,
	2879, 2880, 3076, 906, 3078, 3234, 3162, 493, 1670, 3105,
	805, 1224, 439, 788, 2972, 1745, 494, 805, 1963, 3154,
	3058, 704, 1946, 1697, 705, 2913, 116, 698, 2287, 2286,
	906, 3100, 3106, 1373, 976, 1390, 3099, 1218, 3114, 3096,
	3132, 3135, 2552, 2553, 3107, 1011, 532, 1812, 2268, 3116,
	2809, 3112, 2448, 61, 60, 59, 3122, 3124, 3126, 3128,
	58, 3115, 1715, 3136, 3121, 190, 1216, 575, 189, 2908,
	3134, 3144, 3192, 3146, 3147, 3142, 3140, 1218, 555, 554,
	553, 552, 551, 2069, 2067, 3131, 2913, 3171, 984, 994,
	995, 987, 988, 989, 990, 991, 992, 993, 986, 3160,
	2066, 1654, 1653, 1002, 1713, 2338, 1216, 2332, 2005, 3194,
	2010, 1586, 3172, 2913, 3118, 3119, 2951, 2382, 3180, 1537,
	3181, 3193, 3182, 2001, 3183, 3168, 1603, 3184, 2354, 1600,
	1599, 2346, 906, 2947, 2941, 1630, 2747, 3198, 2921, 3088,
	2793, 2794, 3199, 2800, 849, 845, 847, 848, 3200, 846,
	2195, 1982, 2570, 3208, 3210, 1889, 1888, 3224, 3213, 1886,
	1885, 3216, 3214, 1097, 3015, 165, 51, 157, 133, 3227,
	2739, 1896, 1894, 3232, 2688, 906, 3220, 3221, 3222, 3223,
	2684, 1757, 3233, 158, 1502, 2243, 3237, 1655, 3239, 1651,
	150, 1948, 3017, 1542, 159, 697, 1944, 98, 147, 48,
	3194, 3253, 89, 88, 97, 3249, 145, 47, 1432, 906,
	174, 906, 3193, 114, 3252, 3203, 3259, 173, 3261, 176,
	175, 172, 3264, 2125, 2126, 171, 1254, 170, 102, 2924,
	671, 3227, 3268, 906, 162, 3270, 38, 3275, 37, 33,
	3279, 12, 3282, 11, 34, 3285, 994, 995, 987, 988,
	989, 990, 991, 992, 993, 986, 2261, 21, 1356, 22,
	3289, 20, 3296, 1324, 19, 25, 3300, 732, 3299, 31,
	30, 109, 108, 29, 3308, 107, 2297, 106, 105, 104,
	3296, 3313, 3312, 103, 28, 3300, 18, 42, 719, 41,
	720, 40, 1356, 9, 1356, 96, 94, 27, 3260, 95,
	92, 93, 165, 51, 157, 133, 90, 73, 72, 71,
	119, 120, 86, 121, 122, 85, 1356, 84, 3311, 83,
	158, 82, 81, 3314, 79, 80, 702, 150, 743, 70,
	3258, 159, 69, 68, 67, 66, 731, 91, 77, 714,
	87, 711, 78, 76, 75, 74, 770, 65, 64, 63,
	114, 985, 984, 994, 995, 987, 988, 989, 990, 991,
	992, 993, 986, 1428, 131, 102, 129, 2085, 130, 1425,
	128, 162, 127, 1427, 1424, 1426, 1430, 1431, 132, 156,
	163, 1429, 100, 985, 984, 994, 995, 987, 988, 989,
	990, 991, 992, 993, 986, 126, 125, 124, 123, 2534,
	155, 149, 148, 43, 44, 45, 46, 57, 141, 140,
	142, 1810, 985, 984, 994, 995, 987, 988, 989, 990,
	991, 992, 993, 986, 144, 1658, 146, 143, 138, 772,
	2452, 2453, 771, 136, 116, 985, 984, 994, 995, 987,
	988, 989, 990, 991, 992, 993, 986, 119, 120, 139,
	121, 122, 985, 984, 994, 995, 987, 988, 989, 990,
	991, 992, 993, 986, 137, 716, 757, 709, 151, 152,
	153, 135, 56, 99, 733, 17, 713, 712, 24, 4,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 695, 160, 0, 0, 703, 0, 0,
	0, 735, 0, 971, 972, 973, 970, 0, 0, 0,
	0, 0, 0, 0, 110, 132, 156, 163, 154, 100,
	111, 0, 0, 0, 1435, 1436, 1437, 1438, 1439, 1440,
	1433, 1434, 0, 0, 0, 0, 718, 155, 149, 148,
	0, 708, 0, 0, 57, 707, 0, 0, 0, 0,
	0, 694, 0, 0, 0, 701, 0, 0, 0, 0,
	0, 0, 0, 0, 756, 755, 0, 0, 0, 0,
	0, 0, 699, 0, 0, 0, 0, 112, 0, 0,
	0, 754, 1432, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 730, 0, 0, 696, 0, 0, 0, 0,
	0, 0, 2603, 734, 765, 151, 152, 153, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 761, 0, 0,
	0, 160, 0, 0, 0, 700, 0, 0, 52, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 154, 0, 111, 0, 0,
	0, 0, 0, 762, 766, 0, 0, 0, 0, 0,
	116, 0, 0, 0, 134, 0, 0, 0, 0, 0,
	0, 0, 751, 0, 749, 753, 769, 0, 0, 0,
	750, 747, 746, 0, 752, 737, 738, 736, 739, 740,
	741, 742, 0, 767, 0, 768, 0, 0, 0, 0,
	0, 715, 0, 0, 112, 0, 763, 764, 1697, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 0, 0,
	0, 0, 0, 0, 113, 39, 0, 1428, 0, 0,
	0, 49, 5, 1425, 0, 117, 118, 1427, 1424, 1426,
	1430, 1431, 0, 759, 0, 1429, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 1658, 1658, 1658,
	1658, 0, 0, 0, 0, 0, 0, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2728, 0, 0,
	0, 758, 0, 0, 0, 116, 0, 0, 0, 0,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 0, 0, 0, 0, 0, 116, 0, 0,
	0, 113, 39, 0, 0, 0, 0, 0, 49, 0,
	0, 0, 117, 118, 0, 0, 0, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1435, 1436,
	1437, 1438, 1439, 1440, 1433, 1434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 582, 0, 0, 362, 317, 0,
	0, 0, 0, 642, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 572, 619,
	618, 559, 569, 0, 0, 256, 188, 436, 0, 437,
	560, 0, 568, 561, 565, 564, 562, 563, 0, 634,
	0, 1658, 0, 0, 0, 0, 530, 543, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 541, 0, 0, 0, 0, 592,
	0, 542, 0, 0, 587, 566, 570, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 567, 590, 594,
	272, 656, 588, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 657, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 0, 0, 0,
	393, 2959, 0, 640, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 589, 0, 353, 335, 653, 531,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 1456, 1455,
	1457, 405, 285, 239, 240, 445, 638, 331, 0, 0,
	0, 0, 652, 633, 635, 636, 639, 643, 644, 645,
	646, 647, 649, 651, 655, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 116, 116,
	0, 0, 0, 0, 0, 0, 116, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 593, 0, 0, 321,
	322, 323, 324, 641, 0, 261, 416, 346, 0, 1658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 663, 637, 662, 664, 665, 661, 666, 667, 648,
	550, 0, 597, 659, 658, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 116,
	237, 0, 241, 0, 304, 0, 345, 283, 0, 0,
	626, 603, 604, 605, 548, 606, 600, 601, 602, 627,
	595, 623, 624, 574, 598, 607, 622, 608, 625, 628,
	629, 668, 669, 614, 670, 611, 630, 621, 620, 609,
	596, 631, 632, 581, 576, 612, 613, 599, 615, 616,
	617, 549, 577, 578, 579, 580, 0, 591, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 546,
	0, 0, 0, 278, 1498, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 582, 0, 0, 362, 317, 0,
	0, 0, 0, 642, 650, 0, 0, 0, 0, 0,
	0, 0, 1682, 0, 0, 539, 0, 0, 572, 619,
	618, 559, 569, 0, 0, 256, 188, 436, 0, 437,
	560, 0, 568, 561, 565, 564, 562, 563, 0, 634,
	0, 0, 0, 0, 0, 0, 530, 543, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 541, 0, 0, 0, 0, 592,
	0, 542, 0, 0, 1683, 566, 570, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 567, 590, 594,
	272, 656, 588, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 657, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 0, 0, 0,
	393, 0, 0, 640, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 589, 0, 353, 335, 653, 531,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 239, 240, 445, 638, 331, 0, 0,
	0, 0, 652, 633, 635, 636, 639, 643, 644, 645,
	646, 647, 649, 651, 655, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 593, 0, 0, 321,
	322, 323, 324, 641, 0, 261, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 663, 637, 662, 664, 665, 661, 666, 667, 648,
	550, 0, 597, 659, 658, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 0, 241, 0, 304, 0, 345, 283, 0, 0,
	626, 603, 604, 605, 548, 606, 600, 601, 602, 627,
	595, 623, 624, 574, 598, 607, 622, 608, 625, 628,
	629, 668, 669, 614, 670, 611, 630, 621, 620, 609,
	596, 631, 632, 581, 576, 612, 613, 599, 615, 616,
	617, 549, 577, 578, 579, 580, 165, 591, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 546,
	0, 0, 0, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 1005, 0, 0, 362, 317, 0,
	0, 0, 0, 642, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 572, 619,
	618, 559, 569, 0, 0, 256, 188, 436, 0, 437,
	560, 0, 568, 561, 565, 564, 562, 563, 0, 634,
	0, 0, 0, 0, 0, 0, 530, 543, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 541, 0, 0, 0, 0, 592,
	0, 542, 0, 0, 587, 566, 570, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 567, 590, 594,
	272, 656, 588, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 657, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 0, 0, 0,
	393, 0, 0, 640, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 589, 0, 353, 335, 653, 531,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 239, 240, 445, 638, 331, 0, 0,
	0, 0, 652, 633, 635, 636, 639, 643, 644, 645,
	646, 647, 649, 651, 655, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 593, 0, 0, 321,
	322, 323, 324, 641, 0, 261, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 663, 637, 662, 664, 665, 661, 666, 667, 648,
	550, 0, 597, 659, 658, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 0, 241, 0, 304, 134, 345, 283, 0, 0,
	626, 603, 604, 605, 548, 606, 600, 601, 602, 627,
	595, 623, 624, 574, 598, 607, 622, 608, 625, 628,
	629, 668, 669, 614, 670, 611, 630, 621, 620, 609,
	596, 631, 632, 581, 576, 612, 613, 599, 615, 616,
	617, 549, 577, 578, 579, 580, 0, 591, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 546,
	0, 0, 0, 278, 3269, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 582, 0, 0, 362, 317, 0,
	0, 0, 0, 642, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 572, 619,
	618, 559, 569, 0, 0, 256, 188, 436, 0, 437,
	560, 0, 568, 561, 565, 564, 562, 563, 0, 634,
	0, 0, 0, 0, 0, 0, 530, 543, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 541, 0, 0, 0, 0, 592,
	0, 542, 0, 0, 587, 566, 570, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 567, 590, 594,
	272, 656, 588, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 657, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 0, 0, 0,
	393, 0, 0, 640, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 589, 0, 353, 335, 653, 531,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 239, 240, 445, 638, 331, 0, 0,
	0, 0, 652, 633, 635, 636, 639, 643, 644, 645,
	646, 647, 649, 651, 655, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 593, 0, 0, 321,
	322, 323, 324, 641, 0, 261, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 663, 637, 662, 664, 665, 661, 666, 667, 648,
	550, 0, 597, 659, 658, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 0, 241, 0, 304, 0, 345, 283, 0, 0,
	626, 603, 604, 605, 548, 606, 600, 601, 602, 627,
	595, 623, 624, 574, 598, 607, 622, 608, 625, 628,
	629, 668, 669, 614, 670, 611, 630, 621, 620, 609,
	596, 631, 632, 581, 576, 612, 613, 599, 615, 616,
	617, 549, 577, 578, 579, 580, 0, 591, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 546,
	0, 0, 0, 278, 1498, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 582, 0, 0, 362, 317, 0,
	0, 0, 0, 642, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 572, 619,
	618, 559, 569, 0, 0, 256, 188, 436, 0, 437,
	560, 0, 568, 561, 565, 564, 562, 563, 0, 634,
	0, 0, 0, 0, 0, 0, 530, 543, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 541, 0, 0, 0, 0, 592,
	0, 542, 0, 0, 587, 566, 570, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 567, 590, 594,
	272, 656, 588, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 657, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 0, 0, 0,
	393, 0, 0, 640, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 589, 0, 353, 335, 653, 531,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 239, 240, 445, 638, 331, 0, 0,
	0, 0, 652, 633, 635, 636, 639, 643, 644, 645,
	646, 647, 649, 651, 655, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 593, 0, 0, 321,
	322, 323, 324, 641, 0, 261, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 663, 637, 662, 664, 665, 661, 666, 667, 648,
	550, 0, 597, 659, 658, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 0, 241, 0, 304, 0, 345, 283, 0, 0,
	626, 603, 604, 605, 548, 606, 600, 601, 602, 627,
	595, 623, 624, 574, 598, 607, 622, 608, 625, 628,
	629, 668, 669, 614, 670, 611, 630, 621, 620, 609,
	596, 631, 632, 581, 576, 612, 613, 599, 615, 616,
	617, 549, 577, 578, 579, 580, 0, 591, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 546,
	0, 0, 0, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 582, 0, 0, 362, 317, 0,
	0, 0, 0, 642, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 572, 619,
	618, 559, 569, 0, 0, 256, 188, 436, 0, 437,
	560, 0, 568, 561, 565, 564, 562, 563, 0, 634,
	0, 0, 0, 0, 0, 0, 530, 543, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 541, 1249, 0, 0, 0, 592,
	0, 542, 0, 0, 587, 566, 570, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 567, 590, 594,
	272, 656, 588, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 657, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 0, 0, 0,
	393, 0, 0, 640, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 589, 0, 353, 335, 653, 531,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 239, 240, 445, 638, 331, 0, 0,
	0, 0, 652, 633, 635, 636, 639, 643, 644, 645,
	646, 647, 649, 651, 655, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 593, 0, 0, 321,
	322, 323, 324, 641, 0, 261, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 663, 637, 662, 664, 665, 661, 666, 667, 648,
	550, 0, 597, 659, 658, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 0, 241, 0, 304, 0, 345, 283, 0, 0,
	626, 603, 604, 605, 548, 606, 600, 601, 602, 627,
	595, 623, 624, 574, 598, 607, 622, 608, 625, 628,
	629, 668, 669, 614, 670, 611, 630, 621, 620, 609,
	596, 631, 632, 581, 576, 612, 613, 599, 615, 616,
	617, 549, 577, 578, 579, 580, 0, 0, 0, 401,
	402, 403, 424, 387, 591, 442, 0, 1832, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 446, 438, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	278, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 582, 0, 0, 362, 317, 0, 0, 0, 0,
	642, 650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 572, 619, 618, 559, 569,
	0, 0, 256, 188, 436, 0, 437, 560, 0, 568,
	561, 565, 564, 562, 563, 0, 634, 0, 0, 0,
	0, 0, 0, 530, 543, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 541, 0, 0, 0, 0, 592, 0, 542, 0,
	0, 587, 566, 570, 0, 0, 0, 0, 247, 367,
	383, 257, 358, 396, 262, 365, 252, 332, 355, 0,
	0, 249, 381, 364, 314, 297, 298, 248, 0, 350,
	276, 289, 273, 330, 567, 590, 594, 272, 656, 588,
	391, 251, 0, 390, 329, 377, 382, 315, 309, 250,
	379, 313, 308, 301, 280, 657, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 393, 0, 0,
	640, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 589, 0, 353, 335, 653, 531, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 242, 369, 275,
	316, 253, 255, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 263, 352, 264, 291,
	265, 243, 267, 266, 268, 359, 269, 245, 339, 376,
	0, 287, 348, 312, 246, 311, 340, 375, 374, 254,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	239, 240, 445, 638, 331, 0, 0, 0, 0, 652,
	633, 635, 636, 639, 643, 644, 645, 646, 647, 649,
	651, 655, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 244, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 593, 0, 0, 321, 322, 323, 324,
	641, 0, 261, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 260,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 258, 385, 361, 310, 0, 0, 663, 637,
	662, 664, 665, 661, 666, 667, 648, 550, 0, 597,
	659, 658, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 0, 241,
	0, 304, 0, 345, 283, 0, 0, 626, 603, 604,
	605, 548, 606, 600, 601, 602, 627, 595, 623, 624,
	574, 598, 607, 622, 608, 625, 628, 629, 668, 669,
	614, 670, 611, 630, 621, 620, 609, 596, 631, 632,
	581, 576, 612, 613, 599, 615, 616, 617, 549, 577,
	578, 579, 580, 0, 591, 0, 401, 402, 403, 424,
	387, 0, 442, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 546, 0, 0, 0,
	278, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 582, 0, 0, 362, 317, 0, 0, 0, 0,
	642, 650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 572, 619, 618, 559, 569,
	0, 0, 256, 188, 436, 0, 437, 560, 0, 568,
	561, 565, 564, 562, 563, 0, 634, 0, 0, 0,
	0, 0, 0, 530, 543, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 541, 0, 0, 0, 0, 592, 0, 542, 0,
	0, 587, 566, 570, 0, 0, 0, 0, 247, 367,
	383, 257, 358, 396, 262, 365, 252, 332, 355, 0,
	0, 249, 381, 364, 314, 297, 298, 248, 0, 350,
	276, 289, 273, 330, 567, 590, 594, 272, 656, 588,
	391, 251, 0, 390, 329, 377, 382, 315, 309, 250,
	379, 313, 308, 301, 280, 657, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 393, 0, 0,
	640, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 589, 0, 353, 335, 653, 531, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 242, 369, 275,
	316, 253, 255, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 263, 352, 264, 291,
	265, 243, 267, 266, 268, 359, 269, 245, 339, 376,
	0, 287, 348, 312, 246, 311, 340, 375, 374, 254,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	239, 240, 445, 638, 331, 0, 0, 0, 0, 652,
	633, 635, 636, 639, 643, 644, 645, 646, 647, 649,
	651, 655, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 244, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 593, 0, 0, 321, 322, 323, 324,
	641, 0, 261, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 260,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 258, 385, 361, 310, 0, 0, 663, 637,
	662, 664, 665, 661, 666, 667, 648, 550, 0, 597,
	659, 658, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 0, 241,
	0, 304, 0, 345, 283, 0, 0, 626, 603, 604,
	605, 548, 606, 600, 601, 602, 627, 595, 623, 624,
	574, 598, 607, 622, 608, 625, 628, 629, 668, 669,
	614, 670, 611, 630, 621, 620, 609, 596, 631, 632,
	581, 576, 612, 613, 599, 615, 616, 617, 549, 577,
	578, 579, 580, 0, 591, 0, 401, 402, 403, 424,
	387, 0, 442, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 1374, 0, 446, 438, 546, 0, 0, 0,
	278, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 582, 0, 0, 362, 317, 0, 0, 0, 0,
	642, 650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 572, 619, 618, 559, 569,
	0, 0, 256, 188, 436, 0, 437, 560, 0, 568,
	561, 565, 564, 562, 563, 0, 634, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 541, 0, 0, 0, 0, 592, 0, 542, 0,
	0, 587, 566, 570, 0, 0, 0, 0, 247, 367,
	383, 257, 358, 396, 262, 365, 252, 332, 355, 0,
	0, 249, 381, 364, 314, 297, 298, 248, 0, 350,
	276, 289, 273, 330, 567, 590, 594, 272, 656, 588,
	391, 251, 0, 390, 329, 377, 382, 315, 309, 250,
	379, 313, 308, 301, 280, 657, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 393, 0, 0,
	640, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 589, 0, 353, 335, 653, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 242, 369, 275,
	316, 253, 255, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 263, 352, 264, 291,
	265, 243, 267, 266, 268, 359, 269, 245, 339, 376,
	0, 287, 348, 312, 246, 311, 340, 375, 374, 254,
	400, 1375, 1376, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	239, 240, 445, 638, 331, 0, 0, 0, 0, 652,
	633, 635, 636, 639, 643, 644, 645, 646, 647, 649,
	651, 655, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 244, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 593, 0, 0, 321, 322, 323, 324,
	641, 0, 261, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 260,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 258, 385, 361, 310, 0, 0, 663, 637,
	662, 664, 665, 661, 666, 667, 648, 550, 0, 597,
	659, 658, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 0, 241,
	0, 304, 0, 345, 283, 0, 0, 626, 603, 604,
	605, 548, 606, 600, 601, 602, 627, 595, 623, 624,
	574, 598, 607, 622, 608, 625, 628, 629, 668, 669,
	614, 670, 611, 630, 621, 620, 609, 596, 631, 632,
	581, 576, 612, 613, 599, 615, 616, 617, 549, 577,
	578, 579, 580, 0, 591, 0, 401, 402, 403, 424,
	387, 0, 442, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 546, 0, 0, 0,
	278, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 582, 0, 0, 362, 317, 0, 0, 0, 0,
	642, 650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 619, 618, 559, 569,
	0, 0, 256, 188, 436, 0, 437, 560, 0, 568,
	561, 565, 564, 562, 563, 0, 634, 0, 0, 0,
	0, 0, 0, 530, 543, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 541, 0, 0, 0, 0, 592, 0, 542, 0,
	0, 587, 566, 570, 0, 0, 0, 0, 247, 367,
	383, 257, 358, 396, 262, 365, 252, 332, 355, 0,
	0, 249, 381, 364, 314, 297, 298, 248, 0, 350,
	276, 289, 273, 330, 567, 590, 594, 272, 656, 588,
	391, 251, 0, 390, 329, 377, 382, 315, 309, 250,
	379, 313, 308, 301, 280, 657, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 393, 0, 0,
	640, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 589, 0, 353, 335, 653, 531, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 242, 369, 275,
	316, 253, 255, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 263, 352, 264, 291,
	265, 243, 267, 266, 268, 359, 269, 245, 339, 376,
	0, 287, 348, 312, 246, 311, 340, 375, 374, 254,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	239, 240, 445, 638, 331, 0, 0, 0, 0, 652,
	633, 635, 636, 639, 643, 644, 645, 646, 647, 649,
	651, 655, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 244, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 593, 0, 0, 321, 322, 323, 324,
	641, 0, 261, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 260,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 258, 385, 361, 310, 0, 0, 663, 637,
	662, 664, 665, 661, 666, 667, 648, 550, 0, 597,
	659, 658, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 0, 241,
	0, 304, 0, 345, 283, 0, 0, 626, 603, 604,
	605, 548, 606, 600, 601, 602, 627, 595, 623, 624,
	574, 598, 607, 622, 608, 625, 628, 629, 668, 669,
	614, 670, 611, 630, 621, 620, 609, 596, 631, 632,
	581, 576, 612, 613, 599, 615, 616, 617, 549, 577,
	578, 579, 580, 0, 591, 0, 401, 402, 403, 424,
	387, 0, 442, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 546, 0, 0, 0,
	278, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 582, 0, 0, 362, 317, 0, 0, 0, 0,
	642, 650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 572, 619, 618, 559, 569,
	0, 0, 256, 188, 436, 0, 437, 560, 0, 568,
	561, 565, 564, 562, 563, 0, 634, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 541, 0, 0, 0, 0, 592, 0, 542, 0,
	0, 587, 566, 570, 0, 0, 0, 0, 247, 367,
	383, 257, 358, 396, 262, 365, 252, 332, 355, 0,
	0, 249, 381, 364, 314, 297, 298, 248, 0, 350,
	276, 289, 273, 330, 567, 590, 594, 272, 656, 588,
	391, 251, 0, 390, 329, 377, 382, 315, 309, 250,
	379, 313, 308, 301, 280, 657, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 393, 0, 0,
	640, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 589, 0, 353, 335, 653, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 242, 369, 275,
	316, 253, 255, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 263, 352, 264, 291,
	265, 243, 267, 266, 268, 359, 269, 245, 339, 376,
	0, 287, 348, 312, 246, 311, 340, 375, 374, 254,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	239, 240, 445, 638, 331, 0, 0, 0, 0, 652,
	633, 635, 636, 639, 643, 644, 645, 646, 647, 649,
	651, 655, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 244, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 593, 0, 0, 321, 322, 323, 324,
	641, 0, 261, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 260,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 258, 385, 361, 310, 0, 0, 663, 637,
	662, 664, 665, 661, 666, 667, 648, 550, 0, 597,
	659, 658, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 0, 241,
	0, 304, 0, 345, 283, 0, 0, 626, 603, 604,
	605, 548, 606, 600, 601, 602, 627, 595, 623, 624,
	574, 598, 607, 622, 608, 625, 628, 629, 668, 669,
	614, 670, 611, 630, 621, 620, 609, 596, 631, 632,
	581, 576, 612, 613, 599, 615, 616, 617, 549, 577,
	578, 579, 580, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 165, 51, 157, 133, 0, 0, 0,
	0, 0, 0, 333, 446, 438, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 150, 0,
	278, 0, 159, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 114, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 162, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 367,
	383, 257, 358, 396, 262, 365, 252, 332, 355, 0,
	0, 249, 381, 364, 314, 297, 298, 248, 0, 350,
	276, 289, 273, 330, 0, 380, 408, 272, 399, 0,
	391, 251, 0, 390, 329, 377, 382, 315, 309, 250,
	379, 313, 308, 301, 280, 423, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 132, 156, 163, 0,
	100, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	180, 0, 0, 0, 366, 0, 0, 302, 155, 149,
	148, 409, 0, 353, 335, 57, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 242, 369, 275,
	316, 253, 255, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 263, 352, 264, 291,
	265, 243, 267, 266, 268, 359, 269, 245, 339, 376,
	0, 287, 348, 312, 246, 311, 340, 375, 374, 254,
	400, 406, 407, 0, 0, 412, 151, 152, 153, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	239, 240, 388, 271, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 183, 0,
	0, 433, 191, 0, 0, 0, 154, 0, 192, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 244, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 413, 0, 0, 321, 322, 323, 324,
	288, 0, 261, 416, 346, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 260,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 258, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 0, 241,
	0, 304, 134, 345, 283, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 0, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 401, 402, 403, 424,
	387, 333, 193, 39, 181, 184, 186, 185, 0, 49,
	5, 0, 0, 117, 194, 438, 0, 0, 278, 0,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1038, 0, 0, 187, 0, 0, 559, 569, 0, 0,
	256, 188, 436, 0, 437, 560, 0, 568, 561, 565,
	564, 562, 563, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	566, 0, 0, 0, 0, 0, 247, 367, 383, 257,
	358, 396, 262, 365, 252, 332, 355, 0, 0, 249,
	381, 364, 314, 297, 298, 248, 0, 350, 276, 289,
	273, 330, 567, 380, 408, 272, 399, 0, 391, 251,
	0, 390, 329, 377, 382, 315, 309, 250, 379, 313,
	308, 301, 280, 423, 293, 341, 307, 342, 294, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 347, 344, 242, 369, 275, 316, 253,
	255, 270, 277, 279, 281, 282, 325, 326, 338, 357,
	370, 371, 372, 274, 263, 352, 264, 291, 265, 243,
	267, 266, 268, 359, 269, 245, 339, 376, 0, 287,
	348, 312, 246, 311, 340, 375, 374, 254, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 285, 239, 240,
	445, 271, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 244, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 288, 0,
	261, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 284, 290, 428, 292, 260, 336, 286,
	395, 299, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 295, 296, 360, 300, 306, 349, 394, 334, 354,
	258, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 237, 0, 241, 0, 304,
	0, 345, 283, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 0, 0, 0, 165, 51, 157, 133, 0, 0,
	0, 0, 446, 438, 333, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 0, 435,
	0, 0, 0, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	367, 383, 257, 358, 396, 262, 365, 252, 332, 355,
	0, 0, 249, 381, 364, 314, 297, 298, 248, 0,
	350, 276, 289, 273, 330, 0, 380, 408, 272, 399,
	0, 391, 251, 0, 390, 329, 377, 382, 315, 309,
	250, 379, 313, 308, 301, 280, 423, 293, 341, 307,
	342, 294, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 409, 0, 353, 335, 0, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 242, 369,
	275, 316, 253, 255, 270, 277, 279, 281, 282, 325,
	326, 338, 357, 370, 371, 372, 274, 263, 352, 264,
	291, 265, 243, 267, 266, 268, 359, 269, 245, 339,
	376, 0, 287, 348, 312, 246, 311, 340, 375, 374,
	254, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	285, 239, 240, 445, 271, 331, 1432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 0,
	0, 0, 433, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 244, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 464, 466, 261, 416, 346, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 284, 290, 428, 292,
	260, 336, 286, 395, 299, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 295, 296, 360, 300, 306, 349,
	394, 334, 354, 258, 385, 361, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1428, 0, 0, 0, 0, 0, 1425, 0, 0,
	0, 1427, 1424, 1426, 1430, 1431, 373, 0, 237, 1429,
	241, 0, 304, 134, 345, 283, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 333, 0, 238,
	233, 234, 235, 236, 0, 865, 0, 401, 402, 403,
	424, 387, 0, 442, 278, 0, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 446, 438, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1435, 1436, 1437, 1438, 1439, 1440, 1433, 1434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 853, 0, 0, 0, 0,
	0, 0, 247, 367, 383, 257, 358, 396, 262, 365,
	252, 332, 355, 0, 0, 1918, 1920, 1921, 1922, 1923,
	1924, 1925, 0, 1930, 1926, 1927, 1928, 1929, 0, 1913,
	1914, 1915, 1916, 851, 1899, 1919, 0, 1900, 329, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1917, 341, 307, 342, 294, 319, 318, 320, 876, 878,
	880, 882, 885, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 1912, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 242, 369, 275, 316, 253, 255, 270, 277, 279,
	281, 282, 325, 326, 338, 357, 370, 371, 372, 274,
	263, 352, 264, 291, 265, 243, 267, 266, 268, 359,
	269, 245, 339, 376, 0, 287, 348, 312, 246, 311,
	340, 375, 374, 254, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 285, 239, 240, 445, 271, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 244, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 288, 0, 261, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 284,
	290, 428, 292, 260, 336, 286, 395, 299, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 295, 296, 360,
	300, 306, 349, 394, 334, 354, 258, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 865, 0, 0, 373,
	0, 237, 0, 241, 875, 304, 0, 345, 283, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	333, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 278, 0, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 853, 0, 0, 256,
	188, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 1993, 1996, 873, 877, 879, 881,
	883, 884, 886, 0, 891, 887, 888, 889, 890, 0,
	868, 869, 870, 871, 851, 852, 874, 0, 854, 0,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	866, 872, 0, 0, 0, 0, 0, 0, 0, 876,
	878, 880, 882, 885, 0, 247, 367, 383, 257, 358,
	396, 262, 365, 252, 332, 355, 0, 0, 249, 381,
	364, 314, 297, 298, 248, 0, 350, 276, 289, 273,
	330, 0, 380, 408, 272, 399, 867, 391, 251, 0,
	390, 329, 377, 382, 315, 309, 250, 379, 313, 308,
	301, 280, 423, 293, 341, 307, 342, 294, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1997, 393, 0, 0, 0, 1992, 0,
	1991, 366, 1989, 1994, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 242, 369, 275, 316, 253, 255,
	270, 277, 279, 281, 282, 325, 326, 338, 357, 370,
	371, 372, 274, 263, 352, 264, 291, 265, 243, 267,
	266, 268, 359, 269, 245, 339, 376, 1995, 287, 348,
	312, 246, 311, 340, 375, 374, 254, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 285, 239, 240, 445,
	271, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	244, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 288, 0, 261,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 284, 290, 428, 292, 260, 336, 286, 395,
	299, 0, 421, 0, 422, 875, 0, 0, 0, 328,
	295, 296, 360, 300, 306, 349, 394, 334, 354, 258,
	385, 361, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 237, 0, 241, 0, 304, 0,
	345, 283, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	333, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	0, 0, 1717, 0, 0, 0, 0, 278, 0, 0,
	303, 446, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1718, 0, 0, 0, 256,
	188, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 971, 972, 973, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 367, 383, 257, 358,
	396, 262, 365, 252, 332, 355, 0, 0, 249, 381,
	364, 314, 297, 298, 248, 0, 350, 276, 289, 273,
	330, 0, 380, 408, 272, 399, 0, 391, 251, 0,
	390, 329, 377, 382, 315, 309, 250, 379, 313, 308,
	301, 280, 423, 293, 341, 307, 342, 294, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 366, 0, 0, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 242, 369, 275, 316, 253, 255,
	270, 277, 279, 281, 282, 325, 326, 338, 357, 370,
	371, 372, 274, 263, 352, 264, 291, 265, 243, 267,
	266, 268, 359, 269, 245, 339, 376, 0, 287, 348,
	312, 246, 311, 340, 375, 374, 254, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 285, 239, 240, 445,
	271, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	244, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 288, 0, 261,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 284, 290, 428, 292, 260, 336, 286, 395,
	299, 0, 421, 0, 422, 0, 0, 0, 0, 328,
	295, 296, 360, 300, 306, 349, 394, 334, 354, 258,
	385, 361, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 237, 0, 241, 0, 304, 0,
	345, 283, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 333, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	278, 787, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 446, 438, 0, 0, 0, 434, 0, 435, 0,
	0, 0, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 794, 795, 0, 0,
	0, 0, 256, 188, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 367,
	782, 257, 358, 396, 262, 365, 252, 332, 355, 0,
	0, 249, 381, 364, 314, 297, 298, 248, 0, 350,
	276, 289, 273, 330, 0, 380, 408, 272, 399, 772,
	391, 251, 771, 390, 329, 377, 382, 315, 309, 250,
	379, 313, 308, 301, 280, 423, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 409, 0, 353, 335, 0, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 785, 344, 242, 369, 275,
	316, 253, 255, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 263, 352, 264, 291,
	265, 243, 267, 266, 268, 359, 269, 245, 339, 376,
	0, 287, 348, 312, 246, 311, 340, 375, 374, 254,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	239, 240, 445, 271, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 0, 0,
	0, 433, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 244, 417, 0, 0, 0, 0, 0,
	0, 786, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 789, 0, 0, 321, 322, 323, 324,
	288, 0, 261, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 260,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 796, 783, 792, 784, 300, 306, 349, 394,
	334, 354, 258, 385, 361, 793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 0, 241,
	0, 304, 0, 345, 283, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 333, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2011,
	393, 0, 0, 0, 2016, 2014, 0, 366, 0, 2015,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 239, 240, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 261, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 0, 241, 0, 304, 0, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 0,
	0, 238, 233, 234, 235, 236, 165, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 0, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 114, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 1761, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 239, 240, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 261, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 0, 241, 0, 304, 134, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 0,
	0, 238, 233, 234, 235, 236, 165, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 0, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 114, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 1752, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 239, 240, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 261, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 0, 241, 0, 304, 134, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 0,
	0, 238, 233, 234, 235, 236, 165, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 0, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 435, 0, 0, 114, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 239, 240, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 261, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 0, 241, 0, 304, 134, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 333,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 278, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 794, 795, 0, 0, 0, 0, 256, 188,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 367, 383, 257, 358, 396,
	262, 365, 252, 332, 355, 0, 0, 249, 381, 364,
	314, 297, 298, 248, 0, 350, 276, 289, 273, 330,
	0, 380, 408, 272, 399, 772, 391, 251, 771, 390,
	329, 377, 382, 315, 309, 250, 379, 313, 308, 301,
	280, 423, 293, 341, 307, 342, 294, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 242, 369, 275, 316, 253, 255, 270,
	277, 279, 281, 282, 325, 326, 338, 357, 370, 371,
	372, 274, 263, 352, 264, 291, 265, 243, 267, 266,
	268, 359, 269, 245, 339, 376, 0, 287, 348, 312,
	246, 311, 340, 375, 374, 254, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 285, 239, 240, 445, 271,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 244,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 288, 0, 261, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	411, 284, 290, 428, 292, 260, 336, 286, 395, 299,
	0, 421, 0, 422, 0, 0, 0, 0, 796, 1675,
	792, 1676, 300, 306, 349, 394, 334, 354, 258, 385,
	361, 793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 237, 0, 241, 0, 304, 0, 345,
	283, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 333, 0, 238, 233, 234, 235, 236, 0,
	0, 2411, 401, 402, 403, 424, 387, 0, 442, 278,
	0, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 434, 0, 435, 0, 0,
	0, 0, 0, 362, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 436, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 367, 383,
	257, 358, 396, 262, 365, 252, 332, 355, 0, 0,
	249, 381, 364, 314, 297, 298, 248, 0, 350, 276,
	289, 273, 330, 0, 380, 408, 272, 399, 0, 391,
	251, 0, 390, 329, 377, 382, 315, 309, 250, 379,
	313, 308, 301, 280, 423, 293, 341, 307, 342, 294,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 2414, 0, 0,
	2413, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 242, 369, 275, 316,
	253, 255, 270, 277, 279, 281, 282, 325, 326, 338,
	357, 370, 371, 372, 274, 263, 352, 264, 291, 265,
	243, 267, 266, 268, 359, 269, 245, 339, 376, 0,
	287, 348, 312, 246, 311, 340, 375, 374, 254, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 285, 239,
	240, 445, 271, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 244, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 288,
	0, 261, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 411, 284, 290, 428, 292, 260, 336,
	286, 395, 299, 0, 421, 0, 422, 0, 0, 0,
	0, 328, 295, 296, 360, 300, 306, 349, 394, 334,
	354, 258, 385, 361, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 237, 0, 241, 0,
	304, 0, 345, 283, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 333, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 401, 402, 403, 424, 387,
	0, 442, 278, 1221, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 446, 438, 0, 0, 0, 434, 0,
	435, 0, 0, 0, 0, 0, 362, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	1219, 0, 0, 0, 256, 188, 436, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 0, 0, 0, 0, 0, 0,
	247, 367, 383, 257, 358, 396, 262, 365, 252, 332,
	355, 0, 0, 249, 381, 364, 314, 297, 298, 248,
	0, 350, 276, 289, 273, 330, 0, 380, 408, 272,
	399, 0, 391, 251, 0, 390, 329, 377, 382, 315,
	309, 250, 379, 313, 308, 301, 280, 423, 293, 341,
	307, 342, 294, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 409, 0, 353, 335, 0, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 242,
	369, 275, 316, 253, 255, 270, 277, 279, 281, 282,
	325, 326, 338, 357, 370, 371, 372, 274, 263, 352,
	264, 291, 265, 243, 267, 266, 268, 359, 269, 245,
	339, 376, 0, 287, 348, 312, 246, 311, 340, 375,
	374, 254, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 285, 239, 240, 445, 271, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 404,
	0, 0, 0, 433, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 244, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 413, 0, 0, 321, 322,
	323, 324, 288, 0, 261, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 284, 290, 428,
	292, 260, 336, 286, 395, 299, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 295, 296, 360, 300, 306,
	349, 394, 334, 354, 258, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 237,
	0, 241, 0, 304, 0, 345, 283, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 333, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 401, 402,
	403, 424, 387, 0, 442, 278, 1215, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 0, 0,
	0, 434, 0, 435, 0, 0, 0, 0, 0, 362,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 1219, 0, 0, 0, 256, 188, 436,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1217, 0, 0, 0,
	0, 0, 0, 247, 367, 383, 257, 358, 396, 262,
	365, 252, 332, 355, 0, 0, 249, 381, 364, 314,
	297, 298, 248, 0, 350, 276, 289, 273, 330, 0,
	380, 408, 272, 399, 0, 391, 251, 0, 390, 329,
	377, 382, 315, 309, 250, 379, 313, 308, 301, 280,
	423, 293, 341, 307, 342, 294, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 242, 369, 275, 316, 253, 255, 270, 277,
	279, 281, 282, 325, 326, 338, 357, 370, 371, 372,
	274, 263, 352, 264, 291, 265, 243, 267, 266, 268,
	359, 269, 245, 339, 376, 0, 287, 348, 312, 246,
	311, 340, 375, 374, 254, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 285, 239, 240, 445, 271, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 244, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 288, 0, 261, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	284, 290, 428, 292, 260, 336, 286, 395, 299, 0,
	421, 0, 422, 0, 0, 0, 0, 328, 295, 296,
	360, 300, 306, 349, 394, 334, 354, 258, 385, 361,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 237, 0, 241, 0, 304, 0, 345, 283,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 333, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 401, 402, 403, 424, 387, 0, 442, 278, 0,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 446,
	438, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3189, 0, 187, 619, 0, 0, 0, 0, 0,
	256, 188, 436, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 367, 383, 257,
	358, 396, 262, 365, 252, 332, 355, 0, 0, 249,
	381, 364, 314, 297, 298, 248, 0, 350, 276, 289,
	273, 330, 0, 380, 408, 272, 399, 0, 391, 251,
	0, 390, 329, 377, 382, 315, 309, 250, 379, 313,
	308, 301, 280, 423, 293, 341, 307, 342, 294, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 347, 344, 242, 369, 275, 316, 253,
	255, 270, 277, 279, 281, 282, 325, 326, 338, 357,
	370, 371, 372, 274, 263, 352, 264, 291, 265, 243,
	267, 266, 268, 359, 269, 245, 339, 376, 0, 287,
	348, 312, 246, 311, 340, 375, 374, 254, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 285, 239, 240,
	445, 271, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 244, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 288, 0,
	261, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 284, 290, 428, 292, 260, 336, 286,
	395, 299, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 295, 296, 360, 300, 306, 349, 394, 334, 354,
	258, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 237, 0, 241, 0, 304,
	0, 345, 283, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 333, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 278, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 446, 438, 0, 0, 0, 434, 0, 435,
	0, 0, 0, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 1219,
	0, 0, 0, 256, 188, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1217, 0, 0, 0, 0, 0, 0, 247,
	367, 383, 257, 358, 396, 262, 365, 252, 332, 355,
	0, 0, 249, 381, 364, 314, 297, 298, 248, 0,
	350, 276, 289, 273, 330, 0, 380, 408, 272, 399,
	0, 391, 251, 0, 390, 329, 377, 382, 315, 309,
	250, 379, 313, 308, 301, 280, 423, 293, 341, 307,
	342, 294, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 409, 0, 353, 335, 0, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 242, 369,
	275, 316, 253, 255, 270, 277, 279, 281, 282, 325,
	326, 338, 357, 370, 371, 372, 274, 263, 352, 264,
	291, 265, 243, 267, 266, 268, 359, 269, 245, 339,
	376, 0, 287, 348, 312, 246, 311, 340, 375, 374,
	254, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	285, 239, 240, 445, 271, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 0,
	0, 0, 433, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 244, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 288, 0, 261, 416, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 284, 290, 428, 292,
	260, 336, 286, 395, 299, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 295, 296, 360, 300, 306, 349,
	394, 334, 354, 258, 385, 361, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 237, 0,
	241, 0, 304, 0, 345, 283, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 333, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 401, 402, 403,
	424, 387, 0, 442, 278, 0, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 446, 438, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 1219, 0, 0, 0, 256, 188, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2918, 0, 0, 0, 0,
	0, 0, 247, 367, 383, 257, 358, 396, 262, 365,
	252, 332, 355, 0, 0, 249, 381, 364, 314, 297,
	298, 248, 0, 350, 276, 289, 273, 330, 0, 380,
	408, 272, 399, 0, 391, 251, 0, 390, 329, 377,
	382, 315, 309, 250, 379, 313, 308, 301, 280, 423,
	293, 341, 307, 342, 294, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 409, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 242, 369, 275, 316, 253, 255, 270, 277, 279,
	281, 282, 325, 326, 338, 357, 370, 371, 372, 274,
	263, 352, 264, 291, 265, 243, 267, 266, 268, 359,
	269, 245, 339, 376, 0, 287, 348, 312, 246, 311,
	340, 375, 374, 254, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 285, 239, 240, 445, 271, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 244, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 288, 0, 261, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 284,
	290, 428, 292, 260, 336, 286, 395, 299, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 295, 296, 360,
	300, 306, 349, 394, 334, 354, 258, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 237, 0, 241, 0, 304, 0, 345, 283, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 0, 238, 233, 234, 235, 236, 333, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 0, 0, 2081,
	0, 0, 0, 0, 278, 0, 0, 303, 446, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 2083, 0, 0, 0, 256, 188, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 367, 383, 257, 358, 396, 262, 365,
	252, 332, 355, 0, 0, 249, 381, 364, 314, 297,
	298, 248, 0, 350, 276, 289, 273, 330, 0, 380,
	408, 272, 399, 0, 391, 251, 0, 390, 329, 377,
	382, 315, 309, 250, 379, 313, 308, 301, 280, 423,
	293, 341, 307, 342, 294, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 409, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 242, 369, 275, 316, 253, 255, 270, 277, 279,
	281, 282, 325, 326, 338, 357, 370, 371, 372, 274,
	263, 352, 264, 291, 265, 243, 267, 266, 268, 359,
	269, 245, 339, 376, 0, 287, 348, 312, 246, 311,
	340, 375, 374, 254, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 285, 239, 240, 445, 271, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 244, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 288, 0, 261, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 284,
	290, 428, 292, 260, 336, 286, 395, 299, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 295, 296, 360,
	300, 306, 349, 394, 334, 354, 258, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 237, 0, 241, 0, 304, 0, 345, 283, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	333, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 278, 2102, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1219, 0, 0, 0, 256,
	188, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 367, 383, 257, 358,
	396, 262, 365, 252, 332, 355, 0, 0, 249, 381,
	364, 314, 297, 298, 248, 0, 350, 276, 289, 273,
	330, 0, 380, 408, 272, 399, 0, 391, 251, 0,
	390, 329, 377, 382, 315, 309, 250, 379, 313, 308,
	301, 280, 423, 293, 341, 307, 342, 294, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 366, 0, 0, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 242, 369, 275, 316, 253, 255,
	270, 277, 279, 281, 282, 325, 326, 338, 357, 370,
	371, 372, 274, 263, 352, 264, 291, 265, 243, 267,
	266, 268, 359, 269, 245, 339, 376, 0, 287, 348,
	312, 246, 311, 340, 375, 374, 254, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 285, 239, 240, 445,
	271, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	244, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 288, 0, 261,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 284, 290, 428, 292, 260, 336, 286, 395,
	299, 0, 421, 0, 422, 0, 0, 0, 0, 328,
	295, 296, 360, 300, 306, 349, 394, 334, 354, 258,
	385, 361, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 237, 0, 241, 0, 304, 0,
	345, 283, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 333, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	278, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 446, 438, 0, 0, 0, 434, 0, 435, 0,
	0, 0, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3278, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 367,
	383, 257, 358, 396, 262, 365, 252, 332, 355, 0,
	0, 249, 381, 364, 314, 297, 298, 248, 0, 350,
	276, 289, 273, 330, 0, 380, 408, 272, 399, 0,
	391, 251, 0, 390, 329, 377, 382, 315, 309, 250,
	379, 313, 308, 301, 280, 423, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 409, 0, 353, 335, 0, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 242, 369, 275,
	316, 253, 255, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 263, 352, 264, 291,
	265, 243, 267, 266, 268, 359, 269, 245, 339, 376,
	0, 287, 348, 312, 246, 311, 340, 375, 374, 254,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	239, 240, 445, 271, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 0, 0,
	0, 433, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 244, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 413, 0, 0, 321, 322, 323, 324,
	288, 0, 261, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 260,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 258, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 0, 241,
	0, 304, 0, 345, 283, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 333, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 619,
	0, 0, 0, 0, 0, 256, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 239, 240, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 261, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 0, 241, 0, 304, 0, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 333,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 278, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3204, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 367, 383, 257, 358, 396,
	262, 365, 252, 332, 355, 0, 0, 249, 381, 364,
	314, 297, 298, 248, 0, 350, 276, 289, 273, 330,
	0, 380, 408, 272, 399, 0, 391, 251, 0, 390,
	329, 377, 382, 315, 309, 250, 379, 313, 308, 301,
	280, 423, 293, 341, 307, 342, 294, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 242, 369, 275, 316, 253, 255, 270,
	277, 279, 281, 282, 325, 326, 338, 357, 370, 371,
	372, 274, 263, 352, 264, 291, 265, 243, 267, 266,
	268, 359, 269, 245, 339, 376, 0, 287, 348, 312,
	246, 311, 340, 375, 374, 254, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 285, 239, 240, 445, 271,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 244,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 288, 0, 261, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	411, 284, 290, 428, 292, 260, 336, 286, 395, 299,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 295,
	296, 360, 300, 306, 349, 394, 334, 354, 258, 385,
	361, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 237, 0, 241, 0, 304, 0, 345,
	283, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 333, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 278,
	0, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 434, 0, 435, 0, 0,
	0, 0, 0, 362, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 436, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 367, 383,
	257, 358, 396, 262, 365, 252, 332, 355, 0, 0,
	249, 381, 364, 314, 297, 298, 248, 0, 350, 276,
	289, 273, 330, 0, 380, 408, 272, 399, 0, 391,
	251, 0, 390, 329, 377, 382, 315, 309, 250, 379,
	313, 308, 301, 280, 423, 293, 341, 307, 342, 294,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	3133, 0, 0, 366, 0, 0, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 242, 369, 275, 316,
	253, 255, 270, 277, 279, 281, 282, 325, 326, 338,
	357, 370, 371, 372, 274, 263, 352, 264, 291, 265,
	243, 267, 266, 268, 359, 269, 245, 339, 376, 0,
	287, 348, 312, 246, 311, 340, 375, 374, 254, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 285, 239,
	240, 445, 271, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 244, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 288,
	0, 261, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 411, 284, 290, 428, 292, 260, 336,
	286, 395, 299, 0, 421, 0, 422, 0, 0, 0,
	0, 328, 295, 296, 360, 300, 306, 349, 394, 334,
	354, 258, 385, 361, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 237, 0, 241, 0,
	304, 0, 345, 283, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 333, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 401, 402, 403, 424, 387,
	0, 442, 278, 0, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 446, 438, 0, 0, 0, 434, 0,
	435, 0, 0, 0, 0, 0, 362, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2914, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 436, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 367, 383, 257, 358, 396, 262, 365, 252, 332,
	355, 0, 0, 249, 381, 364, 314, 297, 298, 248,
	0, 350, 276, 289, 273, 330, 0, 380, 408, 272,
	399, 0, 391, 251, 0, 390, 329, 377, 382, 315,
	309, 250, 379, 313, 308, 301, 280, 423, 293, 341,
	307, 342, 294, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 409, 0, 353, 335, 0, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 242,
	369, 275, 316, 253, 255, 270, 277, 279, 281, 282,
	325, 326, 338, 357, 370, 371, 372, 274, 263, 352,
	264, 291, 265, 243, 267, 266, 268, 359, 269, 245,
	339, 376, 0, 287, 348, 312, 246, 311, 340, 375,
	374, 254, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 285, 239, 240, 445, 271, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 404,
	0, 0, 0, 433, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 244, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 413, 0, 0, 321, 322,
	323, 324, 288, 0, 261, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 284, 290, 428,
	292, 260, 336, 286, 395, 299, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 295, 296, 360, 300, 306,
	349, 394, 334, 354, 258, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 237,
	0, 241, 0, 304, 0, 345, 283, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 333, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 401, 402,
	403, 424, 387, 0, 442, 278, 0, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 0, 0,
	0, 434, 0, 435, 0, 0, 0, 0, 0, 362,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 2750, 0, 0, 0, 256, 188, 436,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 367, 383, 257, 358, 396, 262,
	365, 252, 332, 355, 0, 0, 249, 381, 364, 314,
	297, 298, 248, 0, 350, 276, 289, 273, 330, 0,
	380, 408, 272, 399, 0, 391, 251, 0, 390, 329,
	377, 382, 315, 309, 250, 379, 313, 308, 301, 280,
	423, 293, 341, 307, 342, 294, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 242, 369, 275, 316, 253, 255, 270, 277,
	279, 281, 282, 325, 326, 338, 357, 370, 371, 372,
	274, 263, 352, 264, 291, 265, 243, 267, 266, 268,
	359, 269, 245, 339, 376, 0, 287, 348, 312, 246,
	311, 340, 375, 374, 254, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 285, 239, 240, 445, 271, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 244, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 288, 0, 261, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	284, 290, 428, 292, 260, 336, 286, 395, 299, 0,
	421, 0, 422, 0, 0, 0, 0, 328, 295, 296,
	360, 300, 306, 349, 394, 334, 354, 258, 385, 361,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 237, 0, 241, 0, 304, 0, 345, 283,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 333, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 401, 402, 403, 424, 387, 0, 442, 278, 0,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 446,
	438, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 436, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 367, 383, 257,
	358, 396, 262, 365, 252, 332, 355, 0, 0, 249,
	381, 364, 314, 297, 298, 248, 0, 350, 276, 289,
	273, 330, 0, 380, 408, 272, 399, 0, 391, 251,
	0, 390, 329, 377, 382, 315, 309, 250, 379, 313,
	308, 301, 280, 423, 293, 341, 307, 342, 294, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 2982,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 347, 344, 242, 369, 275, 316, 253,
	255, 270, 277, 279, 281, 282, 325, 326, 338, 357,
	370, 371, 372, 274, 263, 352, 264, 291, 265, 243,
	267, 266, 268, 359, 269, 245, 339, 376, 0, 287,
	348, 312, 246, 311, 340, 375, 374, 254, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 285, 239, 240,
	445, 271, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 244, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 288, 0,
	261, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 284, 290, 428, 292, 260, 336, 286,
	395, 299, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 295, 296, 360, 300, 306, 349, 394, 334, 354,
	258, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 237, 0, 241, 0, 304,
	0, 345, 283, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 333, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 278, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 446, 438, 0, 0, 0, 434, 0, 435,
	0, 0, 0, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	367, 383, 257, 358, 396, 262, 365, 252, 332, 355,
	0, 0, 249, 381, 364, 314, 297, 298, 248, 0,
	350, 276, 289, 273, 330, 0, 380, 408, 272, 399,
	0, 391, 251, 0, 390, 329, 377, 382, 315, 309,
	250, 379, 313, 308, 301, 280, 423, 293, 341, 307,
	342, 294, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 409, 0, 353, 335, 0, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 242, 369,
	275, 316, 253, 255, 270, 277, 279, 281, 282, 325,
	326, 338, 357, 370, 371, 372, 274, 263, 352, 264,
	291, 265, 243, 267, 266, 268, 359, 269, 245, 339,
	376, 0, 287, 348, 312, 246, 311, 340, 375, 374,
	254, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	285, 239, 240, 445, 271, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 0,
	0, 0, 433, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 244, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 288, 0, 261, 416, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 284, 290, 428, 292,
	260, 336, 286, 395, 299, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 295, 296, 360, 300, 306, 349,
	394, 334, 354, 258, 385, 361, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 237, 0,
	241, 0, 304, 0, 345, 283, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 333, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 401, 402, 403,
	424, 387, 0, 442, 278, 0, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 446, 438, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1656, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 367, 383, 257, 358, 396, 262, 365,
	252, 332, 355, 0, 0, 249, 381, 364, 314, 297,
	298, 248, 0, 350, 276, 289, 273, 330, 0, 380,
	408, 272, 399, 0, 391, 251, 0, 390, 329, 377,
	382, 315, 309, 250, 379, 313, 308, 301, 280, 423,
	293, 341, 307, 342, 294, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 409, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 347,
	344, 242, 369, 275, 316, 253, 255, 270, 277, 279,
	281, 282, 325, 326, 338, 357, 370, 371, 372, 274,
	263, 352, 264, 291, 265, 243, 267, 266, 268, 359,
	269, 245, 339, 376, 0, 287, 348, 312, 246, 311,
	340, 375, 374, 254, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 285, 239, 240, 445, 271, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 244, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 288, 0, 261, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 284,
	290, 428, 292, 260, 336, 286, 395, 299, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 295, 296, 360,
	300, 306, 349, 394, 334, 354, 258, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 237, 0, 241, 0, 304, 0, 345, 283, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	333, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 278, 0, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 367, 383, 257, 358,
	396, 262, 365, 252, 332, 355, 0, 0, 249, 381,
	364, 314, 297, 298, 248, 0, 350, 276, 289, 273,
	330, 0, 380, 408, 272, 399, 0, 391, 251, 0,
	390, 329, 377, 382, 315, 309, 250, 379, 313, 308,
	301, 280, 423, 293, 341, 307, 342, 294, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 366, 0, 0, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 242, 369, 275, 316, 253, 255,
	270, 277, 279, 281, 282, 325, 326, 338, 357, 370,
	371, 372, 274, 263, 352, 264, 291, 265, 243, 267,
	266, 268, 359, 269, 245, 339, 376, 0, 287, 348,
	312, 246, 311, 340, 375, 374, 254, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 285, 239, 240, 445,
	271, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	244, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 288, 0, 261,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 284, 290, 428, 292, 260, 336, 286, 395,
	299, 0, 421, 0, 422, 0, 0, 0, 0, 328,
	295, 296, 360, 300, 306, 349, 394, 334, 354, 258,
	385, 361, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 237, 0, 241, 0, 304, 0,
	345, 283, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 333, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	278, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 446, 438, 0, 0, 0, 434, 0, 435, 0,
	0, 0, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 2581, 0,
	0, 0, 256, 188, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 367,
	383, 257, 358, 396, 262, 365, 252, 332, 355, 0,
	0, 249, 381, 364, 314, 297, 298, 248, 0, 350,
	276, 289, 273, 330, 0, 380, 408, 272, 399, 0,
	391, 251, 0, 390, 329, 377, 382, 315, 309, 250,
	379, 313, 308, 301, 280, 423, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 409, 0, 353, 335, 0, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 242, 369, 275,
	316, 253, 255, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 263, 352, 264, 291,
	265, 243, 267, 266, 268, 359, 269, 245, 339, 376,
	0, 287, 348, 312, 246, 311, 340, 375, 374, 254,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	239, 240, 445, 271, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 0, 0,
	0, 433, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 244, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 413, 0, 0, 321, 322, 323, 324,
	288, 0, 261, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 260,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 258, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 0, 241,
	0, 304, 0, 345, 283, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 333, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 239, 240, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 261, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 0, 241, 0, 304, 0, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 333,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 278, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 1219, 0, 0, 0, 256, 188,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 367, 383, 257, 358, 396,
	262, 365, 252, 332, 355, 0, 0, 249, 381, 364,
	314, 297, 298, 248, 0, 350, 276, 289, 273, 330,
	0, 380, 408, 272, 399, 0, 391, 251, 0, 390,
	329, 377, 382, 315, 309, 250, 379, 313, 308, 301,
	280, 423, 293, 341, 307, 342, 294, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 242, 369, 275, 316, 253, 255, 270,
	277, 279, 281, 282, 325, 326, 338, 357, 370, 371,
	372, 274, 263, 352, 264, 291, 265, 243, 267, 266,
	268, 359, 269, 245, 339, 376, 0, 287, 348, 312,
	246, 311, 340, 375, 374, 254, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 285, 239, 240, 445, 271,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 244,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 288, 0, 261, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	411, 284, 290, 428, 292, 260, 336, 286, 395, 299,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 295,
	296, 360, 300, 306, 349, 394, 334, 354, 258, 385,
	361, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 237, 0, 241, 0, 304, 0, 345,
	283, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 333, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 278,
	0, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 434, 0, 435, 0, 0,
	0, 0, 0, 362, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 2083, 0, 0,
	0, 256, 188, 436, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 367, 383,
	257, 358, 396, 262, 365, 252, 332, 355, 0, 0,
	249, 381, 364, 314, 297, 298, 248, 0, 350, 276,
	289, 273, 330, 0, 380, 408, 272, 399, 0, 391,
	251, 0, 390, 329, 377, 382, 315, 309, 250, 379,
	313, 308, 301, 280, 423, 293, 341, 307, 342, 294,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 242, 369, 275, 316,
	253, 255, 270, 277, 279, 281, 282, 325, 326, 338,
	357, 370, 371, 372, 274, 263, 352, 264, 291, 265,
	243, 267, 266, 268, 359, 269, 245, 339, 376, 0,
	287, 348, 312, 246, 311, 340, 375, 374, 254, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 285, 239,
	240, 445, 271, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 244, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 288,
	0, 261, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 411, 284, 290, 428, 292, 260, 336,
	286, 395, 299, 0, 421, 0, 422, 0, 0, 0,
	0, 328, 295, 296, 360, 300, 306, 349, 394, 334,
	354, 258, 385, 361, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 237, 0, 241, 0,
	304, 0, 345, 283, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 333, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 401, 402, 403, 424, 387,
	0, 442, 278, 0, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 446, 438, 0, 0, 0, 434, 0,
	435, 0, 0, 0, 0, 0, 362, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 436, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 367, 383, 257, 358, 396, 262, 365, 252, 332,
	355, 0, 0, 249, 381, 364, 314, 297, 298, 248,
	0, 350, 276, 289, 273, 330, 0, 380, 408, 272,
	399, 0, 391, 251, 0, 390, 329, 377, 382, 315,
	309, 250, 379, 313, 308, 301, 280, 423, 293, 341,
	307, 342, 294, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 409, 0, 353, 335, 0, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 242,
	369, 275, 316, 253, 255, 270, 277, 279, 281, 282,
	325, 326, 338, 357, 370, 371, 372, 274, 263, 352,
	264, 291, 265, 243, 267, 266, 268, 359, 269, 245,
	339, 376, 0, 287, 348, 312, 246, 311, 340, 375,
	374, 254, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 285, 239, 240, 445, 271, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 404,
	0, 0, 0, 433, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 244, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 413, 0, 0, 321, 322,
	323, 324, 288, 0, 261, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 284, 290, 428,
	292, 260, 336, 286, 395, 299, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 295, 296, 360, 300, 306,
	349, 394, 334, 354, 258, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 237,
	0, 241, 0, 304, 0, 345, 283, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 333, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 401, 402,
	403, 424, 387, 0, 442, 278, 0, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 0, 0,
	0, 434, 0, 435, 0, 0, 0, 0, 0, 362,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 436,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2120, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 367, 383, 257, 358, 396, 262,
	365, 252, 332, 355, 0, 0, 249, 381, 364, 314,
	297, 298, 248, 0, 350, 276, 289, 273, 330, 0,
	380, 408, 272, 399, 0, 391, 251, 0, 390, 329,
	377, 382, 315, 309, 250, 379, 313, 308, 301, 280,
	423, 293, 341, 307, 342, 294, 319, 318, 320, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 302, 0, 0, 0, 409, 0, 353, 335,
	0, 0, 0, 351, 305, 378, 343, 384, 368, 392,
	347, 344, 242, 369, 275, 316, 253, 255, 270, 277,
	279, 281, 282, 325, 326, 338, 357, 370, 371, 372,
	274, 263, 352, 264, 291, 265, 243, 267, 266, 268,
	359, 269, 245, 339, 376, 0, 287, 348, 312, 246,
	311, 340, 375, 374, 254, 400, 406, 407, 0, 0,
	412, 0, 0, 0, 420, 425, 426, 427, 429, 430,
	431, 432, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 405, 285, 239, 240, 445, 271, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 404, 0, 0, 0, 433, 444, 0, 0,
	0, 0, 0, 443, 337, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	386, 398, 415, 418, 0, 0, 0, 0, 244, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 413, 0,
	0, 321, 322, 323, 324, 288, 0, 261, 416, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 411,
	284, 290, 428, 292, 260, 336, 286, 395, 299, 0,
	421, 0, 422, 0, 0, 0, 0, 328, 295, 296,
	360, 300, 306, 349, 394, 334, 354, 258, 385, 361,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 237, 0, 241, 0, 304, 0, 345, 283,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 333, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 401, 402, 403, 424, 387, 0, 442, 278, 0,
	0, 303, 0, 0, 0, 0, 0, 0, 0, 446,
	438, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 2118, 0, 0, 0,
	256, 188, 436, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 367, 383, 257,
	358, 396, 262, 365, 252, 332, 355, 0, 0, 249,
	381, 364, 314, 297, 298, 248, 0, 350, 276, 289,
	273, 330, 0, 380, 408, 272, 399, 0, 391, 251,
	0, 390, 329, 377, 382, 315, 309, 250, 379, 313,
	308, 301, 280, 423, 293, 341, 307, 342, 294, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 347, 344, 242, 369, 275, 316, 253,
	255, 270, 277, 279, 281, 282, 325, 326, 338, 357,
	370, 371, 372, 274, 263, 352, 264, 291, 265, 243,
	267, 266, 268, 359, 269, 245, 339, 376, 0, 287,
	348, 312, 246, 311, 340, 375, 374, 254, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 285, 239, 240,
	445, 271, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 244, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 288, 0,
	261, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 284, 290, 428, 292, 260, 336, 286,
	395, 299, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 295, 296, 360, 300, 306, 349, 394, 334, 354,
	258, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 237, 0, 241, 0, 304,
	0, 345, 283, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 1955, 238, 233, 234, 235,
	236, 333, 0, 0, 401, 402, 403, 424, 387, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 303, 446, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 0, 435, 0, 0, 0,
	0, 0, 362, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 436, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 367, 383, 257,
	358, 396, 262, 365, 252, 332, 355, 0, 0, 249,
	381, 364, 314, 297, 298, 248, 0, 350, 276, 289,
	273, 330, 0, 380, 408, 272, 399, 0, 391, 251,
	0, 390, 329, 377, 382, 315, 309, 250, 379, 313,
	308, 301, 280, 423, 293, 341, 307, 342, 294, 319,
	318, 320, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 366, 0, 0, 302, 0, 0, 0, 409,
	0, 353, 335, 0, 0, 0, 351, 305, 378, 343,
	384, 368, 392, 347, 344, 242, 369, 275, 316, 253,
	255, 270, 277, 279, 281, 282, 325, 326, 338, 357,
	370, 371, 372, 274, 263, 352, 264, 291, 265, 243,
	267, 266, 268, 359, 269, 245, 339, 376, 0, 287,
	348, 312, 246, 311, 340, 375, 374, 254, 400, 406,
	407, 0, 0, 412, 0, 0, 0, 420, 425, 426,
	427, 429, 430, 431, 432, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 405, 285, 239, 240,
	445, 271, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 404, 0, 0, 0, 433,
	444, 0, 0, 0, 0, 0, 443, 337, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 386, 398, 415, 418, 0, 0, 0,
	0, 244, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 413, 0, 0, 321, 322, 323, 324, 288, 0,
	261, 416, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 410, 411, 284, 290, 428, 292, 260, 336, 286,
	395, 299, 0, 421, 0, 422, 0, 0, 0, 0,
	328, 295, 296, 360, 300, 306, 349, 394, 334, 354,
	258, 385, 361, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 237, 0, 241, 0, 304,
	0, 345, 283, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 333, 0, 238, 233, 234, 235,
	236, 0, 1643, 0, 401, 402, 403, 424, 387, 0,
	442, 278, 0, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 446, 438, 0, 0, 0, 434, 0, 435,
	0, 0, 0, 0, 0, 362, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 436, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	367, 383, 257, 358, 396, 262, 365, 252, 332, 355,
	0, 0, 249, 381, 364, 314, 297, 298, 248, 0,
	350, 276, 289, 273, 330, 0, 380, 408, 272, 399,
	0, 391, 251, 0, 390, 329, 377, 382, 315, 309,
	250, 379, 313, 308, 301, 280, 423, 293, 341, 307,
	342, 294, 319, 318, 320, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 302, 0,
	0, 0, 409, 0, 353, 335, 0, 0, 0, 351,
	305, 378, 343, 384, 368, 392, 347, 344, 242, 369,
	275, 316, 253, 255, 270, 277, 279, 281, 282, 325,
	326, 338, 357, 370, 371, 372, 274, 263, 352, 264,
	291, 265, 243, 267, 266, 268, 359, 269, 245, 339,
	376, 0, 287, 348, 312, 246, 311, 340, 375, 374,
	254, 400, 406, 407, 0, 0, 412, 0, 0, 0,
	420, 425, 426, 427, 429, 430, 431, 432, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 405,
	285, 239, 240, 445, 271, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 404, 0,
	0, 0, 433, 444, 0, 0, 0, 0, 0, 443,
	337, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 386, 398, 415, 418,
	0, 0, 0, 0, 244, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 413, 0, 0, 321, 322, 323,
	324, 288, 0, 261, 416, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 411, 284, 290, 428, 292,
	260, 336, 286, 395, 299, 0, 421, 0, 422, 0,
	0, 0, 0, 328, 295, 296, 360, 300, 306, 349,
	394, 334, 354, 258, 385, 361, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 237, 0,
	241, 0, 304, 0, 345, 283, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 333, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 401, 402, 403,
	424, 387, 0, 442, 278, 0, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 446, 438, 0, 0, 0,
	434, 0, 435, 0, 0, 0, 0, 0, 362, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 1219, 0, 0, 0, 256, 188, 436, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 367, 383, 257, 358, 396, 262, 365,
	252, 332, 355, 0, 0, 249, 381, 364, 314, 297,
	298, 248, 0, 350, 276, 289, 273, 330, 0, 380,
	408, 272, 399, 0, 391, 251, 0, 390, 329, 377,
	382, 315, 309, 250, 379, 313, 308, 301, 280, 423,
	293, 341, 307, 342, 294, 319, 318, 320, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 302, 0, 0, 0, 409, 0, 353, 335, 0,
	0, 0, 351, 305, 378, 343, 384, 368, 392, 1555,
	344, 242, 369, 275, 316, 253, 255, 270, 277, 279,
	281, 282, 325, 326, 338, 357, 370, 371, 372, 274,
	263, 352, 264, 291, 265, 243, 267, 266, 268, 359,
	269, 245, 339, 376, 0, 287, 348, 312, 246, 311,
	340, 375, 374, 254, 400, 406, 407, 0, 0, 412,
	0, 0, 0, 420, 425, 426, 427, 429, 430, 431,
	432, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 405, 285, 239, 240, 445, 271, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 404, 0, 0, 0, 433, 444, 0, 0, 0,
	0, 0, 443, 337, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 386,
	398, 415, 418, 0, 0, 0, 0, 244, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 413, 0, 0,
	321, 322, 323, 324, 288, 0, 261, 416, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 410, 411, 284,
	290, 428, 292, 260, 336, 286, 395, 299, 0, 421,
	0, 422, 0, 0, 0, 0, 328, 295, 296, 360,
	300, 306, 349, 394, 334, 354, 258, 385, 361, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 237, 0, 241, 0, 304, 0, 345, 283, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	333, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	401, 402, 403, 424, 387, 0, 442, 278, 0, 0,
	303, 0, 0, 0, 0, 0, 0, 0, 446, 438,
	0, 0, 0, 434, 0, 435, 0, 0, 0, 0,
	0, 362, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 436, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 367, 383, 257, 358,
	396, 262, 365, 252, 332, 355, 0, 0, 249, 381,
	364, 314, 297, 298, 248, 0, 350, 276, 289, 273,
	330, 0, 380, 408, 272, 399, 0, 391, 251, 0,
	390, 329, 377, 382, 315, 309, 250, 379, 313, 308,
	301, 280, 423, 293, 341, 307, 342, 294, 319, 318,
	320, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 1244, 0, 0,
	0, 366, 0, 0, 302, 0, 0, 0, 409, 0,
	353, 335, 0, 0, 0, 351, 305, 378, 343, 384,
	368, 392, 347, 344, 242, 369, 275, 316, 253, 255,
	270, 277, 279, 281, 282, 325, 326, 338, 357, 370,
	371, 372, 274, 263, 352, 264, 291, 265, 243, 267,
	266, 268, 359, 269, 245, 339, 376, 0, 287, 348,
	312, 246, 311, 340, 375, 374, 254, 400, 406, 407,
	0, 0, 412, 0, 0, 0, 420, 425, 426, 427,
	429, 430, 431, 432, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 405, 285, 239, 240, 445,
	271, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 404, 0, 0, 0, 433, 444,
	0, 0, 0, 0, 0, 443, 337, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 386, 398, 415, 418, 0, 0, 0, 0,
	244, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	413, 0, 0, 321, 322, 323, 324, 288, 0, 261,
	416, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 411, 284, 290, 428, 292, 260, 336, 286, 395,
	299, 0, 421, 0, 422, 0, 0, 0, 0, 328,
	295, 296, 360, 300, 306, 349, 394, 334, 354, 258,
	385, 361, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 237, 0, 241, 0, 304, 0,
	345, 283, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 333, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 401, 402, 403, 424, 387, 0, 442,
	278, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	0, 446, 438, 0, 0, 0, 434, 0, 435, 0,
	0, 0, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 367,
	383, 257, 358, 396, 262, 365, 252, 332, 355, 0,
	0, 249, 381, 364, 314, 297, 298, 248, 0, 350,
	276, 289, 273, 330, 0, 380, 408, 272, 399, 0,
	391, 251, 0, 390, 329, 377, 382, 315, 309, 250,
	379, 313, 308, 301, 280, 423, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 409, 0, 353, 335, 0, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 242, 369, 275,
	316, 253, 255, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 263, 352, 264, 291,
	265, 243, 267, 266, 268, 359, 269, 245, 339, 376,
	0, 287, 348, 312, 246, 311, 340, 375, 374, 254,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	239, 240, 445, 271, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 0, 0,
	0, 433, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 244, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 413, 0, 0, 321, 322, 323, 324,
	288, 0, 261, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 260,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 258, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 727, 0, 0, 373, 0, 237, 0, 241,
	0, 304, 0, 345, 283, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 333, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 484, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 239, 240, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 485, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 261, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 0, 241, 0, 304, 0, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 333,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 278, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 367, 383, 257, 358, 396,
	262, 365, 252, 332, 355, 0, 0, 249, 381, 364,
	314, 297, 298, 248, 0, 350, 276, 289, 273, 330,
	0, 380, 408, 272, 399, 0, 391, 251, 0, 390,
	329, 377, 382, 315, 309, 250, 379, 313, 308, 301,
	280, 423, 293, 341, 307, 342, 294, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 242, 369, 275, 316, 253, 255, 270,
	277, 279, 281, 282, 325, 326, 338, 357, 370, 371,
	372, 274, 263, 352, 264, 291, 265, 243, 267, 266,
	268, 359, 269, 245, 339, 376, 0, 287, 348, 312,
	246, 311, 340, 375, 374, 254, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 285, 239, 240, 445, 271,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 244,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 288, 0, 261, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	411, 284, 290, 428, 292, 260, 336, 286, 395, 299,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 295,
	296, 360, 300, 306, 349, 394, 334, 354, 258, 385,
	361, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 237, 0, 241, 0, 304, 0, 345,
	283, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 333, 238, 233, 234, 235, 236, 0,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 451,
	278, 0, 0, 303, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 0, 434, 0, 435, 0,
	0, 0, 0, 0, 362, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 436, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 367,
	383, 257, 358, 396, 262, 365, 252, 332, 355, 0,
	0, 249, 381, 364, 314, 297, 298, 248, 0, 350,
	276, 289, 273, 330, 0, 380, 408, 272, 399, 0,
	391, 251, 0, 390, 329, 377, 382, 315, 309, 250,
	379, 313, 308, 301, 280, 423, 293, 341, 307, 342,
	294, 319, 318, 320, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 366, 0, 0, 302, 0, 0,
	0, 409, 0, 353, 335, 0, 0, 0, 351, 305,
	378, 343, 384, 368, 392, 347, 344, 242, 369, 275,
	316, 253, 255, 270, 277, 279, 281, 282, 325, 326,
	338, 357, 370, 371, 372, 274, 263, 352, 264, 291,
	265, 243, 267, 266, 268, 359, 269, 245, 339, 376,
	0, 287, 348, 312, 246, 311, 340, 375, 374, 254,
	400, 406, 407, 0, 0, 412, 0, 0, 0, 420,
	425, 426, 427, 429, 430, 431, 432, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 405, 285,
	239, 240, 445, 271, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 404, 0, 0,
	0, 433, 444, 0, 0, 0, 0, 0, 443, 337,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 386, 398, 415, 418, 0,
	0, 0, 0, 244, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 413, 0, 0, 321, 322, 323, 324,
	288, 0, 261, 416, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 284, 290, 428, 292, 260,
	336, 286, 395, 299, 0, 421, 0, 422, 0, 0,
	0, 0, 328, 295, 296, 360, 300, 306, 349, 394,
	334, 354, 258, 385, 361, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 237, 0, 241,
	0, 304, 0, 345, 283, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 333, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 401, 402, 403, 424,
	387, 0, 442, 278, 0, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 446, 438, 0, 0, 0, 434,
	0, 435, 0, 0, 0, 0, 0, 362, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 436, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 367, 383, 257, 358, 396, 262, 365, 252,
	332, 355, 0, 0, 249, 381, 364, 314, 297, 298,
	248, 0, 350, 276, 289, 273, 330, 0, 380, 408,
	272, 399, 0, 391, 251, 0, 390, 329, 377, 382,
	315, 309, 250, 379, 313, 308, 301, 280, 423, 293,
	341, 307, 342, 294, 319, 318, 320, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	302, 0, 0, 0, 409, 0, 353, 335, 0, 0,
	0, 351, 305, 378, 343, 384, 368, 392, 347, 344,
	242, 369, 275, 316, 253, 255, 270, 277, 279, 281,
	282, 325, 326, 338, 357, 370, 371, 372, 274, 263,
	352, 264, 291, 265, 243, 267, 266, 268, 359, 269,
	245, 339, 376, 0, 287, 348, 312, 246, 311, 340,
	375, 374, 254, 400, 406, 407, 0, 0, 412, 0,
	0, 0, 420, 425, 426, 427, 429, 430, 431, 432,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 405, 285, 239, 240, 445, 271, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	404, 0, 0, 0, 433, 444, 0, 0, 0, 0,
	0, 443, 337, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 386, 398,
	415, 418, 0, 0, 0, 0, 244, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 413, 0, 0, 321,
	322, 323, 324, 288, 0, 261, 416, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 284, 290,
	428, 292, 260, 336, 286, 395, 299, 0, 421, 0,
	422, 0, 0, 0, 0, 328, 295, 296, 360, 300,
	306, 349, 394, 334, 354, 258, 385, 361, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	237, 0, 241, 0, 304, 0, 345, 283, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 333,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 401,
	402, 403, 424, 387, 0, 442, 278, 0, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 446, 438, 0,
	0, 0, 434, 0, 435, 0, 0, 0, 0, 0,
	362, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	436, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 367, 1199, 257, 358, 396,
	262, 365, 252, 332, 355, 0, 0, 249, 381, 364,
	314, 297, 298, 248, 0, 350, 276, 289, 273, 330,
	0, 380, 408, 272, 399, 0, 391, 251, 0, 390,
	329, 377, 382, 315, 309, 250, 379, 313, 308, 301,
	280, 423, 293, 341, 307, 342, 294, 319, 318, 320,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 302, 0, 0, 0, 409, 0, 353,
	335, 0, 0, 0, 351, 305, 378, 343, 384, 368,
	392, 347, 344, 242, 369, 275, 316, 253, 255, 270,
	277, 279, 281, 282, 325, 326, 338, 357, 370, 371,
	372, 274, 263, 352, 264, 291, 265, 243, 267, 266,
	268, 359, 269, 245, 339, 376, 0, 287, 348, 312,
	246, 311, 340, 375, 374, 254, 400, 406, 407, 0,
	0, 412, 0, 0, 0, 420, 425, 426, 427, 429,
	430, 431, 432, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 405, 285, 239, 240, 445, 271,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 404, 0, 0, 0, 433, 444, 0,
	0, 0, 0, 0, 443, 337, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 386, 398, 415, 418, 0, 0, 0, 0, 244,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 413,
	0, 0, 321, 322, 323, 324, 288, 0, 261, 416,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 410,
	411, 284, 290, 428, 292, 260, 336, 286, 395, 299,
	0, 421, 0, 422, 0, 0, 0, 0, 328, 295,
	296, 360, 300, 306, 349, 394, 334, 354, 258, 385,
	361, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 237, 0, 241, 0, 304, 0, 345,
	283, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 333, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 401, 402, 403, 424, 387, 0, 442, 278,
	0, 0, 303, 0, 0, 0, 0, 0, 0, 0,
	446, 438, 0, 0, 0, 434, 0, 435, 0, 0,
	0, 0, 0, 362, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 436, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 367, 1197,
	257, 358, 396, 262, 365, 252, 332, 355, 0, 0,
	249, 381, 364, 314, 297, 298, 248, 0, 350, 276,
	289, 273, 330, 0, 380, 408, 272, 399, 0, 391,
	251, 0, 390, 329, 377, 382, 315, 309, 250, 379,
	313, 308, 301, 280, 423, 293, 341, 307, 342, 294,
	319, 318, 320, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 302, 0, 0, 0,
	409, 0, 353, 335, 0, 0, 0, 351, 305, 378,
	343, 384, 368, 392, 347, 344, 242, 369, 275, 316,
	253, 255, 270, 277, 279, 281, 282, 325, 326, 338,
	357, 370, 371, 372, 274, 263, 352, 264, 291, 265,
	243, 267, 266, 268, 359, 269, 245, 339, 376, 0,
	287, 348, 312, 246, 311, 340, 375, 374, 254, 400,
	406, 407, 0, 0, 412, 0, 0, 0, 420, 425,
	426, 427, 429, 430, 431, 432, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 405, 285, 239,
	240, 445, 271, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 404, 0, 0, 0,
	433, 444, 0, 0, 0, 0, 0, 443, 337, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 386, 398, 415, 418, 0, 0,
	0, 0, 244, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 413, 0, 0, 321, 322, 323, 324, 288,
	0, 261, 416, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 410, 411, 284, 290, 428, 292, 260, 336,
	286, 395, 299, 0, 421, 0, 422, 0, 0, 0,
	0, 328, 295, 296, 360, 300, 306, 349, 394, 334,
	354, 258, 385, 361, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 237, 0, 241, 0,
	304, 0, 345, 283, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 333, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 401, 402, 403, 424, 387,
	0, 442, 278, 0, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 446, 438, 0, 0, 0, 434, 0,
	435, 0, 0, 0, 0, 0, 362, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 436, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 367, 383, 257, 358, 396, 262, 365, 252, 332,
	355, 0, 0, 249, 381, 364, 314, 297, 298, 248,
	0, 350, 276, 289, 273, 330, 0, 380, 408, 272,
	399, 0, 391, 251, 0, 390, 329, 377, 382, 315,
	309, 250, 379, 313, 308, 301, 280, 423, 293, 341,
	307, 342, 294, 319, 318, 320, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 302,
	0, 0, 0, 409, 0, 353, 335, 0, 0, 0,
	351, 305, 378, 343, 384, 368, 392, 347, 344, 242,
	369, 275, 316, 253, 255, 525, 277, 279, 281, 282,
	325, 326, 338, 357, 370, 371, 372, 274, 263, 352,
	264, 291, 265, 243, 267, 266, 268, 359, 269, 245,
	339, 376, 0, 287, 348, 312, 246, 311, 340, 375,
	374, 254, 400, 406, 407, 0, 0, 412, 0, 0,
	0, 420, 425, 426, 427, 429, 430, 431, 432, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	405, 285, 239, 240, 445, 271, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 404,
	0, 0, 0, 433, 444, 0, 0, 0, 0, 0,
	443, 337, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 386, 398, 415,
	418, 0, 0, 0, 0, 244, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 413, 0, 0, 321, 322,
	323, 324, 288, 0, 261, 416, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 410, 411, 284, 290, 428,
	292, 260, 336, 286, 395, 299, 0, 421, 0, 422,
	0, 0, 0, 0, 328, 295, 296, 360, 300, 306,
	349, 394, 334, 354, 258, 385, 361, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 237,
	0, 241, 0, 304, 0, 345, 283, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 0, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 401, 402,
	403, 424, 387, 1631, 442, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 446, 438, 865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 853, 0, 0, 0, 0, 1633, 1602, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 1635, 0,
	0, 0, 873, 877, 879, 881, 883, 884, 886, 0,
	891, 887, 888, 889, 890, 0, 868, 869, 870, 871,
	851, 852, 874, 1601, 854, 0, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 866, 872, 1608, 0,
	0, 0, 0, 0, 0, 876, 878, 880, 882, 885,
	0, 0, 0, 0, 504, 503, 510, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 508, 0, 509,
	513, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 867, 518, 0, 0, 0, 0, 853, 0,
	0, 0, 843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 873, 877,
	879, 881, 883, 884, 886, 0, 891, 887, 888, 889,
	890, 0, 868, 869, 870, 871, 851, 852, 874, 0,
	854, 0, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 866, 872, 0, 0, 0, 0, 0, 0,
	0, 876, 878, 880, 882, 885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 1592, 1594, 1591, 0, 1588, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 867, 0,
	0, 0, 0, 1618, 0, 0, 0, 0, 0, 0,
	1633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 1640, 2192, 2193, 1607, 1609, 1611,
	0, 1613, 1614, 1615, 1619, 1620, 1621, 1623, 1626, 1627,
	1628, 0, 1631, 0, 0, 0, 0, 0, 1616, 1625,
	1617, 3295, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1633, 496, 498, 497,
	0, 0, 1632, 0, 0, 0, 0, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 1631, 1589, 1590, 0, 521, 0, 0, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 1608, 1624, 0,
	0, 0, 0, 0, 0, 0, 1633, 0, 1605, 0,
	0, 0, 0, 0, 0, 1604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 0, 0, 0, 0, 1610, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 0,
	3037, 1637, 1636, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1618, 501, 505, 511,
	0, 512, 514, 0, 0, 515, 516, 517, 0, 0,
	519, 520, 0, 0, 0, 0, 1606, 1640, 0, 0,
	1607, 1609, 1611, 1598, 1613, 1614, 1615, 1619, 1620, 1621,
	1623, 1626, 1627, 1628, 1624, 0, 0, 0, 0, 0,
	0, 1616, 1625, 1617, 0, 0, 0, 875, 0, 0,
	0, 1612, 504, 503, 510, 500, 0, 0, 1639, 0,
	0, 1638, 1618, 0, 507, 508, 0, 509, 513, 0,
	0, 495, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 518, 1606, 1640, 0, 0, 1607, 1609, 1611, 0,
	1613, 1614, 1615, 1619, 1620, 1621, 1623, 1626, 1627, 1628,
	0, 0, 0, 0, 0, 0, 0, 1616, 1625, 1617,
	0, 1612, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 0, 1618, 0, 522, 0, 0, 524, 0, 0,
	0, 1605, 523, 0, 0, 0, 0, 0, 1604, 0,
	0, 1632, 1606, 1640, 0, 0, 1607, 1609, 1611, 0,
	1613, 1614, 1615, 1619, 1620, 1621, 1623, 1626, 1627, 1628,
	0, 0, 1622, 0, 0, 0, 0, 1616, 1625, 1617,
	0, 1610, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1605, 0, 0,
	0, 1632, 0, 0, 1604, 0, 0, 0, 0, 0,
	504, 503, 510, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 0, 509, 513, 0, 1622, 495,
	0, 0, 0, 0, 0, 0, 0, 1610, 0, 518,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1605, 0, 0,
	0, 0, 0, 0, 1604, 496, 498, 497, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 522, 0, 0, 524, 0, 506, 1622, 0,
	523, 0, 0, 0, 521, 0, 0, 1610, 0, 0,
	0, 499, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 505, 511, 0, 512,
	514, 0, 0, 515, 516, 517, 0, 0, 519, 520,
	0, 0, 0, 496, 498, 497, 0, 0, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	0, 0, 521, 0, 0, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 505, 511, 0, 512, 514, 0,
	0, 515, 516, 517, 0, 0, 519, 520,
}

var yyPact = [...]int{
	3183, -1000, -1000, -1000, -315, 10111, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34664,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34664,
	-308, 34121, 34121, -1000, -1000, 2087, -1000, 33577, 11242, 34664,
	312, 308, 34664, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	589, -1000, 33034, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	533, 37370, 36293, 7861, -258, -1000, 2960, -104, 1985, 757,
	764, 1058, 1058, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3263, 667, 32491, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3271, 981, 667, 13421, 9,
	8, 2960, 333, 235, -1000, 992, 3320, 159, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7861,
	7861, 10111, -339, 10111, 7861, 34664, 34664, -1000, -1000, -1000,
	-1000, 533, 37370, 7861, 1985, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36858,
	-1000, 1285, -1000, -1000, -1000, -1000, -1000, 2386, 1279, 1984,
	504, 34664, -1000, 1275, 504, -1000, -1000, -1000, 2960, 2960,
	-1000, 34664, 34664, 79, 1504, -1000, 322, 328, 313, 1271,
	-1000, -1000, -1000, -1000, -1000, -1000, 442, 2765, -1000, 34664,
	34664, 2427, 34664, -1000, 1831, 473, 37528, 2622, 1208, 635,
	2448, -1000, -1000, 2385, -1000, 201, 190, 168, 380, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 209, -1000, 2697, -1000,
	-1000, 191, -1000, -1000, 161, -1000, -1000, -1000, 7, -1000,
	-1000, -1000, -1000, -1000, -1000, -87, -1000, -1000, 775, 2013,
	7861, -1000, 1537, -1000, 2877, -1000, -1000, -1000, -1000, 5054,
	9541, 9541, 9541, 9541, -1000, -1000, 2259, 7861, 2384, 2382,
	2381, -1000, -1000, -1000, -1000, -1000, 1268, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1629, -1000, -1000, -1000,
	8981, -1000, 2379, 2378, 2377, 2375, 2374, 2373, 2372, 2371,
	2370, 2369, 2365, 2363, 2361, 2347, 2147, 10669, 2342, 1975,
	1974, 2341, 2340, 2331, 1972, 2147, 2147, 2330, 2328, 2327,
	2326, 2324, 2321, 2318, 2316, 2315, 2314, 2313, 2303, 2302,
	2290, 2288, 2286, 2284, 2283, 2282, 2279, 2277, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1121, -1000, 2276, 2607, 2708, 2160, 2741, 2664, 2662,
	2658, 2653, 1775, -1000, -1000, 66, -1000, -138, -1000, -1000,
	743, -1000, 740, -1000, 34664, 34664, 34664, 649, 127, 531,
	531, 531, 531, 531, 557, 531, 585, 579, 578, 531,
	-1000, -103, -1000, -1000, -1000, -1000, -1000, -1000, 1500, 1499,
	2492, 700, -1000, -1000, -1000, -1000, 1076, 34664, -1000, 2194,
	1398, 1398, 2705, 478, 477, 476, 1398, 356, -1000, 1461,
	1461, 1461, 1461, 1398, 389, 472, 2708, 2708, -9, 1461,
	-1, 1398, 1398, -1, 1398, 1398, 1398, 162, -301, -1000,
	-1000, -1000, 1461, 1461, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2691, 2689, 531, 533, 34664, 126, 34664, 533, 533,
	533, 543, -50, 35750, 35207, 1831, 467, 466, 1106, 1502,
	-1000, 1416, 34664, 34664, 1416, 1416, 17816, 17273, -1000, 34664,
	-1000, 2708, 2160, -1000, 2114, 2184, 2106, 2160, 533, 533,
	533, 533, 533, 154, 533, 533, 533, 533, 34664, 34664,
	31948, 533, 533, 6734, 6734, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 10111, 1646, 1800, 157, -66, -310,
	188, -1000, -1000, 34664, 2596, 144, -1000, -1000, -1000, 2153,
	-1000, 2193, 2193, 2193, 2193, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2235, 2275, -1000, -1000, 2192, 2192,
	2192, 2153, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2228, 2228, 2234,
	2234, 2228, 34664, 7861, 34664, 2609, 332, 2273, -1000, 34664,
	326, 2708, 2607, 2708, -1000, -1000, 1266, 1773, 1971, -1000,
	-1000, 322, 1385, -1000, 937, -1000, -1000, -1000, -1000, 34664,
	-87, 318, -1000, -1000, 1954, 2267, -1000, 488, 1140, 1200,
	-1000, 148, 36962, 27597, 1831, 27597, 34664, -1000, -1000, -1000,
	-1000, -1000, -1000, 5, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 182, -1000, 7861,
	7861, 7861, 7861, 7861, -1000, 508, 8421, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 9541, 9541, 9541, 9541, 9541, 9541,
	9541, 9541, 9541, 9541, 9541, 9541, 2252, 1441, 9541, 9541,
	9541, 9541, 2184, 2851, 1095, 231, -1000, -1000, -1000, -1000,
	-1000, 1558, 2013, 7861, 7861, 7861, 34664, -1000, -1000, 3425,
	7861, 7861, 11399, 7861, 2650, 7861, 7861, 7861, 2089, 3934,
	34664, 7861, -1000, 2088, 2083, -1000, -1000, 1712, 7861, -1000,
	-1000, 7861, -1000, -1000, 7861, 9541, 7861, -1000, -1000, -1000,
	3051, 2650, 2650, 1443, 7861, 7861, 2650, 2650, 2650, 1438,
	2650, 2650, 2650, 2650, 2650, 2650, 2650, 2650, 2081, 2077,
	2076, 2708, -258, 6174, -1000, -263, 2607, 7861, -1000, -1000,
	7861, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1967,
	1960, -326, -39, 754, 713, 747, -1000, 2646, -1000, 2263,
	2262, 1265, 531, -1000, 531, 531, -151, 34664, 1570, 27597,
	34664, 34664, 1831, 34664, 34664, 531, 531, 531, 34664, -1000,
	2554, 27597, 2541, 543, -1000, 34664, 1076, 2644, 34664, 2750,
	9541, 9541, -1000, 31405, 1461, 1398, 1398, -1000, -1000, 34664,
	-1000, -1000, -1000, 1461, 34664, 1461, 1461, 2750, 1461, -1000,
	-1000, -1000, 1398, 1398, -1000, -1000, -1000, -1000, 1461, 1461,
	-1000, -1000, 2750, 34664, 4, 2750, 2750, -7, -1000, -1000,
	-1000, 34664, 34664, 531, 34664, -1000, 34664, 34664, -1000, -1000,
	34664, 34664, 36867, 34664, 30862, 2678, -1000, 27597, 34664, 34664,
	25425, -1000, 1007, -1000, -60, -1000, -41, -50, 1416, -50,
	1416, -1000, 481, 485, 16187, 416, 27597, 4494, -1000, -1000,
	1416, 1416, 4494, 4494, 1313, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1074, -1000, 180, 2607, -1000, -1000, -1000, -1000,
	-1000, 34664, 34664, 27597, 1831, 34664, 533, 34664, 34664, 34664,
	34664, -1000, 2260, -1000, 2616, 34664, 34664, 1194, -1000, -1000,
	12878, 1235, 1194, -1000, 1567, -1000, 7861, 10111, -280, 7861,
	10111, 10111, 7861, 10111, -1000, 7861, 140, -1000, -1000, -1000,
	-1000, 1771, -1000, 1768, -1000, -1000, -1000, 1959, 1959, -1000,
	1767, -1000, -1000, -1000, -1000, 1766, -1000, -1000, 1764, -1000,
	-1000, -1000, 2075, 775, -1000, 1957, 2445, -259, -1000, 15084,
	34664, 34664, -1000, -1000, -259, -1000, 14524, 34664, 2607, -1000,
	2607, 34664, -1000, 2703, -1000, 322, 279, -1000, -1000, -1000,
	-1000, -1000, -1000, 1232, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1032, -1000, 34664, -1000, -1000, 148, 27597,
	28683, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 199, -1000,
	-1000, 167, -1000, 568, 111, 1376, -1000, -1000, 133, 174,
	82, 630, 2013, -1000, 1586, 1586, 1587, -1000, 529, -1000,
	-1000, -1000, -1000, 2259, -1000, -1000, -1000, 3139, 2982, -1000,
	1446, 1446, 1128, 1128, 1128, 1128, 1128, 1306, 1306, -1000,
	-1000, -1000, 5054, 2252, 9541, 9541, 9541, 9541, 490, 490,
	3307, 3330, -1000, 7861, 1557, -1000, 7861, 1871, 1705, 996,
	1217, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2073, 2070, 2189, 2760, 2066, 7861, -1000, -1000, 1373,
	1372, 1359, -1000, 1861, 7301, -1000, -1000, -1000, 2064, 1186,
	2063, -1000, -1000, -1000, 2061, 1351, 1069, 2059, 2040, 2057,
	1020, 7861, 7861, 7861, 2056, 1341, 1340, 7861, 7861, 7861,
	7861, 2054, 7861, 7861, 7861, 7861, 7861, 7861, 7861, 7861,
	28, 28, 28, -1000, -1000, 1334, -1000, 2013, -1000, 1950,
	-1000, 1282, 1016, -1000, 1650, -1000, -1000, -1000, 1927, -1000,
	-1000, 749, 739, 738, 34664, 998, 11785, 34664, 34664, 34664,
	34664, 531, 135, -1000, 2614, 1081, -1000, 111, -98, 314,
	778, 2414, 2758, 34664, 34664, 34664, 2643, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 30319, -1000, 2251, 1330, -1000,
	-1000, 7861, -1000, -1000, 2409, 34664, 34664, 2750, 2750, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 34664, 2750, 2750, 1398,
	1461, -1000, -1000, 1461, -1000, -1000, 1461, -1000, 1181, -1000,
	34664, -1000, -1000, -1000, 2643, 2194, 1014, -1000, 848, 518,
	518, 774, 437, 2740, 13964, -1000, 1384, 911, 562, 2550,
	198, -1000, 1384, -209, 1384, 1384, 1384, 1384, 1384, 1384,
	1384, 432, 411, 1384, 1384, 1384, 1384, 1384, 1384, 1384,
	1384, 1384, 1384, 1384, 762, 1384, 1384, 1384, 1384, 1384,
	-1000, 1384, 2247, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	447, 132, 2674, 240, 236, 1081, 2672, 234, 2766, 1008,
	-1000, -1000, -1000, -1000, 19995, 19995, 15644, 19995, -1000, 1390,
	-50, -48, -1000, -1000, 1007, 4494, 1007, 4494, -1000, -1000,
	559, -1000, -1000, 778, -1000, 34664, 34664, -1000, -1000, 2242,
	1486, -1000, -1000, 10669, -1000, 4494, 4494, -1000, -1000, 20538,
	34664, -1000, -89, -1000, -79, 2702, 955, -1000, -1000, 969,
	778, 2439, 34664, 955, 955, -1000, -1000, 11785, 34664, -1000,
	-1000, 2750, 6734, -1000, 25425, -1000, -1000, 29769, -1000, 29226,
	2750, 1534, -1000, 10111, 1789, 155, -1000, 184, -314, 151,
	1561, 149, 2013, -1000, -1000, 2052, 2047, 1328, -1000, 1327,
	2046, 1325, 1319, -1000, -11, -1000, 2594, 794, -1000, 2237,
	-1000, 1312, 2481, -1000, 947, -1000, 1485, 1307, -1000, 794,
	1302, 2480, 947, 2702, -1000, 1174, 77, -1000, -1000, 34664,
	1954, 1290, 28683, 828, -1000, 558, 1144, 1143, -1000, 27597,
	193, 27597, -1000, 27597, -1000, -1000, 331, -1000, 34664, 2604,
	-1000, -1000, -1000, 1927, 1480, -331, -1000, -1000, -1000, -1000,
	-1000, 1260, -1000, 490, 490, 3307, 2426, -1000, 9541, -1000,
	9541, 2842, 1516, -1000, 7861, 1715, 36752, 36752, 1015, 18902,
	34664, -1000, -1000, 7861, 7861, -1000, 2810, -1000, -1000, -1000,
	-1000, 7861, 7861, 1879, -1000, 34664, -1000, -1000, -1000, -1000,
	18902, -1000, 9541, -1000, 7861, 964, 2790, 1246, 28, 28,
	28, 2700, 2677, 2605, 1242, 28, 2564, 2556, 2545, 2491,
	2476, 2446, 2410, 2280, -1000, 2236, -1000, -1000, 6174, -1000,
	-11, 7861, 7861, 7861, 2536, -1000, -1000, 105, -1000, 1479,
	-1000, -1000, -1000, 730, 156, 2045, 941, -1000, -1000, 34664,
	-1000, -1000, -1000, 2037, 907, -1000, -1000, -1000, 12266, 2193,
	2193, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2235, -1000, -1000, 2192, 2192, 2192, 2153, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2228, 2228, 2234, 2234,
	2228, -1000, 2194, 2194, 267, 34664, 33, 1384, -1000, 465,
	27597, 458, -1000, 34664, 1772, 1477, 2436, 274, 2577, 34664,
	2224, 2222, 2214, 303, 12266, 34664, 962, -1000, 1131, 3320,
	-1000, 34664, 2013, -1000, 1831, -1000, 1398, -1000, -1000, 2750,
	1182, -1000, -1000, 2750, 1398, 1398, 1461, 34664, -1000, 303,
	2642, 36867, -1000, 34664, -1000, -1000, -1000, 615, -1000, 733,
	531, 34664, 1604, 733, 1603, 2206, -1000, -1000, 34664, 34664,
	34664, 34664, -1000, -1000, 34664, -1000, 34664, 34664, 34664, 34664,
	-1000, 34664, 34664, -1000, 34664, 1600, 1599, 2574, -1000, 1384,
	1384, 683, -1000, -1000, 462, -1000, 1761, 1760, 1757, 1754,
	1949, 1948, 1945, 1384, 1384, 1752, 1944, 28140, 1943, 866,
	1751, 1748, 1743, 1731, 1941, 763, -1000, 1935, 1711, 1709,
	1707, 34664, 2205, 1868, -1000, -1000, 33, 1384, 203, 34664,
	1472, 465, 311, 1710, 16730, 34664, 25425, 25425, 25425, 25425,
	-1000, 2467, 2466, -1000, 2463, 2457, 2477, 34664, 25425, 2194,
	-1000, 28140, -1000, -1000, -1000, 2184, 1241, 2914, 715, 7861,
	-1000, -1000, -55, -61, -1000, -1000, -1000, 27597, 1934, 416,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2783, 34664,
	34664, 573, 2036, -1000, 2747, -1000, 905, -1000, -1000, 1125,
	-1000, 2747, 1563, -317, 10111, 1462, 1448, -1000, 7861, 10111,
	7861, -281, 214, -283, -1000, -1000, -1000, 1932, -1000, -1000,
	-1000, 1739, -1000, 1738, 47, 64, 1597, -259, 6174, 310,
	34664, -259, 34664, 6174, -1000, 34664, 309, -259, -1000, 34664,
	1735, -1000, -1000, -1000, 2752, 27597, 1831, 1335, 27054, -1000,
	181, -1000, 169, 471, 1931, -1000, 576, 104, 1930, 1927,
	-1000, -1000, -1000, 9541, -1000, -1000, -1000, -1000, 2013, 7861,
	2034, -1000, 712, 712, 2033, 2032, -1000, 2193, 2193, -1000,
	2153, 2192, 2153, 712, 712, 2030, -1000, 1820, 2269, -1000,
	2265, 2226, 7861, -1000, 2027, 3347, 1134, -119, 28, 28,
	-1000, -1000, -1000, -1000, 28, 28, 28, 28, -1000, 28,
	28, 28, 28, 28, 28, 28, 28, 505, -1000, 47,
	2013, 2013, -1000, -1000, 2581, -1000, 1927, 1924, -1000, 1919,
	1917, 998, 12266, 611, 11785, 2591, 2636, 2635, 12328, 2634,
	2182, 2172, 1782, -1000, -1000, -1000, 26511, 444, -1000, -1000,
	-1000, 560, 185, 1734, 430, -1000, 34664, 234, 2523, 1463,
	1910, 34664, -1000, -1000, -1000, -1000, -1000, 2577, -1000, 885,
	290, 12328, 12328, 12328, 280, 1458, -1000, 504, 882, 1124,
	25425, 34664, -1000, 24882, 2026, -1000, 778, 2750, -1000, 34664,
	-1000, 2750, 2750, 1398, -1000, 280, 335, -1000, 2566, 12266,
	-1000, 34664, -1000, 34664, -1000, 34664, 34664, 531, 7861, 2566,
	34664, 546, -1000, -1000, 858, 287, 565, 565, 834, -1000,
	2603, -1000, -1000, -1000, 34664, -1000, -1000, -1000, -1000, -1000,
	-1000, 18902, 18902, 2671, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1909, 1907, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 34664, 1233, -1000,
	1460, 1782, 26511, 1456, 1416, 1906, 444, 1772, 1455, -1000,
	1904, -1000, 796, 34664, 34664, -1000, 928, -1000, 1452, 2394,
	2435, 2394, -1000, -1000, -1000, -1000, 2460, -1000, 2217, -1000,
	-1000, 928, -1000, -1000, -1000, -1000, -1000, 715, -1000, 2701,
	733, 733, 733, 2025, -1000, -1000, -1000, 828, 2021, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2745, 2737,
	25968, 2745, -1000, -317, 1515, -1000, 1625, 146, 1450, 34664,
	-1000, -1000, -1000, 2014, 2009, -265, 70, 2736, 2734, 2781,
	-1000, 2007, 816, -259, -1000, -1000, 794, -1000, -1000, -1000,
	-259, -1000, 794, -1000, -1000, 1831, -1000, 164, -1000, -1000,
	-1000, -1000, -1000, -1000, 99, -1000, 34664, -1000, 806, 103,
	-1000, 2013, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7861, -1000,
	-1000, -1000, 2203, -1000, -1000, 7861, 2005, 1898, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2791, -1000, 2733, -265, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 12266, -1000, 1865, 335, 335, 2004,
	797, -1000, -1000, -1000, -1000, 335, 23796, 12328, -1000, 1890,
	110, -1000, -1000, -1000, 1872, 1870, 1733, -1000, -1000, 1704,
	860, 125, -1000, -1000, -1000, -1000, -1000, -1000, 1710, 1634,
	1444, -333, -1000, 2171, -1000, 1384, 1384, 1384, 34664, 2003,
	1999, 1995, 507, 1413, 1411, -1000, 1723, 19995, 25425, 24882,
	909, -1000, 1119, -1000, -1000, -1000, 2750, -1000, -1000, 2750,
	507, -1000, -1000, -1000, 34664, 248, 2169, -1000, 2168, 2408,
	324, 2167, 2165, 34664, 2180, -1000, 2566, 34664, 555, 2575,
	-1000, -1000, -1000, -1000, -1000, 361, -1000, 34664, -1000, -1000,
	1291, -1000, 18902, -1000, -1000, 1228, -1000, 1868, 1867, -1000,
	110, 1864, 4494, -1000, -1000, 2523, 1859, -1000, 34664, 796,
	796, 2791, 34664, 6174, -1000, -1000, 7861, 2163, -1000, 7861,
	-1000, -1000, -1000, -1000, -1000, 2159, 2593, -1000, -1000, -1000,
	-1000, -1000, -1000, 7861, 7861, -1000, -1000, 524, 10111, -284,
	211, -1000, -1000, -1000, -267, 1853, -1000, -1000, 2732, 1852,
	1796, 34664, -1000, 794, 794, 778, -1000, -1000, -7, 435,
	-1000, 2161, -1000, 2091, 28, -1000, 147, 7861, -267, -161,
	-1000, -1000, -163, -163, -164, 12328, -1000, 1224, -1000, 1384,
	1384, 1991, -1000, -1000, 330, -1000, -1000, 247, -1000, -1000,
	1683, 482, -1000, -1000, -1000, 1851, 1635, 1817, 23253, 18902,
	19445, 1848, -1000, 37206, 182, 37206, 766, 1393, -1000, 1722,
	-1000, 1714, -1000, 2750, 909, 1119, -1000, -1000, 1298, -1000,
	-1000, 766, -1000, -1000, 248, -1000, -1000, 1611, 9541, -1000,
	-1000, 1846, 19445, 647, 1442, 1430, 678, 2158, -1000, 370,
	2777, -1000, -1000, -1000, 680, 2156, -1000, 1595, 1594, -1000,
	34664, -1000, 23253, 23253, 334, 334, 23253, 23253, 2155, 565,
	-1000, -1000, 9541, -1000, -1000, -1000, -1000, 1384, 1138, -1000,
	-1000, -1000, -1000, -1000, -1000, 1634, -1000, -1000, 2708, -1000,
	-1000, 2013, 34664, 2013, 24339, -1000, 2728, 2725, 2013, 775,
	-1000, -317, 34664, 34664, -271, 1708, -1000, 1845, 65, -1000,
	-1000, 776, -274, 34, 48, 1425, -1000, -1000, -1000, 1876,
	-1000, 718, -1000, -1000, -1000, 775, -271, 34664, -1000, 341,
	-1000, -1000, -1000, -1000, 23796, 1865, 1865, -164, 460, 1840,
	-1000, -1000, 244, -1000, -1000, -1000, -1000, -1000, 102, -1000,
	1423, 1223, -1000, 2153, 7861, -1000, -1000, -1000, -1000, -1000,
	498, 37146, -1000, 911, -1000, -7, 498, 453, 256, -1000,
	1702, -1000, -1000, 2791, -1000, 453, -1000, -1000, 3307, -1000,
	-1000, -1000, -1000, -1000, -1000, 1839, 1838, -1000, -1000, -1000,
	-1000, -1000, 1701, 2152, -105, 2669, 1832, -1000, -1000, 2150,
	1213, 1210, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1184,
	1171, 23253, -1000, -1000, 3307, 18902, 1384, -1000, -1000, 1168,
	1155, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2149, -1000,
	-1000, 2724, -1000, 1829, 542, 58, 48, -1000, 2723, 63,
	2722, 2719, 1825, -1000, -1000, 503, -260, 26, 23, 15,
	-1000, -1000, -1000, 7861, -1000, 2625, -1000, 363, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 97, -1000, -1000, -1000, 1817,
	1814, -1000, 23253, 2603, 1916, 337, 2718, 37206, -1000, 1384,
	-1000, 337, -1000, 301, -1000, 1368, -1000, 1699, -1000, 2708,
	-1000, -1000, -1000, 1866, 7861, 2147, 1384, 1794, -156, 23253,
	2403, 2395, 2389, 1962, 1127, -1000, 18902, -1000, -1000, 22710,
	34664, 1796, -1000, 2144, 1682, 70, 55, 2716, -1000, 1796,
	2714, 1796, 1796, -1000, 1578, -1000, 21, 19, 17, -1000,
	-1000, -1000, -1000, 1806, 173, -1000, -1000, -1000, 228, -1000,
	-1000, 2603, -1000, 2713, 355, -1000, 18902, -1000, -1000, -1000,
	1680, -1000, -1000, -1000, 1770, -1000, 34664, -1000, 2411, -1000,
	145, 1101, 228, 334, 228, 334, 228, 334, 228, 334,
	165, -1000, -1000, -1000, 1098, -1000, -1000, 2668, 18359, 40,
	-1000, -1000, -1000, 1805, -1000, 1796, -1000, -1000, 503, -1000,
	-1000, -1000, -1000, -1000, -1000, 1384, 1787, 265, -1000, -1000,
	-1000, 22167, 338, 354, 339, -1000, 486, -1000, -1000, -1000,
	565, -1000, -1000, 2268, 2164, 2764, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 34664, -1000, 34664, -1000,
	1094, -1000, -1000, -1000, 1118, -1000, -1000, -1000, -1000, -1000,
	1678, -1000, 34664, -1000, 34664, 347, 1676, 9541, 2142, 9541,
	2140, 336, 2136, -1000, -1000, 2775, -1000, 2768, 644, 644,
	228, 228, 228, 228, -1000, 771, -1000, 1365, -1000, 21624,
	34664, -1000, -1000, 1077, 2125, 2710, -1000, 3278, 34664, 3246,
	34664, 2123, 1358, 9541, -1000, -1000, -1000, 1674, 374, -1000,
	34664, 5614, -1000, 912, -1000, -1000, 468, 350, -1000, 1046,
	-1000, 995, 21081, 1673, 2359, -1000, -1000, -1000, -1000, -1000,
	2013, 34664, 990, -1000, 34664, 329, -1000, -1000, -1000, 970,
	-1000, -1000, -1000, -1000, 468, 2479, -1000, 1631, -1000, -1000,
	37080, 626, -1000, -1000, 37080, 343, -1000, 484, 2116, -1000,
	-1000, 932, -1000, 34664, 685, 7861, -1000, 343, 37206, -1000,
	7861, 925, -1000, 37206, 859, -1000, -1000,
}

var yyPgo = [...]int{
	0, 153, 2819, 243, 160, 3509, 85, 241, 221, 215,
	234, 3508, 3505, 3503, 2594, 2576, 3502, 3501, 3494, 3479,
	3463, 3458, 3457, 3456, 3454, 3440, 3439, 3438, 3436, 3435,
	3434, 3433, 3428, 3427, 3426, 3425, 3402, 3400, 3398, 3396,
	3394, 233, 3379, 3378, 3377, 3375, 3374, 3373, 3372, 3370,
	3368, 3367, 3365, 3364, 3363, 3362, 3359, 3358, 3355, 3354,
	3352, 3351, 3349, 3347, 3345, 3342, 3339, 3338, 3337, 3336,
	3331, 3330, 3329, 213, 3327, 2560, 3326, 3325, 3323, 3321,
	3319, 3317, 3316, 208, 3314, 3313, 3309, 3308, 3307, 3305,
	3303, 3302, 3301, 3300, 3299, 226, 3295, 3294, 3293, 3291,
	3289, 3287, 224, 3274, 157, 204, 3273, 3271, 3269, 3268,
	3266, 3260, 220, 239, 68, 3259, 54, 3257, 217, 3256,
	132, 3255, 133, 3254, 3253, 3251, 3250, 3249, 3247, 3240,
	3237, 3236, 3234, 3233, 3232, 3229, 3228, 3227, 3226, 92,
	3225, 251, 3223, 72, 3222, 3221, 115, 307, 183, 249,
	1740, 250, 246, 175, 150, 91, 3219, 2581, 3217, 144,
	222, 140, 27, 3215, 155, 3214, 138, 45, 31, 242,
	127, 61, 142, 108, 3211, 203, 101, 100, 3210, 3204,
	173, 247, 188, 3202, 117, 3201, 3200, 3194, 3193, 190,
	185, 3190, 3189, 118, 3186, 3185, 93, 3182, 69, 179,
	147, 177, 3181, 1350, 111, 114, 106, 168, 3180, 96,
	3179, 3177, 3176, 3175, 164, 3174, 180, 125, 73, 3173,
	3171, 3170, 66, 3168, 47, 3166, 48, 3165, 64, 3164,
	3163, 3161, 3160, 3159, 3158, 3156, 3153, 3149, 3147, 3146,
	74, 3145, 3144, 15, 16, 18, 3142, 26, 3141, 149,
	3140, 3138, 3137, 90, 82, 3135, 86, 1, 51, 3134,
	210, 163, 97, 139, 3132, 421, 3131, 3130, 3114, 143,
	3113, 552, 3112, 3111, 3110, 3109, 3108, 83, 3102, 206,
	57, 3100, 119, 126, 3099, 39, 49, 211, 196, 3098,
	3097, 3095, 22, 197, 94, 29, 0, 3092, 136, 3090,
	3085, 3084, 245, 3083, 230, 200, 145, 289, 254, 212,
	3082, 3080, 70, 3078, 154, 46, 56, 123, 8, 20,
	167, 3077, 13, 170, 3076, 192, 3075, 235, 42, 131,
	3073, 3072, 35, 262, 3065, 3064, 3063, 116, 3059, 3058,
	263, 71, 3057, 3054, 3052, 3051, 34, 3050, 33, 25,
	3049, 109, 3048, 244, 3046, 223, 130, 169, 151, 137,
	219, 227, 75, 76, 3045, 1544, 129, 95, 17, 3044,
	225, 3043, 178, 120, 3042, 77, 3038, 238, 377, 202,
	3037, 172, 7, 43, 32, 3036, 9, 3035, 199, 201,
	3031, 3030, 23, 55, 3029, 19, 3028, 3025, 3010, 3003,
	5, 3000, 2997, 2996, 2, 4, 2995, 3, 209, 152,
	124, 89, 67, 44, 122, 2994, 148, 166, 165, 2992,
	87, 2990, 2986, 2978, 1668, 2975, 248, 41, 2974, 2965,
	2963, 2955, 2954, 2949, 2941, 2940, 99, 38, 2939, 2936,
	2935, 2932, 78, 134, 2930, 2929, 2927, 2926, 37, 162,
	2925, 21, 2922, 30, 28, 36, 2916, 121, 2915, 12,
	171, 2913, 2912, 14, 2909, 2904, 10, 11, 2903, 2897,
	112, 2896, 88, 24, 146, 110, 2894, 2893, 81, 214,
	128, 2891, 2890, 240, 232, 191, 2889, 388, 229, 253,
	2887, 195, 2882, 2881, 2879, 2878, 2877, 2874, 922, 2873,
	2856, 237, 65, 84, 105, 2854, 2849, 2848, 80, 141,
	107, 104, 62, 79, 2846, 102, 189, 2845, 176, 2844,
	2838, 98, 2831, 2830, 2829, 2826, 2825, 174, 2822, 2817,
	181, 231, 2814, 2812, 2806, 2804, 228, 216, 2801,
}

//line mysql_sql.y:10347
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 526, 534, 534, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 110, 110, 109, 524, 524, 524, 525,
	525, 106, 127, 126, 129, 129, 128, 128, 125, 125,
	121, 124, 124, 123, 123, 122, 117, 119, 119, 118,
	120, 120, 107, 95, 108, 469, 469, 468, 468, 467,
	467, 421, 421, 466, 466, 466, 465, 465, 465, 464,
	464, 463, 463, 462, 462, 460, 460, 461, 459, 458,
	458, 458, 456, 456, 456, 452, 452, 454, 453, 453,
	455, 447, 447, 450, 450, 448, 448, 448, 448, 451,
	446, 446, 446, 445, 445, 94, 94, 94, 367, 367,
	93, 93, 381, 381, 381, 381, 381, 379, 379, 379,
	379, 379, 379, 378, 378, 377, 377, 382, 382, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 84,
	84, 84, 84, 84, 89, 89, 89, 531, 531, 530,
	530, 532, 532, 532, 532, 533, 533, 87, 87, 87,
	88, 376, 376, 376, 85, 86, 86, 366, 366, 371,
	371, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 375, 375, 375, 373, 373, 372,
	372, 374, 374, 78, 78, 78, 81, 80, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 79, 79, 79,
	79, 79, 79, 74, 74, 74, 74, 74, 73, 73,
	75, 75, 363, 363, 362, 90, 90, 91, 528, 528,
	527, 529, 529, 529, 529, 92, 98, 98, 98, 98,
	98, 98, 98, 97, 97, 100, 100, 99, 101, 83,
	83, 83, 83, 83, 83, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 494, 494, 494, 496, 496, 300,
	301, 535, 303, 299, 299, 299, 490, 490, 491, 492,
	493, 493, 493, 96, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 72, 77, 248, 248, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 236,
	236, 236, 231, 231, 231, 231, 232, 232, 233, 233,
	234, 234, 234, 234, 235, 235, 293, 293, 253, 253,
	253, 255, 255, 254, 252, 250, 250, 250, 250, 250,
	250, 251, 251, 251, 256, 256, 70, 76, 76, 76,
	507, 507, 71, 518, 518, 424, 424, 314, 314, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 429, 430, 310, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 48, 51, 47,
	47, 47, 352, 352, 46, 536, 536, 288, 288, 59,
	58, 50, 60, 61, 62, 63, 64, 65, 45, 57,
	57, 57, 57, 57, 57, 57, 57, 68, 68, 441,
	441, 538, 538, 538, 66, 67, 423, 423, 423, 56,
	55, 54, 53, 52, 52, 44, 44, 43, 43, 49,
	133, 134, 307, 307, 307, 309, 309, 305, 537, 537,
	395, 395, 308, 308, 42, 42, 42, 42, 69, 306,
	306, 287, 304, 304, 304, 12, 12, 10, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 24, 25, 27, 360, 360, 357, 26, 19, 18,
	18, 21, 17, 17, 20, 22, 23, 23, 9, 9,
	9, 9, 14, 14, 15, 154, 154, 204, 204, 502,
	502, 498, 498, 499, 499, 499, 500, 500, 501, 501,
	102, 435, 435, 435, 435, 435, 435, 8, 176, 176,
	434, 434, 434, 434, 434, 434, 364, 364, 479, 479,
	479, 480, 175, 175, 170, 170, 436, 436, 329, 481,
	481, 444, 444, 443, 443, 442, 442, 173, 173, 174,
	174, 157, 157, 113, 113, 449, 449, 449, 449, 457,
	457, 420, 420, 240, 240, 280, 280, 281, 281, 147,
	147, 148, 148, 148, 148, 148, 148, 487, 487, 489,
	489, 488, 172, 172, 168, 168, 169, 169, 169, 167,
	167, 166, 165, 165, 164, 162, 162, 162, 163, 163,
	163, 180, 180, 150, 150, 150, 149, 149, 149, 149,
	149, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 151, 151, 495, 495, 495, 425, 425,
	425, 432, 432, 262, 262, 263, 263, 261, 261, 152,
	152, 153, 153, 153, 153, 260, 260, 259, 155, 155,
	161, 160, 160, 156, 156, 156, 156, 270, 270, 269,
	269, 269, 269, 105, 111, 111, 112, 179, 179, 268,
	267, 267, 267, 178, 178, 177, 177, 171, 171, 159,
	159, 159, 159, 266, 158, 264, 523, 523, 522, 522,
	521, 519, 519, 519, 520, 520, 520, 520, 471, 471,
	471, 471, 471, 294, 294, 294, 298, 298, 297, 297,
	297, 297, 297, 302, 7, 7, 7, 7, 7, 7,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 37,
	188, 189, 38, 190, 190, 191, 191, 192, 192, 193,
	194, 195, 195, 195, 195, 36, 181, 181, 182, 182,
	183, 183, 184, 185, 185, 185, 187, 186, 35, 35,
	28, 140, 140, 141, 141, 141, 143, 143, 237, 237,
	237, 142, 142, 144, 144, 144, 503, 506, 504, 504,
	508, 508, 508, 509, 509, 509, 509, 510, 510, 29,
	130, 135, 513, 513, 513, 512, 512, 514, 514, 515,
	515, 284, 284, 285, 285, 138, 139, 139, 137, 132,
	146, 146, 146, 146, 146, 131, 136, 505, 511, 511,
	511, 361, 361, 358, 359, 359, 356, 355, 355, 355,
	517, 517, 516, 516, 516, 295, 295, 30, 351, 351,
	353, 354, 354, 354, 345, 345, 345, 345, 34, 349,
	349, 350, 350, 350, 350, 350, 346, 346, 348, 348,
	344, 344, 344, 344, 344, 33, 145, 145, 343, 343,
	340, 340, 338, 338, 339, 339, 337, 337, 337, 341,
	341, 40, 40, 40, 342, 342, 32, 32, 32, 115,
	114, 114, 114, 114, 283, 283, 282, 282, 116, 39,
	216, 216, 409, 409, 409, 409, 409, 427, 427, 427,
	410, 410, 410, 411, 411, 411, 412, 412, 412, 412,
	412, 426, 426, 428, 428, 428, 383, 383, 384, 384,
	384, 387, 387, 401, 401, 402, 402, 400, 400, 407,
	407, 406, 406, 405, 405, 404, 404, 403, 403, 403,
	403, 398, 398, 397, 397, 385, 385, 385, 385, 385,
	386, 386, 386, 396, 396, 399, 399, 224, 224, 225,
	225, 258, 258, 222, 222, 223, 223, 223, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 477, 477, 478, 227, 227, 238, 238,
	238, 238, 238, 238, 226, 226, 228, 228, 205, 205,
	203, 203, 196, 196, 197, 197, 198, 198, 198, 202,
	202, 201, 201, 201, 201, 199, 199, 200, 200, 200,
	200, 200, 200, 369, 369, 474, 474, 475, 475, 470,
	470, 470, 473, 473, 473, 473, 473, 476, 476, 476,
	472, 472, 206, 278, 278, 278, 296, 296, 296, 296,
	277, 277, 277, 221, 221, 220, 220, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 368,
	368, 311, 311, 312, 312, 247, 246, 246, 246, 246,
	246, 244, 245, 243, 243, 243, 243, 243, 242, 242,
	241, 241, 241, 347, 347, 239, 239, 230, 230, 230,
	229, 229, 229, 408, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 276,
	276, 276, 321, 321, 326, 326, 486, 486, 485, 207,
	207, 207, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 217, 217, 217, 392, 392, 392, 392, 393, 393,
	393, 393, 394, 394, 394, 390, 390, 391, 391, 330,
	331, 331, 433, 433, 388, 388, 389, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 440, 440, 440, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 497, 497, 497, 482, 482,
	482, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	274, 274, 274, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 332, 332,
	333, 333, 437, 437, 437, 437, 437, 437, 438, 438,
	439, 439, 439, 439, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 319, 271, 271, 271, 334, 327, 327,
	328, 328, 322, 322, 322, 322, 322, 322, 322, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 323, 323, 325, 325, 336, 336, 336, 335, 335,
	335, 335, 335, 335, 335, 219, 219, 219, 219, 316,
	316, 316, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 209, 209, 209, 209, 213, 213,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 214, 214, 214, 214, 214, 212,
	212, 212, 212, 212, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	103, 104, 104, 211, 279, 279, 413, 413, 416, 416,
	414, 414, 415, 417, 417, 417, 418, 418, 418, 419,
	419, 419, 422, 422, 286, 286, 286, 292, 292, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 2,
	5, 5, 0, 2, 7, 0, 1, 0, 1, 5,
	5, 3, 3, 2, 4, 4, 4, 4, 4, 1,
	1, 1, 3, 3, 1, 1, 1, 6, 8, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 4, 1, 3, 1, 4, 6, 6,
	4, 4, 4, 4, 3, 6, 3, 5, 1, 1,
	2, 2, 11, 8, 9, 1, 3, 2, 4, 0,
	2, 0, 1, 1, 1, 1, 0, 1, 0, 1,
	4, 2, 1, 5, 4, 4, 2, 5, 1, 3,
	2, 1, 5, 4, 4, 2, 0, 5, 0, 1,
	3, 3, 1, 3, 1, 3, 1, 3, 4, 0,
	1, 0, 1, 1, 3, 1, 1, 0, 4, 1,
	3, 2, 1, 0, 8, 0, 4, 7, 4, 0,
	2, 0, 2, 0, 2, 0, 4, 1, 3, 1,
	1, 5, 3, 4, 6, 4, 5, 2, 3, 1,
	3, 6, 0, 3, 0, 1, 2, 4, 4, 0,
	1, 3, 1, 3, 3, 0, 1, 1, 0, 2,
	2, 0, 2, 3, 3, 3, 1, 3, 3, 3,
	3, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 7, 7, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 2, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 4, 4, 3, 2, 2, 2,
	3, 2, 3, 4, 1, 3, 4, 0, 2, 1,
	1, 2, 2, 0, 1, 2, 4, 1, 3, 1,
	3, 2, 3, 1, 4, 3, 0, 1, 1, 2,
	5, 2, 2, 2, 0, 2, 3, 3, 0, 1,
	3, 1, 3, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 1, 7, 1, 3, 0, 1, 1, 3, 1,
	3, 0, 1, 1, 1, 12, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 9, 9,
	7, 1, 2, 3, 3, 3, 0, 4, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 4, 1, 1,
	3, 4, 3, 0, 1, 1, 1, 0, 2, 7,
	8, 8, 0, 3, 3, 0, 2, 0, 3, 0,
	5, 1, 3, 0, 3, 3, 0, 2, 9, 6,
	0, 2, 2, 3, 3, 4, 4, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 6, 0, 4, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 9, 10, 8, 0, 2, 11, 9, 11, 2,
	2, 8, 4, 5, 1, 3, 0, 3, 5, 10,
	0, 2, 0, 3, 2, 4, 3, 0, 2, 1,
	0, 2, 3, 0, 2, 3, 0, 3, 2, 4,
	3, 0, 1, 0, 1, 1, 0, 6, 0, 3,
	5, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 4, 6,
	5, 0, 2, 0, 2, 4, 5, 4, 5, 1,
	5, 6, 5, 0, 3, 0, 1, 0, 4, 1,
	3, 3, 3, 0, 1, 1, 3, 2, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 5, 4, 1, 3, 3, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 1, 1,
	1, 7, 9, 7, 9, 2, 1, 7, 9, 7,
	9, 8, 5, 0, 1, 0, 1, 1, 1, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 3, 3, 2, 2, 1,
	5, 6, 4, 1, 1, 1, 5, 4, 1, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 6, 1, 1, 1, 1, 1, 4,
	4, 4, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 1, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 5, 0, 1, 3,
	0, 1, 0, 2, 0, 1, 6, 8, 6, 6,
	5, 5, 5, 6, 6, 6, 6, 5, 6, 6,
	6, 6, 6, 6, 6, 6, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 4, 4, 4, 3,
	4, 6, 6, 7, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 8, 4, 2, 3, 2, 4, 2, 2,
	4, 6, 2, 2, 4, 6, 4, 2, 0, 1,
	2, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 0, 1,
	1, 3, 3, 3, 3, 3, 2, 1, 1, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 1,
	3, 4, 4, 5, 4, 5, 3, 4, 5, 6,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	2, 3, 5, 1, 1, 3, 0, 1, 0, 3,
	0, 3, 3, 0, 3, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -526, -534, -2, -5, 589, -1, -4, -104, -78,
	-7, -106, -107, -8, -102, -9, -10, -12, -82, -97,
	-99, -101, -100, -41, -11, -96, -73, -74, -84, -90,
	-93, -94, -95, -108, -103, -105, -147, -109, -110, 582,
	-79, -80, -81, -31, -30, -29, -28, -130, -135, 588,
	436, 13, 485, -14, -15, -487, -16, 254, -299, -300,
	-301, -303, -535, -42, -43, -44, -52, -53, -54, -55,
	-56, -66, -67, -68, -45, -46, -47, -50, -48, -59,
	-58, -60, -61, -62, -63, -64, -65, -49, -133, -134,
	-69, -51, -71, -70, -76, -72, -77, -132, -137, -13,
	229, -75, 75, -85, -86, -87, -88, -89, -91, -92,
	361, 367, 424, 581, 60, -148, -150, 592, 593, 157,
	158, 160, 161, -32, -33, -34, -35, -36, -37, -39,
	-38, -40, 225, 15, 521, -17, -20, -18, -21, -19,
	-26, -27, -25, -22, -24, -131, -23, -136, 249, 248,
	37, 315, 316, 317, 365, 247, 226, 14, 30, 41,
	341, -149, 81, 227, -151, 12, 596, -6, -3, -2,
	-117, -121, -125, -128, -129, -126, -127, -4, -104, 115,
	239, 583, -296, 357, 584, 586, 585, 84, 92, -289,
	-291, 361, 367, 581, 593, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 488, 568, 569, 570, 571, 516, 567, 339,
	340, 518, 266, 290, 392, 296, 303, 157, 176, 170,
	198, 190, 165, 270, 308, 271, 91, 160, 471, 105,
	448, 421, 163, 285, 287, 289, 292, 291, 293, 295,
	272, 342, 186, 181, 284, 268, 179, 273, 39, 274,
	203, 275, 276, 523, 444, 338, 450, 300, 419, 180,
	445, 288, 447, 205, 209, 462, 463, 174, 175, 452,
	465, 202, 246, 42, 520, 258, 466, 207, 201, 197,
	474, 304, 302, 200, 173, 196, 269, 64, 211, 210,
	212, 415, 416, 417, 418, 277, 278, 355, 461, 193,
	182, 343, 166, 22, 469, 253, 449, 368, 279, 297,
	305, 206, 208, 260, 265, 522, 423, 264, 301, 467,
	178, 257, 286, 252, 470, 167, 370, 280, 161, 294,
	464, 473, 63, 383, 172, 164, 243, 158, 262, 267,
	281, 282, 283, 514, 307, 306, 298, 194, 259, 199,
	184, 171, 195, 159, 261, 472, 384, 579, 341, 402,
	192, 189, 263, 236, 468, 451, 162, 406, 385, 187,
	309, 575, 576, 577, 356, 337, 310, 311, 185, 250,
	442, 443, 314, 412, 330, 386, 422, 393, 387, 218,
	318, 454, 456, 204, 578, 319, 320, 321, 446, 322,
	323, 324, 325, 360, 55, 57, 93, 95, 594, -374,
	-372, -296, 581, 367, 361, 341, 593, -190, -296, 595,
	-157, 38, -203, -296, -157, -75, -15, -14, -149, -150,
	-203, 233, -304, 23, 419, -83, 420, 229, 81, -296,
	-9, -95, -8, -102, -73, -147, 424, -302, -296, 315,
	315, -302, 233, -296, 264, 400, -424, 239, -378, -351,
	265, -377, -353, -380, -354, 31, 225, 227, 226, 261,
	15, 365, 235, 13, 12, 366, 247, 24, 25, 27,
	14, 367, 369, 28, 370, 373, 374, 375, 41, 378,
	379, 254, 84, 92, 87, 272, -189, -296, -328, -322,
	112, 255, -324, -317, -318, -320, -466, -460, -315, 81,
	139, 140, 147, 113, -319, -408, 35, 115, 530, 567,
	486, -272, -273, -274, -275, -276, -296, -461, -459, 87,
	96, 99, 102, 103, 101, 100, 151, 183, 98, 88,
	152, -150, 84, -482, 539, -290, 560, 568, 569, 570,
	571, 559, 60, -431, -439, 232, -437, 150, 188, 250,
	184, 13, 145, 412, 185, 536, 556, 488, 540, 563,
	532, 533, 534, 527, 528, 529, 531, 541, 543, 555,
	-440, 551, 561, 562, 549, 564, 565, 566, 86, 85,
	554, 553, 542, 537, 538, 544, 526, 535, 545, 546,
	552, 557, 558, 349, 105, 350, 351, 478, 342, 352,
	239, 419, 69, 353, 354, 355, 356, 357, 485, 358,
	70, 359, 348, 254, 402, 360, 187, 204, 490, 489,
	491, 482, 479, 477, 480, 481, 483, 484, 547, 548,
	550, -111, -112, 573, -166, -167, -265, 11, 6, 7,
	8, 9, -524, 421, 522, 87, 162, 159, -365, 162,
	111, 167, 166, -365, 318, 260, 362, -140, -342, 339,
	402, 322, 93, 264, -345, -343, -426, 312, 308, 234,
	-141, 108, 244, 243, 106, 478, 232, 376, 303, 55,
	57, -498, -499, 222, 223, 224, -489, 511, -488, -296,
	351, 95, 26, 233, 362, 260, 456, 454, 455, 457,
	458, 459, 460, -57, -441, -423, 451, 450, -308, 443,
	449, 441, 453, 444, 340, 324, 323, 225, 590, 512,
	-286, 386, 422, 475, 476, 363, 423, 462, 464, 445,
	105, 191, 188, 234, 236, 233, 339, 478, 402, 93,
	322, -498, 159, 462, 464, 264, 400, 40, -371, 412,
	-370, -372, 463, 474, 85, 86, 461, -286, 105, 442,
	442, -167, -265, -166, -148, -150, -105, -487, 234, 339,
	402, 264, 235, 233, 515, 236, 478, 232, 315, 362,
	260, 322, 93, -425, -495, 31, -432, 219, 220, 221,
	32, 33, -1, 119, 596, -322, -322, -6, 599, -6,
	-322, -296, -296, 154, -209, -213, -210, -212, -211, -215,
	-214, 188, 189, 150, 192, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 30, 204, 250, 184, 185,
	186, 187, 205, 170, 190, 519, 213, 171, 214, 172,
	215, 173, 216, 174, 175, 217, 176, 179, 180, 181,
	182, 178, 153, 81, 153, 87, -173, 256, -203, 153,
	-173, -167, -166, -167, -203, -277, -296, 421, 122, -83,
	-83, 420, -490, -491, -492, -494, 229, 420, 419, 153,
	272, 16, -302, -302, 79, -203, -353, 264, -378, -351,
	35, 78, 154, 237, 154, 78, 81, 363, 339, 402,
	364, 478, 233, 376, 236, 264, 377, 339, 402, 233,
	236, 478, 264, 339, 233, 236, 402, 264, 377, 441,
	442, 236, 26, 368, 371, 372, 442, -445, 474, 154,
	111, 108, 109, 110, -322, 129, -335, 122, 123, 124,
	125, 126, 127, 128, 136, 135, 146, 139, 140, 141,
	142, 143, 144, 145, 137, 138, 132, 112, 130, 134,
	131, 114, -150, -322, -328, 60, -320, -320, -320, -320,
	-408, -326, -322, 81, 81, 81, 153, 100, 87, -322,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, -438, 81, 81, -332, -333, 81, 81, -315,
	-277, 81, 87, 87, 81, 81, 81, 87, -333, -333,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, -167, 154, 81, -113, 38, -169, 21, -151, -150,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 96,
	594, 218, 467, 521, 165, 166, 167, -188, -296, -190,
	-181, -296, 236, -141, 236, 515, 514, -340, 239, -340,
	-340, -340, -340, 235, -340, 233, 233, 233, -340, 485,
	122, 122, 58, -500, 169, 154, -489, -172, 81, -307,
	130, 134, -307, 23, 262, 262, 262, -307, 302, -536,
	-537, 16, 132, -305, -537, -305, -305, -307, -538, 235,
	452, 42, 263, 262, -168, -169, -168, 446, 442, -395,
	447, 448, -309, -537, -308, -307, -307, -308, -307, -307,
	-307, 233, 236, 478, 322, 591, -536, -536, 30, 30,
	-340, -424, -203, -424, 512, -287, -296, -424, -424, -424,
	-501, 238, -531, -530, 465, -533, 467, 159, -372, 159,
	-372, -353, 264, 264, 154, 122, 23, -373, 122, 133,
	-372, -372, -373, -373, -226, 40, -295, 150, -296, 87,
	-226, 40, -528, -527, -203, -168, -151, -150, 82, 82,
	82, -424, -424, -424, -424, -424, -426, -424, -424, -424,
	-424, -302, -181, -190, 239, -424, -424, -152, -153, 141,
	-322, -296, -152, -3, -119, -118, 116, 117, 119, 584,
	357, 583, 587, 581, -372, 40, -419, 384, 383, -413,
	-415, 81, -414, 81, -414, -414, -414, 81, 81, -416,
	81, -416, -416, -413, -417, 81, -417, -418, 81, -418,
	-417, -296, -327, -328, -296, 38, -434, 60, -147, 81,
	30, 81, -296, -435, 60, -147, 81, 30, -168, -113,
	-169, 153, 96, 87, -83, 82, 154, -493, 102, 103,
	-496, 202, 194, -296, -98, 87, -7, -8, -9, -10,
	-41, -73, -147, -462, -460, 81, 31, 411, 78, 16,
	-379, 233, 478, 362, 260, 236, 339, -377, -360, -357,
	-355, -295, -353, -356, -355, -382, -277, 442, -114, 426,
	425, 314, -322, -322, -322, -322, -322, 101, 112, 337,
	102, 103, -317, -336, 31, 310, 311, -318, -318, -318,
	-318, -318, -318, -318, -318, -318, -318, -318, -318, -325,
	-334, -408, 81, 132, 130, 134, 131, 114, -320, -320,
	-318, -318, 82, 154, -486, -485, 116, -322, -322, -322,
	-296, -483, -484, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 353, 348, 354, 352, 342, 360,
	355, 356, 187, 509, 510, 503, 504, 505, 506, 507,
	508, -327, -327, -322, -483, -327, -271, 32, 31, -328,
	-328, -328, 82, -322, -497, 335, 334, 336, -170, -296,
	-327, 82, 82, 82, 96, -328, -328, -327, -318, -327,
	-484, -271, -271, -271, 141, -328, -328, -271, -271, -271,
	-271, 141, -271, -271, -271, -271, -271, -271, -271, -271,
	82, 82, 82, -168, -112, -443, -442, -322, 40, 574,
	-113, -322, -165, -164, -322, -525, 87, 87, 597, 468,
	469, 163, 166, 165, 34, 81, 81, 153, -340, -340,
	-340, 515, -503, -296, 112, -361, -358, -355, -296, -296,
	-351, -296, -296, -340, -340, -340, -203, -237, 52, 53,
	54, -355, -142, 55, 56, -501, -488, 34, -171, -296,
	-261, 17, -320, -320, -355, 264, -536, -307, -307, -288,
	-287, -309, -304, -309, -309, -261, -537, -307, -307, -309,
	-305, -261, -296, 442, -261, -261, -395, -306, -296, -306,
	-340, -287, -288, -288, -203, -203, -248, -249, 230, 346,
	347, 228, 226, 11, 227, -257, 303, -341, 486, -232,
	-233, 76, 41, -235, 388, 381, 266, 270, 91, 271,
	421, 272, 235, 274, 275, 276, 291, 293, 246, 277,
	278, 279, 412, 280, 158, 292, 281, 282, 283, 364,
	-227, 6, 325, 40, 50, 51, 435, 434, 524, 521,
	267, -503, -503, 30, 30, -361, -296, -296, -160, -155,
	-159, -156, -161, -264, -266, -158, 81, -203, -150, -296,
	154, 466, 468, 469, -531, -373, -531, -373, 31, 411,
	-376, 411, 31, -351, -370, 462, 464, -366, 87, 412,
	-356, -375, 78, 150, -442, -373, -373, -375, -375, 149,
	154, -529, 467, 468, 222, -113, -205, -203, -503, -360,
	-351, -296, -424, -205, -205, -296, -296, 81, 35, -296,
	-296, -260, 154, -259, 16, -297, -296, 34, 87, 153,
	-260, -120, -118, 118, -322, -6, 583, -322, -6, -6,
	-322, -6, -322, -422, 385, 96, 96, -279, 87, -279,
	96, 96, 96, 82, 87, -364, 78, -436, -329, -481,
	573, -175, 82, -170, -479, -480, -170, -174, -296, -436,
	-175, 82, -479, -113, -113, -296, 23, -83, -491, 153,
	154, -171, -379, -359, -356, -381, 141, -296, -367, 154,
	521, 600, 85, 237, -517, -516, 403, 82, 154, -446,
	238, 485, 87, 597, 419, 218, 101, 337, 102, 103,
	-408, -328, -325, -320, -320, -318, -318, -323, 251, -323,
	111, -322, -321, -485, 118, -322, 34, 34, 154, 79,
	153, 82, 82, 16, 16, 82, -322, 82, 82, 82,
	82, 16, 16, -322, 82, 153, 82, 82, 82, 82,
	79, 82, 154, 82, 154, -328, -322, -328, 82, 82,
	82, -322, -322, -322, -328, 82, -322, -322, -322, -322,
	-322, -322, -322, -322, -389, 437, -389, -389, 154, 82,
	87, 154, 22, 154, -162, 36, 37, -283, -282, 87,
	164, 167, 167, 166, -189, -191, -192, -193, -194, -195,
	132, 155, 156, -182, -183, -184, -185, -209, -277, 189,
	192, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 250, 184, 185, 186, 187, 205, 170, 190,
	171, 172, 173, 174, 175, 176, 179, 180, 181, 182,
	178, -296, -203, -203, -203, -340, -506, 389, 35, -518,
	154, 40, -516, 478, -138, 314, -344, 79, -145, 16,
	-203, -203, -203, -216, 34, 16, -154, -204, -296, 81,
	82, 154, -322, -352, 79, -296, -288, -261, -261, -203,
	-296, -261, -261, -307, -309, -309, -305, 153, -287, -216,
	-172, 154, -202, -293, -199, -201, 241, -312, -200, 244,
	-475, 242, 240, 106, 245, 299, 107, 235, -293, -293,
	241, -236, 237, 34, -293, -251, 235, 299, 242, 20,
	-250, 235, 107, -296, 241, 245, 240, -292, 122, -286,
	149, 237, 42, 364, -292, 525, -292, -292, -292, -292,
	-292, -292, -292, 273, 273, -292, -292, -292, -292, -292,
	-292, -292, -292, -292, -292, -292, 159, -292, -292, -292,
	-292, -292, -292, 81, 268, 269, -507, 389, 30, 345,
	345, -518, 30, -146, 339, 30, -267, -268, -269, -270,
	67, 71, 73, 68, 69, 70, 74, 30, 154, -294,
	-298, 34, -296, 87, -294, -150, -155, -160, -294, 81,
	-530, -532, 470, 467, 473, -375, -375, 237, 81, 122,
	-375, -375, 40, -295, -527, 474, 468, -180, 23, 154,
	78, -205, -182, -190, -261, -153, -155, -296, 87, -296,
	141, -261, 119, -6, 117, -124, -123, -122, 120, 581,
	587, 119, 119, 119, 82, 82, 82, 154, 82, 82,
	82, 154, 82, 154, -449, 447, 39, 154, 81, 82,
	154, 60, 154, 122, 82, 154, 82, 60, -180, 153,
	421, -296, -460, 82, -381, 154, 237, 153, 153, -357,
	367, -295, -359, 20, 521, -277, 38, -283, 122, 597,
	82, -323, -323, 111, -320, -317, 82, 119, -322, 117,
	-207, -209, 383, 384, -207, -208, -214, 150, 188, 250,
	187, 186, 184, 383, 384, -226, -296, -322, -322, 82,
	-322, -322, 16, -296, -226, -318, -322, -167, 82, 82,
	-388, -389, -388, -388, 82, 82, 82, 82, -388, 82,
	82, 82, 82, 82, 82, 82, 82, 81, -442, -449,
	-322, -322, -164, -163, 43, 598, 154, 122, 167, 375,
	82, 154, -277, 82, 154, -209, -172, -172, 81, -224,
	521, -203, -509, 449, 391, 401, -292, -314, -313, 341,
	41, -429, 412, 397, 398, -358, 264, -296, -515, 94,
	122, 78, 329, 330, 331, 332, -338, -339, -337, -341,
	-503, 81, 81, 81, -409, 319, -209, -203, -154, -296,
	16, 154, -502, 153, -1, -296, -351, -307, -261, -537,
	-261, -307, -307, -309, -296, -409, 34, -249, -206, -277,
	-200, -474, -475, -340, -296, 107, -474, 107, 81, -206,
	-277, -277, -252, -306, -277, -296, -296, -296, -255, -254,
	-277, -296, -296, -296, 107, 107, -231, 40, 47, 48,
	49, -292, -292, 191, -234, 40, 411, 413, 414, 96,
	96, 96, 96, 87, 87, 87, -292, -292, 96, 87,
	-298, 87, -476, 166, 44, 45, 96, 96, 96, 96,
	40, 87, -238, 40, 284, 288, 285, 286, 287, 87,
	96, 40, 96, 40, 96, 40, -296, 81, -477, -478,
	87, -509, -292, 345, -372, 122, -314, -514, 314, -139,
	91, 31, -176, 230, 227, -503, -363, -362, -277, -159,
	-159, -159, -159, 67, 67, 67, 72, 67, 72, 67,
	-269, -363, -161, -172, -298, 82, -523, -522, -521, -519,
	75, 238, 76, -327, 467, 471, 472, -359, -310, 87,
	-366, 14, -203, -203, -428, 294, 295, 82, -263, 18,
	153, -263, 115, -6, -120, -122, -322, -6, -322, 583,
	357, 584, 87, 96, 96, -457, 432, 427, 429, 107,
	-329, -444, -443, 60, -147, -170, -436, -480, -442, -296,
	60, -147, -436, -296, 96, 16, -356, -351, 141, 141,
	-296, 368, -367, 87, 390, 87, 233, 598, 87, -283,
	-317, -322, 82, -217, 175, 174, -217, 82, 82, -414,
	-414, -413, -416, -413, -217, -217, 82, 82, 23, 82,
	82, 82, -322, 82, 82, 154, -433, 487, -388, -388,
	-388, -388, -388, -388, -388, -388, -388, -388, -388, -388,
	-388, -388, -331, -330, 256, -457, 44, 45, -282, 87,
	87, 87, -193, -209, 231, -184, 40, 34, 34, -196,
	-197, -198, -206, -199, -201, 34, 81, 81, -510, 91,
	-504, 87, -296, -511, 91, 392, 152, 343, 40, 393,
	394, 409, 338, 96, 96, 399, -505, -296, -146, -513,
	51, 122, 87, -203, -337, -286, 149, 275, 322, -196,
	-196, -196, -410, 321, 20, 96, 140, -173, 79, 153,
	-155, -204, -296, 141, 82, -261, -296, -261, -261, -307,
	-410, -147, -253, 44, 46, -209, -472, -296, -470, -472,
	-296, -470, -470, -340, -322, -253, -206, 237, 30, 227,
	-256, 327, 328, -368, 300, 112, -368, 154, -162, -296,
	-226, -226, 30, 87, 87, -205, 82, 154, 122, -510,
	-504, 122, -373, 87, -511, -515, 122, 87, 154, -176,
	-176, -261, 154, 122, -178, -177, 78, 79, -179, 78,
	-177, 67, 67, -261, -521, -520, 23, -475, -475, -475,
	82, 82, -262, 19, 20, 141, -262, 119, 117, 119,
	119, -296, 82, 82, -420, 575, -453, -455, 427, 20,
	20, 14, 82, -436, -436, -351, -367, 412, -203, 154,
	598, -322, 82, -322, 82, 87, -167, 20, -420, -186,
	-209, -315, -147, -147, 82, 154, -147, -225, -258, -296,
	87, -196, 87, -508, 403, 87, 87, 96, 40, 96,
	152, 395, -430, -139, -512, 91, 122, 597, 81, -292,
	-292, -292, -296, 82, 82, 82, -411, 255, 96, 140,
	96, 140, 96, -294, -155, -296, -261, -502, 153, -261,
	-261, -411, -277, -221, -220, -218, 101, 112, 40, 381,
	-219, 91, 149, 289, 292, 291, 267, 290, -247, -311,
	78, 387, 327, 328, -341, 575, 516, 240, 106, 107,
	369, -312, 81, 81, 79, 309, 81, 81, -472, 82,
	-253, -277, 40, -256, 40, 300, -254, 149, -226, 82,
	-478, 87, -508, 87, -375, -513, 87, -503, -167, -362,
	-442, -322, 81, -322, 81, 67, 11, 18, -322, -328,
	239, -6, 584, 357, -240, 576, 87, 20, 87, -451,
	87, -363, -116, -447, -395, 272, 82, 82, -388, -391,
	-390, -394, 433, 301, 440, -328, -240, 520, -143, 521,
	-143, -224, -198, 82, 154, -292, -292, 82, 20, 521,
	342, 40, 96, 40, 396, 87, 102, 103, -284, -285,
	87, -346, -348, -277, 81, -226, -228, -295, 150, 87,
	-222, -223, -257, -341, -115, -114, -222, -412, 158, 96,
	140, 96, 96, -261, -261, -412, -218, 101, -318, 87,
	-228, -229, 40, 288, 284, 122, 122, -230, 40, 268,
	269, -239, 81, 299, 14, 191, 81, 107, 107, -203,
	-346, -346, -473, 329, 330, 331, 333, 332, -473, -346,
	-346, 81, -369, -368, -318, -292, 149, -512, -168, -171,
	-471, -296, 240, 20, 20, -296, -296, -280, 577, 96,
	87, 429, -421, 578, -456, 432, -450, -448, 427, 428,
	429, 430, 122, 82, -393, 114, 395, 399, -316, -319,
	96, 99, 183, 152, -280, -187, -296, -144, 59, 474,
	-258, -315, -315, -224, 87, 390, 87, 342, 598, 154,
	122, 82, 154, -413, -322, -383, 256, 154, -257, -286,
	-116, -383, -427, 166, 320, 521, 96, 140, 96, -167,
	-427, 87, 87, 96, 81, -437, 30, 87, -347, 81,
	82, 82, 82, 82, -346, -226, -292, 82, 82, 154,
	81, 20, 87, -458, 238, -454, -455, 431, -448, 20,
	429, 20, 20, 87, -392, -393, 399, -316, -319, 573,
	438, 438, 438, 34, 299, 412, -285, 87, -349, -348,
	-162, 82, -384, 308, 20, -257, -292, -384, 320, 96,
	140, 96, -168, 82, -322, -332, -292, 82, -242, -241,
	517, -346, -349, 79, -349, 79, -349, 79, -349, 79,
	82, -226, -296, 240, -281, -296, -451, -465, 81, 96,
	-453, -452, -454, 20, -451, 20, -451, -451, 111, 439,
	439, 439, 87, 368, -350, 246, 91, 521, 327, 328,
	-162, 20, -385, 301, 302, -386, -399, 304, -226, 96,
	82, -296, -246, -244, -245, 78, 445, 297, 298, 82,
	-473, -473, -473, -473, -247, 82, 154, -469, 30, 82,
	-464, -463, -278, -459, -296, 432, 433, 87, -451, -392,
	-292, 87, 326, -277, 81, -397, 305, 81, -395, 81,
	-395, 107, 330, -368, -245, 78, -244, 78, 15, 14,
	-349, -349, -349, -349, -296, -468, -467, -466, 82, 154,
	153, 96, -296, -382, -387, 306, 96, -318, 81, -318,
	81, -396, 303, 81, -243, 294, 295, 30, 166, -243,
	154, 122, -463, -296, 82, -401, 81, 20, 82, -382,
	82, -382, 81, 122, -318, 101, 40, 296, -467, 40,
	-322, 153, -402, -400, 256, -386, 82, 82, 82, -382,
	96, 82, -296, 82, 154, -296, -398, 307, 82, -400,
	-403, 60, 96, -407, -404, 81, -257, 258, 132, -407,
	-257, -406, -405, 306, 259, 81, 82, 154, -296, 255,
	81, -328, -405, -404, -328, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 824, 825, 826, 827, 828, 829, 0,
	0, 0, 0, 598, 599, 0, 567, 0, 0, 0,
	0, 0, 0, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 288, 284, 209, 210, 211, 212, 213, 295, 296,
	435, 0, 0, 0, 0, 679, -2, 56, 0, 277,
	0, 268, 268, 830, 831, 832, 833, 834, 835, 836,
	837, 838, -2, 611, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 343, 344,
	345, 339, 340, 342, 341, -2, 0, 611, 0, 0,
	0, 699, 0, 0, 716, 738, 23, 0, 7, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	0, 19, 0, 19, 0, 0, 0, 1186, 1187, 1188,
	1189, -2, 1678, 1656, 1821, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762,
	1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1822, 0,
	261, 259, 1656, 1678, 1738, 1771, 1821, 0, 843, 0,
	657, 0, 662, 1140, 657, 289, 600, 601, 699, 699,
	565, 0, 325, 0, 1669, 329, 0, 0, 0, 562,
	319, 320, 321, 322, 323, 324, 0, 0, 823, 0,
	0, 315, 0, 283, 1729, 0, 0, 0, 0, 0,
	0, 153, 948, 155, 950, 159, 166, 0, 0, 171,
	172, 175, 176, 177, 178, 179, 0, 183, 0, 185,
	188, 0, 190, 191, 0, 194, 195, 196, 0, 206,
	207, 208, 951, 952, 953, -2, 84, 841, 1590, 1480,
	0, 1487, 1488, 1499, 1510, 1266, 1267, 1268, 1269, 0,
	0, 0, 0, 0, 1276, 1277, 0, 1294, 1837, 1876,
	0, 1284, 1285, 1286, 1287, 1288, 93, 105, 106, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 0, 1540, 1541, 1542,
	1453, 1253, 1186, 0, 1846, 0, 1866, 1871, 1872, 1873,
	1874, 1865, 0, 0, 1438, 0, 1428, 0, 0, -2,
	-2, 0, 0, 1796, -2, 1843, 1862, 1870, 1847, 1869,
	1839, 1840, 1841, 1834, 1835, 1836, 1838, 1848, 1850, 1861,
	0, 1857, 1867, 1868, 0, 0, 0, 0, 107, 108,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1444, -2, 1446, 1447, 1449, -2, 1451,
	1452, -2, 1455, 1456, 1457, -2, -2, 1460, 1461, 1462,
	1463, 1464, 1465, 1468, -2, -2, -2, -2, 1440, 1441,
	1442, 1443, 1432, 1433, 1434, 1435, 1436, 1437, -2, -2,
	-2, 699, 774, 0, -2, 0, 0, 0, 721, 724,
	727, 730, 0, 57, 58, 0, 278, 279, 267, 269,
	0, 273, 0, 266, 0, 0, 0, 0, 0, 980,
	980, 980, 980, 980, 0, 980, 0, 0, 0, 980,
	871, 0, 955, 956, 957, 978, 979, 1032, 0, 0,
	0, 616, 612, 613, 614, 615, 687, 0, 689, 692,
	542, 542, 489, 0, 0, 0, 542, 0, 503, 495,
	0, 0, 0, 542, 0, 0, 694, 694, 0, 545,
	552, 542, 542, -2, 542, 542, 542, 0, 0, 509,
	510, 511, 495, 495, 514, 515, 516, 527, 528, 553,
	1614, 0, 0, 980, 435, 0, 435, 0, 435, 435,
	435, 618, 1766, 1676, 1743, 1729, 0, 0, 234, 1796,
	239, 0, 1677, 1692, 0, 0, 1710, 0, -2, 0,
	305, 694, 0, 700, 0, 699, 0, 0, 435, 435,
	435, 435, 435, 1031, 435, 435, 435, 435, 0, 0,
	0, 435, 435, 0, 0, 739, 740, 735, 736, 737,
	741, 742, 5, 6, 19, 0, 0, 0, 0, 0,
	0, 63, 62, 0, 1591, 1609, 1545, 1546, 1547, 1596,
	1549, 1600, 1600, 1600, 1600, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 0, 0, 1589, 1569, 1598, 1598,
	1598, 1596, 1593, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1603, 1603, 1606,
	1606, 1603, 0, 1478, 0, 0, 0, 0, 661, 0,
	0, 694, -2, 0, 566, 326, 1190, 0, 0, 330,
	331, 0, 0, 346, 0, 349, 334, 335, 336, 0,
	133, 0, 317, 318, 0, 0, 285, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 163, 160, 167,
	170, 180, 187, 0, 199, 201, 204, 161, 168, 173,
	174, 181, 202, 162, 164, 165, 169, 203, 205, 182,
	186, 200, 184, 189, 192, 193, 198, 0, 134, 0,
	0, 0, 0, 0, 1486, 0, 0, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 1480, 0, 0, 1272, 1273, 1274, 1275,
	1278, 0, 1295, 0, 0, 0, 0, 1539, 1543, 0,
	1478, 1478, 0, 1478, 1474, 0, 0, 0, 0, 0,
	0, 1478, 1414, 0, 0, 1416, 1429, 0, 0, 1418,
	1419, 0, 1422, 1423, 1478, 0, 1478, 1427, 1410, 1411,
	0, 1474, 1474, 1474, 0, 0, 1474, 1474, 1474, 1474,
	1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, 0, 0,
	0, 694, 0, 0, 682, 0, 663, 0, 718, 720,
	0, 722, 723, 725, 726, 728, 729, 731, 732, 59,
	0, 0, 0, 0, 271, 0, 276, 0, 840, 0,
	0, 856, 980, 872, 980, 980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 980, 980, 980, 0, 995,
	0, 0, 0, 618, 617, 0, 688, 0, 0, 747,
	0, 0, 488, 0, 495, 542, 542, 501, 502, 497,
	496, 548, 549, 545, 0, 545, 545, 747, 0, 521,
	522, 523, 542, 542, 529, 695, 530, 531, 545, 0,
	550, 551, 747, 0, 0, 747, 747, 0, 539, 540,
	541, 0, 0, 980, 0, 558, 497, 497, 1615, 1616,
	0, 0, 989, 0, 0, 0, 561, 0, 0, 0,
	0, 619, 214, 217, 0, 220, 0, 1766, 0, 1766,
	0, 227, 0, 0, 0, 0, 0, 0, 257, 258,
	0, 0, 0, 0, 248, 251, 1134, 1135, 945, 946,
	252, 253, 297, 298, 0, 663, 717, 719, 713, 714,
	715, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 594, 0, 596, 0, 0, 0, 755, 749, 751,
	818, 93, 755, 8, 80, 77, 0, 19, 0, 0,
	19, 19, 0, 19, 262, 0, 1612, 1610, 1611, 1548,
	1597, 0, 1574, 0, 1575, 1576, 1577, 0, 0, 1570,
	0, 1571, 1572, 1573, 1564, 0, 1565, 1566, 0, 1567,
	1568, 260, 0, 1479, 844, 0, 636, 649, 631, 0,
	638, 0, 1141, 620, 649, 622, 0, 638, 663, 685,
	663, 0, 327, 0, 332, 0, 0, 348, 350, 351,
	352, 337, 338, 563, 313, 314, 306, 307, 308, 309,
	310, 311, 312, 316, 103, 0, 286, 287, 0, 0,
	0, 147, 148, 149, 150, 151, 152, 154, 138, 584,
	586, 937, 949, 0, 940, 0, 157, 197, 130, 0,
	0, 0, 1481, 1482, 1483, 1484, 1485, 1489, 0, 1491,
	1493, 1495, 1497, 0, 1515, -2, -2, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1500,
	1513, 1514, 0, 0, 0, 0, 0, 0, 1511, 1511,
	1506, 0, 1270, 0, 1292, 1296, 0, 0, 0, 0,
	94, 1473, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 0, 0, 1480, 0, 0, 0, 1475, 1476, 0,
	0, 0, 1369, 0, 0, 1375, 1376, 1377, 0, 644,
	0, 1439, 1415, 1430, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 773, 775, 0, 653, 655, 656, 0,
	683, 696, 701, 702, 705, 55, 60, 53, 1006, 280,
	281, 0, 0, 275, 0, -2, 858, 0, 0, 0,
	0, 980, 0, 886, 0, 433, 931, 0, 0, 0,
	947, 970, 976, 0, 0, 0, 1010, 873, 878, 879,
	880, 874, 875, 881, 882, 0, 690, 0, 0, 787,
	487, 0, 543, 544, 492, 1729, 497, 747, 747, 504,
	498, 505, 547, 506, 507, 508, 0, 747, 747, 542,
	545, 532, 546, 545, 535, 536, 0, 554, 559, 555,
	0, 557, 512, 513, 1010, 692, 364, 365, 406, 406,
	406, 389, 406, 0, 0, 377, 1617, 0, 0, 0,
	0, 386, 1617, 0, 1617, 1617, 1617, 1617, 1617, 1617,
	1617, 0, 0, 1617, 1617, 1617, 1617, 1617, 1617, 1617,
	1617, 1617, 1617, 1617, 0, 1617, 1617, 1617, 1617, 1617,
	1120, 1617, 0, 990, 396, 397, 398, 399, 404, 405,
	0, 430, 0, 0, 0, 433, 0, 920, 760, 0,
	761, 762, 758, 789, 813, 813, 0, 813, 793, 1140,
	0, 0, 225, 226, 215, 0, 216, 0, 228, 229,
	0, 231, 232, 233, 240, 1676, 1743, 235, 237, 0,
	0, 241, 254, 255, 256, 0, 0, 246, 247, 0,
	0, 300, 301, 303, 0, 711, 581, 1138, 582, 583,
	587, 0, 0, 590, 591, 592, 593, 858, 0, 925,
	926, 747, 0, 756, 0, 752, 819, 0, 821, 0,
	747, 0, 78, 19, 0, 71, 68, 0, 0, 0,
	0, 0, 1592, 1544, 1613, 0, 0, 0, 1594, 0,
	0, 0, 0, 61, 665, 627, 0, 630, 646, 0,
	650, 0, 0, 642, 635, 639, 0, 0, 659, 621,
	0, 0, 626, 711, 686, 1191, 0, 333, 347, 0,
	0, 0, 0, 141, 934, 0, 142, 146, 136, 0,
	0, 0, 939, 0, 936, 941, 0, 156, 0, 0,
	131, 132, 1000, 1006, 0, 0, 1490, 1492, 1494, 1496,
	1498, 0, 1501, 1511, 1511, 1507, 0, 1502, 0, 1504,
	0, 1481, 0, 1297, 0, 0, 0, 0, 0, 0,
	0, 1359, 1360, 0, 0, 1364, 0, 1366, 1367, 1368,
	1370, 0, 0, 0, 1374, 0, 1413, 1431, 1417, 1420,
	0, 1424, 0, 1426, 0, 699, 0, 0, 1334, 1334,
	1334, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 1289, 0, 1290, 1291, 0, 776,
	665, 0, 0, 0, 708, 706, 707, 0, 1004, 0,
	282, 270, 272, 0, 0, 0, 846, 847, 849, 0,
	852, 853, 854, 0, 859, 860, 862, 863, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1661, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 857, 692, 692, 1077, 0, 893, 1617, 981, 437,
	0, 0, 933, 0, 909, 0, 0, 0, -2, 0,
	0, 0, 0, 1012, 0, 0, 0, 605, 609, 23,
	693, 0, 748, 490, 0, 491, 542, 499, 500, 747,
	1140, 524, 525, 747, 542, 542, 545, 0, 556, 1012,
	0, 989, 367, 0, 1149, 1150, 407, 0, 1156, 1165,
	980, 1223, 0, 1165, 0, 0, 1167, 1168, 0, 0,
	0, 0, 390, 391, 0, 376, 0, 0, 0, 0,
	375, 0, 0, 417, 0, 0, 0, 0, 1618, 1617,
	1617, 0, 384, 385, 0, 388, 0, 0, 0, 0,
	0, 0, 0, 1617, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1111, 0, 0, 0,
	0, 0, 0, 0, 1126, 1127, 893, 1617, 0, 0,
	0, 437, 907, 916, 0, 0, 0, 0, 0, 0,
	780, 0, 0, 779, 0, 0, 0, 0, 0, 692,
	814, 0, 816, 817, 791, -2, 0, 760, 796, 1478,
	218, 219, 0, 0, 224, 242, 244, 0, 0, 0,
	243, 245, 249, 250, 299, 302, 304, 681, 0, 0,
	0, 1033, 0, 597, 745, 750, 757, 820, 822, 94,
	753, 745, 0, 81, 19, 80, 72, 73, 0, 19,
	0, 0, 0, 0, 1602, 1601, 1587, 0, 1588, 1599,
	1604, 0, 1607, 0, 669, 0, 0, 649, 651, 0,
	0, 649, 0, 0, 658, 0, 0, 649, 684, 0,
	0, 564, 104, 353, 0, 0, 0, 0, 0, 585,
	0, 938, 138, 0, 0, 158, 0, 0, 0, 1006,
	1477, 1503, 1505, 0, 1512, 1508, 1271, 1279, 1293, 0,
	0, 1299, 1311, 1311, 0, 0, 1302, 1600, 1600, 1305,
	1596, 1598, 1596, 1311, 1311, 0, 95, 0, 0, 1365,
	0, 0, 0, 645, 0, 0, 0, 1332, 1334, 1334,
	1340, 1335, 1341, 1342, 1334, 1334, 1334, 1334, 1347, 1334,
	1334, 1334, 1334, 1334, 1334, 1334, 1334, 1330, 654, 669,
	697, 698, 703, 704, 0, 54, 1006, 0, 274, 0,
	0, 851, 0, 0, 0, 864, 0, 0, 1142, 0,
	0, 0, 897, 894, 895, 896, 0, 928, 438, 439,
	440, 441, 0, 0, 0, 932, 0, 920, 902, 0,
	0, 0, 971, 972, 973, 974, 975, -2, 984, 0,
	0, 1142, 1142, 1142, 1020, 0, 1011, 657, 0, -2,
	0, 0, 607, 0, 0, 788, 493, 747, 517, 0,
	533, 747, 747, 542, 560, 1020, 0, 366, 408, 0,
	1155, 1180, 1166, 1180, 1224, 1180, 1180, 980, 0, 408,
	0, 0, 378, 414, 0, 0, 0, 0, 374, 411,
	705, 415, 416, 418, 0, 420, 380, 392, 393, 394,
	395, 0, 0, 0, 387, 400, 401, 402, 403, 1088,
	1089, 1090, 1093, 1094, 1095, 1096, 0, 0, 1099, 1100,
	1101, 1102, 1103, 1177, 1178, 1179, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1128, 1129, 1130, 1131, 1132, 1133, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 0, 0, 1123,
	0, 897, 0, 0, 0, 0, 928, 909, 0, 919,
	0, 921, 922, 0, 0, 628, 747, 292, 0, 783,
	777, 0, 766, 781, 782, 769, 0, 771, 0, 767,
	768, 747, 759, 790, 815, 792, 795, 797, 798, 804,
	0, 0, 0, 0, 221, 222, 223, 230, 0, 457,
	236, 712, 1139, 588, 589, 1034, 1035, 595, 743, 0,
	0, 743, 76, 79, 0, 74, 0, 0, 0, 0,
	66, 64, 1595, 0, 0, 671, 118, 0, 0, 0,
	647, 0, 652, 649, 634, 643, 633, 640, 641, 660,
	649, 625, 624, 1192, 328, 0, 935, 138, 143, 144,
	145, 139, 137, 942, 0, 944, 0, 1002, 0, 0,
	1509, 1298, 1280, 1300, 1312, 1313, 1301, 1281, 1282, 1303,
	1304, 1306, 1307, 1308, 1309, 1310, 1283, 1361, 0, 1363,
	1371, 1372, 0, 1421, 1425, 0, 0, 0, 1338, 1339,
	1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 699, 1331, 0, 671, 709, 710, 1005, 1007,
	839, 842, 848, 850, 0, 861, 0, 0, 0, 0,
	1143, 1144, 1146, 1147, 1148, 0, 0, 1142, 870, 0,
	0, 888, 889, 899, 0, 0, 0, 443, 444, 0,
	0, 0, 456, 452, 453, 454, 434, 927, 916, 905,
	0, 0, 915, 0, 985, 1617, 1617, 1617, 0, 0,
	0, 0, 1023, 0, 0, 1014, 0, 813, 0, 0,
	747, 606, 609, 610, 691, 494, 747, 537, 534, 747,
	1023, 363, 379, 409, 0, -2, 0, 1181, 0, 1169,
	1181, 0, 0, 1180, 0, 368, 408, 0, 0, 0,
	421, 424, 425, 422, 1219, 0, 423, 0, 413, 419,
	1091, 1092, 0, 1097, 1098, 0, 1122, 0, 0, 426,
	0, 0, 0, 427, 432, 902, 0, 917, 0, 923,
	924, 699, 0, 0, 763, 784, 0, 0, 764, 0,
	765, 770, 772, 291, 799, 0, 0, 801, 802, 803,
	794, 238, 733, 0, 0, 754, 734, 0, 19, 0,
	0, 69, 1605, 1608, 673, 0, 670, 119, 0, 0,
	0, 0, 648, 632, 623, 140, 135, 943, 121, 0,
	1003, 0, 1373, 0, 1334, 1333, 1327, 0, 673, 0,
	867, 865, 876, 876, 1077, 0, 993, 0, 1079, 1617,
	1617, 0, 898, 887, 0, 929, 930, 0, 445, 446,
	0, 449, 455, 900, 901, 0, 0, 913, 0, 0,
	0, 0, 977, -2, 0, -2, 1026, 0, 1021, 0,
	1013, 0, 1016, 747, 747, -2, 603, 608, 0, 518,
	538, 1026, 410, 1182, -2, 1195, 1197, 0, 990, 1200,
	1201, 0, 0, 0, 0, 0, 0, 1245, 1209, 0,
	0, 1213, 1214, 1215, 0, 0, 1218, 0, 1527, 1528,
	0, 1222, 0, 0, 0, 0, 0, 0, 0, 1163,
	369, 370, 0, 372, 373, 1220, 412, 1617, 382, 1121,
	1124, 1125, 431, 428, 429, 905, 908, 629, 694, 293,
	294, 785, 0, 778, 808, 805, 0, 0, 744, 746,
	70, 75, 0, 0, 675, 0, 672, 0, 666, 668,
	129, 637, 91, 112, 0, 0, 1362, 1412, 1337, 0,
	1328, 0, 1322, 1323, 1324, 1329, 675, 0, 868, 883,
	869, 991, 1145, 1078, 0, 0, 0, 1077, 0, 0,
	442, 447, 0, 450, 451, 906, 903, 904, 0, 911,
	0, 0, 966, 1596, 0, 986, 987, 1136, 1137, 988,
	1036, -2, 1085, 0, 997, 121, 1036, 1017, 0, 1024,
	0, 1022, 1015, 699, 604, 1017, 1196, 1198, 1199, 1202,
	1203, 1204, 1250, 1251, 1252, 0, 0, 1207, 1247, 1248,
	1249, 1208, 0, 0, 0, 0, 0, 1525, 1526, 1243,
	0, 0, 1170, 1172, 1173, 1174, 1175, 1176, 1171, 0,
	0, 0, 1162, 1164, 371, 0, 1617, 918, 290, 0,
	0, 809, 811, 806, 807, 65, 67, 82, 0, 674,
	120, 0, 83, 0, 109, 0, 122, 123, 0, 0,
	0, 0, 0, 1336, 1325, 0, 0, 0, 0, 0,
	1529, 1530, 1531, 0, 664, 0, 866, 0, 884, 885,
	1080, 1081, 1082, 992, 890, 0, 892, 448, 910, 913,
	0, 959, 0, 705, 0, 1038, 0, 989, 1087, 1617,
	999, 1038, 1009, 0, 1019, 0, 1028, 0, 1025, 694,
	362, 1205, 1206, 0, 0, 1428, 1617, 0, 1238, 0,
	959, 959, 959, 959, 0, 381, 0, 786, 800, 0,
	0, 0, 92, 96, 0, 118, 115, 0, 124, 0,
	0, 0, 0, 1001, 0, 1314, 0, 0, 0, 1318,
	1319, 1320, 1321, 0, 0, 891, 912, 914, 958, 967,
	968, 705, 996, 0, 1075, 1086, 0, 998, 1018, 1027,
	0, 1030, 602, 1246, 0, 1212, 0, 1217, 1226, 1239,
	0, 0, 1151, 0, 1153, 0, 1157, 0, 1159, 0,
	0, 383, 810, 812, 0, 677, 667, 85, 0, 0,
	113, 114, 116, 0, 125, 0, 127, 128, 0, 1315,
	1316, 1317, 855, 877, 960, 1617, 0, 0, 964, 965,
	969, 0, 1063, 0, 0, 1069, 0, 1076, 1091, 1029,
	1210, 1216, 1225, 1227, 1228, 0, 1240, 1241, 1242, 1244,
	959, 959, 959, 959, 1161, 676, 0, 1008, 0, 97,
	0, 99, 101, 102, 1183, 110, 111, 117, 126, 1326,
	0, 962, 0, 1039, 0, 1041, 0, 0, 0, 0,
	0, 1073, 0, 1211, 1229, 0, 1230, 0, 0, 0,
	1152, 1154, 1158, 1160, 678, 86, 87, 0, 98, 0,
	0, 961, 963, 0, 1043, 0, 1064, 0, 0, 0,
	0, 0, 0, 0, 1231, 1233, 1234, 0, 0, 1232,
	0, 0, 100, 1184, 1040, 1037, 0, 1075, 1065, 0,
	1067, 0, 0, 0, 0, 1235, 1237, 1236, 88, 89,
	90, 0, 0, 1045, 0, 1061, 1066, 1068, 1070, 0,
	1074, 1072, 1185, 1044, 0, 1057, 1042, 0, 1071, 1046,
	-2, 0, 1062, 1047, -2, 0, 1055, 0, 0, 1048,
	1056, 0, 1051, 0, 0, 0, 1050, 0, -2, 1058,
	0, 0, 1052, -2, 0, 1060, 1059,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 599, 596,
	123, 122, 124, 3, 600, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 597, 135, 598, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:750
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:757
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:763
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:771
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:777
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:781
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:796
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:800
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:806
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:811
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:815
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:847
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:855
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:863
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:873
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:893
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:899
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:906
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:914
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:920
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:929
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:955
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:963
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:973
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:991
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:998
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1021
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1027
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1031
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1037
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1046
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1056
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1060
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1066
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1079
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1085
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1106
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1119
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1126
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1130
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1136
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1140
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1146
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1153
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1161
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1165
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1179
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1183
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1187
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1200
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1206
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1215
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1226
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1230
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1236
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1240
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1246
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1250
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1256
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1280
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1299
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1303
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1307
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1312
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1316
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1323
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1331
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1338
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1343
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1350
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1359
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1383
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1387
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1393
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1399
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1417
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1434
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1457
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1461
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1465
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1470
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1480
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1493
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1504
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1517
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1521
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1531
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1557
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1569
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1584
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1593
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1597
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1620
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1624
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1630
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1637
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1646
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1650
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1656
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1660
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1664
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1668
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1865
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1872
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1889
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1893
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1899
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1906
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1914
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1918
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1922
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1926
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1932
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1936
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1942
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1949
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1956
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1965
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2019
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2026
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2032
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2036
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2059
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2068
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2076
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2084
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2107
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2130
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2137
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2144
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2152
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2159
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2166
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2175
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2179
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2183
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2189
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2193
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2199
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2203
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2209
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2213
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2230
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2235
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2239
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2243
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2247
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2251
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2255
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2259
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2263
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2267
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2273
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2277
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2308
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2328
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2338
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2345
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2356
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2367
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2371
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2377
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2387
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2393
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2397
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2403
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2409
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2413
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2417
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2421
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2439
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2445
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2449
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2488
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2534
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2575
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2579
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2585
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2591
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2596
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2597
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2598
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2603
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2620
		{
			yyLOCAL = &tree.AlterSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2636
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2647
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2656
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2660
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2666
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2673
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2682
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2692
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2701
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2711
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2721
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2730
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2738
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2742
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2746
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2750
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2754
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2763
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2769
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2773
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2777
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2789
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2793
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2797
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2802
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2833
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2837
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2842
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2848
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2854
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2863
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2867
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2873
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2880
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2888
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2895
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2902
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2909
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2916
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2923
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2931
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2938
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2945
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2954
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2958
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2965
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2977
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2993
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3006
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3012
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3023
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3034
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3038
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3043
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3047
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3056
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3072
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3076
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3092
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3120
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3124
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3128
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3132
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3138
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3143
		{
			yyVAL.item = nil
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3183
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3189
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3197
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3201
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3205
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3214
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3218
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3224
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3229
		{
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3233
		{
		}
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3248
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3266
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3272
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3278
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3284
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3290
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3296
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3302
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3311
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3315
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3319
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3331
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3352
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3362
		{
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3364
		{
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3373
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3383
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3392
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3396
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3400
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3406
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3412
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3424
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3433
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3455
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3459
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3465
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3477
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3491
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3497
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3504
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3509
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3513
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3517
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3522
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3526
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3532
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3545
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3549
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3555
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3560
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3564
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3568
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3574
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3580
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3584
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3590
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3596
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3600
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3604
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3610
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3614
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3638
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3647
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3656
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3665
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3669
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3675
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3684
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3693
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3703
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3707
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3714
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3724
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3730
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3736
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3745
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3752
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3763
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3768
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3775
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3791
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3804
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3815
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3819
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3825
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3830
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3837
		{
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3839
		{
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3842
		{
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3851
		{
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3855
		{
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3860
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3869
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3876
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3882
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3890
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3897
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3904
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3924
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3934
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3938
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3944
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3951
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3957
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3965
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3972
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3979
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3998
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4002
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4011
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4015
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4021
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4030
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4034
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4040
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4044
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4050
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4054
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4060
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4065
		{
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4076
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4080
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4087
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4092
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4096
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4102
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4106
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4112
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4116
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4125
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4138
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4145
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4152
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4170
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4189
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4195
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4202
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4206
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4219
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4223
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4228
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4232
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4239
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4244
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4251
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4257
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4261
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4265
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4269
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4273
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4277
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4283
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4290
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4299
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4303
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4309
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4321
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4326
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4330
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4336
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4340
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4344
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4353
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4359
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4365
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4369
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4375
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4380
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4384
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4388
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4393
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4397
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4406
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4410
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4418
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4422
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4426
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4440
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4444
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4454
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4464
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4474
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4486
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4494
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4502
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4511
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4519
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4527
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4535
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4543
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4551
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4559
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4567
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4575
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4585
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4596
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4610
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4614
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4618
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4623
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4627
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4631
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4640
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4644
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4649
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4653
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4658
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4662
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4668
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4672
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4678
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4682
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4687
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4691
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4696
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4704
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4710
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4718
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4726
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4736
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4742
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4751
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4760
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4769
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4779
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4783
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4793
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4797
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4801
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4805
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4811
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4821
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4825
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4831
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4841
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4847
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4853
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4857
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4861
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4867
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4871
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4877
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4881
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4887
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4891
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4897
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4901
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4911
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4924
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4930
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4936
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4949
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4967
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4971
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4977
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4987
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4991
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4995
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5000
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5004
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5008
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5012
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5021
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5025
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5029
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5033
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5038
		{
			yyVAL.str = ""
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5042
		{
			yyVAL.str = yyDollar[1].str
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5046
		{
			yyVAL.str = yyDollar[2].str
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5052
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5058
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5062
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5066
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5070
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5074
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5080
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 839:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5115
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5125
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5131
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 842:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5137
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5147
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5152
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5158
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5165
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5169
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5175
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5181
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5186
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5190
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5194
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5198
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5205
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5217
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5222
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5228
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5235
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5239
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5245
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5251
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5255
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5259
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5265
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5271
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5277
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5286
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5298
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5310
		{
			yyVAL.str = yyDollar[1].str
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5314
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5320
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5324
		{
			yyVAL.str = "DEFINER = "
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5328
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5333
		{
			yyVAL.str = ""
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5337
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5351
		{
			yyVAL.str = ""
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5359
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5365
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5375
		{
			yyVAL.str = yyDollar[1].str
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5379
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5385
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5392
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5398
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5406
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5419
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5426
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5434
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5440
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5449
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5461
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5473
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5485
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5491
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5498
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5506
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5512
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5520
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5526
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5534
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5540
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5549
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5553
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5558
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5562
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5569
		{
			yyVAL.str = yyDollar[3].str
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5574
		{
			yyVAL.str = ""
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5578
		{
			yyVAL.str = yyDollar[2].str
		}
	case 918:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5598
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5612
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5618
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5624
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5630
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5639
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5648
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5657
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5662
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5668
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5676
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5782
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5786
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5792
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5802
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5806
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5812
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5822
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5826
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5830
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5839
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5845
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5852
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5858
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5867
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5874
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5883
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5887
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5893
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5907
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5911
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5915
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5920
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5924
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5928
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5932
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5938
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5961
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5983
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5987
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5991
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5995
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5999
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6005
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6009
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6015
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6020
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6025
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6029
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6033
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6037
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6041
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6047
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6062
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6072
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6076
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6085
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6091
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6095
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6101
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6105
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6109
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6114
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6118
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6124
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6135
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6146
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6157
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6161
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6167
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6179
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6188
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6201
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6208
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6218
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6228
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6236
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6247
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6251
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6256
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6260
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6267
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6278
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6291
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6305
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6313
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6320
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6327
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6334
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6341
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6345
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6349
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6357
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6364
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6375
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6382
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6393
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6400
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6407
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6414
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6421
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6425
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6430
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6434
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6438
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6447
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6461
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6468
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6479
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6492
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6498
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6502
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6508
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6517
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6531
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6537
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6541
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6547
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6554
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6563
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6567
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6576
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6581
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6585
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6590
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6594
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6604
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6608
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6619
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6627
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6635
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6643
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6654
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6663
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6673
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6683
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6687
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6692
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6696
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6705
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6711
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6715
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6721
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6725
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6734
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6740
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6744
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6748
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6754
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6758
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6762
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6766
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6770
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6778
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6783
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6787
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6791
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6795
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6799
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6803
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6807
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6811
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6815
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6819
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6823
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6827
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6831
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6835
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6839
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6843
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6847
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6851
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6855
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6859
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6863
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6867
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6871
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6875
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6879
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6883
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6887
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6891
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6897
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6901
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6907
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6913
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6917
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6923
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6927
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6931
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6935
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6939
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6957
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6961
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6970
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6975
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6981
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6988
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6992
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6998
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7002
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7006
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7012
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7016
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7022
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7031
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7040
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7063
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7088
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7102
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7108
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7117
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7126
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7135
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7144
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7154
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7162
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7168
		{
			yyVAL.str = ""
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7172
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7182
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7188
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7194
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7213
		{
			yyVAL.str = ""
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7217
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7223
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7229
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7233
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7237
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7243
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7247
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7251
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7255
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7261
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7265
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7269
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7278
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7284
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7288
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7294
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7298
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7302
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7306
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7310
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7314
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7319
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7323
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7327
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7331
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7335
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7339
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7343
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7347
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7351
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7355
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7368
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7372
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7376
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7380
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7384
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7388
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7394
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7398
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7403
		{
			yyVAL.str = ""
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7407
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7413
		{
			yyVAL.str = ""
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7417
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7423
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7435
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7442
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7449
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7456
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7463
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7472
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7478
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7484
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7488
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7492
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7496
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7500
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7505
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7512
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7516
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7520
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7525
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7529
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7534
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7538
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7554
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7560
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7564
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7568
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7572
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7576
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7580
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7584
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7588
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7592
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7596
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7600
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7604
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7608
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7614
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7618
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7622
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7626
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7630
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7634
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7638
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7642
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7646
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7650
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7654
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7658
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7663
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7671
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7675
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7679
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7683
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7692
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7696
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7700
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7704
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7708
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7714
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7722
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7730
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7739
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7743
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7752
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7758
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7762
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7768
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7777
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7789
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7806
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7823
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7836
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7849
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7861
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7875
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7890
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7905
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7922
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7937
		{
		}
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7944
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7948
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7952
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7958
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7962
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7966
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7970
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7976
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7980
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7984
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7990
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7998
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8012
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8019
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8028
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8033
		{
			yyVAL.str = ","
		}
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8037
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8042
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8049
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8075
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8086
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8096
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8106
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8116
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8125
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8134
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8144
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8154
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8164
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8174
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8184
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8194
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8204
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8214
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8224
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8234
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8244
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8254
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8273
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8281
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8289
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8297
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8305
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8315
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8323
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8332
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8340
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8348
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8356
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8364
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8375
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8385
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8397
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8408
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8430
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8466
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8478
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8490
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8501
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8509
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8516
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8523
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8535
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8543
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8553
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8563
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8571
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8582
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8591
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8600
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8608
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8618
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8626
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8640
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8646
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8650
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8669
		{
		}
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8671
		{
		}
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8712
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8723
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8727
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8731
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8737
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8742
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8746
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8752
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8756
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8763
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8767
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8771
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8779
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8783
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8787
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8791
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8797
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8801
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8805
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8809
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8813
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8817
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8821
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8825
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8829
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8833
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8841
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8845
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8849
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8853
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8857
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8861
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8865
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8869
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8873
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8877
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8887
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8893
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8897
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8904
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8908
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8912
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8918
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8922
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8926
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8930
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8934
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8938
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8942
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8948
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8952
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8956
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8960
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8966
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8979
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8984
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8990
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8994
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9007
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9012
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9016
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9020
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9024
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9028
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9035
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9039
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9053
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9057
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9064
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9075
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9080
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9086
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9098
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9122
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9135
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9148
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9161
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9174
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9187
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9200
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9213
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9226
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9239
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9252
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9267
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9294
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9336
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9372
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9408
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9425
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9437
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9457
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9477
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9497
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9513
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9526
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9539
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9552
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9565
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9577
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9589
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9601
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9613
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9625
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9637
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9649
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9661
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9673
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9686
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9699
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9714
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9722
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9731
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9741
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9764
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9769
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9775
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9782
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9786
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9791
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9795
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9801
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9807
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9814
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9821
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9830
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9837
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9844
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9853
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9857
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9861
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9867
		{
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9869
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9879
		{
			yyVAL.str = ""
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9883
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

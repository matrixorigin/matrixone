// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const SEQUENCE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const CONSTRAINT = 57547
const SPATIAL = 57548
const FULLTEXT = 57549
const FOREIGN = 57550
const KEY_BLOCK_SIZE = 57551
const SHOW = 57552
const DESCRIBE = 57553
const EXPLAIN = 57554
const DATE = 57555
const ESCAPE = 57556
const REPAIR = 57557
const OPTIMIZE = 57558
const TRUNCATE = 57559
const MAXVALUE = 57560
const PARTITION = 57561
const REORGANIZE = 57562
const LESS = 57563
const THAN = 57564
const PROCEDURE = 57565
const TRIGGER = 57566
const STATUS = 57567
const VARIABLES = 57568
const ROLE = 57569
const PROXY = 57570
const AVG_ROW_LENGTH = 57571
const STORAGE = 57572
const DISK = 57573
const MEMORY = 57574
const CHECKSUM = 57575
const COMPRESSION = 57576
const DATA = 57577
const DIRECTORY = 57578
const DELAY_KEY_WRITE = 57579
const ENCRYPTION = 57580
const ENGINE = 57581
const MAX_ROWS = 57582
const MIN_ROWS = 57583
const PACK_KEYS = 57584
const ROW_FORMAT = 57585
const STATS_AUTO_RECALC = 57586
const STATS_PERSISTENT = 57587
const STATS_SAMPLE_PAGES = 57588
const DYNAMIC = 57589
const COMPRESSED = 57590
const REDUNDANT = 57591
const COMPACT = 57592
const FIXED = 57593
const COLUMN_FORMAT = 57594
const AUTO_RANDOM = 57595
const RESTRICT = 57596
const CASCADE = 57597
const ACTION = 57598
const PARTIAL = 57599
const SIMPLE = 57600
const CHECK = 57601
const ENFORCED = 57602
const RANGE = 57603
const LIST = 57604
const ALGORITHM = 57605
const LINEAR = 57606
const PARTITIONS = 57607
const SUBPARTITION = 57608
const SUBPARTITIONS = 57609
const CLUSTER = 57610
const TYPE = 57611
const ANY = 57612
const SOME = 57613
const EXTERNAL = 57614
const LOCALFILE = 57615
const URL = 57616
const PREPARE = 57617
const DEALLOCATE = 57618
const RESET = 57619
const EXTENSION = 57620
const INCREMENT = 57621
const CYCLE = 57622
const MINVALUE = 57623
const PROPERTIES = 57624
const PARSER = 57625
const VISIBLE = 57626
const INVISIBLE = 57627
const BTREE = 57628
const HASH = 57629
const RTREE = 57630
const BSI = 57631
const ZONEMAP = 57632
const LEADING = 57633
const BOTH = 57634
const TRAILING = 57635
const UNKNOWN = 57636
const EXPIRE = 57637
const ACCOUNT = 57638
const ACCOUNTS = 57639
const UNLOCK = 57640
const DAY = 57641
const NEVER = 57642
const PUMP = 57643
const MYSQL_COMPATBILITY_MODE = 57644
const SECOND = 57645
const ASCII = 57646
const COALESCE = 57647
const COLLATION = 57648
const HOUR = 57649
const MICROSECOND = 57650
const MINUTE = 57651
const MONTH = 57652
const QUARTER = 57653
const REPEAT = 57654
const REVERSE = 57655
const ROW_COUNT = 57656
const WEEK = 57657
const REVOKE = 57658
const FUNCTION = 57659
const PRIVILEGES = 57660
const TABLESPACE = 57661
const EXECUTE = 57662
const SUPER = 57663
const GRANT = 57664
const OPTION = 57665
const REFERENCES = 57666
const REPLICATION = 57667
const SLAVE = 57668
const CLIENT = 57669
const USAGE = 57670
const RELOAD = 57671
const FILE = 57672
const TEMPORARY = 57673
const ROUTINE = 57674
const EVENT = 57675
const SHUTDOWN = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const ENGINES = 57683
const LOW_CARDINALITY = 57684
const ADMIN_NAME = 57685
const RANDOM = 57686
const SUSPEND = 57687
const ATTRIBUTE = 57688
const HISTORY = 57689
const REUSE = 57690
const CURRENT = 57691
const OPTIONAL = 57692
const FAILED_LOGIN_ATTEMPTS = 57693
const PASSWORD_LOCK_TIME = 57694
const UNBOUNDED = 57695
const SECONDARY = 57696
const USER = 57697
const IDENTIFIED = 57698
const CIPHER = 57699
const ISSUER = 57700
const X509 = 57701
const SUBJECT = 57702
const SAN = 57703
const REQUIRE = 57704
const SSL = 57705
const NONE = 57706
const PASSWORD = 57707
const MAX_QUERIES_PER_HOUR = 57708
const MAX_UPDATES_PER_HOUR = 57709
const MAX_CONNECTIONS_PER_HOUR = 57710
const MAX_USER_CONNECTIONS = 57711
const FORMAT = 57712
const VERBOSE = 57713
const CONNECTION = 57714
const TRIGGERS = 57715
const PROFILES = 57716
const LOAD = 57717
const INFILE = 57718
const TERMINATED = 57719
const OPTIONALLY = 57720
const ENCLOSED = 57721
const ESCAPED = 57722
const STARTING = 57723
const LINES = 57724
const ROWS = 57725
const IMPORT = 57726
const MODUMP = 57727
const OVER = 57728
const PRECEDING = 57729
const FOLLOWING = 57730
const GROUPS = 57731
const DATABASES = 57732
const TABLES = 57733
const EXTENDED = 57734
const FULL = 57735
const PROCESSLIST = 57736
const FIELDS = 57737
const COLUMNS = 57738
const OPEN = 57739
const ERRORS = 57740
const WARNINGS = 57741
const INDEXES = 57742
const SCHEMAS = 57743
const NODE = 57744
const LOCKS = 57745
const TABLE_NUMBER = 57746
const COLUMN_NUMBER = 57747
const TABLE_VALUES = 57748
const NAMES = 57749
const GLOBAL = 57750
const SESSION = 57751
const ISOLATION = 57752
const LEVEL = 57753
const READ = 57754
const WRITE = 57755
const ONLY = 57756
const REPEATABLE = 57757
const COMMITTED = 57758
const UNCOMMITTED = 57759
const SERIALIZABLE = 57760
const LOCAL = 57761
const EVENTS = 57762
const PLUGINS = 57763
const CURRENT_TIMESTAMP = 57764
const DATABASE = 57765
const CURRENT_TIME = 57766
const LOCALTIME = 57767
const LOCALTIMESTAMP = 57768
const UTC_DATE = 57769
const UTC_TIME = 57770
const UTC_TIMESTAMP = 57771
const REPLACE = 57772
const CONVERT = 57773
const SEPARATOR = 57774
const TIMESTAMPDIFF = 57775
const CURRENT_DATE = 57776
const CURRENT_USER = 57777
const CURRENT_ROLE = 57778
const SECOND_MICROSECOND = 57779
const MINUTE_MICROSECOND = 57780
const MINUTE_SECOND = 57781
const HOUR_MICROSECOND = 57782
const HOUR_SECOND = 57783
const HOUR_MINUTE = 57784
const DAY_MICROSECOND = 57785
const DAY_SECOND = 57786
const DAY_MINUTE = 57787
const DAY_HOUR = 57788
const YEAR_MONTH = 57789
const SQL_TSI_HOUR = 57790
const SQL_TSI_DAY = 57791
const SQL_TSI_WEEK = 57792
const SQL_TSI_MONTH = 57793
const SQL_TSI_QUARTER = 57794
const SQL_TSI_YEAR = 57795
const SQL_TSI_SECOND = 57796
const SQL_TSI_MINUTE = 57797
const RECURSIVE = 57798
const CONFIG = 57799
const DRAINER = 57800
const MATCH = 57801
const AGAINST = 57802
const BOOLEAN = 57803
const LANGUAGE = 57804
const WITH = 57805
const QUERY = 57806
const EXPANSION = 57807
const ADDDATE = 57808
const BIT_AND = 57809
const BIT_OR = 57810
const BIT_XOR = 57811
const CAST = 57812
const COUNT = 57813
const APPROX_COUNT_DISTINCT = 57814
const APPROX_PERCENTILE = 57815
const CURDATE = 57816
const CURTIME = 57817
const DATE_ADD = 57818
const DATE_SUB = 57819
const EXTRACT = 57820
const GROUP_CONCAT = 57821
const MAX = 57822
const MID = 57823
const MIN = 57824
const NOW = 57825
const POSITION = 57826
const SESSION_USER = 57827
const STD = 57828
const STDDEV = 57829
const MEDIAN = 57830
const STDDEV_POP = 57831
const STDDEV_SAMP = 57832
const SUBDATE = 57833
const SUBSTR = 57834
const SUBSTRING = 57835
const SUM = 57836
const SYSDATE = 57837
const SYSTEM_USER = 57838
const TRANSLATE = 57839
const TRIM = 57840
const VARIANCE = 57841
const VAR_POP = 57842
const VAR_SAMP = 57843
const AVG = 57844
const ARROW = 57845
const ROW = 57846
const OUTFILE = 57847
const HEADER = 57848
const MAX_FILE_SIZE = 57849
const FORCE_QUOTE = 57850
const PARALLEL = 57851
const UNUSED = 57852
const BINDINGS = 57853
const DO = 57854
const DECLARE = 57855
const KILL = 57856
const QUERY_RESULT = 57857

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8704

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 94,
	21, 554,
	-2, 535,
	-1, 103,
	215, 746,
	-2, 815,
	-1, 122,
	42, 385,
	215, 385,
	242, 392,
	243, 392,
	417, 385,
	-2, 415,
	-1, 440,
	291, 93,
	393, 93,
	-2, 1378,
	-1, 498,
	67, 1184,
	-2, 1518,
	-1, 499,
	67, 1202,
	-2, 1489,
	-1, 503,
	67, 1203,
	-2, 1517,
	-1, 525,
	67, 1117,
	-2, 1572,
	-1, 526,
	67, 1118,
	-2, 1571,
	-1, 527,
	67, 1119,
	-2, 1561,
	-1, 528,
	67, 1536,
	-2, 1556,
	-1, 529,
	67, 1537,
	-2, 1557,
	-1, 530,
	67, 1538,
	-2, 1563,
	-1, 531,
	67, 1539,
	-2, 1546,
	-1, 532,
	67, 1540,
	-2, 1554,
	-1, 533,
	67, 1541,
	-2, 1564,
	-1, 534,
	67, 1542,
	-2, 1565,
	-1, 535,
	67, 1543,
	-2, 1570,
	-1, 536,
	67, 1544,
	-2, 1575,
	-1, 537,
	67, 1545,
	-2, 1576,
	-1, 539,
	67, 1181,
	-2, 1370,
	-1, 546,
	67, 1190,
	-2, 1396,
	-1, 550,
	67, 1194,
	-2, 1435,
	-1, 551,
	67, 1195,
	-2, 1513,
	-1, 559,
	67, 1205,
	-2, 1498,
	-1, 561,
	67, 1207,
	-2, 1508,
	-1, 562,
	67, 1208,
	-2, 1531,
	-1, 573,
	67, 1099,
	-2, 1566,
	-1, 574,
	67, 1100,
	-2, 1567,
	-1, 575,
	67, 1101,
	-2, 1568,
	-1, 582,
	21, 555,
	-2, 518,
	-1, 638,
	412, 415,
	413, 415,
	-2, 386,
	-1, 683,
	104, 1370,
	115, 1370,
	135, 1370,
	-2, 1345,
	-1, 720,
	21, 555,
	-2, 518,
	-1, 820,
	21, 554,
	-2, 1006,
	-1, 1148,
	67, 1252,
	-2, 1515,
	-1, 1149,
	67, 1253,
	-2, 1516,
	-1, 1310,
	1, 772,
	68, 772,
	533, 772,
	-2, 779,
	-1, 1561,
	68, 1331,
	136, 1331,
	-2, 1500,
	-1, 1562,
	68, 1327,
	136, 1327,
	-2, 1499,
	-1, 1563,
	68, 1309,
	136, 1309,
	-2, 1486,
	-1, 1564,
	68, 1310,
	136, 1310,
	-2, 1491,
	-1, 1565,
	68, 1311,
	136, 1311,
	-2, 1423,
	-1, 1566,
	68, 1312,
	136, 1312,
	-2, 1417,
	-1, 1567,
	68, 1313,
	136, 1313,
	-2, 1361,
	-1, 1568,
	68, 1314,
	136, 1314,
	-2, 1488,
	-1, 1569,
	68, 1315,
	136, 1315,
	-2, 1421,
	-1, 1570,
	68, 1316,
	136, 1316,
	-2, 1416,
	-1, 1571,
	68, 1317,
	136, 1317,
	-2, 1409,
	-1, 1573,
	68, 1320,
	136, 1320,
	-2, 1531,
	-1, 1574,
	68, 1300,
	136, 1300,
	-2, 1518,
	-1, 1575,
	68, 1329,
	136, 1329,
	-2, 1489,
	-1, 1576,
	68, 1329,
	136, 1329,
	-2, 1517,
	-1, 1577,
	68, 1329,
	136, 1329,
	-2, 1379,
	-1, 1578,
	68, 1327,
	136, 1327,
	-2, 1508,
	-1, 1579,
	68, 1324,
	136, 1324,
	-2, 1401,
	-1, 1580,
	67, 1282,
	68, 1282,
	136, 1282,
	355, 1282,
	356, 1282,
	357, 1282,
	-2, 1360,
	-1, 1581,
	67, 1283,
	68, 1283,
	136, 1283,
	355, 1283,
	356, 1283,
	357, 1283,
	-2, 1362,
	-1, 1582,
	67, 1286,
	68, 1286,
	136, 1286,
	355, 1286,
	356, 1286,
	357, 1286,
	-2, 1490,
	-1, 1583,
	67, 1288,
	68, 1288,
	136, 1288,
	355, 1288,
	356, 1288,
	357, 1288,
	-2, 1473,
	-1, 1584,
	67, 1290,
	68, 1290,
	136, 1290,
	355, 1290,
	356, 1290,
	357, 1290,
	-2, 1422,
	-1, 1585,
	67, 1292,
	68, 1292,
	136, 1292,
	355, 1292,
	356, 1292,
	357, 1292,
	-2, 1405,
	-1, 1586,
	67, 1293,
	68, 1293,
	136, 1293,
	355, 1293,
	356, 1293,
	357, 1293,
	-2, 1406,
	-1, 1587,
	67, 1295,
	68, 1295,
	136, 1295,
	355, 1295,
	356, 1295,
	357, 1295,
	-2, 1359,
	-1, 1588,
	68, 1334,
	136, 1334,
	355, 1334,
	356, 1334,
	357, 1334,
	-2, 1384,
	-1, 1589,
	68, 1334,
	136, 1334,
	355, 1334,
	356, 1334,
	357, 1334,
	-2, 1397,
	-1, 1590,
	68, 1337,
	136, 1337,
	355, 1337,
	356, 1337,
	357, 1337,
	-2, 1380,
	-1, 1591,
	68, 1334,
	136, 1334,
	355, 1334,
	356, 1334,
	357, 1334,
	-2, 1458,
	-1, 1604,
	1, 773,
	68, 773,
	533, 773,
	-2, 779,
	-1, 1663,
	21, 554,
	-2, 646,
	-1, 1846,
	65, 461,
	136, 461,
	-2, 910,
	-1, 2148,
	88, 779,
	131, 779,
	168, 779,
	171, 779,
	-2, 858,
	-1, 2150,
	276, 974,
	-2, 953,
	-1, 2161,
	88, 779,
	131, 779,
	168, 779,
	171, 779,
	-2, 858,
	-1, 2171,
	65, 461,
	136, 461,
	-2, 911,
	-1, 2220,
	88, 779,
	131, 779,
	168, 779,
	171, 779,
	-2, 859,
	-1, 2248,
	276, 974,
	-2, 954,
	-1, 2677,
	68, 830,
	136, 830,
	-2, 779,
	-1, 2681,
	68, 830,
	136, 830,
	-2, 779,
	-1, 2695,
	68, 834,
	136, 834,
	-2, 779,
	-1, 2700,
	68, 835,
	136, 835,
	-2, 779,
}

const yyPrivate = 57344

const yyLast = 30510

var yyAct = [...]int{
	470, 2221, 2681, 1215, 2689, 2680, 2653, 451, 2626, 1129,
	449, 2517, 472, 2595, 2642, 2260, 2578, 2474, 2579, 2195,
	2454, 2404, 2217, 2302, 2096, 848, 2411, 2491, 2398, 2215,
	1551, 2097, 1035, 1403, 2415, 2462, 2216, 2321, 2270, 143,
	143, 987, 496, 1658, 2300, 143, 386, 393, 682, 2144,
	393, 583, 2296, 1269, 1320, 1318, 1849, 2219, 2249, 2030,
	1817, 2026, 1132, 1071, 1694, 1868, 1431, 1386, 2132, 2269,
	1869, 949, 1356, 2031, 1125, 453, 1657, 2154, 398, 1559,
	2094, 1735, 404, 1702, 2071, 1703, 2035, 2088, 1890, 1455,
	442, 1776, 578, 2005, 443, 2002, 1615, 714, 2000, 2024,
	1557, 1910, 448, 1904, 1734, 1451, 619, 1438, 1267, 1432,
	1439, 1286, 391, 31, 1379, 1450, 1359, 688, 964, 1646,
	1819, 1814, 3, 1951, 1330, 1614, 1214, 691, 30, 2224,
	578, 692, 42, 1605, 1272, 390, 19, 966, 1306, 712,
	387, 8, 143, 388, 6, 1357, 389, 7, 1697, 1123,
	1294, 93, 1128, 1452, 1277, 884, 452, 1331, 1483, 1437,
	1383, 1062, 1597, 1044, 1178, 1555, 1329, 977, 1328, 1462,
	1539, 642, 441, 460, 1162, 1114, 382, 42, 731, 1426,
	1408, 1122, 1027, 674, 686, 1665, 1344, 929, 1305, 379,
	450, 973, 618, 1014, 675, 406, 16, 580, 988, 1185,
	1184, 9, 947, 4, 392, 1061, 132, 1364, 135, 634,
	407, 1945, 582, 1945, 616, 1737, 138, 137, 1469, 2394,
	2297, 1459, 1695, 2095, 1290, 2500, 1434, 843, 581, 849,
	136, 2384, 591, 401, 2208, 136, 2508, 38, 124, 104,
	136, 751, 1016, 136, 1722, 2207, 142, 142, 1730, 375,
	31, 2535, 377, 136, 396, 136, 402, 38, 124, 104,
	711, 136, 1467, 1456, 1974, 30, 2104, 1681, 656, 42,
	136, 136, 1000, 19, 2385, 1001, 1205, 786, 8, 92,
	1397, 6, 1367, 1368, 7, 689, 577, 133, 1682, 1925,
	1081, 984, 133, 1017, 1816, 1698, 2567, 133, 1099, 136,
	133, 38, 124, 104, 652, 2565, 1078, 92, 139, 444,
	133, 779, 133, 568, 1340, 567, 569, 570, 1074, 571,
	572, 993, 994, 1067, 592, 2307, 991, 1080, 133, 990,
	993, 994, 2582, 2583, 1131, 784, 685, 684, 1777, 760,
	758, 403, 762, 2501, 2502, 1115, 1815, 2396, 1119, 716,
	789, 790, 791, 788, 1911, 767, 133, 2493, 768, 2599,
	2600, 2399, 2400, 2401, 2402, 657, 1912, 2098, 1913, 2098,
	763, 2493, 1118, 2496, 2299, 1134, 1717, 725, 1380, 143,
	724, 2410, 2112, 1372, 584, 2507, 770, 1110, 697, 2133,
	696, 698, 1463, 2213, 2140, 393, 393, 2016, 143, 1639,
	2006, 2313, 723, 1596, 899, 734, 1536, 1940, 1809, 1376,
	1261, 1260, 782, 783, 2267, 1865, 1938, 1822, 2014, 695,
	781, 1727, 754, 1641, 659, 1201, 2316, 719, 721, 1198,
	103, 2210, 134, 1200, 1197, 1199, 1203, 1204, 1707, 755,
	2569, 1202, 734, 2560, 2044, 1120, 2381, 2306, 437, 395,
	2478, 439, 122, 2308, 1842, 765, 438, 394, 822, 2372,
	2510, 2511, 757, 2416, 982, 2673, 1117, 700, 2581, 718,
	2011, 2012, 2690, 2608, 761, 764, 2564, 1133, 2519, 1140,
	1143, 1144, 2615, 972, 746, 2013, 2515, 2516, 693, 2519,
	1141, 1468, 658, 2010, 720, 1472, 1474, 1475, 756, 1002,
	2542, 2334, 777, 778, 1220, 2664, 887, 1395, 1396, 701,
	2365, 1010, 2571, 2572, 766, 42, 42, 687, 2463, 2464,
	2465, 2467, 2466, 2333, 907, 911, 913, 915, 917, 918,
	920, 2525, 924, 921, 922, 923, 1828, 689, 902, 903,
	904, 905, 885, 886, 908, 2476, 888, 694, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 900, 906,
	727, 728, 2654, 1023, 1022, 1073, 759, 910, 912, 914,
	916, 919, 1116, 2439, 1208, 1209, 1210, 1211, 1212, 1213,
	1206, 1207, 769, 736, 735, 1457, 722, 2008, 1457, 1830,
	1831, 1832, 1833, 744, 946, 948, 1004, 2382, 2360, 739,
	740, 2645, 986, 985, 901, 742, 689, 1457, 971, 2356,
	743, 2116, 970, 1944, 772, 699, 2691, 773, 619, 2322,
	736, 735, 2685, 2697, 2124, 715, 2163, 1484, 950, 402,
	2490, 926, 2383, 729, 1015, 828, 1723, 1672, 751, 2509,
	1460, 993, 994, 2039, 954, 775, 824, 825, 826, 827,
	993, 994, 2036, 2039, 2570, 1943, 878, 958, 992, 1012,
	957, 956, 397, 2503, 2504, 1996, 983, 1471, 951, 952,
	953, 961, 955, 1953, 1952, 989, 959, 578, 578, 578,
	1470, 581, 1039, 1039, 1458, 143, 2007, 1381, 2017, 2314,
	1896, 1821, 39, 1068, 2209, 1941, 1892, 1894, 1671, 1670,
	105, 393, 948, 1065, 1065, 105, 1142, 1669, 1731, 653,
	105, 1020, 1370, 105, 771, 1041, 1668, 2646, 1076, 750,
	2214, 1371, 1473, 105, 1369, 105, 661, 2475, 1046, 1750,
	1751, 105, 662, 1373, 858, 859, 39, 1111, 1097, 2282,
	105, 105, 2703, 745, 1825, 1826, 2684, 613, 614, 615,
	776, 1039, 1836, 1039, 724, 792, 1037, 1037, 1824, 1375,
	687, 1082, 1018, 1019, 821, 1321, 653, 980, 2040, 105,
	2009, 585, 830, 774, 996, 997, 1130, 999, 2040, 704,
	709, 710, 931, 2033, 974, 978, 978, 2034, 2037, 655,
	1321, 2696, 654, 933, 836, 2648, 979, 2440, 2442, 2443,
	2444, 2441, 974, 787, 974, 1112, 2361, 2362, 582, 2328,
	787, 1599, 665, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1011, 2702, 1072, 748, 1173,
	1174, 1079, 963, 2358, 2693, 1183, 1003, 2357, 1005, 2038,
	1847, 2049, 2643, 2644, 1229, 995, 655, 1710, 998, 654,
	2068, 1106, 909, 1893, 2674, 1235, 751, 2149, 1127, 1696,
	664, 42, 1033, 1034, 667, 666, 1237, 1242, 1243, 585,
	42, 1030, 1031, 1032, 1105, 2669, 1837, 749, 578, 1102,
	1021, 1545, 1101, 1092, 1093, 1656, 1655, 1722, 787, 1754,
	1008, 1009, 1045, 1013, 787, 1714, 1047, 1145, 1108, 375,
	749, 2657, 2694, 1124, 1060, 1059, 1088, 1598, 1083, 1066,
	2068, 1512, 1848, 1411, 1511, 924, 921, 922, 923, 1656,
	1084, 1759, 1465, 1758, 1757, 1755, 1283, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1113, 1104, 1811, 1262, 582, 1684,
	1103, 1268, 1100, 2670, 1456, 1121, 1550, 706, 707, 708,
	143, 1516, 1304, 1039, 1228, 1309, 1310, 1684, 2656, 1276,
	143, 1848, 1126, 619, 2631, 1216, 1319, 1219, 1284, 1465,
	1039, 1230, 1096, 1549, 1012, 789, 790, 791, 788, 386,
	1095, 1236, 787, 1238, 1447, 1393, 927, 1756, 1164, 962,
	1495, 975, 1656, 1176, 1265, 2628, 1287, 1024, 2589, 2584,
	2573, 1345, 1345, 2544, 1012, 2540, 1012, 1171, 1172, 143,
	1304, 1304, 1064, 1064, 1039, 1366, 789, 790, 791, 788,
	1972, 2539, 1343, 2668, 2538, 578, 1465, 1039, 1311, 1312,
	1313, 2139, 1465, 1392, 1409, 1334, 1308, 1303, 1274, 1275,
	1218, 2630, 789, 790, 791, 788, 2174, 2050, 1906, 2537,
	2527, 1341, 1342, 1304, 1039, 751, 1402, 143, 143, 1406,
	1239, 1494, 2389, 2629, 1850, 1413, 2318, 2318, 1684, 143,
	804, 2545, 1257, 2318, 1347, 1229, 1430, 1279, 2388, 1282,
	1725, 1229, 1229, 2317, 1724, 2199, 1442, 1548, 1915, 2318,
	976, 1405, 2318, 1887, 1716, 1351, 1352, 1135, 1136, 1137,
	1138, 1139, 1419, 1800, 1333, 1307, 1377, 1798, 1796, 1327,
	1319, 717, 1760, 1761, 1039, 1454, 1338, 2318, 2528, 1291,
	1635, 1794, 1324, 1336, 1337, 1285, 1508, 1496, 974, 1782,
	2390, 1738, 1382, 1720, 1446, 1712, 1708, 1401, 1399, 1335,
	1416, 1180, 1181, 1182, 1704, 663, 1619, 1300, 1217, 1618,
	978, 2318, 1223, 1916, 1315, 1316, 1916, 1301, 1322, 1323,
	1339, 1656, 1326, 1546, 1085, 1448, 1307, 1314, 1332, 1477,
	611, 1801, 1348, 1520, 1349, 1799, 1795, 925, 1519, 834,
	1481, 1482, 1464, 737, 1089, 1428, 1667, 717, 1346, 1795,
	2479, 1428, 2054, 1935, 1390, 1391, 2045, 787, 1028, 787,
	1355, 1619, 1354, 1705, 1709, 2283, 1124, 2649, 1378, 1029,
	2166, 2640, 1705, 1387, 1388, 1389, 1350, 1619, 1222, 1221,
	2164, 42, 975, 1179, 967, 1818, 689, 2529, 968, 2069,
	1745, 1545, 689, 2480, 1398, 1400, 2064, 1026, 1288, 1946,
	1866, 787, 1292, 1715, 1517, 1295, 787, 1417, 2284, 1674,
	1465, 1524, 1090, 2167, 717, 2046, 726, 1179, 1302, 1490,
	1435, 791, 788, 2165, 1404, 1404, 1444, 2557, 788, 1445,
	1440, 2368, 1441, 2367, 668, 2158, 1404, 802, 812, 813,
	805, 806, 807, 808, 809, 810, 811, 804, 1449, 807,
	808, 809, 810, 811, 804, 660, 473, 482, 2047, 442,
	724, 1592, 474, 2153, 481, 475, 479, 478, 476, 477,
	1248, 1914, 143, 143, 143, 2351, 1616, 689, 1025, 2679,
	1476, 976, 1560, 2660, 2663, 437, 1623, 1012, 439, 2609,
	1170, 1485, 1626, 438, 2001, 2604, 1628, 1288, 2548, 1233,
	1164, 1478, 1489, 1288, 1288, 1167, 1169, 1166, 1012, 1168,
	1234, 789, 790, 791, 788, 2543, 483, 2530, 1479, 1480,
	1747, 2481, 1660, 1660, 1366, 1660, 1240, 1241, 2662, 2456,
	1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1625, 1965, 2434, 2433, 480, 2432, 1552, 1553,
	2450, 1629, 1630, 1039, 143, 803, 802, 812, 813, 805,
	806, 807, 808, 809, 810, 811, 804, 2429, 724, 2576,
	1065, 2423, 1366, 2420, 1514, 1689, 2448, 1691, 2419, 2446,
	1593, 789, 790, 791, 788, 1229, 1304, 1504, 1964, 2449,
	1560, 2436, 789, 790, 791, 788, 1664, 2386, 2286, 1662,
	1606, 1666, 1541, 789, 790, 791, 788, 1718, 2211, 2285,
	1454, 789, 790, 791, 788, 2447, 2168, 1039, 2445, 1039,
	2137, 1039, 2136, 1686, 1632, 1633, 724, 1679, 2015, 1637,
	2435, 1554, 1693, 1991, 1990, 1931, 1631, 1600, 1908, 1544,
	1503, 1543, 1542, 1538, 1688, 1537, 1487, 2212, 1732, 1491,
	1700, 1706, 1086, 2692, 944, 1624, 1039, 1763, 2196, 2138,
	2601, 978, 1769, 789, 790, 791, 788, 2575, 2455, 1770,
	2559, 1634, 2523, 1039, 1636, 689, 2522, 1642, 2505, 1608,
	1609, 1610, 2488, 2437, 2430, 1772, 2426, 2425, 1762, 2424,
	1502, 2353, 2315, 1728, 1506, 805, 806, 807, 808, 809,
	810, 811, 804, 1627, 2298, 1771, 2194, 2192, 1675, 1676,
	1677, 1518, 2178, 2147, 1521, 1522, 1523, 1680, 2135, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 2134, 1534, 1774,
	1037, 1687, 1749, 1685, 2131, 1499, 1729, 2121, 789, 790,
	791, 788, 2115, 1736, 1701, 2065, 1995, 1037, 1989, 1743,
	795, 796, 797, 798, 799, 800, 801, 793, 1942, 1039,
	1909, 1045, 1899, 1721, 1719, 1547, 1726, 524, 523, 1124,
	1492, 1540, 1778, 1802, 1846, 1420, 1418, 1783, 1297, 1087,
	1852, 812, 813, 805, 806, 807, 808, 809, 810, 811,
	804, 1620, 1276, 2403, 857, 853, 1861, 852, 1739, 1740,
	1812, 835, 713, 2161, 724, 1366, 1366, 1366, 1366, 2160,
	1753, 789, 790, 791, 788, 1835, 724, 1366, 2148, 136,
	1660, 2126, 124, 104, 2414, 2125, 1870, 789, 790, 791,
	788, 2120, 2108, 1039, 2087, 1742, 2086, 2055, 1870, 1970,
	1963, 1955, 1855, 1950, 143, 143, 1857, 789, 790, 791,
	788, 1903, 1843, 1810, 1797, 1793, 1803, 1288, 1288, 1288,
	1864, 1806, 1792, 1886, 1525, 1853, 1229, 1515, 1513, 1510,
	1921, 1274, 1275, 1509, 1507, 1229, 133, 1930, 1501, 1064,
	1498, 1883, 1497, 1039, 1232, 1231, 1937, 136, 1051, 1049,
	31, 2377, 485, 94, 1606, 2639, 2633, 1827, 1834, 1845,
	1851, 2616, 2613, 2611, 1279, 30, 1282, 2547, 850, 42,
	2472, 1307, 2460, 19, 789, 790, 791, 788, 8, 1860,
	1863, 6, 1854, 1867, 7, 2457, 2452, 2391, 1917, 2375,
	1858, 1859, 2374, 1884, 1882, 376, 1885, 2373, 94, 1287,
	1927, 582, 2370, 1929, 133, 2364, 1856, 2349, 1897, 1900,
	1871, 1872, 1873, 1874, 1895, 1264, 2185, 1907, 2183, 2159,
	1746, 2142, 1976, 1273, 1266, 1920, 1934, 965, 1956, 1764,
	1765, 1958, 724, 1960, 1767, 1768, 1918, 1840, 2004, 1939,
	1922, 1844, 1928, 1924, 1839, 1926, 1773, 1838, 1933, 2019,
	143, 1278, 1281, 1270, 1560, 1711, 832, 1673, 1617, 724,
	724, 724, 1947, 1165, 1948, 133, 1425, 1407, 1366, 1616,
	1299, 2053, 1271, 1109, 1075, 1288, 928, 2057, 1804, 1805,
	1295, 2029, 2029, 2029, 1957, 2004, 690, 1975, 876, 875,
	94, 1977, 1978, 1979, 1980, 1954, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1961, 1962, 874, 873, 872, 871,
	870, 1901, 1902, 1959, 869, 868, 2021, 2022, 2023, 867,
	866, 865, 864, 2371, 2202, 1992, 863, 1763, 2201, 2056,
	862, 861, 1997, 2058, 2059, 860, 856, 1304, 855, 854,
	2051, 1304, 851, 2067, 847, 846, 1999, 789, 790, 791,
	788, 789, 790, 791, 788, 844, 843, 842, 2079, 2041,
	2042, 2118, 2048, 841, 143, 2052, 803, 802, 812, 813,
	805, 806, 807, 808, 809, 810, 811, 804, 2076, 1968,
	2063, 2066, 2062, 840, 789, 790, 791, 788, 839, 838,
	837, 833, 831, 753, 2093, 2061, 2072, 2073, 2080, 2083,
	2084, 2085, 789, 790, 791, 788, 2106, 1967, 1622, 1602,
	2678, 741, 2109, 1966, 2621, 2092, 2619, 2244, 2060, 2580,
	2075, 1829, 2103, 1683, 2107, 1422, 752, 2078, 2077, 1879,
	789, 790, 791, 788, 1880, 2110, 789, 790, 791, 788,
	1791, 1288, 1039, 1039, 2111, 1288, 1876, 2114, 2102, 1877,
	2105, 1607, 1875, 2152, 1878, 1919, 1790, 2020, 1713, 1881,
	1789, 1652, 1653, 789, 790, 791, 788, 1993, 1994, 1660,
	1366, 2171, 1808, 2188, 2143, 2187, 1424, 1949, 2682, 789,
	790, 791, 788, 789, 790, 791, 788, 1998, 2226, 724,
	76, 1607, 1423, 2127, 2130, 1788, 2129, 41, 1258, 1969,
	586, 587, 588, 589, 1699, 1552, 1553, 40, 1733, 2186,
	930, 1870, 1069, 585, 2190, 140, 1037, 2145, 789, 790,
	791, 788, 724, 1787, 2151, 2409, 2172, 2156, 1594, 2150,
	2173, 747, 2175, 372, 2157, 2176, 94, 94, 690, 2179,
	373, 2155, 2170, 2155, 1870, 2169, 789, 790, 791, 788,
	374, 2592, 2177, 1862, 1813, 371, 1612, 2181, 1786, 2180,
	1317, 1298, 1050, 724, 1640, 2661, 1222, 1221, 942, 943,
	724, 2113, 940, 941, 2271, 2273, 1785, 2271, 2271, 2191,
	1353, 789, 790, 791, 788, 1784, 1007, 2197, 938, 939,
	1006, 2198, 2029, 780, 2204, 936, 937, 2200, 2082, 789,
	790, 791, 788, 1443, 1319, 969, 2292, 820, 789, 790,
	791, 788, 2206, 2272, 803, 802, 812, 813, 805, 806,
	807, 808, 809, 810, 811, 804, 2230, 932, 2312, 2309,
	2268, 2246, 2203, 2634, 2554, 2552, 2513, 2234, 2498, 2280,
	2497, 2289, 2324, 2279, 2287, 2288, 2274, 2275, 2173, 2495,
	2276, 586, 587, 588, 589, 2417, 2392, 2223, 2295, 2290,
	2294, 2225, 2227, 2229, 585, 2231, 2232, 2233, 2235, 2236,
	2237, 2239, 2240, 2241, 2242, 1781, 2205, 1039, 2193, 2310,
	2100, 2089, 2099, 2352, 2090, 935, 585, 1905, 143, 1321,
	1932, 2319, 1500, 2327, 738, 2117, 2622, 2273, 789, 790,
	791, 788, 2119, 2325, 2326, 2623, 2329, 2330, 2331, 2332,
	2245, 2366, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2343, 2344, 2345, 2346, 2347, 2348, 2354, 2350, 2268, 1780,
	2623, 2622, 2101, 981, 49, 2376, 1394, 934, 2379, 724,
	1043, 1, 1296, 590, 2378, 2418, 1888, 2243, 2252, 1889,
	2081, 2145, 789, 790, 791, 788, 1779, 1891, 1660, 2387,
	1461, 1638, 1595, 1775, 2222, 2018, 960, 612, 2451, 1224,
	2413, 1094, 2262, 703, 733, 2412, 1091, 732, 730, 789,
	790, 791, 788, 1177, 487, 2255, 789, 790, 791, 788,
	1433, 724, 2250, 2238, 724, 724, 724, 2265, 2266, 1288,
	2228, 2431, 2182, 2251, 2637, 2184, 2453, 2291, 2421, 2422,
	2591, 2483, 2486, 2625, 2427, 2428, 2546, 2594, 1107, 2189,
	2461, 471, 2489, 2469, 2470, 2471, 2395, 2550, 2468, 2458,
	2397, 2301, 2487, 1466, 2477, 785, 1923, 630, 518, 2256,
	1048, 494, 1039, 1039, 845, 376, 2494, 2499, 2492, 2482,
	1077, 1070, 1973, 803, 802, 812, 813, 805, 806, 807,
	808, 809, 810, 811, 804, 2512, 705, 94, 493, 2141,
	1823, 94, 2380, 143, 2520, 2521, 1766, 601, 702, 631,
	1535, 724, 94, 2393, 1259, 1280, 1263, 2281, 1744, 2277,
	2162, 94, 2043, 724, 1841, 2369, 2688, 2677, 2652, 789,
	790, 791, 788, 2632, 2532, 2244, 2526, 2518, 2672, 2563,
	2536, 789, 790, 791, 788, 2614, 1037, 1037, 1493, 2305,
	2303, 2304, 2541, 2607, 2514, 408, 1175, 1374, 2264, 576,
	2032, 672, 2473, 1421, 724, 2553, 2549, 2555, 2556, 1607,
	2551, 789, 790, 791, 788, 409, 1621, 2506, 2320, 789,
	790, 791, 788, 2459, 599, 2258, 2561, 1601, 600, 2566,
	2568, 1604, 1603, 1146, 794, 1163, 2590, 2122, 2598, 2574,
	2123, 1205, 829, 447, 1488, 459, 2226, 2257, 2259, 1820,
	2597, 2605, 2261, 724, 2585, 2586, 2587, 2588, 2558, 1898,
	48, 47, 2606, 46, 2602, 45, 2610, 1412, 2612, 2603,
	1648, 1651, 1652, 1653, 1649, 1130, 1650, 1654, 147, 489,
	146, 2485, 2596, 469, 2617, 468, 2620, 2618, 467, 466,
	2627, 1647, 1645, 1644, 1361, 2624, 1360, 1410, 2577, 2533,
	2534, 2363, 724, 2438, 724, 2408, 2359, 2355, 2524, 2220,
	2247, 2636, 2248, 2638, 2254, 1611, 883, 2641, 879, 2267,
	2598, 2651, 881, 882, 1130, 880, 1130, 1752, 2647, 1748,
	724, 2253, 2597, 2650, 2027, 2028, 2655, 2263, 2025, 2659,
	945, 2311, 2128, 1558, 1556, 2671, 2627, 2665, 2074, 2070,
	1404, 1429, 1130, 1293, 1807, 1362, 1358, 2278, 579, 2675,
	32, 27, 5, 29, 28, 14, 15, 2676, 13, 2683,
	1098, 12, 18, 2687, 26, 25, 24, 2686, 86, 85,
	23, 2695, 84, 83, 2230, 82, 2698, 2683, 2700, 2699,
	1201, 2701, 2687, 81, 1198, 2234, 22, 11, 1200, 1197,
	1199, 1203, 1204, 80, 79, 2408, 1202, 78, 21, 73,
	20, 74, 71, 72, 59, 2223, 1643, 58, 57, 2225,
	2227, 2229, 69, 2231, 2232, 2233, 2235, 2236, 2237, 2239,
	2240, 2241, 2242, 68, 67, 66, 65, 1365, 64, 1648,
	1651, 1652, 1653, 1649, 629, 1650, 1654, 56, 55, 136,
	314, 38, 124, 104, 54, 53, 70, 2531, 63, 62,
	61, 276, 380, 60, 52, 51, 50, 102, 2245, 101,
	100, 99, 98, 97, 96, 33, 34, 35, 221, 36,
	112, 246, 111, 113, 114, 109, 107, 110, 306, 260,
	108, 106, 43, 10, 17, 2, 0, 690, 0, 0,
	0, 0, 0, 690, 0, 2243, 385, 0, 0, 144,
	2635, 0, 94, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 2222, 0, 0, 0, 0, 205, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1208,
	1209, 1210, 1211, 1212, 1213, 1206, 1207, 0, 0, 0,
	0, 2238, 0, 0, 0, 0, 0, 2408, 2228, 803,
	802, 812, 813, 805, 806, 807, 808, 809, 810, 811,
	804, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 820, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 2667,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 353,
	0, 296, 278, 0, 0, 0, 294, 248, 322, 286,
	328, 312, 336, 290, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 368, 369, 370, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	349, 228, 185, 186, 332, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 348, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 239, 280,
	0, 300, 0, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 0, 0, 307, 330, 342, 359, 362, 0,
	0, 0, 190, 361, 0, 0, 0, 0, 0, 0,
	0, 333, 1741, 0, 0, 341, 0, 0, 0, 0,
	0, 357, 264, 265, 266, 267, 381, 383, 207, 360,
	289, 0, 0, 0, 1365, 803, 802, 812, 813, 805,
	806, 807, 808, 809, 810, 811, 804, 354, 227, 233,
	0, 235, 206, 279, 229, 339, 242, 0, 365, 0,
	0, 0, 0, 271, 238, 304, 243, 249, 292, 338,
	277, 297, 204, 329, 305, 253, 419, 0, 418, 425,
	415, 0, 0, 0, 0, 0, 39, 0, 0, 184,
	422, 423, 0, 424, 428, 0, 0, 410, 0, 899,
	0, 0, 0, 0, 0, 0, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 247, 105,
	288, 226, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 0, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 0,
	0, 0, 345, 346, 347, 367, 331, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1486, 0, 789, 790, 791, 788, 0,
	0, 0, 899, 0, 0, 0, 0, 0, 0, 0,
	0, 887, 0, 0, 0, 877, 803, 802, 812, 813,
	805, 806, 807, 808, 809, 810, 811, 804, 0, 907,
	911, 913, 915, 917, 918, 920, 0, 924, 921, 922,
	923, 0, 0, 902, 903, 904, 905, 885, 886, 908,
	94, 888, 0, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 900, 906, 0, 0, 0, 0, 0,
	0, 1205, 910, 912, 914, 916, 919, 1365, 1365, 1365,
	1365, 411, 413, 412, 0, 0, 0, 0, 0, 1365,
	0, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 421, 887, 0, 0, 0, 0, 901,
	436, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 907, 911, 913, 915, 917, 918, 920, 0,
	924, 921, 922, 923, 0, 0, 902, 903, 904, 905,
	885, 886, 908, 0, 888, 94, 889, 890, 891, 892,
	893, 894, 895, 896, 897, 898, 900, 906, 815, 0,
	819, 0, 0, 0, 0, 910, 912, 914, 916, 919,
	0, 0, 0, 0, 0, 816, 818, 814, 0, 817,
	803, 802, 812, 813, 805, 806, 807, 808, 809, 810,
	811, 804, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 420, 426, 0, 427, 429, 0,
	1201, 430, 431, 432, 1198, 0, 434, 435, 1200, 1197,
	1199, 1203, 1204, 0, 0, 0, 1202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 94, 803, 802, 812,
	813, 805, 806, 807, 808, 809, 810, 811, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	1365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 461, 0, 0, 94, 221, 0, 0, 246,
	0, 0, 0, 492, 0, 0, 306, 260, 0, 0,
	0, 0, 547, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 454, 0, 0, 486, 524, 523,
	473, 482, 0, 0, 202, 145, 474, 0, 481, 475,
	479, 478, 476, 477, 0, 539, 0, 0, 94, 0,
	94, 0, 445, 458, 2405, 462, 0, 909, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1208,
	1209, 1210, 1211, 1212, 1213, 1206, 1207, 0, 455, 456,
	0, 0, 0, 0, 501, 0, 457, 0, 0, 464,
	483, 484, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	480, 499, 503, 214, 561, 497, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 562, 236, 284, 250, 285, 237, 262, 261, 263,
	909, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 337, 0, 0, 545, 0, 0, 0,
	310, 0, 1365, 245, 0, 0, 0, 498, 0, 296,
	278, 558, 446, 0, 294, 248, 322, 286, 328, 312,
	336, 290, 287, 188, 313, 217, 259, 199, 201, 213,
	220, 222, 224, 225, 268, 269, 281, 301, 315, 316,
	317, 216, 209, 295, 210, 234, 211, 189, 303, 212,
	191, 282, 320, 0, 230, 291, 255, 192, 254, 283,
	319, 318, 200, 344, 350, 351, 355, 0, 356, 0,
	0, 0, 364, 368, 369, 370, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 543, 274, 0, 0, 557, 538, 540,
	541, 544, 548, 549, 550, 551, 552, 554, 556, 560,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 2406, 0, 0, 0, 2407, 0, 559,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 502,
	264, 265, 266, 267, 546, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 0, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 568, 542, 567, 569,
	570, 566, 571, 572, 553, 465, 0, 506, 564, 563,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	531, 511, 512, 513, 463, 514, 509, 510, 532, 504,
	528, 529, 488, 507, 515, 527, 516, 530, 533, 534,
	573, 574, 522, 575, 519, 535, 526, 525, 517, 505,
	536, 537, 491, 490, 520, 521, 508, 314, 500, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 461, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 492, 0, 0, 306, 260, 0, 0, 0,
	0, 547, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 454, 0, 0, 486, 524, 523, 473,
	482, 0, 0, 202, 145, 474, 0, 481, 475, 479,
	478, 476, 477, 0, 539, 0, 0, 0, 0, 0,
	0, 445, 458, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 455, 456, 0,
	0, 0, 0, 501, 0, 457, 0, 0, 464, 483,
	484, 0, 0, 193, 311, 327, 203, 302, 340, 208,
	309, 198, 275, 298, 0, 0, 195, 325, 308, 257,
	240, 241, 194, 0, 293, 219, 232, 215, 273, 480,
	499, 503, 214, 561, 497, 335, 197, 0, 334, 272,
	321, 326, 258, 252, 196, 323, 256, 251, 244, 223,
	562, 236, 284, 250, 285, 237, 262, 261, 263, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 337, 0, 0, 545, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 498, 0, 296, 278,
	558, 446, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 368, 369, 370, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 1226, 1225, 1227, 349, 228, 185,
	186, 332, 543, 274, 0, 0, 557, 538, 540, 541,
	544, 548, 549, 550, 551, 552, 554, 556, 560, 299,
	0, 0, 0, 0, 0, 239, 280, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 330, 342, 359, 362, 0, 0, 0, 190,
	361, 0, 0, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 502, 264,
	265, 266, 267, 546, 0, 207, 360, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 227, 233, 0, 235, 206,
	279, 229, 339, 242, 0, 365, 0, 0, 0, 0,
	271, 238, 304, 243, 249, 292, 338, 277, 297, 204,
	329, 305, 253, 0, 0, 568, 542, 567, 569, 570,
	566, 571, 572, 553, 465, 0, 506, 564, 563, 565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 247, 0, 288, 226, 531,
	511, 512, 513, 463, 514, 509, 510, 532, 504, 528,
	529, 488, 507, 515, 527, 516, 530, 533, 534, 573,
	574, 522, 575, 519, 535, 526, 525, 517, 505, 536,
	537, 491, 490, 520, 521, 508, 314, 500, 0, 345,
	346, 347, 367, 331, 0, 218, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 0, 0, 0, 221, 0, 0, 246, 0, 0,
	0, 492, 0, 0, 306, 260, 0, 0, 0, 0,
	547, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 454, 0, 0, 486, 524, 523, 473, 482,
	0, 0, 202, 145, 474, 0, 481, 475, 479, 478,
	476, 477, 0, 539, 0, 0, 0, 0, 0, 0,
	445, 458, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 455, 456, 0, 0,
	0, 0, 501, 0, 457, 0, 0, 464, 483, 484,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 480, 499,
	503, 214, 561, 497, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 562,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 0, 0,
	0, 337, 0, 0, 545, 0, 0, 0, 310, 0,
	0, 245, 0, 0, 0, 498, 0, 296, 278, 558,
	446, 0, 294, 248, 322, 286, 328, 312, 336, 290,
	287, 188, 313, 217, 259, 199, 201, 213, 220, 222,
	224, 225, 268, 269, 281, 301, 315, 316, 317, 216,
	209, 295, 210, 234, 211, 189, 303, 212, 191, 282,
	320, 0, 230, 291, 255, 192, 254, 283, 319, 318,
	200, 344, 350, 351, 355, 0, 356, 0, 0, 0,
	364, 368, 369, 370, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 543, 274, 0, 0, 557, 538, 540, 541, 544,
	548, 549, 550, 551, 552, 554, 556, 560, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 2406, 0, 0, 0, 2407, 0, 559, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 502, 264, 265,
	266, 267, 546, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 0, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 568, 542, 567, 569, 570, 566,
	571, 572, 553, 465, 0, 506, 564, 563, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 531, 511,
	512, 513, 463, 514, 509, 510, 532, 504, 528, 529,
	488, 507, 515, 527, 516, 530, 533, 534, 573, 574,
	522, 575, 519, 535, 526, 525, 517, 505, 536, 537,
	491, 490, 520, 521, 508, 314, 500, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	0, 0, 0, 221, 1289, 0, 246, 0, 0, 0,
	492, 0, 0, 306, 260, 0, 0, 0, 0, 547,
	555, 0, 0, 0, 0, 0, 0, 0, 1384, 0,
	0, 454, 0, 0, 486, 524, 523, 473, 482, 0,
	0, 202, 145, 474, 0, 481, 475, 479, 478, 476,
	477, 0, 539, 0, 0, 0, 0, 0, 0, 445,
	458, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 455, 456, 0, 0, 0,
	0, 501, 0, 457, 0, 0, 1385, 483, 484, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 480, 499, 503,
	214, 561, 497, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 562, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	337, 0, 0, 545, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 498, 0, 296, 278, 558, 446,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	368, 369, 370, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 349, 228, 185, 186, 332,
	543, 274, 0, 0, 557, 538, 540, 541, 544, 548,
	549, 550, 551, 552, 554, 556, 560, 299, 0, 0,
	0, 0, 0, 239, 280, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	330, 342, 359, 362, 0, 0, 0, 190, 361, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 502, 264, 265, 266,
	267, 546, 0, 207, 360, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 227, 233, 0, 235, 206, 279, 229,
	339, 242, 0, 365, 0, 0, 0, 0, 271, 238,
	304, 243, 249, 292, 338, 277, 297, 204, 329, 305,
	253, 0, 0, 568, 542, 567, 569, 570, 566, 571,
	572, 553, 465, 0, 506, 564, 563, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 247, 0, 288, 226, 531, 511, 512,
	513, 463, 514, 509, 510, 532, 504, 528, 529, 488,
	507, 515, 527, 516, 530, 533, 534, 573, 574, 522,
	575, 519, 535, 526, 525, 517, 505, 536, 537, 491,
	490, 520, 521, 508, 136, 314, 500, 345, 346, 347,
	367, 331, 0, 218, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	823, 0, 0, 306, 260, 0, 0, 0, 0, 547,
	555, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 454, 0, 0, 486, 524, 523, 473, 482, 0,
	0, 202, 145, 474, 0, 481, 475, 479, 478, 476,
	477, 0, 539, 0, 0, 0, 0, 0, 0, 445,
	458, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 455, 456, 0, 0, 0,
	0, 501, 0, 457, 0, 0, 464, 483, 484, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 480, 499, 503,
	214, 561, 497, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 562, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	337, 0, 0, 545, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 498, 0, 296, 278, 558, 446,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	368, 369, 370, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 349, 228, 185, 186, 332,
	543, 274, 0, 0, 557, 538, 540, 541, 544, 548,
	549, 550, 551, 552, 554, 556, 560, 299, 0, 0,
	0, 0, 0, 239, 280, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	330, 342, 359, 362, 0, 0, 0, 190, 361, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 502, 264, 265, 266,
	267, 546, 0, 207, 360, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 227, 233, 0, 235, 206, 279, 229,
	339, 242, 0, 365, 0, 0, 0, 0, 271, 238,
	304, 243, 249, 292, 338, 277, 297, 204, 329, 305,
	253, 0, 0, 568, 542, 567, 569, 570, 566, 571,
	572, 553, 465, 0, 506, 564, 563, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 247, 105, 288, 226, 531, 511, 512,
	513, 463, 514, 509, 510, 532, 504, 528, 529, 488,
	507, 515, 527, 516, 530, 533, 534, 573, 574, 522,
	575, 519, 535, 526, 525, 517, 505, 536, 537, 491,
	490, 520, 521, 508, 314, 500, 0, 345, 346, 347,
	367, 331, 0, 218, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 461, 0,
	0, 0, 221, 2666, 0, 246, 0, 0, 0, 492,
	0, 0, 306, 260, 0, 0, 0, 0, 547, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 0, 0, 486, 524, 523, 473, 482, 0, 0,
	202, 145, 474, 0, 481, 475, 479, 478, 476, 477,
	0, 539, 0, 0, 0, 0, 0, 0, 445, 458,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 455, 456, 0, 0, 0, 0,
	501, 0, 457, 0, 0, 464, 483, 484, 0, 0,
	193, 311, 327, 203, 302, 340, 208, 309, 198, 275,
	298, 0, 0, 195, 325, 308, 257, 240, 241, 194,
	0, 293, 219, 232, 215, 273, 480, 499, 503, 214,
	561, 497, 335, 197, 0, 334, 272, 321, 326, 258,
	252, 196, 323, 256, 251, 244, 223, 562, 236, 284,
	250, 285, 237, 262, 261, 263, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 0, 0, 0, 337,
	0, 0, 545, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 498, 0, 296, 278, 558, 446, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 368,
	369, 370, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 543,
	274, 0, 0, 557, 538, 540, 541, 544, 548, 549,
	550, 551, 552, 554, 556, 560, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 502, 264, 265, 266, 267,
	546, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 0, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 568, 542, 567, 569, 570, 566, 571, 572,
	553, 465, 0, 506, 564, 563, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 531, 511, 512, 513,
	463, 514, 509, 510, 532, 504, 528, 529, 488, 507,
	515, 527, 516, 530, 533, 534, 573, 574, 522, 575,
	519, 535, 526, 525, 517, 505, 536, 537, 491, 490,
	520, 521, 508, 314, 500, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 461, 0, 0,
	0, 221, 1289, 0, 246, 0, 0, 0, 492, 0,
	0, 306, 260, 0, 0, 0, 0, 547, 555, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 454,
	0, 0, 486, 524, 523, 473, 482, 0, 0, 202,
	145, 474, 0, 481, 475, 479, 478, 476, 477, 0,
	539, 0, 0, 0, 0, 0, 0, 445, 458, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 455, 456, 0, 0, 0, 0, 501,
	0, 457, 0, 0, 464, 483, 484, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 480, 499, 503, 214, 561,
	497, 335, 197, 0, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 562, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 337, 0,
	0, 545, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 498, 0, 296, 278, 558, 446, 0, 294,
	248, 322, 286, 328, 312, 336, 290, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 368, 369,
	370, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 349, 228, 185, 186, 332, 543, 274,
	0, 0, 557, 538, 540, 541, 544, 548, 549, 550,
	551, 552, 554, 556, 560, 299, 0, 0, 0, 0,
	0, 239, 280, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 330, 342,
	359, 362, 0, 0, 0, 190, 361, 0, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 502, 264, 265, 266, 267, 546,
	0, 207, 360, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 227, 233, 0, 235, 206, 279, 229, 339, 242,
	0, 365, 0, 0, 0, 0, 271, 238, 304, 243,
	249, 292, 338, 277, 297, 204, 329, 305, 253, 0,
	0, 568, 542, 567, 569, 570, 566, 571, 572, 553,
	465, 0, 506, 564, 563, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 247, 0, 288, 226, 531, 511, 512, 513, 463,
	514, 509, 510, 532, 504, 528, 529, 488, 507, 515,
	527, 516, 530, 533, 534, 573, 574, 522, 575, 519,
	535, 526, 525, 517, 505, 536, 537, 491, 490, 520,
	521, 508, 314, 500, 0, 345, 346, 347, 367, 331,
	0, 218, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 0, 0, 0,
	221, 0, 0, 246, 0, 0, 0, 492, 0, 0,
	306, 260, 0, 0, 0, 0, 547, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 0,
	0, 486, 524, 523, 473, 482, 0, 0, 202, 145,
	474, 0, 481, 475, 479, 478, 476, 477, 0, 539,
	0, 0, 0, 0, 0, 0, 445, 458, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 455, 456, 1063, 0, 0, 0, 501, 0,
	457, 0, 0, 464, 483, 484, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 480, 499, 503, 214, 561, 497,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 562, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 0, 0, 0, 337, 0, 0,
	545, 0, 0, 0, 310, 0, 0, 245, 0, 0,
	0, 498, 0, 296, 278, 558, 446, 0, 294, 248,
	322, 286, 328, 312, 336, 290, 287, 188, 313, 217,
	259, 199, 201, 213, 220, 222, 224, 225, 268, 269,
	281, 301, 315, 316, 317, 216, 209, 295, 210, 234,
	211, 189, 303, 212, 191, 282, 320, 0, 230, 291,
	255, 192, 254, 283, 319, 318, 200, 344, 350, 351,
	355, 0, 356, 0, 0, 0, 364, 368, 369, 370,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 543, 274, 0,
	0, 557, 538, 540, 541, 544, 548, 549, 550, 551,
	552, 554, 556, 560, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 502, 264, 265, 266, 267, 546, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	568, 542, 567, 569, 570, 566, 571, 572, 553, 465,
	0, 506, 564, 563, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 531, 511, 512, 513, 463, 514,
	509, 510, 532, 504, 528, 529, 488, 507, 515, 527,
	516, 530, 533, 534, 573, 574, 522, 575, 519, 535,
	526, 525, 517, 505, 536, 537, 491, 490, 520, 521,
	508, 0, 0, 0, 345, 346, 347, 367, 331, 0,
	218, 314, 500, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 492, 0, 0, 306,
	260, 0, 0, 0, 0, 547, 555, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 454, 0, 0,
	486, 524, 523, 473, 482, 0, 0, 202, 145, 474,
	0, 481, 475, 479, 478, 476, 477, 0, 539, 0,
	0, 0, 0, 0, 0, 445, 458, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 456, 0, 0, 0, 0, 501, 0, 457,
	0, 0, 464, 483, 484, 0, 0, 193, 311, 327,
	203, 302, 340, 208, 309, 198, 275, 298, 0, 0,
	195, 325, 308, 257, 240, 241, 194, 0, 293, 219,
	232, 215, 273, 480, 499, 503, 214, 561, 497, 335,
	197, 0, 334, 272, 321, 326, 258, 252, 196, 323,
	256, 251, 244, 223, 562, 236, 284, 250, 285, 237,
	262, 261, 263, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 337, 0, 0, 545,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	498, 0, 296, 278, 558, 446, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 368, 369, 370, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 543, 274, 0, 0,
	557, 538, 540, 541, 544, 548, 549, 550, 551, 552,
	554, 556, 560, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 559, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 502, 264, 265, 266, 267, 546, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 0, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 568,
	542, 567, 569, 570, 566, 571, 572, 553, 465, 0,
	506, 564, 563, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 531, 511, 512, 513, 463, 514, 509,
	510, 532, 504, 528, 529, 488, 507, 515, 527, 516,
	530, 533, 534, 573, 574, 522, 575, 519, 535, 526,
	525, 517, 505, 536, 537, 491, 490, 520, 521, 508,
	314, 500, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 461, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 492, 0, 0, 306, 260,
	0, 0, 0, 0, 547, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 454, 0, 0, 486,
	524, 523, 473, 482, 0, 0, 202, 145, 474, 0,
	481, 475, 479, 478, 476, 477, 0, 539, 0, 0,
	0, 0, 0, 0, 445, 458, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	455, 456, 0, 0, 0, 0, 501, 0, 457, 0,
	0, 464, 483, 484, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 480, 499, 503, 214, 561, 497, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 562, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 0, 0, 0, 337, 0, 0, 545, 0,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 498,
	0, 296, 278, 558, 446, 0, 294, 248, 322, 286,
	328, 312, 336, 290, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 368, 369, 370, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	349, 228, 185, 186, 332, 543, 274, 0, 0, 557,
	538, 540, 541, 544, 548, 549, 550, 551, 552, 554,
	556, 560, 299, 0, 0, 0, 0, 0, 239, 280,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 330, 342, 359, 362, 0,
	0, 0, 190, 361, 0, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 502, 264, 265, 266, 267, 546, 0, 207, 360,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 227, 233,
	0, 235, 206, 279, 229, 339, 242, 0, 365, 0,
	0, 0, 0, 271, 238, 304, 243, 249, 292, 338,
	277, 297, 204, 329, 305, 253, 0, 0, 568, 542,
	567, 569, 570, 566, 571, 572, 553, 465, 0, 506,
	564, 563, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 247, 0,
	288, 226, 531, 511, 512, 513, 463, 514, 509, 510,
	532, 504, 528, 529, 488, 507, 515, 527, 516, 530,
	533, 534, 573, 574, 522, 575, 519, 535, 526, 525,
	517, 505, 536, 537, 491, 490, 520, 521, 508, 314,
	500, 0, 345, 346, 347, 367, 331, 0, 218, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 1147,
	0, 0, 0, 461, 0, 0, 0, 221, 0, 0,
	246, 0, 0, 0, 492, 0, 0, 306, 260, 0,
	0, 0, 0, 547, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 454, 0, 0, 486, 524,
	523, 473, 482, 0, 0, 202, 145, 474, 0, 481,
	475, 479, 478, 476, 477, 0, 539, 0, 0, 0,
	0, 0, 0, 0, 458, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 455,
	456, 0, 0, 0, 0, 501, 0, 457, 0, 0,
	464, 483, 484, 0, 0, 193, 311, 327, 203, 302,
	340, 208, 309, 198, 275, 298, 0, 0, 195, 325,
	308, 257, 240, 241, 194, 0, 293, 219, 232, 215,
	273, 480, 499, 503, 214, 561, 497, 335, 197, 0,
	334, 272, 321, 326, 258, 252, 196, 323, 256, 251,
	244, 223, 562, 236, 284, 250, 285, 237, 262, 261,
	263, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 337, 0, 0, 545, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 498, 0,
	296, 278, 558, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 1148, 1149, 355, 0, 356,
	0, 0, 0, 364, 368, 369, 370, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 349,
	228, 185, 186, 332, 543, 274, 0, 0, 557, 538,
	540, 541, 544, 548, 549, 550, 551, 552, 554, 556,
	560, 299, 0, 0, 0, 0, 0, 239, 280, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 330, 342, 359, 362, 0, 0,
	0, 190, 361, 0, 0, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	502, 264, 265, 266, 267, 546, 0, 207, 360, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 227, 233, 0,
	235, 206, 279, 229, 339, 242, 0, 365, 0, 0,
	0, 0, 271, 238, 304, 243, 249, 292, 338, 277,
	297, 204, 329, 305, 253, 0, 0, 568, 542, 567,
	569, 570, 566, 571, 572, 553, 465, 0, 506, 564,
	563, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 247, 0, 288,
	226, 531, 511, 512, 513, 463, 514, 509, 510, 532,
	504, 528, 529, 488, 507, 515, 527, 516, 530, 533,
	534, 573, 574, 522, 575, 519, 535, 526, 525, 517,
	505, 536, 537, 491, 490, 520, 521, 508, 314, 500,
	0, 345, 346, 347, 367, 331, 0, 218, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 461, 0, 0, 0, 221, 0, 0, 246,
	0, 0, 0, 492, 0, 0, 306, 260, 0, 0,
	0, 0, 547, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 524, 523,
	473, 482, 0, 0, 202, 145, 474, 0, 481, 475,
	479, 478, 476, 477, 0, 539, 0, 0, 0, 0,
	0, 0, 445, 458, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 455, 456,
	0, 0, 0, 0, 501, 0, 457, 0, 0, 464,
	483, 484, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	480, 499, 503, 214, 561, 497, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 562, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 337, 0, 0, 545, 0, 0, 0,
	310, 0, 0, 245, 0, 0, 0, 498, 0, 296,
	278, 558, 446, 0, 294, 248, 322, 286, 328, 312,
	336, 290, 287, 188, 313, 217, 259, 199, 201, 213,
	220, 222, 224, 225, 268, 269, 281, 301, 315, 316,
	317, 216, 209, 295, 210, 234, 211, 189, 303, 212,
	191, 282, 320, 0, 230, 291, 255, 192, 254, 283,
	319, 318, 200, 344, 350, 351, 355, 0, 356, 0,
	0, 0, 364, 368, 369, 370, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 543, 274, 0, 0, 557, 538, 540,
	541, 544, 548, 549, 550, 551, 552, 554, 556, 560,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 502,
	264, 265, 266, 267, 546, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 0, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 568, 542, 567, 569,
	570, 566, 571, 572, 553, 465, 0, 506, 564, 563,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	531, 511, 512, 513, 463, 514, 509, 510, 532, 504,
	528, 529, 488, 507, 515, 527, 516, 530, 533, 534,
	573, 574, 522, 575, 519, 535, 526, 525, 517, 505,
	536, 537, 491, 490, 520, 521, 508, 314, 500, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 461, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 492, 0, 0, 306, 260, 0, 0, 0,
	0, 547, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 454, 0, 0, 486, 524, 523, 473,
	482, 0, 0, 202, 145, 474, 0, 481, 475, 479,
	478, 476, 477, 0, 539, 0, 0, 0, 0, 0,
	0, 0, 458, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 455, 456, 0,
	0, 0, 0, 501, 0, 457, 0, 0, 464, 483,
	484, 0, 0, 193, 311, 327, 203, 302, 340, 208,
	309, 198, 275, 298, 0, 0, 195, 325, 308, 257,
	240, 241, 194, 0, 293, 219, 232, 215, 273, 480,
	499, 503, 214, 561, 497, 335, 197, 0, 334, 272,
	321, 326, 258, 252, 196, 323, 256, 251, 244, 223,
	562, 236, 284, 250, 285, 237, 262, 261, 263, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 337, 0, 0, 545, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 498, 0, 296, 278,
	558, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 368, 369, 370, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 349, 228, 185,
	186, 332, 543, 274, 0, 0, 557, 538, 540, 541,
	544, 548, 549, 550, 551, 552, 554, 556, 560, 299,
	0, 0, 0, 0, 0, 239, 280, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 330, 342, 359, 362, 0, 0, 0, 190,
	361, 0, 0, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 502, 264,
	265, 266, 267, 546, 0, 207, 360, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 227, 233, 0, 235, 206,
	279, 229, 339, 242, 0, 365, 0, 0, 0, 0,
	271, 238, 304, 243, 249, 292, 338, 277, 297, 204,
	329, 305, 253, 0, 0, 568, 542, 567, 569, 570,
	566, 571, 572, 553, 465, 0, 506, 564, 563, 565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 247, 0, 288, 226, 531,
	511, 512, 513, 463, 514, 509, 510, 532, 504, 528,
	529, 488, 507, 515, 527, 516, 530, 533, 534, 573,
	574, 522, 575, 519, 535, 526, 525, 517, 505, 536,
	537, 491, 490, 520, 521, 508, 314, 0, 0, 345,
	346, 347, 367, 331, 0, 218, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 899, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 306, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 0, 0, 0,
	0, 0, 202, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 887, 0, 0,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 1580, 1582, 1583, 1584, 1585,
	1586, 1587, 0, 1591, 1588, 1589, 1590, 273, 0, 1575,
	1576, 1577, 1578, 885, 1561, 1581, 0, 1562, 272, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1579, 284, 250, 285, 237, 262, 261, 263, 910, 912,
	914, 916, 919, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 245, 0, 0, 0, 1574, 0, 296, 278, 0,
	0, 0, 294, 248, 322, 286, 328, 312, 336, 290,
	287, 188, 313, 217, 259, 199, 201, 213, 220, 222,
	224, 225, 268, 269, 281, 301, 315, 316, 317, 216,
	209, 295, 210, 234, 211, 189, 303, 212, 191, 282,
	320, 0, 230, 291, 255, 192, 254, 283, 319, 318,
	200, 344, 350, 351, 355, 0, 356, 0, 0, 0,
	364, 368, 369, 370, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 0, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 909, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 2036, 2039, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	337, 0, 0, 0, 2033, 0, 2032, 310, 2034, 2037,
	245, 0, 0, 0, 353, 0, 296, 278, 0, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	2038, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	368, 369, 370, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 349, 228, 185, 186, 332,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 348, 0, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 239, 280, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	330, 342, 359, 362, 0, 0, 0, 190, 361, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 357, 264, 265, 266,
	267, 231, 0, 207, 360, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 227, 233, 0, 235, 206, 279, 229,
	339, 242, 0, 365, 0, 0, 0, 0, 271, 238,
	304, 243, 249, 292, 338, 277, 297, 204, 329, 305,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 247, 0, 288, 226, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 0,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 314, 0, 0, 345, 346, 347,
	367, 331, 0, 218, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1414, 0, 0,
	0, 0, 221, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 306, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 0, 1415, 0, 0, 0,
	202, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 789, 790, 791, 788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 311, 327, 203, 302, 340, 208, 309, 198, 275,
	298, 0, 0, 195, 325, 308, 257, 240, 241, 194,
	0, 293, 219, 232, 215, 273, 0, 324, 352, 214,
	343, 0, 335, 197, 0, 334, 272, 321, 326, 258,
	252, 196, 323, 256, 251, 244, 223, 366, 236, 284,
	250, 285, 237, 262, 261, 263, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 368,
	369, 370, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 0, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 314, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 671, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 679, 680, 0, 0, 0, 0, 202,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 0, 324, 352, 214, 343,
	655, 335, 197, 654, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 366, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 607,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 353, 0, 296, 278, 0, 0, 0, 294,
	248, 322, 286, 328, 312, 336, 669, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 368, 369,
	370, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 349, 228, 185, 186, 332, 0, 274,
	0, 0, 609, 0, 604, 0, 595, 0, 0, 270,
	348, 0, 0, 606, 605, 299, 0, 0, 0, 0,
	0, 239, 280, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 0, 0, 307, 330, 342,
	359, 362, 0, 0, 0, 190, 361, 0, 0, 0,
	0, 0, 0, 670, 333, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 673, 264, 265, 266, 267, 231,
	0, 207, 360, 289, 0, 603, 0, 0, 0, 602,
	0, 0, 0, 0, 0, 593, 0, 0, 0, 0,
	354, 227, 233, 0, 235, 206, 279, 229, 339, 242,
	0, 365, 0, 596, 0, 0, 681, 676, 677, 243,
	249, 292, 338, 277, 297, 204, 329, 305, 678, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 247, 597, 288, 226, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 0, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 136, 314, 0, 345, 346, 347, 367, 331,
	0, 218, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	608, 221, 0, 0, 246, 0, 0, 0, 92, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	1436, 0, 144, 0, 0, 0, 0, 0, 0, 202,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 0, 324, 352, 214, 343,
	0, 335, 197, 0, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 366, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 353, 0, 296, 278, 0, 0, 0, 294,
	248, 322, 286, 328, 312, 336, 290, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 368, 369,
	370, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 349, 228, 185, 186, 332, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	348, 0, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 239, 280, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 330, 342,
	359, 362, 0, 0, 0, 190, 361, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 357, 264, 265, 266, 267, 231,
	0, 207, 360, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 227, 233, 0, 235, 206, 279, 229, 339, 242,
	0, 365, 0, 0, 0, 0, 271, 238, 304, 243,
	249, 292, 338, 277, 297, 204, 329, 305, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 247, 105, 288, 226, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 0, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 136, 314, 0, 345, 346, 347, 367, 331,
	0, 218, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 92, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	1427, 0, 144, 0, 0, 0, 0, 0, 0, 202,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 0, 324, 352, 214, 343,
	0, 335, 197, 0, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 366, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 353, 0, 296, 278, 0, 0, 0, 294,
	248, 322, 286, 328, 312, 336, 290, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 368, 369,
	370, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 349, 228, 185, 186, 332, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	348, 0, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 239, 280, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 330, 342,
	359, 362, 0, 0, 0, 190, 361, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 357, 264, 265, 266, 267, 231,
	0, 207, 360, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 227, 233, 0, 235, 206, 279, 229, 339, 242,
	0, 365, 0, 0, 0, 0, 271, 238, 304, 243,
	249, 292, 338, 277, 297, 204, 329, 305, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 247, 105, 288, 226, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 0, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 136, 314, 0, 345, 346, 347, 367, 331,
	0, 218, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 92, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1363,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 202,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 0, 324, 352, 214, 343,
	0, 335, 197, 0, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 366, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 353, 0, 296, 278, 0, 0, 0, 294,
	248, 322, 286, 328, 312, 336, 290, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 368, 369,
	370, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 349, 228, 185, 186, 332, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	348, 0, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 239, 280, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 330, 342,
	359, 362, 0, 0, 0, 190, 361, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 357, 264, 265, 266, 267, 231,
	0, 207, 360, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 227, 233, 0, 235, 206, 279, 229, 339, 242,
	0, 365, 0, 0, 0, 0, 271, 238, 304, 243,
	249, 292, 338, 277, 297, 204, 329, 305, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 247, 105, 288, 226, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 0, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 314, 0, 0, 345, 346, 347, 367, 331,
	0, 218, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	306, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 679, 680, 0, 0, 0, 0, 202, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 655,
	335, 197, 654, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 245, 0, 0,
	0, 353, 0, 296, 278, 0, 0, 0, 294, 248,
	322, 286, 328, 312, 336, 290, 287, 188, 313, 217,
	259, 199, 201, 213, 220, 222, 224, 225, 268, 269,
	281, 301, 315, 316, 317, 216, 209, 295, 210, 234,
	211, 189, 303, 212, 191, 282, 320, 0, 230, 291,
	255, 192, 254, 283, 319, 318, 200, 344, 350, 351,
	355, 0, 356, 0, 0, 0, 364, 368, 369, 370,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 348,
	0, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 357, 264, 265, 266, 267, 231, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 681, 676, 677, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 0, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 314, 0, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	1042, 0, 246, 0, 0, 0, 0, 0, 0, 306,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 0, 1040, 0, 0, 0, 202, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1038, 0, 0, 0, 0, 193, 311, 327,
	203, 302, 340, 208, 309, 198, 275, 298, 0, 0,
	195, 325, 308, 257, 240, 241, 194, 0, 293, 219,
	232, 215, 273, 0, 324, 352, 214, 343, 0, 335,
	197, 0, 334, 272, 321, 326, 258, 252, 196, 323,
	256, 251, 244, 223, 366, 236, 284, 250, 285, 237,
	262, 261, 263, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 368, 369, 370, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 0, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 1036,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 1040, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1038, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 353,
	0, 296, 278, 0, 0, 0, 294, 248, 322, 286,
	328, 312, 336, 290, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 368, 369, 370, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	349, 228, 185, 186, 332, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 348, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 239, 280,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 330, 342, 359, 362, 0,
	0, 0, 190, 361, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 357, 264, 265, 266, 267, 231, 0, 207, 360,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 227, 233,
	0, 235, 206, 279, 229, 339, 242, 0, 365, 0,
	0, 0, 0, 271, 238, 304, 243, 249, 292, 338,
	277, 297, 204, 329, 305, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 247, 0,
	288, 226, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 0, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 314,
	0, 0, 345, 346, 347, 367, 331, 0, 218, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 306, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2593, 0, 144, 524,
	0, 0, 0, 0, 0, 202, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 311, 327, 203, 302,
	340, 208, 309, 198, 275, 298, 0, 0, 195, 325,
	308, 257, 240, 241, 194, 0, 293, 219, 232, 215,
	273, 0, 324, 352, 214, 343, 0, 335, 197, 0,
	334, 272, 321, 326, 258, 252, 196, 323, 256, 251,
	244, 223, 366, 236, 284, 250, 285, 237, 262, 261,
	263, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 368, 369, 370, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 349,
	228, 185, 186, 332, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 348, 0, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 239, 280, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 330, 342, 359, 362, 0, 0,
	0, 190, 361, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	357, 264, 265, 266, 267, 231, 0, 207, 360, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 227, 233, 0,
	235, 206, 279, 229, 339, 242, 0, 365, 0, 0,
	0, 0, 271, 238, 304, 243, 249, 292, 338, 277,
	297, 204, 329, 305, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 247, 0, 288,
	226, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 0, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 314, 0,
	0, 345, 346, 347, 367, 331, 0, 218, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 306, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	1040, 0, 0, 0, 202, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1038,
	0, 0, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	0, 324, 352, 214, 343, 0, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 366, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 0, 0, 0,
	310, 0, 0, 245, 0, 0, 0, 353, 0, 296,
	278, 0, 0, 0, 294, 248, 322, 286, 328, 312,
	336, 290, 287, 188, 313, 217, 259, 199, 201, 213,
	220, 222, 224, 225, 268, 269, 281, 301, 315, 316,
	317, 216, 209, 295, 210, 234, 211, 189, 303, 212,
	191, 282, 320, 0, 230, 291, 255, 192, 254, 283,
	319, 318, 200, 344, 350, 351, 355, 0, 356, 0,
	0, 0, 364, 368, 369, 370, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 348, 0, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 357,
	264, 265, 266, 267, 231, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 0, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 0, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 314, 0, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 306, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 1040,
	0, 0, 0, 202, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2146, 0,
	0, 0, 0, 193, 311, 327, 203, 302, 340, 208,
	309, 198, 275, 298, 0, 0, 195, 325, 308, 257,
	240, 241, 194, 0, 293, 219, 232, 215, 273, 0,
	324, 352, 214, 343, 0, 335, 197, 0, 334, 272,
	321, 326, 258, 252, 196, 323, 256, 251, 244, 223,
	366, 236, 284, 250, 285, 237, 262, 261, 263, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 353, 0, 296, 278,
	0, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 368, 369, 370, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 349, 228, 185,
	186, 332, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 348, 0, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 239, 280, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 330, 342, 359, 362, 0, 0, 0, 190,
	361, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 357, 264,
	265, 266, 267, 231, 0, 207, 360, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 227, 233, 0, 235, 206,
	279, 229, 339, 242, 0, 365, 0, 0, 0, 0,
	271, 238, 304, 243, 249, 292, 338, 277, 297, 204,
	329, 305, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 247, 0, 288, 226, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 0, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 314, 0, 0, 345,
	346, 347, 367, 331, 0, 218, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1659,
	0, 0, 0, 0, 221, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 306, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 0, 1661, 0,
	0, 0, 202, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 0, 324,
	352, 214, 343, 0, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 366,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 245, 0, 0, 0, 353, 0, 296, 278, 0,
	0, 0, 294, 248, 322, 286, 328, 312, 336, 290,
	287, 188, 313, 217, 259, 199, 201, 213, 220, 222,
	224, 225, 268, 269, 281, 301, 315, 316, 317, 216,
	209, 295, 210, 234, 211, 189, 303, 212, 191, 282,
	320, 0, 230, 291, 255, 192, 254, 283, 319, 318,
	200, 344, 350, 351, 355, 0, 356, 0, 0, 0,
	364, 368, 369, 370, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 0, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 1678, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 1040, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 353, 0, 296, 278, 0, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	368, 369, 370, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 349, 228, 185, 186, 332,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 348, 0, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 239, 280, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	330, 342, 359, 362, 0, 0, 0, 190, 361, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 357, 264, 265, 266,
	267, 231, 0, 207, 360, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 227, 233, 0, 235, 206, 279, 229,
	339, 242, 0, 365, 0, 0, 0, 0, 271, 238,
	304, 243, 249, 292, 338, 277, 297, 204, 329, 305,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 247, 0, 288, 226, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 0,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 314, 0, 0, 345, 346, 347,
	367, 331, 0, 218, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 306, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2658, 0, 144, 0, 0, 0, 0, 0, 0,
	202, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 311, 327, 203, 302, 340, 208, 309, 198, 275,
	298, 0, 0, 195, 325, 308, 257, 240, 241, 194,
	0, 293, 219, 232, 215, 273, 0, 324, 352, 214,
	343, 0, 335, 197, 0, 334, 272, 321, 326, 258,
	252, 196, 323, 256, 251, 244, 223, 366, 236, 284,
	250, 285, 237, 262, 261, 263, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 368,
	369, 370, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 0, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 314, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 524, 0, 0, 0, 0, 0, 202,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 0, 324, 352, 214, 343,
	0, 335, 197, 0, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 366, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 353, 0, 296, 278, 0, 0, 0, 294,
	248, 322, 286, 328, 312, 336, 290, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 368, 369,
	370, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 349, 228, 185, 186, 332, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	348, 0, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 239, 280, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 330, 342,
	359, 362, 0, 0, 0, 190, 361, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 357, 264, 265, 266, 267, 231,
	0, 207, 360, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 227, 233, 0, 235, 206, 279, 229, 339, 242,
	0, 365, 0, 0, 0, 0, 271, 238, 304, 243,
	249, 292, 338, 277, 297, 204, 329, 305, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 247, 0, 288, 226, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 0, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 314, 0, 0, 345, 346, 347, 367, 331,
	0, 218, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	306, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2562, 0,
	0, 144, 0, 0, 0, 0, 0, 0, 202, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 0,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 245, 0, 0,
	0, 353, 0, 296, 278, 0, 0, 0, 294, 248,
	322, 286, 328, 312, 336, 290, 287, 188, 313, 217,
	259, 199, 201, 213, 220, 222, 224, 225, 268, 269,
	281, 301, 315, 316, 317, 216, 209, 295, 210, 234,
	211, 189, 303, 212, 191, 282, 320, 0, 230, 291,
	255, 192, 254, 283, 319, 318, 200, 344, 350, 351,
	355, 0, 356, 0, 0, 0, 364, 368, 369, 370,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 348,
	0, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 357, 264, 265, 266, 267, 231, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 0, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 314, 0, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 306,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2218, 0, 0,
	144, 0, 0, 0, 0, 0, 0, 202, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 311, 327,
	203, 302, 340, 208, 309, 198, 275, 298, 0, 0,
	195, 325, 308, 257, 240, 241, 194, 0, 293, 219,
	232, 215, 273, 0, 324, 352, 214, 343, 0, 335,
	197, 0, 334, 272, 321, 326, 258, 252, 196, 323,
	256, 251, 244, 223, 366, 236, 284, 250, 285, 237,
	262, 261, 263, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 368, 369, 370, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 0, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 2484,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 353,
	0, 296, 278, 0, 0, 0, 294, 248, 322, 286,
	328, 312, 336, 290, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 368, 369, 370, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	349, 228, 185, 186, 332, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 348, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 239, 280,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 330, 342, 359, 362, 0,
	0, 0, 190, 361, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 357, 264, 265, 266, 267, 231, 0, 207, 360,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 227, 233,
	0, 235, 206, 279, 229, 339, 242, 0, 365, 0,
	0, 0, 0, 271, 238, 304, 243, 249, 292, 338,
	277, 297, 204, 329, 305, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 247, 0,
	288, 226, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 0, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 314,
	0, 0, 345, 346, 347, 367, 331, 0, 218, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 306, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	0, 1661, 0, 0, 0, 202, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 311, 327, 203, 302,
	340, 208, 309, 198, 275, 298, 0, 0, 195, 325,
	308, 257, 240, 241, 194, 0, 293, 219, 232, 215,
	273, 0, 324, 352, 214, 343, 0, 335, 197, 0,
	334, 272, 321, 326, 258, 252, 196, 323, 256, 251,
	244, 223, 366, 236, 284, 250, 285, 237, 262, 261,
	263, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 368, 369, 370, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 349,
	228, 185, 186, 332, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 348, 0, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 239, 280, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 330, 342, 359, 362, 0, 0,
	0, 190, 361, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	357, 264, 265, 266, 267, 231, 0, 207, 360, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 227, 233, 0,
	235, 206, 279, 229, 339, 242, 0, 365, 0, 0,
	0, 0, 271, 238, 304, 243, 249, 292, 338, 277,
	297, 204, 329, 305, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 247, 0, 288,
	226, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 0, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 314, 0,
	0, 345, 346, 347, 367, 331, 0, 218, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 306, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 202, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	0, 324, 352, 214, 343, 0, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 366, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 2293, 0, 0,
	310, 0, 0, 245, 0, 0, 0, 353, 0, 296,
	278, 0, 0, 0, 294, 248, 322, 286, 328, 312,
	336, 290, 287, 188, 313, 217, 259, 199, 201, 213,
	220, 222, 224, 225, 268, 269, 281, 301, 315, 316,
	317, 216, 209, 295, 210, 234, 211, 189, 303, 212,
	191, 282, 320, 0, 230, 291, 255, 192, 254, 283,
	319, 318, 200, 344, 350, 351, 355, 0, 356, 0,
	0, 0, 364, 368, 369, 370, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 348, 0, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 357,
	264, 265, 266, 267, 231, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 0, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 0, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 314, 0, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 306, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 202, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 311, 327, 203, 302, 340, 208,
	309, 198, 275, 298, 0, 0, 195, 325, 308, 257,
	240, 241, 194, 0, 293, 219, 232, 215, 273, 0,
	324, 352, 214, 343, 0, 335, 197, 0, 334, 272,
	321, 326, 258, 252, 196, 323, 256, 251, 244, 223,
	366, 236, 284, 250, 285, 237, 262, 261, 263, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 353, 0, 296, 278,
	0, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 368, 369, 370, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 349, 228, 185,
	186, 332, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 348, 0, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 239, 280, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 330, 342, 359, 362, 0, 0, 0, 190,
	361, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 357, 264,
	265, 266, 267, 231, 0, 207, 360, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 227, 233, 0, 235, 206,
	279, 229, 339, 242, 0, 365, 0, 0, 0, 0,
	271, 238, 304, 243, 249, 292, 338, 277, 297, 204,
	329, 305, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 247, 0, 288, 226, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 0, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 314, 0, 0, 345,
	346, 347, 367, 331, 0, 218, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 306, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1363, 0, 0, 144, 0, 0, 0, 0,
	0, 0, 202, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 0, 324,
	352, 214, 343, 0, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 366,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 245, 0, 0, 0, 353, 0, 296, 278, 0,
	0, 0, 294, 248, 322, 286, 328, 312, 336, 290,
	287, 188, 313, 217, 259, 199, 201, 213, 220, 222,
	224, 225, 268, 269, 281, 301, 315, 316, 317, 216,
	209, 295, 210, 234, 211, 189, 303, 212, 191, 282,
	320, 0, 230, 291, 255, 192, 254, 283, 319, 318,
	200, 344, 350, 351, 355, 0, 356, 0, 0, 0,
	364, 368, 369, 370, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 0, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 353, 0, 296, 278, 0, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	368, 369, 370, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 349, 228, 185, 186, 332,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 348, 0, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 239, 280, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	330, 342, 359, 362, 0, 0, 0, 190, 361, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 357, 264, 265, 266,
	267, 231, 0, 207, 360, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 227, 233, 0, 235, 206, 279, 229,
	339, 242, 0, 365, 0, 0, 0, 0, 271, 238,
	304, 243, 249, 292, 338, 277, 297, 204, 329, 305,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 247, 0, 288, 226, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 0,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 314, 0, 0, 345, 346, 347,
	367, 331, 0, 218, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 306, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 0, 2003, 0, 0, 0,
	202, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 311, 327, 203, 302, 340, 208, 309, 198, 275,
	298, 0, 0, 195, 325, 308, 257, 240, 241, 194,
	0, 293, 219, 232, 215, 273, 0, 324, 352, 214,
	343, 0, 335, 197, 0, 334, 272, 321, 326, 258,
	252, 196, 323, 256, 251, 244, 223, 366, 236, 284,
	250, 285, 237, 262, 261, 263, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 368,
	369, 370, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 0, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 314, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 202,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 0, 324, 352, 214, 343,
	0, 335, 197, 0, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 366, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 353, 0, 296, 278, 0, 0, 0, 294,
	248, 322, 286, 328, 312, 336, 290, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 368, 369,
	370, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 349, 228, 185, 186, 332, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	348, 0, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 239, 280, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 330, 342,
	359, 362, 0, 0, 0, 190, 361, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 357, 264, 265, 266, 267, 231,
	0, 207, 360, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 227, 233, 0, 235, 206, 279, 229, 339, 242,
	0, 365, 0, 0, 0, 0, 271, 238, 304, 243,
	249, 292, 338, 277, 297, 204, 329, 305, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 247, 0, 288, 226, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 0, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 314, 0, 0, 345, 346, 347, 367, 331,
	0, 218, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	306, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 1040, 0, 0, 0, 202, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 0,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 245, 0, 0,
	0, 353, 0, 296, 278, 0, 0, 0, 294, 248,
	322, 286, 328, 312, 336, 290, 287, 188, 313, 217,
	259, 199, 201, 213, 220, 222, 224, 225, 268, 269,
	281, 301, 315, 316, 317, 216, 209, 295, 210, 234,
	211, 189, 303, 212, 191, 282, 320, 0, 230, 291,
	255, 192, 254, 283, 319, 318, 200, 344, 350, 351,
	355, 0, 356, 0, 0, 0, 364, 368, 369, 370,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 348,
	0, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 357, 264, 265, 266, 267, 231, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 0, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 314, 0, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 306,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 0, 0, 0, 0, 0, 202, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1453, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 311, 327,
	203, 302, 340, 208, 309, 198, 275, 298, 0, 0,
	195, 325, 308, 257, 240, 241, 194, 0, 293, 219,
	232, 215, 273, 0, 324, 352, 214, 343, 0, 335,
	197, 0, 334, 272, 321, 326, 258, 252, 196, 323,
	256, 251, 244, 223, 366, 236, 284, 250, 285, 237,
	262, 261, 263, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 368, 369, 370, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 0, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 353,
	0, 296, 278, 0, 0, 0, 294, 248, 322, 286,
	328, 312, 336, 290, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 368, 369, 370, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	349, 228, 185, 186, 332, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 348, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 239, 280,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 330, 342, 359, 362, 0,
	0, 0, 190, 361, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 357, 264, 265, 266, 267, 231, 0, 207, 360,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 227, 233,
	0, 235, 206, 279, 229, 339, 242, 0, 365, 0,
	0, 0, 0, 271, 238, 304, 243, 249, 292, 338,
	277, 297, 204, 329, 305, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 247, 0,
	288, 226, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 0, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 314,
	0, 0, 345, 346, 347, 367, 331, 0, 218, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 306, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	0, 1690, 0, 0, 0, 202, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 311, 327, 203, 302,
	340, 208, 309, 198, 275, 298, 0, 0, 195, 325,
	308, 257, 240, 241, 194, 0, 293, 219, 232, 215,
	273, 0, 324, 352, 214, 343, 0, 335, 197, 0,
	334, 272, 321, 326, 258, 252, 196, 323, 256, 251,
	244, 223, 366, 236, 284, 250, 285, 237, 262, 261,
	263, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 368, 369, 370, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 349,
	228, 185, 186, 332, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 348, 0, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 239, 280, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 330, 342, 359, 362, 0, 0,
	0, 190, 361, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	357, 264, 265, 266, 267, 231, 0, 207, 360, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 227, 233, 0,
	235, 206, 279, 229, 339, 242, 0, 365, 0, 0,
	0, 0, 271, 238, 304, 243, 249, 292, 338, 277,
	297, 204, 329, 305, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 247, 0, 288,
	226, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 0, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 0, 0,
	0, 345, 346, 347, 367, 331, 314, 218, 0, 0,
	1613, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 306, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 0, 0, 0,
	0, 0, 202, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 0, 324,
	352, 214, 343, 0, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 366,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 245, 0, 0, 0, 353, 0, 296, 278, 0,
	0, 0, 294, 248, 322, 286, 328, 312, 336, 290,
	287, 188, 313, 217, 259, 199, 201, 213, 220, 222,
	224, 225, 268, 269, 281, 301, 315, 316, 317, 216,
	209, 295, 210, 234, 211, 189, 303, 212, 191, 282,
	320, 0, 230, 291, 255, 192, 254, 283, 319, 318,
	200, 344, 350, 351, 355, 0, 356, 0, 0, 0,
	364, 368, 369, 370, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 0, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 1040, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 353, 0, 296, 278, 0, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 1325, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	368, 369, 370, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 349, 228, 185, 186, 332,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 348, 0, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 239, 280, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	330, 342, 359, 362, 0, 0, 0, 190, 361, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 357, 264, 265, 266,
	267, 231, 0, 207, 360, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 227, 233, 0, 235, 206, 279, 229,
	339, 242, 0, 365, 0, 0, 0, 0, 271, 238,
	304, 243, 249, 292, 338, 277, 297, 204, 329, 305,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 247, 0, 288, 226, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 0,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 314, 0, 0, 345, 346, 347,
	367, 331, 0, 218, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 306, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 0, 0, 0, 0, 0,
	202, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 311, 327, 203, 302, 340, 208, 309, 198, 275,
	298, 0, 0, 195, 325, 308, 257, 240, 241, 194,
	0, 293, 219, 232, 215, 273, 0, 324, 352, 214,
	343, 0, 335, 197, 0, 334, 272, 321, 326, 258,
	252, 196, 323, 256, 251, 244, 223, 366, 236, 284,
	250, 285, 237, 262, 261, 263, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 368,
	369, 370, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 0, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 314, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 202,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 0, 324, 352, 214, 343,
	0, 335, 197, 0, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 366, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 353, 0, 296, 278, 0, 0, 0, 294,
	248, 322, 286, 328, 312, 336, 399, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 368, 369,
	370, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 349, 228, 185, 186, 332, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	348, 0, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 239, 280, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 330, 342,
	359, 362, 0, 0, 0, 190, 361, 0, 0, 0,
	0, 0, 0, 400, 333, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 357, 264, 265, 266, 267, 231,
	0, 207, 360, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 227, 233, 0, 235, 206, 279, 229, 339, 242,
	0, 365, 0, 0, 0, 0, 271, 238, 304, 243,
	249, 292, 338, 277, 297, 204, 329, 305, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 247, 0, 288, 226, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 0, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 314, 0, 0, 345, 346, 347, 367, 331,
	0, 218, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	306, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 0, 0, 202, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 0,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 245, 0, 0,
	0, 353, 0, 296, 278, 0, 0, 0, 294, 248,
	322, 286, 328, 312, 336, 290, 287, 188, 313, 217,
	259, 199, 201, 213, 220, 222, 224, 225, 268, 269,
	281, 301, 315, 316, 317, 216, 209, 295, 210, 234,
	211, 189, 303, 212, 191, 282, 320, 0, 230, 291,
	255, 192, 254, 283, 319, 318, 200, 344, 350, 351,
	355, 0, 356, 0, 0, 0, 364, 368, 369, 370,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 348,
	0, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 357, 264, 265, 266, 267, 231, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 0, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 314, 0, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 141, 221,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 306,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 0, 0, 0, 0, 0, 202, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 311, 327,
	203, 302, 340, 208, 309, 198, 275, 298, 0, 0,
	195, 325, 308, 257, 240, 241, 194, 0, 293, 219,
	232, 215, 273, 0, 324, 352, 214, 343, 0, 335,
	197, 0, 334, 272, 321, 326, 258, 252, 196, 323,
	256, 251, 244, 223, 366, 236, 284, 250, 285, 237,
	262, 261, 263, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 368, 369, 370, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 0, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 353,
	0, 296, 278, 0, 0, 0, 294, 248, 322, 286,
	328, 312, 336, 290, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 368, 369, 370, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	349, 228, 185, 186, 332, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 348, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 239, 280,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 330, 342, 359, 362, 0,
	0, 0, 190, 361, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 357, 264, 265, 266, 267, 231, 0, 207, 360,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 227, 233,
	0, 235, 206, 279, 229, 339, 242, 0, 365, 0,
	0, 0, 0, 271, 238, 304, 243, 249, 292, 338,
	277, 297, 204, 329, 305, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 247, 0,
	288, 226, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 0, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 314,
	0, 0, 345, 346, 347, 367, 331, 0, 218, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 306, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	0, 0, 0, 0, 0, 202, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 311, 327, 203, 302,
	340, 208, 309, 198, 275, 298, 0, 0, 195, 325,
	308, 257, 240, 241, 194, 0, 293, 219, 232, 215,
	273, 0, 324, 352, 214, 343, 0, 335, 197, 0,
	334, 272, 321, 326, 258, 252, 196, 323, 256, 251,
	244, 223, 366, 236, 284, 250, 285, 237, 262, 261,
	263, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	440, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 368, 369, 370, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 349,
	228, 185, 186, 332, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 348, 0, 0, 0,
	0, 299, 0, 2244, 0, 0, 0, 239, 280, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 330, 342, 359, 362, 0, 0,
	0, 190, 361, 0, 0, 0, 0, 1607, 0, 0,
	333, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	357, 264, 265, 266, 267, 231, 0, 207, 360, 289,
	0, 0, 0, 621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2226, 0, 354, 227, 233, 0,
	235, 206, 279, 229, 339, 242, 136, 365, 38, 124,
	104, 0, 271, 238, 304, 243, 249, 292, 338, 277,
	297, 204, 329, 305, 253, 0, 129, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 130, 184, 0,
	0, 0, 92, 0, 0, 653, 0, 0, 0, 0,
	0, 0, 0, 2323, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 133, 0, 187, 0, 247, 0, 288,
	226, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 0, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 0, 0,
	0, 345, 346, 347, 367, 331, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 655, 0, 419, 654, 418,
	425, 415, 2230, 125, 126, 0, 127, 128, 0, 0,
	0, 422, 423, 2234, 424, 428, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 0,
	0, 0, 640, 2223, 0, 0, 0, 2225, 2227, 2229,
	622, 2231, 2232, 2233, 2235, 2236, 2237, 2239, 2240, 2241,
	2242, 0, 0, 0, 0, 0, 0, 437, 0, 0,
	439, 0, 0, 0, 0, 438, 0, 645, 0, 0,
	0, 103, 123, 134, 0, 75, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2245, 0, 419, 0,
	418, 425, 415, 122, 116, 115, 0, 0, 0, 0,
	44, 0, 422, 423, 0, 424, 428, 0, 0, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 0, 0, 2243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2222, 639, 0, 0, 0, 0, 0, 0, 437, 0,
	620, 439, 0, 0, 0, 0, 438, 0, 118, 119,
	120, 623, 648, 0, 0, 0, 0, 0, 0, 2238,
	0, 0, 0, 0, 0, 0, 2228, 0, 0, 0,
	0, 131, 0, 0, 0, 643, 0, 0, 0, 0,
	0, 0, 411, 413, 412, 0, 0, 0, 0, 87,
	0, 0, 417, 121, 0, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 421, 0, 0, 644, 649, 0,
	0, 436, 0, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 405, 0, 636, 0, 638, 652, 0, 0,
	0, 635, 633, 632, 0, 637, 624, 625, 626, 627,
	628, 0, 650, 651, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 646, 647, 0, 0, 37, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 413, 412, 0, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 436, 39, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 416, 420, 426, 0, 427, 429,
	0, 0, 430, 431, 432, 0, 0, 434, 435, 0,
	0, 0, 0, 0, 0, 0, 105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 90, 91, 95, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 420, 426, 0, 427,
	429, 0, 0, 430, 431, 432, 0, 0, 434, 435,
}

var yyPact = [...]int{
	29946, -1000, -316, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -224, 28520, 28520,
	-1000, -1000, 1649, -1000, 28011, 2749, 29029, 165, 157, 29029,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 449, -1000, 27502, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 410, 30067, 29538,
	8149, 29029, -293, -1000, 2225, -157, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 11820, 545, 26993, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 29907, 52, 545, 584, 593, 718, 718, 11712,
	-71, -72, 2225, 261, 175, -1000, 748, 29946, 29029, 1569,
	389, 29029, -1000, 1052, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 389, -1000, -1000, -1000, 2225, 2225, -1000, 29029, 29029,
	-12, 1152, -1000, 289, 245, 233, 1048, -1000, -1000, -1000,
	-1000, -1000, 2259, -1000, 29029, 29029, 1926, 29029, -1000, 1255,
	349, 30158, 2076, 764, 502, 1942, -1000, -1000, 1906, -1000,
	87, 126, 142, 401, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 95, -1000, 2147, -1000, -1000, 80, -1000, -1000, 69,
	-1000, -1000, -1000, -73, -1000, -1000, -1000, -1000, -1000, -1000,
	-159, -1000, -1000, 667, 1330, 8149, -1000, 1486, -1000, 3363,
	-1000, -1000, -1000, -1000, 5594, 9676, 9676, 9676, 9676, -1000,
	-1000, 1778, 8149, 1905, 1769, 1904, -1000, -1000, -1000, -1000,
	1044, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1568, 9167, -1000, 1903, 1902, 1901, 1896,
	1876, 1870, 1869, 1868, 1858, 1857, 1681, 1855, 1564, 1562,
	1852, 1851, 1849, 1561, 1681, 1681, 1848, 1844, 1843, 1839,
	1835, 1834, 1833, 1832, 1828, 1827, 1823, 1822, 1821, 1820,
	1819, 1802, 1801, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3179, -1000, 1042, 850,
	-1000, 1789, 2052, 2186, 1717, 2245, 2144, 2137, 2121, 2117,
	1415, -1000, -1000, 29029, 29029, 409, 409, 409, 409, 429,
	409, 448, 447, 444, 409, -1000, -1000, -1000, -1000, -1000,
	-1000, 522, -1000, -1000, -1000, -1000, 853, 29029, -1000, 1740,
	1112, 2162, 370, 366, 204, -1000, 1207, 1207, 1207, 1112,
	249, 360, 2186, 2186, -82, -106, 1112, 1112, -106, 1112,
	59, -1000, -1000, -1000, 1207, 354, 1207, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2140, 2136, 410, 37, 29029, 410,
	416, -1000, -187, -1000, -1000, 617, -1000, 564, -1000, 1255,
	320, 319, 861, 1214, -1000, 1094, 29029, 29029, 29029, 1094,
	1094, 14769, 14260, -1000, 29029, -1000, 2186, 1717, -1000, 1661,
	2074, 1660, 1717, 410, 410, 410, 410, 410, 410, 410,
	29029, 29029, 7121, 7121, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 285, 2054, 251, 1787, -1000, 29029, 260, 2186,
	2052, 2186, -1000, -1000, 1029, 1413, 1546, -1000, -1000, 289,
	1116, -1000, 798, -1000, -1000, -1000, -1000, 29029, 225, -1000,
	-1000, 1536, 1786, -1000, 356, 741, 919, -1000, 132, 3176,
	23931, 1255, 23931, 29029, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -74, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 84, -1000, 8149, 8149, 8149,
	8149, 8149, -1000, 395, 8658, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9676, 9676, 9676, 9676, 9676, 9676, 9676, 9676,
	9676, 9676, 9676, 9676, 1776, 1233, 9676, 9676, 9676, 9676,
	2074, 2438, 857, 160, -1000, -1000, -1000, -1000, -1000, 1124,
	1330, 8149, 8149, 8149, 29029, -1000, 3204, 8149, 8149, 2384,
	8149, 2115, 4066, 29029, 8149, -1000, 1657, 1656, -1000, -1000,
	1271, 8149, -1000, -1000, 8149, 9676, 8149, -1000, -1000, -1000,
	109, 2115, 2115, 8149, 8149, 2115, 2115, 2115, 1187, 2115,
	2115, 2115, 2115, 2115, 2115, 2115, 2115, 29029, 2038, 55,
	-1000, -1000, -1000, 1728, -1000, 1737, 1737, 1728, 1728, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1766, 1785,
	-1000, -1000, 1736, 1736, 1736, 1728, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1764, 1764, 1765, 1764, 29029, 2186, -293, 6612, -1000,
	-298, 2052, 8149, -1000, -1000, 8149, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1545, 2107, -1000, 1783, 1012, 29029,
	1163, 29029, 23931, 1255, 29029, 29029, 409, 409, 409, 29029,
	416, -1000, 29029, 853, 2106, 29029, 2253, 9676, 9676, 26484,
	1207, 1112, -1000, 29029, -1000, -1000, -1000, 1207, 29029, 1207,
	2253, 1207, -1000, -1000, -1000, 1112, 1112, -1000, -1000, -1000,
	-1000, 1207, 1207, -1000, -1000, -94, 2253, 2253, -91, -1000,
	29029, 29029, 409, 29029, -1000, 29029, -1000, -1000, 29029, 29029,
	29029, 2130, -1000, 23931, 21895, -1000, -148, 581, 566, 576,
	-1000, -1000, 352, 378, 13751, 305, 23931, 5084, -1000, -1000,
	1094, 1094, 1094, 5084, 5084, 902, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 849, -1000, 78, 2052, -1000, -1000, -1000,
	-1000, -1000, 29029, 23931, 1255, 29029, 29029, 29029, 29029, -1000,
	1780, 898, -1000, -1000, 11203, 1005, 898, 1543, 29029, 1542,
	1941, 2026, -1000, 1779, 12732, 29029, -1000, -1000, -295, -1000,
	12222, 29029, 2052, -1000, 2052, 29029, -1000, 2160, -1000, 289,
	196, -1000, -1000, -1000, -1000, -1000, -1000, 999, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 848, -1000, 29029,
	-1000, -1000, 132, 23931, 24440, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 127, -1000, -1000, 150, -1000, 423, 19, 1114,
	-1000, -1000, 44, 145, 469, 1330, -1000, 1168, 1168, 1174,
	-1000, 411, -1000, -1000, -1000, -1000, 1778, -1000, -1000, -1000,
	1502, 1159, -1000, 1166, 1166, 942, 942, 942, 942, 942,
	1414, 1414, -1000, -1000, -1000, 5594, 1776, 9676, 9676, 9676,
	9676, 396, 396, 1829, 3199, -1000, 8149, 1158, -1000, 8149,
	1576, 2430, 925, 992, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1654, 667, 1652, 1560, 2257, 1650,
	8149, -1000, -1000, 1412, 7640, -1000, -1000, -1000, 1646, 991,
	1645, -1000, -1000, -1000, 1641, 846, 1640, 1278, 1639, 815,
	8149, 8149, 1110, 1105, 8149, 8149, 8149, 8149, 1636, 8149,
	8149, 8149, 8149, 8149, 8149, 8149, 8149, -1000, 8149, 49,
	-1000, -1000, -1000, -1000, 1406, -1000, 1404, -1000, -1000, -1000,
	1538, 1538, -1000, 1403, -1000, -1000, -1000, -1000, 1402, -1000,
	-1000, 1400, -1000, -1000, -1000, -1000, 1095, -1000, 1330, -1000,
	1532, -1000, 951, 810, -1000, 1352, -1000, -1000, 29029, 10185,
	29029, 1740, 2073, 43, -1000, 771, -1000, 19, 720, 1924,
	2031, 29029, 29029, 29029, 2102, 25975, -1000, 1771, 1081, -1000,
	-1000, 8149, -1000, -1000, 1923, 29029, 29029, 2253, -1000, -1000,
	-1000, 29029, -1000, -1000, -1000, 29029, 2253, 2253, 1112, 1207,
	1207, -1000, -1000, 1207, -1000, 985, -1000, 29029, -1000, -1000,
	1740, 39, 2114, 104, 771, 2696, 856, -1000, -1000, -1000,
	-1000, 16805, 16805, 13242, 16805, -1000, 1119, -1000, -1000, 572,
	560, 552, -1000, -1000, 420, -1000, -1000, 720, -1000, -1000,
	-1000, 1770, 1145, -1000, -1000, 1769, -1000, 5084, 5084, 5084,
	-1000, -1000, 17314, 29029, -1000, -169, -1000, -142, -1000, -1000,
	808, 720, 1939, 803, -1000, 803, -1000, 10185, 2253, 7121,
	-1000, 21895, -1000, -1000, 25458, -1000, 24949, 2253, -302, 821,
	-117, -1000, 2045, -295, 29029, 29029, 1076, 124, -1000, 1068,
	-1000, 711, -1000, 1768, -1000, 1067, 1992, 759, -1000, 1139,
	-1000, -1000, 959, -13, -1000, -1000, 29029, 1536, 1065, 24440,
	751, -1000, 419, 949, 945, -1000, 23931, 82, 23931, -1000,
	23931, -1000, -1000, 228, -1000, 29029, 2050, -1000, -1000, -1000,
	1510, -320, -1000, -1000, -1000, -1000, -1000, 1063, -1000, 396,
	396, 1829, 3028, -1000, 9676, -1000, 9676, 2400, 1128, -1000,
	8149, 1260, 374, -1000, 757, 15787, 29029, -1000, -1000, 8149,
	8149, -1000, 2388, -1000, 8149, 8149, 1487, -1000, 29029, -1000,
	-1000, -1000, 15787, -1000, 9676, -1000, 8149, 752, 2275, -65,
	-65, 2268, 2241, 2187, 1061, -65, 2097, 2088, 2070, 2035,
	2007, 1972, 1968, 1952, 1330, -1000, -1000, 1634, 1627, 1053,
	-1000, 1040, 1626, 1039, 1035, 6612, -1000, -117, 8149, 8149,
	8149, 2009, -1000, -1000, 61, 1625, 800, -1000, -1000, -1000,
	3272, 1737, 1728, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1766, -1000, -1000, 1736, 1736, 1736, 1728, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1764, 1764,
	1765, 1764, -1000, 2100, -1000, -68, 1121, 376, 23931, 292,
	-1000, 1937, 286, -1000, 2031, -1000, 621, -1000, 1760, 1757,
	1750, 158, 3272, 29029, 825, -1000, 929, 29946, -1000, 29029,
	1330, -1000, 1255, -1000, 1112, -1000, -1000, 2253, 976, -1000,
	-1000, 2253, 1112, 1112, 1207, 29029, -1000, 2099, -68, 1121,
	96, 1136, 376, 29029, 21895, 21895, 21895, 21895, -1000, 1979,
	1973, -1000, 1976, 1956, 1986, 29029, 21895, 1740, -1000, 20368,
	-1000, -1000, -1000, 2074, 1025, 2527, 635, 8149, -1000, -1000,
	-1000, 543, 23931, 1529, 305, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 29029, 29029, 1623, 2250, -1000, 783, -1000,
	-1000, 913, -1000, 2250, -1000, 1399, 1527, -45, -28, 1221,
	711, 759, 1020, -1000, 124, 29029, 1989, 1738, -1000, 29029,
	-295, 6612, 243, -295, 29029, 6612, 29029, 1396, -1000, -1000,
	-1000, 2255, 23931, 1255, 1070, 23422, -1000, 76, -1000, 108,
	334, 1525, -1000, 442, 77, -1000, 1135, 1510, -1000, -1000,
	-1000, 9676, -1000, -1000, -1000, -1000, 1330, 8149, 1615, -1000,
	519, 519, 1613, -1000, 1728, 1737, -1000, 1728, 1736, 1728,
	519, 519, 1612, -1000, 1360, 1925, -1000, 1919, 1891, 8149,
	-1000, 1611, 3430, 884, -185, -65, -1000, 1735, -1000, -65,
	-65, -65, -65, -1000, -65, -65, -65, -65, -65, -65,
	-65, -65, -1000, -1000, -1000, 1515, -1000, -1000, -1000, 1395,
	-1000, 1394, -1000, -45, 1330, 1330, -1000, -1000, 2003, 1513,
	454, 10185, 2027, 230, 1257, -1000, -1000, 22913, -1000, 323,
	-1000, -1000, -1000, 453, 106, 1389, 318, -1000, 29029, 29029,
	-1000, -1000, -1000, -1000, -1000, 1121, 1121, 1121, 10694, 10694,
	10694, 146, 1176, -1000, 389, 776, 912, 21895, 29029, -1000,
	21386, 1609, -1000, 720, 2253, -1000, 29029, -1000, 2253, 2253,
	1112, -1000, 230, 1257, 22913, 1132, 1512, 323, 774, -1000,
	1125, 1912, 1936, 1912, -1000, -1000, -1000, -1000, 1955, -1000,
	1954, -1000, -1000, 774, -1000, -1000, -1000, -1000, -1000, 635,
	-1000, 2155, 553, 553, 553, 1608, -1000, 751, 1606, -1000,
	-1000, -1000, -1000, -1000, 2243, 2244, 22404, 2243, -1000, -302,
	-300, -25, 2242, 2240, 2299, 230, 29029, 220, -1000, -295,
	29029, -1000, -1000, 1604, 745, -295, -1000, 711, -1000, -1000,
	-1000, -1000, 1255, -1000, 105, -1000, -1000, -1000, -1000, -1000,
	-1000, 0, -1000, 29029, -1000, 1510, 1509, 75, -1000, 1330,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 8149, -1000, -1000, -1000, 1873,
	-1000, -1000, 8149, 1603, 1504, -1000, 388, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1597, 1593, -300, -1000, -1000, -1000, 3272, -1000, 1223, -1000,
	-1000, 1501, 16, -1000, -1000, -1000, 1494, 1485, 1383, -1000,
	-1000, 1420, 897, 28, -1000, -1000, -1000, -1000, -1000, -1000,
	1734, 15787, 16296, 1480, 1590, 721, -1000, -1000, -1000, 3272,
	563, -1000, 29029, 1213, 553, 409, 553, 1185, 1732, -1000,
	-1000, 1581, 1575, 391, 1141, 1131, -1000, 1377, 16805, 21895,
	21386, 749, -1000, 911, -1000, -1000, -1000, 2253, -1000, -1000,
	2253, -1000, -1000, 16, 1479, -1000, -1000, 2247, 29029, 6612,
	-1000, -1000, 8149, 1731, -1000, 8149, -1000, -1000, -1000, -1000,
	-1000, 1729, 2036, -1000, -1000, -1000, -1000, -1000, -1000, 8149,
	8149, -1000, -1000, -1000, -302, 1474, -1000, -1000, 2238, 1473,
	1425, 29029, -1000, -1000, -295, -1000, 711, 1017, -1000, 711,
	720, -1000, -1000, 124, -1000, -1000, -1000, 1840, -1000, 1836,
	-65, -1000, 2247, -1000, 2236, -1000, -1000, -302, -234, -1000,
	-1000, -1000, -1000, 214, -1000, -1000, 115, -1000, -1000, 1408,
	353, -1000, 19350, -1000, -1000, -1000, -1000, -1000, 2479, 10694,
	2288, -1000, -1000, 29029, 29029, -1000, 29029, 29029, 409, 8149,
	84, 2479, 601, 1126, -1000, 1370, -1000, 1359, -1000, 2253,
	749, 911, -1000, -1000, 1069, -1000, -1000, -1000, -1000, 2186,
	-1000, -1000, 1330, 29029, 1330, 20877, -1000, 2220, 2218, 1330,
	667, -305, -1000, 1471, -22, -1000, -1000, 714, 711, -1000,
	-91, -1000, -1000, -1000, 47, 8149, -305, 29029, 328, 1459,
	-1000, -1000, 110, -1000, -1000, 1015, -1000, 1728, 8149, 383,
	29867, -1000, 1121, 1121, 678, 1121, 1121, 1121, 1121, 270,
	248, 1121, 1121, 1121, 1121, 1121, 1121, 1121, 1121, 1121,
	1121, 1121, 1121, 1121, 1121, 1720, -1000, -1000, 2288, -1000,
	-1000, 1231, 9676, -1000, -1000, 1458, 16296, 569, 558, 1718,
	-1000, 234, 2278, -1000, 1183, 1181, -1000, 29029, -1000, 1715,
	1838, 173, 1710, -1000, 1705, 1702, 29029, 1663, -1000, -91,
	383, 300, 152, -1000, 1358, -1000, -1000, 2247, -1000, -1000,
	1010, 994, -1000, -1000, -1000, -1000, -1000, 1700, -1000, 2216,
	-307, -52, -33, 1565, -1000, 3557, -1000, -1000, -1000, 667,
	-1000, 2071, -1000, -1000, -1, -1000, -1000, -1000, 19350, 2049,
	1596, 178, 2215, 2479, -1000, 1339, 1334, 1121, 1121, 1332,
	1456, 1454, 1453, 1121, 1121, 1328, 1451, 20368, 1308, 1306,
	1305, 1391, 1450, 533, 1379, 1376, 1350, 29029, 1699, 1435,
	-1000, -1000, 1829, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1290, 1698, -126, -1000, -1000, 1685,
	19350, 215, 215, 19350, 19350, 19350, 1683, 450, -1000, 178,
	-1000, 153, -1000, 1111, -1000, 1282, -1000, 2186, -1000, -1000,
	19859, 29029, 1425, -1000, 1449, 412, -27, -33, -1000, 2209,
	-23, 2200, 2198, -1000, -1000, 4575, -296, -61, 259, 1445,
	-1000, 159, -1000, -1000, 2049, -1000, 2196, 208, -1000, -1000,
	-1000, 15787, 15787, -1000, -1000, -1000, -1000, 1443, 1439, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 284, 29029, 982, -1000, 1123, 1289, 8149, 1681, -225,
	19350, 981, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 956,
	953, 937, 19350, -1000, -1000, -1000, 223, -1000, -1000, -1000,
	1276, -1000, -1000, -1000, -1000, 935, -1000, -1000, -1000, 1680,
	1259, -25, -41, 2195, -1000, 1425, 2194, 1425, 1425, 1173,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1121, 1437, 143,
	-1000, -1000, -1000, 18841, 194, 238, 229, -1000, 350, -1000,
	-1000, -1000, -1000, -1000, -1000, 264, 932, -1000, 1435, 1434,
	-1000, 1341, -1000, 1935, -1000, 58, 931, -1000, -1000, -1000,
	-1000, 930, -1000, -1000, -1000, 29029, 2101, 15278, -40, -1000,
	-1000, -1000, 1427, -1000, 1425, -1000, -1000, 4575, 1256, -1000,
	29029, -1000, 29029, 190, 1250, 9676, 1676, 9676, 1675, 202,
	1674, -1000, -1000, -1000, -1000, -1000, 450, -1000, 1932, 1930,
	2297, -1000, -1000, -1000, -1000, 159, 159, 159, 159, 73,
	-1000, -1000, 29029, -1000, 927, -1000, -1000, -1000, 906, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 896, 1669, 2193, -1000,
	2752, 29029, 2316, 29029, 1668, 1107, 9676, -1000, -1000, 2272,
	-1000, 2262, 571, 571, -1000, 659, -1000, 1103, -1000, 18332,
	29029, -1000, -1000, 326, 197, -1000, 890, -1000, 833, 17823,
	1244, 2077, -1000, -1000, -1000, 1284, 232, -1000, 29029, 6103,
	-1000, 888, 807, -1000, 29029, 181, -1000, -1000, -1000, 786,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1330, 29029, -1000,
	326, 1944, -1000, 1240, -1000, -1000, -1000, 1991, 508, -1000,
	-1000, 1991, 189, -1000, 377, 1426, -1000, -1000, 766, -1000,
	29029, 556, 8149, -1000, 189, 2479, -1000, 8149, 758, -1000,
	2479, 674, -1000, -1000,
}

var yyPgo = [...]int{
	0, 122, 2805, 203, 143, 140, 201, 2804, 2803, 2087,
	2077, 2802, 2801, 2800, 2797, 2796, 2795, 2794, 2793, 2792,
	2790, 2789, 2787, 2786, 2785, 2784, 2783, 2782, 2781, 2780,
	2779, 2777, 196, 2776, 2775, 2774, 2773, 2770, 2769, 2768,
	2766, 2765, 2764, 2758, 2757, 2754, 2748, 2746, 2745, 2744,
	2743, 2732, 2728, 2727, 2724, 2723, 2722, 2721, 135, 2720,
	2070, 2719, 2718, 2717, 2714, 2713, 2707, 176, 2706, 2703,
	2695, 2693, 2692, 2690, 2689, 2688, 2686, 2685, 2684, 2682,
	2681, 2680, 2678, 2676, 2675, 146, 2674, 2673, 127, 2672,
	2671, 2670, 2668, 197, 187, 62, 2667, 44, 112, 151,
	206, 1732, 208, 205, 161, 125, 72, 2666, 2095, 2665,
	145, 185, 116, 30, 2664, 150, 2663, 117, 51, 41,
	198, 110, 55, 118, 97, 2661, 179, 63, 83, 84,
	2659, 2658, 202, 165, 2654, 100, 2653, 2652, 2651, 2650,
	172, 99, 2648, 61, 2645, 73, 207, 96, 33, 2644,
	2639, 2637, 79, 2635, 2633, 2632, 2628, 155, 2626, 2625,
	123, 58, 2624, 2622, 2620, 57, 2619, 32, 2618, 49,
	2617, 2616, 2613, 2611, 64, 2610, 2609, 14, 16, 18,
	2608, 15, 1, 2607, 180, 54, 87, 103, 2606, 384,
	2604, 2603, 2602, 119, 2601, 504, 2599, 2598, 2595, 2593,
	22, 2592, 170, 52, 2591, 81, 104, 48, 166, 168,
	2590, 2589, 2588, 60, 76, 74, 0, 2577, 43, 2575,
	2573, 2571, 204, 2570, 189, 167, 186, 137, 209, 124,
	2569, 2562, 59, 2559, 120, 75, 102, 10, 2555, 190,
	2554, 309, 158, 2553, 174, 2552, 126, 3, 109, 2550,
	2547, 25, 229, 2545, 2544, 2543, 133, 2542, 2541, 71,
	129, 2538, 2537, 2534, 29, 2533, 36, 26, 2527, 82,
	2526, 210, 2525, 152, 105, 149, 138, 115, 181, 188,
	70, 65, 2513, 1145, 114, 89, 17, 2512, 183, 2511,
	194, 182, 2509, 160, 2507, 195, 341, 175, 2505, 153,
	9, 37, 34, 2504, 11, 2503, 91, 2501, 2500, 21,
	2499, 23, 2495, 2489, 2488, 2487, 6, 2483, 2478, 2477,
	2, 4, 2476, 5, 173, 2474, 2472, 2470, 2467, 53,
	108, 2466, 134, 154, 2465, 2464, 80, 2463, 2460, 2459,
	233, 2458, 2457, 2452, 2450, 2449, 2448, 2446, 2432, 2431,
	2430, 66, 42, 2424, 2421, 2418, 2417, 67, 111, 2416,
	2415, 2413, 2411, 28, 148, 2410, 19, 2407, 24, 27,
	31, 2406, 101, 2402, 12, 156, 2401, 2398, 13, 2397,
	2396, 7, 8, 2393, 2390, 69, 2387, 38, 35, 77,
	86, 2386, 20, 159, 107, 2370, 2364, 200, 199, 164,
	2363, 131, 192, 214, 2358, 178, 2357, 2356, 2354, 2353,
	2351, 2349, 1170, 2347, 2346, 193, 56, 85, 95, 2345,
	2342, 2341, 68, 121, 98, 93, 169, 2340, 162, 2337,
	2330, 88, 2329, 2326, 2323, 2322, 2321, 163, 2320, 2316,
	2314, 191, 157, 2313,
}

//line mysql_sql.y:8704
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 436, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 91, 434, 434, 434, 435, 435,
	89, 89, 89, 78, 90, 384, 384, 383, 383, 382,
	382, 337, 337, 381, 381, 381, 380, 380, 380, 379,
	379, 378, 378, 377, 377, 375, 375, 376, 374, 373,
	373, 373, 371, 371, 371, 367, 367, 369, 368, 368,
	370, 362, 362, 365, 365, 363, 363, 363, 363, 366,
	361, 361, 361, 360, 360, 77, 77, 77, 285, 285,
	76, 76, 299, 299, 299, 299, 299, 297, 297, 297,
	297, 297, 297, 296, 296, 295, 295, 300, 300, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	68, 68, 68, 68, 71, 71, 71, 72, 294, 294,
	294, 69, 70, 70, 284, 284, 289, 289, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	293, 293, 293, 291, 291, 290, 290, 292, 292, 62,
	62, 62, 65, 64, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 63, 63, 63, 63, 63, 63, 59,
	59, 59, 59, 59, 58, 58, 60, 60, 281, 281,
	280, 73, 73, 74, 438, 438, 437, 439, 439, 439,
	439, 75, 81, 81, 81, 81, 81, 81, 81, 80,
	80, 83, 83, 82, 84, 67, 67, 67, 67, 67,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 408,
	408, 408, 410, 410, 220, 221, 440, 223, 219, 219,
	219, 404, 404, 405, 406, 407, 407, 407, 79, 7,
	7, 7, 7, 57, 55, 61, 61, 421, 421, 56,
	428, 428, 340, 340, 234, 234, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 344, 345, 230, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 39, 38, 38, 38,
	270, 270, 37, 441, 441, 209, 209, 46, 47, 48,
	49, 50, 51, 36, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 54, 54, 356, 356, 443, 443, 443,
	52, 53, 339, 339, 339, 44, 43, 42, 41, 41,
	35, 35, 34, 34, 40, 227, 227, 227, 229, 229,
	225, 442, 442, 311, 311, 228, 228, 33, 33, 33,
	226, 226, 208, 224, 224, 224, 8, 8, 6, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 18, 20,
	278, 278, 275, 19, 14, 13, 16, 12, 15, 17,
	5, 5, 5, 5, 9, 9, 10, 105, 105, 147,
	147, 416, 416, 412, 412, 413, 413, 413, 414, 414,
	415, 415, 85, 350, 350, 350, 350, 350, 350, 4,
	127, 127, 128, 128, 349, 349, 349, 349, 349, 349,
	349, 282, 282, 393, 393, 393, 394, 126, 126, 121,
	121, 351, 351, 248, 395, 395, 359, 359, 358, 358,
	357, 357, 124, 124, 125, 125, 108, 108, 94, 94,
	364, 364, 364, 364, 372, 372, 336, 336, 174, 174,
	203, 203, 204, 204, 98, 98, 99, 99, 99, 99,
	99, 99, 401, 401, 403, 403, 402, 123, 123, 119,
	119, 120, 120, 120, 118, 118, 117, 116, 116, 115,
	113, 113, 113, 114, 114, 114, 101, 101, 101, 100,
	100, 100, 100, 100, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 102, 102, 409, 409,
	409, 341, 341, 341, 347, 347, 186, 186, 187, 187,
	185, 185, 103, 103, 104, 104, 104, 104, 184, 184,
	183, 106, 106, 112, 111, 111, 107, 107, 107, 107,
	194, 194, 193, 193, 193, 193, 88, 92, 92, 93,
	131, 131, 192, 191, 191, 191, 130, 130, 129, 129,
	122, 122, 110, 110, 110, 110, 190, 109, 188, 433,
	433, 432, 432, 431, 429, 429, 429, 430, 430, 430,
	430, 386, 386, 386, 386, 386, 214, 214, 214, 218,
	218, 217, 217, 217, 217, 217, 222, 3, 3, 3,
	3, 24, 24, 24, 24, 24, 24, 24, 30, 139,
	140, 29, 132, 132, 133, 133, 134, 134, 135, 136,
	136, 136, 138, 137, 28, 21, 417, 420, 418, 418,
	422, 422, 422, 423, 423, 423, 424, 424, 22, 419,
	425, 425, 425, 279, 279, 276, 277, 277, 274, 273,
	273, 273, 427, 427, 426, 426, 426, 215, 215, 23,
	269, 269, 271, 272, 272, 272, 263, 263, 263, 263,
	27, 267, 267, 268, 268, 268, 268, 268, 264, 264,
	266, 266, 262, 262, 262, 262, 262, 26, 261, 261,
	259, 259, 257, 257, 258, 258, 256, 256, 256, 260,
	260, 25, 25, 25, 96, 95, 95, 95, 206, 206,
	205, 205, 97, 31, 159, 159, 325, 325, 325, 325,
	325, 343, 343, 343, 326, 326, 326, 327, 327, 327,
	328, 328, 328, 328, 328, 342, 342, 301, 301, 302,
	302, 302, 305, 305, 317, 317, 318, 318, 316, 316,
	323, 323, 322, 322, 321, 321, 320, 320, 319, 319,
	319, 319, 314, 314, 313, 313, 303, 303, 303, 303,
	303, 304, 304, 304, 312, 312, 315, 315, 165, 165,
	166, 166, 166, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 391, 391, 392, 168, 168, 168, 172, 172,
	172, 172, 172, 172, 167, 167, 169, 169, 148, 148,
	146, 146, 141, 141, 142, 142, 143, 143, 144, 144,
	145, 145, 145, 145, 145, 145, 287, 287, 389, 389,
	390, 390, 385, 385, 385, 388, 388, 388, 388, 388,
	387, 387, 149, 201, 201, 201, 216, 216, 216, 216,
	200, 200, 200, 164, 164, 163, 163, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 286, 286, 231, 231, 232, 232, 181, 180,
	180, 180, 180, 180, 178, 179, 177, 177, 177, 177,
	177, 176, 176, 175, 175, 175, 265, 265, 173, 173,
	171, 171, 171, 170, 170, 170, 324, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 240, 240, 245, 245, 400, 400, 399, 150, 150,
	150, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	160, 160, 160, 309, 309, 309, 309, 309, 310, 310,
	310, 307, 307, 308, 308, 249, 250, 250, 348, 348,
	306, 306, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 355,
	355, 355, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 411, 411, 411, 396, 396, 396,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 198,
	198, 198, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 251, 251, 252, 252, 352, 352,
	352, 352, 352, 352, 353, 353, 354, 354, 354, 354,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 238,
	195, 195, 195, 253, 246, 246, 247, 247, 241, 241,
	241, 241, 241, 241, 241, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 242, 242, 244,
	244, 255, 255, 255, 254, 254, 254, 254, 254, 254,
	254, 162, 162, 162, 162, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 152, 152, 152, 152,
	156, 156, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 157, 157, 157, 157,
	155, 155, 155, 155, 155, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 86, 87, 87, 154, 202, 202, 329, 329, 332,
	332, 330, 330, 331, 333, 333, 333, 334, 334, 334,
	335, 335, 335, 338, 338, 207, 207, 207, 213, 213,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 11, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 2, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 3, 3, 2, 4, 4, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 2, 2, 0, 1, 4, 2, 4, 1,
	5, 3, 2, 1, 2, 2, 4, 4, 5, 2,
	1, 3, 4, 4, 1, 2, 9, 7, 1, 3,
	3, 1, 1, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 2, 4, 3, 3, 1, 1, 1, 1, 1,
	2, 3, 4, 7, 2, 3, 3, 4, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 2, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 7, 7, 7, 8, 0, 4, 7,
	0, 3, 0, 2, 0, 1, 1, 1, 1, 4,
	2, 2, 3, 3, 4, 5, 3, 4, 4, 2,
	2, 2, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 3, 2,
	4, 4, 4, 4, 1, 1, 1, 3, 2, 3,
	1, 1, 1, 6, 8, 0, 1, 1, 1, 1,
	5, 5, 0, 1, 1, 3, 3, 3, 6, 7,
	4, 4, 7, 8, 3, 0, 2, 2, 0, 2,
	2, 1, 1, 1, 1, 0, 1, 4, 4, 5,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 3, 1, 4, 6, 4, 4, 4, 3, 6,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	0, 4, 1, 3, 3, 1, 5, 6, 5, 5,
	3, 0, 5, 0, 1, 3, 3, 1, 3, 1,
	3, 1, 3, 4, 0, 1, 0, 1, 1, 3,
	1, 1, 0, 4, 1, 3, 2, 1, 0, 8,
	0, 4, 7, 4, 0, 2, 0, 2, 0, 2,
	0, 4, 1, 3, 1, 1, 4, 3, 4, 5,
	4, 5, 2, 3, 1, 3, 6, 0, 3, 0,
	1, 2, 4, 4, 0, 1, 3, 1, 3, 3,
	0, 1, 1, 0, 2, 2, 3, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 3, 2, 3, 1, 4, 3, 0,
	1, 1, 2, 5, 2, 2, 2, 0, 2, 3,
	3, 0, 1, 3, 1, 3, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 7, 1,
	1, 12, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 4, 1, 1, 7, 7, 1, 4, 1, 1,
	3, 4, 3, 0, 1, 1, 0, 2, 7, 1,
	0, 2, 2, 1, 3, 2, 1, 3, 2, 1,
	3, 2, 0, 1, 3, 4, 3, 1, 1, 4,
	1, 3, 1, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 5, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 11, 9, 11, 2, 2, 4, 5, 1, 3,
	0, 3, 5, 10, 0, 2, 0, 3, 2, 4,
	3, 0, 2, 1, 0, 2, 3, 0, 2, 3,
	0, 3, 2, 4, 3, 0, 1, 0, 6, 0,
	3, 5, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 0, 1,
	1, 3, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 4, 1, 3, 3, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 1,
	7, 7, 7, 7, 8, 5, 0, 1, 0, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 1, 5, 6,
	4, 1, 1, 2, 0, 1, 1, 2, 5, 0,
	1, 1, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 2, 2, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 3, 5, 2, 2, 2, 2, 1,
	1, 2, 5, 6, 4, 6, 6, 1, 1, 1,
	1, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 5, 0, 1, 3, 0, 1, 0, 2,
	0, 6, 8, 6, 5, 5, 6, 6, 6, 6,
	5, 6, 6, 6, 6, 6, 6, 6, 6, 1,
	1, 1, 4, 4, 6, 8, 6, 4, 5, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 6, 2, 2,
	4, 6, 4, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 2, 3, 5, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -436, -2, -1, -3, -89, -4, -85, -5, -6,
	-8, -66, -80, -82, -84, -83, -32, -7, -79, -58,
	-59, -62, -68, -73, -76, -77, -78, -90, -86, -87,
	-88, -98, -91, -24, -23, -22, -21, 402, 12, 447,
	-9, -10, -401, -11, 234, -219, -220, -221, -223, -440,
	-33, -34, -35, -41, -42, -43, -44, -52, -53, -54,
	-36, -37, -38, -39, -46, -47, -48, -49, -50, -51,
	-40, -56, -55, -61, -57, 209, -60, 61, -63, -64,
	-65, -69, -70, -71, -72, -74, -75, 333, 339, 392,
	529, 530, 46, -99, -101, 531, -25, -26, -27, -28,
	-29, -30, -31, 205, 14, 480, -12, -15, -13, -16,
	-14, -19, -20, -18, -17, 229, 228, 37, 292, 293,
	294, 337, 227, 206, 13, 137, 138, 140, 141, 30,
	41, 315, -100, 67, 207, -102, 10, 533, 440, 532,
	-108, 38, -146, -216, 70, 78, -210, -212, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 450, 313, 314, 477, 246, 270,
	363, 273, 280, 137, 156, 150, 178, 170, 145, 250,
	285, 251, 77, 140, 433, 88, 413, 389, 143, 265,
	267, 269, 272, 252, 166, 161, 264, 248, 529, 159,
	253, 39, 254, 183, 255, 256, 482, 409, 312, 415,
	277, 387, 160, 410, 268, 412, 185, 189, 425, 339,
	154, 155, 417, 427, 182, 226, 42, 479, 238, 428,
	187, 181, 177, 436, 281, 279, 180, 153, 176, 249,
	50, 191, 190, 192, 383, 384, 385, 386, 257, 258,
	327, 424, 173, 162, 317, 146, 22, 431, 233, 414,
	340, 259, 274, 282, 186, 188, 240, 245, 481, 391,
	244, 278, 429, 158, 237, 266, 232, 432, 147, 333,
	342, 260, 141, 271, 426, 435, 49, 355, 152, 144,
	223, 138, 242, 247, 11, 261, 262, 263, 284, 283,
	275, 174, 239, 179, 164, 151, 175, 139, 241, 434,
	356, 527, 315, 372, 172, 169, 243, 216, 430, 416,
	142, 376, 357, 167, 286, 523, 524, 525, 328, 311,
	287, 288, 165, 230, 408, 289, 291, 382, 304, 358,
	390, 364, 359, 198, 295, 419, 184, 526, 296, 297,
	298, -108, -60, -10, -9, -100, -101, -146, 213, -224,
	23, 387, -67, 388, 209, 67, -216, -5, -4, -85,
	-58, -98, -222, -216, 292, 292, -222, 213, -216, 244,
	371, -340, 219, -296, -269, 245, -295, -271, -298, -272,
	31, 205, 207, 206, 241, 14, 337, 215, 12, 10,
	338, 227, 24, 25, 27, 13, 339, 341, 28, 342,
	345, 346, 347, 41, 350, 351, 234, 70, 78, 73,
	252, -140, -216, -247, -241, 95, 235, -243, -236, -237,
	-239, -381, -375, -235, 67, 121, 122, 129, 96, -238,
	-324, 35, 98, 487, 132, 448, -196, -197, -198, -199,
	-216, -376, -374, 73, 79, 82, 85, 86, 84, 83,
	163, 81, 74, 133, 134, -101, 70, -396, 495, -211,
	516, 515, 46, -346, -354, 212, -352, 168, 230, 164,
	12, 127, 382, 165, 492, 512, 450, 496, 519, 489,
	490, 484, 485, 486, 488, 497, 499, 511, -355, 507,
	517, 518, 505, 72, 71, 510, 509, 498, 493, 494,
	500, 483, 491, 501, 502, 508, 513, 514, 321, 88,
	322, 323, 440, 316, 324, 219, 387, 55, 325, 326,
	327, 328, 329, 447, 330, 56, 331, 320, 234, 372,
	332, 167, 184, 452, 451, 453, 444, 441, 439, 442,
	443, 445, 446, 503, 504, 506, -292, -290, -216, -92,
	-93, 521, -117, -118, -189, 19, 6, 7, 8, 9,
	-434, 389, 481, 295, 334, 216, 313, 372, 244, -263,
	-261, -342, 289, 285, 214, 224, 223, 89, 440, 212,
	348, -412, -413, 202, 203, 204, -403, 473, -402, -216,
	323, 26, 213, 334, 419, 420, 421, 422, 423, -45,
	-356, -339, 416, 415, -228, 414, 407, 418, 409, 314,
	205, 474, -207, 358, 390, 240, 437, 438, 335, 391,
	425, 426, 410, 88, 171, 168, 216, 313, 440, 372,
	-412, 142, 139, -283, 142, 94, 147, 146, -283, 244,
	371, 40, -289, 382, -288, -290, 425, 426, 436, 71,
	72, 424, -207, 88, 408, 408, -118, -189, -117, -99,
	-101, -88, -401, 313, 372, 244, 215, 213, 216, 440,
	292, 334, -341, -409, 31, -347, 199, 200, 201, 32,
	33, -1, -216, 73, -124, 236, -146, 135, -124, -118,
	-117, -118, -146, -200, -216, 389, 104, -67, -67, 388,
	-404, -405, -406, -408, 209, 388, 387, 135, 15, -222,
	-222, 65, -146, -271, 244, -296, -269, 35, 64, 136,
	217, 136, 64, 67, 335, 313, 372, 336, 214, 440,
	213, 348, 216, 244, 349, 313, 372, 213, 216, 440,
	244, 313, 213, 216, 372, 244, 349, 407, 408, 216,
	26, 340, 343, 344, 408, -360, 436, 136, 94, 91,
	92, 93, -241, 111, -254, 104, 105, 106, 107, 108,
	109, 110, 118, 117, 128, 121, 122, 123, 124, 125,
	126, 127, 119, 120, 114, 95, 112, 116, 113, 97,
	-101, -241, -247, 46, -239, -239, -239, -239, -324, -245,
	-241, 67, 67, 67, 135, 73, -241, 67, 67, 67,
	67, 67, 67, 67, 67, -353, 67, 67, -251, -252,
	67, 67, 73, 73, 67, 67, 67, 73, -252, -252,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 136, -152, -156,
	-153, -155, -154, -158, -157, 168, 169, 132, 172, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 30,
	184, 230, 164, 165, 166, 167, 185, 150, 170, 478,
	193, 151, 194, 152, 195, 153, 196, 154, 155, 197,
	156, 159, 160, 161, 158, 135, -118, 136, 67, -94,
	38, -120, 21, -102, -101, 20, 31, 32, 31, 32,
	31, 32, 31, 32, 79, -139, -216, -132, -216, -259,
	219, -259, -259, -259, 215, -259, 213, 213, 213, -259,
	-414, 149, 136, -403, -123, 67, -227, 112, 116, 23,
	242, 242, 279, -441, -442, 15, 114, -225, -442, -225,
	-227, -443, 215, 417, 42, 243, 242, -119, -120, -119,
	411, 408, -311, 412, 413, -228, -227, -227, -228, -227,
	213, 216, 440, -441, 242, -441, 30, 30, -340, -340,
	474, -208, -216, -340, -415, 218, 429, 480, 145, 146,
	147, -271, 244, 244, 136, 104, 23, -291, 104, 115,
	-290, -290, -290, -291, -291, -167, 40, -215, 132, -216,
	73, -167, 40, -438, -437, -146, -119, -102, -101, 68,
	68, 68, -340, -340, -340, -340, -340, -340, -340, -222,
	-132, -103, -104, 123, -241, -216, -103, 38, 408, 38,
	-349, -127, -98, 314, 67, 67, -216, -350, 46, -98,
	67, 30, -119, -94, -120, 135, 79, 73, -67, 68,
	136, -407, 85, 86, -410, 182, 174, -216, -81, 73,
	-3, -4, -5, -6, -32, -58, -98, -377, -375, 67,
	31, 381, 64, 15, -297, 213, 440, 334, 240, 216,
	313, -295, -278, -275, -273, -215, -271, -274, -273, -300,
	-200, 408, -95, 393, 291, -241, -241, -241, -241, -241,
	84, 95, 311, 85, 86, -236, -255, 31, 287, 288,
	-237, -237, -237, -237, -237, -237, -237, -237, -237, -237,
	-237, -237, -244, -253, -324, 67, 114, 112, 116, 113,
	97, -239, -239, -237, -237, 68, 136, -400, -399, 99,
	-241, -241, -241, -216, -397, -398, 454, 455, 456, 457,
	458, 459, 460, 461, 462, 463, 464, 325, 320, 326,
	324, 316, 332, 327, 328, 167, 471, 472, 465, 466,
	467, 468, 469, 470, -246, -247, -246, -241, -397, -246,
	-195, 32, 31, -241, -411, 309, 308, 310, -121, -216,
	-246, 68, 68, 68, 79, -247, -246, -237, -246, -398,
	-195, -195, -247, -247, -195, -195, -195, -195, 123, -195,
	-195, -195, -195, -195, -195, -195, -195, -290, 40, -335,
	356, 355, -329, -331, 67, -330, 67, -330, -329, -329,
	67, 67, -332, 67, -332, -332, -329, -333, 67, -333,
	-334, 67, -333, -216, -119, -93, -358, -357, -241, 40,
	522, -94, -241, -116, -115, -241, -435, 73, 34, 67,
	135, -146, 95, -417, -216, -279, -276, -273, -269, -216,
	-216, -259, -259, -259, -146, -415, -402, 34, -122, -216,
	-185, 16, -239, -239, -273, 244, -441, -227, -209, -208,
	-229, -442, -224, -229, -185, -442, -227, -227, -229, -225,
	408, -185, -185, -311, -226, -216, -226, -259, -209, -209,
	-146, -417, -417, 30, -279, -111, -106, -110, -107, -112,
	-188, -190, -109, 67, -146, -101, -216, 430, 431, 143,
	146, 145, 31, 381, -294, 381, 31, -269, -288, -284,
	73, 382, -274, -293, 64, 132, -357, -291, -291, -291,
	-293, -293, 131, 136, -439, 429, 430, 202, -94, -417,
	-278, -269, -216, -148, -146, -148, -216, 67, -184, 136,
	-183, 15, -217, -216, 34, 73, 135, -184, 73, -148,
	73, -282, 64, 46, 30, 67, -126, 68, -121, -125,
	-216, -351, -248, -395, 521, -126, 68, -393, -394, -121,
	-94, -94, -216, 23, -67, -405, 135, 136, -122, -297,
	-277, -274, -299, 123, -216, -285, 136, 480, 534, 71,
	217, -427, -426, 373, 68, 136, -361, 218, 447, 73,
	535, 198, 84, 311, 85, 86, -324, -247, -244, -239,
	-239, -237, -237, -242, 231, -242, 94, -241, -240, -399,
	101, -241, 34, 68, 136, 65, 135, 68, 68, 15,
	15, 68, -241, 68, 15, 15, -241, 68, 135, 68,
	68, 68, 65, 68, 136, 68, 136, -247, -241, 68,
	68, -241, -241, -241, -247, 68, -241, -241, -241, -241,
	-241, -241, -241, -241, -241, -338, 357, 79, 79, -202,
	73, -202, 79, 79, 79, 136, 68, 73, 136, 22,
	136, -113, 36, 37, -140, -133, -134, -135, -136, -152,
	-200, 169, 172, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 230, 164, 165, 166, 167, 185,
	150, 170, 151, 152, 153, 154, 155, 156, 159, 160,
	161, 158, -216, -123, 35, -420, 360, -428, 136, 40,
	-426, -262, 65, -257, -258, -256, -260, 40, -146, -146,
	-146, -159, 34, 15, -105, -147, -216, 67, 68, 136,
	-241, -270, 65, -216, -209, -185, -216, -146, -216, -185,
	-185, -227, -229, -229, -225, 135, -208, -123, -421, 360,
	30, 319, -428, 30, -191, -192, -193, -194, 53, 57,
	59, 54, 55, 56, 60, 30, 136, -214, -218, 34,
	-216, 73, -214, -101, -106, -111, -214, 67, 144, 147,
	147, 146, 217, 67, 104, -293, -293, -293, 40, -215,
	-437, 436, 430, 64, 136, -133, -185, -104, -106, -216,
	73, -216, 123, -185, -174, 524, 38, -364, 412, 39,
	-351, -393, -128, -417, 68, 136, -127, 314, 68, 136,
	136, 67, 68, 46, 136, 104, 135, 389, -216, -375,
	68, -299, 136, 217, 135, 135, -275, 339, -215, -277,
	20, 480, -200, 38, -206, -205, 73, 535, 68, -242,
	-242, 94, -239, -236, 68, 102, -241, 100, -150, -152,
	355, 356, -151, -157, 132, 168, 230, 167, 166, 164,
	355, 356, -167, -216, -241, -241, 68, -241, -241, 15,
	-216, -167, -237, -241, -118, 68, -306, 403, -306, 68,
	68, 68, 68, -306, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 136, 68, 68, 68, 136,
	68, 136, -357, -364, -241, -241, -115, -114, 43, 347,
	68, 136, -152, 34, -423, 414, 362, -213, 104, -234,
	-233, 315, 41, -344, 382, 368, 369, -276, 244, 64,
	303, 304, 305, 306, -256, -207, 131, 255, 67, 67,
	67, -325, 296, -152, -146, -105, -216, 15, 136, -416,
	135, -1, -216, -269, -227, -185, -442, -185, -227, -227,
	-229, -216, 34, -423, -213, 319, 104, -234, -281, -280,
	-200, -110, -110, -110, -110, 53, 53, 53, 58, 53,
	58, 53, -193, -281, -112, -123, -218, 68, -433, -432,
	-431, -429, 61, 218, 62, -246, 147, -277, -230, 73,
	-284, -146, -146, 68, -187, 17, 135, -187, 79, 73,
	-372, 399, 394, 396, 90, 68, 136, -127, -121, 46,
	67, -216, -248, -359, -358, 46, -98, -351, -394, -357,
	-216, 79, 15, -274, -269, 123, 123, -216, 340, -285,
	73, 361, 73, 213, 536, 136, 104, -206, -236, -241,
	68, -160, 155, 154, -160, 68, -329, -330, -329, -332,
	-329, -160, -160, 68, 68, 23, 68, 68, 68, -241,
	68, 68, 136, -348, 449, -306, 67, -306, -306, -306,
	-306, -306, -306, -306, -306, -306, -306, -306, -306, 73,
	79, 79, -372, 44, 45, 73, 211, -135, 40, -98,
	-424, 77, -418, 73, -216, -425, 77, 363, 134, 317,
	40, 364, 365, 379, 312, 79, 79, 370, -419, -216,
	-146, -213, -213, -213, -141, -142, -143, -149, -144, -200,
	-232, -145, 222, 220, 224, -390, 89, 225, 276, 90,
	215, -141, -141, -326, 298, 20, 79, 122, -124, 65,
	135, -106, -147, -216, 123, 68, -185, -216, -185, -185,
	-227, -98, -424, -418, 104, 73, -425, -185, 136, 104,
	-130, -129, 64, 65, -131, 64, -129, 53, 53, -185,
	-431, -430, 23, -390, -390, -390, 68, 68, -186, 18,
	20, 123, -186, -174, -336, 523, -368, -370, 394, 20,
	20, 13, -98, -417, 46, -98, -351, -128, 68, -351,
	-269, -285, 382, -146, -205, 73, 536, -241, 68, -241,
	68, 73, -250, -249, 236, 68, 68, -336, -137, -152,
	-235, 73, -422, 373, 73, 73, 79, 40, 79, 134,
	366, -345, 67, -167, -169, -215, 132, 73, 68, 136,
	-152, -145, -216, 90, -389, -390, -259, -389, 90, 67,
	68, 68, -327, 235, 79, 122, 79, 122, 79, -214,
	-106, -216, -185, -416, 135, -185, -185, -422, 73, -118,
	-280, -357, -241, 67, -241, 67, 53, 19, 17, -241,
	-247, -174, 73, 20, 73, -366, 73, -281, -351, 68,
	-127, 68, 68, -306, -118, 20, -174, 479, 20, 480,
	316, 40, 79, 40, 367, -264, -266, -200, 67, -165,
	-166, -182, 353, 246, -260, 250, 77, 251, 389, 252,
	215, 254, 255, 256, 226, 257, 258, 259, 382, 260,
	261, 262, 263, 336, 6, 299, -143, -164, -163, -161,
	84, 95, 40, 353, -162, 77, 131, 269, 247, 270,
	-181, -231, 64, 359, 220, 89, 90, 341, -232, -385,
	-387, -216, -387, -216, -385, -385, -259, -241, -96, -95,
	-165, -328, 138, 79, 122, 79, 79, -185, -185, -119,
	-122, -386, -216, 220, 20, 20, -203, 525, 73, 396,
	-97, -362, -311, -308, -307, -310, 400, 278, 406, -247,
	-203, -138, -216, 73, 361, 73, 316, 68, 136, -329,
	-241, -301, 236, 136, -182, -213, -213, -207, 131, -213,
	-213, -213, -213, 253, 253, -213, -213, -213, -213, -213,
	-213, -213, -213, -213, -213, -213, -213, -213, -213, 67,
	-161, 84, -237, 73, -169, -170, 40, 268, 264, -171,
	40, 248, 249, -173, 67, 276, 13, 90, 90, -146,
	67, 65, 286, 67, 67, 67, -387, 68, -97, -301,
	-343, 146, 297, 480, 79, 122, 79, -118, 68, 68,
	136, 67, 20, -337, 526, -371, 399, -365, -363, 394,
	395, 396, 397, 68, -309, 97, 366, 370, -241, 34,
	382, -267, -266, -113, 68, -302, 285, 20, -182, 79,
	79, -213, -213, 79, 73, 73, 73, -213, -213, 79,
	73, -218, 79, 79, 79, 79, 40, 73, -172, 40,
	264, 268, 265, 266, 267, 79, 40, 79, 40, 79,
	40, -216, 67, -391, -392, 73, 79, 67, -352, -265,
	67, -264, -388, 303, 304, 305, 307, 306, -388, -264,
	-264, -264, 67, -287, -286, 277, 95, -302, 297, 79,
	122, 79, -119, -216, 220, -204, -216, -366, 73, -373,
	218, -369, -370, 398, -363, 20, 396, 20, 20, -309,
	521, 404, 405, 404, 405, 73, -268, 226, 77, 480,
	301, 302, -113, 20, -303, 278, 279, -304, -315, 281,
	-167, -167, 73, 73, -168, 247, -148, 68, 136, 104,
	68, -241, -251, -176, -175, 476, -264, 68, 68, 68,
	68, -264, 277, 79, 68, 136, -380, 67, 79, -368,
	-367, -369, 20, -366, 20, -366, -366, 94, -213, 73,
	300, -200, 67, -313, 282, 67, -311, 67, -311, 90,
	304, 248, 249, 68, -392, 73, 68, -180, -178, -179,
	64, 410, 274, 275, 68, -267, -267, -267, -267, 68,
	-216, -384, 30, 68, -379, -378, -201, -374, -216, 399,
	400, 73, -366, -309, 79, -216, -300, -305, 283, 79,
	-237, 67, -237, 67, -312, 280, 67, -286, -179, 64,
	-178, 64, 14, 13, -181, -383, -382, -381, 68, 136,
	135, 68, -317, 67, 20, 68, -300, 68, -300, 67,
	104, -237, -177, 271, 272, 30, 146, -177, 136, 104,
	-378, -216, -318, -316, 236, -304, 68, 68, 68, -300,
	79, 68, 84, 40, 273, -382, 40, -241, 135, 68,
	136, -216, -314, 284, 68, -216, -316, -319, 46, 79,
	-323, -320, 67, -182, 238, 114, -323, -182, -322, -321,
	283, 239, 67, 68, 136, -216, 235, 67, -247, -321,
	-320, -247, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 677, 678, 679, 680, 0, 0, 0,
	450, 451, 0, 428, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 349, 350, 351, 352, 353, 354,
	355, 299, 300, 301, 302, 0, 234, 230, 209, 210,
	211, 170, 171, 172, 173, 241, 242, 312, 0, 0,
	0, 0, 0, 534, -2, 35, 681, 682, 683, 684,
	685, 686, 687, -2, 463, 0, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 288, 289, 290, 284, 285,
	287, 286, -2, 0, 463, 223, 0, 214, 214, 0,
	0, 0, 554, 0, 0, 569, 591, 33, 0, 0,
	512, 0, 517, 910, 946, 947, 948, 949, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 512, 235, 452, 453, 554, 554, 426, 0, 270,
	0, 1396, 274, 0, 0, 0, 423, 265, 266, 267,
	268, 269, 0, 676, 0, 0, 261, 0, 229, 1455,
	0, 0, 0, 0, 0, 0, 113, 740, 115, 742,
	119, 126, 0, 0, 132, 133, 136, 137, 138, 139,
	140, 0, 144, 0, 146, 149, 0, 151, 152, 0,
	155, 156, 157, 0, 167, 168, 169, 743, 744, 745,
	-2, 44, 690, 1321, 1216, 0, 1223, 1224, 1235, 1246,
	1019, 1020, 1021, 1022, 0, 0, 0, 0, 0, 1029,
	1030, 0, 1043, 1550, 0, 0, 1037, 1038, 1039, 1040,
	53, 65, 66, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 0, 1189, 1006, 946, 0, 1558, 0,
	1578, 1577, 0, 0, 1174, 0, 1164, 0, -2, -2,
	0, 0, 1522, -2, 1555, 1574, 1582, 1559, 1581, 1552,
	1553, 1547, 1548, 1549, 1551, 1560, 1562, 1573, 0, 1569,
	1579, 1580, 0, 67, 68, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1180, -2,
	1182, 1183, 1185, 1186, 1187, 1188, -2, 1191, 1192, 1193,
	-2, -2, 1196, 1197, 1198, 1199, 1200, 1201, 1204, -2,
	1206, -2, -2, 1176, 1177, 1178, 1179, 1168, 1169, 1170,
	1171, 1172, 1173, -2, -2, -2, 0, 207, 205, 554,
	627, 0, -2, 0, 0, 0, 574, 577, 580, 583,
	0, 36, 37, 0, 0, 770, 770, 770, 770, 0,
	770, 0, 0, 0, 770, 747, 748, 749, 768, 769,
	816, 468, 464, 465, 466, 467, 542, 0, 544, 547,
	405, 357, 0, 0, 0, 369, 363, 0, 0, 405,
	0, 0, 549, 549, 0, 415, 405, 405, -2, 405,
	0, 374, 375, 376, 363, 0, 363, 380, 381, 382,
	393, 394, 416, 1345, 0, 0, 312, 312, 0, 312,
	470, 224, 225, 213, 215, 0, 219, 0, 212, 1455,
	0, 0, 181, 1522, 186, 0, 1403, 1469, 1418, 0,
	0, 1436, 0, -2, 0, 251, 549, 0, 555, 0,
	554, 0, 0, 312, 312, 312, 312, 312, 312, 312,
	0, 0, 0, 0, 592, 593, 588, 589, 590, 594,
	595, 3, 0, 0, 480, 0, 516, 0, 0, 549,
	-2, 0, 427, 271, 950, 0, 0, 275, 276, 0,
	0, 291, 0, 294, 279, 280, 281, 0, 0, 263,
	264, 0, 0, 231, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 123, 120, 127, 130, 131, 141,
	148, 0, 160, 162, 165, 121, 128, 134, 135, 142,
	163, 122, 124, 125, 129, 164, 166, 143, 147, 161,
	145, 150, 153, 154, 159, 0, 94, 0, 0, 0,
	0, 0, 1222, 0, 0, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1216, 0, 0, 1025, 1026, 1027, 1028, 1031, 0,
	1044, 0, 0, 0, 0, 1275, 0, 1214, 1214, 0,
	1214, 1210, 0, 0, 1214, 1153, 0, 0, 1155, 1165,
	0, 0, 1158, 1159, 1214, 0, 1214, 1163, 1149, 1150,
	0, 1210, 1210, 0, 0, 1210, 1210, 1210, 1210, 1210,
	1210, 1210, 1210, 1210, 1210, 1210, 1210, 0, 1322, 1340,
	1277, 1278, 1279, 1327, 1281, 1331, 1331, 1327, 1327, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 0, 0,
	1320, 1300, 1329, 1329, 1329, 1327, 1324, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1334, 1334, 1337, 1334, 0, 549, 0, 0, 537,
	0, 518, 0, 571, 573, 0, 575, 576, 578, 579,
	581, 582, 584, 585, 38, 0, 689, 0, 692, 0,
	0, 0, 0, 0, 0, 0, 770, 770, 770, 0,
	470, 469, 0, 543, 0, 0, 600, 0, 0, 0,
	363, 405, 368, 365, 364, 411, 412, 408, 0, 408,
	600, 0, 387, 388, 389, 405, 405, 395, 550, 396,
	397, 408, 0, 413, 414, 0, 600, 600, 0, 404,
	0, 0, 770, 365, 378, 365, 1346, 1347, 0, 0,
	0, 0, 422, 0, 0, 471, 0, 0, 217, 0,
	222, 174, 0, 0, 0, 0, 0, 0, 203, 204,
	0, 0, 0, 0, 0, 194, 197, 904, 905, 737,
	738, 198, 199, 243, 244, 0, 518, 570, 572, 566,
	567, 568, 0, 0, 0, 0, 0, 0, 0, 448,
	0, 608, 602, 604, 671, 53, 608, 0, 0, 0,
	491, 0, 485, 0, 0, 0, 911, 472, 504, 474,
	0, 493, 518, 540, 518, 0, 272, 0, 277, 0,
	0, 293, 295, 296, 297, 282, 283, 424, 259, 260,
	252, 253, 254, 255, 256, 257, 258, 262, 63, 0,
	232, 233, 0, 0, 0, 107, 108, 109, 110, 111,
	112, 114, 98, 440, 442, 729, 741, 0, 732, 0,
	117, 158, 90, 0, 0, 1217, 1218, 1219, 1220, 1221,
	1225, 0, 1227, 1229, 1231, 1233, 0, 1251, -2, -2,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1236, 1249, 1250, 0, 0, 0, 0, 0,
	0, 1247, 1247, 1242, 0, 1023, 0, 1041, 1045, 0,
	0, 0, 0, 54, 1209, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 1146, 1147, 1148, 0, 1215, 0, 1216, 0, 0,
	0, 1211, 1212, 0, 0, 1114, 1115, 1116, 0, 499,
	0, 1175, 1154, 1166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 1343,
	1341, 1342, 1280, 1328, 0, 1305, 0, 1306, 1307, 1308,
	0, 0, 1301, 0, 1302, 1303, 1304, 1296, 0, 1297,
	1298, 0, 1299, 206, 626, 628, 0, 508, 510, 511,
	0, 538, 551, 556, 557, 560, 34, 39, 0, 694,
	0, 547, 0, 0, 706, 310, 723, 0, 739, 762,
	-2, 0, 0, 0, 794, 0, 545, 0, 0, 640,
	356, 0, 406, 407, 360, 1455, 365, 600, 370, 366,
	371, 0, 410, 372, 373, 0, 600, 600, 405, 408,
	408, 400, 401, 0, 417, 420, 418, 0, 377, 379,
	547, 307, 0, 0, 310, 613, 0, 614, 615, 611,
	642, 666, 666, 0, 666, 646, 910, 226, 227, 0,
	0, 221, 175, 176, 0, 178, 179, 180, 187, 182,
	184, 0, 0, 188, 200, 201, 202, 0, 0, 0,
	192, 193, 0, 0, 246, 247, 249, 0, 536, 438,
	439, 443, 0, 445, 908, 446, 447, 694, 600, 0,
	609, 0, 605, 672, 0, 674, 0, 600, 528, 0,
	520, 479, 0, 504, 493, 0, 0, 480, 497, 0,
	514, 473, 501, 0, 505, 0, 0, 478, 494, 0,
	539, 541, 951, 0, 278, 292, 0, 0, 0, 0,
	101, 726, 0, 102, 106, 96, 0, 0, 0, 731,
	0, 728, 733, 0, 116, 0, 0, 91, 92, 785,
	790, 0, 1226, 1228, 1230, 1232, 1234, 0, 1237, 1247,
	1247, 1243, 0, 1238, 0, 1240, 0, 1217, 0, 1046,
	0, 0, 0, 1034, 0, 0, 0, 1102, 1103, 0,
	0, 1107, 0, 1109, 0, 0, 0, 1113, 0, 1152,
	1167, 1156, 0, 1160, 0, 1162, 0, 554, 0, 1080,
	1080, 0, 0, 0, 0, 1080, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 1276, 1344, 0, 0, 0,
	1325, 0, 0, 0, 0, 0, 629, 520, 0, 0,
	0, 563, 561, 562, 0, 0, 695, 696, 698, 699,
	0, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1388, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 693, 0, 771, 713, 1348, 314, 0, 0,
	725, 0, 0, 767, -2, 774, 0, 780, 0, 0,
	0, 796, 0, 0, 0, 457, 461, 33, 548, 0,
	601, 358, 0, 359, 405, 367, 409, 600, 910, 390,
	391, 600, 405, 405, 408, 0, 419, 0, 713, 1348,
	0, 0, 314, 0, 0, 0, 0, 0, 633, 0,
	0, 632, 0, 0, 0, 0, 0, 547, 667, 0,
	669, 670, 644, -2, 0, 613, 649, 1214, 228, 216,
	218, 0, 0, 0, 0, 189, 190, 191, 195, 196,
	245, 248, 250, 0, 0, 0, 598, 603, 610, 673,
	675, 54, 606, 598, 40, 0, 0, 524, 0, 0,
	484, 490, 0, 482, 480, 0, 0, 0, 513, 0,
	504, 506, 0, 504, 0, 0, 0, 0, 425, 64,
	298, 0, 0, 0, 0, 0, 441, 0, 730, 98,
	0, 0, 118, 0, 0, 788, 0, 790, 1213, 1239,
	1241, 0, 1248, 1244, 1024, 1032, 1042, 0, 0, 1048,
	1060, 1060, 0, 1051, 1327, 1331, 1054, 1327, 1329, 1327,
	1060, 1060, 0, 55, 0, 0, 1108, 0, 0, 0,
	500, 0, 0, 0, 1078, 1080, 1084, 0, 1085, 1080,
	1080, 1080, 1080, 1090, 1080, 1080, 1080, 1080, 1080, 1080,
	1080, 1080, 1333, 1332, 1318, 0, 1319, 1330, 1335, 0,
	1338, 0, 509, 524, 552, 553, 558, 559, 0, 0,
	0, 0, 700, 0, 716, 714, 715, 0, 1349, 720,
	315, 316, 317, 318, 0, 0, 0, 724, 0, 0,
	763, 764, 765, 766, 775, 1348, 1348, 1348, 912, 912,
	912, 804, 0, 795, 512, 0, -2, 0, 0, 459,
	0, 0, 641, 361, 600, 383, 0, 398, 600, 600,
	405, 421, 0, 716, 0, 0, 0, 720, 600, 238,
	0, 636, 630, 0, 619, 634, 635, 622, 0, 624,
	0, 620, 621, 600, 612, 643, 668, 645, 648, 650,
	651, 657, 0, 0, 0, 0, 220, 177, 0, 334,
	183, 444, 909, 449, 596, 0, 0, 596, 529, 528,
	526, 78, 0, 0, 0, 481, 0, 0, 498, 504,
	0, 515, 502, 0, 507, 504, 477, 476, 495, 496,
	952, 273, 0, 727, 98, 103, 104, 105, 99, 97,
	734, 0, 736, 0, 786, 790, 0, 0, 1245, 1047,
	1033, 1049, 1061, 1062, 1050, 1035, 1052, 1053, 1055, 1056,
	1057, 1058, 1059, 1036, 1104, 0, 1106, 1110, 1111, 0,
	1157, 1161, 0, 0, 0, 1083, 1076, 1086, 1087, 1088,
	1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1326,
	0, 0, 526, 564, 565, 688, 0, 697, 0, 704,
	705, 0, 0, 708, 709, 718, 0, 0, 0, 320,
	321, 0, 0, 0, 333, 329, 330, 331, 311, 719,
	0, 0, 0, 0, 0, 913, 914, 916, 917, 0,
	0, 919, 976, 0, 928, 770, 928, 0, 0, 930,
	931, 0, 0, 807, 0, 0, 798, 0, 666, 0,
	0, 600, 458, 461, 462, 546, 362, 600, 402, 399,
	600, 303, 304, 0, 0, 305, 309, 554, 0, 0,
	616, 637, 0, 0, 617, 0, 618, 623, 625, 237,
	652, 0, 0, 654, 655, 656, 647, 185, 586, 0,
	0, 607, 587, 41, 528, 0, 525, 79, 0, 0,
	0, 0, 486, 483, 504, 489, 488, 0, 503, 475,
	100, 95, 735, 480, 789, 791, 787, 0, 1112, 0,
	1080, 1079, 554, 1077, 0, 1336, 1339, 528, 0, 703,
	701, 717, 707, 0, 721, 722, 0, 322, 323, 0,
	326, 332, 0, 776, 777, 906, 907, 778, -2, 0,
	-2, 918, 977, 940, 940, 929, 940, 940, 770, 0,
	0, -2, 810, 0, 805, 0, 797, 0, 800, 600,
	600, -2, 455, 460, 0, 384, 403, 308, 306, 549,
	239, 240, 638, 0, 631, 661, 658, 0, 0, 597,
	599, 530, 527, 0, 521, 523, 89, 492, 487, 481,
	81, 1105, 1151, 1082, 1073, 0, 530, 0, 0, 0,
	319, 324, 0, 327, 328, 0, 758, 1327, 0, 817,
	-2, 860, 1348, 1348, 0, 1348, 1348, 1348, 1348, 0,
	0, 1348, 1348, 1348, 1348, 1348, 1348, 1348, 1348, 1348,
	1348, 1348, 1348, 1348, 1348, 0, 915, 942, -2, 955,
	957, 0, 0, 960, 961, 0, 0, 0, 0, 998,
	967, 0, 0, 971, 0, 1263, 1264, 0, 975, 0,
	932, 941, 0, 941, 0, 0, 940, 0, 782, 81,
	817, 801, 0, 808, 0, 806, 799, 554, 456, 236,
	0, 0, 662, 664, 659, 660, 42, 0, 80, 0,
	51, 72, 0, 0, 1074, 0, 1068, 1069, 1070, 1075,
	519, 0, 702, 710, 0, 712, 325, 751, 0, 560,
	0, 819, 0, 779, 862, 0, 0, 1348, 1348, 0,
	0, 0, 0, 1348, 1348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	956, 958, 959, 962, 963, 964, 1003, 1004, 1005, 965,
	1000, 1001, 1002, 966, 0, 0, 0, 1261, 1262, 996,
	0, 0, 0, 0, 0, 0, 0, 926, 784, 819,
	793, 0, 803, 0, 812, 0, 809, 549, 639, 653,
	0, 0, 0, 43, 0, 69, 0, 82, 83, 0,
	0, 0, 0, 1081, 1071, 0, 0, 0, 0, 0,
	711, 750, 759, 760, 560, 781, 0, 856, 861, 863,
	864, 0, 0, 867, 868, 869, 870, 0, 0, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 898,
	899, 900, 901, 902, 903, 883, 884, 885, 886, 887,
	888, 895, 0, 0, 892, 0, 0, 0, 1164, 991,
	0, 0, 933, 935, 936, 937, 938, 939, 934, 0,
	0, 0, 0, 925, 927, 972, 0, 783, 802, 811,
	0, 814, 454, 663, 665, 0, 532, 522, 52, 56,
	0, 78, 75, 0, 84, 0, 0, 0, 0, 0,
	1063, 1064, 1066, 1065, 1067, 691, 752, 1348, 0, 0,
	756, 757, 761, 0, 844, 0, 0, 850, 0, 857,
	865, 866, 871, 872, 889, 0, 0, 891, 0, 0,
	999, 0, 970, 979, 992, 0, 0, 751, 751, 751,
	751, 0, 973, 813, 531, 0, 45, 0, 0, 73,
	74, 76, 0, 85, 0, 87, 88, 0, 0, 754,
	0, 820, 0, 822, 0, 0, 0, 0, 0, 854,
	0, 896, 897, 890, 893, 894, 968, 978, 980, 981,
	0, 993, 994, 995, 997, 920, 921, 922, 923, 0,
	533, 792, 0, 57, 0, 59, 61, 62, 943, 70,
	71, 77, 86, 1072, 753, 755, 0, 824, 0, 845,
	0, 0, 0, 0, 0, 0, 0, 969, 982, 0,
	983, 0, 0, 0, 924, 46, 47, 0, 58, 0,
	0, 821, 818, 0, 856, 846, 0, 848, 0, 0,
	0, 0, 984, 986, 987, 0, 0, 985, 0, 0,
	60, 944, 0, 826, 0, 842, 847, 849, 851, 0,
	855, 853, 988, 990, 989, 48, 49, 50, 0, 825,
	0, 838, 823, 0, 852, 945, 827, -2, 0, 843,
	828, -2, 0, 836, 0, 0, 829, 837, 0, 832,
	0, 0, 0, 831, 0, -2, 839, 0, 0, 833,
	-2, 0, 841, 840,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 533,
	105, 104, 106, 3, 534, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 535, 117, 536, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:641
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:647
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:682
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:687
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:693
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:713
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:719
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:726
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:734
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:740
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:749
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:758
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:768
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:790
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[11].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:804
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:811
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:815
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:821
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:825
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:831
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:838
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:846
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:850
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:864
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:868
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:872
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[5].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:881
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:885
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:891
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:900
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:911
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:915
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:921
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:925
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:931
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:935
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:941
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:965
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:984
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:988
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:992
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1001
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1008
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1016
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1023
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1028
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1035
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1044
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1068
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1072
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1078
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1084
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1102
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1119
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1142
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1146
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1150
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1155
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1159
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1165
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1178
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1189
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1202
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1206
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1216
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1229
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1242
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1248
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1254
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().ToLowerForConfig(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1261
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().ToLowerForConfig(),
				TabName: yyDollar[3].cstrUnion().ToLowerForConfig(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1269
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().ToLowerForConfig(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1305
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1309
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1315
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1322
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1331
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1335
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1389
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_SEQUENCE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1393
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1397
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1401
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1405
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1409
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1413
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1417
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1421
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1425
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1429
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1433
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1437
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1441
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1445
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1449
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1453
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1457
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1461
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1465
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1469
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1473
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1477
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1481
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1485
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1489
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1493
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1497
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1501
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1505
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1509
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1513
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1517
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1521
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1525
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1529
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1533
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1537
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1541
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1553
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1560
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1567
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1576
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1606
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1620
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1626
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1630
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1637
		{
			yyVAL.str = yyDollar[3].str
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1643
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1647
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1653
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1661
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1670
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1678
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1686
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1709
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1732
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1739
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1746
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1754
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1761
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1768
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1785
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1791
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1795
		{
			yyVAL.str = yyDollar[1].str
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1801
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1805
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig() + "." + yyDollar[3].cstrUnion().ToLowerForConfig()
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1811
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1815
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1826
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1832
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1865
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1887
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1892
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1903
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion().ToLowerForConfig(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1916
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1923
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1930
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1940
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1947
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1958
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1969
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1973
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1979
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1989
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1995
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1999
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2005
		{
			yyLOCAL = tree.TableLock{yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2011
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2015
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2019
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2023
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2047
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2057
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2061
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2067
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2073
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2083
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2093
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2097
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2101
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2105
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2109
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2117
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2125
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2135
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2176
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2180
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2186
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2192
		{
			yyVAL.str = yyDollar[1].str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2197
		{
			yyVAL.str = "true"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2198
		{
			yyVAL.str = "false"
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2199
		{
			yyVAL.str = yyDollar[1].str
		}
	case 298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2204
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2217
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2248
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2257
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2263
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2289
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2294
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2298
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2307
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2323
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2327
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2331
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2335
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2339
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2347
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2351
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2355
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2359
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2363
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2367
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2371
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2375
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2379
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2383
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2389
		{
			yyVAL.item = nil
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2394
		{
			yyVAL.item = nil
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2426
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2431
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2435
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2439
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().ToLowerForConfig())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2448
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2452
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2463
		{
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2467
		{
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2481
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2499
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2505
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2511
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2520
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2528
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2532
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2536
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2540
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2544
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2548
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2552
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2565
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().ToLowerForConfig()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().ToLowerForConfig()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2575
		{
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2577
		{
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2586
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2596
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2605
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2609
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2613
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2619
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2625
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2631
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2637
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2647
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2659
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2663
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2669
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2681
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2695
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2704
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2708
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2713
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2717
		{
			yyVAL.str = yyDollar[2].cstrUnion().ToLowerForConfig()
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2723
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2736
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2740
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2746
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2751
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2755
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2761
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().ToLowerForConfig()})
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2765
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[1].cstrUnion().ToLowerForConfig()})
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2771
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2777
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().ToLowerForConfig()})
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[1].cstrUnion().ToLowerForConfig()})
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[1].cstrUnion().ToLowerForConfig()})
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2791
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2795
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2815
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2824
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2833
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2837
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2843
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2852
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2861
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().ToLowerForConfig()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2877
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2883
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().ToLowerForConfig()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2889
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2895
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2906
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2911
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2918
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2934
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2947
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2958
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2962
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2968
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2973
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2980
		{
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2982
		{
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2985
		{
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2994
		{
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2998
		{
		}
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3003
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3012
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3019
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3025
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3033
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3040
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3047
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3067
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3080
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3086
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3090
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3096
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3110
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3117
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3126
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3134
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3142
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3162
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3166
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3175
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3179
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3185
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3194
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3198
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3204
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3208
		{
			yyVAL.str = yyDollar[3].cstrUnion().ToLowerForConfig()
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3214
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3218
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3224
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3229
		{
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3240
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3244
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3251
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3260
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3266
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig())}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3270
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()))
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3276
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3280
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3289
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3302
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3309
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3316
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3334
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3353
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3359
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3366
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3370
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3383
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3387
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3392
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3396
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3403
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3408
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3415
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3421
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3425
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3429
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3433
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3437
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3441
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3447
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3454
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3463
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3467
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3473
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3481
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3485
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3490
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3494
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3500
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3504
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3508
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3517
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3523
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3529
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3533
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3544
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3548
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3552
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3557
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3561
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3565
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3571
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3575
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3579
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3593
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3597
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3607
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3617
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3627
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3639
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3647
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3655
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3664
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3672
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3680
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3688
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3696
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3712
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3728
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3738
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3749
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3763
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3767
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3771
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3776
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3780
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3784
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3797
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3806
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3811
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3815
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3821
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3825
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3831
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3835
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3840
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().ToLowerForConfig())}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3844
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[1].cstrUnion().ToLowerForConfig())}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3849
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3857
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3863
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3871
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3879
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3889
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3895
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3904
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3913
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3922
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3932
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3936
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3946
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3950
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3954
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3958
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3964
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3974
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3978
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3984
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3994
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4000
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4006
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4010
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4014
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4024
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4030
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4034
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4040
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig())}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4044
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()))
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4050
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4054
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4064
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4077
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4083
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4089
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().ToLowerForConfig()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4102
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4120
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4124
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4130
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4140
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4144
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4148
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4153
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4157
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4161
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4165
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4174
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().ToLowerForConfig()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4178
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4182
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4186
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4191
		{
			yyVAL.str = ""
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4195
		{
			yyVAL.str = yyDollar[1].str
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4199
		{
			yyVAL.str = yyDollar[2].str
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4205
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4211
		{
			yyLOCAL = tree.NewCStr("", false)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4215
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4219
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4223
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, true)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4227
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, true)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4233
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4264
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4274
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4280
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 691:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4299
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4304
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4310
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4317
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4321
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4327
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4333
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4337
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4341
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4347
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4353
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4359
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4370
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4382
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4388
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4398
		{
			yyVAL.str = yyDollar[1].str
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4402
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4408
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4415
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4421
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4429
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4435
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4442
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4450
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4456
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4465
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4477
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4482
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4488
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4496
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4602
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4606
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4612
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4622
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4626
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4632
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4642
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4646
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4650
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4655
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4659
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4665
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4672
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4678
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4687
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4694
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4703
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4707
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4713
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().ToLowerForConfig()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4727
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4731
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, true)
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4735
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4740
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4744
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4748
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4752
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4758
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().ToLowerForConfig()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4781
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4803
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4807
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4811
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().ToLowerForConfig()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4815
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4819
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4825
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4829
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4835
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4840
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4845
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4849
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4853
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4857
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4861
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4867
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].cstrUnion().ToLowerForConfig()),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4881
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4885
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4894
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4900
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4904
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4910
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4914
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4918
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4923
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4927
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4933
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4945
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4954
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4967
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4974
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4984
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4992
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5003
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5007
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5012
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5016
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5023
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5034
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5047
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5061
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5069
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5076
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5083
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5090
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5097
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5101
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5105
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5109
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5113
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5120
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5131
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5138
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5145
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5149
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5156
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5163
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5170
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5177
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5181
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5190
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5200
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5204
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5211
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5222
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5231
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5235
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5241
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5245
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5251
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().ToLowerForConfig()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5260
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().ToLowerForConfig()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5270
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5274
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5280
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5284
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5290
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().ToLowerForConfig()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5297
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().ToLowerForConfig()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5306
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5310
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5319
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5324
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5328
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5333
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5337
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5347
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5351
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5362
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5370
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5378
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5386
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5397
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5406
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5416
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5426
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5430
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5435
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5439
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5444
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5448
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5454
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5458
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5462
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5468
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5472
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5476
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5480
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5488
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5493
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5497
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5501
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5505
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5509
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5513
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5517
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5521
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5525
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5529
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5533
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5537
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5541
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5545
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5549
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5553
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5557
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5561
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5565
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5569
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5573
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5577
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5581
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5588
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5592
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5598
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5603
		{
			yyVAL.str = ""
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5607
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5611
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5617
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5621
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5625
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5629
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5633
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5637
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5651
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5655
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5664
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5669
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLowerForConfig()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().ToLowerForConfig()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5675
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5682
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5686
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5692
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5696
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5702
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5714
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5720
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5729
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5738
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5761
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5770
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5780
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5788
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5794
		{
			yyVAL.str = ""
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5798
		{
			yyVAL.str = yyDollar[1].str
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5808
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5814
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5820
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().ToLowerForConfig()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5834
		{
			yyVAL.str = ""
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5838
		{
			yyVAL.str = yyDollar[1].cstrUnion().ToLowerForConfig()
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5844
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5850
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5854
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5858
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[5].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5864
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5868
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, true)
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5872
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5876
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5882
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5886
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5890
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().ToLowerForConfig(), yyDollar[3].cstrUnion().ToLowerForConfig(), yyDollar[5].cstrUnion().ToLowerForConfig())
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5899
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5905
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5909
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5915
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5919
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5923
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5927
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5931
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5935
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5940
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5944
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5948
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5952
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5956
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5960
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5964
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5968
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5981
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5987
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5991
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5996
		{
			yyVAL.str = ""
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6000
		{
			yyVAL.str = yyDollar[1].str
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6006
		{
			yyVAL.str = ""
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6010
		{
			yyVAL.str = yyDollar[2].cstrUnion().ToLowerForConfig()
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6016
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6028
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6035
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6042
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6049
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6056
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6065
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6071
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6077
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6081
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6085
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6089
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6093
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6098
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6105
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6109
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6113
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6122
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6127
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6131
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6147
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6153
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6157
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6161
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6165
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6169
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6173
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6177
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6181
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6185
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6189
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6193
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6197
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6201
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6207
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6211
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6215
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6219
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6223
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6227
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6231
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6235
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6239
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6243
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6247
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6251
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6256
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6264
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6268
		{
			locale := ""
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: "BINARY",
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			})
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6284
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6293
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6297
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6301
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6305
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6314
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6323
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6329
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6333
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6339
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6349
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6366
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6383
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6396
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6409
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6421
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6435
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6450
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6465
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6482
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6497
		{
		}
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6503
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6507
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6511
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6517
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6521
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6529
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6533
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6537
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6543
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6550
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6559
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6563
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6570
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6575
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6579
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6584
		{
			yyVAL.str = ","
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6588
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6593
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6597
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6607
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6618
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6628
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6637
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6646
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6656
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6666
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6676
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6686
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6696
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6706
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6716
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6726
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6736
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6746
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6756
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6766
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6783
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6791
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6799
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6807
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6815
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6825
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6833
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6842
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6853
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6863
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6875
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6886
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6908
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6944
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6956
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6968
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6979
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6987
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6994
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7001
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7013
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7021
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7032
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7041
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7050
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7058
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7068
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7076
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7090
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7100
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7119
		{
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7121
		{
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7162
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7173
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7177
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7181
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7187
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7196
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7202
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7206
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7213
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7217
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7221
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7229
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7233
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7237
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7241
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7247
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7251
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7255
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7259
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7263
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7267
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7271
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7275
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7279
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7283
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7291
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7295
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7299
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7303
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7307
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7311
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7315
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7319
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7323
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7327
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7337
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7343
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7347
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7354
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7358
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7362
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7368
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7372
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7376
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7380
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7384
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7388
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7392
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7398
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7402
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7406
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7410
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7416
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7420
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7433
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7438
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7442
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7446
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7450
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7454
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7458
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7472
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7476
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7483
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7494
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7499
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7505
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7517
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7529
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7541
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7554
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7567
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7580
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7593
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7606
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7619
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7632
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7645
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7658
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7671
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7686
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7709
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7743
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7791
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7808
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7820
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7840
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7860
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7880
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7896
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7909
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7922
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7935
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7948
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7960
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7972
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7984
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7996
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8008
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8032
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8044
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8056
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8069
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8082
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8097
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8105
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8114
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8124
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8147
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8152
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8158
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8165
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8169
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8174
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8178
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8184
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8190
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8197
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8204
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8213
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8220
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8227
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8236
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8240
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8244
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8250
		{
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8252
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8262
		{
			yyVAL.str = ""
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8266
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

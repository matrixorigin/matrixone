// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const SCHEMA = 57534
const TABLE = 57535
const INDEX = 57536
const VIEW = 57537
const TO = 57538
const IGNORE = 57539
const IF = 57540
const PRIMARY = 57541
const COLUMN = 57542
const CONSTRAINT = 57543
const SPATIAL = 57544
const FULLTEXT = 57545
const FOREIGN = 57546
const KEY_BLOCK_SIZE = 57547
const SHOW = 57548
const DESCRIBE = 57549
const EXPLAIN = 57550
const DATE = 57551
const ESCAPE = 57552
const REPAIR = 57553
const OPTIMIZE = 57554
const TRUNCATE = 57555
const MAXVALUE = 57556
const PARTITION = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const STATUS = 57563
const VARIABLES = 57564
const ROLE = 57565
const PROXY = 57566
const AVG_ROW_LENGTH = 57567
const STORAGE = 57568
const DISK = 57569
const MEMORY = 57570
const CHECKSUM = 57571
const COMPRESSION = 57572
const DATA = 57573
const DIRECTORY = 57574
const DELAY_KEY_WRITE = 57575
const ENCRYPTION = 57576
const ENGINE = 57577
const MAX_ROWS = 57578
const MIN_ROWS = 57579
const PACK_KEYS = 57580
const ROW_FORMAT = 57581
const STATS_AUTO_RECALC = 57582
const STATS_PERSISTENT = 57583
const STATS_SAMPLE_PAGES = 57584
const DYNAMIC = 57585
const COMPRESSED = 57586
const REDUNDANT = 57587
const COMPACT = 57588
const FIXED = 57589
const COLUMN_FORMAT = 57590
const AUTO_RANDOM = 57591
const RESTRICT = 57592
const CASCADE = 57593
const ACTION = 57594
const PARTIAL = 57595
const SIMPLE = 57596
const CHECK = 57597
const ENFORCED = 57598
const RANGE = 57599
const LIST = 57600
const ALGORITHM = 57601
const LINEAR = 57602
const PARTITIONS = 57603
const SUBPARTITION = 57604
const SUBPARTITIONS = 57605
const CLUSTER = 57606
const TYPE = 57607
const ANY = 57608
const SOME = 57609
const EXTERNAL = 57610
const LOCALFILE = 57611
const URL = 57612
const PREPARE = 57613
const DEALLOCATE = 57614
const PROPERTIES = 57615
const PARSER = 57616
const VISIBLE = 57617
const INVISIBLE = 57618
const BTREE = 57619
const HASH = 57620
const RTREE = 57621
const BSI = 57622
const ZONEMAP = 57623
const LEADING = 57624
const BOTH = 57625
const TRAILING = 57626
const UNKNOWN = 57627
const EXPIRE = 57628
const ACCOUNT = 57629
const UNLOCK = 57630
const DAY = 57631
const NEVER = 57632
const PUMP = 57633
const SECOND = 57634
const ASCII = 57635
const COALESCE = 57636
const COLLATION = 57637
const HOUR = 57638
const MICROSECOND = 57639
const MINUTE = 57640
const MONTH = 57641
const QUARTER = 57642
const REPEAT = 57643
const REVERSE = 57644
const ROW_COUNT = 57645
const WEEK = 57646
const REVOKE = 57647
const FUNCTION = 57648
const PRIVILEGES = 57649
const TABLESPACE = 57650
const EXECUTE = 57651
const SUPER = 57652
const GRANT = 57653
const OPTION = 57654
const REFERENCES = 57655
const REPLICATION = 57656
const SLAVE = 57657
const CLIENT = 57658
const USAGE = 57659
const RELOAD = 57660
const FILE = 57661
const TEMPORARY = 57662
const ROUTINE = 57663
const EVENT = 57664
const SHUTDOWN = 57665
const NULLX = 57666
const AUTO_INCREMENT = 57667
const APPROXNUM = 57668
const SIGNED = 57669
const UNSIGNED = 57670
const ZEROFILL = 57671
const ENGINES = 57672
const LOW_CARDINALITY = 57673
const ADMIN_NAME = 57674
const RANDOM = 57675
const SUSPEND = 57676
const ATTRIBUTE = 57677
const HISTORY = 57678
const REUSE = 57679
const CURRENT = 57680
const OPTIONAL = 57681
const FAILED_LOGIN_ATTEMPTS = 57682
const PASSWORD_LOCK_TIME = 57683
const UNBOUNDED = 57684
const SECONDARY = 57685
const USER = 57686
const IDENTIFIED = 57687
const CIPHER = 57688
const ISSUER = 57689
const X509 = 57690
const SUBJECT = 57691
const SAN = 57692
const REQUIRE = 57693
const SSL = 57694
const NONE = 57695
const PASSWORD = 57696
const MAX_QUERIES_PER_HOUR = 57697
const MAX_UPDATES_PER_HOUR = 57698
const MAX_CONNECTIONS_PER_HOUR = 57699
const MAX_USER_CONNECTIONS = 57700
const FORMAT = 57701
const VERBOSE = 57702
const CONNECTION = 57703
const TRIGGERS = 57704
const PROFILES = 57705
const LOAD = 57706
const INFILE = 57707
const TERMINATED = 57708
const OPTIONALLY = 57709
const ENCLOSED = 57710
const ESCAPED = 57711
const STARTING = 57712
const LINES = 57713
const ROWS = 57714
const IMPORT = 57715
const MODUMP = 57716
const OVER = 57717
const PRECEDING = 57718
const FOLLOWING = 57719
const GROUPS = 57720
const DATABASES = 57721
const TABLES = 57722
const EXTENDED = 57723
const FULL = 57724
const PROCESSLIST = 57725
const FIELDS = 57726
const COLUMNS = 57727
const OPEN = 57728
const ERRORS = 57729
const WARNINGS = 57730
const INDEXES = 57731
const SCHEMAS = 57732
const NODELIST = 57733
const LOCKS = 57734
const NAMES = 57735
const GLOBAL = 57736
const SESSION = 57737
const ISOLATION = 57738
const LEVEL = 57739
const READ = 57740
const WRITE = 57741
const ONLY = 57742
const REPEATABLE = 57743
const COMMITTED = 57744
const UNCOMMITTED = 57745
const SERIALIZABLE = 57746
const LOCAL = 57747
const EVENTS = 57748
const PLUGINS = 57749
const CURRENT_TIMESTAMP = 57750
const DATABASE = 57751
const CURRENT_TIME = 57752
const LOCALTIME = 57753
const LOCALTIMESTAMP = 57754
const UTC_DATE = 57755
const UTC_TIME = 57756
const UTC_TIMESTAMP = 57757
const REPLACE = 57758
const CONVERT = 57759
const SEPARATOR = 57760
const TIMESTAMPDIFF = 57761
const CURRENT_DATE = 57762
const CURRENT_USER = 57763
const CURRENT_ROLE = 57764
const SECOND_MICROSECOND = 57765
const MINUTE_MICROSECOND = 57766
const MINUTE_SECOND = 57767
const HOUR_MICROSECOND = 57768
const HOUR_SECOND = 57769
const HOUR_MINUTE = 57770
const DAY_MICROSECOND = 57771
const DAY_SECOND = 57772
const DAY_MINUTE = 57773
const DAY_HOUR = 57774
const YEAR_MONTH = 57775
const SQL_TSI_HOUR = 57776
const SQL_TSI_DAY = 57777
const SQL_TSI_WEEK = 57778
const SQL_TSI_MONTH = 57779
const SQL_TSI_QUARTER = 57780
const SQL_TSI_YEAR = 57781
const SQL_TSI_SECOND = 57782
const SQL_TSI_MINUTE = 57783
const RECURSIVE = 57784
const CONFIG = 57785
const DRAINER = 57786
const MATCH = 57787
const AGAINST = 57788
const BOOLEAN = 57789
const LANGUAGE = 57790
const WITH = 57791
const QUERY = 57792
const EXPANSION = 57793
const ADDDATE = 57794
const BIT_AND = 57795
const BIT_OR = 57796
const BIT_XOR = 57797
const CAST = 57798
const COUNT = 57799
const APPROX_COUNT_DISTINCT = 57800
const APPROX_PERCENTILE = 57801
const CURDATE = 57802
const CURTIME = 57803
const DATE_ADD = 57804
const DATE_SUB = 57805
const EXTRACT = 57806
const GROUP_CONCAT = 57807
const MAX = 57808
const MID = 57809
const MIN = 57810
const NOW = 57811
const POSITION = 57812
const SESSION_USER = 57813
const STD = 57814
const STDDEV = 57815
const STDDEV_POP = 57816
const STDDEV_SAMP = 57817
const SUBDATE = 57818
const SUBSTR = 57819
const SUBSTRING = 57820
const SUM = 57821
const SYSDATE = 57822
const SYSTEM_USER = 57823
const TRANSLATE = 57824
const TRIM = 57825
const VARIANCE = 57826
const VAR_POP = 57827
const VAR_SAMP = 57828
const AVG = 57829
const ARROW = 57830
const ROW = 57831
const OUTFILE = 57832
const HEADER = 57833
const MAX_FILE_SIZE = 57834
const FORCE_QUOTE = 57835
const UNUSED = 57836
const BINDINGS = 57837
const DO = 57838
const DECLARE = 57839

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODELIST",
	"LOCKS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8025

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 83,
	21, 503,
	-2, 484,
	-1, 88,
	211, 684,
	-2, 730,
	-1, 105,
	42, 343,
	211, 343,
	238, 350,
	239, 350,
	406, 343,
	-2, 371,
	-1, 466,
	67, 1095,
	-2, 1603,
	-1, 467,
	67, 1113,
	-2, 1574,
	-1, 472,
	67, 1114,
	-2, 1602,
	-1, 492,
	67, 1027,
	-2, 1650,
	-1, 493,
	67, 1028,
	-2, 1649,
	-1, 494,
	67, 1029,
	-2, 1639,
	-1, 495,
	67, 1614,
	-2, 1634,
	-1, 496,
	67, 1615,
	-2, 1635,
	-1, 497,
	67, 1616,
	-2, 1641,
	-1, 498,
	67, 1617,
	-2, 1624,
	-1, 499,
	67, 1618,
	-2, 1632,
	-1, 500,
	67, 1619,
	-2, 1642,
	-1, 501,
	67, 1620,
	-2, 1643,
	-1, 502,
	67, 1621,
	-2, 1648,
	-1, 503,
	67, 1622,
	-2, 1653,
	-1, 504,
	67, 1623,
	-2, 1654,
	-1, 506,
	67, 1092,
	-2, 1455,
	-1, 513,
	67, 1101,
	-2, 1481,
	-1, 517,
	67, 1105,
	-2, 1520,
	-1, 518,
	67, 1106,
	-2, 1598,
	-1, 526,
	67, 1116,
	-2, 1583,
	-1, 528,
	67, 1118,
	-2, 1593,
	-1, 540,
	67, 1008,
	-2, 1644,
	-1, 541,
	67, 1009,
	-2, 1645,
	-1, 542,
	67, 1010,
	-2, 1646,
	-1, 549,
	21, 504,
	-2, 467,
	-1, 594,
	401, 371,
	402, 371,
	-2, 344,
	-1, 636,
	103, 1455,
	114, 1455,
	133, 1455,
	-2, 1254,
	-1, 673,
	21, 504,
	-2, 467,
	-1, 771,
	21, 503,
	-2, 920,
	-1, 1075,
	67, 1161,
	-2, 1600,
	-1, 1076,
	67, 1162,
	-2, 1601,
	-1, 1229,
	1, 710,
	68, 710,
	515, 710,
	-2, 717,
	-1, 1346,
	133, 1264,
	-2, 1262,
	-1, 1348,
	133, 627,
	-2, 1259,
	-1, 1349,
	133, 628,
	-2, 1260,
	-1, 1642,
	1, 711,
	68, 711,
	515, 711,
	-2, 717,
	-1, 1696,
	21, 503,
	-2, 594,
	-1, 1861,
	65, 415,
	134, 415,
	-2, 825,
	-1, 2119,
	87, 717,
	129, 717,
	166, 717,
	169, 717,
	-2, 773,
	-1, 2121,
	272, 888,
	-2, 867,
	-1, 2151,
	65, 415,
	134, 415,
	-2, 826,
	-1, 2187,
	87, 717,
	129, 717,
	166, 717,
	169, 717,
	-2, 774,
	-1, 2215,
	272, 888,
	-2, 868,
	-1, 2622,
	68, 745,
	134, 745,
	-2, 717,
	-1, 2626,
	68, 745,
	134, 745,
	-2, 717,
	-1, 2640,
	68, 749,
	134, 749,
	-2, 717,
	-1, 2645,
	68, 750,
	134, 750,
	-2, 717,
}

const yyPrivate = 57344

const yyLast = 28567

var yyAct = [...]int{
	437, 2626, 1139, 2628, 2634, 2625, 2602, 417, 1055, 2254,
	2467, 419, 2591, 2548, 439, 2504, 2227, 1693, 2533, 2434,
	2438, 2532, 2414, 1626, 2367, 2252, 798, 2173, 967, 1307,
	2253, 921, 2422, 2270, 2113, 1273, 123, 123, 2171, 464,
	1051, 1689, 123, 357, 364, 2237, 364, 550, 635, 2144,
	126, 2183, 2012, 2216, 1234, 1864, 362, 29, 2236, 1058,
	1723, 2008, 1688, 896, 2132, 907, 1332, 1185, 368, 1881,
	1265, 122, 122, 1295, 2125, 827, 2013, 348, 2017, 1757,
	1533, 545, 411, 374, 2085, 2068, 1902, 2028, 2023, 2025,
	1649, 578, 2006, 667, 416, 1236, 1188, 1960, 1343, 1209,
	1798, 1325, 1195, 1346, 1915, 1756, 1529, 1288, 1333, 1334,
	1528, 639, 1268, 545, 1880, 1834, 1648, 1326, 1677, 1266,
	1839, 3, 123, 2191, 909, 1217, 642, 39, 361, 18,
	1247, 358, 8, 359, 6, 1225, 833, 662, 1643, 1561,
	1530, 418, 989, 1246, 1292, 1049, 420, 452, 83, 82,
	1635, 360, 7, 1259, 597, 1248, 350, 669, 1258, 1540,
	1103, 637, 1614, 428, 1544, 1089, 1040, 353, 684, 39,
	663, 1329, 1691, 661, 1311, 29, 1054, 878, 1221, 1048,
	627, 1698, 1254, 1224, 547, 412, 936, 347, 946, 377,
	83, 577, 376, 1109, 15, 549, 1837, 1200, 1108, 9,
	4, 959, 575, 922, 113, 590, 1953, 988, 1953, 371,
	363, 1547, 1759, 1537, 628, 118, 2283, 1724, 2112, 1213,
	2455, 1328, 548, 1138, 116, 948, 799, 117, 2245, 35,
	107, 89, 117, 1752, 117, 2485, 35, 107, 89, 117,
	660, 35, 107, 89, 346, 39, 703, 18, 894, 1545,
	8, 2495, 6, 117, 119, 117, 366, 1744, 737, 933,
	1825, 934, 641, 918, 640, 117, 83, 117, 1932, 117,
	7, 1534, 1276, 1277, 736, 994, 949, 927, 928, 117,
	607, 35, 107, 89, 114, 1007, 1836, 1000, 1250, 114,
	1025, 114, 1057, 1129, 2521, 544, 114, 2279, 735, 112,
	730, 1004, 1799, 997, 925, 1925, 101, 924, 927, 928,
	114, 2519, 114, 2268, 535, 81, 534, 536, 537, 1999,
	538, 539, 1006, 2360, 999, 2363, 114, 718, 2285, 719,
	67, 2114, 647, 646, 648, 1041, 114, 1045, 1835, 567,
	2536, 2537, 2456, 2457, 741, 742, 743, 740, 2508, 2509,
	123, 677, 2271, 2272, 2273, 2274, 2000, 721, 2001, 687,
	676, 1044, 645, 1060, 1739, 678, 364, 1289, 123, 373,
	2437, 2097, 2133, 1281, 1541, 2039, 2250, 1144, 1672, 2140,
	1036, 611, 1633, 1611, 2234, 675, 711, 1946, 713, 1184,
	1183, 2344, 2029, 1948, 672, 674, 2494, 1842, 551, 733,
	734, 2347, 732, 694, 108, 109, 1749, 110, 111, 706,
	650, 2247, 2278, 2033, 2037, 2546, 714, 365, 2280, 2523,
	88, 716, 115, 2338, 2376, 773, 643, 2619, 2635, 1046,
	2557, 2518, 916, 2469, 1125, 2564, 671, 1122, 612, 2492,
	105, 1124, 1121, 1123, 1127, 1128, 2613, 2331, 1043, 1126,
	687, 1850, 1851, 1852, 1853, 698, 1285, 410, 1059, 673,
	569, 2300, 2436, 2299, 2034, 2035, 2497, 2498, 1546, 2535,
	566, 565, 88, 106, 115, 935, 65, 2326, 717, 2036,
	707, 39, 39, 644, 728, 729, 409, 1848, 1551, 1553,
	1554, 560, 105, 100, 99, 407, 2594, 895, 408, 41,
	955, 709, 83, 83, 641, 2031, 640, 1067, 1070, 1071,
	2525, 2526, 638, 712, 715, 723, 2475, 724, 1068, 954,
	920, 919, 680, 681, 2465, 2466, 2322, 2469, 689, 688,
	2423, 2424, 2425, 2427, 2426, 2399, 563, 708, 696, 940,
	913, 912, 2636, 720, 2642, 726, 2603, 897, 649, 2288,
	1562, 1042, 2630, 2108, 668, 558, 372, 102, 103, 695,
	2358, 947, 2021, 1904, 1906, 774, 775, 776, 777, 1219,
	771, 1745, 640, 1705, 1538, 703, 692, 578, 1535, 1132,
	1133, 1134, 1135, 1136, 1137, 1130, 1131, 900, 564, 1535,
	2101, 75, 1952, 778, 875, 104, 1956, 76, 1951, 744,
	902, 682, 710, 1535, 367, 1549, 904, 608, 772, 722,
	2595, 1279, 559, 807, 1962, 1961, 780, 1908, 926, 689,
	688, 923, 1280, 898, 899, 2524, 901, 917, 927, 928,
	545, 545, 545, 1702, 995, 971, 971, 785, 1704, 1703,
	2496, 2435, 952, 727, 1278, 927, 928, 2458, 2459, 2294,
	77, 364, 992, 992, 702, 1548, 2040, 36, 1536, 78,
	34, 1841, 36, 1701, 973, 1290, 725, 2030, 2345, 975,
	1949, 1002, 614, 2629, 2246, 969, 969, 568, 615, 1753,
	2032, 2327, 2328, 90, 2022, 738, 610, 2576, 90, 609,
	90, 1023, 2251, 950, 951, 90, 572, 573, 574, 883,
	809, 810, 36, 971, 1008, 971, 677, 1552, 2641, 90,
	914, 90, 1282, 1845, 1846, 1056, 1905, 930, 931, 1037,
	1637, 90, 2049, 90, 998, 90, 1069, 1844, 1005, 739,
	937, 1732, 937, 2592, 2593, 90, 1018, 1019, 703, 2018,
	2021, 697, 1727, 2120, 2648, 638, 2324, 608, 1032, 1620,
	2323, 552, 1744, 549, 880, 2400, 2402, 2403, 2404, 2401,
	1686, 1687, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1088, 1714, 1534, 882, 1098, 1099, 906,
	1571, 1862, 79, 80, 1107, 1725, 977, 1625, 941, 1856,
	347, 1863, 1593, 1525, 1154, 1284, 1589, 929, 1061, 1588,
	932, 1237, 2647, 2638, 1160, 741, 742, 743, 740, 39,
	739, 1053, 953, 1162, 1636, 83, 1166, 1167, 39, 83,
	1031, 944, 945, 1028, 1022, 1027, 610, 545, 1038, 609,
	83, 1237, 1021, 618, 965, 966, 905, 991, 991, 83,
	1034, 1072, 2620, 1101, 962, 963, 964, 346, 2615, 1570,
	1014, 1009, 1314, 980, 981, 982, 983, 984, 985, 986,
	993, 987, 2022, 976, 1687, 739, 876, 2015, 739, 2639,
	2606, 2016, 2019, 2605, 2580, 1206, 1039, 2550, 1010, 1050,
	617, 1714, 2543, 549, 620, 619, 1030, 653, 658, 659,
	956, 1029, 1026, 1052, 1047, 2538, 2600, 1222, 701, 971,
	1863, 2552, 1229, 1153, 1191, 1192, 578, 1207, 1543, 1235,
	1097, 1857, 971, 2527, 2616, 2154, 2050, 1917, 1228, 1687,
	1624, 1865, 1199, 2020, 1747, 1062, 1063, 1064, 1065, 1066,
	1091, 2513, 1190, 700, 1255, 1255, 1543, 1260, 756, 1543,
	1543, 1746, 1260, 2551, 1738, 1222, 971, 1275, 2349, 2065,
	2490, 1210, 1669, 2489, 1585, 1197, 1198, 545, 1220, 971,
	1253, 2349, 741, 742, 743, 740, 1230, 1105, 1106, 2488,
	2139, 1312, 1572, 1141, 1524, 938, 2487, 1319, 1148, 1714,
	1011, 1222, 971, 1227, 1306, 123, 123, 1142, 741, 742,
	743, 740, 1316, 2477, 2355, 703, 123, 2514, 2354, 1257,
	1154, 1154, 1336, 701, 662, 1164, 1981, 1154, 1154, 874,
	1242, 1140, 783, 1143, 690, 1309, 2349, 670, 1155, 2349,
	1308, 1308, 1301, 2348, 2054, 1322, 1251, 1252, 1161, 1348,
	1163, 1308, 1623, 1943, 910, 2349, 1235, 663, 1241, 1286,
	971, 1180, 2349, 937, 1244, 1245, 1243, 1899, 1821, 1819,
	2589, 2577, 1238, 655, 656, 657, 1838, 1249, 1214, 2478,
	2356, 1208, 1349, 1211, 1653, 1291, 1305, 1215, 1817, 1202,
	1218, 1205, 1815, 939, 1340, 1226, 755, 754, 764, 765,
	757, 758, 759, 760, 761, 762, 763, 756, 1239, 2349,
	1526, 1804, 1231, 670, 1274, 1556, 1761, 1232, 2479, 1240,
	1261, 1742, 958, 1559, 1560, 1736, 1337, 1734, 2066, 1331,
	1299, 1300, 616, 1687, 1822, 1820, 1331, 1256, 1954, 1945,
	960, 1729, 1226, 1262, 1532, 1652, 1621, 1733, 1264, 1263,
	938, 961, 1146, 1145, 1816, 1707, 1767, 1287, 1816, 570,
	1596, 679, 39, 1104, 1832, 1211, 1595, 641, 1542, 640,
	1223, 1211, 1211, 1302, 641, 2512, 640, 739, 1050, 1303,
	1310, 1304, 739, 83, 1296, 1297, 1298, 1653, 1320, 1147,
	1944, 1730, 1015, 1735, 1600, 1531, 740, 1700, 1338, 743,
	740, 1776, 957, 1522, 1347, 1523, 1341, 1730, 1342, 2334,
	1165, 1653, 1620, 1168, 1169, 1170, 1171, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 2317, 1527, 739, 873, 870, 871,
	872, 2410, 739, 1781, 1543, 1780, 1779, 1777, 1096, 1792,
	123, 123, 1172, 2333, 621, 1129, 1550, 1104, 939, 1567,
	2129, 123, 1650, 1094, 1095, 1093, 1558, 1555, 1016, 2124,
	771, 1260, 640, 670, 1660, 1921, 2612, 613, 2624, 2409,
	357, 741, 742, 743, 740, 1629, 1631, 1091, 1260, 1557,
	1769, 2530, 2408, 1566, 1158, 662, 1646, 759, 760, 761,
	762, 763, 756, 1275, 1159, 2609, 2406, 1778, 1974, 1659,
	2574, 2396, 2024, 741, 742, 743, 740, 1564, 2558, 2611,
	1568, 2248, 2447, 2416, 741, 742, 743, 740, 663, 2394,
	2407, 2137, 971, 764, 765, 757, 758, 759, 760, 761,
	762, 763, 756, 992, 2405, 1275, 2393, 2392, 1718, 2395,
	1720, 1694, 1694, 1973, 1694, 741, 742, 743, 740, 2249,
	1578, 1569, 2389, 1579, 1695, 1583, 1699, 1658, 2383, 2138,
	1661, 1662, 1712, 1697, 2380, 741, 742, 743, 740, 2379,
	2136, 1594, 2038, 1644, 1597, 1598, 1599, 1616, 1997, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1125, 1609, 1996, 1122,
	1939, 1663, 1919, 1124, 1121, 1123, 1127, 1128, 1619, 1618,
	1617, 1126, 1613, 1612, 1249, 1717, 1638, 741, 742, 743,
	740, 1012, 1665, 2545, 1667, 1782, 1783, 407, 2529, 1657,
	408, 2640, 1763, 1627, 1628, 2415, 1666, 1715, 2184, 1668,
	2510, 1670, 2473, 2472, 1673, 2397, 1722, 664, 665, 666,
	1696, 1664, 640, 1654, 755, 754, 764, 765, 757, 758,
	759, 760, 761, 762, 763, 756, 807, 2390, 2386, 2610,
	2617, 1708, 1709, 1710, 754, 764, 765, 757, 758, 759,
	760, 761, 762, 763, 756, 1716, 2441, 741, 742, 743,
	740, 2480, 1274, 2385, 2384, 2346, 755, 754, 764, 765,
	757, 758, 759, 760, 761, 762, 763, 756, 741, 742,
	743, 740, 1211, 1211, 1211, 1591, 755, 754, 764, 765,
	757, 758, 759, 760, 761, 762, 763, 756, 991, 2343,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1132, 1133, 1134, 1135, 1136, 1137, 1130, 1131, 2319,
	2284, 741, 742, 743, 740, 1740, 757, 758, 759, 760,
	761, 762, 763, 756, 2182, 971, 2180, 971, 767, 971,
	770, 2147, 2135, 2134, 677, 747, 748, 749, 750, 751,
	752, 753, 745, 1754, 2131, 768, 769, 766, 1581, 755,
	754, 764, 765, 757, 758, 759, 760, 761, 762, 763,
	756, 2176, 971, 1785, 2100, 1758, 2042, 1750, 1995, 2175,
	1950, 1920, 1911, 2104, 491, 490, 1793, 1622, 2366, 1615,
	971, 1977, 1321, 741, 742, 743, 740, 1976, 1013, 1795,
	1784, 741, 742, 743, 740, 741, 742, 743, 740, 808,
	803, 1580, 969, 741, 742, 743, 740, 1975, 1794, 741,
	742, 743, 740, 802, 784, 2148, 2119, 2110, 1812, 2109,
	969, 2092, 2084, 741, 742, 743, 740, 971, 1811, 741,
	742, 743, 740, 117, 2083, 1771, 107, 89, 1861, 1751,
	741, 742, 743, 740, 1867, 2055, 1979, 1972, 1765, 1964,
	741, 742, 743, 740, 1959, 1818, 1814, 1810, 1743, 2586,
	1876, 1813, 1741, 1601, 1592, 677, 1275, 1275, 1275, 1275,
	1748, 1590, 1587, 1859, 1882, 1586, 1584, 677, 1275, 741,
	742, 743, 740, 1855, 1823, 1831, 1882, 1800, 1762, 1577,
	114, 117, 1805, 1574, 1764, 1573, 971, 1775, 29, 1157,
	1156, 1050, 978, 2637, 123, 123, 755, 754, 764, 765,
	757, 758, 759, 760, 761, 762, 763, 756, 2588, 2582,
	2565, 1154, 1898, 1154, 2562, 2560, 1931, 800, 2446, 2432,
	1868, 1694, 1575, 2420, 2417, 971, 2412, 2372, 1187, 1913,
	1914, 1828, 1809, 1768, 1897, 1870, 1937, 2341, 114, 1872,
	2340, 1786, 1787, 2339, 1860, 2336, 1644, 1790, 1791, 2330,
	2315, 908, 1847, 1866, 741, 742, 743, 740, 39, 1796,
	18, 1854, 1869, 8, 2164, 6, 1926, 1877, 2162, 1938,
	1873, 1871, 1874, 1933, 1879, 1883, 1884, 1885, 1886, 83,
	1896, 1895, 1210, 7, 1894, 2142, 1211, 1930, 549, 1826,
	1827, 1218, 1875, 1226, 2130, 1912, 1909, 741, 742, 743,
	740, 1983, 1196, 1274, 1274, 1274, 1274, 1918, 1924, 1942,
	1808, 1189, 1947, 1928, 677, 1274, 1858, 1935, 2027, 1934,
	1927, 1929, 1936, 2011, 1965, 1922, 1833, 1967, 1728, 1969,
	123, 1941, 741, 742, 743, 740, 1706, 1651, 1957, 677,
	1092, 114, 1201, 1275, 1650, 1955, 2053, 1807, 2011, 1878,
	1204, 1963, 2057, 1194, 1966, 1193, 1035, 83, 1001, 2027,
	1970, 1971, 877, 1968, 83, 2043, 825, 824, 823, 741,
	742, 743, 740, 2219, 822, 821, 820, 819, 1982, 818,
	817, 816, 1984, 1985, 1986, 1987, 815, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1211, 1806, 814, 2229, 1785, 1211,
	2623, 813, 812, 811, 1907, 806, 805, 804, 801, 797,
	2222, 796, 794, 2051, 793, 792, 2217, 741, 742, 743,
	740, 2232, 2233, 553, 554, 555, 556, 2218, 791, 2337,
	1803, 2047, 123, 2048, 2052, 1958, 552, 123, 790, 789,
	788, 787, 786, 782, 781, 2056, 2061, 2063, 2062, 2058,
	2059, 2073, 741, 742, 743, 740, 2064, 705, 1978, 2069,
	2070, 2090, 2223, 2080, 2081, 2082, 2570, 2098, 2077, 1802,
	1656, 2076, 2102, 1640, 1801, 1679, 1682, 1683, 1684, 1680,
	2060, 1681, 1685, 2089, 2568, 979, 123, 1797, 693, 2534,
	1274, 741, 742, 743, 740, 2123, 741, 742, 743, 740,
	2072, 1849, 1713, 2096, 2095, 1324, 704, 2093, 2075, 741,
	742, 743, 740, 2099, 2094, 1789, 2074, 1891, 1889, 1888,
	1788, 2118, 1892, 1890, 1887, 971, 971, 2167, 1737, 2166,
	1275, 2151, 2044, 2045, 2046, 1766, 1731, 741, 742, 743,
	740, 2117, 741, 742, 743, 740, 677, 2002, 2003, 2231,
	1830, 2014, 1645, 2143, 1181, 1882, 66, 741, 742, 743,
	740, 2127, 1100, 2165, 38, 969, 2145, 2121, 1726, 2122,
	2169, 37, 1154, 2128, 1760, 2126, 2225, 2126, 1893, 1694,
	1683, 1684, 1627, 1628, 741, 742, 743, 740, 1755, 2153,
	879, 2149, 2158, 120, 2005, 1634, 343, 699, 2224, 2226,
	2150, 677, 2286, 2188, 344, 2238, 2240, 2157, 2238, 2238,
	2011, 345, 2004, 1233, 2501, 2159, 1146, 1145, 891, 892,
	2160, 2174, 943, 677, 889, 890, 942, 2152, 887, 888,
	342, 731, 83, 2155, 2177, 2079, 2156, 1521, 2170, 911,
	2103, 885, 886, 1235, 881, 2263, 2583, 2105, 2463, 2451,
	2449, 2239, 2179, 2377, 2235, 553, 554, 555, 556, 1916,
	552, 2281, 2213, 2234, 2185, 2373, 2241, 2242, 552, 1674,
	2260, 2290, 2365, 2243, 2364, 2220, 2362, 1274, 2266, 2265,
	2181, 2230, 2178, 2116, 2115, 2087, 884, 2153, 2257, 2086,
	1237, 1940, 1679, 1682, 1683, 1684, 1680, 2261, 1681, 1685,
	2572, 2571, 915, 2571, 971, 1576, 691, 2318, 2584, 2572,
	2332, 2091, 45, 1, 1323, 123, 1900, 1901, 2078, 1903,
	2293, 1539, 1671, 1632, 2240, 2258, 2259, 2041, 903, 571,
	1149, 893, 1211, 1020, 652, 2161, 686, 1017, 2163, 685,
	683, 1102, 454, 1327, 2145, 2413, 2262, 2500, 2235, 2316,
	2335, 2547, 2168, 2320, 2445, 755, 754, 764, 765, 757,
	758, 759, 760, 761, 762, 763, 756, 2503, 1033, 2342,
	438, 2357, 1998, 2378, 2267, 2359, 2352, 2269, 1824, 2172,
	1923, 1563, 586, 2361, 486, 462, 2353, 795, 1003, 996,
	654, 461, 2141, 1843, 2411, 557, 2244, 651, 587, 1610,
	2111, 1182, 2350, 755, 754, 764, 765, 757, 758, 759,
	760, 761, 762, 763, 756, 1203, 1186, 677, 2633, 2622,
	677, 677, 677, 2374, 2601, 2391, 2581, 2468, 2618, 2517,
	677, 2563, 2277, 2275, 1694, 2276, 2556, 2443, 2464, 2375,
	2287, 378, 2421, 1283, 543, 2429, 2430, 2431, 625, 2433,
	379, 2428, 2418, 2461, 2440, 1655, 2493, 2419, 561, 1639,
	2439, 562, 971, 971, 1642, 2442, 2291, 2292, 1641, 2295,
	2296, 2297, 2298, 2454, 2448, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 1073,
	2470, 2471, 746, 123, 2450, 1090, 2452, 2453, 2106, 2107,
	779, 677, 969, 969, 415, 2462, 1565, 1980, 427, 421,
	1840, 2228, 1910, 677, 83, 44, 43, 42, 1315, 1344,
	456, 2351, 2476, 125, 1345, 2482, 2486, 2507, 1308, 2460,
	2282, 2505, 436, 435, 434, 433, 1678, 1676, 2491, 1675,
	1270, 2506, 1269, 2371, 677, 2499, 1313, 2531, 2483, 2484,
	2329, 2398, 2325, 2515, 755, 754, 764, 765, 757, 758,
	759, 760, 761, 762, 763, 756, 2321, 2474, 2187, 2186,
	2381, 2382, 2214, 2520, 2522, 2215, 2387, 2388, 2221, 832,
	828, 2528, 830, 2511, 831, 829, 1774, 1770, 2539, 2540,
	2541, 2542, 2009, 2549, 2010, 2554, 2007, 677, 2071, 2067,
	1335, 1216, 1829, 1271, 1267, 2555, 1056, 2559, 2256, 2561,
	546, 5, 28, 27, 26, 14, 13, 2553, 1024, 12,
	17, 25, 24, 23, 22, 74, 73, 72, 71, 21,
	2566, 2567, 2507, 2579, 2371, 2569, 11, 70, 69, 68,
	2573, 677, 20, 677, 2575, 19, 2506, 2578, 63, 2585,
	1056, 2587, 1056, 2590, 64, 55, 54, 53, 62, 61,
	60, 585, 52, 51, 50, 2596, 49, 59, 2549, 677,
	2597, 58, 57, 56, 2604, 48, 47, 2608, 1056, 46,
	87, 2614, 86, 2481, 85, 84, 30, 31, 32, 33,
	97, 96, 98, 94, 92, 95, 93, 91, 40, 10,
	16, 2, 0, 2621, 0, 0, 0, 0, 0, 0,
	2632, 0, 2631, 0, 0, 0, 0, 0, 0, 0,
	2643, 0, 2645, 0, 2644, 2646, 0, 0, 0, 2632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2544, 0, 0, 0, 1460, 1502, 0, 2371, 1449,
	292, 1407, 1462, 1380, 1396, 1470, 1397, 1398, 1435, 1359,
	1417, 254, 1394, 0, 0, 0, 0, 0, 0, 1452,
	1351, 1383, 1384, 1353, 1390, 1354, 1381, 1409, 199, 1379,
	1420, 224, 1432, 1393, 1414, 1468, 0, 0, 284, 238,
	0, 0, 1412, 1454, 1415, 1440, 1406, 1436, 1367, 1428,
	1463, 1395, 0, 1433, 1464, 0, 0, 0, 0, 664,
	665, 666, 0, 2599, 0, 0, 180, 0, 0, 0,
	0, 0, 1431, 1458, 1392, 0, 183, 1461, 1413, 1434,
	0, 0, 1352, 1429, 0, 1357, 1360, 1469, 1456, 1387,
	1388, 0, 0, 0, 0, 0, 0, 0, 0, 1410,
	1416, 1437, 1403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1385, 0, 1425, 0, 0, 0, 1362, 1358,
	0, 1408, 0, 0, 171, 289, 305, 181, 280, 318,
	186, 287, 176, 253, 276, 0, 1501, 173, 303, 286,
	235, 218, 219, 172, 0, 271, 197, 210, 193, 251,
	0, 302, 330, 192, 321, 1361, 313, 175, 1496, 312,
	250, 299, 304, 236, 230, 174, 301, 234, 229, 222,
	201, 0, 214, 262, 228, 263, 215, 240, 239, 241,
	1480, 1481, 1482, 1483, 1484, 341, 1492, 1493, 0, 1497,
	1498, 1499, 1366, 0, 1386, 1438, 0, 1350, 1447, 1455,
	1405, 315, 1457, 1402, 1401, 1487, 0, 1486, 288, 1488,
	1489, 223, 1453, 1382, 1391, 331, 1389, 274, 256, 1459,
	1424, 1500, 272, 226, 300, 264, 306, 290, 314, 268,
	265, 166, 291, 195, 237, 177, 179, 191, 198, 200,
	202, 203, 246, 247, 259, 279, 293, 294, 295, 194,
	187, 273, 188, 212, 189, 167, 281, 190, 169, 260,
	298, 1485, 208, 269, 233, 170, 232, 261, 297, 296,
	178, 322, 328, 329, 333, 0, 334, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 1494, 0,
	1495, 327, 206, 164, 310, 0, 252, 0, 1450, 1355,
	1365, 1363, 1399, 1426, 1427, 248, 326, 1442, 1446, 1443,
	1471, 277, 0, 0, 0, 0, 0, 217, 258, 1444,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 285, 308, 320, 337, 340, 1503, 1504,
	1505, 168, 339, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	311, 1400, 1373, 1411, 319, 1376, 1374, 1441, 1375, 1430,
	335, 242, 243, 244, 245, 209, 0, 185, 338, 267,
	1421, 1404, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1422,
	1514, 1515, 1516, 1517, 1518, 1378, 332, 205, 211, 0,
	213, 184, 257, 207, 317, 220, 1448, 1519, 1520, 249,
	216, 282, 221, 227, 270, 316, 255, 275, 182, 307,
	283, 231, 0, 0, 1372, 1377, 1371, 1418, 1419, 1465,
	1466, 1467, 1439, 1364, 1451, 0, 1368, 1370, 1369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 292,
	468, 1423, 165, 0, 225, 1472, 266, 204, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 0, 0, 199, 0, 0,
	224, 0, 0, 0, 460, 0, 0, 284, 238, 0,
	0, 0, 0, 514, 522, 1490, 1491, 323, 324, 325,
	309, 0, 196, 1513, 0, 422, 0, 0, 453, 491,
	490, 440, 449, 0, 0, 180, 441, 0, 448, 442,
	446, 445, 443, 444, 0, 506, 0, 0, 0, 0,
	0, 0, 413, 426, 2368, 430, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 469, 0, 425, 0, 0, 471, 450,
	451, 0, 0, 171, 289, 305, 181, 280, 318, 186,
	287, 176, 253, 276, 0, 0, 173, 303, 286, 235,
	218, 219, 172, 0, 271, 197, 210, 193, 251, 447,
	467, 472, 192, 528, 465, 313, 175, 0, 312, 250,
	299, 304, 236, 230, 174, 301, 234, 229, 222, 201,
	529, 214, 262, 228, 263, 215, 240, 239, 241, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 0, 0,
	315, 0, 0, 512, 0, 0, 0, 288, 0, 0,
	223, 0, 0, 0, 466, 0, 274, 256, 525, 414,
	0, 272, 226, 300, 264, 306, 290, 314, 268, 265,
	166, 291, 195, 237, 177, 179, 191, 198, 200, 202,
	203, 246, 247, 259, 279, 293, 294, 295, 194, 187,
	273, 188, 212, 189, 167, 281, 190, 169, 260, 298,
	0, 208, 269, 233, 170, 232, 261, 297, 296, 178,
	322, 328, 329, 333, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	327, 206, 164, 310, 510, 252, 0, 524, 505, 507,
	508, 511, 515, 516, 517, 518, 519, 521, 523, 527,
	277, 0, 0, 0, 0, 0, 217, 258, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 308, 320, 337, 340, 0, 0, 0,
	168, 339, 0, 2369, 0, 0, 0, 2370, 0, 526,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 470,
	242, 243, 244, 245, 513, 0, 185, 338, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 205, 211, 0, 213,
	184, 257, 207, 317, 220, 0, 0, 0, 249, 216,
	282, 221, 227, 270, 316, 255, 275, 182, 307, 283,
	231, 0, 0, 535, 509, 534, 536, 537, 533, 538,
	539, 520, 432, 0, 475, 531, 530, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 225, 0, 266, 204, 498, 479, 480,
	481, 431, 482, 477, 478, 499, 473, 495, 496, 455,
	458, 483, 494, 484, 497, 500, 501, 540, 541, 542,
	487, 502, 493, 492, 485, 474, 503, 504, 459, 457,
	488, 489, 476, 292, 468, 0, 323, 324, 325, 309,
	0, 196, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 0,
	0, 199, 0, 0, 224, 0, 0, 0, 460, 0,
	0, 284, 238, 0, 0, 0, 0, 514, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 422,
	0, 0, 453, 491, 490, 440, 449, 0, 0, 180,
	441, 0, 448, 442, 446, 445, 443, 444, 0, 506,
	0, 0, 0, 0, 0, 0, 413, 426, 0, 430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 423, 424, 0, 0, 0, 0, 469, 0, 425,
	0, 0, 471, 450, 451, 0, 0, 171, 289, 305,
	181, 280, 318, 186, 287, 176, 253, 276, 0, 0,
	173, 303, 286, 235, 218, 219, 172, 0, 271, 197,
	210, 193, 251, 447, 467, 472, 192, 528, 465, 313,
	175, 0, 312, 250, 299, 304, 236, 230, 174, 301,
	234, 229, 222, 201, 529, 214, 262, 228, 263, 215,
	240, 239, 241, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 0, 0, 315, 0, 0, 512, 0, 0,
	0, 288, 0, 0, 223, 0, 0, 0, 466, 0,
	274, 256, 525, 414, 0, 272, 226, 300, 264, 306,
	290, 314, 268, 265, 166, 291, 195, 237, 177, 179,
	191, 198, 200, 202, 203, 246, 247, 259, 279, 293,
	294, 295, 194, 187, 273, 188, 212, 189, 167, 281,
	190, 169, 260, 298, 0, 208, 269, 233, 170, 232,
	261, 297, 296, 178, 322, 328, 329, 333, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 1151, 1150, 1152, 327, 206, 164, 310, 510, 252,
	0, 524, 505, 507, 508, 511, 515, 516, 517, 518,
	519, 521, 523, 527, 277, 0, 0, 0, 0, 0,
	217, 258, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 308, 320, 337,
	340, 0, 0, 0, 168, 339, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 470, 242, 243, 244, 245, 513, 0,
	185, 338, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	205, 211, 0, 213, 184, 257, 207, 317, 220, 0,
	0, 0, 249, 216, 282, 221, 227, 270, 316, 255,
	275, 182, 307, 283, 231, 0, 0, 535, 509, 534,
	536, 537, 533, 538, 539, 520, 432, 0, 475, 531,
	530, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 225, 0, 266,
	204, 498, 479, 480, 481, 431, 482, 477, 478, 499,
	473, 495, 496, 455, 458, 483, 494, 484, 497, 500,
	501, 540, 541, 542, 487, 502, 493, 492, 485, 474,
	503, 504, 459, 457, 488, 489, 476, 292, 468, 0,
	323, 324, 325, 309, 0, 196, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 0, 0, 0, 199, 0, 0, 224, 0,
	0, 0, 460, 0, 0, 284, 238, 0, 0, 0,
	0, 514, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 422, 0, 0, 453, 491, 490, 440,
	449, 0, 0, 180, 441, 0, 448, 442, 446, 445,
	443, 444, 0, 506, 0, 0, 0, 0, 0, 0,
	413, 426, 0, 430, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 424, 0, 0, 0,
	0, 469, 0, 425, 0, 0, 471, 450, 451, 0,
	0, 171, 289, 305, 181, 280, 318, 186, 287, 176,
	253, 276, 0, 0, 173, 303, 286, 235, 218, 219,
	172, 0, 271, 197, 210, 193, 251, 447, 467, 472,
	192, 528, 465, 313, 175, 0, 312, 250, 299, 304,
	236, 230, 174, 301, 234, 229, 222, 201, 529, 214,
	262, 228, 263, 215, 240, 239, 241, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 0, 0, 315, 0,
	0, 512, 0, 0, 0, 288, 0, 0, 223, 0,
	0, 0, 466, 0, 274, 256, 525, 414, 0, 272,
	226, 300, 264, 306, 290, 314, 268, 265, 166, 291,
	195, 237, 177, 179, 191, 198, 200, 202, 203, 246,
	247, 259, 279, 293, 294, 295, 194, 187, 273, 188,
	212, 189, 167, 281, 190, 169, 260, 298, 0, 208,
	269, 233, 170, 232, 261, 297, 296, 178, 322, 328,
	329, 333, 0, 334, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 327, 206,
	164, 310, 510, 252, 0, 524, 505, 507, 508, 511,
	515, 516, 517, 518, 519, 521, 523, 527, 277, 0,
	0, 0, 0, 0, 217, 258, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 308, 320, 337, 340, 0, 0, 0, 168, 339,
	0, 2369, 0, 0, 0, 2370, 0, 526, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 470, 242, 243,
	244, 245, 513, 0, 185, 338, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 205, 211, 0, 213, 184, 257,
	207, 317, 220, 0, 0, 0, 249, 216, 282, 221,
	227, 270, 316, 255, 275, 182, 307, 283, 231, 0,
	0, 535, 509, 534, 536, 537, 533, 538, 539, 520,
	432, 0, 475, 531, 530, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 225, 0, 266, 204, 498, 479, 480, 481, 431,
	482, 477, 478, 499, 473, 495, 496, 455, 458, 483,
	494, 484, 497, 500, 501, 540, 541, 542, 487, 502,
	493, 492, 485, 474, 503, 504, 459, 457, 488, 489,
	476, 292, 468, 0, 323, 324, 325, 309, 0, 196,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 0, 0, 199,
	1212, 0, 224, 0, 0, 0, 460, 0, 0, 284,
	238, 0, 0, 0, 0, 514, 522, 0, 0, 0,
	0, 0, 0, 0, 1293, 0, 0, 422, 0, 0,
	453, 491, 490, 440, 449, 0, 0, 180, 441, 0,
	448, 442, 446, 445, 443, 444, 0, 506, 0, 0,
	0, 0, 0, 0, 413, 426, 0, 430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 423,
	424, 0, 0, 0, 0, 469, 0, 425, 0, 0,
	1294, 450, 451, 0, 0, 171, 289, 305, 181, 280,
	318, 186, 287, 176, 253, 276, 0, 0, 173, 303,
	286, 235, 218, 219, 172, 0, 271, 197, 210, 193,
	251, 447, 467, 472, 192, 528, 465, 313, 175, 0,
	312, 250, 299, 304, 236, 230, 174, 301, 234, 229,
	222, 201, 529, 214, 262, 228, 263, 215, 240, 239,
	241, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 315, 0, 0, 512, 0, 0, 0, 288,
	0, 0, 223, 0, 0, 0, 466, 0, 274, 256,
	525, 414, 0, 272, 226, 300, 264, 306, 290, 314,
	268, 265, 166, 291, 195, 237, 177, 179, 191, 198,
	200, 202, 203, 246, 247, 259, 279, 293, 294, 295,
	194, 187, 273, 188, 212, 189, 167, 281, 190, 169,
	260, 298, 0, 208, 269, 233, 170, 232, 261, 297,
	296, 178, 322, 328, 329, 333, 0, 334, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 327, 206, 164, 310, 510, 252, 0, 524,
	505, 507, 508, 511, 515, 516, 517, 518, 519, 521,
	523, 527, 277, 0, 0, 0, 0, 0, 217, 258,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 308, 320, 337, 340, 0,
	0, 0, 168, 339, 0, 0, 0, 0, 0, 0,
	0, 526, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 470, 242, 243, 244, 245, 513, 0, 185, 338,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 205, 211,
	0, 213, 184, 257, 207, 317, 220, 0, 0, 0,
	249, 216, 282, 221, 227, 270, 316, 255, 275, 182,
	307, 283, 231, 0, 0, 535, 509, 534, 536, 537,
	533, 538, 539, 520, 432, 0, 475, 531, 530, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 225, 0, 266, 204, 498,
	479, 480, 481, 431, 482, 477, 478, 499, 473, 495,
	496, 455, 458, 483, 494, 484, 497, 500, 501, 540,
	541, 542, 487, 502, 493, 492, 485, 474, 503, 504,
	459, 457, 488, 489, 476, 117, 292, 468, 323, 324,
	325, 309, 0, 196, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 0, 0, 0, 199, 0, 0, 224, 0, 0,
	0, 460, 0, 0, 284, 238, 0, 0, 0, 0,
	514, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 422, 0, 0, 453, 491, 490, 440, 449,
	0, 0, 180, 441, 0, 448, 442, 446, 445, 443,
	444, 0, 506, 0, 0, 0, 0, 0, 0, 413,
	426, 0, 430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 424, 0, 0, 0, 0,
	469, 0, 425, 0, 0, 471, 450, 451, 0, 0,
	171, 289, 305, 181, 280, 318, 186, 287, 176, 253,
	276, 0, 0, 173, 303, 286, 235, 218, 219, 172,
	0, 271, 197, 210, 193, 251, 447, 467, 472, 192,
	528, 465, 313, 175, 0, 312, 250, 299, 304, 236,
	230, 174, 301, 234, 229, 222, 201, 529, 214, 262,
	228, 263, 215, 240, 239, 241, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 0, 0, 315, 0, 0,
	512, 0, 0, 0, 288, 0, 0, 223, 0, 0,
	0, 466, 0, 274, 256, 525, 414, 0, 272, 226,
	300, 264, 306, 290, 314, 268, 265, 166, 291, 195,
	237, 177, 179, 191, 198, 200, 202, 203, 246, 247,
	259, 279, 293, 294, 295, 194, 187, 273, 188, 212,
	189, 167, 281, 190, 169, 260, 298, 0, 208, 269,
	233, 170, 232, 261, 297, 296, 178, 322, 328, 329,
	333, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 327, 206, 164,
	310, 510, 252, 0, 524, 505, 507, 508, 511, 515,
	516, 517, 518, 519, 521, 523, 527, 277, 0, 0,
	0, 0, 0, 217, 258, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	308, 320, 337, 340, 0, 0, 0, 168, 339, 0,
	0, 0, 0, 0, 0, 0, 526, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 470, 242, 243, 244,
	245, 513, 0, 185, 338, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 205, 211, 0, 213, 184, 257, 207,
	317, 220, 0, 0, 0, 249, 216, 282, 221, 227,
	270, 316, 255, 275, 182, 307, 283, 231, 0, 0,
	535, 509, 534, 536, 537, 533, 538, 539, 520, 432,
	0, 475, 531, 530, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	225, 90, 266, 204, 498, 479, 480, 481, 431, 482,
	477, 478, 499, 473, 495, 496, 455, 458, 483, 494,
	484, 497, 500, 501, 540, 541, 542, 487, 502, 493,
	492, 485, 474, 503, 504, 459, 457, 488, 489, 476,
	292, 468, 0, 323, 324, 325, 309, 0, 196, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 0, 0, 199, 2598,
	0, 224, 0, 0, 0, 460, 0, 0, 284, 238,
	0, 0, 0, 0, 514, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 422, 0, 0, 453,
	491, 490, 440, 449, 0, 0, 180, 441, 0, 448,
	442, 446, 445, 443, 444, 0, 506, 0, 0, 0,
	0, 0, 0, 413, 426, 0, 430, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 424,
	0, 0, 0, 0, 469, 0, 425, 0, 0, 471,
	450, 451, 0, 0, 171, 289, 305, 181, 280, 318,
	186, 287, 176, 253, 276, 0, 0, 173, 303, 286,
	235, 218, 219, 172, 0, 271, 197, 210, 193, 251,
	447, 467, 472, 192, 528, 465, 313, 175, 0, 312,
	250, 299, 304, 236, 230, 174, 301, 234, 229, 222,
	201, 529, 214, 262, 228, 263, 215, 240, 239, 241,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 0,
	0, 315, 0, 0, 512, 0, 0, 0, 288, 0,
	0, 223, 0, 0, 0, 466, 0, 274, 256, 525,
	414, 0, 272, 226, 300, 264, 306, 290, 314, 268,
	265, 166, 291, 195, 237, 177, 179, 191, 198, 200,
	202, 203, 246, 247, 259, 279, 293, 294, 295, 194,
	187, 273, 188, 212, 189, 167, 281, 190, 169, 260,
	298, 0, 208, 269, 233, 170, 232, 261, 297, 296,
	178, 322, 328, 329, 333, 0, 334, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 327, 206, 164, 310, 510, 252, 0, 524, 505,
	507, 508, 511, 515, 516, 517, 518, 519, 521, 523,
	527, 277, 0, 0, 0, 0, 0, 217, 258, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 308, 320, 337, 340, 0, 0,
	0, 168, 339, 0, 0, 0, 0, 0, 0, 0,
	526, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	470, 242, 243, 244, 245, 513, 0, 185, 338, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 205, 211, 0,
	213, 184, 257, 207, 317, 220, 0, 0, 0, 249,
	216, 282, 221, 227, 270, 316, 255, 275, 182, 307,
	283, 231, 0, 0, 535, 509, 534, 536, 537, 533,
	538, 539, 520, 432, 0, 475, 531, 530, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 225, 0, 266, 204, 498, 479,
	480, 481, 431, 482, 477, 478, 499, 473, 495, 496,
	455, 458, 483, 494, 484, 497, 500, 501, 540, 541,
	542, 487, 502, 493, 492, 485, 474, 503, 504, 459,
	457, 488, 489, 476, 292, 468, 0, 323, 324, 325,
	309, 0, 196, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	0, 0, 199, 1212, 0, 224, 0, 0, 0, 460,
	0, 0, 284, 238, 0, 0, 0, 0, 514, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	422, 0, 0, 453, 491, 490, 440, 449, 0, 0,
	180, 441, 0, 448, 442, 446, 445, 443, 444, 0,
	506, 0, 0, 0, 0, 0, 0, 413, 426, 0,
	430, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 469, 0,
	425, 0, 0, 471, 450, 451, 0, 0, 171, 289,
	305, 181, 280, 318, 186, 287, 176, 253, 276, 0,
	0, 173, 303, 286, 235, 218, 219, 172, 0, 271,
	197, 210, 193, 251, 447, 467, 472, 192, 528, 465,
	313, 175, 0, 312, 250, 299, 304, 236, 230, 174,
	301, 234, 229, 222, 201, 529, 214, 262, 228, 263,
	215, 240, 239, 241, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 0, 0, 315, 0, 0, 512, 0,
	0, 0, 288, 0, 0, 223, 0, 0, 0, 466,
	0, 274, 256, 525, 414, 0, 272, 226, 300, 264,
	306, 290, 314, 268, 265, 166, 291, 195, 237, 177,
	179, 191, 198, 200, 202, 203, 246, 247, 259, 279,
	293, 294, 295, 194, 187, 273, 188, 212, 189, 167,
	281, 190, 169, 260, 298, 0, 208, 269, 233, 170,
	232, 261, 297, 296, 178, 322, 328, 329, 333, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 327, 206, 164, 310, 510,
	252, 0, 524, 505, 507, 508, 511, 515, 516, 517,
	518, 519, 521, 523, 527, 277, 0, 0, 0, 0,
	0, 217, 258, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 308, 320,
	337, 340, 0, 0, 0, 168, 339, 0, 0, 0,
	0, 0, 0, 0, 526, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 470, 242, 243, 244, 245, 513,
	0, 185, 338, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 205, 211, 0, 213, 184, 257, 207, 317, 220,
	0, 0, 0, 249, 216, 282, 221, 227, 270, 316,
	255, 275, 182, 307, 283, 231, 0, 0, 535, 509,
	534, 536, 537, 533, 538, 539, 520, 432, 0, 475,
	531, 530, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 225, 0,
	266, 204, 498, 479, 480, 481, 431, 482, 477, 478,
	499, 473, 495, 496, 455, 458, 483, 494, 484, 497,
	500, 501, 540, 541, 542, 487, 502, 493, 492, 485,
	474, 503, 504, 459, 457, 488, 489, 476, 292, 468,
	0, 323, 324, 325, 309, 0, 196, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 0, 0, 199, 0, 0, 224,
	0, 0, 0, 460, 0, 0, 284, 238, 0, 0,
	0, 0, 514, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 422, 0, 0, 453, 491, 490,
	440, 449, 0, 0, 180, 441, 0, 448, 442, 446,
	445, 443, 444, 0, 506, 0, 0, 0, 0, 0,
	0, 413, 426, 0, 430, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 424, 990, 0,
	0, 0, 469, 0, 425, 0, 0, 471, 450, 451,
	0, 0, 171, 289, 305, 181, 280, 318, 186, 287,
	176, 253, 276, 0, 0, 173, 303, 286, 235, 218,
	219, 172, 0, 271, 197, 210, 193, 251, 447, 467,
	472, 192, 528, 465, 313, 175, 0, 312, 250, 299,
	304, 236, 230, 174, 301, 234, 229, 222, 201, 529,
	214, 262, 228, 263, 215, 240, 239, 241, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 0, 0, 315,
	0, 0, 512, 0, 0, 0, 288, 0, 0, 223,
	0, 0, 0, 466, 0, 274, 256, 525, 414, 0,
	272, 226, 300, 264, 306, 290, 314, 268, 265, 166,
	291, 195, 237, 177, 179, 191, 198, 200, 202, 203,
	246, 247, 259, 279, 293, 294, 295, 194, 187, 273,
	188, 212, 189, 167, 281, 190, 169, 260, 298, 0,
	208, 269, 233, 170, 232, 261, 297, 296, 178, 322,
	328, 329, 333, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 327,
	206, 164, 310, 510, 252, 0, 524, 505, 507, 508,
	511, 515, 516, 517, 518, 519, 521, 523, 527, 277,
	0, 0, 0, 0, 0, 217, 258, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 308, 320, 337, 340, 0, 0, 0, 168,
	339, 0, 0, 0, 0, 0, 0, 0, 526, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 470, 242,
	243, 244, 245, 513, 0, 185, 338, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 205, 211, 0, 213, 184,
	257, 207, 317, 220, 0, 0, 0, 249, 216, 282,
	221, 227, 270, 316, 255, 275, 182, 307, 283, 231,
	0, 0, 535, 509, 534, 536, 537, 533, 538, 539,
	520, 432, 0, 475, 531, 530, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 225, 0, 266, 204, 498, 479, 480, 481,
	431, 482, 477, 478, 499, 473, 495, 496, 455, 458,
	483, 494, 484, 497, 500, 501, 540, 541, 542, 487,
	502, 493, 492, 485, 474, 503, 504, 459, 457, 488,
	489, 476, 0, 0, 0, 323, 324, 325, 309, 0,
	196, 292, 468, 0, 0, 1582, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 0, 0, 199,
	0, 0, 224, 0, 0, 0, 460, 0, 0, 284,
	238, 0, 0, 0, 0, 514, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 422, 0, 0,
	453, 491, 490, 440, 449, 0, 0, 180, 441, 0,
	448, 442, 446, 445, 443, 444, 0, 506, 0, 0,
	0, 0, 0, 0, 413, 426, 0, 430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 423,
	424, 0, 0, 0, 0, 469, 0, 425, 0, 0,
	471, 450, 451, 0, 0, 171, 289, 305, 181, 280,
	318, 186, 287, 176, 253, 276, 0, 0, 173, 303,
	286, 235, 218, 219, 172, 0, 271, 197, 210, 193,
	251, 447, 467, 472, 192, 528, 465, 313, 175, 0,
	312, 250, 299, 304, 236, 230, 174, 301, 234, 229,
	222, 201, 529, 214, 262, 228, 263, 215, 240, 239,
	241, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 315, 0, 0, 512, 0, 0, 0, 288,
	0, 0, 223, 0, 0, 0, 466, 0, 274, 256,
	525, 414, 0, 272, 226, 300, 264, 306, 290, 314,
	268, 265, 166, 291, 195, 237, 177, 179, 191, 198,
	200, 202, 203, 246, 247, 259, 279, 293, 294, 295,
	194, 187, 273, 188, 212, 189, 167, 281, 190, 169,
	260, 298, 0, 208, 269, 233, 170, 232, 261, 297,
	296, 178, 322, 328, 329, 333, 0, 334, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 327, 206, 164, 310, 510, 252, 0, 524,
	505, 507, 508, 511, 515, 516, 517, 518, 519, 521,
	523, 527, 277, 0, 0, 0, 0, 0, 217, 258,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 308, 320, 337, 340, 0,
	0, 0, 168, 339, 0, 0, 0, 0, 0, 0,
	0, 526, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 470, 242, 243, 244, 245, 513, 0, 185, 338,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 205, 211,
	0, 213, 184, 257, 207, 317, 220, 0, 0, 0,
	249, 216, 282, 221, 227, 270, 316, 255, 275, 182,
	307, 283, 231, 0, 0, 535, 509, 534, 536, 537,
	533, 538, 539, 520, 432, 0, 475, 531, 530, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 225, 0, 266, 204, 498,
	479, 480, 481, 431, 482, 477, 478, 499, 473, 495,
	496, 455, 458, 483, 494, 484, 497, 500, 501, 540,
	541, 542, 487, 502, 493, 492, 485, 474, 503, 504,
	459, 457, 488, 489, 476, 292, 468, 0, 323, 324,
	325, 309, 0, 196, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	0, 0, 0, 199, 0, 0, 224, 0, 0, 0,
	460, 0, 0, 284, 238, 0, 0, 0, 0, 514,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 422, 0, 0, 453, 491, 490, 440, 449, 0,
	0, 180, 441, 0, 448, 442, 446, 445, 443, 444,
	0, 506, 0, 0, 0, 0, 0, 0, 413, 426,
	0, 430, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 423, 424, 0, 0, 0, 0, 469,
	0, 425, 0, 0, 471, 450, 451, 0, 0, 171,
	289, 305, 181, 280, 318, 186, 287, 176, 253, 276,
	0, 0, 173, 303, 286, 235, 218, 219, 172, 0,
	271, 197, 210, 193, 251, 447, 467, 472, 192, 528,
	465, 313, 175, 0, 312, 250, 299, 304, 236, 230,
	174, 301, 234, 229, 222, 201, 529, 214, 262, 228,
	263, 215, 240, 239, 241, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 0, 0, 315, 0, 0, 512,
	0, 0, 0, 288, 0, 0, 223, 0, 0, 0,
	466, 0, 274, 256, 525, 414, 0, 272, 226, 300,
	264, 306, 290, 314, 268, 265, 166, 291, 195, 237,
	177, 179, 191, 198, 200, 202, 203, 246, 247, 259,
	279, 293, 294, 295, 194, 187, 273, 188, 212, 189,
	167, 281, 190, 169, 260, 298, 0, 208, 269, 233,
	170, 232, 261, 297, 296, 178, 322, 328, 329, 333,
	0, 334, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 0, 327, 206, 164, 310,
	510, 252, 0, 524, 505, 507, 508, 511, 515, 516,
	517, 518, 519, 521, 523, 527, 277, 0, 0, 0,
	0, 0, 217, 258, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 308,
	320, 337, 340, 0, 0, 0, 168, 339, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 470, 242, 243, 244, 245,
	513, 0, 185, 338, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 205, 211, 0, 213, 184, 257, 207, 317,
	220, 0, 0, 0, 249, 216, 282, 221, 227, 270,
	316, 255, 275, 182, 307, 283, 231, 0, 0, 535,
	509, 534, 536, 537, 533, 538, 539, 520, 432, 0,
	475, 531, 530, 532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 225,
	0, 266, 204, 498, 479, 480, 481, 431, 482, 477,
	478, 499, 473, 495, 496, 455, 458, 483, 494, 484,
	497, 500, 501, 540, 541, 542, 487, 502, 493, 492,
	485, 474, 503, 504, 459, 457, 488, 489, 476, 292,
	468, 0, 323, 324, 325, 309, 0, 196, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 1074,
	0, 0, 0, 429, 0, 0, 0, 199, 0, 0,
	224, 0, 0, 0, 460, 0, 0, 284, 238, 0,
	0, 0, 0, 514, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 422, 0, 0, 453, 491,
	490, 440, 449, 0, 0, 180, 441, 0, 448, 442,
	446, 445, 443, 444, 0, 506, 0, 0, 0, 0,
	0, 0, 0, 426, 0, 430, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 469, 0, 425, 0, 0, 471, 450,
	451, 0, 0, 171, 289, 305, 181, 280, 318, 186,
	287, 176, 253, 276, 0, 0, 173, 303, 286, 235,
	218, 219, 172, 0, 271, 197, 210, 193, 251, 447,
	467, 472, 192, 528, 465, 313, 175, 0, 312, 250,
	299, 304, 236, 230, 174, 301, 234, 229, 222, 201,
	529, 214, 262, 228, 263, 215, 240, 239, 241, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 0, 0,
	315, 0, 0, 512, 0, 0, 0, 288, 0, 0,
	223, 0, 0, 0, 466, 0, 274, 256, 525, 0,
	0, 272, 226, 300, 264, 306, 290, 314, 268, 265,
	166, 291, 195, 237, 177, 179, 191, 198, 200, 202,
	203, 246, 247, 259, 279, 293, 294, 295, 194, 187,
	273, 188, 212, 189, 167, 281, 190, 169, 260, 298,
	0, 208, 269, 233, 170, 232, 261, 297, 296, 178,
	322, 1075, 1076, 333, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	327, 206, 164, 310, 510, 252, 0, 524, 505, 507,
	508, 511, 515, 516, 517, 518, 519, 521, 523, 527,
	277, 0, 0, 0, 0, 0, 217, 258, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 308, 320, 337, 340, 0, 0, 0,
	168, 339, 0, 0, 0, 0, 0, 0, 0, 526,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 470,
	242, 243, 244, 245, 513, 0, 185, 338, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 205, 211, 0, 213,
	184, 257, 207, 317, 220, 0, 0, 0, 249, 216,
	282, 221, 227, 270, 316, 255, 275, 182, 307, 283,
	231, 0, 0, 535, 509, 534, 536, 537, 533, 538,
	539, 520, 432, 0, 475, 531, 530, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 225, 0, 266, 204, 498, 479, 480,
	481, 431, 482, 477, 478, 499, 473, 495, 496, 455,
	458, 483, 494, 484, 497, 500, 501, 540, 541, 542,
	487, 502, 493, 492, 485, 474, 503, 504, 459, 457,
	488, 489, 476, 292, 468, 0, 323, 324, 325, 309,
	0, 196, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 0,
	0, 199, 0, 0, 224, 0, 0, 0, 460, 0,
	0, 284, 238, 0, 0, 0, 0, 514, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 453, 491, 490, 440, 449, 0, 0, 180,
	441, 0, 448, 442, 446, 445, 443, 444, 0, 506,
	0, 0, 0, 0, 0, 0, 413, 426, 0, 430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 423, 424, 0, 0, 0, 0, 469, 0, 425,
	0, 0, 471, 450, 451, 0, 0, 171, 289, 305,
	181, 280, 318, 186, 287, 176, 253, 276, 0, 0,
	173, 303, 286, 235, 218, 219, 172, 0, 271, 197,
	210, 193, 251, 447, 467, 472, 192, 528, 465, 313,
	175, 0, 312, 250, 299, 304, 236, 230, 174, 301,
	234, 229, 222, 201, 529, 214, 262, 228, 263, 215,
	240, 239, 241, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 0, 0, 315, 0, 0, 512, 0, 0,
	0, 288, 0, 0, 223, 0, 0, 0, 466, 0,
	274, 256, 525, 414, 0, 272, 226, 300, 264, 306,
	290, 314, 268, 265, 166, 291, 195, 237, 177, 179,
	191, 198, 200, 202, 203, 246, 247, 259, 279, 293,
	294, 295, 194, 187, 273, 188, 212, 189, 167, 281,
	190, 169, 260, 298, 0, 208, 269, 233, 170, 232,
	261, 297, 296, 178, 322, 328, 329, 333, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 327, 206, 164, 310, 510, 252,
	0, 524, 505, 507, 508, 511, 515, 516, 517, 518,
	519, 521, 523, 527, 277, 0, 0, 0, 0, 0,
	217, 258, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 308, 320, 337,
	340, 0, 0, 0, 168, 339, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 470, 242, 243, 244, 245, 513, 0,
	185, 338, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	205, 211, 0, 213, 184, 257, 207, 317, 220, 0,
	0, 0, 249, 216, 282, 221, 227, 270, 316, 255,
	275, 182, 307, 283, 231, 0, 0, 535, 509, 534,
	536, 537, 533, 538, 539, 520, 432, 0, 475, 531,
	530, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 225, 0, 266,
	204, 498, 479, 480, 481, 431, 482, 477, 478, 499,
	473, 495, 496, 455, 458, 483, 494, 484, 497, 500,
	501, 540, 541, 542, 487, 502, 493, 492, 485, 474,
	503, 504, 459, 457, 488, 489, 476, 292, 468, 0,
	323, 324, 325, 309, 0, 196, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 0, 0, 0, 199, 0, 0, 224, 0,
	0, 0, 460, 0, 0, 284, 238, 0, 0, 0,
	0, 514, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 422, 0, 0, 453, 491, 490, 440,
	449, 0, 0, 180, 441, 0, 448, 442, 446, 445,
	443, 444, 0, 506, 0, 0, 0, 0, 0, 0,
	0, 426, 0, 430, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 424, 0, 0, 0,
	0, 469, 0, 425, 0, 0, 471, 450, 451, 0,
	0, 171, 289, 305, 181, 280, 318, 186, 287, 176,
	253, 276, 0, 0, 173, 303, 286, 235, 218, 219,
	172, 0, 271, 197, 210, 193, 251, 447, 467, 472,
	192, 528, 465, 313, 175, 0, 312, 250, 299, 304,
	236, 230, 174, 301, 234, 229, 222, 201, 529, 214,
	262, 228, 263, 215, 240, 239, 241, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 0, 0, 315, 0,
	0, 512, 0, 0, 0, 288, 0, 0, 223, 0,
	0, 0, 466, 0, 274, 256, 525, 0, 0, 272,
	226, 300, 264, 306, 290, 314, 268, 265, 166, 291,
	195, 237, 177, 179, 191, 198, 200, 202, 203, 246,
	247, 259, 279, 293, 294, 295, 194, 187, 273, 188,
	212, 189, 167, 281, 190, 169, 260, 298, 0, 208,
	269, 233, 170, 232, 261, 297, 296, 178, 322, 328,
	329, 333, 0, 334, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 327, 206,
	164, 310, 510, 252, 0, 524, 505, 507, 508, 511,
	515, 516, 517, 518, 519, 521, 523, 527, 277, 0,
	0, 0, 0, 0, 217, 258, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 308, 320, 337, 340, 0, 0, 0, 168, 339,
	0, 0, 0, 0, 0, 0, 0, 526, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 470, 242, 243,
	244, 245, 513, 0, 185, 338, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 205, 211, 0, 213, 184, 257,
	207, 317, 220, 0, 0, 0, 249, 216, 282, 221,
	227, 270, 316, 255, 275, 182, 307, 283, 231, 0,
	0, 535, 509, 534, 536, 537, 533, 538, 539, 520,
	432, 0, 475, 531, 530, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 225, 0, 266, 204, 498, 479, 480, 481, 431,
	482, 477, 478, 499, 473, 495, 496, 455, 458, 483,
	494, 484, 497, 500, 501, 540, 541, 542, 487, 502,
	493, 492, 485, 474, 503, 504, 459, 457, 488, 489,
	476, 0, 0, 0, 323, 324, 325, 309, 0, 196,
	117, 292, 35, 107, 89, 0, 0, 0, 0, 0,
	0, 0, 254, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 284,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 289, 305, 181, 280,
	318, 186, 287, 176, 253, 276, 0, 0, 173, 303,
	286, 235, 218, 219, 172, 0, 271, 197, 210, 193,
	251, 0, 302, 330, 192, 321, 0, 313, 175, 0,
	312, 250, 299, 304, 236, 230, 174, 301, 234, 229,
	222, 201, 0, 214, 262, 228, 263, 215, 240, 239,
	241, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 223, 0, 0, 0, 331, 0, 274, 256,
	0, 0, 0, 272, 226, 300, 264, 306, 290, 314,
	268, 265, 166, 291, 195, 237, 177, 179, 191, 198,
	200, 202, 203, 246, 247, 259, 279, 293, 294, 295,
	194, 187, 273, 188, 212, 189, 167, 281, 190, 169,
	260, 298, 0, 208, 269, 233, 170, 232, 261, 297,
	296, 178, 322, 328, 329, 333, 0, 334, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 327, 206, 164, 310, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 326, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 0, 217, 258,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 308, 320, 337, 340, 0,
	0, 0, 168, 339, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 335, 242, 243, 244, 245, 352, 354, 185, 338,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 205, 211,
	0, 213, 184, 257, 207, 317, 220, 0, 0, 0,
	249, 216, 282, 221, 227, 270, 316, 255, 275, 182,
	307, 283, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 225, 90, 266, 204, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 292, 0, 0, 323, 324,
	325, 309, 0, 196, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 284, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 2018, 2021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	289, 305, 181, 280, 318, 186, 287, 176, 253, 276,
	0, 0, 173, 303, 286, 235, 218, 219, 172, 0,
	271, 197, 210, 193, 251, 0, 302, 330, 192, 321,
	0, 313, 175, 0, 312, 250, 299, 304, 236, 230,
	174, 301, 234, 229, 222, 201, 0, 214, 262, 228,
	263, 215, 240, 239, 241, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 315, 0, 0, 0,
	2015, 0, 2014, 288, 2016, 2019, 223, 0, 0, 0,
	331, 0, 274, 256, 0, 0, 0, 272, 226, 300,
	264, 306, 290, 314, 268, 265, 166, 291, 195, 237,
	177, 179, 191, 198, 200, 202, 203, 246, 247, 259,
	279, 293, 294, 295, 194, 187, 273, 188, 212, 189,
	167, 281, 190, 169, 260, 298, 2020, 208, 269, 233,
	170, 232, 261, 297, 296, 178, 322, 328, 329, 333,
	0, 334, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 0, 327, 206, 164, 310,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 326, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 0, 217, 258, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 308,
	320, 337, 340, 0, 0, 0, 168, 339, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 335, 242, 243, 244, 245,
	209, 0, 185, 338, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 205, 211, 0, 213, 184, 257, 207, 317,
	220, 0, 0, 0, 249, 216, 282, 221, 227, 270,
	316, 255, 275, 182, 307, 283, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 225,
	0, 266, 204, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 292,
	0, 0, 323, 324, 325, 309, 0, 196, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1317, 0, 0, 0, 0, 199, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 284, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 1318, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 741, 742,
	743, 740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 289, 305, 181, 280, 318, 186,
	287, 176, 253, 276, 0, 0, 173, 303, 286, 235,
	218, 219, 172, 0, 271, 197, 210, 193, 251, 0,
	302, 330, 192, 321, 0, 313, 175, 0, 312, 250,
	299, 304, 236, 230, 174, 301, 234, 229, 222, 201,
	0, 214, 262, 228, 263, 215, 240, 239, 241, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	223, 0, 0, 0, 331, 0, 274, 256, 0, 0,
	0, 272, 226, 300, 264, 306, 290, 314, 268, 265,
	166, 291, 195, 237, 177, 179, 191, 198, 200, 202,
	203, 246, 247, 259, 279, 293, 294, 295, 194, 187,
	273, 188, 212, 189, 167, 281, 190, 169, 260, 298,
	0, 208, 269, 233, 170, 232, 261, 297, 296, 178,
	322, 328, 329, 333, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	327, 206, 164, 310, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 326, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 0, 217, 258, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 308, 320, 337, 340, 0, 0, 0,
	168, 339, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 335,
	242, 243, 244, 245, 209, 0, 185, 338, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 205, 211, 0, 213,
	184, 257, 207, 317, 220, 0, 0, 0, 249, 216,
	282, 221, 227, 270, 316, 255, 275, 182, 307, 283,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 225, 0, 266, 204, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 292, 0, 0, 323, 324, 325, 309,
	0, 196, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 624, 0, 224, 0, 0, 0, 0, 0,
	0, 284, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 632, 633, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 289, 305,
	181, 280, 318, 186, 287, 176, 253, 276, 0, 0,
	173, 303, 286, 235, 218, 219, 172, 0, 271, 197,
	210, 193, 251, 0, 302, 330, 192, 321, 610, 313,
	175, 609, 312, 250, 299, 304, 236, 230, 174, 301,
	234, 229, 222, 201, 0, 214, 262, 228, 263, 215,
	240, 239, 241, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 223, 0, 0, 0, 331, 0,
	274, 256, 0, 0, 0, 272, 226, 300, 264, 306,
	290, 314, 622, 265, 166, 291, 195, 237, 177, 179,
	191, 198, 200, 202, 203, 246, 247, 259, 279, 293,
	294, 295, 194, 187, 273, 188, 212, 189, 167, 281,
	190, 169, 260, 298, 0, 208, 269, 233, 170, 232,
	261, 297, 296, 178, 322, 328, 329, 333, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 327, 206, 164, 310, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 326,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	217, 258, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 308, 320, 337,
	340, 0, 0, 0, 168, 339, 0, 0, 0, 0,
	0, 0, 623, 311, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 626, 242, 243, 244, 245, 209, 0,
	185, 338, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	205, 211, 0, 213, 184, 257, 207, 317, 220, 0,
	0, 0, 634, 629, 630, 221, 227, 270, 316, 255,
	275, 182, 307, 283, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 225, 0, 266,
	204, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 117, 292, 0,
	323, 324, 325, 309, 0, 196, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 284, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 1339, 0, 124, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 289, 305, 181, 280, 318, 186, 287,
	176, 253, 276, 0, 0, 173, 303, 286, 235, 218,
	219, 172, 0, 271, 197, 210, 193, 251, 0, 302,
	330, 192, 321, 0, 313, 175, 0, 312, 250, 299,
	304, 236, 230, 174, 301, 234, 229, 222, 201, 0,
	214, 262, 228, 263, 215, 240, 239, 241, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 223,
	0, 0, 0, 331, 0, 274, 256, 0, 0, 0,
	272, 226, 300, 264, 306, 290, 314, 268, 265, 166,
	291, 195, 237, 177, 179, 191, 198, 200, 202, 203,
	246, 247, 259, 279, 293, 294, 295, 194, 187, 273,
	188, 212, 189, 167, 281, 190, 169, 260, 298, 0,
	208, 269, 233, 170, 232, 261, 297, 296, 178, 322,
	328, 329, 333, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 327,
	206, 164, 310, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 326, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 217, 258, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 308, 320, 337, 340, 0, 0, 0, 168,
	339, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 335, 242,
	243, 244, 245, 209, 0, 185, 338, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 205, 211, 0, 213, 184,
	257, 207, 317, 220, 0, 0, 0, 249, 216, 282,
	221, 227, 270, 316, 255, 275, 182, 307, 283, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 225, 90, 266, 204, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 117, 292, 0, 323, 324, 325, 309, 0,
	196, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 284, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	1330, 0, 124, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 289, 305,
	181, 280, 318, 186, 287, 176, 253, 276, 0, 0,
	173, 303, 286, 235, 218, 219, 172, 0, 271, 197,
	210, 193, 251, 0, 302, 330, 192, 321, 0, 313,
	175, 0, 312, 250, 299, 304, 236, 230, 174, 301,
	234, 229, 222, 201, 0, 214, 262, 228, 263, 215,
	240, 239, 241, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 223, 0, 0, 0, 331, 0,
	274, 256, 0, 0, 0, 272, 226, 300, 264, 306,
	290, 314, 268, 265, 166, 291, 195, 237, 177, 179,
	191, 198, 200, 202, 203, 246, 247, 259, 279, 293,
	294, 295, 194, 187, 273, 188, 212, 189, 167, 281,
	190, 169, 260, 298, 0, 208, 269, 233, 170, 232,
	261, 297, 296, 178, 322, 328, 329, 333, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 327, 206, 164, 310, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 326,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	217, 258, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 308, 320, 337,
	340, 0, 0, 0, 168, 339, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 335, 242, 243, 244, 245, 209, 0,
	185, 338, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	205, 211, 0, 213, 184, 257, 207, 317, 220, 0,
	0, 0, 249, 216, 282, 221, 227, 270, 316, 255,
	275, 182, 307, 283, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 225, 90, 266,
	204, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 292, 0, 0,
	323, 324, 325, 309, 0, 196, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 284, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 632, 633, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 289, 305, 181, 280, 318, 186, 287, 176,
	253, 276, 0, 0, 173, 303, 286, 235, 218, 219,
	172, 0, 271, 197, 210, 193, 251, 0, 302, 330,
	192, 321, 610, 313, 175, 609, 312, 250, 299, 304,
	236, 230, 174, 301, 234, 229, 222, 201, 0, 214,
	262, 228, 263, 215, 240, 239, 241, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 223, 0,
	0, 0, 331, 0, 274, 256, 0, 0, 0, 272,
	226, 300, 264, 306, 290, 314, 268, 265, 166, 291,
	195, 237, 177, 179, 191, 198, 200, 202, 203, 246,
	247, 259, 279, 293, 294, 295, 194, 187, 273, 188,
	212, 189, 167, 281, 190, 169, 260, 298, 0, 208,
	269, 233, 170, 232, 261, 297, 296, 178, 322, 328,
	329, 333, 0, 334, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 327, 206,
	164, 310, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 326, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 0, 217, 258, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 308, 320, 337, 340, 0, 0, 0, 168, 339,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 335, 242, 243,
	244, 245, 209, 0, 185, 338, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 205, 211, 0, 213, 184, 257,
	207, 317, 220, 0, 0, 0, 634, 629, 630, 221,
	227, 270, 316, 255, 275, 182, 307, 283, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 225, 0, 266, 204, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 117, 292, 0, 323, 324, 325, 309, 0, 196,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	284, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1272, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 289, 305, 181,
	280, 318, 186, 287, 176, 253, 276, 0, 0, 173,
	303, 286, 235, 218, 219, 172, 0, 271, 197, 210,
	193, 251, 0, 302, 330, 192, 321, 0, 313, 175,
	0, 312, 250, 299, 304, 236, 230, 174, 301, 234,
	229, 222, 201, 0, 214, 262, 228, 263, 215, 240,
	239, 241, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 223, 0, 0, 0, 331, 0, 274,
	256, 0, 0, 0, 272, 226, 300, 264, 306, 290,
	314, 268, 265, 166, 291, 195, 237, 177, 179, 191,
	198, 200, 202, 203, 246, 247, 259, 279, 293, 294,
	295, 194, 187, 273, 188, 212, 189, 167, 281, 190,
	169, 260, 298, 0, 208, 269, 233, 170, 232, 261,
	297, 296, 178, 322, 328, 329, 333, 0, 334, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 327, 206, 164, 310, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 326, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 217,
	258, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 308, 320, 337, 340,
	0, 0, 0, 168, 339, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 335, 242, 243, 244, 245, 209, 0, 185,
	338, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 205,
	211, 0, 213, 184, 257, 207, 317, 220, 0, 0,
	0, 249, 216, 282, 221, 227, 270, 316, 255, 275,
	182, 307, 283, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 225, 90, 266, 204,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 292, 0, 0, 323,
	324, 325, 309, 0, 196, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 974, 0, 224, 0, 0,
	0, 0, 0, 0, 284, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 972, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 970, 0, 0, 0, 0,
	171, 289, 305, 181, 280, 318, 186, 287, 176, 253,
	276, 0, 0, 173, 303, 286, 235, 218, 219, 172,
	0, 271, 197, 210, 193, 251, 0, 302, 330, 192,
	321, 0, 313, 175, 0, 312, 250, 299, 304, 236,
	230, 174, 301, 234, 229, 222, 201, 0, 214, 262,
	228, 263, 215, 240, 239, 241, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 223, 0, 0,
	0, 331, 0, 274, 256, 0, 0, 0, 272, 226,
	300, 264, 306, 290, 314, 268, 265, 166, 291, 195,
	237, 177, 179, 191, 198, 200, 202, 203, 246, 247,
	259, 279, 293, 294, 295, 194, 187, 273, 188, 212,
	189, 167, 281, 190, 169, 260, 298, 0, 208, 269,
	233, 170, 232, 261, 297, 296, 178, 322, 328, 329,
	333, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 327, 206, 164,
	310, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 326, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 217, 258, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	308, 320, 337, 340, 0, 0, 0, 168, 339, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 335, 242, 243, 244,
	245, 209, 0, 185, 338, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 205, 211, 0, 213, 184, 257, 207,
	317, 220, 0, 0, 0, 249, 216, 282, 221, 227,
	270, 316, 255, 275, 182, 307, 283, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	225, 0, 266, 204, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	292, 0, 0, 323, 324, 325, 309, 0, 196, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 968,
	0, 224, 0, 0, 0, 0, 0, 0, 284, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 972, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 970,
	0, 0, 0, 0, 171, 289, 305, 181, 280, 318,
	186, 287, 176, 253, 276, 0, 0, 173, 303, 286,
	235, 218, 219, 172, 0, 271, 197, 210, 193, 251,
	0, 302, 330, 192, 321, 0, 313, 175, 0, 312,
	250, 299, 304, 236, 230, 174, 301, 234, 229, 222,
	201, 0, 214, 262, 228, 263, 215, 240, 239, 241,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 223, 0, 0, 0, 331, 0, 274, 256, 0,
	0, 0, 272, 226, 300, 264, 306, 290, 314, 268,
	265, 166, 291, 195, 237, 177, 179, 191, 198, 200,
	202, 203, 246, 247, 259, 279, 293, 294, 295, 194,
	187, 273, 188, 212, 189, 167, 281, 190, 169, 260,
	298, 0, 208, 269, 233, 170, 232, 261, 297, 296,
	178, 322, 328, 329, 333, 0, 334, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 327, 206, 164, 310, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 326, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 217, 258, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 308, 320, 337, 340, 0, 0,
	0, 168, 339, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	335, 242, 243, 244, 245, 209, 0, 185, 338, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 205, 211, 0,
	213, 184, 257, 207, 317, 220, 0, 0, 0, 249,
	216, 282, 221, 227, 270, 316, 255, 275, 182, 307,
	283, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 225, 0, 266, 204, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 292, 0, 0, 323, 324, 325,
	309, 0, 196, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 284, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2502, 0, 124, 491, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 289,
	305, 181, 280, 318, 186, 287, 176, 253, 276, 0,
	0, 173, 303, 286, 235, 218, 219, 172, 0, 271,
	197, 210, 193, 251, 0, 302, 330, 192, 321, 0,
	313, 175, 0, 312, 250, 299, 304, 236, 230, 174,
	301, 234, 229, 222, 201, 0, 214, 262, 228, 263,
	215, 240, 239, 241, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 223, 0, 0, 0, 331,
	0, 274, 256, 0, 0, 0, 272, 226, 300, 264,
	306, 290, 314, 268, 265, 166, 291, 195, 237, 177,
	179, 191, 198, 200, 202, 203, 246, 247, 259, 279,
	293, 294, 295, 194, 187, 273, 188, 212, 189, 167,
	281, 190, 169, 260, 298, 0, 208, 269, 233, 170,
	232, 261, 297, 296, 178, 322, 328, 329, 333, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 327, 206, 164, 310, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	326, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 217, 258, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 308, 320,
	337, 340, 0, 0, 0, 168, 339, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 335, 242, 243, 244, 245, 209,
	0, 185, 338, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 205, 211, 0, 213, 184, 257, 207, 317, 220,
	0, 0, 0, 249, 216, 282, 221, 227, 270, 316,
	255, 275, 182, 307, 283, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 225, 0,
	266, 204, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 292, 0,
	0, 323, 324, 325, 309, 0, 196, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 284, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	972, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 970, 0, 0,
	0, 0, 171, 289, 305, 181, 280, 318, 186, 287,
	176, 253, 276, 0, 0, 173, 303, 286, 235, 218,
	219, 172, 0, 271, 197, 210, 193, 251, 0, 302,
	330, 192, 321, 0, 313, 175, 0, 312, 250, 299,
	304, 236, 230, 174, 301, 234, 229, 222, 201, 0,
	214, 262, 228, 263, 215, 240, 239, 241, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 223,
	0, 0, 0, 331, 0, 274, 256, 0, 0, 0,
	272, 226, 300, 264, 306, 290, 314, 268, 265, 166,
	291, 195, 237, 177, 179, 191, 198, 200, 202, 203,
	246, 247, 259, 279, 293, 294, 295, 194, 187, 273,
	188, 212, 189, 167, 281, 190, 169, 260, 298, 0,
	208, 269, 233, 170, 232, 261, 297, 296, 178, 322,
	328, 329, 333, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 327,
	206, 164, 310, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 326, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 217, 258, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 308, 320, 337, 340, 0, 0, 0, 168,
	339, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 335, 242,
	243, 244, 245, 209, 0, 185, 338, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 205, 211, 0, 213, 184,
	257, 207, 317, 220, 0, 0, 0, 249, 216, 282,
	221, 227, 270, 316, 255, 275, 182, 307, 283, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 225, 0, 266, 204, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 292, 0, 0, 323, 324, 325, 309, 0,
	196, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	284, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 972, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2146, 0, 0, 0, 0, 171, 289, 305, 181,
	280, 318, 186, 287, 176, 253, 276, 0, 0, 173,
	303, 286, 235, 218, 219, 172, 0, 271, 197, 210,
	193, 251, 0, 302, 330, 192, 321, 0, 313, 175,
	0, 312, 250, 299, 304, 236, 230, 174, 301, 234,
	229, 222, 201, 0, 214, 262, 228, 263, 215, 240,
	239, 241, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 223, 0, 0, 0, 331, 0, 274,
	256, 0, 0, 0, 272, 226, 300, 264, 306, 290,
	314, 268, 265, 166, 291, 195, 237, 177, 179, 191,
	198, 200, 202, 203, 246, 247, 259, 279, 293, 294,
	295, 194, 187, 273, 188, 212, 189, 167, 281, 190,
	169, 260, 298, 0, 208, 269, 233, 170, 232, 261,
	297, 296, 178, 322, 328, 329, 333, 0, 334, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 327, 206, 164, 310, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 326, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 217,
	258, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 308, 320, 337, 340,
	0, 0, 0, 168, 339, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 335, 242, 243, 244, 245, 209, 0, 185,
	338, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 205,
	211, 0, 213, 184, 257, 207, 317, 220, 0, 0,
	0, 249, 216, 282, 221, 227, 270, 316, 255, 275,
	182, 307, 283, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 225, 0, 266, 204,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 292, 0, 0, 323,
	324, 325, 309, 0, 196, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 1711, 0, 224, 0, 0,
	0, 0, 0, 0, 284, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 972, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 289, 305, 181, 280, 318, 186, 287, 176, 253,
	276, 0, 0, 173, 303, 286, 235, 218, 219, 172,
	0, 271, 197, 210, 193, 251, 0, 302, 330, 192,
	321, 0, 313, 175, 0, 312, 250, 299, 304, 236,
	230, 174, 301, 234, 229, 222, 201, 0, 214, 262,
	228, 263, 215, 240, 239, 241, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 223, 0, 0,
	0, 331, 0, 274, 256, 0, 0, 0, 272, 226,
	300, 264, 306, 290, 314, 268, 265, 166, 291, 195,
	237, 177, 179, 191, 198, 200, 202, 203, 246, 247,
	259, 279, 293, 294, 295, 194, 187, 273, 188, 212,
	189, 167, 281, 190, 169, 260, 298, 0, 208, 269,
	233, 170, 232, 261, 297, 296, 178, 322, 328, 329,
	333, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 327, 206, 164,
	310, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 326, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 217, 258, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	308, 320, 337, 340, 0, 0, 0, 168, 339, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 335, 242, 243, 244,
	245, 209, 0, 185, 338, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 205, 211, 0, 213, 184, 257, 207,
	317, 220, 0, 0, 0, 249, 216, 282, 221, 227,
	270, 316, 255, 275, 182, 307, 283, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	225, 0, 266, 204, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	292, 0, 0, 323, 324, 325, 309, 0, 196, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 284, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2607, 0, 124,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 289, 305, 181, 280, 318,
	186, 287, 176, 253, 276, 0, 0, 173, 303, 286,
	235, 218, 219, 172, 0, 271, 197, 210, 193, 251,
	0, 302, 330, 192, 321, 0, 313, 175, 0, 312,
	250, 299, 304, 236, 230, 174, 301, 234, 229, 222,
	201, 0, 214, 262, 228, 263, 215, 240, 239, 241,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 223, 0, 0, 0, 331, 0, 274, 256, 0,
	0, 0, 272, 226, 300, 264, 306, 290, 314, 268,
	265, 166, 291, 195, 237, 177, 179, 191, 198, 200,
	202, 203, 246, 247, 259, 279, 293, 294, 295, 194,
	187, 273, 188, 212, 189, 167, 281, 190, 169, 260,
	298, 0, 208, 269, 233, 170, 232, 261, 297, 296,
	178, 322, 328, 329, 333, 0, 334, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 327, 206, 164, 310, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 326, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 217, 258, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 308, 320, 337, 340, 0, 0,
	0, 168, 339, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	335, 242, 243, 244, 245, 209, 0, 185, 338, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 205, 211, 0,
	213, 184, 257, 207, 317, 220, 0, 0, 0, 249,
	216, 282, 221, 227, 270, 316, 255, 275, 182, 307,
	283, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 225, 0, 266, 204, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 292, 0, 0, 323, 324, 325,
	309, 0, 196, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 284, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 491, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 289,
	305, 181, 280, 318, 186, 287, 176, 253, 276, 0,
	0, 173, 303, 286, 235, 218, 219, 172, 0, 271,
	197, 210, 193, 251, 0, 302, 330, 192, 321, 0,
	313, 175, 0, 312, 250, 299, 304, 236, 230, 174,
	301, 234, 229, 222, 201, 0, 214, 262, 228, 263,
	215, 240, 239, 241, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 223, 0, 0, 0, 331,
	0, 274, 256, 0, 0, 0, 272, 226, 300, 264,
	306, 290, 314, 268, 265, 166, 291, 195, 237, 177,
	179, 191, 198, 200, 202, 203, 246, 247, 259, 279,
	293, 294, 295, 194, 187, 273, 188, 212, 189, 167,
	281, 190, 169, 260, 298, 0, 208, 269, 233, 170,
	232, 261, 297, 296, 178, 322, 328, 329, 333, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 327, 206, 164, 310, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	326, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 217, 258, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 308, 320,
	337, 340, 0, 0, 0, 168, 339, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 335, 242, 243, 244, 245, 209,
	0, 185, 338, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 205, 211, 0, 213, 184, 257, 207, 317, 220,
	0, 0, 0, 249, 216, 282, 221, 227, 270, 316,
	255, 275, 182, 307, 283, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 225, 0,
	266, 204, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 292, 0,
	0, 323, 324, 325, 309, 0, 196, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 284, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2516, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 289, 305, 181, 280, 318, 186, 287,
	176, 253, 276, 0, 0, 173, 303, 286, 235, 218,
	219, 172, 0, 271, 197, 210, 193, 251, 0, 302,
	330, 192, 321, 0, 313, 175, 0, 312, 250, 299,
	304, 236, 230, 174, 301, 234, 229, 222, 201, 0,
	214, 262, 228, 263, 215, 240, 239, 241, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 223,
	0, 0, 0, 331, 0, 274, 256, 0, 0, 0,
	272, 226, 300, 264, 306, 290, 314, 268, 265, 166,
	291, 195, 237, 177, 179, 191, 198, 200, 202, 203,
	246, 247, 259, 279, 293, 294, 295, 194, 187, 273,
	188, 212, 189, 167, 281, 190, 169, 260, 298, 0,
	208, 269, 233, 170, 232, 261, 297, 296, 178, 322,
	328, 329, 333, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 327,
	206, 164, 310, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 326, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 217, 258, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 308, 320, 337, 340, 0, 0, 0, 168,
	339, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 335, 242,
	243, 244, 245, 209, 0, 185, 338, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 205, 211, 0, 213, 184,
	257, 207, 317, 220, 0, 0, 0, 249, 216, 282,
	221, 227, 270, 316, 255, 275, 182, 307, 283, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 225, 0, 266, 204, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 292, 0, 0, 323, 324, 325, 309, 0,
	196, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	284, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2255, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 289, 305, 181,
	280, 318, 186, 287, 176, 253, 276, 0, 0, 173,
	303, 286, 235, 218, 219, 172, 0, 271, 197, 210,
	193, 251, 0, 302, 330, 192, 321, 0, 313, 175,
	0, 312, 250, 299, 304, 236, 230, 174, 301, 234,
	229, 222, 201, 0, 214, 262, 228, 263, 215, 240,
	239, 241, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 223, 0, 0, 0, 331, 0, 274,
	256, 0, 0, 0, 272, 226, 300, 264, 306, 290,
	314, 268, 265, 166, 291, 195, 237, 177, 179, 191,
	198, 200, 202, 203, 246, 247, 259, 279, 293, 294,
	295, 194, 187, 273, 188, 212, 189, 167, 281, 190,
	169, 260, 298, 0, 208, 269, 233, 170, 232, 261,
	297, 296, 178, 322, 328, 329, 333, 0, 334, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 327, 206, 164, 310, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 326, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 217,
	258, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 308, 320, 337, 340,
	0, 0, 0, 168, 339, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 335, 242, 243, 244, 245, 209, 0, 185,
	338, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 205,
	211, 0, 213, 184, 257, 207, 317, 220, 0, 0,
	0, 249, 216, 282, 221, 227, 270, 316, 255, 275,
	182, 307, 283, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 225, 0, 266, 204,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 292, 0, 0, 323,
	324, 325, 309, 0, 196, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 284, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 289, 305, 181, 280, 318, 186, 287, 176, 253,
	276, 0, 0, 173, 303, 286, 235, 218, 219, 172,
	0, 271, 197, 210, 193, 251, 0, 302, 330, 192,
	321, 0, 313, 175, 0, 312, 250, 299, 304, 236,
	230, 174, 301, 234, 229, 222, 201, 0, 214, 262,
	228, 263, 215, 240, 239, 241, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 2444, 0, 0, 288, 0, 0, 223, 0, 0,
	0, 331, 0, 274, 256, 0, 0, 0, 272, 226,
	300, 264, 306, 290, 314, 268, 265, 166, 291, 195,
	237, 177, 179, 191, 198, 200, 202, 203, 246, 247,
	259, 279, 293, 294, 295, 194, 187, 273, 188, 212,
	189, 167, 281, 190, 169, 260, 298, 0, 208, 269,
	233, 170, 232, 261, 297, 296, 178, 322, 328, 329,
	333, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 327, 206, 164,
	310, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 326, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 217, 258, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	308, 320, 337, 340, 0, 0, 0, 168, 339, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 335, 242, 243, 244,
	245, 209, 0, 185, 338, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 205, 211, 0, 213, 184, 257, 207,
	317, 220, 0, 0, 0, 249, 216, 282, 221, 227,
	270, 316, 255, 275, 182, 307, 283, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	225, 0, 266, 204, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	292, 0, 0, 323, 324, 325, 309, 0, 196, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 284, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 289, 305, 181, 280, 318,
	186, 287, 176, 253, 276, 0, 0, 173, 303, 286,
	235, 218, 219, 172, 0, 271, 197, 210, 193, 251,
	0, 302, 330, 192, 321, 0, 313, 175, 0, 312,
	250, 299, 304, 236, 230, 174, 301, 234, 229, 222,
	201, 0, 214, 262, 228, 263, 215, 240, 239, 241,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 2264, 0, 0, 288, 0,
	0, 223, 0, 0, 0, 331, 0, 274, 256, 0,
	0, 0, 272, 226, 300, 264, 306, 290, 314, 268,
	265, 166, 291, 195, 237, 177, 179, 191, 198, 200,
	202, 203, 246, 247, 259, 279, 293, 294, 295, 194,
	187, 273, 188, 212, 189, 167, 281, 190, 169, 260,
	298, 0, 208, 269, 233, 170, 232, 261, 297, 296,
	178, 322, 328, 329, 333, 0, 334, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 327, 206, 164, 310, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 326, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 217, 258, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 308, 320, 337, 340, 0, 0,
	0, 168, 339, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	335, 242, 243, 244, 245, 209, 0, 185, 338, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 205, 211, 0,
	213, 184, 257, 207, 317, 220, 0, 0, 0, 249,
	216, 282, 221, 227, 270, 316, 255, 275, 182, 307,
	283, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 225, 0, 266, 204, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 292, 0, 0, 323, 324, 325,
	309, 0, 196, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 284, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 289,
	305, 181, 280, 318, 186, 287, 176, 253, 276, 0,
	0, 173, 303, 286, 235, 218, 219, 172, 0, 271,
	197, 210, 193, 251, 0, 302, 330, 192, 321, 0,
	313, 175, 0, 312, 250, 299, 304, 236, 230, 174,
	301, 234, 229, 222, 201, 0, 214, 262, 228, 263,
	215, 240, 239, 241, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 223, 0, 0, 0, 331,
	0, 274, 256, 0, 0, 0, 272, 226, 300, 264,
	306, 290, 314, 268, 265, 166, 291, 195, 237, 177,
	179, 191, 198, 200, 202, 203, 246, 247, 259, 279,
	293, 294, 295, 194, 187, 273, 188, 212, 189, 167,
	281, 190, 169, 260, 298, 0, 208, 269, 233, 170,
	232, 261, 297, 296, 178, 322, 328, 329, 333, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 327, 206, 164, 310, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	326, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 217, 258, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 308, 320,
	337, 340, 0, 0, 0, 168, 339, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 335, 242, 243, 244, 245, 209,
	0, 185, 338, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 205, 211, 0, 213, 184, 257, 207, 317, 220,
	0, 0, 0, 249, 216, 282, 221, 227, 270, 316,
	255, 275, 182, 307, 283, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 225, 0,
	266, 204, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 292, 0,
	0, 323, 324, 325, 309, 0, 196, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 284, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 289, 305, 181, 280, 318, 186, 287,
	176, 253, 276, 0, 0, 173, 303, 286, 235, 218,
	219, 172, 0, 271, 197, 210, 193, 251, 0, 302,
	330, 192, 321, 0, 313, 175, 0, 312, 250, 299,
	304, 236, 230, 174, 301, 234, 229, 222, 201, 0,
	214, 262, 228, 263, 215, 240, 239, 241, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 223,
	0, 0, 0, 331, 0, 274, 256, 0, 0, 0,
	272, 226, 300, 264, 306, 290, 314, 268, 265, 166,
	291, 195, 237, 177, 179, 191, 198, 200, 202, 203,
	246, 247, 259, 279, 293, 294, 295, 194, 187, 273,
	188, 212, 189, 167, 281, 190, 169, 260, 298, 0,
	208, 269, 233, 170, 232, 261, 297, 296, 178, 322,
	328, 329, 333, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 327,
	206, 164, 310, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 326, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 217, 258, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 308, 320, 337, 340, 0, 0, 0, 168,
	339, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 335, 242,
	243, 244, 245, 209, 0, 185, 338, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 205, 211, 0, 213, 184,
	257, 207, 317, 220, 0, 0, 0, 249, 216, 282,
	221, 227, 270, 316, 255, 275, 182, 307, 283, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 225, 0, 266, 204, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 292, 0, 0, 323, 324, 325, 309, 0,
	196, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	284, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 289, 305, 181,
	280, 318, 186, 287, 176, 253, 276, 0, 0, 173,
	303, 286, 235, 218, 219, 172, 0, 271, 197, 210,
	193, 251, 0, 302, 330, 192, 321, 0, 313, 175,
	0, 312, 250, 299, 304, 236, 230, 174, 301, 234,
	229, 222, 201, 0, 214, 262, 228, 263, 215, 240,
	239, 241, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 223, 0, 0, 0, 331, 0, 274,
	256, 0, 0, 0, 272, 226, 300, 264, 306, 290,
	314, 268, 265, 166, 291, 195, 237, 177, 179, 191,
	198, 200, 202, 203, 246, 247, 259, 279, 293, 294,
	295, 194, 187, 273, 188, 212, 189, 167, 281, 190,
	169, 260, 298, 0, 208, 269, 233, 170, 232, 261,
	297, 296, 178, 322, 328, 329, 333, 0, 334, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 327, 206, 164, 310, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 326, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 217,
	258, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 308, 320, 337, 340,
	0, 0, 0, 168, 339, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 335, 242, 243, 244, 245, 209, 0, 185,
	338, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 205,
	211, 0, 213, 184, 257, 207, 317, 220, 0, 0,
	0, 249, 216, 282, 221, 227, 270, 316, 255, 275,
	182, 307, 283, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 225, 0, 266, 204,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 292, 0, 0, 323,
	324, 325, 309, 0, 196, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 284, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 2026, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 289, 305, 181, 280, 318, 186, 287, 176, 253,
	276, 0, 0, 173, 303, 286, 235, 218, 219, 172,
	0, 271, 197, 210, 193, 251, 0, 302, 330, 192,
	321, 0, 313, 175, 0, 312, 250, 299, 304, 236,
	230, 174, 301, 234, 229, 222, 201, 0, 214, 262,
	228, 263, 215, 240, 239, 241, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 223, 0, 0,
	0, 331, 0, 274, 256, 0, 0, 0, 272, 226,
	300, 264, 306, 290, 314, 268, 265, 166, 291, 195,
	237, 177, 179, 191, 198, 200, 202, 203, 246, 247,
	259, 279, 293, 294, 295, 194, 187, 273, 188, 212,
	189, 167, 281, 190, 169, 260, 298, 0, 208, 269,
	233, 170, 232, 261, 297, 296, 178, 322, 328, 329,
	333, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 327, 206, 164,
	310, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 326, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 217, 258, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	308, 320, 337, 340, 0, 0, 0, 168, 339, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 335, 242, 243, 244,
	245, 209, 0, 185, 338, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 205, 211, 0, 213, 184, 257, 207,
	317, 220, 0, 0, 0, 249, 216, 282, 221, 227,
	270, 316, 255, 275, 182, 307, 283, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	225, 0, 266, 204, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	292, 0, 0, 323, 324, 325, 309, 0, 196, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 284, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 972, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 289, 305, 181, 280, 318,
	186, 287, 176, 253, 276, 0, 0, 173, 303, 286,
	235, 218, 219, 172, 0, 271, 197, 210, 193, 251,
	0, 302, 330, 192, 321, 0, 313, 175, 0, 312,
	250, 299, 304, 236, 230, 174, 301, 234, 229, 222,
	201, 0, 214, 262, 228, 263, 215, 240, 239, 241,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 223, 0, 0, 0, 331, 0, 274, 256, 0,
	0, 0, 272, 226, 300, 264, 306, 290, 314, 268,
	265, 166, 291, 195, 237, 177, 179, 191, 198, 200,
	202, 203, 246, 247, 259, 279, 293, 294, 295, 194,
	187, 273, 188, 212, 189, 167, 281, 190, 169, 260,
	298, 0, 208, 269, 233, 170, 232, 261, 297, 296,
	178, 322, 328, 329, 333, 0, 334, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 327, 206, 164, 310, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 326, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 217, 258, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 308, 320, 337, 340, 0, 0,
	0, 168, 339, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	335, 242, 243, 244, 245, 209, 0, 185, 338, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 205, 211, 0,
	213, 184, 257, 207, 317, 220, 0, 0, 0, 249,
	216, 282, 221, 227, 270, 316, 255, 275, 182, 307,
	283, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 225, 0, 266, 204, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 292, 0, 0, 323, 324, 325,
	309, 0, 196, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 284, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 289,
	305, 181, 280, 318, 186, 287, 176, 253, 276, 0,
	0, 173, 303, 286, 235, 218, 219, 172, 0, 271,
	197, 210, 193, 251, 0, 302, 330, 192, 321, 0,
	313, 175, 0, 312, 250, 299, 304, 236, 230, 174,
	301, 234, 229, 222, 201, 0, 214, 262, 228, 263,
	215, 240, 239, 241, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 223, 0, 0, 0, 331,
	0, 274, 256, 0, 0, 0, 272, 226, 300, 264,
	306, 290, 314, 268, 265, 166, 291, 195, 237, 177,
	179, 191, 198, 200, 202, 203, 246, 247, 259, 279,
	293, 294, 295, 194, 187, 273, 188, 212, 189, 167,
	281, 190, 169, 260, 298, 0, 208, 269, 233, 170,
	232, 261, 297, 296, 178, 322, 328, 329, 333, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 327, 206, 164, 310, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	326, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 217, 258, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 308, 320,
	337, 340, 0, 0, 0, 168, 339, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 335, 242, 243, 244, 245, 209,
	0, 185, 338, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 205, 211, 0, 213, 184, 257, 207, 317, 220,
	0, 0, 0, 249, 216, 282, 221, 227, 270, 316,
	255, 275, 182, 307, 283, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 225, 0,
	266, 204, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 292, 0,
	0, 323, 324, 325, 309, 0, 196, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 284, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	1719, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 289, 305, 181, 280, 318, 186, 287,
	176, 253, 276, 0, 0, 173, 303, 286, 235, 218,
	219, 172, 0, 271, 197, 210, 193, 251, 0, 302,
	330, 192, 321, 0, 313, 175, 0, 312, 250, 299,
	304, 236, 230, 174, 301, 234, 229, 222, 201, 0,
	214, 262, 228, 263, 215, 240, 239, 241, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 223,
	0, 0, 0, 331, 0, 274, 256, 0, 0, 0,
	272, 226, 300, 264, 306, 290, 314, 268, 265, 166,
	291, 195, 237, 177, 179, 191, 198, 200, 202, 203,
	246, 247, 259, 279, 293, 294, 295, 194, 187, 273,
	188, 212, 189, 167, 281, 190, 169, 260, 298, 0,
	208, 269, 233, 170, 232, 261, 297, 296, 178, 322,
	328, 329, 333, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 327,
	206, 164, 310, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 326, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 217, 258, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 308, 320, 337, 340, 0, 0, 0, 168,
	339, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 335, 242,
	243, 244, 245, 209, 0, 185, 338, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 205, 211, 0, 213, 184,
	257, 207, 317, 220, 0, 0, 0, 249, 216, 282,
	221, 227, 270, 316, 255, 275, 182, 307, 283, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 225, 0, 266, 204, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 0, 0, 323, 324, 325, 309, 292,
	196, 0, 0, 1647, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 284, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 289, 305, 181, 280, 318, 186,
	287, 176, 253, 276, 0, 0, 173, 303, 286, 235,
	218, 219, 172, 0, 271, 197, 210, 193, 251, 0,
	302, 330, 192, 321, 0, 313, 175, 0, 312, 250,
	299, 304, 236, 230, 174, 301, 234, 229, 222, 201,
	0, 214, 262, 228, 263, 215, 240, 239, 241, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	223, 0, 0, 0, 331, 0, 274, 256, 0, 0,
	0, 272, 226, 300, 264, 306, 290, 314, 268, 265,
	166, 291, 195, 237, 177, 179, 191, 198, 200, 202,
	203, 246, 247, 259, 279, 293, 294, 295, 194, 187,
	273, 188, 212, 189, 167, 281, 190, 169, 260, 298,
	0, 208, 269, 233, 170, 232, 261, 297, 296, 178,
	322, 328, 329, 333, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	327, 206, 164, 310, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 326, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 0, 217, 258, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 308, 320, 337, 340, 0, 0, 0,
	168, 339, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 335,
	242, 243, 244, 245, 209, 0, 185, 338, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 205, 211, 0, 213,
	184, 257, 207, 317, 220, 0, 0, 0, 249, 216,
	282, 221, 227, 270, 316, 255, 275, 182, 307, 283,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 225, 0, 266, 204, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 292, 0, 0, 323, 324, 325, 309,
	0, 196, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 284, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 289, 305,
	181, 280, 318, 186, 287, 176, 253, 276, 0, 0,
	173, 303, 286, 235, 218, 219, 172, 0, 271, 197,
	210, 193, 251, 0, 302, 330, 192, 321, 0, 313,
	175, 0, 312, 250, 299, 304, 236, 230, 174, 301,
	234, 229, 222, 201, 0, 214, 262, 228, 263, 215,
	240, 239, 241, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 1630, 0, 0,
	0, 288, 0, 0, 223, 0, 0, 0, 331, 0,
	274, 256, 0, 0, 0, 272, 226, 300, 264, 306,
	290, 314, 268, 265, 166, 291, 195, 237, 177, 179,
	191, 198, 200, 202, 203, 246, 247, 259, 279, 293,
	294, 295, 194, 187, 273, 188, 212, 189, 167, 281,
	190, 169, 260, 298, 0, 208, 269, 233, 170, 232,
	261, 297, 296, 178, 322, 328, 329, 333, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 327, 206, 164, 310, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 326,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	217, 258, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 308, 320, 337,
	340, 0, 0, 0, 168, 339, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 335, 242, 243, 244, 245, 209, 0,
	185, 338, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	205, 211, 0, 213, 184, 257, 207, 317, 220, 0,
	0, 0, 249, 216, 282, 221, 227, 270, 316, 255,
	275, 182, 307, 283, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 225, 0, 266,
	204, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 292, 0, 0,
	323, 324, 325, 309, 0, 196, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 284, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 289, 305, 181, 280, 318, 186, 287, 176,
	253, 276, 0, 0, 173, 303, 286, 235, 218, 219,
	172, 0, 271, 197, 210, 193, 251, 0, 302, 330,
	192, 321, 0, 313, 175, 0, 312, 250, 299, 304,
	236, 230, 174, 301, 234, 229, 222, 201, 0, 214,
	262, 228, 263, 215, 240, 239, 241, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 223, 0,
	0, 0, 331, 0, 274, 256, 0, 0, 0, 272,
	226, 300, 264, 306, 290, 314, 268, 265, 166, 291,
	195, 237, 177, 179, 191, 198, 200, 202, 203, 246,
	247, 259, 279, 293, 294, 295, 194, 187, 273, 188,
	212, 189, 167, 281, 190, 169, 260, 298, 0, 208,
	269, 233, 170, 232, 261, 297, 296, 178, 322, 328,
	329, 333, 0, 334, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 327, 206,
	164, 310, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 326, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 0, 217, 258, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 308, 320, 337, 340, 0, 0, 0, 168, 339,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 335, 242, 243,
	244, 245, 209, 0, 185, 338, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 205, 211, 0, 213, 184, 257,
	207, 317, 220, 0, 0, 0, 249, 216, 282, 221,
	227, 270, 316, 255, 275, 182, 307, 283, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 165,
	0, 225, 0, 266, 204, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 292, 0, 0, 323, 324, 325, 309, 0, 196,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 284,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 289, 305, 181, 280,
	318, 186, 287, 176, 253, 276, 0, 0, 173, 303,
	286, 235, 218, 219, 172, 0, 271, 197, 210, 193,
	251, 0, 302, 330, 192, 321, 0, 313, 175, 0,
	312, 250, 299, 304, 236, 230, 174, 301, 234, 229,
	222, 201, 0, 214, 262, 228, 263, 215, 240, 239,
	241, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 223, 0, 0, 0, 331, 0, 274, 256,
	0, 0, 0, 272, 226, 300, 264, 306, 290, 314,
	369, 265, 166, 291, 195, 237, 177, 179, 191, 198,
	200, 202, 203, 246, 247, 259, 279, 293, 294, 295,
	194, 187, 273, 188, 212, 189, 167, 281, 190, 169,
	260, 298, 0, 208, 269, 233, 170, 232, 261, 297,
	296, 178, 322, 328, 329, 333, 0, 334, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 327, 206, 164, 310, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 326, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 0, 217, 258,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 308, 320, 337, 340, 0,
	0, 0, 168, 339, 0, 0, 0, 0, 0, 0,
	370, 311, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 335, 242, 243, 244, 245, 209, 0, 185, 338,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 205, 211,
	0, 213, 184, 257, 207, 317, 220, 0, 0, 0,
	249, 216, 282, 221, 227, 270, 316, 255, 275, 182,
	307, 283, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 225, 0, 266, 204, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 292, 0, 0, 323, 324,
	325, 309, 0, 196, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 284, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	289, 305, 181, 280, 318, 186, 287, 176, 253, 276,
	0, 0, 173, 303, 286, 235, 218, 219, 172, 0,
	271, 197, 210, 193, 251, 0, 302, 330, 192, 321,
	0, 313, 175, 0, 312, 250, 299, 304, 236, 230,
	174, 301, 234, 229, 222, 201, 0, 214, 262, 228,
	263, 215, 240, 239, 241, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 315, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 223, 0, 0, 0,
	331, 0, 274, 256, 0, 0, 0, 272, 226, 300,
	264, 306, 290, 314, 268, 265, 166, 291, 195, 237,
	177, 179, 191, 198, 200, 202, 203, 246, 247, 259,
	279, 293, 294, 295, 194, 187, 273, 188, 212, 189,
	167, 281, 190, 169, 260, 298, 0, 208, 269, 233,
	170, 232, 261, 297, 296, 178, 322, 328, 329, 333,
	0, 334, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 0, 327, 206, 164, 310,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 326, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 0, 217, 258, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 308,
	320, 337, 340, 0, 0, 0, 168, 339, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 335, 242, 243, 244, 245,
	209, 0, 185, 338, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 205, 211, 0, 213, 184, 257, 207, 317,
	220, 0, 0, 0, 249, 216, 282, 221, 227, 270,
	316, 255, 275, 182, 307, 283, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 225,
	0, 266, 204, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 292,
	0, 0, 323, 324, 325, 309, 0, 196, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 199, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 284, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 289, 305, 181, 280, 318, 186,
	287, 176, 253, 276, 0, 0, 173, 303, 286, 235,
	218, 219, 172, 0, 271, 197, 210, 193, 251, 0,
	302, 330, 192, 321, 0, 313, 175, 0, 312, 250,
	299, 304, 236, 230, 174, 301, 234, 229, 222, 201,
	0, 214, 262, 228, 263, 215, 240, 239, 241, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	223, 0, 0, 0, 331, 0, 274, 256, 0, 0,
	0, 272, 226, 300, 264, 306, 290, 314, 268, 265,
	166, 291, 195, 237, 177, 179, 191, 198, 200, 202,
	203, 246, 247, 259, 279, 293, 294, 295, 194, 187,
	273, 188, 212, 189, 167, 281, 190, 169, 260, 298,
	0, 208, 269, 233, 170, 232, 261, 297, 296, 178,
	322, 328, 329, 333, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	327, 206, 164, 310, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 326, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 0, 217, 258, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 308, 320, 337, 340, 0, 0, 0,
	168, 339, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 335,
	242, 243, 244, 245, 209, 0, 185, 338, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 205, 211, 0, 213,
	184, 257, 207, 317, 220, 0, 0, 0, 249, 216,
	282, 221, 227, 270, 316, 255, 275, 182, 307, 283,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 225, 0, 266, 204, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 292, 0, 0, 323, 324, 325, 309,
	0, 196, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 284, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 289, 305,
	181, 280, 318, 186, 287, 176, 253, 276, 0, 0,
	173, 303, 286, 235, 218, 219, 172, 0, 271, 197,
	210, 193, 251, 0, 302, 330, 192, 321, 0, 313,
	175, 0, 312, 250, 299, 304, 236, 230, 174, 301,
	234, 229, 222, 201, 0, 214, 262, 228, 263, 215,
	240, 239, 241, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 223, 0, 0, 0, 331, 0,
	274, 256, 0, 0, 0, 272, 226, 300, 264, 306,
	290, 314, 268, 265, 166, 291, 195, 237, 177, 179,
	191, 198, 200, 202, 203, 246, 247, 259, 279, 293,
	294, 295, 194, 187, 273, 188, 212, 189, 167, 281,
	190, 169, 260, 298, 0, 208, 269, 233, 170, 232,
	261, 297, 296, 178, 322, 328, 329, 333, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 327, 206, 164, 310, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 326,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	217, 258, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 308, 320, 337,
	340, 0, 0, 0, 168, 339, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 335, 242, 243, 244, 245, 209, 0,
	185, 338, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	205, 211, 0, 213, 184, 257, 207, 317, 220, 0,
	0, 0, 249, 216, 282, 221, 227, 270, 316, 255,
	275, 182, 307, 283, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 225, 0, 266,
	204, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 292, 0, 0,
	323, 324, 325, 309, 0, 196, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1690, 0, 0, 0, 0, 199, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 284, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 1692,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 289, 305, 181, 280, 318, 186, 287, 176,
	253, 276, 0, 0, 173, 303, 286, 235, 218, 219,
	172, 0, 271, 197, 210, 193, 251, 0, 302, 330,
	192, 321, 0, 313, 175, 0, 312, 250, 299, 304,
	236, 230, 174, 301, 234, 229, 222, 201, 0, 214,
	262, 228, 263, 215, 240, 239, 241, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 223, 0,
	0, 0, 331, 0, 274, 256, 0, 0, 0, 272,
	226, 300, 264, 306, 290, 314, 268, 265, 166, 291,
	195, 237, 177, 179, 191, 198, 200, 202, 203, 246,
	247, 259, 279, 293, 294, 295, 194, 187, 273, 188,
	212, 189, 167, 281, 190, 169, 260, 298, 0, 208,
	269, 233, 170, 232, 261, 297, 296, 178, 322, 328,
	329, 333, 0, 334, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 327, 206,
	164, 310, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 326, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 0, 217, 258, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 308, 320, 337, 340, 0, 0, 0, 168, 339,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 335, 242, 243,
	244, 245, 209, 0, 185, 338, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 332, 205, 211, 0, 213, 184, 257,
	207, 317, 220, 254, 0, 0, 249, 216, 282, 221,
	227, 270, 316, 255, 275, 182, 307, 283, 231, 0,
	199, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	284, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 665, 666, 1692, 0, 0, 0, 180, 165,
	0, 225, 0, 266, 204, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 309, 0, 196,
	0, 0, 0, 0, 0, 0, 171, 289, 305, 181,
	280, 318, 186, 287, 176, 253, 276, 0, 0, 173,
	303, 286, 235, 218, 219, 172, 0, 271, 197, 210,
	193, 251, 0, 302, 330, 192, 321, 0, 313, 175,
	0, 312, 250, 299, 304, 236, 230, 174, 301, 234,
	229, 222, 201, 0, 214, 262, 228, 263, 215, 240,
	239, 241, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 223, 0, 0, 0, 331, 0, 274,
	256, 0, 0, 0, 272, 226, 300, 264, 306, 290,
	314, 268, 265, 166, 291, 195, 237, 177, 179, 191,
	198, 200, 202, 203, 246, 247, 259, 279, 293, 294,
	295, 194, 187, 273, 188, 212, 189, 167, 281, 190,
	169, 260, 298, 0, 208, 269, 233, 170, 232, 261,
	297, 296, 178, 322, 328, 329, 333, 0, 334, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 327, 206, 164, 310, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 326, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 217,
	258, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 308, 320, 337, 340,
	0, 0, 0, 168, 339, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 335, 242, 243, 244, 245, 209, 0, 185,
	338, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 332, 205,
	211, 0, 213, 184, 257, 207, 317, 220, 254, 0,
	0, 249, 216, 282, 221, 227, 270, 316, 255, 275,
	182, 307, 283, 231, 0, 199, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 284, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 665, 666, 0,
	0, 0, 0, 180, 165, 0, 225, 0, 266, 204,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 309, 0, 196, 0, 0, 0, 0, 0,
	0, 171, 289, 305, 181, 280, 318, 186, 287, 176,
	253, 276, 0, 0, 173, 303, 286, 235, 218, 219,
	172, 0, 271, 197, 210, 193, 251, 0, 302, 330,
	192, 321, 0, 313, 175, 0, 312, 250, 299, 304,
	236, 230, 174, 301, 234, 229, 222, 201, 0, 214,
	262, 228, 263, 215, 240, 239, 241, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 223, 0,
	0, 0, 331, 0, 274, 256, 0, 0, 0, 272,
	226, 300, 264, 306, 290, 314, 268, 265, 166, 291,
	195, 237, 177, 179, 191, 198, 200, 202, 203, 246,
	247, 259, 279, 293, 294, 295, 194, 187, 273, 188,
	212, 189, 167, 281, 190, 169, 260, 298, 0, 208,
	269, 233, 170, 232, 261, 297, 296, 178, 322, 328,
	329, 333, 0, 334, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 327, 206,
	164, 310, 0, 252, 848, 0, 0, 0, 0, 0,
	0, 0, 248, 326, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 0, 217, 258, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 308, 320, 337, 340, 0, 0, 0, 168, 339,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 335, 242, 243,
	244, 245, 209, 0, 185, 338, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 848, 332, 205, 211, 0, 213, 184, 257,
	207, 317, 220, 0, 836, 0, 249, 216, 282, 221,
	227, 270, 316, 255, 275, 182, 307, 283, 231, 0,
	0, 0, 856, 860, 862, 864, 866, 867, 869, 0,
	873, 870, 871, 872, 0, 0, 851, 852, 853, 854,
	834, 835, 857, 0, 837, 0, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 849, 855, 0, 165,
	0, 225, 0, 266, 204, 859, 861, 863, 865, 868,
	0, 0, 0, 0, 0, 0, 0, 741, 742, 743,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 836, 0, 0, 0, 826, 0, 0, 0,
	850, 0, 848, 0, 323, 324, 325, 309, 0, 196,
	856, 860, 862, 864, 866, 867, 869, 0, 873, 870,
	871, 872, 0, 0, 851, 852, 853, 854, 834, 835,
	857, 0, 837, 0, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 849, 855, 0, 0, 0, 0,
	0, 0, 1129, 859, 861, 863, 865, 868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 1773,
	856, 860, 862, 864, 866, 867, 869, 0, 873, 870,
	871, 872, 608, 0, 851, 852, 853, 854, 834, 835,
	857, 0, 837, 0, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 849, 855, 0, 0, 2211, 0,
	0, 0, 0, 859, 861, 863, 865, 868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 1125, 0, 0, 1122, 0, 850, 0,
	1124, 1121, 1123, 1127, 1128, 0, 0, 0, 1126, 0,
	0, 610, 0, 0, 609, 0, 0, 0, 0, 2627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2193,
	0, 0, 0, 0, 0, 0, 0, 0, 858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 595, 0,
	0, 0, 0, 0, 0, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 858, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1132, 1133,
	1134, 1135, 1136, 1137, 1130, 1131, 1645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 2193, 2197, 0, 0, 0, 0, 582, 603,
	0, 0, 0, 0, 2201, 0, 0, 0, 0, 0,
	0, 0, 0, 2193, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 0, 2190, 0, 0, 0, 2192, 2194,
	2196, 0, 2198, 2199, 2200, 2202, 2203, 2204, 2206, 2207,
	2208, 2209, 0, 0, 0, 0, 0, 0, 0, 2289,
	0, 0, 0, 0, 599, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 858, 0, 0, 0,
	0, 592, 2212, 594, 607, 0, 0, 0, 591, 589,
	588, 0, 593, 583, 584, 0, 605, 606, 389, 0,
	388, 395, 385, 0, 0, 0, 0, 0, 601, 602,
	0, 0, 392, 393, 0, 394, 398, 2210, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 2189, 0, 2197, 0, 389, 0,
	388, 395, 385, 0, 0, 596, 0, 2201, 0, 0,
	0, 0, 392, 393, 0, 394, 398, 2197, 407, 380,
	0, 408, 0, 2205, 0, 0, 0, 2190, 2201, 403,
	2195, 2192, 2194, 2196, 0, 2198, 2199, 2200, 2202, 2203,
	2204, 2206, 2207, 2208, 2209, 0, 0, 0, 2190, 0,
	0, 0, 2192, 2194, 2196, 0, 2198, 2199, 2200, 2202,
	2203, 2204, 2206, 2207, 2208, 2209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2212, 389, 0, 388, 395,
	385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 0, 394, 398, 0, 2212, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 403, 0, 0,
	2210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2189, 0, 0,
	0, 2210, 0, 0, 0, 0, 407, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 2189, 0,
	0, 381, 383, 382, 0, 0, 2205, 0, 0, 387,
	0, 0, 0, 2195, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 0, 0, 2205, 406, 0,
	0, 0, 0, 0, 2195, 384, 0, 0, 0, 375,
	0, 381, 383, 382, 0, 0, 0, 0, 0, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	383, 382, 0, 0, 386, 390, 396, 387, 397, 399,
	0, 0, 400, 401, 402, 0, 0, 404, 405, 391,
	0, 0, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 390, 396, 0, 397, 399,
	0, 0, 400, 401, 402, 0, 0, 404, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 390, 396, 0, 397, 399, 0, 0,
	400, 401, 402, 0, 0, 404, 405,
}

var yyPact = [...]int{
	269, -1000, -300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -172, 25398, 25398, -1000, -1000, 1633,
	-1000, 24904, 9580, 25892, 129, 25892, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 394, -1000, 24410, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 341, 28108, 238, 209, 7594,
	25892, -284, -1000, 2169, -1000, -1000, -1000, -1000, 251, 496,
	23916, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 27705, 77, 496, 532, 541,
	740, 740, 11062, 2169, 245, 122, -1000, 856, 269, 27156,
	322, 25892, -1000, 884, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 322, -1000, -1000, -1000, 2169, 2169, -1000, 25892,
	25892, -13, 1038, -1000, 229, 224, 243, 881, -1000, -1000,
	-1000, -1000, -1000, 2211, -1000, 25892, 1943, 25892, -1000, 1327,
	298, 28226, 2082, 869, 441, 1962, -1000, -1000, 1910, -1000,
	85, 176, 117, 305, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 88, -1000, 2125, -1000, -1000, 73, -1000, -1000, 67,
	-1000, -1000, -1000, -99, -1000, -1000, -1000, -1000, -1000, -164,
	-164, 595, 1235, 7594, -1000, 1442, -1000, 1444, -1000, -1000,
	-1000, -1000, 5115, 9076, 9076, 9076, 9076, -1000, -1000, 1794,
	7594, 1897, 1896, -1000, -1000, -1000, -1000, 879, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1551, 8582, -1000, 1895, 1894, 1893, 1892, 1891, 1881, 1868,
	1867, 1865, 1864, 1862, 1670, 1861, 1550, 1537, 1860, 1859,
	1858, 9076, 1536, 1670, 1670, 1856, 1855, 1854, 1849, 1839,
	1834, 1833, 1832, 1830, 1829, 1828, 1827, 1821, 1820, 1819,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 27522, -1000, 876, 732, -1000, 1815, 2072,
	2143, 1691, 2186, 2130, 2117, 2113, 2107, 38, 332, 332,
	332, 376, 332, 390, -1000, -1000, -1000, -1000, -1000, -1000,
	459, -1000, -1000, -1000, -1000, 702, 25892, -1000, 1704, 923,
	2136, 303, 302, -1000, -1000, 923, 221, 282, 2143, 2143,
	-93, -119, 923, 923, -119, 49, -1000, -1000, -1000, 1115,
	301, 1115, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2116,
	2112, 341, 341, 347, -1000, -190, -1000, -1000, 550, -1000,
	497, -1000, 1327, 279, 260, 756, 1079, -1000, 1017, 25892,
	25892, 25892, 1017, 1017, 14029, 13535, -1000, 2143, 1691, -1000,
	1644, 1937, 1691, 341, 341, 341, 341, 341, 341, 341,
	25892, 6597, 6597, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 237, -1000, -1000, -1000, -1000, -1000, 257, 1811, -1000,
	25892, 255, 2143, 2072, 2143, -1000, -1000, 847, 1313, 1525,
	-1000, -1000, 229, 1104, -1000, 652, -1000, -1000, -1000, -1000,
	25892, 217, -1000, 1513, 1809, -1000, 349, 764, 861, -1000,
	125, 28148, 21439, 1327, 21439, 25892, -1000, -1000, -1000, -1000,
	-1000, -1000, -105, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 76, -1000, 76, 7594,
	7594, 7594, 7594, 7594, -1000, 424, 8088, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 9076, 9076, 9076, 9076, 9076, 9076,
	9076, 9076, 9076, 9076, 9076, 9076, 1793, 1122, 9076, 9076,
	9076, 1937, 2014, 709, -1000, -1000, -1000, -1000, -1000, 1045,
	1235, 7594, 7594, 25892, -1000, 27547, 7594, 7594, 1060, 7594,
	2105, 2105, 3632, 25892, 7594, -1000, 1642, 1641, -1000, -1000,
	1196, 7594, -1000, -1000, 7594, 9076, 7594, -1000, -1000, -1000,
	-1000, 128, 2105, 7594, 7594, 2105, 2105, 2105, 1101, 2105,
	2105, 2105, 2105, 2105, 2105, 2105, 25892, 2034, 45, -1000,
	-1000, -1000, 1681, -1000, 1764, 1764, 1681, 1681, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1808, 1806, -1000,
	-1000, 1755, 1755, 1755, 1681, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1795, 1795, 1803, 1795, 25892, 2143, -284, 6103, -1000, -288,
	2072, 7594, -1000, -1000, 7594, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 357, 332, -1000, 25892, 1056, 21439, 1327,
	1347, 25892, 332, 347, -1000, 25892, 702, 2099, 25892, 2194,
	9076, 21439, 1115, 923, 2194, 1115, -1000, -1000, -1000, 923,
	923, -1000, -1000, -1000, -1000, 1115, 1115, -1000, -1000, -109,
	2194, 2194, -124, 25892, 25892, 332, 25892, -1000, -1000, -1000,
	-1000, 25892, -1000, -1000, 25892, 21439, 19957, -1000, -144, 503,
	467, 479, -1000, -1000, 342, 425, 12546, 294, 21439, 4620,
	-1000, -1000, 1017, 1017, 1017, 4620, 4620, 893, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2072, -1000, -1000, -1000, -1000,
	25892, 21439, 1327, 25892, 25892, 25892, 27156, -1000, 837, -1000,
	-1000, 10568, 844, 837, 1519, 25892, 1961, -285, -1000, 12052,
	25892, 25892, -1000, -1000, -285, -1000, 11557, 25892, 2072, -1000,
	2072, 2689, -1000, 2134, -1000, 229, 152, -1000, -1000, -1000,
	-1000, -1000, -1000, 841, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 659, -1000, 25892, -1000, -1000, 125, 21439,
	1054, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 137, -1000,
	-1000, 142, -1000, 361, 12, 1080, -1000, -1000, 35, 138,
	409, 35, 1235, -1000, 1087, 1087, 1083, -1000, 405, -1000,
	-1000, -1000, -1000, 1794, -1000, -1000, -1000, 1186, 1328, -1000,
	1146, 1146, 812, 812, 812, 812, 812, 1407, 1407, -1000,
	-1000, -1000, 5115, 1793, 9076, 9076, 9076, 323, 961, 2208,
	-1000, 7594, 1129, -1000, 7594, 1297, 715, 839, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1637, 595,
	1635, 1727, 2210, 1631, 7594, -1000, -1000, 7594, 1543, 7100,
	-1000, -1000, -1000, 1618, 821, 1617, -1000, -1000, -1000, 1614,
	731, 1613, 1351, 1606, 658, 7594, 1078, 1072, 7594, 7594,
	7594, 7594, 1605, 7594, 7594, 7594, 7594, 7594, 7594, 7594,
	-1000, 7594, 37, -1000, -1000, -1000, -1000, 1305, -1000, 1304,
	-1000, -1000, -1000, 1516, 1516, -1000, 1302, -1000, -1000, -1000,
	-1000, 1301, -1000, -1000, 1300, -1000, -1000, -1000, -1000, 1058,
	-1000, 1235, -1000, 1514, -1000, 898, 653, -1000, 1367, 23422,
	25892, 33, -1000, 2080, 680, -1000, 12, 604, 1928, 2032,
	25892, 22928, -1000, 1790, 1057, -1000, -1000, 7594, -1000, 1925,
	25892, 2194, -1000, 25892, 2194, 2194, 923, 27156, 1115, 25892,
	1115, -1000, -1000, 1115, -1000, 819, -1000, 25892, -1000, -1000,
	-1000, -1000, 29, 680, 2159, 730, -1000, -1000, -1000, -1000,
	26386, 26386, 13041, 26386, -1000, 1110, -1000, -1000, 521, 488,
	494, -1000, -1000, 360, -1000, -1000, 604, -1000, -1000, -1000,
	1789, 1032, -1000, -1000, 9076, -1000, 4620, 4620, 4620, -1000,
	-1000, 16005, -1000, -1000, 641, 604, 1958, 640, -1000, 640,
	-1000, 2194, 6597, -1000, 19957, -1000, -1000, 22427, -1000, 21933,
	2194, -292, 747, -1000, 2049, 608, -1000, 1781, -1000, 1053,
	2010, -1000, 597, -1000, 1024, 1039, -1000, 608, 1037, 2002,
	597, -1000, -1000, -1000, 811, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -14, -1000, -1000, 25892, 1513, 1033, 1054, 618, -1000,
	358, 808, 791, -1000, 21439, 78, 21439, -1000, 21439, -1000,
	-1000, 213, -1000, 25892, 2070, -1000, -1000, -1000, 1502, -305,
	2056, -1000, -1000, -1000, -1000, -1000, 1028, -1000, 323, 961,
	1309, -1000, 9076, 9076, 1987, 1035, -1000, 7594, 1161, 27434,
	1051, 15017, 25892, -1000, -1000, 7594, 7594, -1000, 1972, 1967,
	-1000, 7594, 7594, 1204, -1000, 25892, -1000, -1000, -1000, 15017,
	-1000, 9076, -1000, 7594, 1939, -90, -90, 1926, 1921, 1882,
	1023, -90, 1847, 1799, 1762, 1684, 1599, 1570, 1560, 1235,
	-1000, -1000, 1603, 1598, 1004, -1000, 1000, 1597, 981, 980,
	6103, -1000, -141, 7594, 7594, 7594, 2027, -1000, -1000, 1704,
	1050, 1779, -65, 953, -1000, 356, 21439, 247, -1000, 1957,
	157, -1000, 2032, -1000, 660, -1000, 1769, 25892, 766, -1000,
	788, 269, -1000, 25892, 1235, -1000, 1327, 923, -1000, 2194,
	960, -1000, -1000, 2194, -1000, 923, -1000, 923, 1115, 25892,
	-1000, -65, 953, 356, 25892, 19957, 19957, 19957, 19957, -1000,
	1991, 1986, -1000, 1985, 1984, 2045, 25892, 19957, 1704, -1000,
	26771, -1000, -1000, -1000, -1000, -1000, 1937, 979, 1942, 502,
	7594, -1000, -1000, -1000, 472, 21439, 1509, 294, -1000, -1000,
	-1000, -1000, -1000, 25892, 25892, 2162, -1000, 627, -1000, -1000,
	784, -1000, 2162, -1000, 1294, 1508, 1156, -285, 6103, 259,
	25892, -285, 25892, 6103, -1000, 25892, 222, -285, 2689, 1292,
	-1000, -1000, -1000, 2196, 21439, 1327, 912, 1049, -1000, 58,
	-1000, 123, 320, 1507, -1000, 388, 74, -1000, 1015, 1502,
	386, -1000, -1000, 9076, -1000, -1000, -1000, -1000, 1235, 7594,
	1596, -1000, 462, 462, 1591, -1000, 1681, 1764, -1000, 1681,
	1755, 1681, 462, 462, 1589, -1000, 1255, 1549, -1000, -1000,
	1529, 1523, 7594, -1000, 1588, 2359, 872, -90, -1000, 1754,
	-1000, -90, -90, -90, -90, -1000, -90, -90, -90, -90,
	-90, -90, -90, -1000, -1000, -1000, 1505, -1000, -1000, -1000,
	1290, -1000, 1280, -1000, -69, -27, 1235, 1235, -1000, -1000,
	2023, 2098, 2079, 10074, 1205, -1000, -1000, 20945, -1000, 315,
	-1000, -1000, -1000, 373, 111, 1274, 297, -1000, 1506, 25892,
	-1000, -1000, -1000, -1000, -1000, 953, 953, 953, 10074, 322,
	657, 783, 19957, 25892, -1000, 19463, 1587, -1000, 604, 2194,
	-1000, 25892, -1000, 2194, 2194, 923, -1000, 1205, 20945, 315,
	815, -1000, 1005, 1915, 1956, 1915, -1000, -1000, -1000, -1000,
	1983, -1000, 1975, -1000, -1000, 815, -1000, -1000, -1000, -1000,
	-1000, 502, -1000, 2132, 473, 473, 473, 1576, -1000, 618,
	1564, -1000, -1000, -1000, -1000, 2191, 2185, 20451, 2191, -1000,
	-292, 2218, -1000, 1563, 615, -285, -1000, -1000, 608, -1000,
	-1000, -1000, -285, -1000, 608, -1000, -1000, -1000, -1000, -1000,
	1327, -1000, 112, -1000, -1000, -1000, -1000, -1000, -1000, 0,
	-1000, 25892, -1000, 1502, 1501, 72, 25892, -1000, 1235, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 7594, -1000, -1000, -1000, 1515, -1000,
	-1000, 7594, -1000, 321, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1561, 1559, -290, -52,
	2184, 2183, -1000, -1000, 245, 25892, 1558, 609, -1000, -1000,
	-1000, 27632, 651, -1000, 25892, 1150, 473, 332, 473, 1141,
	1747, -1000, -1000, -1000, 1481, 10, -1000, -1000, -1000, 1470,
	1469, 1272, -1000, -1000, 1261, 838, 24, -1000, -1000, -1000,
	-1000, -1000, -1000, 1738, 15017, 15511, 1468, 1557, 26386, 19957,
	19463, 785, -1000, 782, -1000, -1000, -1000, 2194, -1000, -1000,
	2194, -1000, 10, -1000, 2161, 25892, 6103, -1000, -1000, 7594,
	1721, -1000, 7594, -1000, -1000, -1000, -1000, -1000, 1717, 2030,
	-1000, -1000, -1000, -1000, -1000, -1000, 7594, 7594, -1000, -1000,
	-1000, 25892, -1000, 608, 608, 604, -1000, -1000, -124, -1000,
	-1000, -1000, -124, 1511, -1000, 1503, 2161, -1000, 2182, -1000,
	-1000, -292, 1463, -1000, 2180, 1461, 1335, -1000, 1704, 27966,
	10074, 1853, -1000, -1000, 25892, 25892, -1000, 25892, 25892, 332,
	7594, -1000, -1000, 208, -1000, -1000, 105, -1000, -1000, 1251,
	336, -1000, 17981, -1000, -1000, -1000, -1000, -1000, 76, 2194,
	785, 782, -1000, -1000, 903, -1000, -1000, -1000, 2143, -1000,
	-1000, 1235, 25892, 1235, 18969, -1000, 2179, 2178, 1235, 595,
	597, -1000, -75, -31, -1000, -1000, -1000, 23, 7594, -294,
	-1000, 1447, -57, -1000, -1000, 2088, 317, 27945, -1000, 953,
	953, 520, 953, 953, 953, 953, 214, 212, 953, 953,
	953, 953, 953, 953, 953, 953, 953, 953, 953, 953,
	953, 953, 1703, -1000, -1000, 1853, -1000, -1000, 1121, 9076,
	-1000, -1000, 1446, 15511, 486, 437, 1702, -1000, 175, 2217,
	-1000, 1134, 1100, -1000, 25892, -1000, 1698, 1884, 141, 1696,
	-1000, 1693, 1690, 25892, 1431, 318, 1392, -1000, -1000, 95,
	-1000, -1000, 955, -1000, 1681, 7594, -1000, -124, 2161, -1000,
	-1000, 930, 926, -1000, -1000, -1000, -1000, 346, -64, -31,
	-1000, 2176, -60, 2174, 2172, 1520, -1000, 3138, -1000, -1000,
	-1000, 595, -1000, 1680, -1000, 2165, 245, 143, 2153, 27966,
	-1000, 1271, 1266, 953, 953, 1260, 1391, 1390, 1365, 953,
	953, 1254, 1364, 26771, 1239, 1238, 1221, 1241, 1342, 495,
	1236, 1222, 1171, 25892, 1679, 1332, -1000, -1000, 961, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1215, 1677, -111, -1000, -1000, 1676, 17981, 236, 236, 17981,
	17981, 17981, 1672, 368, -1000, -1, -1000, -1000, -1000, 17981,
	2066, 1388, -1000, 2143, -1000, -1000, 18475, 1671, 1214, -52,
	2150, -1000, 1335, 2149, 1335, 1335, -1000, -1000, 4126, -286,
	-51, 254, 25892, 1335, -1000, -1000, 2148, 250, -1000, -1000,
	-1000, 15017, 15017, -1000, -1000, -1000, -1000, 1340, 1339, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 273, 25892, 925, -1000, 995, 1393, 7594, 1670, -227,
	17981, 908, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 901,
	885, 882, 17981, -1000, -1000, -1000, 166, -1000, 174, -1000,
	-1000, 2066, -1000, -1000, -1000, 2104, 14523, -40, -1000, 1337,
	-1000, 1335, -1000, -1000, 1062, -1000, -1000, -1000, -1000, -1000,
	863, -1000, -1000, 17487, 153, 244, 227, -1000, 330, -1000,
	-1000, -1000, -1000, -1000, -1000, 266, 845, -1000, 1332, 1325,
	-1000, 1193, -1000, 1945, -1000, 70, 827, -1000, -1000, -1000,
	-1000, 814, -1000, -1000, 953, 1320, 124, -1000, -1000, -1000,
	-1000, 25892, -1000, 809, -1000, -1000, -1000, 768, -1000, -1000,
	-1000, -1000, 4126, -1000, 25892, -1000, 25892, 151, 1210, 9076,
	1668, 9076, 1667, 159, 1663, -1000, -1000, -1000, -1000, -1000,
	368, -1000, 1940, 1922, 2207, -1000, -1000, -1000, -1000, 174,
	174, 174, 174, 54, 1202, -1000, 1347, 553, -1000, 948,
	-1000, 16993, 25892, -1000, -1000, 806, 1662, 2146, -1000, 2160,
	25892, 1601, 25892, 1661, 947, 9076, -1000, -1000, 2216, -1000,
	2209, 466, 466, -1000, -1000, -1000, 25892, 5609, -1000, 763,
	-1000, -1000, 314, 156, -1000, 805, -1000, 802, 16499, 1197,
	1371, -1000, -1000, -1000, 1206, 177, -1000, -1000, -1000, 1235,
	25892, 780, -1000, 1370, 147, -1000, -1000, -1000, 774, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 314, 1874, -1000, 1170,
	-1000, -1000, 27812, 439, -1000, -1000, 27812, 149, -1000, 307,
	1646, -1000, -1000, 735, -1000, 1331, 477, 7594, -1000, 149,
	27966, -1000, 7594, 734, -1000, 27966, 676, -1000, -1000,
}

var yyPgo = [...]int{
	0, 121, 2621, 200, 133, 131, 199, 2620, 2619, 2091,
	2084, 2618, 2617, 2616, 2615, 2614, 2613, 2612, 2611, 2610,
	2609, 2608, 2607, 2606, 2605, 2604, 2602, 2600, 194, 2599,
	2596, 2595, 2593, 2592, 2591, 2587, 2586, 2584, 2583, 2582,
	2581, 2580, 2579, 2578, 2577, 2576, 2575, 2574, 2568, 128,
	2565, 2076, 2562, 2559, 2558, 2557, 2556, 167, 2549, 2548,
	2547, 2546, 2545, 2544, 2543, 2542, 2541, 2540, 2539, 2538,
	2536, 2535, 151, 2534, 2533, 2532, 2531, 2530, 184, 177,
	59, 2528, 38, 56, 149, 204, 147, 224, 207, 142,
	116, 70, 2524, 2113, 2523, 119, 181, 112, 23, 2522,
	125, 2521, 111, 47, 31, 203, 109, 54, 65, 93,
	2520, 171, 85, 2519, 2518, 92, 2516, 61, 2514, 76,
	35, 90, 29, 2512, 2507, 2506, 75, 2505, 2504, 2502,
	2500, 136, 2499, 97, 53, 2498, 2495, 2492, 2489, 2488,
	28, 2487, 49, 2486, 2472, 2471, 2470, 60, 2469, 2468,
	12, 21, 18, 2467, 16, 3, 2466, 174, 95, 84,
	104, 2462, 398, 2460, 2459, 2457, 118, 2456, 377, 2455,
	2454, 2453, 2452, 9, 2451, 162, 2450, 2449, 79, 105,
	2444, 48, 153, 158, 2443, 2440, 103, 50, 196, 98,
	2439, 2438, 62, 172, 17, 40, 0, 173, 41, 2437,
	2436, 2435, 210, 156, 155, 182, 124, 205, 143, 2432,
	2431, 52, 2430, 120, 2429, 94, 7, 2428, 141, 2426,
	185, 139, 2424, 165, 2420, 223, 2, 117, 2419, 2418,
	26, 226, 2415, 2412, 2409, 138, 2388, 2384, 63, 123,
	2381, 2379, 2378, 25, 2377, 30, 20, 2376, 83, 2375,
	189, 2370, 176, 106, 145, 135, 110, 179, 183, 69,
	114, 1112, 107, 80, 19, 2369, 180, 2368, 214, 201,
	2364, 144, 2363, 192, 369, 166, 2361, 140, 8, 2360,
	2359, 2358, 10, 2356, 100, 2355, 2353, 24, 2352, 27,
	2351, 2349, 2348, 2347, 6, 2346, 2344, 2339, 1, 4,
	2338, 5, 163, 67, 96, 2336, 102, 197, 2335, 2321,
	2320, 2319, 2318, 209, 2317, 2315, 2313, 2312, 2311, 2310,
	2309, 2308, 101, 39, 2307, 2305, 2304, 2302, 73, 99,
	2300, 274, 164, 2299, 33, 2298, 2297, 51, 2295, 34,
	2294, 2292, 2291, 14, 146, 2290, 2288, 15, 2287, 2274,
	11, 13, 2271, 2267, 58, 2266, 45, 32, 74, 78,
	2265, 22, 66, 108, 2263, 2262, 198, 193, 160, 2261,
	126, 191, 202, 2260, 168, 2259, 2257, 2256, 2254, 2253,
	2251, 2250, 1139, 2249, 2248, 188, 55, 178, 89, 2247,
	2243, 2242, 64, 115, 88, 87, 159, 2241, 150, 2239,
	2238, 86, 2237, 2236, 2234, 2233, 2232, 186, 130, 2222,
}

//line mysql_sql.y:8025
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 405, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 76, 76, 66, 65, 353, 353, 352, 352, 351,
	351, 350, 350, 350, 349, 349, 349, 348, 348, 347,
	347, 346, 346, 344, 344, 345, 343, 342, 342, 342,
	340, 340, 338, 338, 339, 339, 333, 333, 336, 336,
	334, 334, 334, 334, 337, 332, 332, 332, 331, 331,
	64, 64, 64, 263, 263, 63, 63, 277, 277, 277,
	277, 277, 275, 275, 275, 275, 275, 275, 274, 274,
	273, 273, 278, 278, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 58, 58, 58, 58, 61, 61,
	61, 62, 272, 272, 272, 59, 60, 60, 262, 262,
	267, 267, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 271, 271, 271, 269, 269, 268,
	268, 270, 270, 52, 52, 52, 55, 54, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 53, 53, 53,
	53, 53, 53, 50, 50, 50, 50, 50, 49, 49,
	51, 51, 260, 260, 259, 69, 69, 69, 69, 69,
	69, 69, 68, 68, 71, 71, 70, 57, 57, 57,
	57, 57, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 377, 377, 377, 379, 379, 200, 201, 406, 199,
	199, 199, 373, 373, 374, 375, 376, 376, 376, 67,
	7, 7, 47, 391, 391, 48, 398, 398, 313, 313,
	213, 213, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 316, 317,
	209, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 35, 34,
	34, 249, 249, 33, 407, 407, 183, 183, 41, 42,
	43, 32, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 46, 46, 327, 327, 409, 409, 409, 44, 45,
	312, 312, 312, 39, 38, 37, 36, 36, 31, 31,
	30, 30, 206, 206, 208, 208, 204, 408, 408, 289,
	289, 207, 207, 29, 29, 29, 205, 205, 182, 203,
	203, 203, 8, 8, 6, 11, 11, 11, 11, 11,
	11, 11, 11, 17, 19, 257, 257, 254, 18, 14,
	13, 16, 12, 15, 5, 5, 5, 5, 9, 9,
	10, 90, 90, 121, 121, 386, 386, 382, 382, 383,
	383, 383, 384, 384, 385, 385, 72, 321, 321, 321,
	321, 321, 321, 4, 320, 320, 320, 320, 320, 320,
	404, 404, 362, 362, 362, 363, 111, 111, 106, 106,
	322, 322, 227, 364, 364, 330, 330, 329, 329, 328,
	328, 109, 109, 110, 110, 93, 93, 79, 79, 335,
	335, 335, 335, 341, 341, 310, 310, 147, 147, 176,
	176, 177, 177, 83, 83, 84, 84, 84, 84, 84,
	84, 370, 370, 372, 372, 371, 108, 108, 104, 104,
	105, 105, 105, 103, 103, 102, 101, 101, 100, 98,
	98, 98, 99, 99, 99, 86, 86, 85, 85, 85,
	85, 85, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 87, 87, 378, 378, 378, 314,
	314, 314, 319, 319, 159, 159, 160, 160, 158, 158,
	88, 88, 89, 89, 89, 89, 157, 157, 156, 91,
	91, 97, 96, 96, 92, 92, 92, 92, 167, 167,
	166, 166, 166, 166, 75, 77, 77, 78, 114, 114,
	165, 164, 164, 164, 113, 113, 112, 112, 107, 107,
	95, 95, 95, 95, 163, 94, 161, 403, 403, 402,
	402, 401, 399, 399, 399, 400, 400, 400, 400, 355,
	355, 355, 355, 355, 192, 192, 192, 198, 198, 191,
	191, 191, 191, 191, 202, 197, 197, 193, 193, 194,
	194, 194, 3, 3, 3, 3, 23, 23, 23, 23,
	27, 27, 380, 380, 20, 387, 390, 388, 388, 392,
	392, 392, 393, 393, 393, 394, 394, 21, 389, 395,
	395, 395, 258, 258, 255, 256, 256, 253, 252, 252,
	252, 397, 397, 396, 396, 396, 195, 195, 22, 248,
	248, 250, 251, 251, 242, 242, 242, 242, 26, 246,
	246, 247, 247, 247, 247, 247, 243, 243, 245, 245,
	241, 241, 241, 241, 241, 25, 240, 240, 238, 238,
	236, 236, 237, 237, 235, 235, 235, 239, 239, 24,
	24, 81, 80, 80, 80, 179, 179, 178, 178, 82,
	315, 315, 279, 279, 280, 280, 280, 283, 283, 295,
	295, 296, 296, 294, 294, 301, 301, 300, 300, 299,
	299, 298, 298, 297, 297, 297, 297, 292, 292, 291,
	291, 281, 281, 281, 281, 281, 282, 282, 282, 290,
	290, 293, 293, 138, 138, 139, 139, 139, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 360, 360, 361,
	141, 141, 141, 145, 145, 145, 145, 145, 145, 140,
	140, 142, 142, 122, 122, 120, 120, 115, 115, 116,
	116, 117, 117, 118, 118, 119, 119, 119, 119, 119,
	119, 265, 265, 358, 358, 359, 359, 354, 354, 354,
	357, 357, 357, 357, 357, 356, 356, 123, 174, 174,
	174, 196, 196, 196, 173, 173, 173, 137, 137, 136,
	136, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 264, 264, 210, 210,
	211, 211, 154, 153, 153, 153, 153, 153, 151, 152,
	150, 150, 150, 150, 150, 149, 149, 148, 148, 148,
	244, 244, 146, 146, 144, 144, 144, 143, 143, 143,
	302, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 219, 219, 224, 224, 369, 369,
	368, 124, 124, 124, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 133, 133, 133, 287, 287, 287, 287,
	287, 288, 288, 288, 285, 285, 286, 286, 228, 229,
	229, 284, 284, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 326, 326,
	326, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 381, 381, 381, 365, 365, 365,
	366, 366, 366, 366, 366, 366, 366, 366, 366, 366,
	366, 366, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 171,
	171, 171, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 230, 230, 231, 231, 323,
	323, 323, 323, 323, 323, 324, 324, 325, 325, 325,
	325, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	217, 168, 168, 168, 232, 225, 225, 226, 226, 220,
	220, 220, 220, 220, 220, 220, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 221, 221, 223, 223,
	234, 234, 234, 233, 233, 233, 233, 233, 233, 233,
	135, 135, 135, 135, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 126, 126, 126, 126, 130,
	130, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 131, 131, 131, 131, 129,
	129, 129, 129, 129, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	73, 74, 74, 128, 175, 175, 303, 303, 306, 306,
	304, 304, 305, 307, 307, 307, 308, 308, 308, 309,
	309, 309, 311, 311, 181, 181, 181, 188, 188, 180,
	180, 189, 189, 190, 190, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 6, 8, 9, 9, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 2, 1, 2,
	3, 4, 3, 3, 1, 0, 1, 1, 0, 1,
	8, 5, 7, 0, 3, 8, 5, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 4, 1, 3, 1, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 2, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	4, 6, 1, 1, 1, 2, 4, 6, 1, 4,
	1, 3, 3, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 2, 4, 3, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 7, 0, 4, 7, 0, 3, 0, 2,
	0, 1, 1, 1, 1, 4, 2, 2, 3, 3,
	4, 5, 3, 4, 4, 2, 2, 2, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 2,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 2,
	2, 4, 1, 1, 1, 3, 2, 3, 1, 1,
	1, 6, 8, 0, 1, 1, 1, 1, 5, 5,
	0, 1, 1, 3, 3, 3, 6, 7, 4, 4,
	7, 8, 0, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 1, 3, 1, 1,
	3, 5, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 3, 1, 4, 6,
	4, 4, 4, 3, 1, 1, 2, 2, 11, 8,
	9, 1, 3, 2, 4, 0, 2, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 4, 2, 1, 5,
	4, 4, 2, 5, 2, 1, 5, 4, 4, 2,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 1, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 7, 7, 1, 1, 1, 0,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 2,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 4, 1, 3, 4, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 3, 2, 3, 1, 4, 3, 0, 1, 1,
	2, 5, 2, 2, 2, 0, 2, 3, 3, 0,
	1, 3, 1, 3, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 11, 0, 1, 7, 1, 4, 1, 1, 3,
	4, 3, 0, 1, 1, 0, 2, 7, 1, 0,
	2, 2, 1, 3, 2, 1, 3, 2, 1, 3,
	2, 0, 1, 3, 4, 3, 1, 1, 4, 1,
	3, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 5, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 11,
	9, 2, 2, 4, 5, 1, 3, 0, 3, 5,
	0, 1, 0, 6, 0, 3, 5, 0, 4, 0,
	3, 1, 3, 4, 5, 0, 3, 1, 3, 2,
	3, 1, 2, 0, 4, 6, 5, 0, 2, 0,
	2, 4, 5, 4, 5, 1, 5, 6, 5, 0,
	3, 0, 1, 0, 1, 1, 3, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 4, 1, 3, 3,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 2, 1, 7, 7, 7, 7, 8,
	5, 0, 1, 0, 1, 1, 1, 1, 3, 3,
	1, 1, 1, 1, 1, 0, 1, 3, 1, 3,
	5, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	2, 1, 2, 2, 1, 1, 2, 2, 2, 2,
	2, 1, 5, 6, 4, 1, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	1, 1, 1, 1, 0, 2, 0, 1, 1, 2,
	4, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	2, 2, 2, 0, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 6, 6, 5, 5, 6, 6, 6, 6,
	5, 6, 6, 6, 6, 6, 6, 6, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 5, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 6, 2, 2,
	4, 6, 4, 2, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 3, 4, 5, 6, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	2, 3, 5, 1, 1, 3, 0, 1, 0, 3,
	0, 3, 3, 0, 3, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -405, -2, -1, -3, -76, -4, -72, -5, -6,
	-8, -56, -68, -70, -71, -28, -7, -67, -49, -50,
	-52, -58, -63, -64, -65, -66, -73, -74, -75, -83,
	-23, -22, -21, -20, 391, 12, 433, -9, -10, -370,
	-11, 230, -199, -200, -201, -406, -29, -30, -31, -36,
	-37, -38, -39, -44, -45, -46, -32, -33, -34, -35,
	-41, -42, -43, -48, -47, 207, -51, 61, -53, -54,
	-55, -59, -60, -61, -62, 322, 328, 381, 390, 513,
	514, 46, -84, -86, -24, -25, -26, -27, 203, 14,
	466, -12, -15, -13, -16, -14, -18, -19, -17, 225,
	224, 37, 288, 289, 326, 223, 204, 13, 135, 136,
	138, 139, 30, -85, 67, 205, -87, 10, 515, 426,
	-93, 38, -120, -196, 70, -184, -187, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 436, 304, 463, 242, 266, 352, 269,
	276, 135, 154, 148, 176, 168, 143, 246, 281, 247,
	77, 138, 419, 87, 402, 378, 141, 261, 263, 265,
	268, 248, 164, 159, 260, 244, 513, 157, 249, 39,
	250, 181, 251, 252, 468, 398, 303, 404, 273, 376,
	158, 399, 264, 401, 183, 187, 411, 328, 152, 153,
	406, 413, 180, 222, 42, 465, 234, 414, 185, 179,
	175, 422, 277, 275, 178, 151, 174, 245, 50, 189,
	188, 190, 372, 373, 374, 375, 253, 254, 316, 410,
	171, 160, 307, 144, 22, 417, 229, 403, 329, 255,
	270, 278, 184, 186, 236, 241, 467, 380, 240, 274,
	415, 156, 233, 262, 228, 418, 145, 322, 331, 256,
	139, 267, 412, 421, 49, 344, 150, 142, 219, 136,
	238, 243, 11, 257, 258, 259, 280, 279, 271, 172,
	235, 177, 162, 149, 173, 137, 237, 420, 345, 511,
	305, 361, 170, 167, 239, 212, 416, 405, 140, 365,
	346, 165, 282, 508, 509, 510, 317, 302, 283, 284,
	163, 226, 397, 285, 287, 371, 295, 347, 379, 353,
	348, 196, -93, -51, -10, -9, -85, -86, -120, 210,
	-203, 23, 376, -57, 377, 207, 67, -196, -5, -4,
	-72, -49, -83, -202, -196, 288, -202, 210, -196, 240,
	360, -313, 215, -274, -248, 241, -273, -250, -276, -251,
	31, 203, 205, 204, 237, 14, 326, 211, 12, 10,
	327, 223, 24, 25, 27, 13, 328, 330, 28, 331,
	334, 335, 336, 41, 339, 340, 230, 70, 73, 248,
	248, -226, -220, 94, 231, -222, -215, -216, -218, -350,
	-344, -214, 67, 119, 120, 127, 95, -217, -302, 35,
	97, 473, 434, -169, -170, -171, -172, -196, -345, -343,
	73, 78, 81, 84, 85, 83, 82, 161, 80, 74,
	131, 132, -86, 70, -365, 481, -185, 501, 482, 500,
	46, -318, -325, 209, -323, 166, 226, 162, 12, 125,
	371, 130, 163, 478, 497, 436, 504, 475, 476, 470,
	471, 472, 474, 483, 485, 496, -326, 492, 502, 503,
	72, 71, 495, 494, 484, 479, 480, 486, 469, 477,
	487, 488, 493, 498, 499, 310, 87, 311, 312, 426,
	306, 313, 215, 376, 55, 314, 315, 316, 317, 318,
	433, 319, 56, 320, 309, 230, 361, 321, 165, 182,
	438, 437, 439, 430, 427, 425, 428, 429, 431, 432,
	489, 490, 491, -270, -268, -196, -77, -78, 506, -102,
	-103, -162, 19, 6, 7, 8, 9, -315, 304, 361,
	240, -242, -240, 285, 337, 220, 219, 88, 426, 209,
	-382, -383, 200, 201, 202, -372, 459, -371, -196, 312,
	26, 210, 323, 408, 409, -40, -327, -312, 405, 404,
	-207, 403, 396, 407, 398, 203, 460, -181, 347, 379,
	236, 423, 424, 324, 380, 411, 412, 399, 87, 169,
	166, 304, 361, -382, 140, 137, -261, 140, 93, 145,
	144, -261, 240, 360, 40, -267, 371, -266, -268, 411,
	412, 422, 71, 72, 410, -181, 87, -103, -162, -102,
	-84, -86, -370, 304, 361, 240, 211, 210, 212, 426,
	288, -314, -378, 31, -319, 197, 198, 199, 32, 33,
	-1, -197, -194, -187, 70, 71, 72, -109, 232, -120,
	133, -109, -103, -102, -103, -120, -173, -196, 378, 103,
	-57, -57, 377, -373, -374, -375, -377, 207, 377, 376,
	133, 15, -202, 65, -120, -250, 240, -274, -248, 35,
	64, 134, 213, 134, 64, 67, 324, 304, 361, 325,
	426, 210, 337, 212, 240, 338, 304, 361, 210, 212,
	426, 240, 304, 210, 212, 361, 240, 338, 396, 397,
	212, 26, 329, 332, 333, 397, -331, 422, -331, 134,
	93, 90, 91, 92, -220, 110, -233, 103, 104, 105,
	106, 107, 108, 109, 116, 115, 126, 119, 120, 121,
	122, 123, 124, 125, 117, 118, 113, 94, 111, 112,
	96, -86, -220, -226, -218, -218, -218, -218, -302, -224,
	-220, 67, 67, 133, 73, -220, 67, 67, 67, 67,
	67, 67, 67, 67, 67, -324, 67, 67, -230, -231,
	67, 67, 73, 73, 67, 67, 67, -218, 73, -231,
	-231, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 134, -126, -130, -127,
	-129, -128, -132, -131, 166, 167, 130, 170, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 30, 182,
	226, 162, 163, 164, 165, 183, 148, 168, 464, 191,
	149, 192, 150, 193, 151, 194, 152, 153, 195, 154,
	157, 158, 159, 156, 133, -103, 134, 67, -79, 38,
	-105, 21, -87, -86, 20, 31, 32, 31, 32, 31,
	32, 31, 32, -380, 210, 459, -238, 215, -238, -238,
	211, -238, 210, -384, 147, 134, -372, -108, 67, -206,
	111, 23, 238, 238, -206, -409, 211, 406, 42, 239,
	238, -104, -105, -104, 400, 397, -289, 401, 402, -207,
	-206, -206, -207, 210, 212, 426, -407, -408, 15, 113,
	238, -407, 30, 30, -313, -313, -385, 214, 415, 466,
	143, 144, 145, -250, 240, 240, 134, 103, 23, -269,
	103, 114, -268, -268, -268, -269, -269, -140, 40, -195,
	130, -196, 73, -140, 40, -104, -87, -86, 68, 68,
	-313, -313, -313, -313, -313, -313, -313, -202, -88, -89,
	121, -220, -196, -88, 38, 397, -320, 46, -83, 67,
	30, 67, -196, -321, 46, -83, 67, 30, -104, -79,
	-105, 133, 78, 73, -57, 68, 134, -376, 84, 85,
	-379, 180, 172, -196, -69, 73, -3, -4, -5, -6,
	-28, -49, -83, -346, -344, 67, 31, 370, 64, 15,
	-275, 210, 426, 323, 236, 212, 304, -273, -257, -254,
	-252, -195, -250, -253, -252, -278, -173, 397, -80, 382,
	287, -80, -220, -220, -220, -220, -220, 83, 94, 302,
	84, 85, -215, -234, 31, 283, 284, -216, -216, -216,
	-216, -216, -216, -216, -216, -216, -216, -216, -216, -223,
	-232, -302, 67, 113, 111, 112, 96, -218, -216, -216,
	68, 134, -369, -368, 98, -220, -220, -196, -366, -367,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 314, 309, 315, 313, 306, 321, 316, 317, 165,
	457, 458, 451, 452, 453, 454, 455, 456, -225, -226,
	-225, -220, -366, -225, -168, 32, 31, -168, -220, -381,
	300, 299, 301, -106, -196, -225, 68, 68, 68, 78,
	-226, -225, -216, -225, -367, -168, -226, -226, -168, -168,
	-168, -168, 121, -168, -168, -168, -168, -168, -168, -168,
	-268, 40, -309, 345, 344, -303, -305, 67, -304, 67,
	-304, -303, -303, 67, 67, -306, 67, -306, -306, -303,
	-307, 67, -307, -308, 67, -307, -196, -104, -78, -329,
	-328, -220, 40, 507, -79, -220, -101, -100, -220, 212,
	-238, -387, -196, 94, -258, -255, -252, -248, -194, -196,
	-238, -385, -371, 34, -107, -196, -158, 16, -218, -252,
	-407, -206, -158, -408, -206, -206, -208, -408, -204, -408,
	397, -158, -158, -289, -205, -196, -205, -238, -183, -182,
	-196, -183, -387, -258, -96, -91, -95, -92, -97, -161,
	-163, -94, 67, -120, -86, -196, 416, 417, 141, 144,
	143, 31, 370, -272, 370, 31, -248, -266, -262, 73,
	371, -253, -271, 64, 130, -328, -269, -269, -269, -271,
	-271, 129, -79, -387, -257, -248, -196, -122, -120, -122,
	-197, -157, 134, -156, 15, -191, -196, 34, 73, 133,
	-157, 73, -122, -404, 64, -322, -227, -364, 506, -111,
	68, -106, -362, -363, -106, -110, -196, -322, -111, 68,
	-362, -79, -79, -189, -190, -180, -186, -193, -194, -187,
	208, 31, 93, 34, 36, 310, 342, 96, 130, 20,
	97, 166, 129, 312, 434, 311, 203, 59, 437, 439,
	438, 427, 425, 363, 367, 369, 366, 426, 396, 40,
	14, 37, 224, 32, 33, 123, 205, 100, 101, 227,
	35, 225, 85, 44, 23, 62, 15, 17, 18, 313,
	362, 215, 214, 113, 382, 211, 57, 12, 132, 38,
	110, 364, 53, 89, 45, 55, 111, 21, 428, 429,
	41, 381, 390, 462, 231, 125, 314, 315, 60, 94,
	370, 83, 43, 64, 90, 19, 58, 112, 206, 433,
	56, 368, 318, 320, 330, 459, 319, 209, 407, 10,
	309, 435, 30, 223, 54, 210, 99, 213, 84, 230,
	6, 88, 13, 61, 65, 430, 431, 432, 46, 98,
	16, 321, 466, 383, 384, 385, 386, 387, 388, 389,
	191, 192, 193, 194, 195, 272, 218, 216, 220, 221,
	506, 507, 197, 198, 299, 301, 169, 200, 201, 202,
	232, 147, 7, 349, 350, 351, 354, 355, 356, 357,
	358, 359, 360, 514, 391, 392, 393, 394, 395, 408,
	409, 23, -57, -374, 133, 134, -107, -275, -256, -253,
	-277, 121, 70, -263, 134, 466, 516, 71, 213, -397,
	-396, 362, 68, 134, -332, 214, 433, 73, 517, 196,
	-332, 83, 302, 84, 85, -302, -226, -223, -218, -216,
	-216, -221, 227, 93, -220, -219, -368, 100, -220, 34,
	134, 65, 133, 68, 68, 15, 15, 68, -220, -220,
	68, 15, 15, -220, 68, 133, 68, 68, 68, 65,
	68, 134, 68, 134, -220, 68, 68, -220, -220, -220,
	-226, 68, -220, -220, -220, -220, -220, -220, -220, -220,
	-311, 346, 78, 78, -175, 73, -175, 78, 78, 78,
	134, 68, 73, 134, 22, 134, -98, 36, 37, -120,
	215, -120, -390, 349, 35, -398, 134, 40, -396, -241,
	65, -236, -237, -235, -239, 40, -120, 15, -90, -121,
	-196, 67, 68, 134, -220, -249, 65, -183, -158, -120,
	-196, -158, -158, -206, -197, -208, -203, -208, -204, 133,
	-182, -391, 349, -398, 30, -164, -165, -166, -167, 53,
	57, 59, 54, 55, 56, 60, 30, 134, -192, -198,
	34, -193, 73, -194, -187, -192, -86, -91, -96, -192,
	67, 142, 145, 145, 144, 213, 67, 103, -271, -271,
	-271, 40, -195, 64, 134, -158, -89, -91, -196, 73,
	-196, 121, -158, -147, 509, 38, 39, 134, 67, 68,
	134, 46, 134, 103, 68, 134, 68, 46, 133, 378,
	-196, -344, 68, -277, 134, 213, 133, 133, -254, 328,
	-195, -256, 20, 466, -173, 38, -179, -178, 73, 517,
	38, 68, -221, 93, -218, -215, 68, 101, -220, 99,
	-124, -126, 344, 345, -125, -131, 130, 166, 226, 165,
	164, 162, 344, 345, -140, -196, -220, -220, 68, 68,
	-220, -220, 15, -196, -140, -216, -220, 68, -284, 392,
	-284, 68, 68, 68, 68, -284, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 134, 68, 68, 68,
	134, 68, 134, -328, -335, 401, -220, -220, -100, -99,
	43, -108, 94, 67, -393, 403, 351, -188, 103, -213,
	-212, 305, 41, -316, 371, 357, 358, -255, 240, 64,
	294, 295, 296, 297, -235, -181, 129, 251, 67, -120,
	-90, -196, 15, 134, -386, 133, -1, -196, -248, -206,
	-158, -408, -158, -206, -206, -208, -196, -393, -188, -213,
	-260, -259, -173, -95, -95, -95, -95, 53, 53, 53,
	58, 53, 58, 53, -166, -260, -97, -108, -198, 68,
	-403, -402, -401, -399, 61, 214, 62, -225, 145, -256,
	-209, 73, -262, -120, -120, -160, 17, 133, -160, 78,
	73, 89, -227, -330, -329, 46, -83, -106, -322, -363,
	-328, -196, 46, -83, -322, -189, -186, -194, -187, 78,
	15, -253, -248, 121, 121, 70, 329, -263, 73, 350,
	73, 210, 518, 134, 103, -179, 210, -215, -220, 68,
	-133, 153, 152, -133, 68, -303, -304, -303, -306, -303,
	-133, -133, 68, 68, 23, 68, 68, 68, -220, 68,
	68, 134, -284, 67, -284, -284, -284, -284, -284, -284,
	-284, -284, -284, -284, -284, 73, 78, 78, -341, 388,
	383, 385, 44, 45, 34, 35, -115, -116, -117, -123,
	-118, -173, -211, -119, 218, 216, 220, -359, 88, 221,
	272, 89, 211, -394, 77, -388, 73, -196, -395, 77,
	352, 132, 307, 40, 353, 354, 368, 303, 78, 78,
	359, -389, 70, -120, -188, -188, -188, -115, -109, 65,
	133, -91, -121, -196, 121, 68, -158, -196, -158, -158,
	-206, -394, -388, -395, -158, 134, 103, -113, -112, 64,
	65, -114, 64, -112, 53, 53, -158, -401, -400, 23,
	-359, -359, -359, 68, 68, -159, 18, 20, 121, -159,
	-147, 13, 68, -322, -322, -248, -263, 371, -120, -178,
	73, 518, -120, -220, 68, -220, -229, -228, 232, 68,
	68, -310, 508, -339, 383, 20, 20, -83, -120, 68,
	134, -126, -119, -196, 89, -358, -359, -238, -358, 89,
	67, 73, -392, 362, 73, 73, 78, 40, 78, 132,
	355, -317, 67, -140, -142, -195, 130, 73, 68, -192,
	-91, -196, -158, -386, 133, -158, -158, -392, -103, -259,
	-328, -220, 67, -220, 67, 53, 19, 17, -220, -226,
	-362, -82, -333, -289, -82, 68, 68, -103, 20, -147,
	73, 20, 73, -337, 73, -108, -138, -139, -155, 342,
	242, -239, 246, 77, 247, 378, 248, 211, 250, 251,
	252, 222, 253, 254, 255, 371, 256, 257, 258, 259,
	325, 6, 290, -117, -137, -136, -134, 83, 94, 40,
	342, -135, 77, 129, 265, 243, 266, -154, -210, 64,
	348, 216, 88, 89, 330, -211, -354, -356, -196, -356,
	-196, -354, -354, -238, -220, 20, 466, 306, 40, 78,
	40, 356, -243, -245, -173, 67, -81, -80, -158, -158,
	-104, -107, -355, -196, 216, 20, 20, -340, 388, -336,
	-334, 383, 384, 385, 386, -286, -285, -288, 389, 274,
	395, -226, -176, 510, 73, 385, 34, -279, 232, 134,
	-155, -188, -188, -181, 129, -188, -188, -188, -188, 249,
	249, -188, -188, -188, -188, -188, -188, -188, -188, -188,
	-188, -188, -188, -188, -188, 67, -134, 83, -216, 73,
	-142, -143, 40, 264, 260, -144, 40, 244, 245, -146,
	67, 272, 13, 89, 89, -120, 67, 65, 282, 67,
	67, 67, -356, 68, 73, 350, 73, 306, 68, 134,
	-303, -220, -82, -103, 68, 68, 134, -342, 214, -338,
	387, -334, 20, 385, 20, 20, 68, -287, 96, 355,
	359, -220, 67, 20, -83, -280, 281, 20, -155, 78,
	78, -188, -188, 78, 73, 73, 73, -188, -188, 78,
	73, -198, 78, 78, 78, 78, 40, 73, -145, 40,
	260, 264, 261, 262, 263, 78, 40, 78, 40, 78,
	40, -196, 67, -360, -361, 73, 78, 67, -323, -244,
	67, -243, -357, 294, 295, 296, 298, 297, -357, -243,
	-243, -243, 67, -265, -264, 273, 94, 371, -246, -245,
	-98, 68, -104, -196, 216, -349, 67, 78, -339, 20,
	-337, 20, -337, -337, -287, 506, 393, 394, 393, 394,
	-177, -196, -337, 20, -281, 274, 275, -282, -293, 277,
	-140, -140, 73, 73, -141, 243, -122, 68, 134, 103,
	68, -220, -230, -149, -148, 462, -243, 68, 68, 68,
	68, -243, 273, -247, 222, 77, 466, 292, 293, -98,
	-353, 30, 68, -348, -347, -174, -343, -196, 388, 389,
	73, -337, 93, 68, 134, -173, 67, -291, 278, 67,
	-289, 67, -289, 89, 295, 244, 245, 68, -361, 73,
	68, -153, -151, -152, 64, 399, 270, 271, 68, -246,
	-246, -246, -246, 68, -188, 73, 291, -352, -351, -350,
	68, 134, 133, -287, -196, -278, -283, 279, 78, -216,
	67, -216, 67, -290, 276, 67, -264, -152, 64, -151,
	64, 14, 13, -154, 78, -194, 134, 103, -347, -196,
	68, -295, 67, 20, 68, -278, 68, -278, 67, 103,
	-216, -150, 267, 268, 30, 144, -150, -351, 40, -220,
	133, -296, -294, 232, -282, 68, 68, 68, -278, 78,
	68, 83, 40, 269, -196, 68, 134, 70, -292, 280,
	68, -294, -297, 46, 78, -301, -298, 67, -155, 234,
	113, -301, -155, -300, -299, 279, 235, 67, 68, 134,
	70, 231, 67, -226, -299, -298, -226, 68, 68,
}

var yyDef = [...]int{
	30, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	632, 633, 634, 635, 0, 0, 0, 404, 405, 0,
	384, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 312, 313, 314,
	315, 316, 317, 270, 271, 0, 218, 214, 193, 194,
	195, 154, 155, 156, 157, 278, 0, 0, 0, 0,
	0, 0, 483, -2, 636, 637, 638, 639, -2, 417,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 259,
	260, 261, 256, 257, 258, -2, 0, 417, 207, 0,
	198, 198, 0, 503, 0, 0, 517, 539, 30, 0,
	461, 0, 466, 825, 861, 862, 863, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 461, 219, 406, 407, 503, 503, 382, 0,
	242, 0, 1481, 246, 0, 0, 0, 379, 237, 238,
	239, 240, 241, 0, 624, 0, 234, 0, 213, 1540,
	0, 0, 0, 0, 0, 0, 98, 679, 100, 681,
	104, 111, 0, 0, 116, 117, 120, 121, 122, 123,
	124, 0, 128, 0, 130, 133, 0, 135, 136, 0,
	139, 140, 141, 0, 151, 152, 153, 682, 683, 78,
	78, 1230, 1127, 0, 1134, 1135, 1146, 1155, 933, 934,
	935, 936, 0, 0, 0, 0, 0, 943, 944, 0,
	956, 1628, 0, 950, 951, 952, 953, 41, 53, 54,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	0, 1100, 920, 861, 0, 1636, 0, 1656, 1637, 1655,
	0, 0, 1085, 0, 1075, 0, -2, -2, 0, 0,
	1607, 0, -2, 1633, 1652, 1660, 1659, 1630, 1631, 1625,
	1626, 1627, 1629, 1638, 1640, 1651, 0, 1647, 1657, 1658,
	55, 56, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1091, -2, 1093, 1094, 1096,
	1097, 1098, 1099, -2, 1102, 1103, 1104, -2, -2, 1107,
	1108, 1109, 1110, 1111, 1112, 1115, -2, 1117, -2, 1119,
	1087, 1088, 1089, 1090, 1079, 1080, 1081, 1082, 1083, 1084,
	-2, -2, -2, 0, 191, 189, 503, 575, 0, -2,
	0, 0, 0, 522, 525, 528, 531, 642, 708, 708,
	708, 0, 708, 0, 731, 685, 686, 687, 706, 707,
	422, 418, 419, 420, 421, 491, 0, 493, 496, 362,
	319, 0, 0, 329, 330, 362, 0, 0, 498, 498,
	0, 371, 362, 362, -2, 0, 332, 333, 334, 324,
	0, 324, 338, 339, 340, 351, 352, 372, 1254, 0,
	0, 278, 278, 424, 208, 209, 197, 199, 0, 203,
	0, 196, 1540, 0, 0, 165, 1607, 170, 0, 1488,
	1554, 1503, 0, 0, 1521, 0, -2, 498, 0, 504,
	0, 503, 0, 278, 278, 278, 278, 278, 278, 278,
	0, 0, 0, 540, 541, 536, 537, 538, 542, 543,
	3, 0, 625, 626, 629, 630, 631, 0, 0, 465,
	0, 0, 498, -2, 0, 383, 243, 864, 0, 0,
	247, 248, 0, 0, 262, 0, 265, 251, 252, 253,
	0, 0, 236, 0, 0, 215, 0, 0, 0, 279,
	0, 0, 0, 0, 0, 0, 108, 105, 112, 115,
	125, 132, 0, 144, 146, 149, 106, 113, 118, 119,
	126, 147, 107, 109, 110, 114, 148, 150, 127, 131,
	145, 129, 134, 137, 138, 143, 0, 79, 0, 0,
	0, 0, 0, 0, 1133, 0, 0, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 1127, 0, 939, 940, 941, 942, 945, 0,
	957, 0, 0, 0, 1184, 0, 1125, 1125, 0, 1125,
	1121, 1121, 0, 0, 1125, 1063, 0, 0, 1065, 1076,
	0, 0, 1068, 1069, 1125, 0, 1125, 1073, 1074, 1059,
	1060, 0, 1121, 0, 0, 1121, 1121, 1121, 1121, 1121,
	1121, 1121, 1121, 1121, 1121, 1121, 0, 1231, 1249, 1186,
	1187, 1188, 1236, 1190, 1240, 1240, 1236, 1236, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 0, 0, 1229,
	1209, 1238, 1238, 1238, 1236, 1233, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1243, 1243, 1246, 1243, 0, 498, 0, 0, 486, 0,
	467, 0, 519, 521, 0, 523, 524, 526, 527, 529,
	530, 532, 533, 0, 708, 643, 0, 0, 0, 0,
	0, 0, 708, 424, 423, 0, 492, 0, 0, 548,
	0, 0, 324, 362, 548, 0, 345, 346, 347, 362,
	362, 353, 499, 354, 355, 364, 0, 369, 370, 0,
	548, 548, 0, 0, 0, 708, 326, 325, 367, 368,
	336, 326, 1255, 1256, 0, 0, 0, 425, 0, 0,
	201, 0, 206, 158, 0, 0, 0, 0, 0, 0,
	187, 188, 0, 0, 0, 0, 0, 178, 181, 819,
	820, 676, 677, 182, 183, 467, 518, 520, 515, 516,
	0, 0, 0, 0, 0, 0, 0, 403, 556, 550,
	552, 619, 41, 556, 0, 0, 440, 453, 435, 0,
	442, 0, 826, 426, 453, 428, 0, 442, 467, 489,
	467, 0, 244, 0, 249, 0, 0, 264, 266, 267,
	268, 254, 255, 380, 232, 233, 225, 226, 227, 228,
	229, 230, 231, 235, 51, 0, 216, 217, 0, 0,
	0, 92, 93, 94, 95, 96, 97, 99, 83, 395,
	397, 668, 680, 0, 671, 0, 102, 142, 75, 0,
	0, 75, 1128, 1129, 1130, 1131, 1132, 1136, 0, 1138,
	1140, 1142, 1144, 0, 1160, -2, -2, 921, 922, 923,
	924, 925, 926, 927, 928, 929, 930, 931, 932, 1147,
	1158, 1159, 0, 0, 0, 0, 0, 1156, 1151, 0,
	937, 0, 954, 958, 0, 0, 0, 42, 1120, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 0, 1126,
	0, 1127, 0, 0, 0, 1122, 1123, 0, 0, 0,
	1024, 1025, 1026, 0, 448, 0, 1086, 1064, 1077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 1252, 1250, 1251, 1189, 1237, 0, 1214, 0,
	1215, 1216, 1217, 0, 0, 1210, 0, 1211, 1212, 1213,
	1205, 0, 1206, 1207, 0, 1208, 190, 574, 576, 0,
	457, 459, 460, 0, 487, 500, 505, 506, 509, 0,
	0, 0, 645, 0, 276, 662, 0, 678, 700, -2,
	0, 0, 494, 0, 0, 588, 318, 0, 363, 321,
	326, 548, 331, 0, 548, 548, 362, 0, 364, 0,
	364, 358, 359, 0, 373, 376, 374, 0, 335, 327,
	378, 337, 273, 276, 561, 0, 562, 563, 559, 590,
	614, 614, 0, 614, 594, 825, 210, 211, 0, 0,
	205, 159, 160, 0, 162, 163, 164, 171, 166, 168,
	0, 0, 172, 184, 185, 186, 0, 0, 0, 176,
	177, 0, 485, 393, 394, 398, 0, 400, 823, 401,
	402, 548, 0, 557, 0, 553, 620, 0, 622, 0,
	548, 477, 0, 433, 0, 434, 450, 0, 454, 0,
	0, 446, 439, 443, 0, 0, 463, 427, 0, 0,
	432, 488, 490, 865, 0, 1261, -2, 1263, -2, -2,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 0, 250, 263, 0, 0, 0, 0, 86, 665,
	0, 87, 91, 81, 0, 0, 0, 670, 0, 667,
	672, 0, 101, 0, 0, 76, 77, 722, 727, 0,
	0, 1137, 1139, 1141, 1143, 1145, 0, 1148, 1156, 1152,
	0, 1149, 0, 0, 1128, 0, 959, 0, 0, 0,
	0, 0, 0, 1011, 1012, 0, 0, 1016, 0, 0,
	1019, 0, 0, 0, 1023, 0, 1062, 1078, 1066, 0,
	1070, 0, 1072, 0, 0, 991, 991, 0, 0, 0,
	0, 991, 0, 0, 0, 0, 0, 0, 0, 1232,
	1185, 1253, 0, 0, 0, 1234, 0, 0, 0, 0,
	0, 577, 469, 0, 0, 0, 512, 510, 511, 496,
	0, 0, 652, 1257, 709, 280, 0, 0, 664, 0,
	0, 705, -2, 712, 0, 718, 0, 0, 0, 411,
	415, 30, 497, 0, 549, 320, 0, 362, 328, 548,
	825, 348, 349, 548, 365, 362, 366, 362, 364, 0,
	375, 652, 1257, 280, 0, 0, 0, 0, 0, 581,
	0, 0, 580, 0, 0, 0, 0, 0, 496, 615,
	0, 617, 618, 627, 628, 592, -2, 0, 561, 597,
	1125, 212, 200, 202, 0, 0, 0, 0, 173, 174,
	175, 179, 180, 0, 0, 546, 551, 558, 621, 623,
	42, 554, 546, 31, 0, 0, 0, 453, 455, 0,
	0, 453, 0, 0, 462, 0, 0, 453, 0, 0,
	381, 52, 269, 0, 0, 0, 0, 0, 396, 0,
	669, 83, 0, 0, 103, 0, 0, 725, 0, 727,
	0, 1124, 1150, 0, 1157, 1153, 938, 946, 955, 0,
	0, 961, 973, 973, 0, 964, 1236, 1240, 967, 1236,
	1238, 1236, 973, 973, 0, 43, 0, 0, 1017, 1018,
	0, 0, 0, 449, 0, 0, 0, 991, 994, 0,
	995, 991, 991, 991, 991, 1000, 991, 991, 991, 991,
	991, 991, 991, 1242, 1241, 1227, 0, 1228, 1239, 1244,
	0, 1247, 0, 458, 473, 0, 501, 502, 507, 508,
	0, 0, 0, 827, 655, 653, 654, 0, 1258, 659,
	281, 282, 283, 284, 0, 0, 0, 663, 0, 0,
	701, 702, 703, 704, 713, 1257, 1257, 1257, 827, 461,
	0, -2, 0, 0, 413, 0, 0, 589, 322, 548,
	341, 0, 356, 548, 548, 362, 377, 655, 0, 659,
	548, 222, 0, 584, 578, 0, 567, 582, 583, 570,
	0, 572, 0, 568, 569, 548, 560, 591, 616, 593,
	596, 598, 599, 605, 0, 0, 0, 0, 204, 161,
	0, 300, 167, 399, 824, 544, 0, 0, 544, 478,
	477, 0, 451, 0, 456, 453, 438, 447, 437, 444,
	445, 464, 453, 431, 430, 866, 1262, 1259, 1260, 245,
	0, 666, 83, 88, 89, 90, 84, 82, 673, 0,
	675, 0, 723, 727, 0, 0, 0, 1154, 960, 947,
	962, 974, 975, 963, 948, 965, 966, 968, 969, 970,
	971, 972, 949, 1013, 0, 1015, 1020, 1021, 0, 1067,
	1071, 0, 993, 989, 996, 997, 998, 999, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1235, 0, 0, 475, 64,
	0, 0, 513, 514, 0, 0, 0, 828, 829, 831,
	832, 0, 0, 834, 890, 0, 843, 708, 843, 0,
	0, 845, 846, 644, 0, 0, 647, 648, 657, 0,
	0, 0, 286, 287, 0, 0, 0, 299, 295, 296,
	297, 277, 658, 0, 0, 0, 0, 0, 614, 0,
	0, 548, 412, 415, 416, 495, 323, 548, 360, 357,
	548, 272, 0, 275, 503, 0, 0, 564, 585, 0,
	0, 565, 0, 566, 571, 573, 221, 600, 0, 0,
	602, 603, 604, 595, 169, 534, 0, 0, 555, 535,
	32, 442, 452, 436, 429, 85, 80, 674, 66, 726,
	728, 724, 66, 0, 1022, 0, 503, 990, 0, 1245,
	1248, 477, 0, 474, 0, 0, 0, 640, 496, -2,
	0, -2, 833, 891, 855, 855, 844, 855, 855, 708,
	0, 656, 646, 0, 660, 661, 0, 288, 289, 0,
	292, 298, 0, 714, 715, 821, 822, 716, 0, 548,
	548, -2, 409, 414, 0, 342, 361, 274, 498, 223,
	224, 586, 0, 579, 609, 606, 0, 0, 545, 547,
	441, 34, 60, 0, 33, 1014, 1061, 986, 0, 479,
	476, 0, 470, 472, 74, 0, 732, -2, 775, 1257,
	1257, 0, 1257, 1257, 1257, 1257, 0, 0, 1257, 1257,
	1257, 1257, 1257, 1257, 1257, 1257, 1257, 1257, 1257, 1257,
	1257, 1257, 0, 830, 857, -2, 869, 871, 0, 0,
	874, 875, 0, 0, 0, 0, 912, 881, 0, 0,
	885, 0, 1172, 1173, 0, 889, 0, 847, 856, 0,
	856, 0, 0, 855, 0, 0, 0, 285, 290, 0,
	293, 294, 0, 696, 1236, 0, 720, 66, 503, 410,
	220, 0, 0, 610, 612, 607, 608, 57, 62, 67,
	68, 0, 0, 0, 0, 0, 987, 0, 981, 982,
	983, 988, 468, 0, 65, 0, 0, 734, 0, 717,
	777, 0, 0, 1257, 1257, 0, 0, 0, 0, 1257,
	1257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 870, 872, 873, 876,
	877, 878, 917, 918, 919, 879, 914, 915, 916, 880,
	0, 0, 0, 1170, 1171, 910, 0, 0, 0, 0,
	0, 0, 0, 841, 649, 0, 651, 291, 689, 0,
	509, 0, 721, 498, 587, 601, 0, 44, 0, 64,
	0, 69, 0, 0, 0, 0, 992, 984, 0, 0,
	0, 0, 0, 0, 641, 719, 0, 771, 776, 778,
	779, 0, 0, 782, 783, 784, 785, 0, 0, 788,
	789, 790, 791, 792, 793, 794, 795, 796, 797, 813,
	814, 815, 816, 817, 818, 798, 799, 800, 801, 802,
	803, 810, 0, 0, 807, 0, 0, 0, 1075, 905,
	0, 0, 848, 850, 851, 852, 853, 854, 849, 0,
	0, 0, 0, 840, 842, 886, 0, 650, 688, 697,
	698, 509, 408, 611, 613, 35, 0, 0, 61, 0,
	70, 0, 72, 73, 0, 976, 977, 979, 978, 980,
	0, 481, 471, 0, 759, 0, 0, 765, 0, 772,
	780, 781, 786, 787, 804, 0, 0, 806, 0, 0,
	913, 0, 884, 893, 906, 0, 0, 689, 689, 689,
	689, 0, 887, 690, 1257, 0, 0, 694, 695, 699,
	729, 0, 45, 0, 47, 49, 50, 858, 58, 59,
	63, 71, 0, 480, 0, 735, 0, 737, 0, 0,
	0, 0, 0, 769, 0, 811, 812, 805, 808, 809,
	882, 892, 894, 895, 0, 907, 908, 909, 911, 835,
	836, 837, 838, 0, 0, 692, 0, 36, 37, 0,
	46, 0, 0, 985, 482, 0, 739, 0, 760, 0,
	0, 0, 0, 0, 0, 0, 883, 896, 0, 897,
	0, 0, 0, 839, 691, 693, 0, 0, 48, 859,
	736, 733, 0, 771, 761, 0, 763, 0, 0, 0,
	0, 898, 900, 901, 0, 0, 899, 38, 39, 40,
	0, 0, 741, 0, 757, 762, 764, 766, 0, 770,
	768, 902, 904, 903, 860, 740, 0, 753, 738, 0,
	767, 742, -2, 0, 758, 743, -2, 0, 751, 0,
	0, 744, 752, 0, 747, 0, 0, 0, 746, 0,
	-2, 754, 0, 0, 748, -2, 0, 756, 755,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 515,
	104, 103, 105, 3, 516, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 517, 115, 518, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:595
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:601
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:634
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:638
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:645
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:653
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:666
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:678
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:693
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:699
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:703
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:709
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:716
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:725
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:729
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:733
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:738
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:742
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:746
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:752
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:761
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:772
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:776
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:782
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:786
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:792
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:796
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:802
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:826
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:845
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:849
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:853
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:862
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:870
		{
			yyVAL.str = ""
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:874
		{
			yyVAL.str = yyDollar[3].str
		}
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:879
		{
			yyVAL.str = "\n"
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:883
		{
			yyVAL.str = yyDollar[3].str
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:892
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:916
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:920
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:926
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:932
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:950
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:967
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:990
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:994
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:998
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1003
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1007
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1013
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1026
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1037
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1050
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1054
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1064
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1077
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1090
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1096
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1102
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1109
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1117
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1126
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1130
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1134
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1138
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1142
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1146
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1153
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1157
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1163
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1170
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1179
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1183
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1189
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1193
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1197
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1201
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1205
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1209
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1213
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1217
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1221
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1225
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1229
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1233
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1237
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1241
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1245
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1249
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1253
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1257
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1261
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1265
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1397
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1411
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1420
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1450
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1454
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1458
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1464
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1470
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1474
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1481
		{
			yyVAL.str = yyDollar[3].str
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1487
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1491
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1497
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1505
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1514
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1522
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1530
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1553
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1583
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1590
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1598
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1605
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1612
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1629
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1639
		{
			yyVAL.str = yyDollar[1].str
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1646
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1652
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1656
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1667
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1673
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1678
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1682
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1686
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1690
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1694
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1698
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1702
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1706
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1710
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1716
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1720
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1724
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1728
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1733
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1738
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1744
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1751
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1757
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1764
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1771
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1781
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1788
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1799
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1810
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1814
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1820
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1832
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1838
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1842
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1858
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1868
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1874
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1878
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1886
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1890
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1894
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1902
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1920
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1958
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1962
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1968
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1974
		{
			yyVAL.str = yyDollar[1].str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1979
		{
			yyVAL.str = "true"
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1980
		{
			yyVAL.str = "false"
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1981
		{
			yyVAL.str = yyDollar[1].str
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1986
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1997
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2008
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2014
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2025
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2040
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2045
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2049
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2058
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2074
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2078
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2082
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2086
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2090
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2094
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2098
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2102
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2106
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2110
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2114
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2118
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2122
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2126
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2130
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2134
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2140
		{
			yyVAL.item = nil
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2145
		{
			yyVAL.item = nil
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2173
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2178
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2191
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2197
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2202
		{
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2206
		{
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2211
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2220
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2226
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2232
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2241
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2245
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2249
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2253
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2261
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2265
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2273
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2279
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2286
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2296
		{
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2298
		{
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2307
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2326
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2330
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2334
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2340
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2352
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2358
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2368
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2380
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2384
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2390
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2402
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2419
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2424
		{
			yyVAL.str = ""
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2428
		{
			yyVAL.str = yyDollar[2].str
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2434
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2447
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2451
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2457
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2462
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2472
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2476
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2485
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2489
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2493
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2499
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2522
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2540
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2544
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2550
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2559
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2568
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2578
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2584
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2590
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2596
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2604
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2609
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2616
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2632
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2645
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2656
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2660
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2666
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2671
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2678
		{
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2680
		{
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2683
		{
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2692
		{
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2696
		{
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2701
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2710
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2717
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2723
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2731
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2738
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2745
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2765
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2775
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2782
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2788
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2796
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2803
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2810
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2833
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2856
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2860
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2866
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2875
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2879
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2885
		{
			yyVAL.str = yyDollar[1].str
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2889
		{
			yyVAL.str = yyDollar[3].str
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2895
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2899
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2905
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2910
		{
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2914
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2921
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2925
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2937
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2941
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2947
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2951
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2957
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2961
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2970
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2983
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2990
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2997
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3015
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3040
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3047
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3051
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3064
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3068
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3073
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3077
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3084
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3089
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3102
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3106
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3110
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3114
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3118
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3122
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3128
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3135
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3144
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3148
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3154
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3162
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3166
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3175
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3185
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3189
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3198
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3204
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3210
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3214
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3220
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3225
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3229
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3233
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3238
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3242
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3246
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3252
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3256
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3262
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3266
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3276
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3286
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3296
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3308
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3316
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3324
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3333
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3341
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3357
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3365
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3373
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3381
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3389
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3397
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3407
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3440
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3444
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3453
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3462
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3466
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3471
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3475
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3481
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3485
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3491
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3495
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3499
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3503
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3508
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3516
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3522
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3530
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3538
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3548
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3554
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3563
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3572
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3591
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3595
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3605
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3609
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3613
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3617
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3623
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3633
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3637
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3643
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3649
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3653
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3659
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3665
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3669
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3673
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3679
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3683
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3689
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3693
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3699
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3703
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3709
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3713
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3723
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3736
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3742
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3748
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3761
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3779
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3783
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3789
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3799
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3803
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3807
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3812
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3816
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3820
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3824
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3833
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3837
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3841
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3845
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3850
		{
			yyVAL.str = ""
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3854
		{
			yyVAL.str = yyDollar[1].str
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3858
		{
			yyVAL.str = yyDollar[2].str
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3867
		{
			yyVAL.str = ""
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3871
		{
			yyVAL.str = yyDollar[1].str
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3875
		{
			yyVAL.str = yyDollar[2].str
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3879
		{
			yyVAL.str = yyDollar[1].str
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3883
		{
			yyVAL.str = yyDollar[2].str
		}
	case 640:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3917
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3927
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3938
		{
		}
	case 644:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3943
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3955
		{
			yyVAL.str = yyDollar[1].str
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3961
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3971
		{
			yyVAL.str = yyDollar[1].str
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3975
		{
			yyVAL.str = yyDollar[1].str
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3981
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3988
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3994
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4002
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4008
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4015
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4023
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4029
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4038
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4050
		{
			yyVAL.str = yyDollar[1].str
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4055
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4061
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4069
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4175
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4179
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4185
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4195
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4199
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4205
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4215
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4219
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4223
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4232
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4238
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4245
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4251
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4264
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4273
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4277
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4283
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4300
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4304
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4308
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4312
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4318
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4337
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4341
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4363
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4367
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4371
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4375
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4379
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4385
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4389
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4395
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4400
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4405
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4409
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4413
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4417
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4421
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4427
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4441
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4445
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4450
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4454
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4460
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4464
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4470
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4474
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4478
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4483
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4487
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4493
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4505
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4516
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4523
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4531
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4537
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4546
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4550
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4555
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4559
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4566
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4577
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4581
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4590
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4600
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4604
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4611
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4622
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4631
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4635
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4641
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4645
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4651
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4660
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4674
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4680
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4684
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4690
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4697
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4706
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4710
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4715
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4719
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4724
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4728
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4733
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4737
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4747
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4751
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4762
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4770
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4778
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4786
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4797
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4806
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4816
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4826
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4830
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4835
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4839
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4844
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4848
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4854
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4858
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4862
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4868
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4872
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4876
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4880
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4884
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4888
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4892
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4896
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4900
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4904
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4908
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4912
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4916
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4920
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4924
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4928
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4932
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4936
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4940
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4944
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4948
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4952
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4956
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4960
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4964
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4968
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4972
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4976
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4980
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4987
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4991
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4997
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5002
		{
			yyVAL.str = ""
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5006
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5010
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5016
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5020
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5024
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5028
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5032
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5036
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5050
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5054
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5063
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5068
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5074
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5081
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5085
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5091
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5095
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5101
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5111
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5117
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5126
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5135
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5158
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5167
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5177
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5185
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5191
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5195
		{
			yyVAL.str = yyDollar[1].str
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5205
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5211
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5217
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5231
		{
			yyVAL.str = ""
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5238
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5244
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5248
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5252
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5263
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5267
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5271
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5276
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5280
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5286
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5290
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5296
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5300
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5304
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5308
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5312
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5316
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5320
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5324
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5328
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5332
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5336
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5340
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5344
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5348
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5361
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5367
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5371
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5376
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5380
		{
			yyVAL.str = yyDollar[1].str
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5386
		{
			yyVAL.str = ""
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5390
		{
			yyVAL.str = yyDollar[2].str
		}
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5396
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5408
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5415
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5422
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5429
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5436
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5445
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5451
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5457
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5461
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5465
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5469
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5473
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5478
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5485
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5489
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5493
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5498
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5502
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5507
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5511
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5527
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5537
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5541
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5545
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5549
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5553
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5557
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5561
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5565
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5569
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5573
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5577
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5581
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5587
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5591
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5595
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5599
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5603
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5607
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5611
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5615
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5619
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5623
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5627
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5631
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5636
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5644
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5648
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5652
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5661
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5665
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5669
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5673
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5682
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5691
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5697
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5701
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5707
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5717
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5734
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5751
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5764
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5777
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5789
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5803
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5818
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5833
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5850
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5865
		{
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5871
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5875
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5879
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5885
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5889
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5897
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5901
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5905
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5911
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5918
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5931
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5938
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5947
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:5952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:5956
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5966
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5976
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5985
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5994
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6004
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6014
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6024
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6034
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6044
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6054
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6064
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6074
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6084
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6094
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6104
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6121
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6129
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6137
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6145
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6153
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6162
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6170
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6179
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6188
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6196
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6204
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6213
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6222
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6244
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6280
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6292
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6304
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6314
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6322
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6329
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6336
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6348
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6356
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6367
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6376
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6385
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6393
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6403
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6411
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6419
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6433
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6439
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6443
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6462
		{
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6464
		{
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6505
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6515
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6519
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6523
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6529
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6534
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6538
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6544
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6548
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6555
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6559
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6563
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6571
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6575
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6579
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6583
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6589
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6593
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6597
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6601
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6605
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6609
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6613
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6617
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6621
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6625
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6633
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6637
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6641
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6645
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6649
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6653
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6657
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6661
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6671
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6677
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6681
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6688
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6692
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6696
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6702
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6706
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6710
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6714
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6718
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6722
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6726
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6732
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6736
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6740
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6744
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6750
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6754
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6767
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6772
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6776
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6780
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6784
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6788
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6792
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6806
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6810
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6817
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6828
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6833
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6839
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6851
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6863
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6875
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6888
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6901
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6914
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6927
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6940
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6953
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6966
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6979
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6992
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7005
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7020
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7043
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7077
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7125
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7142
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7154
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7174
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7194
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7214
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7230
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7243
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7256
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7269
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7282
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7294
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7306
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7318
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7330
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7342
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7354
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7366
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7378
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7390
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7403
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7416
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7431
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7439
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7448
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7458
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7481
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7486
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7492
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7499
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7503
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7508
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7512
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7518
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7524
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7531
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7538
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7547
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7554
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7561
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7570
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7574
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7578
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7584
		{
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7586
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7596
		{
			yyVAL.str = ""
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7600
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

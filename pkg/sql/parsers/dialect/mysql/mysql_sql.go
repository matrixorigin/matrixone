// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const SCHEMA = 57534
const TABLE = 57535
const INDEX = 57536
const VIEW = 57537
const TO = 57538
const IGNORE = 57539
const IF = 57540
const PRIMARY = 57541
const COLUMN = 57542
const CONSTRAINT = 57543
const SPATIAL = 57544
const FULLTEXT = 57545
const FOREIGN = 57546
const KEY_BLOCK_SIZE = 57547
const SHOW = 57548
const DESCRIBE = 57549
const EXPLAIN = 57550
const DATE = 57551
const ESCAPE = 57552
const REPAIR = 57553
const OPTIMIZE = 57554
const TRUNCATE = 57555
const MAXVALUE = 57556
const PARTITION = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const STATUS = 57563
const VARIABLES = 57564
const ROLE = 57565
const PROXY = 57566
const AVG_ROW_LENGTH = 57567
const STORAGE = 57568
const DISK = 57569
const MEMORY = 57570
const CHECKSUM = 57571
const COMPRESSION = 57572
const DATA = 57573
const DIRECTORY = 57574
const DELAY_KEY_WRITE = 57575
const ENCRYPTION = 57576
const ENGINE = 57577
const MAX_ROWS = 57578
const MIN_ROWS = 57579
const PACK_KEYS = 57580
const ROW_FORMAT = 57581
const STATS_AUTO_RECALC = 57582
const STATS_PERSISTENT = 57583
const STATS_SAMPLE_PAGES = 57584
const DYNAMIC = 57585
const COMPRESSED = 57586
const REDUNDANT = 57587
const COMPACT = 57588
const FIXED = 57589
const COLUMN_FORMAT = 57590
const AUTO_RANDOM = 57591
const RESTRICT = 57592
const CASCADE = 57593
const ACTION = 57594
const PARTIAL = 57595
const SIMPLE = 57596
const CHECK = 57597
const ENFORCED = 57598
const RANGE = 57599
const LIST = 57600
const ALGORITHM = 57601
const LINEAR = 57602
const PARTITIONS = 57603
const SUBPARTITION = 57604
const SUBPARTITIONS = 57605
const CLUSTER = 57606
const TYPE = 57607
const ANY = 57608
const SOME = 57609
const EXTERNAL = 57610
const LOCALFILE = 57611
const URL = 57612
const PREPARE = 57613
const DEALLOCATE = 57614
const PROPERTIES = 57615
const PARSER = 57616
const VISIBLE = 57617
const INVISIBLE = 57618
const BTREE = 57619
const HASH = 57620
const RTREE = 57621
const BSI = 57622
const ZONEMAP = 57623
const LEADING = 57624
const BOTH = 57625
const TRAILING = 57626
const UNKNOWN = 57627
const EXPIRE = 57628
const ACCOUNT = 57629
const UNLOCK = 57630
const DAY = 57631
const NEVER = 57632
const PUMP = 57633
const SECOND = 57634
const ASCII = 57635
const COALESCE = 57636
const COLLATION = 57637
const HOUR = 57638
const MICROSECOND = 57639
const MINUTE = 57640
const MONTH = 57641
const QUARTER = 57642
const REPEAT = 57643
const REVERSE = 57644
const ROW_COUNT = 57645
const WEEK = 57646
const REVOKE = 57647
const FUNCTION = 57648
const PRIVILEGES = 57649
const TABLESPACE = 57650
const EXECUTE = 57651
const SUPER = 57652
const GRANT = 57653
const OPTION = 57654
const REFERENCES = 57655
const REPLICATION = 57656
const SLAVE = 57657
const CLIENT = 57658
const USAGE = 57659
const RELOAD = 57660
const FILE = 57661
const TEMPORARY = 57662
const ROUTINE = 57663
const EVENT = 57664
const SHUTDOWN = 57665
const NULLX = 57666
const AUTO_INCREMENT = 57667
const APPROXNUM = 57668
const SIGNED = 57669
const UNSIGNED = 57670
const ZEROFILL = 57671
const ENGINES = 57672
const LOW_CARDINALITY = 57673
const ADMIN_NAME = 57674
const RANDOM = 57675
const SUSPEND = 57676
const ATTRIBUTE = 57677
const HISTORY = 57678
const REUSE = 57679
const CURRENT = 57680
const OPTIONAL = 57681
const FAILED_LOGIN_ATTEMPTS = 57682
const PASSWORD_LOCK_TIME = 57683
const UNBOUNDED = 57684
const SECONDARY = 57685
const USER = 57686
const IDENTIFIED = 57687
const CIPHER = 57688
const ISSUER = 57689
const X509 = 57690
const SUBJECT = 57691
const SAN = 57692
const REQUIRE = 57693
const SSL = 57694
const NONE = 57695
const PASSWORD = 57696
const MAX_QUERIES_PER_HOUR = 57697
const MAX_UPDATES_PER_HOUR = 57698
const MAX_CONNECTIONS_PER_HOUR = 57699
const MAX_USER_CONNECTIONS = 57700
const FORMAT = 57701
const VERBOSE = 57702
const CONNECTION = 57703
const TRIGGERS = 57704
const PROFILES = 57705
const LOAD = 57706
const INFILE = 57707
const TERMINATED = 57708
const OPTIONALLY = 57709
const ENCLOSED = 57710
const ESCAPED = 57711
const STARTING = 57712
const LINES = 57713
const ROWS = 57714
const IMPORT = 57715
const MODUMP = 57716
const OVER = 57717
const PRECEDING = 57718
const FOLLOWING = 57719
const GROUPS = 57720
const DATABASES = 57721
const TABLES = 57722
const EXTENDED = 57723
const FULL = 57724
const PROCESSLIST = 57725
const FIELDS = 57726
const COLUMNS = 57727
const OPEN = 57728
const ERRORS = 57729
const WARNINGS = 57730
const INDEXES = 57731
const SCHEMAS = 57732
const NAMES = 57733
const GLOBAL = 57734
const SESSION = 57735
const ISOLATION = 57736
const LEVEL = 57737
const READ = 57738
const WRITE = 57739
const ONLY = 57740
const REPEATABLE = 57741
const COMMITTED = 57742
const UNCOMMITTED = 57743
const SERIALIZABLE = 57744
const LOCAL = 57745
const EVENTS = 57746
const PLUGINS = 57747
const CURRENT_TIMESTAMP = 57748
const DATABASE = 57749
const CURRENT_TIME = 57750
const LOCALTIME = 57751
const LOCALTIMESTAMP = 57752
const UTC_DATE = 57753
const UTC_TIME = 57754
const UTC_TIMESTAMP = 57755
const REPLACE = 57756
const CONVERT = 57757
const SEPARATOR = 57758
const TIMESTAMPDIFF = 57759
const CURRENT_DATE = 57760
const CURRENT_USER = 57761
const CURRENT_ROLE = 57762
const SECOND_MICROSECOND = 57763
const MINUTE_MICROSECOND = 57764
const MINUTE_SECOND = 57765
const HOUR_MICROSECOND = 57766
const HOUR_SECOND = 57767
const HOUR_MINUTE = 57768
const DAY_MICROSECOND = 57769
const DAY_SECOND = 57770
const DAY_MINUTE = 57771
const DAY_HOUR = 57772
const YEAR_MONTH = 57773
const SQL_TSI_HOUR = 57774
const SQL_TSI_DAY = 57775
const SQL_TSI_WEEK = 57776
const SQL_TSI_MONTH = 57777
const SQL_TSI_QUARTER = 57778
const SQL_TSI_YEAR = 57779
const SQL_TSI_SECOND = 57780
const SQL_TSI_MINUTE = 57781
const RECURSIVE = 57782
const CONFIG = 57783
const DRAINER = 57784
const MATCH = 57785
const AGAINST = 57786
const BOOLEAN = 57787
const LANGUAGE = 57788
const WITH = 57789
const QUERY = 57790
const EXPANSION = 57791
const ADDDATE = 57792
const BIT_AND = 57793
const BIT_OR = 57794
const BIT_XOR = 57795
const CAST = 57796
const COUNT = 57797
const APPROX_COUNT_DISTINCT = 57798
const APPROX_PERCENTILE = 57799
const CURDATE = 57800
const CURTIME = 57801
const DATE_ADD = 57802
const DATE_SUB = 57803
const EXTRACT = 57804
const GROUP_CONCAT = 57805
const MAX = 57806
const MID = 57807
const MIN = 57808
const NOW = 57809
const POSITION = 57810
const SESSION_USER = 57811
const STD = 57812
const STDDEV = 57813
const STDDEV_POP = 57814
const STDDEV_SAMP = 57815
const SUBDATE = 57816
const SUBSTR = 57817
const SUBSTRING = 57818
const SUM = 57819
const SYSDATE = 57820
const SYSTEM_USER = 57821
const TRANSLATE = 57822
const TRIM = 57823
const VARIANCE = 57824
const VAR_POP = 57825
const VAR_SAMP = 57826
const AVG = 57827
const ARROW = 57828
const ROW = 57829
const OUTFILE = 57830
const HEADER = 57831
const MAX_FILE_SIZE = 57832
const FORCE_QUOTE = 57833
const UNUSED = 57834
const BINDINGS = 57835
const DO = 57836
const DECLARE = 57837

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8009

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 81,
	21, 499,
	-2, 480,
	-1, 86,
	211, 680,
	-2, 726,
	-1, 103,
	42, 339,
	211, 339,
	238, 346,
	239, 346,
	406, 339,
	-2, 367,
	-1, 464,
	67, 1091,
	-2, 1597,
	-1, 465,
	67, 1109,
	-2, 1568,
	-1, 470,
	67, 1110,
	-2, 1596,
	-1, 490,
	67, 1023,
	-2, 1644,
	-1, 491,
	67, 1024,
	-2, 1643,
	-1, 492,
	67, 1025,
	-2, 1633,
	-1, 493,
	67, 1608,
	-2, 1628,
	-1, 494,
	67, 1609,
	-2, 1629,
	-1, 495,
	67, 1610,
	-2, 1635,
	-1, 496,
	67, 1611,
	-2, 1618,
	-1, 497,
	67, 1612,
	-2, 1626,
	-1, 498,
	67, 1613,
	-2, 1636,
	-1, 499,
	67, 1614,
	-2, 1637,
	-1, 500,
	67, 1615,
	-2, 1642,
	-1, 501,
	67, 1616,
	-2, 1647,
	-1, 502,
	67, 1617,
	-2, 1648,
	-1, 504,
	67, 1088,
	-2, 1449,
	-1, 511,
	67, 1097,
	-2, 1475,
	-1, 515,
	67, 1101,
	-2, 1514,
	-1, 516,
	67, 1102,
	-2, 1592,
	-1, 524,
	67, 1112,
	-2, 1577,
	-1, 526,
	67, 1114,
	-2, 1587,
	-1, 538,
	67, 1004,
	-2, 1638,
	-1, 539,
	67, 1005,
	-2, 1639,
	-1, 540,
	67, 1006,
	-2, 1640,
	-1, 547,
	21, 500,
	-2, 463,
	-1, 590,
	401, 367,
	402, 367,
	-2, 340,
	-1, 632,
	103, 1449,
	114, 1449,
	133, 1449,
	-2, 1250,
	-1, 669,
	21, 500,
	-2, 463,
	-1, 767,
	21, 499,
	-2, 916,
	-1, 1071,
	67, 1157,
	-2, 1594,
	-1, 1072,
	67, 1158,
	-2, 1595,
	-1, 1225,
	1, 706,
	68, 706,
	513, 706,
	-2, 713,
	-1, 1342,
	133, 1260,
	-2, 1258,
	-1, 1344,
	133, 623,
	-2, 1255,
	-1, 1345,
	133, 624,
	-2, 1256,
	-1, 1636,
	1, 707,
	68, 707,
	513, 707,
	-2, 713,
	-1, 1690,
	21, 499,
	-2, 590,
	-1, 1855,
	65, 411,
	134, 411,
	-2, 821,
	-1, 2113,
	87, 713,
	129, 713,
	166, 713,
	169, 713,
	-2, 769,
	-1, 2115,
	272, 884,
	-2, 863,
	-1, 2145,
	65, 411,
	134, 411,
	-2, 822,
	-1, 2181,
	87, 713,
	129, 713,
	166, 713,
	169, 713,
	-2, 770,
	-1, 2209,
	272, 884,
	-2, 864,
	-1, 2616,
	68, 741,
	134, 741,
	-2, 713,
	-1, 2620,
	68, 741,
	134, 741,
	-2, 713,
	-1, 2634,
	68, 745,
	134, 745,
	-2, 713,
	-1, 2639,
	68, 746,
	134, 746,
	-2, 713,
}

const yyPrivate = 57344

const yyLast = 28327

var yyAct = [...]int{
	435, 2620, 1135, 2622, 2628, 2619, 2596, 2461, 415, 2248,
	1051, 417, 2585, 2542, 437, 2498, 2221, 2526, 2428, 2361,
	2432, 2527, 2408, 2167, 2177, 1620, 1269, 794, 1303, 1687,
	1683, 2107, 1047, 2416, 963, 2247, 121, 121, 2246, 917,
	548, 462, 121, 355, 362, 2264, 362, 2165, 360, 29,
	2231, 2210, 1230, 631, 1858, 2230, 1054, 2002, 2138, 1232,
	903, 1328, 120, 120, 2126, 1717, 366, 2006, 346, 1831,
	1875, 823, 1291, 2007, 1261, 2119, 1751, 372, 1321, 543,
	409, 1527, 2011, 2079, 892, 2062, 2022, 2017, 1896, 576,
	2019, 124, 1682, 663, 1643, 2000, 1184, 414, 1750, 1329,
	1191, 1339, 1342, 1181, 1954, 1909, 1330, 1523, 1322, 1284,
	1205, 543, 1522, 1671, 635, 1874, 1833, 1828, 1262, 1264,
	121, 1642, 3, 359, 18, 905, 1221, 638, 39, 356,
	8, 1243, 357, 6, 358, 7, 829, 2185, 1213, 1242,
	1555, 416, 985, 1524, 1629, 1637, 665, 658, 1045, 80,
	1050, 1288, 633, 1255, 418, 1244, 348, 593, 1254, 1534,
	1099, 1085, 1538, 1036, 657, 29, 426, 1685, 450, 81,
	39, 351, 680, 1608, 1325, 1307, 1217, 1044, 623, 410,
	1692, 1250, 874, 1220, 932, 575, 942, 1105, 1134, 955,
	545, 1104, 374, 15, 918, 9, 547, 4, 1196, 984,
	114, 586, 111, 624, 361, 1947, 573, 1753, 345, 659,
	1947, 81, 1541, 1531, 375, 116, 2277, 369, 1718, 2106,
	1209, 2449, 1324, 546, 795, 2239, 699, 1738, 2489, 115,
	115, 35, 105, 87, 115, 1746, 35, 105, 87, 656,
	18, 115, 344, 1528, 39, 944, 8, 2479, 1539, 6,
	364, 7, 115, 1125, 890, 115, 115, 35, 105, 87,
	1792, 1003, 636, 117, 533, 115, 532, 534, 535, 115,
	536, 537, 996, 929, 733, 930, 732, 1000, 1272, 1273,
	914, 637, 542, 1830, 1819, 81, 112, 112, 993, 2515,
	603, 112, 1021, 1037, 726, 1041, 945, 2273, 1002, 2513,
	115, 1926, 35, 105, 87, 1919, 923, 924, 1246, 995,
	1053, 921, 112, 112, 920, 923, 924, 2530, 2531, 1040,
	110, 731, 112, 2450, 2451, 1793, 112, 99, 2502, 2503,
	990, 2265, 2266, 2267, 2268, 1829, 79, 2262, 714, 707,
	715, 709, 1993, 2354, 1994, 2357, 1995, 2279, 121, 673,
	2108, 65, 1733, 1056, 674, 1285, 2431, 112, 672, 2091,
	371, 1277, 2127, 1535, 362, 2031, 121, 2134, 717, 710,
	1666, 2033, 1605, 2488, 671, 1836, 2023, 2244, 683, 1627,
	2338, 1032, 607, 1942, 2228, 668, 670, 1042, 1140, 1180,
	1179, 2027, 690, 1940, 1121, 2341, 549, 1118, 728, 729,
	730, 1120, 1117, 1119, 1123, 1124, 1039, 1743, 702, 1122,
	2241, 2517, 2272, 2540, 1281, 2028, 2029, 2332, 2274, 1545,
	1547, 1548, 86, 769, 113, 106, 107, 683, 108, 109,
	2030, 363, 712, 703, 667, 737, 738, 739, 736, 608,
	2370, 2613, 103, 2491, 2492, 2629, 2529, 694, 1055, 912,
	2463, 2551, 2512, 405, 705, 2558, 406, 2430, 2486, 2325,
	669, 1844, 1845, 1846, 1847, 1540, 708, 711, 643, 642,
	644, 1063, 1066, 1067, 2459, 2460, 2607, 2463, 724, 725,
	39, 39, 1064, 2025, 2294, 2293, 719, 931, 720, 713,
	704, 408, 407, 86, 104, 113, 2469, 63, 641, 2630,
	1842, 891, 2316, 951, 636, 2519, 2520, 1038, 634, 950,
	692, 2393, 936, 103, 98, 97, 722, 916, 915, 909,
	41, 81, 81, 637, 676, 677, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1128, 1129, 1130,
	1131, 1132, 1133, 1126, 1127, 2597, 646, 685, 684, 908,
	2282, 2102, 716, 706, 2624, 664, 1529, 1529, 2588, 1556,
	2636, 893, 639, 770, 771, 772, 773, 2320, 688, 370,
	636, 2352, 943, 1529, 1739, 576, 2015, 1699, 100, 101,
	718, 1532, 691, 699, 1215, 871, 896, 2095, 1950, 767,
	1945, 740, 1946, 900, 774, 898, 685, 684, 1898, 1900,
	768, 678, 2417, 2418, 2419, 2421, 2420, 365, 776, 1543,
	922, 803, 73, 1902, 723, 2490, 102, 2518, 74, 640,
	570, 571, 572, 923, 924, 919, 543, 543, 543, 781,
	1696, 967, 967, 923, 924, 948, 2429, 721, 1546, 1835,
	1956, 1955, 894, 895, 913, 897, 1275, 362, 988, 988,
	1276, 2024, 2034, 1286, 1542, 36, 1530, 2339, 2026, 1695,
	1943, 1274, 698, 965, 965, 610, 969, 998, 611, 2240,
	2570, 75, 2589, 971, 2642, 2623, 36, 1698, 1697, 1747,
	76, 34, 645, 88, 88, 734, 2043, 1019, 88, 991,
	1065, 1839, 1840, 2245, 735, 88, 805, 806, 2016, 967,
	1278, 967, 673, 1856, 604, 1838, 88, 910, 1004, 88,
	88, 1052, 994, 2641, 926, 927, 1001, 1726, 879, 88,
	1033, 36, 2318, 88, 2635, 699, 2317, 933, 1721, 933,
	693, 2394, 2396, 2397, 2398, 2395, 1028, 2114, 2452, 2453,
	735, 634, 604, 876, 946, 947, 1850, 614, 2632, 1233,
	878, 1899, 547, 1280, 88, 1857, 2012, 2015, 1233, 1073,
	1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 2321, 2322, 2614, 1094, 1095, 1014, 1015, 1719, 735,
	1103, 902, 937, 606, 2288, 1583, 605, 2609, 1582, 925,
	1150, 1057, 928, 1680, 613, 2586, 2587, 1631, 616, 615,
	1156, 77, 78, 973, 2600, 550, 39, 345, 1049, 2599,
	1158, 1027, 1162, 1163, 2633, 39, 1034, 1024, 961, 962,
	1023, 606, 1857, 543, 605, 940, 941, 987, 987, 958,
	959, 960, 81, 949, 2574, 972, 81, 2544, 2537, 1537,
	1068, 344, 1614, 2532, 1030, 1738, 2521, 81, 989, 1046,
	1010, 983, 1005, 2610, 735, 2507, 81, 976, 977, 978,
	979, 980, 981, 982, 1018, 1006, 2484, 1681, 1851, 2483,
	1537, 1202, 1017, 2482, 1708, 1537, 2059, 1681, 2481, 2016,
	1310, 1026, 547, 1025, 2009, 1022, 697, 934, 2010, 2013,
	1043, 1630, 1708, 1218, 2471, 967, 1149, 1681, 1225, 2349,
	1537, 2348, 576, 2545, 2343, 1231, 1093, 1528, 967, 2343,
	1619, 1203, 1708, 1587, 1048, 1058, 1059, 1060, 1061, 1062,
	872, 2508, 649, 654, 655, 1035, 1224, 2342, 1186, 1087,
	1251, 1251, 2343, 1256, 1893, 2343, 1187, 1188, 1256, 2343,
	2014, 1218, 967, 1271, 2343, 1815, 1206, 1813, 1811, 1193,
	1194, 1809, 1249, 543, 1195, 967, 1798, 1101, 1102, 1694,
	2472, 1755, 1736, 1137, 1730, 2350, 1519, 1647, 1144, 901,
	1238, 1097, 1136, 1223, 1139, 1216, 1138, 1218, 967, 1151,
	1302, 121, 121, 1226, 952, 935, 1247, 1248, 1312, 1157,
	2594, 1159, 121, 2343, 696, 1160, 1150, 1150, 1332, 1308,
	1681, 1728, 2546, 1150, 1150, 666, 1723, 1304, 1304, 1646,
	1305, 1816, 658, 1814, 1810, 2148, 1253, 1810, 1304, 1615,
	1318, 2133, 735, 2044, 1297, 666, 1176, 735, 1647, 1282,
	1724, 1590, 1231, 1911, 1859, 1237, 967, 1344, 1589, 1536,
	933, 1240, 1241, 1239, 699, 1222, 1741, 1740, 1234, 1011,
	1618, 1732, 1663, 1207, 1245, 1565, 1301, 1211, 1235, 1210,
	1214, 1579, 1287, 1204, 697, 1336, 1198, 1729, 1201, 1566,
	1518, 1939, 1724, 1315, 659, 1647, 1007, 870, 779, 1333,
	737, 738, 739, 736, 1520, 1614, 1227, 1228, 651, 652,
	653, 1550, 1222, 1236, 686, 666, 1257, 735, 2583, 1345,
	1553, 1554, 1327, 752, 735, 1537, 1142, 1141, 2048, 1327,
	1937, 1270, 1252, 1295, 1296, 1012, 1526, 1258, 737, 738,
	739, 736, 1938, 1260, 1564, 1259, 934, 956, 1046, 906,
	2571, 1283, 954, 568, 612, 1207, 1832, 1125, 957, 39,
	2473, 1207, 1207, 2060, 1948, 636, 1727, 1306, 1292, 1293,
	1294, 1701, 636, 1299, 1298, 1300, 755, 756, 757, 758,
	759, 752, 1617, 675, 637, 1316, 1761, 1525, 1100, 2506,
	1594, 637, 1100, 1826, 1561, 1343, 1143, 1334, 739, 736,
	81, 565, 1219, 1516, 736, 1517, 2328, 1337, 2327, 1338,
	737, 738, 739, 736, 2123, 2118, 1168, 1161, 1521, 1915,
	1164, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1173, 1174,
	1175, 2311, 953, 1154, 1092, 2606, 121, 121, 2618, 2603,
	1544, 2568, 2552, 1155, 935, 2524, 2441, 121, 1644, 1090,
	1091, 1089, 1552, 2404, 1975, 2018, 1549, 1256, 636, 609,
	1654, 2402, 1623, 1625, 617, 2410, 355, 737, 738, 739,
	736, 1551, 2400, 1640, 1256, 2388, 1087, 767, 2605, 1560,
	2205, 737, 738, 739, 736, 2387, 1653, 2386, 2383, 1271,
	1763, 2403, 2390, 658, 2377, 2374, 2373, 1558, 1121, 2401,
	1562, 1118, 1621, 1622, 2242, 1120, 1117, 1119, 1123, 1124,
	2399, 2130, 2032, 1122, 1639, 1991, 2131, 1652, 967, 1990,
	1655, 1656, 567, 1968, 2435, 737, 738, 739, 736, 988,
	2389, 1271, 564, 563, 1712, 1933, 1714, 1913, 1613, 1612,
	1572, 2621, 2243, 1573, 2539, 1577, 737, 738, 739, 736,
	1706, 2187, 2523, 558, 2132, 659, 737, 738, 739, 736,
	1611, 1588, 1563, 1691, 1591, 1592, 1593, 1607, 1967, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1606, 1603, 1688, 1688,
	1689, 1688, 1693, 1638, 1610, 1008, 405, 1709, 1657, 406,
	737, 738, 739, 736, 2409, 2178, 1716, 2504, 561, 2467,
	2466, 1245, 1632, 2391, 1659, 1711, 1661, 753, 754, 755,
	756, 757, 758, 759, 752, 1651, 2384, 556, 737, 738,
	739, 736, 1660, 2380, 1667, 1662, 2379, 1664, 1658, 2378,
	2340, 2337, 2313, 1648, 1575, 2278, 2170, 2176, 636, 2174,
	2141, 1128, 1129, 1130, 1131, 1132, 1133, 1126, 1127, 2129,
	562, 2128, 803, 737, 738, 739, 736, 1690, 737, 738,
	739, 736, 2125, 2094, 1702, 1703, 1704, 1752, 660, 661,
	662, 1710, 1989, 1944, 557, 760, 761, 753, 754, 755,
	756, 757, 758, 759, 752, 2191, 2331, 1574, 1914, 1905,
	1616, 1609, 1207, 1207, 1207, 1317, 2195, 489, 488, 1270,
	743, 744, 745, 746, 747, 748, 749, 741, 987, 737,
	738, 739, 736, 1009, 804, 799, 2184, 798, 780, 2634,
	2186, 2188, 2190, 2169, 2192, 2193, 2194, 2196, 2197, 2198,
	2200, 2201, 2202, 2203, 2611, 1786, 2036, 566, 2098, 1734,
	1650, 2474, 2360, 1770, 2142, 737, 738, 739, 736, 967,
	2113, 967, 2104, 967, 2103, 2086, 2078, 2077, 673, 2049,
	737, 738, 739, 736, 2206, 1973, 1966, 1748, 1958, 869,
	866, 867, 868, 1953, 2631, 1775, 1812, 1774, 1773, 1771,
	1808, 1807, 1595, 1744, 1971, 1586, 967, 1779, 750, 760,
	761, 753, 754, 755, 756, 757, 758, 759, 752, 2204,
	1787, 1584, 1581, 1580, 967, 1569, 737, 738, 739, 736,
	737, 738, 739, 736, 1789, 1578, 2183, 1571, 965, 1970,
	1778, 751, 750, 760, 761, 753, 754, 755, 756, 757,
	758, 759, 752, 1568, 1969, 1567, 965, 1153, 1788, 1772,
	1585, 737, 738, 739, 736, 2199, 115, 1806, 1152, 105,
	87, 967, 2189, 974, 1805, 1765, 737, 738, 739, 736,
	115, 2582, 1855, 2576, 2559, 1745, 2556, 2554, 1861, 737,
	738, 739, 736, 796, 2440, 1759, 737, 738, 739, 736,
	737, 738, 739, 736, 1870, 1737, 2426, 2414, 1853, 673,
	1271, 1271, 1271, 1271, 1735, 2411, 2406, 1742, 1876, 1046,
	1804, 673, 1271, 112, 1825, 2366, 1183, 1817, 2335, 2334,
	1876, 2333, 1849, 1756, 29, 2564, 1803, 112, 1758, 2330,
	967, 1769, 737, 738, 739, 736, 2324, 2309, 121, 121,
	904, 2158, 2156, 1864, 2136, 1892, 2124, 1866, 737, 738,
	739, 736, 1802, 1977, 1192, 1150, 1185, 1150, 1862, 1801,
	1925, 1852, 1827, 1722, 1907, 1908, 1872, 1776, 1777, 967,
	1700, 1762, 1645, 1891, 737, 738, 739, 736, 1088, 1780,
	1781, 737, 738, 739, 736, 1784, 1785, 1841, 1822, 112,
	1197, 1200, 1931, 1854, 1190, 1189, 1031, 1790, 1860, 18,
	997, 873, 1920, 39, 1638, 8, 1688, 1863, 6, 1927,
	7, 1222, 1848, 1871, 1873, 1867, 1865, 1868, 1877, 1878,
	1879, 1880, 821, 1888, 1207, 1206, 1889, 1820, 1821, 1214,
	1924, 1890, 1869, 820, 1922, 547, 819, 818, 817, 816,
	1928, 1906, 1903, 815, 81, 814, 813, 1936, 812, 811,
	810, 809, 1912, 808, 1932, 807, 1923, 1941, 673, 802,
	1916, 1921, 2021, 1918, 1929, 1930, 801, 2005, 1270, 1270,
	1270, 1270, 800, 797, 121, 793, 1935, 792, 790, 789,
	1270, 1794, 1949, 673, 788, 1951, 1799, 1271, 1644, 787,
	2047, 786, 2005, 1800, 785, 784, 2051, 783, 1960, 782,
	2037, 1797, 1957, 2021, 1959, 1962, 778, 1961, 777, 1963,
	701, 1964, 1965, 1901, 1634, 737, 738, 739, 736, 2063,
	2064, 1796, 81, 737, 738, 739, 736, 689, 2562, 81,
	2528, 2066, 1207, 1843, 1707, 1320, 700, 1207, 1887, 2069,
	1677, 1678, 1779, 737, 738, 739, 736, 1795, 2068, 2038,
	2039, 2040, 1882, 2050, 1885, 1883, 1881, 2052, 2053, 1886,
	1884, 2045, 1791, 2617, 2058, 2161, 1731, 2160, 1725, 737,
	738, 739, 736, 1952, 1824, 1783, 121, 2042, 2041, 2070,
	1639, 121, 2046, 1177, 737, 738, 739, 736, 1720, 2055,
	2057, 1996, 1997, 2056, 1782, 2067, 1972, 737, 738, 739,
	736, 2159, 2092, 1621, 1622, 2280, 1754, 2096, 1749, 1760,
	2084, 2074, 2075, 2076, 2071, 875, 737, 738, 739, 736,
	1999, 1096, 1628, 695, 1998, 2054, 2083, 1229, 2087, 2495,
	121, 737, 738, 739, 736, 2088, 64, 939, 38, 2117,
	37, 938, 2089, 737, 738, 739, 736, 118, 2090, 1142,
	1141, 887, 888, 727, 2093, 1270, 2112, 751, 750, 760,
	761, 753, 754, 755, 756, 757, 758, 759, 752, 967,
	967, 885, 886, 2073, 1271, 2145, 341, 2111, 342, 1515,
	343, 907, 1976, 877, 340, 2577, 1978, 1979, 1980, 1981,
	673, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 2457, 1876,
	2445, 965, 2139, 2137, 883, 884, 2443, 2115, 881, 882,
	2116, 2371, 2367, 1668, 2163, 2359, 1150, 2358, 2122, 2356,
	2260, 2259, 2175, 2120, 2172, 2120, 2121, 2110, 2109, 2152,
	2081, 880, 2147, 550, 2080, 2146, 1673, 1676, 1677, 1678,
	1674, 2149, 1675, 1679, 2150, 673, 1910, 2182, 2144, 2232,
	2234, 2151, 2232, 2232, 2005, 551, 552, 553, 554, 1233,
	2153, 2566, 2565, 2154, 1688, 2143, 1934, 673, 550, 1570,
	687, 2171, 2565, 2566, 2168, 2326, 2085, 2164, 2097, 911,
	45, 1, 1319, 1894, 1895, 2099, 2072, 1231, 1897, 2257,
	1533, 1665, 1673, 1676, 1677, 1678, 1674, 81, 1675, 1679,
	2233, 2173, 2207, 2179, 1626, 2275, 2035, 2235, 2236, 899,
	569, 1145, 889, 2229, 1016, 2284, 648, 975, 551, 552,
	553, 554, 2254, 682, 1013, 681, 679, 1098, 452, 2251,
	2147, 550, 1323, 2252, 2253, 2407, 2256, 2494, 2237, 2255,
	2541, 2439, 1270, 2497, 1029, 436, 2351, 1992, 967, 2261,
	2353, 2263, 2312, 1818, 2166, 1917, 582, 484, 460, 121,
	791, 999, 992, 650, 459, 2135, 1837, 555, 2234, 2287,
	1207, 647, 583, 2155, 1604, 2105, 2157, 1178, 1199, 1182,
	2139, 2627, 2616, 2285, 2286, 2329, 2289, 2290, 2291, 2292,
	2162, 2310, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2314, 2229, 2595, 2575,
	2462, 2612, 2511, 2557, 2271, 2269, 2270, 2372, 2336, 2550,
	2458, 2369, 2281, 2347, 763, 376, 766, 1279, 541, 2346,
	621, 2427, 377, 1649, 2238, 2487, 2413, 559, 2405, 2355,
	1633, 764, 765, 762, 560, 751, 750, 760, 761, 753,
	754, 755, 756, 757, 758, 759, 752, 1636, 2385, 2368,
	1635, 673, 1069, 742, 673, 673, 673, 1086, 2100, 2101,
	775, 413, 1559, 425, 673, 419, 2604, 1834, 2222, 1904,
	44, 2437, 2344, 43, 42, 1311, 1340, 2375, 2376, 454,
	123, 1341, 2454, 2381, 2382, 2276, 2422, 2455, 2412, 2415,
	2434, 2499, 2423, 2424, 2425, 434, 967, 967, 433, 2433,
	432, 2444, 2448, 2446, 2447, 2442, 431, 2436, 1672, 1688,
	1670, 1669, 2456, 751, 750, 760, 761, 753, 754, 755,
	756, 757, 758, 759, 752, 1266, 1265, 121, 965, 965,
	2464, 2465, 1309, 2525, 2477, 673, 2478, 2323, 2392, 2319,
	2315, 2468, 2181, 2180, 2580, 2208, 2209, 673, 2215, 2345,
	828, 824, 826, 1304, 827, 2470, 825, 1768, 1764, 2003,
	2476, 2501, 2004, 2001, 2065, 2061, 1331, 1212, 1823, 81,
	1267, 2365, 1263, 2480, 2250, 2500, 544, 5, 673, 28,
	27, 2493, 26, 14, 13, 2485, 1020, 2509, 12, 17,
	2505, 751, 750, 760, 761, 753, 754, 755, 756, 757,
	758, 759, 752, 2514, 2516, 25, 24, 23, 22, 72,
	71, 70, 69, 21, 11, 2522, 68, 67, 66, 20,
	19, 61, 2533, 2534, 2535, 2536, 1757, 2543, 62, 2548,
	55, 673, 54, 53, 60, 581, 52, 51, 50, 49,
	1052, 2549, 2553, 59, 2555, 58, 2547, 57, 751, 750,
	760, 761, 753, 754, 755, 756, 757, 758, 759, 752,
	56, 48, 2365, 2560, 47, 2563, 2501, 2573, 2561, 2578,
	46, 85, 84, 83, 2567, 673, 82, 673, 2538, 30,
	2500, 2572, 31, 32, 1052, 2579, 1052, 2581, 2584, 33,
	2569, 95, 94, 96, 92, 90, 93, 91, 89, 2590,
	40, 10, 2543, 673, 2591, 2598, 16, 2, 0, 0,
	0, 2475, 1052, 2602, 0, 2608, 751, 750, 760, 761,
	753, 754, 755, 756, 757, 758, 759, 752, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2615, 0, 0,
	0, 0, 0, 0, 2626, 0, 2625, 0, 0, 0,
	0, 0, 0, 0, 2637, 0, 2639, 0, 2638, 2640,
	1456, 1498, 0, 2626, 1445, 290, 1403, 1458, 1376, 1392,
	1466, 1393, 1394, 1431, 1355, 1413, 252, 1390, 0, 0,
	0, 0, 0, 0, 1448, 1347, 1379, 1380, 1349, 1386,
	1350, 1377, 1405, 197, 1375, 1416, 222, 1428, 1389, 1410,
	1464, 0, 0, 282, 236, 0, 2365, 1408, 1450, 1411,
	1436, 1402, 1432, 1363, 1424, 1459, 1391, 0, 1429, 1460,
	0, 0, 0, 0, 660, 661, 662, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 1427, 1454, 1388,
	0, 181, 1457, 1409, 1430, 0, 0, 1348, 1425, 0,
	1353, 1356, 1465, 1452, 1383, 1384, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 1412, 1433, 1399, 0, 0,
	0, 2593, 0, 0, 0, 0, 0, 1381, 0, 1421,
	0, 0, 0, 1358, 1354, 0, 1404, 0, 0, 169,
	287, 303, 179, 278, 316, 184, 285, 174, 251, 274,
	0, 1497, 171, 301, 284, 233, 216, 217, 170, 0,
	269, 195, 208, 191, 249, 0, 300, 328, 190, 319,
	1357, 311, 173, 1492, 310, 248, 297, 302, 234, 228,
	172, 299, 232, 227, 220, 199, 0, 212, 260, 226,
	261, 213, 238, 237, 239, 1476, 1477, 1478, 1479, 1480,
	339, 1488, 1489, 0, 1493, 1494, 1495, 1362, 0, 1382,
	1434, 0, 1346, 1443, 1451, 1401, 313, 1453, 1398, 1397,
	1483, 0, 1482, 286, 1484, 1485, 221, 1449, 1378, 1387,
	329, 1385, 272, 254, 1455, 1420, 1496, 270, 224, 298,
	262, 304, 288, 312, 266, 263, 164, 289, 193, 235,
	175, 177, 189, 196, 198, 200, 201, 244, 245, 257,
	277, 291, 292, 293, 192, 185, 271, 186, 210, 187,
	165, 279, 188, 167, 258, 296, 1481, 206, 267, 231,
	168, 230, 259, 295, 294, 176, 320, 326, 327, 331,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 334,
	0, 0, 0, 1490, 0, 1491, 325, 204, 162, 308,
	0, 250, 0, 1446, 1351, 1361, 1359, 1395, 1422, 1423,
	246, 324, 1438, 1442, 1439, 1467, 275, 0, 0, 0,
	0, 0, 215, 256, 1440, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1352, 0, 283, 306,
	318, 335, 338, 1499, 1500, 1501, 166, 337, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 309, 1396, 1369, 1407, 317,
	1372, 1370, 1437, 1371, 1426, 333, 240, 241, 242, 243,
	207, 0, 183, 336, 265, 1417, 1400, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1418, 1510, 1511, 1512, 1513, 1514,
	1374, 330, 203, 209, 0, 211, 182, 255, 205, 315,
	218, 1444, 247, 214, 280, 219, 225, 268, 314, 253,
	273, 180, 305, 281, 229, 1557, 0, 1368, 1373, 1367,
	1414, 1415, 1461, 1462, 1463, 1435, 1360, 1447, 0, 1364,
	1366, 1365, 0, 0, 0, 0, 0, 751, 750, 760,
	761, 753, 754, 755, 756, 757, 758, 759, 752, 0,
	0, 1441, 290, 466, 1419, 163, 0, 223, 1468, 264,
	202, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 0, 0, 0,
	197, 0, 0, 222, 0, 0, 0, 458, 0, 0,
	282, 236, 1974, 0, 0, 0, 512, 520, 1486, 1487,
	321, 322, 323, 307, 0, 194, 1509, 0, 420, 0,
	0, 451, 489, 488, 438, 447, 0, 0, 178, 439,
	0, 446, 440, 444, 443, 441, 442, 0, 504, 0,
	0, 0, 0, 0, 0, 411, 424, 2362, 428, 751,
	750, 760, 761, 753, 754, 755, 756, 757, 758, 759,
	752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	421, 422, 0, 0, 0, 0, 467, 0, 423, 0,
	0, 469, 448, 449, 0, 0, 169, 287, 303, 179,
	278, 316, 184, 285, 174, 251, 274, 0, 0, 171,
	301, 284, 233, 216, 217, 170, 0, 269, 195, 208,
	191, 249, 445, 465, 470, 190, 526, 463, 311, 173,
	0, 310, 248, 297, 302, 234, 228, 172, 299, 232,
	227, 220, 199, 527, 212, 260, 226, 261, 213, 238,
	237, 239, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 0, 0, 313, 0, 0, 510, 0, 0, 0,
	286, 0, 0, 221, 0, 0, 0, 464, 0, 272,
	254, 523, 412, 0, 270, 224, 298, 262, 304, 288,
	312, 266, 263, 164, 289, 193, 235, 175, 177, 189,
	196, 198, 200, 201, 244, 245, 257, 277, 291, 292,
	293, 192, 185, 271, 186, 210, 187, 165, 279, 188,
	167, 258, 296, 0, 206, 267, 231, 168, 230, 259,
	295, 294, 176, 320, 326, 327, 331, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 0, 325, 204, 162, 308, 508, 250, 0,
	522, 503, 505, 506, 509, 513, 514, 515, 516, 517,
	519, 521, 525, 275, 0, 0, 0, 0, 0, 215,
	256, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 306, 318, 335, 338,
	0, 0, 0, 166, 337, 0, 2363, 0, 0, 0,
	2364, 0, 524, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 468, 240, 241, 242, 243, 511, 0, 183,
	336, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 203,
	209, 0, 211, 182, 255, 205, 315, 218, 0, 247,
	214, 280, 219, 225, 268, 314, 253, 273, 180, 305,
	281, 229, 0, 0, 533, 507, 532, 534, 535, 531,
	536, 537, 518, 430, 0, 473, 529, 528, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 223, 0, 264, 202, 496, 477,
	478, 479, 429, 480, 475, 476, 497, 471, 493, 494,
	453, 456, 481, 492, 482, 495, 498, 499, 538, 539,
	540, 485, 500, 491, 490, 483, 472, 501, 502, 457,
	455, 486, 487, 474, 290, 466, 0, 321, 322, 323,
	307, 0, 194, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	0, 0, 197, 0, 0, 222, 0, 0, 0, 458,
	0, 0, 282, 236, 0, 0, 0, 0, 512, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	420, 0, 0, 451, 489, 488, 438, 447, 0, 0,
	178, 439, 0, 446, 440, 444, 443, 441, 442, 0,
	504, 0, 0, 0, 0, 0, 0, 411, 424, 0,
	428, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 421, 422, 0, 0, 0, 0, 467, 0,
	423, 0, 0, 469, 448, 449, 0, 0, 169, 287,
	303, 179, 278, 316, 184, 285, 174, 251, 274, 0,
	0, 171, 301, 284, 233, 216, 217, 170, 0, 269,
	195, 208, 191, 249, 445, 465, 470, 190, 526, 463,
	311, 173, 0, 310, 248, 297, 302, 234, 228, 172,
	299, 232, 227, 220, 199, 527, 212, 260, 226, 261,
	213, 238, 237, 239, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 461, 0, 0, 313, 0, 0, 510, 0,
	0, 0, 286, 0, 0, 221, 0, 0, 0, 464,
	0, 272, 254, 523, 412, 0, 270, 224, 298, 262,
	304, 288, 312, 266, 263, 164, 289, 193, 235, 175,
	177, 189, 196, 198, 200, 201, 244, 245, 257, 277,
	291, 292, 293, 192, 185, 271, 186, 210, 187, 165,
	279, 188, 167, 258, 296, 0, 206, 267, 231, 168,
	230, 259, 295, 294, 176, 320, 326, 327, 331, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 334, 0,
	0, 0, 1147, 1146, 1148, 325, 204, 162, 308, 508,
	250, 0, 522, 503, 505, 506, 509, 513, 514, 515,
	516, 517, 519, 521, 525, 275, 0, 0, 0, 0,
	0, 215, 256, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 306, 318,
	335, 338, 0, 0, 0, 166, 337, 0, 0, 0,
	0, 0, 0, 0, 524, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 468, 240, 241, 242, 243, 511,
	0, 183, 336, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 203, 209, 0, 211, 182, 255, 205, 315, 218,
	0, 247, 214, 280, 219, 225, 268, 314, 253, 273,
	180, 305, 281, 229, 0, 0, 533, 507, 532, 534,
	535, 531, 536, 537, 518, 430, 0, 473, 529, 528,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 223, 0, 264, 202,
	496, 477, 478, 479, 429, 480, 475, 476, 497, 471,
	493, 494, 453, 456, 481, 492, 482, 495, 498, 499,
	538, 539, 540, 485, 500, 491, 490, 483, 472, 501,
	502, 457, 455, 486, 487, 474, 290, 466, 0, 321,
	322, 323, 307, 0, 194, 0, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 0, 0, 0, 197, 0, 0, 222, 0, 0,
	0, 458, 0, 0, 282, 236, 0, 0, 0, 0,
	512, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 420, 0, 0, 451, 489, 488, 438, 447,
	0, 0, 178, 439, 0, 446, 440, 444, 443, 441,
	442, 0, 504, 0, 0, 0, 0, 0, 0, 411,
	424, 0, 428, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 421, 422, 0, 0, 0, 0,
	467, 0, 423, 0, 0, 469, 448, 449, 0, 0,
	169, 287, 303, 179, 278, 316, 184, 285, 174, 251,
	274, 0, 0, 171, 301, 284, 233, 216, 217, 170,
	0, 269, 195, 208, 191, 249, 445, 465, 470, 190,
	526, 463, 311, 173, 0, 310, 248, 297, 302, 234,
	228, 172, 299, 232, 227, 220, 199, 527, 212, 260,
	226, 261, 213, 238, 237, 239, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 461, 0, 0, 313, 0, 0,
	510, 0, 0, 0, 286, 0, 0, 221, 0, 0,
	0, 464, 0, 272, 254, 523, 412, 0, 270, 224,
	298, 262, 304, 288, 312, 266, 263, 164, 289, 193,
	235, 175, 177, 189, 196, 198, 200, 201, 244, 245,
	257, 277, 291, 292, 293, 192, 185, 271, 186, 210,
	187, 165, 279, 188, 167, 258, 296, 0, 206, 267,
	231, 168, 230, 259, 295, 294, 176, 320, 326, 327,
	331, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 0, 325, 204, 162,
	308, 508, 250, 0, 522, 503, 505, 506, 509, 513,
	514, 515, 516, 517, 519, 521, 525, 275, 0, 0,
	0, 0, 0, 215, 256, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	306, 318, 335, 338, 0, 0, 0, 166, 337, 0,
	2363, 0, 0, 0, 2364, 0, 524, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 468, 240, 241, 242,
	243, 511, 0, 183, 336, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 203, 209, 0, 211, 182, 255, 205,
	315, 218, 0, 247, 214, 280, 219, 225, 268, 314,
	253, 273, 180, 305, 281, 229, 0, 0, 533, 507,
	532, 534, 535, 531, 536, 537, 518, 430, 0, 473,
	529, 528, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 223, 0,
	264, 202, 496, 477, 478, 479, 429, 480, 475, 476,
	497, 471, 493, 494, 453, 456, 481, 492, 482, 495,
	498, 499, 538, 539, 540, 485, 500, 491, 490, 483,
	472, 501, 502, 457, 455, 486, 487, 474, 290, 466,
	0, 321, 322, 323, 307, 0, 194, 0, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 0, 0, 197, 1208, 0, 222,
	0, 0, 0, 458, 0, 0, 282, 236, 0, 0,
	0, 0, 512, 520, 0, 0, 0, 0, 0, 0,
	0, 1289, 0, 0, 420, 0, 0, 451, 489, 488,
	438, 447, 0, 0, 178, 439, 0, 446, 440, 444,
	443, 441, 442, 0, 504, 0, 0, 0, 0, 0,
	0, 411, 424, 0, 428, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 421, 422, 0, 0,
	0, 0, 467, 0, 423, 0, 0, 1290, 448, 449,
	0, 0, 169, 287, 303, 179, 278, 316, 184, 285,
	174, 251, 274, 0, 0, 171, 301, 284, 233, 216,
	217, 170, 0, 269, 195, 208, 191, 249, 445, 465,
	470, 190, 526, 463, 311, 173, 0, 310, 248, 297,
	302, 234, 228, 172, 299, 232, 227, 220, 199, 527,
	212, 260, 226, 261, 213, 238, 237, 239, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 0, 0, 313,
	0, 0, 510, 0, 0, 0, 286, 0, 0, 221,
	0, 0, 0, 464, 0, 272, 254, 523, 412, 0,
	270, 224, 298, 262, 304, 288, 312, 266, 263, 164,
	289, 193, 235, 175, 177, 189, 196, 198, 200, 201,
	244, 245, 257, 277, 291, 292, 293, 192, 185, 271,
	186, 210, 187, 165, 279, 188, 167, 258, 296, 0,
	206, 267, 231, 168, 230, 259, 295, 294, 176, 320,
	326, 327, 331, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 0, 325,
	204, 162, 308, 508, 250, 0, 522, 503, 505, 506,
	509, 513, 514, 515, 516, 517, 519, 521, 525, 275,
	0, 0, 0, 0, 0, 215, 256, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 306, 318, 335, 338, 0, 0, 0, 166,
	337, 0, 0, 0, 0, 0, 0, 0, 524, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 468, 240,
	241, 242, 243, 511, 0, 183, 336, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 203, 209, 0, 211, 182,
	255, 205, 315, 218, 0, 247, 214, 280, 219, 225,
	268, 314, 253, 273, 180, 305, 281, 229, 0, 0,
	533, 507, 532, 534, 535, 531, 536, 537, 518, 430,
	0, 473, 529, 528, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	223, 0, 264, 202, 496, 477, 478, 479, 429, 480,
	475, 476, 497, 471, 493, 494, 453, 456, 481, 492,
	482, 495, 498, 499, 538, 539, 540, 485, 500, 491,
	490, 483, 472, 501, 502, 457, 455, 486, 487, 474,
	115, 290, 466, 321, 322, 323, 307, 0, 194, 0,
	0, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 0, 0, 0, 197,
	0, 0, 222, 0, 0, 0, 458, 0, 0, 282,
	236, 0, 0, 0, 0, 512, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	451, 489, 488, 438, 447, 0, 0, 178, 439, 0,
	446, 440, 444, 443, 441, 442, 0, 504, 0, 0,
	0, 0, 0, 0, 411, 424, 0, 428, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 421,
	422, 0, 0, 0, 0, 467, 0, 423, 0, 0,
	469, 448, 449, 0, 0, 169, 287, 303, 179, 278,
	316, 184, 285, 174, 251, 274, 0, 0, 171, 301,
	284, 233, 216, 217, 170, 0, 269, 195, 208, 191,
	249, 445, 465, 470, 190, 526, 463, 311, 173, 0,
	310, 248, 297, 302, 234, 228, 172, 299, 232, 227,
	220, 199, 527, 212, 260, 226, 261, 213, 238, 237,
	239, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	0, 0, 313, 0, 0, 510, 0, 0, 0, 286,
	0, 0, 221, 0, 0, 0, 464, 0, 272, 254,
	523, 412, 0, 270, 224, 298, 262, 304, 288, 312,
	266, 263, 164, 289, 193, 235, 175, 177, 189, 196,
	198, 200, 201, 244, 245, 257, 277, 291, 292, 293,
	192, 185, 271, 186, 210, 187, 165, 279, 188, 167,
	258, 296, 0, 206, 267, 231, 168, 230, 259, 295,
	294, 176, 320, 326, 327, 331, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 0, 325, 204, 162, 308, 508, 250, 0, 522,
	503, 505, 506, 509, 513, 514, 515, 516, 517, 519,
	521, 525, 275, 0, 0, 0, 0, 0, 215, 256,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 306, 318, 335, 338, 0,
	0, 0, 166, 337, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 468, 240, 241, 242, 243, 511, 0, 183, 336,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 203, 209,
	0, 211, 182, 255, 205, 315, 218, 0, 247, 214,
	280, 219, 225, 268, 314, 253, 273, 180, 305, 281,
	229, 0, 0, 533, 507, 532, 534, 535, 531, 536,
	537, 518, 430, 0, 473, 529, 528, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 223, 88, 264, 202, 496, 477, 478,
	479, 429, 480, 475, 476, 497, 471, 493, 494, 453,
	456, 481, 492, 482, 495, 498, 499, 538, 539, 540,
	485, 500, 491, 490, 483, 472, 501, 502, 457, 455,
	486, 487, 474, 290, 466, 0, 321, 322, 323, 307,
	0, 194, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 0,
	0, 197, 2592, 0, 222, 0, 0, 0, 458, 0,
	0, 282, 236, 0, 0, 0, 0, 512, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 0, 451, 489, 488, 438, 447, 0, 0, 178,
	439, 0, 446, 440, 444, 443, 441, 442, 0, 504,
	0, 0, 0, 0, 0, 0, 411, 424, 0, 428,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 421, 422, 0, 0, 0, 0, 467, 0, 423,
	0, 0, 469, 448, 449, 0, 0, 169, 287, 303,
	179, 278, 316, 184, 285, 174, 251, 274, 0, 0,
	171, 301, 284, 233, 216, 217, 170, 0, 269, 195,
	208, 191, 249, 445, 465, 470, 190, 526, 463, 311,
	173, 0, 310, 248, 297, 302, 234, 228, 172, 299,
	232, 227, 220, 199, 527, 212, 260, 226, 261, 213,
	238, 237, 239, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 461, 0, 0, 313, 0, 0, 510, 0, 0,
	0, 286, 0, 0, 221, 0, 0, 0, 464, 0,
	272, 254, 523, 412, 0, 270, 224, 298, 262, 304,
	288, 312, 266, 263, 164, 289, 193, 235, 175, 177,
	189, 196, 198, 200, 201, 244, 245, 257, 277, 291,
	292, 293, 192, 185, 271, 186, 210, 187, 165, 279,
	188, 167, 258, 296, 0, 206, 267, 231, 168, 230,
	259, 295, 294, 176, 320, 326, 327, 331, 0, 332,
	0, 0, 0, 0, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 0, 325, 204, 162, 308, 508, 250,
	0, 522, 503, 505, 506, 509, 513, 514, 515, 516,
	517, 519, 521, 525, 275, 0, 0, 0, 0, 0,
	215, 256, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 306, 318, 335,
	338, 0, 0, 0, 166, 337, 0, 0, 0, 0,
	0, 0, 0, 524, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 468, 240, 241, 242, 243, 511, 0,
	183, 336, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	203, 209, 0, 211, 182, 255, 205, 315, 218, 0,
	247, 214, 280, 219, 225, 268, 314, 253, 273, 180,
	305, 281, 229, 0, 0, 533, 507, 532, 534, 535,
	531, 536, 537, 518, 430, 0, 473, 529, 528, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 223, 0, 264, 202, 496,
	477, 478, 479, 429, 480, 475, 476, 497, 471, 493,
	494, 453, 456, 481, 492, 482, 495, 498, 499, 538,
	539, 540, 485, 500, 491, 490, 483, 472, 501, 502,
	457, 455, 486, 487, 474, 290, 466, 0, 321, 322,
	323, 307, 0, 194, 0, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 0, 0, 197, 1208, 0, 222, 0, 0, 0,
	458, 0, 0, 282, 236, 0, 0, 0, 0, 512,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 451, 489, 488, 438, 447, 0,
	0, 178, 439, 0, 446, 440, 444, 443, 441, 442,
	0, 504, 0, 0, 0, 0, 0, 0, 411, 424,
	0, 428, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 421, 422, 0, 0, 0, 0, 467,
	0, 423, 0, 0, 469, 448, 449, 0, 0, 169,
	287, 303, 179, 278, 316, 184, 285, 174, 251, 274,
	0, 0, 171, 301, 284, 233, 216, 217, 170, 0,
	269, 195, 208, 191, 249, 445, 465, 470, 190, 526,
	463, 311, 173, 0, 310, 248, 297, 302, 234, 228,
	172, 299, 232, 227, 220, 199, 527, 212, 260, 226,
	261, 213, 238, 237, 239, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 0, 0, 313, 0, 0, 510,
	0, 0, 0, 286, 0, 0, 221, 0, 0, 0,
	464, 0, 272, 254, 523, 412, 0, 270, 224, 298,
	262, 304, 288, 312, 266, 263, 164, 289, 193, 235,
	175, 177, 189, 196, 198, 200, 201, 244, 245, 257,
	277, 291, 292, 293, 192, 185, 271, 186, 210, 187,
	165, 279, 188, 167, 258, 296, 0, 206, 267, 231,
	168, 230, 259, 295, 294, 176, 320, 326, 327, 331,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 0, 325, 204, 162, 308,
	508, 250, 0, 522, 503, 505, 506, 509, 513, 514,
	515, 516, 517, 519, 521, 525, 275, 0, 0, 0,
	0, 0, 215, 256, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 306,
	318, 335, 338, 0, 0, 0, 166, 337, 0, 0,
	0, 0, 0, 0, 0, 524, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 468, 240, 241, 242, 243,
	511, 0, 183, 336, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 203, 209, 0, 211, 182, 255, 205, 315,
	218, 0, 247, 214, 280, 219, 225, 268, 314, 253,
	273, 180, 305, 281, 229, 0, 0, 533, 507, 532,
	534, 535, 531, 536, 537, 518, 430, 0, 473, 529,
	528, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 223, 0, 264,
	202, 496, 477, 478, 479, 429, 480, 475, 476, 497,
	471, 493, 494, 453, 456, 481, 492, 482, 495, 498,
	499, 538, 539, 540, 485, 500, 491, 490, 483, 472,
	501, 502, 457, 455, 486, 487, 474, 290, 466, 0,
	321, 322, 323, 307, 0, 194, 0, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 0, 0, 0, 197, 0, 0, 222, 0,
	0, 0, 458, 0, 0, 282, 236, 0, 0, 0,
	0, 512, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 451, 489, 488, 438,
	447, 0, 0, 178, 439, 0, 446, 440, 444, 443,
	441, 442, 0, 504, 0, 0, 0, 0, 0, 0,
	411, 424, 0, 428, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 421, 422, 986, 0, 0,
	0, 467, 0, 423, 0, 0, 469, 448, 449, 0,
	0, 169, 287, 303, 179, 278, 316, 184, 285, 174,
	251, 274, 0, 0, 171, 301, 284, 233, 216, 217,
	170, 0, 269, 195, 208, 191, 249, 445, 465, 470,
	190, 526, 463, 311, 173, 0, 310, 248, 297, 302,
	234, 228, 172, 299, 232, 227, 220, 199, 527, 212,
	260, 226, 261, 213, 238, 237, 239, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 0, 0, 313, 0,
	0, 510, 0, 0, 0, 286, 0, 0, 221, 0,
	0, 0, 464, 0, 272, 254, 523, 412, 0, 270,
	224, 298, 262, 304, 288, 312, 266, 263, 164, 289,
	193, 235, 175, 177, 189, 196, 198, 200, 201, 244,
	245, 257, 277, 291, 292, 293, 192, 185, 271, 186,
	210, 187, 165, 279, 188, 167, 258, 296, 0, 206,
	267, 231, 168, 230, 259, 295, 294, 176, 320, 326,
	327, 331, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 0, 325, 204,
	162, 308, 508, 250, 0, 522, 503, 505, 506, 509,
	513, 514, 515, 516, 517, 519, 521, 525, 275, 0,
	0, 0, 0, 0, 215, 256, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 306, 318, 335, 338, 0, 0, 0, 166, 337,
	0, 0, 0, 0, 0, 0, 0, 524, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 468, 240, 241,
	242, 243, 511, 0, 183, 336, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 203, 209, 0, 211, 182, 255,
	205, 315, 218, 0, 247, 214, 280, 219, 225, 268,
	314, 253, 273, 180, 305, 281, 229, 0, 0, 533,
	507, 532, 534, 535, 531, 536, 537, 518, 430, 0,
	473, 529, 528, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 223,
	0, 264, 202, 496, 477, 478, 479, 429, 480, 475,
	476, 497, 471, 493, 494, 453, 456, 481, 492, 482,
	495, 498, 499, 538, 539, 540, 485, 500, 491, 490,
	483, 472, 501, 502, 457, 455, 486, 487, 474, 0,
	0, 0, 321, 322, 323, 307, 0, 194, 290, 466,
	0, 0, 1576, 0, 0, 0, 0, 0, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 0, 0, 197, 0, 0, 222,
	0, 0, 0, 458, 0, 0, 282, 236, 0, 0,
	0, 0, 512, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 420, 0, 0, 451, 489, 488,
	438, 447, 0, 0, 178, 439, 0, 446, 440, 444,
	443, 441, 442, 0, 504, 0, 0, 0, 0, 0,
	0, 411, 424, 0, 428, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 421, 422, 0, 0,
	0, 0, 467, 0, 423, 0, 0, 469, 448, 449,
	0, 0, 169, 287, 303, 179, 278, 316, 184, 285,
	174, 251, 274, 0, 0, 171, 301, 284, 233, 216,
	217, 170, 0, 269, 195, 208, 191, 249, 445, 465,
	470, 190, 526, 463, 311, 173, 0, 310, 248, 297,
	302, 234, 228, 172, 299, 232, 227, 220, 199, 527,
	212, 260, 226, 261, 213, 238, 237, 239, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 0, 0, 313,
	0, 0, 510, 0, 0, 0, 286, 0, 0, 221,
	0, 0, 0, 464, 0, 272, 254, 523, 412, 0,
	270, 224, 298, 262, 304, 288, 312, 266, 263, 164,
	289, 193, 235, 175, 177, 189, 196, 198, 200, 201,
	244, 245, 257, 277, 291, 292, 293, 192, 185, 271,
	186, 210, 187, 165, 279, 188, 167, 258, 296, 0,
	206, 267, 231, 168, 230, 259, 295, 294, 176, 320,
	326, 327, 331, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 0, 325,
	204, 162, 308, 508, 250, 0, 522, 503, 505, 506,
	509, 513, 514, 515, 516, 517, 519, 521, 525, 275,
	0, 0, 0, 0, 0, 215, 256, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 306, 318, 335, 338, 0, 0, 0, 166,
	337, 0, 0, 0, 0, 0, 0, 0, 524, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 468, 240,
	241, 242, 243, 511, 0, 183, 336, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 203, 209, 0, 211, 182,
	255, 205, 315, 218, 0, 247, 214, 280, 219, 225,
	268, 314, 253, 273, 180, 305, 281, 229, 0, 0,
	533, 507, 532, 534, 535, 531, 536, 537, 518, 430,
	0, 473, 529, 528, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	223, 0, 264, 202, 496, 477, 478, 479, 429, 480,
	475, 476, 497, 471, 493, 494, 453, 456, 481, 492,
	482, 495, 498, 499, 538, 539, 540, 485, 500, 491,
	490, 483, 472, 501, 502, 457, 455, 486, 487, 474,
	290, 466, 0, 321, 322, 323, 307, 0, 194, 0,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 0, 0, 197, 0,
	0, 222, 0, 0, 0, 458, 0, 0, 282, 236,
	0, 0, 0, 0, 512, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 420, 0, 0, 451,
	489, 488, 438, 447, 0, 0, 178, 439, 0, 446,
	440, 444, 443, 441, 442, 0, 504, 0, 0, 0,
	0, 0, 0, 411, 424, 0, 428, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 421, 422,
	0, 0, 0, 0, 467, 0, 423, 0, 0, 469,
	448, 449, 0, 0, 169, 287, 303, 179, 278, 316,
	184, 285, 174, 251, 274, 0, 0, 171, 301, 284,
	233, 216, 217, 170, 0, 269, 195, 208, 191, 249,
	445, 465, 470, 190, 526, 463, 311, 173, 0, 310,
	248, 297, 302, 234, 228, 172, 299, 232, 227, 220,
	199, 527, 212, 260, 226, 261, 213, 238, 237, 239,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 461, 0,
	0, 313, 0, 0, 510, 0, 0, 0, 286, 0,
	0, 221, 0, 0, 0, 464, 0, 272, 254, 523,
	412, 0, 270, 224, 298, 262, 304, 288, 312, 266,
	263, 164, 289, 193, 235, 175, 177, 189, 196, 198,
	200, 201, 244, 245, 257, 277, 291, 292, 293, 192,
	185, 271, 186, 210, 187, 165, 279, 188, 167, 258,
	296, 0, 206, 267, 231, 168, 230, 259, 295, 294,
	176, 320, 326, 327, 331, 0, 332, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	0, 325, 204, 162, 308, 508, 250, 0, 522, 503,
	505, 506, 509, 513, 514, 515, 516, 517, 519, 521,
	525, 275, 0, 0, 0, 0, 0, 215, 256, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 306, 318, 335, 338, 0, 0,
	0, 166, 337, 0, 0, 0, 0, 0, 0, 0,
	524, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	468, 240, 241, 242, 243, 511, 0, 183, 336, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 203, 209, 0,
	211, 182, 255, 205, 315, 218, 0, 247, 214, 280,
	219, 225, 268, 314, 253, 273, 180, 305, 281, 229,
	0, 0, 533, 507, 532, 534, 535, 531, 536, 537,
	518, 430, 0, 473, 529, 528, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 223, 0, 264, 202, 496, 477, 478, 479,
	429, 480, 475, 476, 497, 471, 493, 494, 453, 456,
	481, 492, 482, 495, 498, 499, 538, 539, 540, 485,
	500, 491, 490, 483, 472, 501, 502, 457, 455, 486,
	487, 474, 290, 466, 0, 321, 322, 323, 307, 0,
	194, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 1070, 0, 0, 0, 427, 0, 0, 0,
	197, 0, 0, 222, 0, 0, 0, 458, 0, 0,
	282, 236, 0, 0, 0, 0, 512, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 420, 0,
	0, 451, 489, 488, 438, 447, 0, 0, 178, 439,
	0, 446, 440, 444, 443, 441, 442, 0, 504, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 428, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	421, 422, 0, 0, 0, 0, 467, 0, 423, 0,
	0, 469, 448, 449, 0, 0, 169, 287, 303, 179,
	278, 316, 184, 285, 174, 251, 274, 0, 0, 171,
	301, 284, 233, 216, 217, 170, 0, 269, 195, 208,
	191, 249, 445, 465, 470, 190, 526, 463, 311, 173,
	0, 310, 248, 297, 302, 234, 228, 172, 299, 232,
	227, 220, 199, 527, 212, 260, 226, 261, 213, 238,
	237, 239, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 0, 0, 313, 0, 0, 510, 0, 0, 0,
	286, 0, 0, 221, 0, 0, 0, 464, 0, 272,
	254, 523, 0, 0, 270, 224, 298, 262, 304, 288,
	312, 266, 263, 164, 289, 193, 235, 175, 177, 189,
	196, 198, 200, 201, 244, 245, 257, 277, 291, 292,
	293, 192, 185, 271, 186, 210, 187, 165, 279, 188,
	167, 258, 296, 0, 206, 267, 231, 168, 230, 259,
	295, 294, 176, 320, 1071, 1072, 331, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 0, 325, 204, 162, 308, 508, 250, 0,
	522, 503, 505, 506, 509, 513, 514, 515, 516, 517,
	519, 521, 525, 275, 0, 0, 0, 0, 0, 215,
	256, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 306, 318, 335, 338,
	0, 0, 0, 166, 337, 0, 0, 0, 0, 0,
	0, 0, 524, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 468, 240, 241, 242, 243, 511, 0, 183,
	336, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 203,
	209, 0, 211, 182, 255, 205, 315, 218, 0, 247,
	214, 280, 219, 225, 268, 314, 253, 273, 180, 305,
	281, 229, 0, 0, 533, 507, 532, 534, 535, 531,
	536, 537, 518, 430, 0, 473, 529, 528, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 223, 0, 264, 202, 496, 477,
	478, 479, 429, 480, 475, 476, 497, 471, 493, 494,
	453, 456, 481, 492, 482, 495, 498, 499, 538, 539,
	540, 485, 500, 491, 490, 483, 472, 501, 502, 457,
	455, 486, 487, 474, 290, 466, 0, 321, 322, 323,
	307, 0, 194, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	0, 0, 197, 0, 0, 222, 0, 0, 0, 458,
	0, 0, 282, 236, 0, 0, 0, 0, 512, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 451, 489, 488, 438, 447, 0, 0,
	178, 439, 0, 446, 440, 444, 443, 441, 442, 0,
	504, 0, 0, 0, 0, 0, 0, 411, 424, 0,
	428, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 421, 422, 0, 0, 0, 0, 467, 0,
	423, 0, 0, 469, 448, 449, 0, 0, 169, 287,
	303, 179, 278, 316, 184, 285, 174, 251, 274, 0,
	0, 171, 301, 284, 233, 216, 217, 170, 0, 269,
	195, 208, 191, 249, 445, 465, 470, 190, 526, 463,
	311, 173, 0, 310, 248, 297, 302, 234, 228, 172,
	299, 232, 227, 220, 199, 527, 212, 260, 226, 261,
	213, 238, 237, 239, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 461, 0, 0, 313, 0, 0, 510, 0,
	0, 0, 286, 0, 0, 221, 0, 0, 0, 464,
	0, 272, 254, 523, 412, 0, 270, 224, 298, 262,
	304, 288, 312, 266, 263, 164, 289, 193, 235, 175,
	177, 189, 196, 198, 200, 201, 244, 245, 257, 277,
	291, 292, 293, 192, 185, 271, 186, 210, 187, 165,
	279, 188, 167, 258, 296, 0, 206, 267, 231, 168,
	230, 259, 295, 294, 176, 320, 326, 327, 331, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 0, 325, 204, 162, 308, 508,
	250, 0, 522, 503, 505, 506, 509, 513, 514, 515,
	516, 517, 519, 521, 525, 275, 0, 0, 0, 0,
	0, 215, 256, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 306, 318,
	335, 338, 0, 0, 0, 166, 337, 0, 0, 0,
	0, 0, 0, 0, 524, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 468, 240, 241, 242, 243, 511,
	0, 183, 336, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 203, 209, 0, 211, 182, 255, 205, 315, 218,
	0, 247, 214, 280, 219, 225, 268, 314, 253, 273,
	180, 305, 281, 229, 0, 0, 533, 507, 532, 534,
	535, 531, 536, 537, 518, 430, 0, 473, 529, 528,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 223, 0, 264, 202,
	496, 477, 478, 479, 429, 480, 475, 476, 497, 471,
	493, 494, 453, 456, 481, 492, 482, 495, 498, 499,
	538, 539, 540, 485, 500, 491, 490, 483, 472, 501,
	502, 457, 455, 486, 487, 474, 290, 466, 0, 321,
	322, 323, 307, 0, 194, 0, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 0, 0, 0, 197, 0, 0, 222, 0, 0,
	0, 458, 0, 0, 282, 236, 0, 0, 0, 0,
	512, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 420, 0, 0, 451, 489, 488, 438, 447,
	0, 0, 178, 439, 0, 446, 440, 444, 443, 441,
	442, 0, 504, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 428, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 421, 422, 0, 0, 0, 0,
	467, 0, 423, 0, 0, 469, 448, 449, 0, 0,
	169, 287, 303, 179, 278, 316, 184, 285, 174, 251,
	274, 0, 0, 171, 301, 284, 233, 216, 217, 170,
	0, 269, 195, 208, 191, 249, 445, 465, 470, 190,
	526, 463, 311, 173, 0, 310, 248, 297, 302, 234,
	228, 172, 299, 232, 227, 220, 199, 527, 212, 260,
	226, 261, 213, 238, 237, 239, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 461, 0, 0, 313, 0, 0,
	510, 0, 0, 0, 286, 0, 0, 221, 0, 0,
	0, 464, 0, 272, 254, 523, 0, 0, 270, 224,
	298, 262, 304, 288, 312, 266, 263, 164, 289, 193,
	235, 175, 177, 189, 196, 198, 200, 201, 244, 245,
	257, 277, 291, 292, 293, 192, 185, 271, 186, 210,
	187, 165, 279, 188, 167, 258, 296, 0, 206, 267,
	231, 168, 230, 259, 295, 294, 176, 320, 326, 327,
	331, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 0, 325, 204, 162,
	308, 508, 250, 0, 522, 503, 505, 506, 509, 513,
	514, 515, 516, 517, 519, 521, 525, 275, 0, 0,
	0, 0, 0, 215, 256, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	306, 318, 335, 338, 0, 0, 0, 166, 337, 0,
	0, 0, 0, 0, 0, 0, 524, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 468, 240, 241, 242,
	243, 511, 0, 183, 336, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 203, 209, 0, 211, 182, 255, 205,
	315, 218, 0, 247, 214, 280, 219, 225, 268, 314,
	253, 273, 180, 305, 281, 229, 0, 0, 533, 507,
	532, 534, 535, 531, 536, 537, 518, 430, 0, 473,
	529, 528, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 223, 0,
	264, 202, 496, 477, 478, 479, 429, 480, 475, 476,
	497, 471, 493, 494, 453, 456, 481, 492, 482, 495,
	498, 499, 538, 539, 540, 485, 500, 491, 490, 483,
	472, 501, 502, 457, 455, 486, 487, 474, 0, 0,
	0, 321, 322, 323, 307, 0, 194, 115, 290, 35,
	105, 87, 0, 0, 0, 0, 0, 0, 0, 252,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 282, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 122, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 287, 303, 179, 278, 316, 184, 285,
	174, 251, 274, 0, 0, 171, 301, 284, 233, 216,
	217, 170, 0, 269, 195, 208, 191, 249, 0, 300,
	328, 190, 319, 0, 311, 173, 0, 310, 248, 297,
	302, 234, 228, 172, 299, 232, 227, 220, 199, 0,
	212, 260, 226, 261, 213, 238, 237, 239, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 221,
	0, 0, 0, 329, 0, 272, 254, 0, 0, 0,
	270, 224, 298, 262, 304, 288, 312, 266, 263, 164,
	289, 193, 235, 175, 177, 189, 196, 198, 200, 201,
	244, 245, 257, 277, 291, 292, 293, 192, 185, 271,
	186, 210, 187, 165, 279, 188, 167, 258, 296, 0,
	206, 267, 231, 168, 230, 259, 295, 294, 176, 320,
	326, 327, 331, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 0, 325,
	204, 162, 308, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 324, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 215, 256, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 306, 318, 335, 338, 0, 0, 0, 166,
	337, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 333, 240,
	241, 242, 243, 350, 352, 183, 336, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 203, 209, 0, 211, 182,
	255, 205, 315, 218, 0, 247, 214, 280, 219, 225,
	268, 314, 253, 273, 180, 305, 281, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 36, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	223, 88, 264, 202, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	290, 0, 0, 321, 322, 323, 307, 0, 194, 0,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 282, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 2012, 2015, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 287, 303, 179, 278, 316,
	184, 285, 174, 251, 274, 0, 0, 171, 301, 284,
	233, 216, 217, 170, 0, 269, 195, 208, 191, 249,
	0, 300, 328, 190, 319, 0, 311, 173, 0, 310,
	248, 297, 302, 234, 228, 172, 299, 232, 227, 220,
	199, 0, 212, 260, 226, 261, 213, 238, 237, 239,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2016, 313, 0, 0, 0, 2009, 0, 2008, 286, 2010,
	2013, 221, 0, 0, 0, 329, 0, 272, 254, 0,
	0, 0, 270, 224, 298, 262, 304, 288, 312, 266,
	263, 164, 289, 193, 235, 175, 177, 189, 196, 198,
	200, 201, 244, 245, 257, 277, 291, 292, 293, 192,
	185, 271, 186, 210, 187, 165, 279, 188, 167, 258,
	296, 2014, 206, 267, 231, 168, 230, 259, 295, 294,
	176, 320, 326, 327, 331, 0, 332, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	0, 325, 204, 162, 308, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 324, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 215, 256, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 306, 318, 335, 338, 0, 0,
	0, 166, 337, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	333, 240, 241, 242, 243, 207, 0, 183, 336, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 203, 209, 0,
	211, 182, 255, 205, 315, 218, 0, 247, 214, 280,
	219, 225, 268, 314, 253, 273, 180, 305, 281, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 223, 0, 264, 202, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 290, 0, 0, 321, 322, 323, 307, 0,
	194, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1313, 0, 0, 0, 0,
	197, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	282, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 1314, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 737, 738, 739, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 287, 303, 179,
	278, 316, 184, 285, 174, 251, 274, 0, 0, 171,
	301, 284, 233, 216, 217, 170, 0, 269, 195, 208,
	191, 249, 0, 300, 328, 190, 319, 0, 311, 173,
	0, 310, 248, 297, 302, 234, 228, 172, 299, 232,
	227, 220, 199, 0, 212, 260, 226, 261, 213, 238,
	237, 239, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 221, 0, 0, 0, 329, 0, 272,
	254, 0, 0, 0, 270, 224, 298, 262, 304, 288,
	312, 266, 263, 164, 289, 193, 235, 175, 177, 189,
	196, 198, 200, 201, 244, 245, 257, 277, 291, 292,
	293, 192, 185, 271, 186, 210, 187, 165, 279, 188,
	167, 258, 296, 0, 206, 267, 231, 168, 230, 259,
	295, 294, 176, 320, 326, 327, 331, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 0, 325, 204, 162, 308, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 324, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 215,
	256, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 306, 318, 335, 338,
	0, 0, 0, 166, 337, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 333, 240, 241, 242, 243, 207, 0, 183,
	336, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 203,
	209, 0, 211, 182, 255, 205, 315, 218, 0, 247,
	214, 280, 219, 225, 268, 314, 253, 273, 180, 305,
	281, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 223, 0, 264, 202, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 290, 0, 0, 321, 322, 323,
	307, 0, 194, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 620, 0, 222, 0, 0, 0, 0,
	0, 0, 282, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 628, 629, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 287,
	303, 179, 278, 316, 184, 285, 174, 251, 274, 0,
	0, 171, 301, 284, 233, 216, 217, 170, 0, 269,
	195, 208, 191, 249, 0, 300, 328, 190, 319, 606,
	311, 173, 605, 310, 248, 297, 302, 234, 228, 172,
	299, 232, 227, 220, 199, 0, 212, 260, 226, 261,
	213, 238, 237, 239, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 221, 0, 0, 0, 329,
	0, 272, 254, 0, 0, 0, 270, 224, 298, 262,
	304, 288, 312, 618, 263, 164, 289, 193, 235, 175,
	177, 189, 196, 198, 200, 201, 244, 245, 257, 277,
	291, 292, 293, 192, 185, 271, 186, 210, 187, 165,
	279, 188, 167, 258, 296, 0, 206, 267, 231, 168,
	230, 259, 295, 294, 176, 320, 326, 327, 331, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 0, 325, 204, 162, 308, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	324, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 215, 256, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 306, 318,
	335, 338, 0, 0, 0, 166, 337, 0, 0, 0,
	0, 0, 0, 619, 309, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 622, 240, 241, 242, 243, 207,
	0, 183, 336, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 203, 209, 0, 211, 182, 255, 205, 315, 218,
	0, 630, 625, 626, 219, 225, 268, 314, 253, 273,
	180, 305, 281, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 223, 0, 264, 202,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 115, 290, 0, 321,
	322, 323, 307, 0, 194, 0, 0, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 282, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 1335, 0, 122, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 287, 303, 179, 278, 316, 184, 285, 174,
	251, 274, 0, 0, 171, 301, 284, 233, 216, 217,
	170, 0, 269, 195, 208, 191, 249, 0, 300, 328,
	190, 319, 0, 311, 173, 0, 310, 248, 297, 302,
	234, 228, 172, 299, 232, 227, 220, 199, 0, 212,
	260, 226, 261, 213, 238, 237, 239, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 221, 0,
	0, 0, 329, 0, 272, 254, 0, 0, 0, 270,
	224, 298, 262, 304, 288, 312, 266, 263, 164, 289,
	193, 235, 175, 177, 189, 196, 198, 200, 201, 244,
	245, 257, 277, 291, 292, 293, 192, 185, 271, 186,
	210, 187, 165, 279, 188, 167, 258, 296, 0, 206,
	267, 231, 168, 230, 259, 295, 294, 176, 320, 326,
	327, 331, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 0, 325, 204,
	162, 308, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 324, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 215, 256, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 306, 318, 335, 338, 0, 0, 0, 166, 337,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 333, 240, 241,
	242, 243, 207, 0, 183, 336, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 203, 209, 0, 211, 182, 255,
	205, 315, 218, 0, 247, 214, 280, 219, 225, 268,
	314, 253, 273, 180, 305, 281, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 223,
	88, 264, 202, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 115,
	290, 0, 321, 322, 323, 307, 0, 194, 0, 0,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 282, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 1326, 0, 122,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 287, 303, 179, 278, 316,
	184, 285, 174, 251, 274, 0, 0, 171, 301, 284,
	233, 216, 217, 170, 0, 269, 195, 208, 191, 249,
	0, 300, 328, 190, 319, 0, 311, 173, 0, 310,
	248, 297, 302, 234, 228, 172, 299, 232, 227, 220,
	199, 0, 212, 260, 226, 261, 213, 238, 237, 239,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 221, 0, 0, 0, 329, 0, 272, 254, 0,
	0, 0, 270, 224, 298, 262, 304, 288, 312, 266,
	263, 164, 289, 193, 235, 175, 177, 189, 196, 198,
	200, 201, 244, 245, 257, 277, 291, 292, 293, 192,
	185, 271, 186, 210, 187, 165, 279, 188, 167, 258,
	296, 0, 206, 267, 231, 168, 230, 259, 295, 294,
	176, 320, 326, 327, 331, 0, 332, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	0, 325, 204, 162, 308, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 324, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 215, 256, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 306, 318, 335, 338, 0, 0,
	0, 166, 337, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	333, 240, 241, 242, 243, 207, 0, 183, 336, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 203, 209, 0,
	211, 182, 255, 205, 315, 218, 0, 247, 214, 280,
	219, 225, 268, 314, 253, 273, 180, 305, 281, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 223, 88, 264, 202, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 290, 0, 0, 321, 322, 323, 307, 0,
	194, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	282, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 628, 629, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 287, 303, 179,
	278, 316, 184, 285, 174, 251, 274, 0, 0, 171,
	301, 284, 233, 216, 217, 170, 0, 269, 195, 208,
	191, 249, 0, 300, 328, 190, 319, 606, 311, 173,
	605, 310, 248, 297, 302, 234, 228, 172, 299, 232,
	227, 220, 199, 0, 212, 260, 226, 261, 213, 238,
	237, 239, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 221, 0, 0, 0, 329, 0, 272,
	254, 0, 0, 0, 270, 224, 298, 262, 304, 288,
	312, 266, 263, 164, 289, 193, 235, 175, 177, 189,
	196, 198, 200, 201, 244, 245, 257, 277, 291, 292,
	293, 192, 185, 271, 186, 210, 187, 165, 279, 188,
	167, 258, 296, 0, 206, 267, 231, 168, 230, 259,
	295, 294, 176, 320, 326, 327, 331, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 0, 325, 204, 162, 308, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 324, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 215,
	256, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 306, 318, 335, 338,
	0, 0, 0, 166, 337, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 333, 240, 241, 242, 243, 207, 0, 183,
	336, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 203,
	209, 0, 211, 182, 255, 205, 315, 218, 0, 630,
	625, 626, 219, 225, 268, 314, 253, 273, 180, 305,
	281, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 223, 0, 264, 202, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 115, 290, 0, 321, 322, 323,
	307, 0, 194, 0, 0, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 282, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1268, 0, 0, 122, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	287, 303, 179, 278, 316, 184, 285, 174, 251, 274,
	0, 0, 171, 301, 284, 233, 216, 217, 170, 0,
	269, 195, 208, 191, 249, 0, 300, 328, 190, 319,
	0, 311, 173, 0, 310, 248, 297, 302, 234, 228,
	172, 299, 232, 227, 220, 199, 0, 212, 260, 226,
	261, 213, 238, 237, 239, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 221, 0, 0, 0,
	329, 0, 272, 254, 0, 0, 0, 270, 224, 298,
	262, 304, 288, 312, 266, 263, 164, 289, 193, 235,
	175, 177, 189, 196, 198, 200, 201, 244, 245, 257,
	277, 291, 292, 293, 192, 185, 271, 186, 210, 187,
	165, 279, 188, 167, 258, 296, 0, 206, 267, 231,
	168, 230, 259, 295, 294, 176, 320, 326, 327, 331,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 0, 325, 204, 162, 308,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 324, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 215, 256, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 306,
	318, 335, 338, 0, 0, 0, 166, 337, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 333, 240, 241, 242, 243,
	207, 0, 183, 336, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 203, 209, 0, 211, 182, 255, 205, 315,
	218, 0, 247, 214, 280, 219, 225, 268, 314, 253,
	273, 180, 305, 281, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 223, 88, 264,
	202, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 290, 0, 0,
	321, 322, 323, 307, 0, 194, 0, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 970, 0, 222, 0,
	0, 0, 0, 0, 0, 282, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 0, 0, 968,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 966, 0, 0, 0,
	0, 169, 287, 303, 179, 278, 316, 184, 285, 174,
	251, 274, 0, 0, 171, 301, 284, 233, 216, 217,
	170, 0, 269, 195, 208, 191, 249, 0, 300, 328,
	190, 319, 0, 311, 173, 0, 310, 248, 297, 302,
	234, 228, 172, 299, 232, 227, 220, 199, 0, 212,
	260, 226, 261, 213, 238, 237, 239, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 221, 0,
	0, 0, 329, 0, 272, 254, 0, 0, 0, 270,
	224, 298, 262, 304, 288, 312, 266, 263, 164, 289,
	193, 235, 175, 177, 189, 196, 198, 200, 201, 244,
	245, 257, 277, 291, 292, 293, 192, 185, 271, 186,
	210, 187, 165, 279, 188, 167, 258, 296, 0, 206,
	267, 231, 168, 230, 259, 295, 294, 176, 320, 326,
	327, 331, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 0, 325, 204,
	162, 308, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 324, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 215, 256, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 306, 318, 335, 338, 0, 0, 0, 166, 337,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 333, 240, 241,
	242, 243, 207, 0, 183, 336, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 203, 209, 0, 211, 182, 255,
	205, 315, 218, 0, 247, 214, 280, 219, 225, 268,
	314, 253, 273, 180, 305, 281, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 223,
	0, 264, 202, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 290,
	0, 0, 321, 322, 323, 307, 0, 194, 0, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 964, 0,
	222, 0, 0, 0, 0, 0, 0, 282, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 0,
	0, 968, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 966, 0,
	0, 0, 0, 169, 287, 303, 179, 278, 316, 184,
	285, 174, 251, 274, 0, 0, 171, 301, 284, 233,
	216, 217, 170, 0, 269, 195, 208, 191, 249, 0,
	300, 328, 190, 319, 0, 311, 173, 0, 310, 248,
	297, 302, 234, 228, 172, 299, 232, 227, 220, 199,
	0, 212, 260, 226, 261, 213, 238, 237, 239, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	221, 0, 0, 0, 329, 0, 272, 254, 0, 0,
	0, 270, 224, 298, 262, 304, 288, 312, 266, 263,
	164, 289, 193, 235, 175, 177, 189, 196, 198, 200,
	201, 244, 245, 257, 277, 291, 292, 293, 192, 185,
	271, 186, 210, 187, 165, 279, 188, 167, 258, 296,
	0, 206, 267, 231, 168, 230, 259, 295, 294, 176,
	320, 326, 327, 331, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 0,
	325, 204, 162, 308, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 324, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 215, 256, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 306, 318, 335, 338, 0, 0, 0,
	166, 337, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 333,
	240, 241, 242, 243, 207, 0, 183, 336, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 203, 209, 0, 211,
	182, 255, 205, 315, 218, 0, 247, 214, 280, 219,
	225, 268, 314, 253, 273, 180, 305, 281, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 223, 0, 264, 202, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 290, 0, 0, 321, 322, 323, 307, 0, 194,
	0, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 282,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2496, 0,
	122, 489, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 287, 303, 179, 278,
	316, 184, 285, 174, 251, 274, 0, 0, 171, 301,
	284, 233, 216, 217, 170, 0, 269, 195, 208, 191,
	249, 0, 300, 328, 190, 319, 0, 311, 173, 0,
	310, 248, 297, 302, 234, 228, 172, 299, 232, 227,
	220, 199, 0, 212, 260, 226, 261, 213, 238, 237,
	239, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 221, 0, 0, 0, 329, 0, 272, 254,
	0, 0, 0, 270, 224, 298, 262, 304, 288, 312,
	266, 263, 164, 289, 193, 235, 175, 177, 189, 196,
	198, 200, 201, 244, 245, 257, 277, 291, 292, 293,
	192, 185, 271, 186, 210, 187, 165, 279, 188, 167,
	258, 296, 0, 206, 267, 231, 168, 230, 259, 295,
	294, 176, 320, 326, 327, 331, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 0, 325, 204, 162, 308, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 324, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 215, 256,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 306, 318, 335, 338, 0,
	0, 0, 166, 337, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 333, 240, 241, 242, 243, 207, 0, 183, 336,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 203, 209,
	0, 211, 182, 255, 205, 315, 218, 0, 247, 214,
	280, 219, 225, 268, 314, 253, 273, 180, 305, 281,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 223, 0, 264, 202, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 290, 0, 0, 321, 322, 323, 307,
	0, 194, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 282, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 0, 0, 968, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 966, 0, 0, 0, 0, 169, 287, 303,
	179, 278, 316, 184, 285, 174, 251, 274, 0, 0,
	171, 301, 284, 233, 216, 217, 170, 0, 269, 195,
	208, 191, 249, 0, 300, 328, 190, 319, 0, 311,
	173, 0, 310, 248, 297, 302, 234, 228, 172, 299,
	232, 227, 220, 199, 0, 212, 260, 226, 261, 213,
	238, 237, 239, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 221, 0, 0, 0, 329, 0,
	272, 254, 0, 0, 0, 270, 224, 298, 262, 304,
	288, 312, 266, 263, 164, 289, 193, 235, 175, 177,
	189, 196, 198, 200, 201, 244, 245, 257, 277, 291,
	292, 293, 192, 185, 271, 186, 210, 187, 165, 279,
	188, 167, 258, 296, 0, 206, 267, 231, 168, 230,
	259, 295, 294, 176, 320, 326, 327, 331, 0, 332,
	0, 0, 0, 0, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 0, 325, 204, 162, 308, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 324,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	215, 256, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 306, 318, 335,
	338, 0, 0, 0, 166, 337, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 333, 240, 241, 242, 243, 207, 0,
	183, 336, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	203, 209, 0, 211, 182, 255, 205, 315, 218, 0,
	247, 214, 280, 219, 225, 268, 314, 253, 273, 180,
	305, 281, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 223, 0, 264, 202, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 290, 0, 0, 321, 322,
	323, 307, 0, 194, 0, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 282, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 0, 0, 968, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2140, 0, 0, 0, 0, 169,
	287, 303, 179, 278, 316, 184, 285, 174, 251, 274,
	0, 0, 171, 301, 284, 233, 216, 217, 170, 0,
	269, 195, 208, 191, 249, 0, 300, 328, 190, 319,
	0, 311, 173, 0, 310, 248, 297, 302, 234, 228,
	172, 299, 232, 227, 220, 199, 0, 212, 260, 226,
	261, 213, 238, 237, 239, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 221, 0, 0, 0,
	329, 0, 272, 254, 0, 0, 0, 270, 224, 298,
	262, 304, 288, 312, 266, 263, 164, 289, 193, 235,
	175, 177, 189, 196, 198, 200, 201, 244, 245, 257,
	277, 291, 292, 293, 192, 185, 271, 186, 210, 187,
	165, 279, 188, 167, 258, 296, 0, 206, 267, 231,
	168, 230, 259, 295, 294, 176, 320, 326, 327, 331,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 0, 325, 204, 162, 308,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 324, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 215, 256, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 306,
	318, 335, 338, 0, 0, 0, 166, 337, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 333, 240, 241, 242, 243,
	207, 0, 183, 336, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 203, 209, 0, 211, 182, 255, 205, 315,
	218, 0, 247, 214, 280, 219, 225, 268, 314, 253,
	273, 180, 305, 281, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 223, 0, 264,
	202, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 290, 0, 0,
	321, 322, 323, 307, 0, 194, 0, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 1705, 0, 222, 0,
	0, 0, 0, 0, 0, 282, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 0, 0, 968,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 287, 303, 179, 278, 316, 184, 285, 174,
	251, 274, 0, 0, 171, 301, 284, 233, 216, 217,
	170, 0, 269, 195, 208, 191, 249, 0, 300, 328,
	190, 319, 0, 311, 173, 0, 310, 248, 297, 302,
	234, 228, 172, 299, 232, 227, 220, 199, 0, 212,
	260, 226, 261, 213, 238, 237, 239, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 221, 0,
	0, 0, 329, 0, 272, 254, 0, 0, 0, 270,
	224, 298, 262, 304, 288, 312, 266, 263, 164, 289,
	193, 235, 175, 177, 189, 196, 198, 200, 201, 244,
	245, 257, 277, 291, 292, 293, 192, 185, 271, 186,
	210, 187, 165, 279, 188, 167, 258, 296, 0, 206,
	267, 231, 168, 230, 259, 295, 294, 176, 320, 326,
	327, 331, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 0, 325, 204,
	162, 308, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 324, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 215, 256, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 306, 318, 335, 338, 0, 0, 0, 166, 337,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 333, 240, 241,
	242, 243, 207, 0, 183, 336, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 203, 209, 0, 211, 182, 255,
	205, 315, 218, 0, 247, 214, 280, 219, 225, 268,
	314, 253, 273, 180, 305, 281, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 223,
	0, 264, 202, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 290,
	0, 0, 321, 322, 323, 307, 0, 194, 0, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 282, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2601, 0, 122, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 287, 303, 179, 278, 316, 184,
	285, 174, 251, 274, 0, 0, 171, 301, 284, 233,
	216, 217, 170, 0, 269, 195, 208, 191, 249, 0,
	300, 328, 190, 319, 0, 311, 173, 0, 310, 248,
	297, 302, 234, 228, 172, 299, 232, 227, 220, 199,
	0, 212, 260, 226, 261, 213, 238, 237, 239, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	221, 0, 0, 0, 329, 0, 272, 254, 0, 0,
	0, 270, 224, 298, 262, 304, 288, 312, 266, 263,
	164, 289, 193, 235, 175, 177, 189, 196, 198, 200,
	201, 244, 245, 257, 277, 291, 292, 293, 192, 185,
	271, 186, 210, 187, 165, 279, 188, 167, 258, 296,
	0, 206, 267, 231, 168, 230, 259, 295, 294, 176,
	320, 326, 327, 331, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 0,
	325, 204, 162, 308, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 324, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 215, 256, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 306, 318, 335, 338, 0, 0, 0,
	166, 337, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 333,
	240, 241, 242, 243, 207, 0, 183, 336, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 203, 209, 0, 211,
	182, 255, 205, 315, 218, 0, 247, 214, 280, 219,
	225, 268, 314, 253, 273, 180, 305, 281, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 223, 0, 264, 202, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 290, 0, 0, 321, 322, 323, 307, 0, 194,
	0, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 282,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 489, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 287, 303, 179, 278,
	316, 184, 285, 174, 251, 274, 0, 0, 171, 301,
	284, 233, 216, 217, 170, 0, 269, 195, 208, 191,
	249, 0, 300, 328, 190, 319, 0, 311, 173, 0,
	310, 248, 297, 302, 234, 228, 172, 299, 232, 227,
	220, 199, 0, 212, 260, 226, 261, 213, 238, 237,
	239, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 221, 0, 0, 0, 329, 0, 272, 254,
	0, 0, 0, 270, 224, 298, 262, 304, 288, 312,
	266, 263, 164, 289, 193, 235, 175, 177, 189, 196,
	198, 200, 201, 244, 245, 257, 277, 291, 292, 293,
	192, 185, 271, 186, 210, 187, 165, 279, 188, 167,
	258, 296, 0, 206, 267, 231, 168, 230, 259, 295,
	294, 176, 320, 326, 327, 331, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 0, 325, 204, 162, 308, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 324, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 215, 256,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 306, 318, 335, 338, 0,
	0, 0, 166, 337, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 333, 240, 241, 242, 243, 207, 0, 183, 336,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 203, 209,
	0, 211, 182, 255, 205, 315, 218, 0, 247, 214,
	280, 219, 225, 268, 314, 253, 273, 180, 305, 281,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 223, 0, 264, 202, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 290, 0, 0, 321, 322, 323, 307,
	0, 194, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 282, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2510,
	0, 0, 122, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 287, 303,
	179, 278, 316, 184, 285, 174, 251, 274, 0, 0,
	171, 301, 284, 233, 216, 217, 170, 0, 269, 195,
	208, 191, 249, 0, 300, 328, 190, 319, 0, 311,
	173, 0, 310, 248, 297, 302, 234, 228, 172, 299,
	232, 227, 220, 199, 0, 212, 260, 226, 261, 213,
	238, 237, 239, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 221, 0, 0, 0, 329, 0,
	272, 254, 0, 0, 0, 270, 224, 298, 262, 304,
	288, 312, 266, 263, 164, 289, 193, 235, 175, 177,
	189, 196, 198, 200, 201, 244, 245, 257, 277, 291,
	292, 293, 192, 185, 271, 186, 210, 187, 165, 279,
	188, 167, 258, 296, 0, 206, 267, 231, 168, 230,
	259, 295, 294, 176, 320, 326, 327, 331, 0, 332,
	0, 0, 0, 0, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 0, 325, 204, 162, 308, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 324,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	215, 256, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 306, 318, 335,
	338, 0, 0, 0, 166, 337, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 333, 240, 241, 242, 243, 207, 0,
	183, 336, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	203, 209, 0, 211, 182, 255, 205, 315, 218, 0,
	247, 214, 280, 219, 225, 268, 314, 253, 273, 180,
	305, 281, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 223, 0, 264, 202, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 290, 0, 0, 321, 322,
	323, 307, 0, 194, 0, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 282, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2249, 0, 0, 122, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	287, 303, 179, 278, 316, 184, 285, 174, 251, 274,
	0, 0, 171, 301, 284, 233, 216, 217, 170, 0,
	269, 195, 208, 191, 249, 0, 300, 328, 190, 319,
	0, 311, 173, 0, 310, 248, 297, 302, 234, 228,
	172, 299, 232, 227, 220, 199, 0, 212, 260, 226,
	261, 213, 238, 237, 239, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 221, 0, 0, 0,
	329, 0, 272, 254, 0, 0, 0, 270, 224, 298,
	262, 304, 288, 312, 266, 263, 164, 289, 193, 235,
	175, 177, 189, 196, 198, 200, 201, 244, 245, 257,
	277, 291, 292, 293, 192, 185, 271, 186, 210, 187,
	165, 279, 188, 167, 258, 296, 0, 206, 267, 231,
	168, 230, 259, 295, 294, 176, 320, 326, 327, 331,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 0, 325, 204, 162, 308,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 324, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 215, 256, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 306,
	318, 335, 338, 0, 0, 0, 166, 337, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 333, 240, 241, 242, 243,
	207, 0, 183, 336, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 203, 209, 0, 211, 182, 255, 205, 315,
	218, 0, 247, 214, 280, 219, 225, 268, 314, 253,
	273, 180, 305, 281, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 223, 0, 264,
	202, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 290, 0, 0,
	321, 322, 323, 307, 0, 194, 0, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 282, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 287, 303, 179, 278, 316, 184, 285, 174,
	251, 274, 0, 0, 171, 301, 284, 233, 216, 217,
	170, 0, 269, 195, 208, 191, 249, 0, 300, 328,
	190, 319, 0, 311, 173, 0, 310, 248, 297, 302,
	234, 228, 172, 299, 232, 227, 220, 199, 0, 212,
	260, 226, 261, 213, 238, 237, 239, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 2438, 0, 0, 286, 0, 0, 221, 0,
	0, 0, 329, 0, 272, 254, 0, 0, 0, 270,
	224, 298, 262, 304, 288, 312, 266, 263, 164, 289,
	193, 235, 175, 177, 189, 196, 198, 200, 201, 244,
	245, 257, 277, 291, 292, 293, 192, 185, 271, 186,
	210, 187, 165, 279, 188, 167, 258, 296, 0, 206,
	267, 231, 168, 230, 259, 295, 294, 176, 320, 326,
	327, 331, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 0, 325, 204,
	162, 308, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 324, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 215, 256, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 306, 318, 335, 338, 0, 0, 0, 166, 337,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 333, 240, 241,
	242, 243, 207, 0, 183, 336, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 203, 209, 0, 211, 182, 255,
	205, 315, 218, 0, 247, 214, 280, 219, 225, 268,
	314, 253, 273, 180, 305, 281, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 223,
	0, 264, 202, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 290,
	0, 0, 321, 322, 323, 307, 0, 194, 0, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 282, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 287, 303, 179, 278, 316, 184,
	285, 174, 251, 274, 0, 0, 171, 301, 284, 233,
	216, 217, 170, 0, 269, 195, 208, 191, 249, 0,
	300, 328, 190, 319, 0, 311, 173, 0, 310, 248,
	297, 302, 234, 228, 172, 299, 232, 227, 220, 199,
	0, 212, 260, 226, 261, 213, 238, 237, 239, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 2258, 0, 0, 286, 0, 0,
	221, 0, 0, 0, 329, 0, 272, 254, 0, 0,
	0, 270, 224, 298, 262, 304, 288, 312, 266, 263,
	164, 289, 193, 235, 175, 177, 189, 196, 198, 200,
	201, 244, 245, 257, 277, 291, 292, 293, 192, 185,
	271, 186, 210, 187, 165, 279, 188, 167, 258, 296,
	0, 206, 267, 231, 168, 230, 259, 295, 294, 176,
	320, 326, 327, 331, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 0,
	325, 204, 162, 308, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 324, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 215, 256, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 306, 318, 335, 338, 0, 0, 0,
	166, 337, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 333,
	240, 241, 242, 243, 207, 0, 183, 336, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 203, 209, 0, 211,
	182, 255, 205, 315, 218, 0, 247, 214, 280, 219,
	225, 268, 314, 253, 273, 180, 305, 281, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 223, 0, 264, 202, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 290, 0, 0, 321, 322, 323, 307, 0, 194,
	0, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 282,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 287, 303, 179, 278,
	316, 184, 285, 174, 251, 274, 0, 0, 171, 301,
	284, 233, 216, 217, 170, 0, 269, 195, 208, 191,
	249, 0, 300, 328, 190, 319, 0, 311, 173, 0,
	310, 248, 297, 302, 234, 228, 172, 299, 232, 227,
	220, 199, 0, 212, 260, 226, 261, 213, 238, 237,
	239, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 221, 0, 0, 0, 329, 0, 272, 254,
	0, 0, 0, 270, 224, 298, 262, 304, 288, 312,
	266, 263, 164, 289, 193, 235, 175, 177, 189, 196,
	198, 200, 201, 244, 245, 257, 277, 291, 292, 293,
	192, 185, 271, 186, 210, 187, 165, 279, 188, 167,
	258, 296, 0, 206, 267, 231, 168, 230, 259, 295,
	294, 176, 320, 326, 327, 331, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 0, 325, 204, 162, 308, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 324, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 215, 256,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 306, 318, 335, 338, 0,
	0, 0, 166, 337, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 333, 240, 241, 242, 243, 207, 0, 183, 336,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 203, 209,
	0, 211, 182, 255, 205, 315, 218, 0, 247, 214,
	280, 219, 225, 268, 314, 253, 273, 180, 305, 281,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 223, 0, 264, 202, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 290, 0, 0, 321, 322, 323, 307,
	0, 194, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 282, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1268,
	0, 0, 122, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 287, 303,
	179, 278, 316, 184, 285, 174, 251, 274, 0, 0,
	171, 301, 284, 233, 216, 217, 170, 0, 269, 195,
	208, 191, 249, 0, 300, 328, 190, 319, 0, 311,
	173, 0, 310, 248, 297, 302, 234, 228, 172, 299,
	232, 227, 220, 199, 0, 212, 260, 226, 261, 213,
	238, 237, 239, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 221, 0, 0, 0, 329, 0,
	272, 254, 0, 0, 0, 270, 224, 298, 262, 304,
	288, 312, 266, 263, 164, 289, 193, 235, 175, 177,
	189, 196, 198, 200, 201, 244, 245, 257, 277, 291,
	292, 293, 192, 185, 271, 186, 210, 187, 165, 279,
	188, 167, 258, 296, 0, 206, 267, 231, 168, 230,
	259, 295, 294, 176, 320, 326, 327, 331, 0, 332,
	0, 0, 0, 0, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 0, 325, 204, 162, 308, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 324,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	215, 256, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 306, 318, 335,
	338, 0, 0, 0, 166, 337, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 333, 240, 241, 242, 243, 207, 0,
	183, 336, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	203, 209, 0, 211, 182, 255, 205, 315, 218, 0,
	247, 214, 280, 219, 225, 268, 314, 253, 273, 180,
	305, 281, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 223, 0, 264, 202, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 290, 0, 0, 321, 322,
	323, 307, 0, 194, 0, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 282, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	287, 303, 179, 278, 316, 184, 285, 174, 251, 274,
	0, 0, 171, 301, 284, 233, 216, 217, 170, 0,
	269, 195, 208, 191, 249, 0, 300, 328, 190, 319,
	0, 311, 173, 0, 310, 248, 297, 302, 234, 228,
	172, 299, 232, 227, 220, 199, 0, 212, 260, 226,
	261, 213, 238, 237, 239, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 221, 0, 0, 0,
	329, 0, 272, 254, 0, 0, 0, 270, 224, 298,
	262, 304, 288, 312, 266, 263, 164, 289, 193, 235,
	175, 177, 189, 196, 198, 200, 201, 244, 245, 257,
	277, 291, 292, 293, 192, 185, 271, 186, 210, 187,
	165, 279, 188, 167, 258, 296, 0, 206, 267, 231,
	168, 230, 259, 295, 294, 176, 320, 326, 327, 331,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 0, 325, 204, 162, 308,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 324, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 215, 256, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 306,
	318, 335, 338, 0, 0, 0, 166, 337, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 333, 240, 241, 242, 243,
	207, 0, 183, 336, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 203, 209, 0, 211, 182, 255, 205, 315,
	218, 0, 247, 214, 280, 219, 225, 268, 314, 253,
	273, 180, 305, 281, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 223, 0, 264,
	202, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 290, 0, 0,
	321, 322, 323, 307, 0, 194, 0, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 282, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 0, 0, 2020,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 287, 303, 179, 278, 316, 184, 285, 174,
	251, 274, 0, 0, 171, 301, 284, 233, 216, 217,
	170, 0, 269, 195, 208, 191, 249, 0, 300, 328,
	190, 319, 0, 311, 173, 0, 310, 248, 297, 302,
	234, 228, 172, 299, 232, 227, 220, 199, 0, 212,
	260, 226, 261, 213, 238, 237, 239, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 221, 0,
	0, 0, 329, 0, 272, 254, 0, 0, 0, 270,
	224, 298, 262, 304, 288, 312, 266, 263, 164, 289,
	193, 235, 175, 177, 189, 196, 198, 200, 201, 244,
	245, 257, 277, 291, 292, 293, 192, 185, 271, 186,
	210, 187, 165, 279, 188, 167, 258, 296, 0, 206,
	267, 231, 168, 230, 259, 295, 294, 176, 320, 326,
	327, 331, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 0, 325, 204,
	162, 308, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 324, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 215, 256, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 306, 318, 335, 338, 0, 0, 0, 166, 337,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 333, 240, 241,
	242, 243, 207, 0, 183, 336, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 203, 209, 0, 211, 182, 255,
	205, 315, 218, 0, 247, 214, 280, 219, 225, 268,
	314, 253, 273, 180, 305, 281, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 223,
	0, 264, 202, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 290,
	0, 0, 321, 322, 323, 307, 0, 194, 0, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 282, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 0,
	0, 968, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 287, 303, 179, 278, 316, 184,
	285, 174, 251, 274, 0, 0, 171, 301, 284, 233,
	216, 217, 170, 0, 269, 195, 208, 191, 249, 0,
	300, 328, 190, 319, 0, 311, 173, 0, 310, 248,
	297, 302, 234, 228, 172, 299, 232, 227, 220, 199,
	0, 212, 260, 226, 261, 213, 238, 237, 239, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	221, 0, 0, 0, 329, 0, 272, 254, 0, 0,
	0, 270, 224, 298, 262, 304, 288, 312, 266, 263,
	164, 289, 193, 235, 175, 177, 189, 196, 198, 200,
	201, 244, 245, 257, 277, 291, 292, 293, 192, 185,
	271, 186, 210, 187, 165, 279, 188, 167, 258, 296,
	0, 206, 267, 231, 168, 230, 259, 295, 294, 176,
	320, 326, 327, 331, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 0,
	325, 204, 162, 308, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 324, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 215, 256, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 306, 318, 335, 338, 0, 0, 0,
	166, 337, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 333,
	240, 241, 242, 243, 207, 0, 183, 336, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 203, 209, 0, 211,
	182, 255, 205, 315, 218, 0, 247, 214, 280, 219,
	225, 268, 314, 253, 273, 180, 305, 281, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 223, 0, 264, 202, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 290, 0, 0, 321, 322, 323, 307, 0, 194,
	0, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 282,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 287, 303, 179, 278,
	316, 184, 285, 174, 251, 274, 0, 0, 171, 301,
	284, 233, 216, 217, 170, 0, 269, 195, 208, 191,
	249, 0, 300, 328, 190, 319, 0, 311, 173, 0,
	310, 248, 297, 302, 234, 228, 172, 299, 232, 227,
	220, 199, 0, 212, 260, 226, 261, 213, 238, 237,
	239, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 221, 0, 0, 0, 329, 0, 272, 254,
	0, 0, 0, 270, 224, 298, 262, 304, 288, 312,
	266, 263, 164, 289, 193, 235, 175, 177, 189, 196,
	198, 200, 201, 244, 245, 257, 277, 291, 292, 293,
	192, 185, 271, 186, 210, 187, 165, 279, 188, 167,
	258, 296, 0, 206, 267, 231, 168, 230, 259, 295,
	294, 176, 320, 326, 327, 331, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 0, 325, 204, 162, 308, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 324, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 215, 256,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 306, 318, 335, 338, 0,
	0, 0, 166, 337, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 333, 240, 241, 242, 243, 207, 0, 183, 336,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 203, 209,
	0, 211, 182, 255, 205, 315, 218, 0, 247, 214,
	280, 219, 225, 268, 314, 253, 273, 180, 305, 281,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 223, 0, 264, 202, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 290, 0, 0, 321, 322, 323, 307,
	0, 194, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 282, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 0, 0, 1713, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 287, 303,
	179, 278, 316, 184, 285, 174, 251, 274, 0, 0,
	171, 301, 284, 233, 216, 217, 170, 0, 269, 195,
	208, 191, 249, 0, 300, 328, 190, 319, 0, 311,
	173, 0, 310, 248, 297, 302, 234, 228, 172, 299,
	232, 227, 220, 199, 0, 212, 260, 226, 261, 213,
	238, 237, 239, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 221, 0, 0, 0, 329, 0,
	272, 254, 0, 0, 0, 270, 224, 298, 262, 304,
	288, 312, 266, 263, 164, 289, 193, 235, 175, 177,
	189, 196, 198, 200, 201, 244, 245, 257, 277, 291,
	292, 293, 192, 185, 271, 186, 210, 187, 165, 279,
	188, 167, 258, 296, 0, 206, 267, 231, 168, 230,
	259, 295, 294, 176, 320, 326, 327, 331, 0, 332,
	0, 0, 0, 0, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 0, 325, 204, 162, 308, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 324,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	215, 256, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 306, 318, 335,
	338, 0, 0, 0, 166, 337, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 333, 240, 241, 242, 243, 207, 0,
	183, 336, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	203, 209, 0, 211, 182, 255, 205, 315, 218, 0,
	247, 214, 280, 219, 225, 268, 314, 253, 273, 180,
	305, 281, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 223, 0, 264, 202, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 0, 0, 0, 321, 322,
	323, 307, 290, 194, 0, 0, 1641, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	282, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 287, 303, 179,
	278, 316, 184, 285, 174, 251, 274, 0, 0, 171,
	301, 284, 233, 216, 217, 170, 0, 269, 195, 208,
	191, 249, 0, 300, 328, 190, 319, 0, 311, 173,
	0, 310, 248, 297, 302, 234, 228, 172, 299, 232,
	227, 220, 199, 0, 212, 260, 226, 261, 213, 238,
	237, 239, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 221, 0, 0, 0, 329, 0, 272,
	254, 0, 0, 0, 270, 224, 298, 262, 304, 288,
	312, 266, 263, 164, 289, 193, 235, 175, 177, 189,
	196, 198, 200, 201, 244, 245, 257, 277, 291, 292,
	293, 192, 185, 271, 186, 210, 187, 165, 279, 188,
	167, 258, 296, 0, 206, 267, 231, 168, 230, 259,
	295, 294, 176, 320, 326, 327, 331, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 0, 325, 204, 162, 308, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 324, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 215,
	256, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 306, 318, 335, 338,
	0, 0, 0, 166, 337, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 333, 240, 241, 242, 243, 207, 0, 183,
	336, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 203,
	209, 0, 211, 182, 255, 205, 315, 218, 0, 247,
	214, 280, 219, 225, 268, 314, 253, 273, 180, 305,
	281, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 223, 0, 264, 202, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 290, 0, 0, 321, 322, 323,
	307, 0, 194, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 282, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 287,
	303, 179, 278, 316, 184, 285, 174, 251, 274, 0,
	0, 171, 301, 284, 233, 216, 217, 170, 0, 269,
	195, 208, 191, 249, 0, 300, 328, 190, 319, 0,
	311, 173, 0, 310, 248, 297, 302, 234, 228, 172,
	299, 232, 227, 220, 199, 0, 212, 260, 226, 261,
	213, 238, 237, 239, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 1624, 0,
	0, 0, 286, 0, 0, 221, 0, 0, 0, 329,
	0, 272, 254, 0, 0, 0, 270, 224, 298, 262,
	304, 288, 312, 266, 263, 164, 289, 193, 235, 175,
	177, 189, 196, 198, 200, 201, 244, 245, 257, 277,
	291, 292, 293, 192, 185, 271, 186, 210, 187, 165,
	279, 188, 167, 258, 296, 0, 206, 267, 231, 168,
	230, 259, 295, 294, 176, 320, 326, 327, 331, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 0, 325, 204, 162, 308, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	324, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 215, 256, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 306, 318,
	335, 338, 0, 0, 0, 166, 337, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 333, 240, 241, 242, 243, 207,
	0, 183, 336, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 203, 209, 0, 211, 182, 255, 205, 315, 218,
	0, 247, 214, 280, 219, 225, 268, 314, 253, 273,
	180, 305, 281, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 223, 0, 264, 202,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 290, 0, 0, 321,
	322, 323, 307, 0, 194, 0, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 282, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 287, 303, 179, 278, 316, 184, 285, 174, 251,
	274, 0, 0, 171, 301, 284, 233, 216, 217, 170,
	0, 269, 195, 208, 191, 249, 0, 300, 328, 190,
	319, 0, 311, 173, 0, 310, 248, 297, 302, 234,
	228, 172, 299, 232, 227, 220, 199, 0, 212, 260,
	226, 261, 213, 238, 237, 239, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 221, 0, 0,
	0, 329, 0, 272, 254, 0, 0, 0, 270, 224,
	298, 262, 304, 288, 312, 266, 263, 164, 289, 193,
	235, 175, 177, 189, 196, 198, 200, 201, 244, 245,
	257, 277, 291, 292, 293, 192, 185, 271, 186, 210,
	187, 165, 279, 188, 167, 258, 296, 0, 206, 267,
	231, 168, 230, 259, 295, 294, 176, 320, 326, 327,
	331, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 0, 325, 204, 162,
	308, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 324, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 215, 256, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	306, 318, 335, 338, 0, 0, 0, 166, 337, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 333, 240, 241, 242,
	243, 207, 0, 183, 336, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 203, 209, 0, 211, 182, 255, 205,
	315, 218, 0, 247, 214, 280, 219, 225, 268, 314,
	253, 273, 180, 305, 281, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 574, 0, 0, 0, 163, 0, 223, 0,
	264, 202, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 290, 0,
	0, 321, 322, 323, 307, 0, 194, 0, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 282, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 122, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 287, 303, 179, 278, 316, 184, 285,
	174, 251, 274, 0, 0, 171, 301, 284, 233, 216,
	217, 170, 0, 269, 195, 208, 191, 249, 0, 300,
	328, 190, 319, 0, 311, 173, 0, 310, 248, 297,
	302, 234, 228, 172, 299, 232, 227, 220, 199, 0,
	212, 260, 226, 261, 213, 238, 237, 239, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 221,
	0, 0, 0, 329, 0, 272, 254, 0, 0, 0,
	270, 224, 298, 262, 304, 288, 312, 367, 263, 164,
	289, 193, 235, 175, 177, 189, 196, 198, 200, 201,
	244, 245, 257, 277, 291, 292, 293, 192, 185, 271,
	186, 210, 187, 165, 279, 188, 167, 258, 296, 0,
	206, 267, 231, 168, 230, 259, 295, 294, 176, 320,
	326, 327, 331, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 0, 325,
	204, 162, 308, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 324, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 215, 256, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 306, 318, 335, 338, 0, 0, 0, 166,
	337, 0, 0, 0, 0, 0, 0, 368, 309, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 333, 240,
	241, 242, 243, 207, 0, 183, 336, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 203, 209, 0, 211, 182,
	255, 205, 315, 218, 0, 247, 214, 280, 219, 225,
	268, 314, 253, 273, 180, 305, 281, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	223, 0, 264, 202, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	290, 0, 0, 321, 322, 323, 307, 0, 194, 0,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 282, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 287, 303, 179, 278, 316,
	184, 285, 174, 251, 274, 0, 0, 171, 301, 284,
	233, 216, 217, 170, 0, 269, 195, 208, 191, 249,
	0, 300, 328, 190, 319, 0, 311, 173, 0, 310,
	248, 297, 302, 234, 228, 172, 299, 232, 227, 220,
	199, 0, 212, 260, 226, 261, 213, 238, 237, 239,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 313, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 221, 0, 0, 0, 329, 0, 272, 254, 0,
	0, 0, 270, 224, 298, 262, 304, 288, 312, 266,
	263, 164, 289, 193, 235, 175, 177, 189, 196, 198,
	200, 201, 244, 245, 257, 277, 291, 292, 293, 192,
	185, 271, 186, 210, 187, 165, 279, 188, 167, 258,
	296, 0, 206, 267, 231, 168, 230, 259, 295, 294,
	176, 320, 326, 327, 331, 0, 332, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	0, 325, 204, 162, 308, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 324, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 215, 256, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 306, 318, 335, 338, 0, 0,
	0, 166, 337, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	333, 240, 241, 242, 243, 207, 0, 183, 336, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 203, 209, 0,
	211, 182, 255, 205, 315, 218, 0, 247, 214, 280,
	219, 225, 268, 314, 253, 273, 180, 305, 281, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 223, 0, 264, 202, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 290, 0, 0, 321, 322, 323, 307, 0,
	194, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	197, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	282, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 287, 303, 179,
	278, 316, 184, 285, 174, 251, 274, 0, 0, 171,
	301, 284, 233, 216, 217, 170, 0, 269, 195, 208,
	191, 249, 0, 300, 328, 190, 319, 0, 311, 173,
	0, 310, 248, 297, 302, 234, 228, 172, 299, 232,
	227, 220, 199, 0, 212, 260, 226, 261, 213, 238,
	237, 239, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 221, 0, 0, 0, 329, 0, 272,
	254, 0, 0, 0, 270, 224, 298, 262, 304, 288,
	312, 266, 263, 164, 289, 193, 235, 175, 177, 189,
	196, 198, 200, 201, 244, 245, 257, 277, 291, 292,
	293, 192, 185, 271, 186, 210, 187, 165, 279, 188,
	167, 258, 296, 0, 206, 267, 231, 168, 230, 259,
	295, 294, 176, 320, 326, 327, 331, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 0, 325, 204, 162, 308, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 324, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 215,
	256, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 306, 318, 335, 338,
	0, 0, 0, 166, 337, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 333, 240, 241, 242, 243, 207, 0, 183,
	336, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 203,
	209, 0, 211, 182, 255, 205, 315, 218, 0, 247,
	214, 280, 219, 225, 268, 314, 253, 273, 180, 305,
	281, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 223, 0, 264, 202, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 290, 0, 0, 321, 322, 323,
	307, 0, 194, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 282, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 287,
	303, 179, 278, 316, 184, 285, 174, 251, 274, 0,
	0, 171, 301, 284, 233, 216, 217, 170, 0, 269,
	195, 208, 191, 249, 0, 300, 328, 190, 319, 0,
	311, 173, 0, 310, 248, 297, 302, 234, 228, 172,
	299, 232, 227, 220, 199, 0, 212, 260, 226, 261,
	213, 238, 237, 239, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 221, 0, 0, 0, 329,
	0, 272, 254, 0, 0, 0, 270, 224, 298, 262,
	304, 288, 312, 266, 263, 164, 289, 193, 235, 175,
	177, 189, 196, 198, 200, 201, 244, 245, 257, 277,
	291, 292, 293, 192, 185, 271, 186, 210, 187, 165,
	279, 188, 167, 258, 296, 0, 206, 267, 231, 168,
	230, 259, 295, 294, 176, 320, 326, 327, 331, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 0, 325, 204, 162, 308, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	324, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 215, 256, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 306, 318,
	335, 338, 0, 0, 0, 166, 337, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 333, 240, 241, 242, 243, 207,
	0, 183, 336, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 203, 209, 0, 211, 182, 255, 205, 315, 218,
	0, 247, 214, 280, 219, 225, 268, 314, 253, 273,
	180, 305, 281, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 223, 0, 264, 202,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 290, 0, 0, 321,
	322, 323, 307, 0, 194, 0, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1684,
	0, 0, 0, 0, 197, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 282, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 660, 661, 662, 1686, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 287, 303, 179, 278, 316, 184, 285, 174, 251,
	274, 0, 0, 171, 301, 284, 233, 216, 217, 170,
	0, 269, 195, 208, 191, 249, 0, 300, 328, 190,
	319, 0, 311, 173, 0, 310, 248, 297, 302, 234,
	228, 172, 299, 232, 227, 220, 199, 0, 212, 260,
	226, 261, 213, 238, 237, 239, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 221, 0, 0,
	0, 329, 0, 272, 254, 0, 0, 0, 270, 224,
	298, 262, 304, 288, 312, 266, 263, 164, 289, 193,
	235, 175, 177, 189, 196, 198, 200, 201, 244, 245,
	257, 277, 291, 292, 293, 192, 185, 271, 186, 210,
	187, 165, 279, 188, 167, 258, 296, 0, 206, 267,
	231, 168, 230, 259, 295, 294, 176, 320, 326, 327,
	331, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 0, 325, 204, 162,
	308, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 324, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 215, 256, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	306, 318, 335, 338, 0, 0, 0, 166, 337, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 333, 240, 241, 242,
	243, 207, 0, 183, 336, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 330, 203, 209, 0, 211, 182, 255, 205,
	315, 218, 252, 247, 214, 280, 219, 225, 268, 314,
	253, 273, 180, 305, 281, 229, 0, 0, 0, 197,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 282,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	660, 661, 662, 1686, 0, 0, 163, 178, 223, 0,
	264, 202, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 307, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 287, 303, 179, 278,
	316, 184, 285, 174, 251, 274, 0, 0, 171, 301,
	284, 233, 216, 217, 170, 0, 269, 195, 208, 191,
	249, 0, 300, 328, 190, 319, 0, 311, 173, 0,
	310, 248, 297, 302, 234, 228, 172, 299, 232, 227,
	220, 199, 0, 212, 260, 226, 261, 213, 238, 237,
	239, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 221, 0, 0, 0, 329, 0, 272, 254,
	0, 0, 0, 270, 224, 298, 262, 304, 288, 312,
	266, 263, 164, 289, 193, 235, 175, 177, 189, 196,
	198, 200, 201, 244, 245, 257, 277, 291, 292, 293,
	192, 185, 271, 186, 210, 187, 165, 279, 188, 167,
	258, 296, 0, 206, 267, 231, 168, 230, 259, 295,
	294, 176, 320, 326, 327, 331, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 0, 325, 204, 162, 308, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 324, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 215, 256,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 306, 318, 335, 338, 0,
	0, 0, 166, 337, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 333, 240, 241, 242, 243, 207, 0, 183, 336,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 330, 203, 209,
	0, 211, 182, 255, 205, 315, 218, 252, 247, 214,
	280, 219, 225, 268, 314, 253, 273, 180, 305, 281,
	229, 0, 0, 0, 197, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 282, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 660, 661, 662, 0, 0,
	0, 163, 178, 223, 0, 264, 202, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 307,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 287, 303, 179, 278, 316, 184, 285, 174, 251,
	274, 0, 0, 171, 301, 284, 233, 216, 217, 170,
	0, 269, 195, 208, 191, 249, 0, 300, 328, 190,
	319, 0, 311, 173, 0, 310, 248, 297, 302, 234,
	228, 172, 299, 232, 227, 220, 199, 0, 212, 260,
	226, 261, 213, 238, 237, 239, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 221, 0, 0,
	0, 329, 0, 272, 254, 0, 0, 0, 270, 224,
	298, 262, 304, 288, 312, 266, 263, 164, 289, 193,
	235, 175, 177, 189, 196, 198, 200, 201, 244, 245,
	257, 277, 291, 292, 293, 192, 185, 271, 186, 210,
	187, 165, 279, 188, 167, 258, 296, 0, 206, 267,
	231, 168, 230, 259, 295, 294, 176, 320, 326, 327,
	331, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 0, 325, 204, 162,
	308, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 324, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 215, 256, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	306, 318, 335, 338, 0, 0, 844, 166, 337, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 333, 240, 241, 242,
	243, 207, 0, 183, 336, 265, 737, 738, 739, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 203, 209, 0, 211, 182, 255, 205,
	315, 218, 0, 247, 214, 280, 219, 225, 268, 314,
	253, 273, 180, 305, 281, 229, 0, 844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 832, 0, 0, 0,
	0, 1125, 0, 0, 0, 0, 163, 0, 223, 0,
	264, 202, 0, 0, 852, 856, 858, 860, 862, 863,
	865, 0, 869, 866, 867, 868, 0, 0, 847, 848,
	849, 850, 830, 831, 853, 0, 833, 0, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 845, 851,
	0, 321, 322, 323, 307, 844, 194, 855, 857, 859,
	861, 864, 0, 0, 0, 0, 0, 832, 0, 0,
	0, 822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 0, 852, 856, 858, 860, 862,
	863, 865, 846, 869, 866, 867, 868, 0, 0, 847,
	848, 849, 850, 830, 831, 853, 0, 833, 0, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 845,
	851, 0, 0, 0, 0, 0, 0, 0, 855, 857,
	859, 861, 864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1121, 0, 604, 1118, 0, 0, 0, 1120,
	1117, 1119, 1123, 1124, 0, 832, 0, 1122, 0, 0,
	0, 0, 0, 846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 852, 856, 858, 860, 862, 863, 865,
	0, 869, 866, 867, 868, 0, 0, 847, 848, 849,
	850, 830, 831, 853, 0, 833, 0, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 845, 851, 0,
	1766, 1767, 0, 0, 0, 0, 855, 857, 859, 861,
	864, 0, 0, 606, 0, 0, 605, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 846, 0, 0, 0, 0, 0, 0, 0, 0,
	591, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 2205, 0, 1106, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1128, 1129, 1130, 1131, 1132,
	1133, 1126, 1127, 596, 0, 2205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 854, 1639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 0, 386, 393,
	383, 0, 0, 0, 0, 0, 2187, 0, 0, 577,
	390, 391, 0, 392, 396, 0, 0, 378, 0, 0,
	580, 599, 0, 0, 0, 0, 0, 401, 0, 0,
	0, 387, 0, 386, 393, 383, 0, 0, 0, 854,
	2283, 0, 0, 0, 594, 390, 391, 0, 392, 396,
	0, 0, 378, 0, 0, 0, 405, 0, 0, 406,
	0, 0, 401, 0, 0, 0, 387, 0, 386, 393,
	383, 0, 0, 0, 0, 0, 595, 600, 0, 0,
	390, 391, 0, 392, 396, 0, 0, 378, 0, 0,
	0, 405, 0, 588, 406, 590, 603, 401, 0, 0,
	587, 585, 584, 0, 589, 0, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2191, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 854, 2195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2191, 0, 0, 0, 0, 0, 0, 0, 2184, 0,
	0, 2195, 2186, 2188, 2190, 592, 2192, 2193, 2194, 2196,
	2197, 2198, 2200, 2201, 2202, 2203, 0, 0, 0, 0,
	0, 2184, 0, 0, 0, 2186, 2188, 2190, 0, 2192,
	2193, 2194, 2196, 2197, 2198, 2200, 2201, 2202, 2203, 379,
	381, 380, 0, 0, 0, 0, 2206, 385, 2213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 0, 404, 0, 0, 2206,
	0, 0, 2223, 382, 379, 381, 380, 373, 0, 0,
	0, 2204, 385, 0, 0, 2216, 0, 0, 0, 0,
	0, 2211, 0, 0, 389, 0, 2226, 2227, 2183, 0,
	0, 404, 2212, 0, 2204, 0, 0, 0, 382, 379,
	381, 380, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 2183, 0, 0, 0, 0, 0, 2199, 0, 389,
	0, 0, 0, 0, 2189, 0, 404, 2217, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	2199, 0, 0, 0, 0, 0, 0, 2189, 0, 0,
	0, 0, 384, 388, 394, 0, 395, 397, 0, 0,
	398, 399, 400, 0, 0, 402, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 388, 394,
	0, 395, 397, 0, 0, 398, 399, 400, 0, 0,
	402, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2225, 0, 2008, 0, 0, 0,
	0, 0, 384, 388, 394, 0, 395, 397, 0, 0,
	398, 399, 400, 0, 0, 402, 403, 0, 0, 0,
	0, 2219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2218, 2220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2214, 0, 0, 0, 0, 0, 2224,
}

var yyPact = [...]int{
	290, -1000, -298, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -161, 25251, 25251, -1000, -1000, 1616,
	-1000, 24759, 9497, 25743, 143, 25743, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 397, -1000, 24267, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 354, 27806, 244, 243, 7519, 25743, -281,
	-1000, 2182, -1000, -1000, -1000, -1000, 1093, 420, 23775, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 27517, 78, 420, 525, 531, 654, 654,
	10973, 2182, 246, 258, -1000, 891, 290, 27005, 323, 25743,
	-1000, 962, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	323, -1000, -1000, -1000, 2182, 2182, -1000, 25743, 25743, -24,
	1060, -1000, 245, 224, 220, 961, -1000, -1000, -1000, -1000,
	-1000, 2125, -1000, 25743, 1832, 25743, -1000, 1296, 270, 27841,
	1958, 930, 449, 1842, -1000, -1000, 1813, -1000, 84, 129,
	128, 276, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 82,
	-1000, 1997, -1000, -1000, 69, -1000, -1000, 67, -1000, -1000,
	-1000, -76, -1000, -1000, -1000, -1000, -1000, -146, -146, 560,
	1215, 7519, -1000, 1377, -1000, 2200, -1000, -1000, -1000, -1000,
	5050, 8995, 8995, 8995, 8995, -1000, -1000, 1692, 7519, 1811,
	1809, -1000, -1000, -1000, -1000, 945, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1425, 8503,
	-1000, 1802, 1800, 1798, 1797, 1794, 1792, 1787, 1782, 1781,
	1780, 1778, 1586, 1776, 1424, 1422, 1775, 1769, 1762, 8995,
	1421, 1586, 1586, 1758, 1756, 1754, 1753, 1752, 1751, 1749,
	1748, 1746, 1742, 1741, 1740, 1739, 1736, 1725, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 27397, -1000, 944, 786, -1000, 1704, 1947, 2032, 1630,
	2081, 2047, 2043, 2010, 1990, 44, 346, 346, 346, 375,
	346, 385, -1000, -1000, -1000, -1000, -1000, -1000, 446, -1000,
	-1000, -1000, -1000, 835, 25743, -1000, 1643, 1018, 2028, 311,
	281, 1018, 238, 279, 2032, 2032, -86, -109, 1018, 1018,
	-109, 63, -1000, -1000, -1000, 1111, 274, 1111, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1981, 1977, 354, 354, 358,
	-1000, -168, -1000, -1000, 601, -1000, 490, -1000, 1296, 269,
	263, 850, 1109, -1000, 1024, 25743, 25743, 25743, 1024, 1024,
	13928, 13436, -1000, 2032, 1630, -1000, 1565, 2119, 1630, 354,
	354, 354, 354, 354, 354, 354, 25743, 6526, 6526, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 292, -1000, -1000,
	-1000, -1000, -1000, 242, 1703, -1000, 25743, 231, 2032, 1947,
	2032, -1000, -1000, 943, 1287, 1420, -1000, -1000, 245, 981,
	-1000, 692, -1000, -1000, -1000, -1000, 25743, 219, -1000, 1406,
	1699, -1000, 350, 752, 910, -1000, 83, 27876, 21308, 1296,
	21308, 25743, -1000, -1000, -1000, -1000, -1000, -1000, -87, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 66, -1000, 66, 7519, 7519, 7519, 7519, 7519,
	-1000, 388, 8011, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8995, 8995, 8995, 8995, 8995, 8995, 8995, 8995, 8995, 8995,
	8995, 8995, 1681, 1118, 8995, 8995, 8995, 2119, 1923, 837,
	-1000, -1000, -1000, -1000, -1000, 1070, 1215, 7519, 7519, 25743,
	-1000, 27296, 7519, 7519, 88, 7519, 1988, 1988, 3573, 25743,
	7519, -1000, 1560, 1549, -1000, -1000, 1145, 7519, -1000, -1000,
	7519, 8995, 7519, -1000, -1000, -1000, -1000, 972, 1988, 7519,
	7519, 1988, 1988, 1988, 1075, 1988, 1988, 1988, 1988, 1988,
	1988, 1988, 25743, 1913, 45, -1000, -1000, -1000, 1619, -1000,
	1659, 1659, 1619, 1619, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1698, 1697, -1000, -1000, 1657, 1657, 1657,
	1619, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1693, 1693, 1694, 1693,
	25743, 2032, -281, 6034, -1000, -285, 1947, 7519, -1000, -1000,
	7519, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 372,
	346, -1000, 25743, 1088, 21308, 1296, 1378, 25743, 346, 358,
	-1000, 25743, 835, 1963, 25743, 2113, 8995, 21308, 1111, 1018,
	2113, 1111, -1000, -1000, -1000, 1018, 1018, -1000, -1000, -1000,
	-1000, 1111, 1111, -1000, -1000, -89, 2113, 2113, -95, 25743,
	25743, 346, 25743, -1000, -1000, -1000, -1000, 25743, -1000, -1000,
	25743, 21308, 19832, -1000, -136, 520, 502, 507, -1000, -1000,
	330, 383, 12451, 282, 21308, 4557, -1000, -1000, 1024, 1024,
	1024, 4557, 4557, 895, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1947, -1000, -1000, -1000, -1000, 25743, 21308, 1296, 25743,
	25743, 25743, 27005, -1000, 865, -1000, -1000, 10481, 940, 865,
	1402, 25743, 1841, -282, -1000, 11959, 25743, 25743, -1000, -1000,
	-282, -1000, 11466, 25743, 1947, -1000, 1947, 2634, -1000, 2026,
	-1000, 245, 171, -1000, -1000, -1000, -1000, -1000, -1000, 937,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 832,
	-1000, 25743, -1000, -1000, 83, 21308, 1046, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 109, -1000, -1000, 142, -1000, 368,
	1, 971, -1000, -1000, 34, 139, 413, 34, 1215, -1000,
	1086, 1086, 1091, -1000, 336, -1000, -1000, -1000, -1000, 1692,
	-1000, -1000, -1000, 1338, 1452, -1000, 1035, 1035, 977, 977,
	977, 977, 977, 1268, 1268, -1000, -1000, -1000, 5050, 1681,
	8995, 8995, 8995, 332, 1912, 2962, -1000, 7519, 1074, -1000,
	7519, 1308, 990, 936, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1547, 560, 1545, 1570, 2124, 1529,
	7519, -1000, -1000, 7519, 1399, 7027, -1000, -1000, -1000, 1527,
	928, 1515, -1000, -1000, -1000, 1514, 720, 1513, 1486, 1497,
	779, 7519, 970, 963, 7519, 7519, 7519, 7519, 1494, 7519,
	7519, 7519, 7519, 7519, 7519, 7519, -1000, 7519, 26, -1000,
	-1000, -1000, -1000, 1278, -1000, 1269, -1000, -1000, -1000, 1398,
	1398, -1000, 1262, -1000, -1000, -1000, -1000, 1241, -1000, -1000,
	1240, -1000, -1000, -1000, -1000, 951, -1000, 1215, -1000, 1397,
	-1000, 1028, 776, -1000, 1246, 23283, 25743, 30, -1000, 1957,
	757, -1000, 1, 591, 1819, 1910, 25743, 22791, -1000, 1675,
	941, -1000, -1000, 7519, -1000, 1455, 25743, 2113, -1000, 25743,
	2113, 2113, 1018, 27005, 1111, 25743, 1111, -1000, -1000, 1111,
	-1000, 919, -1000, 25743, -1000, -1000, -1000, -1000, 21, 757,
	2053, 763, -1000, -1000, -1000, -1000, 26235, 26235, 12944, 26235,
	-1000, 892, -1000, -1000, 517, 485, 533, -1000, -1000, 364,
	-1000, -1000, 591, -1000, -1000, -1000, 1673, 1048, -1000, -1000,
	8995, -1000, 4557, 4557, 4557, -1000, -1000, 15896, -1000, -1000,
	773, 591, 1840, 758, -1000, 758, -1000, 2113, 6526, -1000,
	19832, -1000, -1000, 22292, -1000, 21800, 2113, -289, 740, -1000,
	1919, 594, -1000, 1666, -1000, 938, 1892, -1000, 583, -1000,
	1043, 933, -1000, 594, 896, 1890, 583, -1000, -1000, -1000,
	918, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -26, -1000, -1000, 25743, 1406,
	894, 1046, 711, -1000, 361, 914, 913, -1000, 21308, 79,
	21308, -1000, 21308, -1000, -1000, 215, -1000, 25743, 1940, -1000,
	-1000, -1000, 1374, -308, 1938, -1000, -1000, -1000, -1000, -1000,
	893, -1000, 332, 1912, 2413, -1000, 8995, 8995, 1911, 1065,
	-1000, 7519, 1171, 27326, 1393, 14912, 25743, -1000, -1000, 7519,
	7519, -1000, 1896, 1877, -1000, 7519, 7519, 1500, -1000, 25743,
	-1000, -1000, -1000, 14912, -1000, 8995, -1000, 7519, 1864, -67,
	-67, 1849, 1823, 1803, 888, -67, 1795, 1661, 1654, 1628,
	1612, 1566, 1559, 1215, -1000, -1000, 1493, 1492, 883, -1000,
	880, 1488, 879, 877, 6034, -1000, -117, 7519, 7519, 7519,
	1901, -1000, -1000, 1643, 1079, 1665, -68, 1033, -1000, 334,
	21308, 260, -1000, 1839, 167, -1000, 1910, -1000, 617, -1000,
	1664, 25743, 688, -1000, 901, 290, -1000, 25743, 1215, -1000,
	1296, 1018, -1000, 2113, 872, -1000, -1000, 2113, -1000, 1018,
	-1000, 1018, 1111, 25743, -1000, -68, 1033, 334, 25743, 19832,
	19832, 19832, 19832, -1000, 1873, 1869, -1000, 1872, 1871, 1855,
	25743, 19832, 1643, -1000, 26620, -1000, -1000, -1000, -1000, -1000,
	2119, 866, 2109, 537, 7519, -1000, -1000, -1000, 468, 21308,
	1396, 282, -1000, -1000, -1000, -1000, -1000, 25743, 25743, 2099,
	-1000, 743, -1000, -1000, 900, -1000, 2099, -1000, 1239, 1395,
	1110, -282, 6034, 259, 25743, -282, 25743, 6034, -1000, 25743,
	255, -282, 2634, 1237, -1000, -1000, -1000, 2121, 21308, 1296,
	989, 1001, -1000, 64, -1000, 93, 310, 1380, -1000, 380,
	76, -1000, 1041, 1374, 378, -1000, -1000, 8995, -1000, -1000,
	-1000, -1000, 1215, 7519, 1485, -1000, 488, 488, 1480, -1000,
	1619, 1659, -1000, 1619, 1657, 1619, 488, 488, 1478, -1000,
	1280, 1546, -1000, -1000, 1531, 1496, 7519, -1000, 1477, 3064,
	1100, -67, -1000, 1656, -1000, -67, -67, -67, -67, -1000,
	-67, -67, -67, -67, -67, -67, -67, -1000, -1000, -1000,
	1379, -1000, -1000, -1000, 1221, -1000, 1217, -1000, -46, -39,
	1215, 1215, -1000, -1000, 1917, 1960, 1955, 9989, 1158, -1000,
	-1000, 20816, -1000, 299, -1000, -1000, -1000, 351, 62, 1214,
	293, -1000, 1446, 25743, -1000, -1000, -1000, -1000, -1000, 1033,
	1033, 1033, 9989, 323, 621, 890, 19832, 25743, -1000, 19340,
	1471, -1000, 591, 2113, -1000, 25743, -1000, 2113, 2113, 1018,
	-1000, 1158, 20816, 299, 742, -1000, 1040, 1825, 1837, 1825,
	-1000, -1000, -1000, -1000, 1865, -1000, 1856, -1000, -1000, 742,
	-1000, -1000, -1000, -1000, -1000, 537, -1000, 2020, 487, 487,
	487, 1469, -1000, 711, 1468, -1000, -1000, -1000, -1000, 2086,
	2080, 20324, 2086, -1000, -289, 2133, -1000, 1467, 708, -282,
	-1000, -1000, 594, -1000, -1000, -1000, -282, -1000, 594, -1000,
	-1000, -1000, -1000, -1000, 1296, -1000, 92, -1000, -1000, -1000,
	-1000, -1000, -1000, -12, -1000, 25743, -1000, 1374, 1370, 71,
	25743, -1000, 1215, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7519, -1000,
	-1000, -1000, 1450, -1000, -1000, 7519, -1000, 319, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1466, 1464, -287, -33, 2078, 2077, -1000, -1000, 246, 25743,
	1462, 603, -1000, -1000, -1000, 27485, 668, -1000, 25743, 1106,
	487, 346, 487, 1105, 1649, -1000, -1000, -1000, 1369, 0,
	-1000, -1000, -1000, 1358, 1356, 1213, -1000, -1000, 1256, 889,
	12, -1000, -1000, -1000, -1000, -1000, -1000, 1647, 14912, 15404,
	1347, 1456, 26235, 19832, 19340, 733, -1000, 882, -1000, -1000,
	-1000, 2113, -1000, -1000, 2113, -1000, 0, -1000, 2084, 25743,
	6034, -1000, -1000, 7519, 1645, -1000, 7519, -1000, -1000, -1000,
	-1000, -1000, 1644, 1918, -1000, -1000, -1000, -1000, -1000, -1000,
	7519, 7519, -1000, -1000, -1000, 25743, -1000, 594, 594, 591,
	-1000, -1000, -95, -1000, -1000, -1000, -95, 1435, -1000, 1348,
	2084, -1000, 2074, -1000, -1000, -289, 1346, -1000, 2072, 1344,
	1302, -1000, 1643, 27749, 9989, 27978, -1000, -1000, 25743, 25743,
	-1000, 25743, 25743, 346, 7519, -1000, -1000, 205, -1000, -1000,
	104, -1000, -1000, 1244, 337, -1000, 17864, -1000, -1000, -1000,
	-1000, -1000, 66, 2113, 733, 882, -1000, -1000, 987, -1000,
	-1000, -1000, 2032, -1000, -1000, 1215, 25743, 1215, 18848, -1000,
	2071, 2070, 1215, 560, 583, -1000, -51, -52, -1000, -1000,
	-1000, 23, 7519, -292, -1000, 1342, -38, -1000, -1000, 1941,
	318, 27726, -1000, 1033, 1033, 655, 1033, 1033, 1033, 1033,
	236, 235, 1033, 1033, 1033, 1033, 1033, 1033, 1033, 1033,
	1033, 1033, 1033, 1033, 1033, 1033, 1640, -1000, -1000, 27978,
	-1000, -1000, 1128, 8995, -1000, -1000, 1339, 15404, 462, 527,
	1639, -1000, 187, 2132, -1000, 1099, 1097, -1000, 25743, -1000,
	1632, 1401, 135, 1624, -1000, 1622, 1621, 25743, 1343, 307,
	1337, -1000, -1000, 89, -1000, -1000, 859, -1000, 1619, 7519,
	-1000, -95, 2084, -1000, -1000, 833, 831, -1000, -1000, -1000,
	-1000, 357, -44, -52, -1000, 2069, -40, 2067, 2065, 1454,
	-1000, 3081, -1000, -1000, -1000, 560, -1000, 1618, -1000, 2062,
	246, 159, 2061, 27749, -1000, 1198, 1197, 1033, 1033, 1196,
	1336, 1333, 1330, 1033, 1033, 1190, 1323, 26620, 1189, 1187,
	1177, 1232, 1310, 471, 1212, 1201, 1193, 25743, 1609, 1301,
	-1000, -1000, 1912, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1167, 1608, -159, -1000, -1000, 1600,
	17864, 308, 308, 17864, 17864, 17864, 1599, 363, -1000, -15,
	-1000, -1000, -1000, 17864, 1937, 1236, -1000, 2032, -1000, -1000,
	18356, 1587, 1148, -33, 2056, -1000, 1302, 2050, 1302, 1302,
	-1000, -1000, 4065, -283, -70, 345, 25743, 1302, -1000, -1000,
	2048, 200, -1000, -1000, -1000, 14912, 14912, -1000, -1000, -1000,
	-1000, 1307, 1306, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 253, 25743, 826, -1000, 1037,
	1453, 7519, 1586, -213, 17864, 810, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 805, 801, 798, 17864, -1000, -1000, -1000,
	185, -1000, 151, -1000, -1000, 1937, -1000, -1000, -1000, 1969,
	14420, -60, -1000, 1304, -1000, 1302, -1000, -1000, 1076, -1000,
	-1000, -1000, -1000, -1000, 787, -1000, -1000, 17372, 174, 232,
	222, -1000, 322, -1000, -1000, -1000, -1000, -1000, -1000, 261,
	778, -1000, 1301, 1259, -1000, 1157, -1000, 1836, -1000, 47,
	775, -1000, -1000, -1000, -1000, 770, -1000, -1000, 1033, 1251,
	122, -1000, -1000, -1000, -1000, 25743, -1000, 769, -1000, -1000,
	-1000, 869, -1000, -1000, -1000, -1000, 4065, -1000, 25743, -1000,
	25743, 172, 1144, 8995, 1580, 8995, 1579, 179, 1577, -1000,
	-1000, -1000, -1000, -1000, 363, -1000, 1834, 1631, 2118, -1000,
	-1000, -1000, -1000, 151, 151, 151, 151, 54, 1143, -1000,
	1378, 536, -1000, 1027, -1000, 16880, 25743, -1000, -1000, 766,
	1576, 2035, -1000, 2481, 25743, 2356, 25743, 1574, 995, 8995,
	-1000, -1000, 2130, -1000, 2128, 528, 528, -1000, -1000, -1000,
	25743, 5542, -1000, 857, -1000, -1000, 313, 173, -1000, 741,
	-1000, 736, 16388, 1141, 2278, -1000, -1000, -1000, 1175, 207,
	-1000, -1000, -1000, 1215, 25743, 719, -1000, 1444, 161, -1000,
	-1000, -1000, 705, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	313, 1887, -1000, 1140, -1000, -1000, 1254, 441, -1000, -1000,
	1254, 166, -1000, 264, 1487, -1000, -1000, 680, -1000, 1429,
	493, 7519, -1000, 166, 27749, -1000, 7519, 645, -1000, 27749,
	606, -1000, -1000,
}

var yyPgo = [...]int{
	0, 122, 2587, 197, 132, 129, 195, 2586, 2581, 2010,
	2008, 2580, 2578, 2577, 2576, 2575, 2574, 2573, 2572, 2571,
	2569, 2563, 2562, 2559, 2556, 2553, 2552, 2551, 193, 2550,
	2544, 2541, 2540, 2527, 2525, 2523, 2519, 2518, 2517, 2516,
	2515, 2514, 2513, 2512, 2510, 2508, 2501, 123, 2500, 2006,
	2499, 2498, 2497, 2496, 2494, 171, 2493, 2492, 2491, 2490,
	2489, 2488, 2487, 2486, 2485, 2469, 2468, 2466, 2464, 2463,
	134, 2462, 2460, 2459, 2457, 2456, 190, 182, 56, 2454,
	47, 48, 149, 202, 168, 200, 199, 142, 121, 74,
	2452, 2017, 2450, 118, 180, 119, 25, 2448, 138, 2447,
	114, 40, 39, 194, 106, 52, 60, 93, 2446, 174,
	85, 2445, 2444, 95, 2443, 57, 2442, 73, 26, 94,
	28, 2439, 2438, 2437, 71, 2436, 2434, 2432, 2431, 136,
	2430, 104, 51, 2428, 2426, 2425, 2423, 2422, 34, 2421,
	58, 2420, 2419, 2418, 2417, 65, 2416, 2414, 12, 17,
	21, 2413, 16, 3, 2412, 175, 59, 83, 105, 2406,
	396, 2405, 2391, 2390, 113, 2388, 388, 2386, 2380, 2378,
	2375, 9, 2371, 173, 2365, 2362, 76, 98, 2361, 53,
	153, 158, 2360, 2359, 102, 91, 69, 101, 2356, 2355,
	92, 167, 29, 32, 0, 164, 30, 2354, 2353, 2350,
	204, 156, 155, 181, 125, 201, 139, 2349, 2348, 67,
	2347, 116, 2345, 97, 8, 2343, 141, 2342, 179, 140,
	2341, 161, 2340, 188, 2, 108, 2339, 2338, 27, 224,
	2337, 2333, 2332, 145, 2330, 2327, 84, 137, 2314, 2310,
	2307, 38, 2306, 35, 20, 2305, 77, 2303, 214, 2302,
	150, 107, 148, 126, 112, 177, 183, 70, 115, 1134,
	109, 81, 18, 2301, 178, 2300, 203, 189, 2298, 151,
	2297, 192, 360, 163, 2295, 143, 10, 2292, 2291, 2290,
	7, 2289, 260, 2286, 2285, 19, 2284, 23, 2283, 2282,
	2281, 2280, 6, 2279, 2278, 2252, 1, 4, 2251, 5,
	166, 103, 96, 2249, 100, 198, 2248, 2247, 2245, 2244,
	2242, 217, 2241, 2237, 2236, 2235, 2234, 2233, 2232, 2231,
	78, 41, 2230, 2228, 2227, 2226, 72, 110, 2225, 276,
	162, 2224, 45, 2223, 2221, 24, 2220, 31, 2219, 2217,
	2216, 14, 154, 2215, 2214, 15, 2213, 2211, 11, 13,
	2210, 2207, 55, 2206, 50, 33, 75, 82, 2205, 22,
	61, 99, 2202, 2198, 191, 187, 160, 2197, 127, 185,
	206, 2196, 172, 2195, 2194, 2193, 2186, 2184, 2182, 2181,
	1133, 2180, 2179, 186, 54, 176, 90, 2176, 2174, 2161,
	64, 117, 87, 86, 159, 2160, 144, 2158, 2156, 88,
	2154, 2153, 2152, 2151, 2150, 184, 131, 2149,
}

//line mysql_sql.y:8009
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 403, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 74, 74, 64, 63, 351, 351, 350, 350, 349,
	349, 348, 348, 348, 347, 347, 347, 346, 346, 345,
	345, 344, 344, 342, 342, 343, 341, 340, 340, 340,
	338, 338, 336, 336, 337, 337, 331, 331, 334, 334,
	332, 332, 332, 332, 335, 330, 330, 330, 329, 329,
	62, 62, 62, 261, 261, 61, 61, 275, 275, 275,
	275, 275, 273, 273, 273, 273, 273, 273, 272, 272,
	271, 271, 276, 276, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 56, 56, 56, 56, 59, 59,
	59, 60, 270, 270, 270, 57, 58, 58, 260, 260,
	265, 265, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 269, 269, 269, 267, 267, 266,
	266, 268, 268, 50, 50, 50, 53, 52, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 51, 51, 51,
	51, 51, 51, 48, 48, 48, 48, 48, 47, 47,
	49, 49, 258, 258, 257, 67, 67, 67, 67, 67,
	67, 67, 66, 66, 69, 69, 68, 55, 55, 55,
	55, 55, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 375, 375, 375, 377, 377, 198, 199, 404, 197,
	197, 197, 371, 371, 372, 373, 374, 374, 374, 65,
	7, 7, 45, 389, 389, 46, 396, 396, 311, 311,
	211, 211, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 314, 315,
	207, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 35, 34, 34, 247,
	247, 33, 405, 405, 181, 181, 41, 32, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 44, 44, 325,
	325, 407, 407, 407, 42, 43, 310, 310, 310, 39,
	38, 37, 36, 36, 31, 31, 30, 30, 204, 204,
	206, 206, 202, 406, 406, 287, 287, 205, 205, 29,
	29, 29, 203, 203, 180, 201, 201, 201, 8, 8,
	6, 11, 11, 11, 11, 11, 11, 11, 11, 17,
	19, 255, 255, 252, 18, 14, 13, 16, 12, 15,
	5, 5, 5, 5, 9, 9, 10, 88, 88, 119,
	119, 384, 384, 380, 380, 381, 381, 381, 382, 382,
	383, 383, 70, 319, 319, 319, 319, 319, 319, 4,
	318, 318, 318, 318, 318, 318, 402, 402, 360, 360,
	360, 361, 109, 109, 104, 104, 320, 320, 225, 362,
	362, 328, 328, 327, 327, 326, 326, 107, 107, 108,
	108, 91, 91, 77, 77, 333, 333, 333, 333, 339,
	339, 308, 308, 145, 145, 174, 174, 175, 175, 81,
	81, 82, 82, 82, 82, 82, 82, 368, 368, 370,
	370, 369, 106, 106, 102, 102, 103, 103, 103, 101,
	101, 100, 99, 99, 98, 96, 96, 96, 97, 97,
	97, 84, 84, 83, 83, 83, 83, 83, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	85, 85, 376, 376, 376, 312, 312, 312, 317, 317,
	157, 157, 158, 158, 156, 156, 86, 86, 87, 87,
	87, 87, 155, 155, 154, 89, 89, 95, 94, 94,
	90, 90, 90, 90, 165, 165, 164, 164, 164, 164,
	73, 75, 75, 76, 112, 112, 163, 162, 162, 162,
	111, 111, 110, 110, 105, 105, 93, 93, 93, 93,
	161, 92, 159, 401, 401, 400, 400, 399, 397, 397,
	397, 398, 398, 398, 398, 353, 353, 353, 353, 353,
	190, 190, 190, 196, 196, 189, 189, 189, 189, 189,
	200, 195, 195, 191, 191, 192, 192, 192, 3, 3,
	3, 3, 23, 23, 23, 23, 27, 27, 378, 378,
	20, 385, 388, 386, 386, 390, 390, 390, 391, 391,
	391, 392, 392, 21, 387, 393, 393, 393, 256, 256,
	253, 254, 254, 251, 250, 250, 250, 395, 395, 394,
	394, 394, 193, 193, 22, 246, 246, 248, 249, 249,
	240, 240, 240, 240, 26, 244, 244, 245, 245, 245,
	245, 245, 241, 241, 243, 243, 239, 239, 239, 239,
	239, 25, 238, 238, 236, 236, 234, 234, 235, 235,
	233, 233, 233, 237, 237, 24, 24, 79, 78, 78,
	78, 177, 177, 176, 176, 80, 313, 313, 277, 277,
	278, 278, 278, 281, 281, 293, 293, 294, 294, 292,
	292, 299, 299, 298, 298, 297, 297, 296, 296, 295,
	295, 295, 295, 290, 290, 289, 289, 279, 279, 279,
	279, 279, 280, 280, 280, 288, 288, 291, 291, 136,
	136, 137, 137, 137, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 358, 358, 359, 139, 139, 139, 143,
	143, 143, 143, 143, 143, 138, 138, 140, 140, 120,
	120, 118, 118, 113, 113, 114, 114, 115, 115, 116,
	116, 117, 117, 117, 117, 117, 117, 263, 263, 356,
	356, 357, 357, 352, 352, 352, 355, 355, 355, 355,
	355, 354, 354, 121, 172, 172, 172, 194, 194, 194,
	171, 171, 171, 135, 135, 134, 134, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 262, 262, 208, 208, 209, 209, 152, 151,
	151, 151, 151, 151, 149, 150, 148, 148, 148, 148,
	148, 147, 147, 146, 146, 146, 242, 242, 144, 144,
	142, 142, 142, 141, 141, 141, 300, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	217, 217, 222, 222, 367, 367, 366, 122, 122, 122,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 131,
	131, 131, 285, 285, 285, 285, 285, 286, 286, 286,
	283, 283, 284, 284, 226, 227, 227, 282, 282, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 324, 324, 324, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	379, 379, 379, 363, 363, 363, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 169, 169, 169, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 228, 228, 229, 229, 321, 321, 321, 321, 321,
	321, 322, 322, 323, 323, 323, 323, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 215, 166, 166, 166,
	230, 223, 223, 224, 224, 218, 218, 218, 218, 218,
	218, 218, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 219, 219, 221, 221, 232, 232, 232, 231,
	231, 231, 231, 231, 231, 231, 133, 133, 133, 133,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 124, 124, 124, 124, 128, 128, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 129, 129, 129, 129, 127, 127, 127, 127, 127,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 71, 72, 72, 126,
	173, 173, 301, 301, 304, 304, 302, 302, 303, 305,
	305, 305, 306, 306, 306, 307, 307, 307, 309, 309,
	179, 179, 179, 186, 186, 178, 178, 187, 187, 188,
	188, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 6, 8, 9, 9, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 2, 1, 2,
	3, 4, 3, 3, 1, 0, 1, 1, 0, 1,
	8, 5, 7, 0, 3, 8, 5, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 4, 1, 3, 1, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 2, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	4, 6, 1, 1, 1, 2, 4, 6, 1, 4,
	1, 3, 3, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 2, 4, 3, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 7, 0, 4, 7, 0, 3, 0, 2,
	0, 1, 1, 1, 1, 4, 2, 2, 3, 3,
	4, 5, 3, 4, 4, 2, 2, 2, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 2, 5, 0,
	2, 7, 0, 1, 0, 1, 5, 4, 1, 1,
	1, 3, 2, 3, 1, 1, 1, 6, 8, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 6, 7, 4, 4, 7, 8, 0, 2,
	0, 2, 2, 1, 1, 1, 1, 0, 1, 4,
	4, 5, 1, 3, 1, 1, 3, 5, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 3, 1, 4, 6, 4, 4, 4, 3,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	2, 1, 5, 4, 4, 2, 0, 5, 0, 1,
	3, 3, 1, 3, 1, 3, 1, 3, 4, 0,
	1, 0, 1, 1, 3, 1, 1, 0, 4, 1,
	3, 2, 1, 0, 8, 0, 4, 7, 4, 0,
	2, 0, 2, 0, 2, 0, 4, 1, 3, 1,
	1, 4, 3, 4, 5, 4, 5, 2, 3, 1,
	3, 6, 0, 3, 0, 1, 2, 4, 4, 0,
	1, 3, 1, 3, 3, 0, 1, 1, 0, 2,
	2, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	7, 7, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 2, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 4, 4, 3, 2, 2, 2, 3, 2, 3,
	4, 1, 3, 4, 0, 2, 1, 1, 2, 2,
	0, 1, 2, 4, 1, 3, 1, 3, 2, 3,
	1, 4, 3, 0, 1, 1, 2, 5, 2, 2,
	2, 0, 2, 3, 3, 0, 1, 3, 1, 3,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 8, 11, 0, 1,
	7, 1, 4, 1, 1, 3, 4, 3, 0, 1,
	1, 0, 2, 7, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 5, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 11, 9, 2, 2, 4,
	5, 1, 3, 0, 3, 5, 0, 1, 0, 6,
	0, 3, 5, 0, 4, 0, 3, 1, 3, 4,
	5, 0, 3, 1, 3, 2, 3, 1, 2, 0,
	4, 6, 5, 0, 2, 0, 2, 4, 5, 4,
	5, 1, 5, 6, 5, 0, 3, 0, 1, 0,
	1, 1, 3, 2, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 4, 1, 3, 3, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 1, 2,
	1, 7, 7, 7, 7, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 1, 5, 6,
	4, 1, 1, 2, 0, 1, 1, 2, 5, 0,
	1, 1, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 2, 2, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 3, 5, 2, 2, 2, 2, 1,
	1, 2, 5, 6, 6, 6, 1, 1, 1, 1,
	0, 2, 0, 1, 1, 2, 4, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 5, 0, 1, 3, 0, 1, 0, 6, 6,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 1, 1, 1, 4, 4, 6,
	8, 6, 4, 5, 5, 4, 6, 6, 7, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	2, 0, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	1, 1, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 1, 3, 4, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 2, 3, 5, 1,
	1, 3, 0, 1, 0, 3, 0, 3, 3, 0,
	3, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -403, -2, -1, -3, -74, -4, -70, -5, -6,
	-8, -54, -66, -68, -69, -28, -7, -65, -47, -48,
	-50, -56, -61, -62, -63, -64, -71, -72, -73, -81,
	-23, -22, -21, -20, 391, 12, 431, -9, -10, -368,
	-11, 230, -197, -198, -199, -404, -29, -30, -31, -36,
	-37, -38, -39, -42, -43, -44, -32, -33, -34, -35,
	-41, -46, -45, 207, -49, 61, -51, -52, -53, -57,
	-58, -59, -60, 322, 328, 381, 390, 511, 512, 46,
	-82, -84, -24, -25, -26, -27, 203, 14, 464, -12,
	-15, -13, -16, -14, -18, -19, -17, 225, 224, 37,
	288, 289, 326, 223, 204, 13, 135, 136, 138, 139,
	30, -83, 67, 205, -85, 10, 513, 424, -91, 38,
	-118, -194, 70, -182, -185, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 434, 304, 461, 242, 266, 352, 269, 276, 135,
	154, 148, 176, 168, 143, 246, 281, 247, 77, 138,
	417, 87, 402, 378, 141, 261, 263, 265, 268, 248,
	164, 159, 260, 244, 511, 157, 249, 39, 250, 181,
	251, 252, 466, 398, 303, 404, 273, 376, 158, 399,
	264, 401, 183, 187, 409, 328, 152, 153, 406, 411,
	180, 222, 42, 463, 234, 412, 185, 179, 175, 420,
	277, 275, 178, 151, 174, 245, 50, 189, 188, 190,
	372, 373, 374, 375, 253, 254, 316, 408, 171, 160,
	307, 144, 22, 415, 229, 403, 329, 255, 270, 278,
	184, 186, 236, 241, 465, 380, 240, 274, 413, 156,
	233, 262, 228, 416, 145, 322, 331, 256, 139, 267,
	410, 419, 49, 344, 150, 142, 219, 136, 238, 243,
	11, 257, 258, 259, 280, 279, 271, 172, 235, 177,
	162, 149, 173, 137, 237, 418, 345, 509, 305, 361,
	170, 167, 239, 212, 414, 405, 140, 365, 346, 165,
	282, 506, 507, 508, 317, 302, 283, 284, 163, 226,
	397, 285, 287, 371, 295, 347, 379, 353, 348, 196,
	-91, -49, -10, -9, -83, -84, -118, 210, -201, 23,
	376, -55, 377, 207, 67, -194, -5, -4, -70, -47,
	-81, -200, -194, 288, -200, 210, -194, 240, 360, -311,
	215, -272, -246, 241, -271, -248, -274, -249, 31, 203,
	205, 204, 237, 14, 326, 211, 12, 10, 327, 223,
	24, 25, 27, 13, 328, 330, 28, 331, 334, 335,
	336, 41, 339, 340, 230, 70, 73, 248, 248, -224,
	-218, 94, 231, -220, -213, -214, -216, -348, -342, -212,
	67, 119, 120, 127, 95, -215, -300, 35, 97, 471,
	432, -167, -168, -169, -170, -194, -343, -341, 73, 78,
	81, 84, 85, 83, 82, 161, 80, 74, 131, 132,
	-84, 70, -363, 479, -183, 499, 480, 498, 46, -316,
	-323, 209, -321, 166, 226, 162, 12, 125, 371, 130,
	163, 476, 495, 434, 502, 473, 474, 468, 469, 470,
	472, 481, 483, 494, -324, 490, 500, 501, 72, 71,
	493, 492, 482, 477, 478, 484, 467, 475, 485, 486,
	491, 496, 497, 310, 87, 311, 312, 424, 306, 313,
	215, 376, 55, 314, 315, 316, 317, 318, 431, 319,
	56, 320, 309, 230, 361, 321, 165, 182, 436, 435,
	437, 428, 425, 423, 426, 427, 429, 430, 487, 488,
	489, -268, -266, -194, -75, -76, 504, -100, -101, -160,
	19, 6, 7, 8, 9, -313, 304, 361, 240, -240,
	-238, 285, 337, 220, 219, 88, 424, 209, -380, -381,
	200, 201, 202, -370, 457, -369, -194, 312, 26, 210,
	323, -40, -325, -310, 405, 404, -205, 403, 396, 407,
	398, 203, 458, -179, 347, 379, 236, 421, 422, 324,
	380, 409, 410, 399, 87, 169, 166, 304, 361, -380,
	140, 137, -259, 140, 93, 145, 144, -259, 240, 360,
	40, -265, 371, -264, -266, 409, 410, 420, 71, 72,
	408, -179, 87, -101, -160, -100, -82, -84, -368, 304,
	361, 240, 211, 210, 212, 424, 288, -312, -376, 31,
	-317, 197, 198, 199, 32, 33, -1, -195, -192, -185,
	70, 71, 72, -107, 232, -118, 133, -107, -101, -100,
	-101, -118, -171, -194, 378, 103, -55, -55, 377, -371,
	-372, -373, -375, 207, 377, 376, 133, 15, -200, 65,
	-118, -248, 240, -272, -246, 35, 64, 134, 213, 134,
	64, 67, 324, 304, 361, 325, 424, 210, 337, 212,
	240, 338, 304, 361, 210, 212, 424, 240, 304, 210,
	212, 361, 240, 338, 396, 397, 212, 26, 329, 332,
	333, 397, -329, 420, -329, 134, 93, 90, 91, 92,
	-218, 110, -231, 103, 104, 105, 106, 107, 108, 109,
	116, 115, 126, 119, 120, 121, 122, 123, 124, 125,
	117, 118, 113, 94, 111, 112, 96, -84, -218, -224,
	-216, -216, -216, -216, -300, -222, -218, 67, 67, 133,
	73, -218, 67, 67, 67, 67, 67, 67, 67, 67,
	67, -322, 67, 67, -228, -229, 67, 67, 73, 73,
	67, 67, 67, -216, 73, -229, -229, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 134, -124, -128, -125, -127, -126, -130, -129,
	166, 167, 130, 170, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 30, 182, 226, 162, 163, 164,
	165, 183, 148, 168, 462, 191, 149, 192, 150, 193,
	151, 194, 152, 153, 195, 154, 157, 158, 159, 156,
	133, -101, 134, 67, -77, 38, -103, 21, -85, -84,
	20, 31, 32, 31, 32, 31, 32, 31, 32, -378,
	210, 457, -236, 215, -236, -236, 211, -236, 210, -382,
	147, 134, -370, -106, 67, -204, 111, 23, 238, 238,
	-204, -407, 211, 406, 42, 239, 238, -102, -103, -102,
	400, 397, -287, 401, 402, -205, -204, -204, -205, 210,
	212, 424, -405, -406, 15, 113, 238, -405, 30, 30,
	-311, -311, -383, 214, 413, 464, 143, 144, 145, -248,
	240, 240, 134, 103, 23, -267, 103, 114, -266, -266,
	-266, -267, -267, -138, 40, -193, 130, -194, 73, -138,
	40, -102, -85, -84, 68, 68, -311, -311, -311, -311,
	-311, -311, -311, -200, -86, -87, 121, -218, -194, -86,
	38, 397, -318, 46, -81, 67, 30, 67, -194, -319,
	46, -81, 67, 30, -102, -77, -103, 133, 78, 73,
	-55, 68, 134, -374, 84, 85, -377, 180, 172, -194,
	-67, 73, -3, -4, -5, -6, -28, -47, -81, -344,
	-342, 67, 31, 370, 64, 15, -273, 210, 424, 323,
	236, 212, 304, -271, -255, -252, -250, -193, -248, -251,
	-250, -276, -171, 397, -78, 382, 287, -78, -218, -218,
	-218, -218, -218, 83, 94, 302, 84, 85, -213, -232,
	31, 283, 284, -214, -214, -214, -214, -214, -214, -214,
	-214, -214, -214, -214, -214, -221, -230, -300, 67, 113,
	111, 112, 96, -216, -214, -214, 68, 134, -367, -366,
	98, -218, -218, -194, -364, -365, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 314, 309, 315,
	313, 306, 321, 316, 317, 165, 455, 456, 449, 450,
	451, 452, 453, 454, -223, -224, -223, -218, -364, -223,
	-166, 32, 31, -166, -218, -379, 300, 299, 301, -104,
	-194, -223, 68, 68, 68, 78, -224, -223, -214, -223,
	-365, -166, -224, -224, -166, -166, -166, -166, 121, -166,
	-166, -166, -166, -166, -166, -166, -266, 40, -307, 345,
	344, -301, -303, 67, -302, 67, -302, -301, -301, 67,
	67, -304, 67, -304, -304, -301, -305, 67, -305, -306,
	67, -305, -194, -102, -76, -327, -326, -218, 40, 505,
	-77, -218, -99, -98, -218, 212, -236, -385, -194, 94,
	-256, -253, -250, -246, -192, -194, -236, -383, -369, 34,
	-105, -194, -156, 16, -216, -250, -405, -204, -156, -406,
	-204, -204, -206, -406, -202, -406, 397, -156, -156, -287,
	-203, -194, -203, -236, -181, -180, -194, -181, -385, -256,
	-94, -89, -93, -90, -95, -159, -161, -92, 67, -118,
	-84, -194, 414, 415, 141, 144, 143, 31, 370, -270,
	370, 31, -246, -264, -260, 73, 371, -251, -269, 64,
	130, -326, -267, -267, -267, -269, -269, 129, -77, -385,
	-255, -246, -194, -120, -118, -120, -195, -155, 134, -154,
	15, -189, -194, 34, 73, 133, -155, 73, -120, -402,
	64, -320, -225, -362, 504, -109, 68, -104, -360, -361,
	-104, -108, -194, -320, -109, 68, -360, -77, -77, -187,
	-188, -178, -184, -191, -192, -185, 208, 31, 93, 34,
	36, 310, 342, 96, 130, 20, 97, 166, 129, 312,
	432, 311, 203, 59, 435, 437, 436, 425, 423, 363,
	367, 369, 366, 424, 396, 40, 14, 37, 224, 32,
	33, 123, 205, 100, 101, 227, 35, 225, 85, 44,
	23, 62, 15, 17, 18, 313, 362, 215, 214, 113,
	382, 211, 57, 12, 132, 38, 110, 364, 53, 89,
	45, 55, 111, 21, 426, 427, 41, 381, 390, 460,
	231, 125, 314, 315, 60, 94, 370, 83, 43, 64,
	90, 19, 58, 112, 206, 431, 56, 368, 318, 320,
	330, 457, 319, 209, 407, 10, 309, 433, 30, 223,
	54, 210, 99, 213, 84, 230, 6, 88, 13, 61,
	65, 428, 429, 430, 46, 98, 16, 321, 464, 383,
	384, 385, 386, 387, 388, 389, 191, 192, 193, 194,
	195, 272, 218, 216, 220, 221, 504, 505, 197, 198,
	299, 301, 169, 200, 201, 202, 232, 147, 7, 349,
	350, 351, 354, 355, 356, 357, 358, 359, 360, 512,
	391, 392, 393, 394, 395, 23, -55, -372, 133, 134,
	-105, -273, -254, -251, -275, 121, 70, -261, 134, 464,
	514, 71, 213, -395, -394, 362, 68, 134, -330, 214,
	431, 73, 515, 196, -330, 83, 302, 84, 85, -300,
	-224, -221, -216, -214, -214, -219, 227, 93, -218, -217,
	-366, 100, -218, 34, 134, 65, 133, 68, 68, 15,
	15, 68, -218, -218, 68, 15, 15, -218, 68, 133,
	68, 68, 68, 65, 68, 134, 68, 134, -218, 68,
	68, -218, -218, -218, -224, 68, -218, -218, -218, -218,
	-218, -218, -218, -218, -309, 346, 78, 78, -173, 73,
	-173, 78, 78, 78, 134, 68, 73, 134, 22, 134,
	-96, 36, 37, -118, 215, -118, -388, 349, 35, -396,
	134, 40, -394, -239, 65, -234, -235, -233, -237, 40,
	-118, 15, -88, -119, -194, 67, 68, 134, -218, -247,
	65, -181, -156, -118, -194, -156, -156, -204, -195, -206,
	-201, -206, -202, 133, -180, -389, 349, -396, 30, -162,
	-163, -164, -165, 53, 57, 59, 54, 55, 56, 60,
	30, 134, -190, -196, 34, -191, 73, -192, -185, -190,
	-84, -89, -94, -190, 67, 142, 145, 145, 144, 213,
	67, 103, -269, -269, -269, 40, -193, 64, 134, -156,
	-87, -89, -194, 73, -194, 121, -156, -145, 507, 38,
	39, 134, 67, 68, 134, 46, 134, 103, 68, 134,
	68, 46, 133, 378, -194, -342, 68, -275, 134, 213,
	133, 133, -252, 328, -193, -254, 20, 464, -171, 38,
	-177, -176, 73, 515, 38, 68, -219, 93, -216, -213,
	68, 101, -218, 99, -122, -124, 344, 345, -123, -129,
	130, 166, 226, 165, 164, 162, 344, 345, -138, -194,
	-218, -218, 68, 68, -218, -218, 15, -194, -138, -214,
	-218, 68, -282, 392, -282, 68, 68, 68, 68, -282,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	134, 68, 68, 68, 134, 68, 134, -326, -333, 401,
	-218, -218, -98, -97, 43, -106, 94, 67, -391, 403,
	351, -186, 103, -211, -210, 305, 41, -314, 371, 357,
	358, -253, 240, 64, 294, 295, 296, 297, -233, -179,
	129, 251, 67, -118, -88, -194, 15, 134, -384, 133,
	-1, -194, -246, -204, -156, -406, -156, -204, -204, -206,
	-194, -391, -186, -211, -258, -257, -171, -93, -93, -93,
	-93, 53, 53, 53, 58, 53, 58, 53, -164, -258,
	-95, -106, -196, 68, -401, -400, -399, -397, 61, 214,
	62, -223, 145, -254, -207, 73, -260, -118, -118, -158,
	17, 133, -158, 78, 73, 89, -225, -328, -327, 46,
	-81, -104, -320, -361, -326, -194, 46, -81, -320, -187,
	-184, -192, -185, 78, 15, -251, -246, 121, 121, 70,
	329, -261, 73, 350, 73, 210, 516, 134, 103, -177,
	210, -213, -218, 68, -131, 153, 152, -131, 68, -301,
	-302, -301, -304, -301, -131, -131, 68, 68, 23, 68,
	68, 68, -218, 68, 68, 134, -282, 67, -282, -282,
	-282, -282, -282, -282, -282, -282, -282, -282, -282, 73,
	78, 78, -339, 388, 383, 385, 44, 45, 34, 35,
	-113, -114, -115, -121, -116, -171, -209, -117, 218, 216,
	220, -357, 88, 221, 272, 89, 211, -392, 77, -386,
	73, -194, -393, 77, 352, 132, 307, 40, 353, 354,
	368, 303, 78, 78, 359, -387, 70, -118, -186, -186,
	-186, -113, -107, 65, 133, -89, -119, -194, 121, 68,
	-156, -194, -156, -156, -204, -392, -386, -393, -156, 134,
	103, -111, -110, 64, 65, -112, 64, -110, 53, 53,
	-156, -399, -398, 23, -357, -357, -357, 68, 68, -157,
	18, 20, 121, -157, -145, 13, 68, -320, -320, -246,
	-261, 371, -118, -176, 73, 516, -118, -218, 68, -218,
	-227, -226, 232, 68, 68, -308, 506, -337, 383, 20,
	20, -81, -118, 68, 134, -124, -117, -194, 89, -356,
	-357, -236, -356, 89, 67, 73, -390, 362, 73, 73,
	78, 40, 78, 132, 355, -315, 67, -138, -140, -193,
	130, 73, 68, -190, -89, -194, -156, -384, 133, -156,
	-156, -390, -101, -257, -326, -218, 67, -218, 67, 53,
	19, 17, -218, -224, -360, -80, -331, -287, -80, 68,
	68, -101, 20, -145, 73, 20, 73, -335, 73, -106,
	-136, -137, -153, 342, 242, -237, 246, 77, 247, 378,
	248, 211, 250, 251, 252, 222, 253, 254, 255, 371,
	256, 257, 258, 259, 325, 6, 290, -115, -135, -134,
	-132, 83, 94, 40, 342, -133, 77, 129, 265, 243,
	266, -152, -208, 64, 348, 216, 88, 89, 330, -209,
	-352, -354, -194, -354, -194, -352, -352, -236, -218, 20,
	464, 306, 40, 78, 40, 356, -241, -243, -171, 67,
	-79, -78, -156, -156, -102, -105, -353, -194, 216, 20,
	20, -338, 388, -334, -332, 383, 384, 385, 386, -284,
	-283, -286, 389, 274, 395, -224, -174, 508, 73, 385,
	34, -277, 232, 134, -153, -186, -186, -179, 129, -186,
	-186, -186, -186, 249, 249, -186, -186, -186, -186, -186,
	-186, -186, -186, -186, -186, -186, -186, -186, -186, 67,
	-132, 83, -214, 73, -140, -141, 40, 264, 260, -142,
	40, 244, 245, -144, 67, 272, 13, 89, 89, -118,
	67, 65, 282, 67, 67, 67, -354, 68, 73, 350,
	73, 306, 68, 134, -301, -218, -80, -101, 68, 68,
	134, -340, 214, -336, 387, -332, 20, 385, 20, 20,
	68, -285, 96, 355, 359, -218, 67, 20, -81, -278,
	281, 20, -153, 78, 78, -186, -186, 78, 73, 73,
	73, -186, -186, 78, 73, -196, 78, 78, 78, 78,
	40, 73, -143, 40, 260, 264, 261, 262, 263, 78,
	40, 78, 40, 78, 40, -194, 67, -358, -359, 73,
	78, 67, -321, -242, 67, -241, -355, 294, 295, 296,
	298, 297, -355, -241, -241, -241, 67, -263, -262, 273,
	94, 371, -244, -243, -96, 68, -102, -194, 216, -347,
	67, 78, -337, 20, -335, 20, -335, -335, -285, 504,
	393, 394, 393, 394, -175, -194, -335, 20, -279, 274,
	275, -280, -291, 277, -138, -138, 73, 73, -139, 243,
	-120, 68, 134, 103, 68, -218, -228, -147, -146, 460,
	-241, 68, 68, 68, 68, -241, 273, -245, 222, 77,
	464, 292, 293, -96, -351, 30, 68, -346, -345, -172,
	-341, -194, 388, 389, 73, -335, 93, 68, 134, -171,
	67, -289, 278, 67, -287, 67, -287, 89, 295, 244,
	245, 68, -359, 73, 68, -151, -149, -150, 64, 399,
	270, 271, 68, -244, -244, -244, -244, 68, -186, 73,
	291, -350, -349, -348, 68, 134, 133, -285, -194, -276,
	-281, 279, 78, -214, 67, -214, 67, -288, 276, 67,
	-262, -150, 64, -149, 64, 14, 13, -152, 78, -192,
	134, 103, -345, -194, 68, -293, 67, 20, 68, -276,
	68, -276, 67, 103, -214, -148, 267, 268, 30, 144,
	-148, -349, 40, -218, 133, -294, -292, 232, -280, 68,
	68, 68, -276, 78, 68, 83, 40, 269, -194, 68,
	134, 70, -290, 280, 68, -292, -295, 46, 78, -299,
	-296, 67, -153, 234, 113, -299, -153, -298, -297, 279,
	235, 67, 68, 134, 70, 231, 67, -224, -297, -296,
	-224, 68, 68,
}

var yyDef = [...]int{
	30, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	628, 629, 630, 631, 0, 0, 0, 400, 401, 0,
	380, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 312, 313, 314,
	315, 270, 271, 0, 218, 214, 193, 194, 195, 154,
	155, 156, 157, 278, 0, 0, 0, 0, 0, 0,
	479, -2, 632, 633, 634, 635, -2, 413, 0, 381,
	382, 383, 384, 385, 386, 387, 388, 259, 260, 261,
	256, 257, 258, -2, 0, 413, 207, 0, 198, 198,
	0, 499, 0, 0, 513, 535, 30, 0, 457, 0,
	462, 821, 857, 858, 859, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	457, 219, 402, 403, 499, 499, 378, 0, 242, 0,
	1475, 246, 0, 0, 0, 375, 237, 238, 239, 240,
	241, 0, 620, 0, 234, 0, 213, 1534, 0, 0,
	0, 0, 0, 0, 98, 675, 100, 677, 104, 111,
	0, 0, 116, 117, 120, 121, 122, 123, 124, 0,
	128, 0, 130, 133, 0, 135, 136, 0, 139, 140,
	141, 0, 151, 152, 153, 678, 679, 78, 78, 1226,
	1123, 0, 1130, 1131, 1142, 1151, 929, 930, 931, 932,
	0, 0, 0, 0, 0, 939, 940, 0, 952, 1622,
	0, 946, 947, 948, 949, 41, 53, 54, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 0, 1096,
	916, 857, 0, 1630, 0, 1650, 1631, 1649, 0, 0,
	1081, 0, 1071, 0, -2, -2, 0, 0, 1601, 0,
	-2, 1627, 1646, 1654, 1653, 1624, 1625, 1619, 1620, 1621,
	1623, 1632, 1634, 1645, 0, 1641, 1651, 1652, 55, 56,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1087, -2, 1089, 1090, 1092, 1093, 1094,
	1095, -2, 1098, 1099, 1100, -2, -2, 1103, 1104, 1105,
	1106, 1107, 1108, 1111, -2, 1113, -2, 1115, 1083, 1084,
	1085, 1086, 1075, 1076, 1077, 1078, 1079, 1080, -2, -2,
	-2, 0, 191, 189, 499, 571, 0, -2, 0, 0,
	0, 518, 521, 524, 527, 638, 704, 704, 704, 0,
	704, 0, 727, 681, 682, 683, 702, 703, 418, 414,
	415, 416, 417, 487, 0, 489, 492, 358, 317, 0,
	0, 358, 0, 0, 494, 494, 0, 367, 358, 358,
	-2, 0, 328, 329, 330, 322, 0, 322, 334, 335,
	336, 347, 348, 368, 1250, 0, 0, 278, 278, 420,
	208, 209, 197, 199, 0, 203, 0, 196, 1534, 0,
	0, 165, 1601, 170, 0, 1482, 1548, 1497, 0, 0,
	1515, 0, -2, 494, 0, 500, 0, 499, 0, 278,
	278, 278, 278, 278, 278, 278, 0, 0, 0, 536,
	537, 532, 533, 534, 538, 539, 3, 0, 621, 622,
	625, 626, 627, 0, 0, 461, 0, 0, 494, -2,
	0, 379, 243, 860, 0, 0, 247, 248, 0, 0,
	262, 0, 265, 251, 252, 253, 0, 0, 236, 0,
	0, 215, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 0, 108, 105, 112, 115, 125, 132, 0, 144,
	146, 149, 106, 113, 118, 119, 126, 147, 107, 109,
	110, 114, 148, 150, 127, 131, 145, 129, 134, 137,
	138, 143, 0, 79, 0, 0, 0, 0, 0, 0,
	1129, 0, 0, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1123, 0,
	935, 936, 937, 938, 941, 0, 953, 0, 0, 0,
	1180, 0, 1121, 1121, 0, 1121, 1117, 1117, 0, 0,
	1121, 1059, 0, 0, 1061, 1072, 0, 0, 1064, 1065,
	1121, 0, 1121, 1069, 1070, 1055, 1056, 0, 1117, 0,
	0, 1117, 1117, 1117, 1117, 1117, 1117, 1117, 1117, 1117,
	1117, 1117, 0, 1227, 1245, 1182, 1183, 1184, 1232, 1186,
	1236, 1236, 1232, 1232, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 0, 0, 1225, 1205, 1234, 1234, 1234,
	1232, 1229, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1239, 1239, 1242, 1239,
	0, 494, 0, 0, 482, 0, 463, 0, 515, 517,
	0, 519, 520, 522, 523, 525, 526, 528, 529, 0,
	704, 639, 0, 0, 0, 0, 0, 0, 704, 420,
	419, 0, 488, 0, 0, 544, 0, 0, 322, 358,
	544, 0, 341, 342, 343, 358, 358, 349, 495, 350,
	351, 360, 0, 365, 366, 0, 544, 544, 0, 0,
	0, 704, 324, 323, 363, 364, 332, 324, 1251, 1252,
	0, 0, 0, 421, 0, 0, 201, 0, 206, 158,
	0, 0, 0, 0, 0, 0, 187, 188, 0, 0,
	0, 0, 0, 178, 181, 815, 816, 672, 673, 182,
	183, 463, 514, 516, 511, 512, 0, 0, 0, 0,
	0, 0, 0, 399, 552, 546, 548, 615, 41, 552,
	0, 0, 436, 449, 431, 0, 438, 0, 822, 422,
	449, 424, 0, 438, 463, 485, 463, 0, 244, 0,
	249, 0, 0, 264, 266, 267, 268, 254, 255, 376,
	232, 233, 225, 226, 227, 228, 229, 230, 231, 235,
	51, 0, 216, 217, 0, 0, 0, 92, 93, 94,
	95, 96, 97, 99, 83, 391, 393, 664, 676, 0,
	667, 0, 102, 142, 75, 0, 0, 75, 1124, 1125,
	1126, 1127, 1128, 1132, 0, 1134, 1136, 1138, 1140, 0,
	1156, -2, -2, 917, 918, 919, 920, 921, 922, 923,
	924, 925, 926, 927, 928, 1143, 1154, 1155, 0, 0,
	0, 0, 0, 1152, 1147, 0, 933, 0, 950, 954,
	0, 0, 0, 42, 1116, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 0, 1122, 0, 1123, 0, 0,
	0, 1118, 1119, 0, 0, 0, 1020, 1021, 1022, 0,
	444, 0, 1082, 1060, 1073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 1248, 1246,
	1247, 1185, 1233, 0, 1210, 0, 1211, 1212, 1213, 0,
	0, 1206, 0, 1207, 1208, 1209, 1201, 0, 1202, 1203,
	0, 1204, 190, 570, 572, 0, 453, 455, 456, 0,
	483, 496, 501, 502, 505, 0, 0, 0, 641, 0,
	276, 658, 0, 674, 696, -2, 0, 0, 490, 0,
	0, 584, 316, 0, 359, 319, 324, 544, 327, 0,
	544, 544, 358, 0, 360, 0, 360, 354, 355, 0,
	369, 372, 370, 0, 331, 325, 374, 333, 273, 276,
	557, 0, 558, 559, 555, 586, 610, 610, 0, 610,
	590, 821, 210, 211, 0, 0, 205, 159, 160, 0,
	162, 163, 164, 171, 166, 168, 0, 0, 172, 184,
	185, 186, 0, 0, 0, 176, 177, 0, 481, 389,
	390, 394, 0, 396, 819, 397, 398, 544, 0, 553,
	0, 549, 616, 0, 618, 0, 544, 473, 0, 429,
	0, 430, 446, 0, 450, 0, 0, 442, 435, 439,
	0, 0, 459, 423, 0, 0, 428, 484, 486, 861,
	0, 1257, -2, 1259, -2, -2, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 0, 250, 263, 0, 0,
	0, 0, 86, 661, 0, 87, 91, 81, 0, 0,
	0, 666, 0, 663, 668, 0, 101, 0, 0, 76,
	77, 718, 723, 0, 0, 1133, 1135, 1137, 1139, 1141,
	0, 1144, 1152, 1148, 0, 1145, 0, 0, 1124, 0,
	955, 0, 0, 0, 0, 0, 0, 1007, 1008, 0,
	0, 1012, 0, 0, 1015, 0, 0, 0, 1019, 0,
	1058, 1074, 1062, 0, 1066, 0, 1068, 0, 0, 987,
	987, 0, 0, 0, 0, 987, 0, 0, 0, 0,
	0, 0, 0, 1228, 1181, 1249, 0, 0, 0, 1230,
	0, 0, 0, 0, 0, 573, 465, 0, 0, 0,
	508, 506, 507, 492, 0, 0, 648, 1253, 705, 280,
	0, 0, 660, 0, 0, 701, -2, 708, 0, 714,
	0, 0, 0, 407, 411, 30, 493, 0, 545, 318,
	0, 358, 326, 544, 821, 344, 345, 544, 361, 358,
	362, 358, 360, 0, 371, 648, 1253, 280, 0, 0,
	0, 0, 0, 577, 0, 0, 576, 0, 0, 0,
	0, 0, 492, 611, 0, 613, 614, 623, 624, 588,
	-2, 0, 557, 593, 1121, 212, 200, 202, 0, 0,
	0, 0, 173, 174, 175, 179, 180, 0, 0, 542,
	547, 554, 617, 619, 42, 550, 542, 31, 0, 0,
	0, 449, 451, 0, 0, 449, 0, 0, 458, 0,
	0, 449, 0, 0, 377, 52, 269, 0, 0, 0,
	0, 0, 392, 0, 665, 83, 0, 0, 103, 0,
	0, 721, 0, 723, 0, 1120, 1146, 0, 1153, 1149,
	934, 942, 951, 0, 0, 957, 969, 969, 0, 960,
	1232, 1236, 963, 1232, 1234, 1232, 969, 969, 0, 43,
	0, 0, 1013, 1014, 0, 0, 0, 445, 0, 0,
	0, 987, 990, 0, 991, 987, 987, 987, 987, 996,
	987, 987, 987, 987, 987, 987, 987, 1238, 1237, 1223,
	0, 1224, 1235, 1240, 0, 1243, 0, 454, 469, 0,
	497, 498, 503, 504, 0, 0, 0, 823, 651, 649,
	650, 0, 1254, 655, 281, 282, 283, 284, 0, 0,
	0, 659, 0, 0, 697, 698, 699, 700, 709, 1253,
	1253, 1253, 823, 457, 0, -2, 0, 0, 409, 0,
	0, 585, 320, 544, 337, 0, 352, 544, 544, 358,
	373, 651, 0, 655, 544, 222, 0, 580, 574, 0,
	563, 578, 579, 566, 0, 568, 0, 564, 565, 544,
	556, 587, 612, 589, 592, 594, 595, 601, 0, 0,
	0, 0, 204, 161, 0, 300, 167, 395, 820, 540,
	0, 0, 540, 474, 473, 0, 447, 0, 452, 449,
	434, 443, 433, 440, 441, 460, 449, 427, 426, 862,
	1258, 1255, 1256, 245, 0, 662, 83, 88, 89, 90,
	84, 82, 669, 0, 671, 0, 719, 723, 0, 0,
	0, 1150, 956, 943, 958, 970, 971, 959, 944, 961,
	962, 964, 965, 966, 967, 968, 945, 1009, 0, 1011,
	1016, 1017, 0, 1063, 1067, 0, 989, 985, 992, 993,
	994, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1231,
	0, 0, 471, 64, 0, 0, 509, 510, 0, 0,
	0, 824, 825, 827, 828, 0, 0, 830, 886, 0,
	839, 704, 839, 0, 0, 841, 842, 640, 0, 0,
	643, 644, 653, 0, 0, 0, 286, 287, 0, 0,
	0, 299, 295, 296, 297, 277, 654, 0, 0, 0,
	0, 0, 610, 0, 0, 544, 408, 411, 412, 491,
	321, 544, 356, 353, 544, 272, 0, 275, 499, 0,
	0, 560, 581, 0, 0, 561, 0, 562, 567, 569,
	221, 596, 0, 0, 598, 599, 600, 591, 169, 530,
	0, 0, 551, 531, 32, 438, 448, 432, 425, 85,
	80, 670, 66, 722, 724, 720, 66, 0, 1018, 0,
	499, 986, 0, 1241, 1244, 473, 0, 470, 0, 0,
	0, 636, 492, -2, 0, -2, 829, 887, 851, 851,
	840, 851, 851, 704, 0, 652, 642, 0, 656, 657,
	0, 288, 289, 0, 292, 298, 0, 710, 711, 817,
	818, 712, 0, 544, 544, -2, 405, 410, 0, 338,
	357, 274, 494, 223, 224, 582, 0, 575, 605, 602,
	0, 0, 541, 543, 437, 34, 60, 0, 33, 1010,
	1057, 982, 0, 475, 472, 0, 466, 468, 74, 0,
	728, -2, 771, 1253, 1253, 0, 1253, 1253, 1253, 1253,
	0, 0, 1253, 1253, 1253, 1253, 1253, 1253, 1253, 1253,
	1253, 1253, 1253, 1253, 1253, 1253, 0, 826, 853, -2,
	865, 867, 0, 0, 870, 871, 0, 0, 0, 0,
	908, 877, 0, 0, 881, 0, 1168, 1169, 0, 885,
	0, 843, 852, 0, 852, 0, 0, 851, 0, 0,
	0, 285, 290, 0, 293, 294, 0, 692, 1232, 0,
	716, 66, 499, 406, 220, 0, 0, 606, 608, 603,
	604, 57, 62, 67, 68, 0, 0, 0, 0, 0,
	983, 0, 977, 978, 979, 984, 464, 0, 65, 0,
	0, 730, 0, 713, 773, 0, 0, 1253, 1253, 0,
	0, 0, 0, 1253, 1253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	866, 868, 869, 872, 873, 874, 913, 914, 915, 875,
	910, 911, 912, 876, 0, 0, 0, 1166, 1167, 906,
	0, 0, 0, 0, 0, 0, 0, 837, 645, 0,
	647, 291, 685, 0, 505, 0, 717, 494, 583, 597,
	0, 44, 0, 64, 0, 69, 0, 0, 0, 0,
	988, 980, 0, 0, 0, 0, 0, 0, 637, 715,
	0, 767, 772, 774, 775, 0, 0, 778, 779, 780,
	781, 0, 0, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 809, 810, 811, 812, 813, 814, 794,
	795, 796, 797, 798, 799, 806, 0, 0, 803, 0,
	0, 0, 1071, 901, 0, 0, 844, 846, 847, 848,
	849, 850, 845, 0, 0, 0, 0, 836, 838, 882,
	0, 646, 684, 693, 694, 505, 404, 607, 609, 35,
	0, 0, 61, 0, 70, 0, 72, 73, 0, 972,
	973, 975, 974, 976, 0, 477, 467, 0, 755, 0,
	0, 761, 0, 768, 776, 777, 782, 783, 800, 0,
	0, 802, 0, 0, 909, 0, 880, 889, 902, 0,
	0, 685, 685, 685, 685, 0, 883, 686, 1253, 0,
	0, 690, 691, 695, 725, 0, 45, 0, 47, 49,
	50, 854, 58, 59, 63, 71, 0, 476, 0, 731,
	0, 733, 0, 0, 0, 0, 0, 765, 0, 807,
	808, 801, 804, 805, 878, 888, 890, 891, 0, 903,
	904, 905, 907, 831, 832, 833, 834, 0, 0, 688,
	0, 36, 37, 0, 46, 0, 0, 981, 478, 0,
	735, 0, 756, 0, 0, 0, 0, 0, 0, 0,
	879, 892, 0, 893, 0, 0, 0, 835, 687, 689,
	0, 0, 48, 855, 732, 729, 0, 767, 757, 0,
	759, 0, 0, 0, 0, 894, 896, 897, 0, 0,
	895, 38, 39, 40, 0, 0, 737, 0, 753, 758,
	760, 762, 0, 766, 764, 898, 900, 899, 856, 736,
	0, 749, 734, 0, 763, 738, -2, 0, 754, 739,
	-2, 0, 747, 0, 0, 740, 748, 0, 743, 0,
	0, 0, 742, 0, -2, 750, 0, 0, 744, -2,
	0, 752, 751,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 513,
	104, 103, 105, 3, 514, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 515, 115, 516, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:595
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:601
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:634
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:638
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:645
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:653
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:666
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:678
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:693
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:699
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:703
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:709
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:716
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:725
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:729
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:733
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:738
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:742
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:746
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:752
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:761
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:772
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:776
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:782
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:786
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:792
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:796
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:802
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:826
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:845
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:849
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:853
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:862
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:870
		{
			yyVAL.str = ""
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:874
		{
			yyVAL.str = yyDollar[3].str
		}
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:879
		{
			yyVAL.str = "\n"
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:883
		{
			yyVAL.str = yyDollar[3].str
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:892
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:916
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:920
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:926
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:932
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:950
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:967
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:990
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:994
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:998
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1003
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1007
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1013
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1026
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1037
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1050
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1054
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1064
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1077
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1090
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1096
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1102
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1109
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1117
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1126
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1130
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1134
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1138
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1142
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1146
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1153
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1157
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1163
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1170
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1179
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1183
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1189
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1193
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1197
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1201
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1205
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1209
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1213
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1217
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1221
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1225
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1229
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1233
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1237
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1241
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1245
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1249
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1253
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1257
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1261
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1265
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1397
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1411
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1420
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1450
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1454
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1458
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1464
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1470
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1474
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1481
		{
			yyVAL.str = yyDollar[3].str
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1487
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1491
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1497
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1505
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1514
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1522
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1530
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1553
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1583
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1590
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1598
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1605
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1612
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1629
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1639
		{
			yyVAL.str = yyDollar[1].str
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1646
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1652
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1656
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1667
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1673
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1678
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1682
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1686
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1690
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1694
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1698
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1702
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1706
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1710
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1716
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1720
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1724
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1728
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1733
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1738
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1744
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1751
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1757
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1764
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1771
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1781
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1788
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1799
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1810
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1814
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1820
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1832
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1838
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1842
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1858
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1868
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1874
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1878
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1886
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1890
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1894
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1902
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1920
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1958
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1962
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1968
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1974
		{
			yyVAL.str = yyDollar[1].str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1979
		{
			yyVAL.str = "true"
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1980
		{
			yyVAL.str = "false"
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1981
		{
			yyVAL.str = yyDollar[1].str
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1986
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1997
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2008
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2014
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2025
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2040
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2045
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2049
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2058
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2074
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2078
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2082
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2086
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2090
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2094
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2098
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2102
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2106
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2110
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2114
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2118
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2122
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2126
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2130
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2134
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2140
		{
			yyVAL.item = nil
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2145
		{
			yyVAL.item = nil
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2171
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2176
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2180
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2185
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2189
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2195
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2200
		{
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2204
		{
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2209
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2218
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2227
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2235
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2239
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2243
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2247
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2251
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2255
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2259
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2265
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2272
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2282
		{
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2284
		{
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2303
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2312
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2316
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2320
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2326
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2332
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2338
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2370
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2376
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2405
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2410
		{
			yyVAL.str = ""
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2414
		{
			yyVAL.str = yyDollar[2].str
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2420
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2433
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2437
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2448
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2452
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2458
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2462
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2471
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2475
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2479
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2485
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2517
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2526
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2530
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2536
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2545
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2554
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2564
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2570
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2576
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2582
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2590
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2595
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2602
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2618
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2631
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2642
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2646
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2652
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2657
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2664
		{
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2666
		{
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2669
		{
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2678
		{
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2682
		{
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2687
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2696
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2703
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2709
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2717
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2724
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2731
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2751
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2761
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2768
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2774
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2782
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2789
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2796
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2815
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2819
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2838
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2842
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2846
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2852
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2861
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2865
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2871
		{
			yyVAL.str = yyDollar[1].str
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2875
		{
			yyVAL.str = yyDollar[3].str
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2881
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2885
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2891
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2896
		{
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2900
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2907
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2911
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2918
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2927
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2933
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2937
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2943
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2947
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2983
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3001
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3020
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3026
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3033
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3037
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3050
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3054
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3059
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3063
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3070
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3075
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3082
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3092
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3114
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3121
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3130
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3134
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3140
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3148
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3152
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3161
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3167
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3175
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3184
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3190
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3196
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3200
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3206
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3211
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3215
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3219
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3224
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3228
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3232
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3242
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3248
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3252
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3262
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3272
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3282
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3302
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3310
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3319
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3343
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3351
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3359
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3367
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3375
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3383
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3393
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3404
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3422
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3426
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3430
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3439
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3448
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3452
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3467
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3471
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3477
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3481
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3485
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3489
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3494
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3502
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3508
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3516
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3524
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3534
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3540
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3549
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3558
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3567
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3577
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3581
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3591
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3595
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3599
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3603
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3609
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3619
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3623
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3629
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3635
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3639
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3645
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3651
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3655
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3659
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3665
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3669
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3675
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3679
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3685
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3689
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3695
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3699
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3709
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3722
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3728
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3734
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3747
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3758
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3765
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3769
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3775
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3785
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3789
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3793
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3798
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3802
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3806
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3810
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3815
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3819
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3823
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3827
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3831
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3836
		{
			yyVAL.str = ""
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3840
		{
			yyVAL.str = yyDollar[1].str
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3844
		{
			yyVAL.str = yyDollar[2].str
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3853
		{
			yyVAL.str = ""
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3857
		{
			yyVAL.str = yyDollar[1].str
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3861
		{
			yyVAL.str = yyDollar[2].str
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3865
		{
			yyVAL.str = yyDollar[1].str
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3869
		{
			yyVAL.str = yyDollar[2].str
		}
	case 636:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3903
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3913
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3924
		{
		}
	case 640:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3929
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3941
		{
			yyVAL.str = yyDollar[1].str
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3947
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3957
		{
			yyVAL.str = yyDollar[1].str
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3961
		{
			yyVAL.str = yyDollar[1].str
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3967
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3974
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3980
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3988
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3994
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4001
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4009
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4015
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4024
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4036
		{
			yyVAL.str = yyDollar[1].str
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4041
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4047
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4055
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4161
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4165
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4171
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4181
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4185
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4191
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4201
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4205
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4209
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4214
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4218
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4224
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4231
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4237
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4250
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4259
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4263
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4269
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4286
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4290
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4294
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4298
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4304
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4327
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4349
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4353
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4357
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4361
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4365
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4371
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4375
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4381
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4386
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4391
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4395
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4399
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4403
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4407
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4413
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4427
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4431
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4440
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4446
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4450
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4456
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4460
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4464
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4469
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4473
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4479
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4491
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4502
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4509
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4517
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4523
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4532
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4536
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4541
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4545
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4552
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4563
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4567
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4576
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4590
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4597
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4604
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4608
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4621
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4627
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4631
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4637
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4646
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4660
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4666
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4670
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4676
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4683
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4692
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4696
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4705
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4710
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4714
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4719
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4723
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4733
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4737
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4748
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4756
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4764
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4772
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4783
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4792
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4802
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4812
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4816
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4821
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4825
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4834
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4840
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4844
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4848
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4854
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4858
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4862
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4866
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4870
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4874
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4878
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4882
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4886
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4890
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4894
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4898
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4902
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4906
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4910
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4914
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4918
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4922
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4926
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4930
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4934
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4942
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4946
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4950
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4954
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4958
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4962
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4966
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4973
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4977
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4983
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4988
		{
			yyVAL.str = ""
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4992
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4996
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5002
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5006
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5010
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5014
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5022
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5036
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5040
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5049
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5054
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5060
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5067
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5071
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5077
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5081
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5087
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5097
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5103
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5112
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5121
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5144
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5153
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5163
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5171
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5177
		{
			yyVAL.str = ""
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5181
		{
			yyVAL.str = yyDollar[1].str
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5191
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5197
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5203
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5217
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5224
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5230
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5234
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5238
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5253
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5257
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5266
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5272
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5276
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5282
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5286
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5290
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5294
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5298
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5302
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5306
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5310
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5314
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5318
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5322
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5326
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5330
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5334
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5347
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5353
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5357
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5362
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5366
		{
			yyVAL.str = yyDollar[1].str
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5372
		{
			yyVAL.str = ""
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5376
		{
			yyVAL.str = yyDollar[2].str
		}
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5382
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5394
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5401
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5408
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5415
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5422
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5431
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5437
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5443
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5447
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5451
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5455
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5459
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5464
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5471
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5475
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5479
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5484
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5488
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5493
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5497
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5513
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5519
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5523
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5527
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5531
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5535
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5539
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5543
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5547
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5551
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5555
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5559
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5563
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5567
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5573
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5577
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5581
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5585
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5589
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5593
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5597
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5601
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5605
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5609
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5613
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5617
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5622
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5630
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5634
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5638
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5647
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5651
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5655
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5659
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5664
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5668
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5673
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5677
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5683
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5687
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5693
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5703
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5720
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5737
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5750
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5763
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5775
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5789
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5804
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5819
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5836
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5851
		{
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5857
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5861
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5865
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5871
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5875
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5883
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5887
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5891
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5897
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5904
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5917
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5924
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5933
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:5938
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:5942
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5952
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5962
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5971
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5980
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5990
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6000
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6010
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6020
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6030
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6040
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6050
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6060
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6070
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6080
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6090
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6107
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6115
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6123
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6131
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6139
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6148
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6156
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6165
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6174
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6182
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6190
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6199
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6208
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6230
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6266
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6278
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6290
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6300
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6308
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6315
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6322
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6334
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6342
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6353
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6362
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6371
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6379
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6389
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6397
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6405
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6419
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6425
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6429
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6448
		{
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6450
		{
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6491
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6501
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6505
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6509
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6515
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6524
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6530
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6534
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6541
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6545
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6549
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6557
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6561
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6565
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6569
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6575
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6579
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6583
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6587
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6591
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6595
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6599
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6603
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6607
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6611
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6619
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6623
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6627
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6631
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6635
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6639
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6643
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6647
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6657
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6663
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6667
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6674
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6678
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6682
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6688
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6692
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6696
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6700
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6704
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6708
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6712
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6718
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6722
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6726
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6730
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6736
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6740
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6753
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6758
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6762
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6766
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6770
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6778
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6792
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6796
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6803
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6814
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6819
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6825
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6837
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6849
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6861
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6874
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6887
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6900
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6913
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6926
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6939
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6952
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6965
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6978
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6991
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7006
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7029
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7063
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7111
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7128
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7140
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7160
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7180
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7200
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7216
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7229
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7242
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7255
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7268
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7280
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7292
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7304
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7316
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7328
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7340
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7352
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7364
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7376
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7389
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7402
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7417
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7425
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7434
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7444
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7467
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7472
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7478
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7485
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7489
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7494
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7498
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7504
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7510
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7517
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7524
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7533
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7540
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7547
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7556
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7560
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7564
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7570
		{
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7572
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7582
		{
			yyVAL.str = ""
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7586
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

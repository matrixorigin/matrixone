// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const MODIFY = 57671
const CHANGE = 57672
const SECOND = 57673
const ASCII = 57674
const COALESCE = 57675
const COLLATION = 57676
const HOUR = 57677
const MICROSECOND = 57678
const MINUTE = 57679
const MONTH = 57680
const QUARTER = 57681
const REPEAT = 57682
const REVERSE = 57683
const ROW_COUNT = 57684
const WEEK = 57685
const REVOKE = 57686
const FUNCTION = 57687
const PRIVILEGES = 57688
const TABLESPACE = 57689
const EXECUTE = 57690
const SUPER = 57691
const GRANT = 57692
const OPTION = 57693
const REFERENCES = 57694
const REPLICATION = 57695
const SLAVE = 57696
const CLIENT = 57697
const USAGE = 57698
const RELOAD = 57699
const FILE = 57700
const TEMPORARY = 57701
const ROUTINE = 57702
const EVENT = 57703
const SHUTDOWN = 57704
const NULLX = 57705
const AUTO_INCREMENT = 57706
const APPROXNUM = 57707
const SIGNED = 57708
const UNSIGNED = 57709
const ZEROFILL = 57710
const ENGINES = 57711
const LOW_CARDINALITY = 57712
const AUTOEXTEND_SIZE = 57713
const ADMIN_NAME = 57714
const RANDOM = 57715
const SUSPEND = 57716
const ATTRIBUTE = 57717
const HISTORY = 57718
const REUSE = 57719
const CURRENT = 57720
const OPTIONAL = 57721
const FAILED_LOGIN_ATTEMPTS = 57722
const PASSWORD_LOCK_TIME = 57723
const UNBOUNDED = 57724
const SECONDARY = 57725
const RESTRICTED = 57726
const USER = 57727
const IDENTIFIED = 57728
const CIPHER = 57729
const ISSUER = 57730
const X509 = 57731
const SUBJECT = 57732
const SAN = 57733
const REQUIRE = 57734
const SSL = 57735
const NONE = 57736
const PASSWORD = 57737
const SHARED = 57738
const EXCLUSIVE = 57739
const MAX_QUERIES_PER_HOUR = 57740
const MAX_UPDATES_PER_HOUR = 57741
const MAX_CONNECTIONS_PER_HOUR = 57742
const MAX_USER_CONNECTIONS = 57743
const FORMAT = 57744
const VERBOSE = 57745
const CONNECTION = 57746
const TRIGGERS = 57747
const PROFILES = 57748
const LOAD = 57749
const INLINE = 57750
const INFILE = 57751
const TERMINATED = 57752
const OPTIONALLY = 57753
const ENCLOSED = 57754
const ESCAPED = 57755
const STARTING = 57756
const LINES = 57757
const ROWS = 57758
const IMPORT = 57759
const DISCARD = 57760
const MODUMP = 57761
const OVER = 57762
const PRECEDING = 57763
const FOLLOWING = 57764
const GROUPS = 57765
const DATABASES = 57766
const TABLES = 57767
const SEQUENCES = 57768
const EXTENDED = 57769
const FULL = 57770
const PROCESSLIST = 57771
const FIELDS = 57772
const COLUMNS = 57773
const OPEN = 57774
const ERRORS = 57775
const WARNINGS = 57776
const INDEXES = 57777
const SCHEMAS = 57778
const NODE = 57779
const LOCKS = 57780
const ROLES = 57781
const TABLE_NUMBER = 57782
const COLUMN_NUMBER = 57783
const TABLE_VALUES = 57784
const TABLE_SIZE = 57785
const NAMES = 57786
const GLOBAL = 57787
const PERSIST = 57788
const SESSION = 57789
const ISOLATION = 57790
const LEVEL = 57791
const READ = 57792
const WRITE = 57793
const ONLY = 57794
const REPEATABLE = 57795
const COMMITTED = 57796
const UNCOMMITTED = 57797
const SERIALIZABLE = 57798
const LOCAL = 57799
const EVENTS = 57800
const PLUGINS = 57801
const CURRENT_TIMESTAMP = 57802
const DATABASE = 57803
const CURRENT_TIME = 57804
const LOCALTIME = 57805
const LOCALTIMESTAMP = 57806
const UTC_DATE = 57807
const UTC_TIME = 57808
const UTC_TIMESTAMP = 57809
const REPLACE = 57810
const CONVERT = 57811
const SEPARATOR = 57812
const TIMESTAMPDIFF = 57813
const CURRENT_DATE = 57814
const CURRENT_USER = 57815
const CURRENT_ROLE = 57816
const SECOND_MICROSECOND = 57817
const MINUTE_MICROSECOND = 57818
const MINUTE_SECOND = 57819
const HOUR_MICROSECOND = 57820
const HOUR_SECOND = 57821
const HOUR_MINUTE = 57822
const DAY_MICROSECOND = 57823
const DAY_SECOND = 57824
const DAY_MINUTE = 57825
const DAY_HOUR = 57826
const YEAR_MONTH = 57827
const SQL_TSI_HOUR = 57828
const SQL_TSI_DAY = 57829
const SQL_TSI_WEEK = 57830
const SQL_TSI_MONTH = 57831
const SQL_TSI_QUARTER = 57832
const SQL_TSI_YEAR = 57833
const SQL_TSI_SECOND = 57834
const SQL_TSI_MINUTE = 57835
const RECURSIVE = 57836
const CONFIG = 57837
const DRAINER = 57838
const SOURCE = 57839
const STREAM = 57840
const HEADERS = 57841
const MATCH = 57842
const AGAINST = 57843
const BOOLEAN = 57844
const LANGUAGE = 57845
const WITH = 57846
const QUERY = 57847
const EXPANSION = 57848
const WITHOUT = 57849
const VALIDATION = 57850
const ADDDATE = 57851
const BIT_AND = 57852
const BIT_OR = 57853
const BIT_XOR = 57854
const CAST = 57855
const COUNT = 57856
const APPROX_COUNT = 57857
const APPROX_COUNT_DISTINCT = 57858
const APPROX_PERCENTILE = 57859
const CURDATE = 57860
const CURTIME = 57861
const DATE_ADD = 57862
const DATE_SUB = 57863
const EXTRACT = 57864
const GROUP_CONCAT = 57865
const MAX = 57866
const MID = 57867
const MIN = 57868
const NOW = 57869
const POSITION = 57870
const SESSION_USER = 57871
const STD = 57872
const STDDEV = 57873
const MEDIAN = 57874
const STDDEV_POP = 57875
const STDDEV_SAMP = 57876
const SUBDATE = 57877
const SUBSTR = 57878
const SUBSTRING = 57879
const SUM = 57880
const SYSDATE = 57881
const SYSTEM_USER = 57882
const TRANSLATE = 57883
const TRIM = 57884
const VARIANCE = 57885
const VAR_POP = 57886
const VAR_SAMP = 57887
const AVG = 57888
const RANK = 57889
const ROW_NUMBER = 57890
const DENSE_RANK = 57891
const BIT_CAST = 57892
const NEXTVAL = 57893
const SETVAL = 57894
const CURRVAL = 57895
const LASTVAL = 57896
const ARROW = 57897
const ROW = 57898
const OUTFILE = 57899
const HEADER = 57900
const MAX_FILE_SIZE = 57901
const FORCE_QUOTE = 57902
const PARALLEL = 57903
const UNUSED = 57904
const BINDINGS = 57905
const DO = 57906
const DECLARE = 57907
const LOOP = 57908
const WHILE = 57909
const LEAVE = 57910
const ITERATE = 57911
const UNTIL = 57912
const CALL = 57913
const SPBEGIN = 57914
const BACKEND = 57915
const SERVERS = 57916
const KILL = 57917
const BACKUP = 57918
const FILESYSTEM = 57919
const QUERY_RESULT = 57920

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10333

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 115,
	21, 697,
	-2, 678,
	-1, 131,
	233, 1030,
	235, 953,
	-2, 993,
	-1, 154,
	42, 517,
	235, 517,
	262, 524,
	263, 524,
	452, 517,
	-2, 550,
	-1, 190,
	599, 1737,
	-2, 433,
	-1, 524,
	314, 133,
	425, 133,
	426, 133,
	-2, 1649,
	-1, 588,
	81, 1447,
	-2, 1791,
	-1, 589,
	81, 1465,
	-2, 1762,
	-1, 593,
	81, 1466,
	-2, 1790,
	-1, 619,
	81, 1377,
	-2, 1859,
	-1, 620,
	81, 1378,
	-2, 1858,
	-1, 621,
	81, 1379,
	-2, 1848,
	-1, 622,
	81, 1822,
	-2, 1843,
	-1, 623,
	81, 1823,
	-2, 1844,
	-1, 624,
	81, 1824,
	-2, 1850,
	-1, 625,
	81, 1825,
	-2, 1832,
	-1, 626,
	81, 1826,
	-2, 1841,
	-1, 627,
	81, 1827,
	-2, 1851,
	-1, 628,
	81, 1828,
	-2, 1852,
	-1, 629,
	81, 1829,
	-2, 1857,
	-1, 630,
	81, 1830,
	-2, 1862,
	-1, 631,
	81, 1831,
	-2, 1863,
	-1, 633,
	81, 1444,
	-2, 1638,
	-1, 637,
	81, 1449,
	-2, 1650,
	-1, 640,
	81, 1453,
	-2, 1668,
	-1, 644,
	81, 1457,
	-2, 1708,
	-1, 645,
	81, 1458,
	-2, 1786,
	-1, 653,
	81, 1468,
	-2, 1771,
	-1, 654,
	81, 1469,
	-2, 1815,
	-1, 655,
	81, 1470,
	-2, 1781,
	-1, 656,
	81, 1471,
	-2, 1805,
	-1, 667,
	81, 1355,
	-2, 1853,
	-1, 668,
	81, 1356,
	-2, 1854,
	-1, 669,
	81, 1357,
	-2, 1855,
	-1, 673,
	21, 698,
	-2, 661,
	-1, 753,
	447, 550,
	448, 550,
	-2, 518,
	-1, 797,
	122, 1638,
	133, 1638,
	153, 1638,
	-2, 1613,
	-1, 901,
	21, 698,
	-2, 661,
	-1, 1001,
	21, 697,
	-2, 1252,
	-1, 1119,
	514, 994,
	515, 994,
	-2, 871,
	-1, 1374,
	81, 1515,
	-2, 1788,
	-1, 1375,
	81, 1516,
	-2, 1789,
	-1, 1514,
	82, 843,
	-2, 849,
	-1, 1898,
	82, 1599,
	154, 1599,
	-2, 1773,
	-1, 1899,
	82, 1599,
	154, 1599,
	-2, 1772,
	-1, 1900,
	82, 1577,
	154, 1577,
	-2, 1759,
	-1, 1901,
	82, 1578,
	154, 1578,
	-2, 1764,
	-1, 1902,
	82, 1579,
	154, 1579,
	-2, 1696,
	-1, 1903,
	82, 1580,
	154, 1580,
	-2, 1690,
	-1, 1904,
	82, 1581,
	154, 1581,
	-2, 1629,
	-1, 1905,
	82, 1582,
	154, 1582,
	-2, 1761,
	-1, 1906,
	82, 1583,
	154, 1583,
	-2, 1694,
	-1, 1907,
	82, 1584,
	154, 1584,
	-2, 1689,
	-1, 1908,
	82, 1585,
	154, 1585,
	-2, 1682,
	-1, 1910,
	82, 1588,
	154, 1588,
	-2, 1805,
	-1, 1911,
	82, 1568,
	154, 1568,
	-2, 1791,
	-1, 1912,
	82, 1597,
	154, 1597,
	-2, 1762,
	-1, 1913,
	82, 1597,
	154, 1597,
	-2, 1790,
	-1, 1914,
	82, 1597,
	154, 1597,
	-2, 1651,
	-1, 1915,
	82, 1595,
	154, 1595,
	-2, 1781,
	-1, 1916,
	82, 1592,
	154, 1592,
	-2, 1673,
	-1, 1917,
	81, 1549,
	82, 1549,
	154, 1549,
	383, 1549,
	384, 1549,
	385, 1549,
	-2, 1628,
	-1, 1918,
	81, 1550,
	82, 1550,
	154, 1550,
	383, 1550,
	384, 1550,
	385, 1550,
	-2, 1630,
	-1, 1919,
	81, 1553,
	82, 1553,
	154, 1553,
	383, 1553,
	384, 1553,
	385, 1553,
	-2, 1763,
	-1, 1920,
	81, 1555,
	82, 1555,
	154, 1555,
	383, 1555,
	384, 1555,
	385, 1555,
	-2, 1746,
	-1, 1921,
	81, 1557,
	82, 1557,
	154, 1557,
	383, 1557,
	384, 1557,
	385, 1557,
	-2, 1695,
	-1, 1922,
	81, 1559,
	82, 1559,
	154, 1559,
	383, 1559,
	384, 1559,
	385, 1559,
	-2, 1678,
	-1, 1923,
	81, 1560,
	82, 1560,
	154, 1560,
	383, 1560,
	384, 1560,
	385, 1560,
	-2, 1679,
	-1, 1924,
	81, 1562,
	82, 1562,
	154, 1562,
	383, 1562,
	384, 1562,
	385, 1562,
	-2, 1627,
	-1, 1925,
	82, 1602,
	154, 1602,
	383, 1602,
	384, 1602,
	385, 1602,
	-2, 1656,
	-1, 1926,
	82, 1602,
	154, 1602,
	383, 1602,
	384, 1602,
	385, 1602,
	-2, 1669,
	-1, 1927,
	82, 1605,
	154, 1605,
	383, 1605,
	384, 1605,
	385, 1605,
	-2, 1652,
	-1, 1928,
	82, 1605,
	154, 1605,
	383, 1605,
	384, 1605,
	385, 1605,
	-2, 1711,
	-1, 1929,
	82, 1602,
	154, 1602,
	383, 1602,
	384, 1602,
	385, 1602,
	-2, 1731,
	-1, 1945,
	105, 988,
	149, 988,
	188, 988,
	191, 988,
	275, 988,
	-2, 981,
	-1, 2083,
	21, 697,
	-2, 791,
	-1, 2281,
	105, 988,
	149, 988,
	188, 988,
	191, 988,
	275, 988,
	-2, 982,
	-1, 2297,
	79, 607,
	154, 607,
	-2, 1139,
	-1, 2631,
	191, 988,
	299, 1220,
	-2, 1192,
	-1, 2770,
	105, 988,
	149, 988,
	188, 988,
	191, 988,
	-2, 1082,
	-1, 2772,
	105, 988,
	149, 988,
	188, 988,
	191, 988,
	-2, 1082,
	-1, 2782,
	79, 607,
	154, 607,
	-2, 1140,
	-1, 2790,
	191, 988,
	299, 1220,
	-2, 1193,
	-1, 2918,
	105, 988,
	149, 988,
	188, 988,
	191, 988,
	-2, 1083,
	-1, 3282,
	82, 1048,
	154, 1048,
	-2, 988,
	-1, 3286,
	82, 1048,
	154, 1048,
	-2, 988,
	-1, 3300,
	82, 1052,
	154, 1052,
	-2, 988,
	-1, 3305,
	82, 1053,
	154, 1053,
	-2, 988,
}

const yyPrivate = 57344

const yyLast = 37829

var yyAct = [...]int{
	555, 1594, 3286, 3285, 3294, 3265, 181, 1292, 1354, 533,
	3157, 535, 557, 3218, 528, 3183, 3236, 3165, 2649, 3166,
	543, 2865, 3077, 1873, 2958, 3091, 2804, 1034, 3068, 1350,
	2870, 2902, 2712, 3095, 2901, 2899, 2993, 585, 2713, 3029,
	440, 796, 2868, 2766, 537, 674, 1154, 2286, 1213, 1282,
	447, 2983, 452, 452, 3078, 3080, 1548, 2753, 452, 468,
	477, 1985, 2906, 477, 2791, 2300, 2917, 2599, 1357, 2739,
	2860, 1683, 2920, 2414, 2413, 1680, 2587, 2336, 2742, 2396,
	2646, 2077, 2635, 2628, 2406, 166, 2710, 1648, 2412, 488,
	2698, 1777, 2597, 1746, 1988, 2435, 1656, 2681, 2409, 2571,
	2272, 2568, 482, 2566, 2634, 1956, 2600, 2282, 895, 2061,
	1894, 1877, 526, 1695, 1886, 1206, 1896, 1273, 1773, 2472,
	527, 532, 1754, 2316, 2510, 1755, 1747, 2125, 1494, 1676,
	1651, 1720, 2078, 802, 729, 2066, 2455, 2261, 2256, 1577,
	1772, 2318, 1876, 1986, 1586, 1278, 55, 6, 451, 451,
	1286, 1162, 1127, 1524, 459, 177, 8, 1955, 440, 176,
	7, 1502, 2142, 849, 1104, 1806, 1649, 1283, 2188, 1348,
	1774, 2105, 1247, 1892, 36, 536, 1291, 1936, 1222, 1192,
	2602, 181, 2601, 181, 1981, 840, 841, 446, 1404, 1559,
	1560, 2218, 525, 834, 835, 1784, 760, 1353, 839, 1339,
	527, 2219, 1388, 1753, 26, 114, 800, 1129, 912, 35,
	1143, 1254, 544, 14, 1163, 1750, 15, 1736, 1347, 1710,
	2085, 789, 1523, 461, 671, 534, 728, 1139, 491, 1191,
	1189, 1410, 13, 474, 1411, 32, 490, 464, 23, 16,
	10, 167, 1246, 706, 1099, 1073, 1155, 476, 163, 673,
	160, 726, 710, 3019, 748, 1550, 1781, 837, 2756, 1791,
	2705, 2244, 2244, 473, 2244, 2177, 836, 2128, 838, 2131,
	2129, 1507, 472, 2126, 1261, 469, 833, 1257, 832, 833,
	1035, 2794, 165, 833, 1090, 448, 1175, 1259, 790, 2858,
	2468, 471, 2466, 1725, 470, 2989, 2984, 2861, 2711, 2015,
	970, 971, 972, 969, 1498, 3082, 457, 1749, 806, 1029,
	480, 672, 164, 831, 970, 971, 972, 969, 2023, 2806,
	164, 8, 164, 164, 164, 7, 164, 164, 439, 3148,
	821, 682, 2797, 933, 2285, 164, 51, 156, 132, 3040,
	1306, 2888, 2792, 1091, 1299, 2171, 2287, 2814, 2815, 164,
	51, 156, 132, 2793, 2163, 1778, 2740, 2883, 3113, 1532,
	113, 1114, 1113, 486, 2534, 1789, 487, 803, 2487, 1518,
	1303, 805, 2480, 1119, 1296, 113, 1940, 164, 51, 156,
	132, 161, 2103, 3041, 2104, 948, 967, 2886, 949, 161,
	2798, 1305, 161, 161, 2441, 1298, 161, 1092, 1660, 662,
	1693, 661, 663, 664, 161, 665, 666, 2442, 2443, 2091,
	1324, 1193, 2090, 1195, 1340, 2092, 951, 1344, 161, 2258,
	1171, 1661, 1662, 1172, 1508, 1509, 2143, 675, 769, 2259,
	1151, 1573, 683, 1160, 1161, 1356, 941, 965, 1158, 943,
	799, 1343, 1157, 1160, 1161, 960, 161, 3201, 798, 3085,
	2879, 452, 3169, 3170, 3085, 3144, 3084, 3143, 3083, 3142,
	3084, 452, 905, 778, 3083, 2991, 1864, 944, 2473, 816,
	812, 807, 811, 814, 3187, 3188, 3070, 2257, 3073, 477,
	477, 2813, 452, 1989, 3147, 2714, 2987, 3199, 1431, 3070,
	1360, 946, 2994, 2995, 2996, 2997, 2474, 819, 2475, 2714,
	915, 810, 2158, 900, 902, 906, 1793, 2352, 2802, 1174,
	3088, 1667, 2723, 1260, 1258, 2743, 1677, 1335, 1785, 2055,
	1345, 2893, 1935, 2750, 2582, 1733, 2816, 2572, 2168, 915,
	2799, 2803, 2801, 2800, 3087, 2247, 3014, 1671, 717, 2021,
	2580, 2498, 937, 1342, 973, 962, 1003, 897, 131, 2264,
	162, 936, 817, 1002, 947, 843, 2500, 903, 2400, 820,
	3017, 1011, 899, 1267, 1266, 3150, 3151, 939, 2808, 2809,
	154, 2859, 2467, 2890, 2058, 928, 808, 2057, 924, 942,
	945, 2576, 2878, 2062, 1018, 904, 3194, 905, 801, 2880,
	521, 2596, 901, 523, 3203, 2577, 2578, 3037, 522, 818,
	3168, 1359, 1358, 774, 2610, 938, 773, 963, 964, 3101,
	2816, 2579, 1790, 2293, 806, 1366, 1369, 1370, 2405, 1795,
	1797, 1798, 2795, 1149, 2828, 2821, 1367, 1942, 2807, 3198,
	950, 1038, 2276, 2277, 2278, 2279, 1183, 479, 3096, 809,
	474, 474, 478, 1427, 3295, 1691, 1692, 2647, 2648, 1424,
	958, 959, 3279, 1426, 1423, 1425, 1429, 1430, 3227, 1341,
	1089, 1428, 3159, 3155, 3156, 1173, 3159, 3234, 2651, 1138,
	473, 473, 2831, 803, 3013, 2949, 3239, 805, 3259, 472,
	472, 940, 469, 469, 2938, 806, 2032, 2031, 2871, 919,
	917, 916, 779, 2574, 1097, 447, 1100, 3018, 471, 471,
	1779, 470, 470, 908, 909, 2726, 2504, 2270, 2243, 775,
	1039, 1202, 925, 1136, 2944, 815, 1070, 1201, 2004, 917,
	916, 1779, 1779, 1991, 1984, 2006, 921, 922, 729, 2959,
	2960, 2961, 2963, 2962, 2052, 2053, 926, 833, 1153, 1152,
	1135, 1134, 3290, 3296, 803, 3266, 833, 833, 805, 833,
	3030, 3038, 813, 896, 833, 833, 3302, 2812, 1009, 3149,
	2551, 475, 2774, 1807, 3039, 1005, 1006, 1007, 1008, 1792,
	1984, 1780, 777, 2127, 2287, 452, 2380, 1185, 2856, 1159,
	2643, 1105, 2005, 440, 440, 910, 2107, 1262, 486, 475,
	3067, 1190, 440, 440, 1156, 2164, 1217, 1217, 2095, 452,
	2019, 672, 2887, 1782, 1434, 1435, 1436, 1437, 1438, 1439,
	1432, 1433, 3240, 1160, 1161, 1111, 2811, 3204, 477, 1100,
	447, 133, 52, 1250, 1250, 1215, 1215, 2583, 2573, 133,
	933, 133, 133, 133, 181, 133, 133, 1249, 1249, 3015,
	1150, 1678, 2889, 440, 133, 1219, 2172, 1224, 776, 2263,
	52, 1368, 927, 1160, 1161, 1796, 2650, 1990, 133, 2501,
	1994, 2001, 1992, 1106, 1107, 1108, 1109, 1110, 3289, 1112,
	719, 1181, 720, 2503, 1118, 1047, 1048, 2894, 2353, 2561,
	2354, 2355, 1098, 1117, 2575, 801, 133, 1116, 1115, 481,
	770, 1668, 1290, 2644, 1293, 1223, 1794, 1336, 1268, 1301,
	953, 2951, 2350, 954, 1124, 2267, 2268, 2512, 2511, 1211,
	1212, 2647, 2648, 932, 2437, 2439, 1993, 1670, 2246, 1322,
	2266, 1075, 1880, 1103, 1077, 1511, 2452, 2453, 2940, 1095,
	3301, 956, 2939, 1217, 2594, 1217, 905, 1512, 673, 1132,
	3237, 3238, 2945, 2946, 1137, 2371, 2372, 1307, 1879, 1102,
	1510, 1147, 1145, 1146, 1140, 1144, 1144, 1144, 685, 1165,
	1166, 2044, 1168, 1169, 1170, 1882, 1881, 1184, 1271, 686,
	1274, 1275, 2925, 772, 1093, 1094, 771, 1140, 1140, 1126,
	723, 724, 725, 1361, 1362, 1363, 1364, 1365, 1995, 3242,
	1176, 1177, 2075, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1164, 952, 1242, 1167, 1399,
	1400, 1317, 1318, 1200, 1280, 1281, 1409, 721, 968, 2678,
	2381, 2383, 2384, 2385, 2382, 2615, 3308, 1406, 1407, 1408,
	1458, 933, 1448, 1449, 1450, 1442, 2145, 689, 1337, 676,
	1288, 2674, 806, 1452, 957, 1464, 806, 2298, 1465, 3307,
	1225, 1101, 2763, 1352, 1467, 1285, 1235, 457, 1289, 1355,
	2595, 1474, 1475, 1241, 2000, 1240, 1251, 2370, 1998, 955,
	1297, 1197, 1199, 2725, 1304, 1252, 3006, 2438, 1867, 3007,
	1209, 1210, 2163, 3006, 3298, 474, 3007, 1496, 688, 2653,
	2645, 1500, 691, 690, 1503, 1331, 1713, 1371, 968, 1333,
	2299, 3001, 2076, 1321, 3280, 452, 676, 1522, 1217, 1526,
	1527, 1320, 1529, 1530, 931, 473, 2076, 1492, 718, 452,
	3275, 968, 1217, 2252, 472, 1330, 729, 469, 1889, 1549,
	1349, 1263, 3009, 3269, 1217, 673, 2249, 1327, 3268, 3009,
	1185, 1938, 770, 471, 1495, 468, 470, 1308, 1313, 1309,
	3263, 1890, 1891, 1326, 1839, 1457, 3299, 1838, 3246, 1329,
	1328, 1325, 1351, 3008, 1572, 1551, 1551, 2150, 1346, 3220,
	3008, 1338, 1578, 1578, 780, 1185, 1787, 1185, 1185, 3177,
	3171, 452, 968, 1522, 1522, 2299, 2018, 1217, 1645, 1646,
	1658, 2749, 3276, 3123, 2107, 1521, 1440, 1441, 1576, 1444,
	1528, 1519, 3061, 3060, 440, 1787, 1217, 1459, 1390, 930,
	1787, 3056, 824, 829, 830, 1536, 970, 971, 972, 969,
	1466, 1496, 1468, 1397, 1398, 772, 1496, 1496, 771, 968,
	1787, 452, 1522, 1217, 1711, 1700, 3055, 452, 452, 1704,
	1705, 3221, 1991, 1994, 3054, 1708, 1709, 1778, 1659, 1071,
	1715, 3178, 3022, 1443, 1596, 1937, 3053, 181, 3021, 1979,
	181, 181, 2532, 181, 2912, 3022, 1517, 1141, 1872, 2835,
	1723, 1640, 1641, 1726, 3062, 1960, 1729, 1584, 1531, 1731,
	1533, 1534, 1535, 3022, 1469, 931, 2662, 1686, 1687, 1843,
	2972, 1769, 1672, 1689, 1125, 1561, 1493, 1563, 1564, 1458,
	1458, 1757, 2076, 2678, 1402, 1525, 1458, 1458, 3022, 933,
	1569, 1764, 1579, 1664, 1203, 1666, 3022, 2432, 2225, 1541,
	1697, 1499, 3222, 1699, 1679, 1684, 1685, 1696, 3022, 2833,
	3022, 1554, 2785, 1696, 1696, 1549, 2913, 2616, 1580, 1217,
	1776, 2107, 1724, 1557, 1558, 1727, 1728, 2217, 1730, 1140,
	1702, 1703, 1546, 2457, 1545, 2178, 1552, 1553, 2663, 2301,
	1567, 1568, 1556, 1566, 1818, 1581, 1582, 1583, 1562, 2166,
	1570, 1995, 2165, 2157, 1144, 3002, 1990, 1984, 1989, 3079,
	1987, 1992, 3002, 1142, 1525, 2161, 3003, 2154, 1871, 2076,
	968, 1770, 2152, 970, 971, 972, 969, 1758, 1976, 1800,
	826, 827, 828, 1565, 898, 1804, 1805, 2147, 1834, 1644,
	1647, 2140, 2195, 2138, 1819, 1688, 2136, 1810, 1571, 968,
	1814, 1574, 1575, 1768, 1752, 1673, 1663, 968, 1665, 1718,
	1349, 1752, 1516, 2134, 1959, 1993, 1310, 1868, 985, 1817,
	890, 886, 887, 888, 889, 806, 2200, 1015, 2199, 2198,
	2196, 1698, 806, 1849, 1848, 1837, 2620, 1960, 1828, 2148,
	1825, 1827, 918, 3102, 2153, 1721, 898, 1826, 1832, 1786,
	1694, 1719, 1314, 2087, 970, 971, 972, 969, 1844, 2148,
	1846, 893, 2495, 2141, 2611, 2139, 1845, 1853, 2135, 474,
	891, 1850, 1851, 1852, 2126, 1738, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 803, 2135, 1960, 3103, 805, 1867,
	1761, 803, 2197, 1141, 526, 805, 905, 1930, 452, 473,
	1870, 1759, 1205, 3255, 1767, 968, 968, 968, 472, 3243,
	968, 469, 452, 968, 452, 452, 452, 1771, 806, 968,
	2926, 1787, 1447, 1446, 1315, 898, 1957, 471, 2016, 2777,
	470, 3020, 1766, 1762, 2775, 1763, 1964, 1185, 1447, 1446,
	2612, 1130, 558, 568, 1808, 1131, 1961, 1969, 1207, 2998,
	2942, 559, 2941, 567, 560, 564, 563, 561, 562, 1208,
	1722, 1185, 2755, 2679, 2927, 1799, 988, 989, 990, 991,
	992, 985, 1812, 2778, 2011, 1801, 2672, 803, 2776, 2667,
	2664, 805, 2589, 2402, 2613, 1390, 986, 987, 988, 989,
	990, 991, 992, 985, 1931, 2274, 2245, 1396, 2176, 1802,
	1803, 1204, 2151, 2097, 1121, 2703, 565, 1120, 1947, 1142,
	1949, 1950, 1951, 1393, 1395, 1392, 907, 1394, 2017, 1897,
	970, 971, 972, 969, 2185, 2201, 2202, 2120, 1520, 1405,
	2459, 2706, 1480, 687, 2080, 2080, 1658, 2080, 566, 3141,
	1405, 485, 1813, 1968, 970, 971, 972, 969, 1473, 1255,
	2210, 1722, 1932, 2704, 969, 440, 440, 972, 969, 1496,
	2954, 1496, 2953, 905, 970, 971, 972, 969, 2476, 1217,
	452, 1863, 1865, 1866, 2342, 2130, 2341, 1948, 2324, 1496,
	1496, 2322, 452, 2896, 2897, 2933, 1883, 905, 447, 3284,
	3272, 3228, 1250, 3223, 1658, 3161, 3132, 2115, 2101, 2117,
	3104, 1939, 1973, 181, 3258, 1974, 1249, 1038, 976, 977,
	978, 979, 980, 981, 982, 974, 2082, 1978, 2086, 1830,
	2093, 3046, 2094, 2084, 2891, 1462, 1965, 984, 983, 993,
	994, 986, 987, 988, 989, 990, 991, 992, 985, 1463,
	2098, 2099, 970, 971, 972, 969, 1841, 1017, 1983, 2159,
	1982, 1977, 1776, 1996, 1997, 692, 2002, 1972, 3042, 1217,
	1016, 1217, 2754, 1217, 2985, 3257, 1223, 1975, 905, 2929,
	2928, 1144, 2779, 2747, 970, 971, 972, 969, 1696, 2746,
	2892, 2114, 806, 2187, 2392, 1829, 1039, 2390, 2121, 2581,
	2169, 2491, 2471, 1966, 1967, 2109, 2470, 2375, 2374, 1217,
	2204, 2373, 2059, 1970, 1971, 2388, 2365, 2377, 2186, 2273,
	1897, 970, 971, 972, 969, 2211, 2359, 2205, 2206, 2088,
	1217, 2407, 2358, 2357, 2356, 2208, 2209, 1741, 1215, 2748,
	1740, 2213, 1739, 970, 971, 972, 969, 1735, 2214, 1734,
	2391, 803, 2122, 2389, 1311, 805, 1088, 2203, 2102, 1215,
	993, 994, 986, 987, 988, 989, 990, 991, 992, 985,
	2110, 2387, 1496, 2376, 2113, 2238, 2239, 1503, 2212, 905,
	2215, 970, 971, 972, 969, 2111, 2567, 3193, 1874, 1875,
	1256, 2022, 2866, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	3189, 2173, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040,
	2041, 2042, 2043, 2170, 2045, 2046, 2047, 2048, 2049, 3110,
	2050, 2183, 2189, 2189, 2156, 2175, 3145, 3090, 1217, 2236,
	2900, 2271, 2162, 3076, 3065, 2160, 3050, 1522, 2167, 452,
	970, 971, 972, 969, 3045, 2297, 3044, 3016, 1255, 2986,
	3162, 2303, 1822, 1197, 1199, 3094, 2112, 3273, 2179, 2180,
	970, 971, 972, 969, 2935, 2119, 1349, 2312, 2909, 2895,
	2864, 2194, 905, 2862, 2842, 2192, 970, 971, 972, 969,
	2321, 970, 971, 972, 969, 2839, 2837, 905, 905, 905,
	1578, 521, 2397, 905, 523, 2332, 2333, 2334, 905, 522,
	2338, 2339, 2250, 2340, 2253, 2745, 2744, 1275, 2283, 2741,
	984, 983, 993, 994, 986, 987, 988, 989, 990, 991,
	992, 985, 2237, 2182, 2240, 2284, 2080, 2731, 2673, 2669,
	2220, 2221, 2660, 2659, 2590, 2288, 2226, 2558, 2557, 2556,
	2393, 2295, 1596, 2304, 970, 971, 972, 969, 440, 1280,
	1281, 1878, 2505, 1522, 905, 1658, 1658, 1658, 1658, 2502,
	2294, 2469, 2873, 2446, 2386, 2378, 905, 1658, 2368, 1288,
	2080, 2366, 2319, 2362, 2254, 2361, 2319, 2360, 2315, 2525,
	1869, 2269, 618, 617, 1285, 1816, 1217, 1289, 970, 971,
	972, 969, 1743, 2326, 570, 115, 2302, 1737, 452, 452,
	115, 1506, 2296, 1505, 8, 1312, 1046, 1042, 7, 1041,
	894, 2327, 2328, 181, 2314, 684, 2331, 2311, 181, 2317,
	3106, 2337, 2999, 2323, 164, 1525, 156, 132, 2916, 2330,
	2772, 2463, 2771, 2465, 2770, 1815, 2762, 2730, 2524, 1458,
	2428, 1458, 2718, 2320, 2486, 2709, 2708, 2697, 2490, 2696,
	458, 1496, 2872, 115, 1217, 2621, 1496, 2497, 2367, 970,
	971, 972, 969, 2305, 970, 971, 972, 969, 2530, 2523,
	2515, 2309, 2310, 2514, 2307, 2509, 2454, 2415, 970, 971,
	972, 969, 2251, 2398, 2248, 2137, 2133, 2403, 2132, 2415,
	1854, 1847, 2508, 161, 2449, 2450, 1842, 2429, 2460, 1840,
	2427, 2825, 2431, 2464, 1836, 1835, 1833, 673, 1495, 970,
	971, 972, 969, 2485, 2306, 2529, 1824, 2447, 2308, 1821,
	2430, 2416, 2417, 2418, 2419, 2260, 2444, 970, 971, 972,
	969, 1820, 1742, 2483, 970, 971, 972, 969, 2518, 2489,
	2520, 2728, 2462, 905, 2494, 2461, 2458, 1491, 1490, 1489,
	1461, 2570, 2499, 1460, 2440, 1445, 804, 1451, 164, 2528,
	115, 2585, 2477, 2484, 2482, 2479, 452, 970, 971, 972,
	969, 1229, 2493, 2527, 1227, 115, 905, 115, 3297, 3254,
	905, 905, 905, 3248, 806, 970, 971, 972, 969, 1658,
	1957, 806, 2619, 2507, 3235, 3232, 3122, 2526, 2623, 970,
	971, 972, 969, 2516, 2517, 3230, 2513, 2348, 2349, 2633,
	2506, 2636, 2481, 2636, 2636, 2593, 2521, 2522, 905, 2488,
	3131, 2363, 2364, 970, 971, 972, 969, 161, 1036, 3063,
	2640, 3052, 2655, 3047, 1270, 2519, 2401, 2967, 2952, 1217,
	1217, 2948, 2850, 2652, 2283, 2399, 2555, 2552, 2848, 2823,
	2822, 2654, 2819, 2562, 2559, 2234, 2818, 2560, 2757, 2605,
	2604, 1279, 2591, 1272, 1128, 2394, 1897, 2325, 1215, 1215,
	2291, 2586, 2606, 2607, 2608, 2290, 2617, 2289, 1284, 2592,
	3252, 970, 971, 972, 969, 452, 1287, 2656, 2657, 1276,
	2570, 2632, 806, 2235, 2614, 2618, 2146, 2096, 2535, 2536,
	2641, 1522, 1522, 2051, 2537, 2538, 2539, 2540, 1958, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2637, 2638, 1391,
	2565, 161, 1706, 2631, 2642, 1180, 2233, 1182, 1515, 1186,
	1187, 1188, 1514, 984, 983, 993, 994, 986, 987, 988,
	989, 990, 991, 992, 985, 1334, 1300, 1277, 2204, 1072,
	806, 1069, 970, 971, 972, 969, 2232, 2707, 1068, 1230,
	1231, 1232, 1233, 1234, 1067, 1236, 1237, 1238, 1239, 1066,
	1065, 1064, 1244, 1245, 3283, 2231, 1063, 1062, 2627, 2639,
	1061, 1696, 970, 971, 972, 969, 2688, 2230, 1060, 1059,
	1058, 2666, 2665, 2670, 452, 2671, 1057, 1056, 2661, 2675,
	2676, 970, 971, 972, 969, 2229, 2686, 2668, 1055, 2626,
	1054, 1053, 1052, 970, 971, 972, 969, 1051, 1050, 1049,
	2690, 1045, 2693, 2694, 2695, 1044, 1043, 1040, 1033, 1032,
	2727, 970, 971, 972, 969, 1030, 1029, 2729, 1028, 2702,
	983, 993, 994, 986, 987, 988, 989, 990, 991, 992,
	985, 2622, 2228, 1027, 3120, 2624, 2625, 1026, 1025, 1024,
	115, 115, 804, 1023, 2719, 2227, 1022, 1021, 1020, 1019,
	1014, 2720, 2721, 2224, 1013, 1012, 2722, 935, 970, 971,
	972, 969, 892, 3118, 2181, 2732, 3116, 2761, 2682, 2683,
	2724, 970, 971, 972, 969, 2767, 905, 2223, 2737, 970,
	971, 972, 969, 2820, 1963, 2080, 1658, 2782, 984, 983,
	993, 994, 986, 987, 988, 989, 990, 991, 992, 985,
	1944, 905, 923, 970, 971, 972, 969, 2222, 3209, 2734,
	2633, 3207, 3167, 1001, 905, 677, 678, 679, 680, 2685,
	676, 2275, 2108, 1745, 905, 934, 2424, 2422, 2687, 1217,
	2852, 2425, 2423, 970, 971, 972, 969, 2853, 2421, 2677,
	2426, 2752, 2072, 2073, 2420, 1522, 2155, 2149, 2736, 905,
	1122, 1543, 1544, 1496, 2689, 2784, 2588, 449, 1215, 1538,
	1539, 1540, 2020, 2817, 1496, 2242, 2780, 2847, 2769, 2830,
	2849, 2216, 1632, 2781, 2810, 181, 2207, 2834, 2855, 100,
	54, 806, 2563, 2629, 2854, 2630, 2851, 53, 905, 2553,
	2554, 1228, 2824, 2844, 1264, 2829, 2826, 970, 971, 972,
	969, 2832, 970, 971, 972, 969, 2144, 1874, 1875, 2738,
	453, 2881, 2184, 2836, 2840, 2838, 2174, 1074, 2841, 1294,
	806, 2846, 2845, 1933, 2788, 1401, 1707, 2063, 905, 1217,
	1217, 929, 3086, 2843, 905, 454, 455, 2827, 970, 971,
	972, 969, 2919, 456, 2919, 2603, 2564, 2337, 2764, 2313,
	1078, 970, 971, 972, 969, 2255, 1953, 1547, 1215, 2907,
	2857, 1513, 2867, 3180, 2068, 2071, 2072, 2073, 2069, 1217,
	2070, 2074, 2415, 3049, 2934, 2882, 2344, 2905, 2884, 2658,
	2910, 1447, 1446, 2345, 2346, 2347, 2060, 452, 2056, 905,
	905, 1086, 1087, 905, 905, 1084, 1085, 3249, 2907, 1082,
	1083, 2911, 1080, 1081, 1643, 1179, 1178, 961, 2970, 2923,
	2922, 2415, 2692, 2106, 2969, 1765, 2964, 1133, 2784, 1549,
	1076, 2977, 2817, 2956, 2957, 2932, 3153, 2965, 2966, 2981,
	2982, 2936, 3138, 2810, 2068, 2071, 2072, 2073, 2069, 3136,
	2070, 2074, 3097, 2783, 3075, 3074, 3072, 3064, 2980, 2786,
	2979, 2903, 2787, 2863, 3012, 2733, 2716, 2715, 2700, 2007,
	1079, 2974, 2699, 2758, 2759, 2760, 2456, 1701, 3005, 2973,
	1551, 3211, 3210, 3211, 2492, 2975, 1226, 1946, 1823, 920,
	3210, 458, 2950, 2955, 2767, 2717, 2448, 676, 1148, 3024,
	3032, 62, 2874, 677, 678, 679, 680, 2, 676, 168,
	3, 1194, 3000, 3004, 3010, 2089, 1690, 1221, 115, 1,
	1504, 681, 2903, 2903, 2433, 2434, 2903, 2903, 2691, 2436,
	1783, 2404, 2054, 3023, 1934, 2584, 1123, 3025, 722, 3026,
	3027, 1453, 3033, 3035, 3028, 3034, 1319, 823, 905, 914,
	1316, 913, 1217, 911, 1403, 572, 3043, 1748, 2395, 2369,
	2976, 3179, 3217, 3130, 3182, 1332, 556, 3066, 3048, 2990,
	3134, 2992, 2869, 1788, 966, 2478, 744, 609, 583, 1031,
	115, 1215, 3057, 1302, 115, 1295, 2533, 825, 582, 2751,
	2265, 2451, 3036, 822, 745, 115, 1732, 2988, 1265, 1269,
	3058, 2924, 3081, 905, 1018, 115, 2773, 2609, 2292, 3071,
	3069, 3293, 3282, 3098, 3264, 3247, 2930, 2931, 3158, 3278,
	3197, 3233, 2877, 2875, 2876, 3226, 3154, 3093, 492, 1669,
	438, 787, 2968, 905, 3092, 3089, 1744, 493, 1962, 3146,
	1217, 3051, 3107, 3125, 3128, 703, 1943, 2914, 2915, 3100,
	704, 705, 2281, 2280, 1372, 975, 3108, 1389, 2549, 3115,
	3117, 3119, 3121, 2550, 1010, 531, 3129, 3114, 1811, 1215,
	3105, 2903, 2262, 2805, 3137, 2445, 3139, 3140, 3135, 61,
	1217, 3133, 60, 59, 58, 1714, 189, 574, 3124, 188,
	3163, 2898, 3127, 3184, 554, 553, 552, 551, 3152, 550,
	2067, 2065, 2064, 1653, 1652, 1712, 2335, 2329, 2003, 1215,
	2008, 1585, 3186, 2971, 3164, 3111, 3112, 2947, 2379, 1537,
	1999, 3172, 1602, 3173, 3185, 3174, 2903, 3175, 3160, 2351,
	3176, 1599, 1598, 2343, 905, 2943, 2937, 1629, 2765, 2918,
	3190, 2789, 3081, 2790, 3191, 2796, 1952, 848, 844, 846,
	847, 845, 2193, 1980, 2598, 1888, 2903, 1887, 1885, 3216,
	1884, 3205, 1096, 3011, 3208, 3206, 3200, 3202, 2735, 1895,
	1893, 2684, 3219, 2680, 1756, 3224, 1501, 905, 3212, 3213,
	3214, 3215, 2241, 1654, 1650, 3225, 1945, 2885, 1542, 3229,
	696, 3231, 1941, 98, 146, 48, 89, 88, 97, 144,
	47, 173, 3186, 3245, 172, 175, 174, 171, 3241, 2123,
	2124, 905, 170, 905, 3185, 1253, 169, 3244, 2921, 3251,
	670, 3253, 38, 37, 33, 3256, 12, 11, 34, 21,
	22, 20, 1323, 19, 3219, 905, 3260, 25, 3262, 31,
	3267, 30, 108, 3271, 3274, 107, 29, 3277, 106, 105,
	104, 103, 3059, 102, 28, 18, 42, 3195, 41, 40,
	9, 3250, 3281, 96, 3288, 94, 27, 95, 3292, 92,
	3291, 93, 90, 73, 1657, 72, 3300, 71, 86, 85,
	84, 83, 3288, 3305, 3304, 3303, 82, 3292, 81, 79,
	3306, 80, 743, 70, 69, 68, 1470, 1471, 1472, 67,
	1355, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 3099, 984, 983, 993, 994, 986, 987,
	988, 989, 990, 991, 992, 985, 66, 91, 77, 3109,
	87, 78, 76, 75, 1355, 74, 1355, 996, 65, 1000,
	64, 115, 63, 130, 115, 115, 128, 115, 129, 127,
	126, 125, 124, 123, 122, 997, 999, 995, 1355, 998,
	984, 983, 993, 994, 986, 987, 988, 989, 990, 991,
	992, 985, 43, 44, 45, 46, 140, 139, 141, 590,
	143, 145, 142, 804, 137, 1809, 135, 138, 332, 136,
	804, 134, 56, 17, 24, 4, 0, 0, 0, 115,
	0, 545, 0, 0, 0, 277, 0, 0, 302, 984,
	983, 993, 994, 986, 987, 988, 989, 990, 991, 992,
	985, 433, 0, 434, 0, 0, 581, 3192, 0, 361,
	316, 2531, 0, 0, 0, 641, 649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 538, 0, 0,
	571, 618, 617, 558, 568, 0, 0, 255, 187, 435,
	0, 436, 559, 0, 567, 560, 564, 563, 561, 562,
	0, 633, 0, 0, 0, 0, 1001, 0, 529, 542,
	0, 546, 0, 0, 984, 983, 993, 994, 986, 987,
	988, 989, 990, 991, 992, 985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 540, 0, 0, 0,
	0, 591, 0, 541, 0, 0, 586, 565, 569, 0,
	0, 0, 0, 246, 366, 382, 256, 357, 395, 261,
	364, 251, 331, 354, 0, 0, 248, 380, 363, 313,
	296, 297, 247, 0, 349, 275, 288, 272, 329, 566,
	589, 593, 271, 655, 587, 390, 250, 0, 389, 328,
	376, 381, 314, 308, 249, 378, 312, 307, 300, 279,
	656, 292, 340, 306, 341, 293, 318, 317, 319, 0,
	0, 0, 0, 0, 418, 984, 983, 993, 994, 986,
	987, 988, 989, 990, 991, 992, 985, 0, 584, 0,
	0, 0, 392, 0, 0, 639, 0, 0, 0, 365,
	0, 0, 301, 0, 0, 0, 588, 0, 352, 334,
	652, 530, 0, 350, 304, 377, 342, 383, 367, 391,
	346, 343, 241, 368, 274, 315, 252, 254, 269, 276,
	278, 280, 281, 324, 325, 337, 356, 369, 370, 371,
	273, 262, 351, 263, 290, 264, 242, 266, 265, 267,
	358, 268, 244, 338, 375, 0, 286, 347, 311, 245,
	310, 339, 374, 373, 253, 399, 405, 406, 0, 0,
	411, 0, 0, 0, 419, 424, 425, 426, 428, 429,
	430, 431, 0, 0, 0, 0, 413, 0, 0, 0,
	1455, 1454, 1456, 404, 284, 238, 239, 444, 637, 330,
	1431, 0, 0, 0, 651, 632, 634, 635, 638, 642,
	643, 644, 645, 646, 648, 650, 654, 443, 0, 0,
	0, 0, 0, 442, 336, 0, 355, 0, 0, 0,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	385, 397, 414, 417, 0, 0, 0, 0, 243, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 653, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 592, 0,
	0, 320, 321, 322, 323, 640, 0, 260, 415, 345,
	0, 0, 0, 0, 0, 0, 0, 0, 1657, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 409, 410,
	283, 289, 427, 291, 259, 335, 285, 394, 298, 0,
	420, 0, 421, 0, 0, 0, 864, 327, 294, 295,
	359, 299, 305, 348, 393, 333, 353, 257, 384, 360,
	309, 0, 0, 662, 636, 661, 663, 664, 660, 665,
	666, 647, 549, 0, 596, 658, 657, 659, 0, 0,
	0, 0, 0, 0, 0, 1427, 0, 0, 0, 0,
	0, 1424, 0, 0, 0, 1426, 1423, 1425, 1429, 1430,
	372, 0, 236, 1428, 240, 0, 303, 0, 344, 282,
	0, 0, 625, 602, 603, 604, 547, 605, 599, 600,
	601, 626, 594, 622, 623, 573, 597, 606, 621, 607,
	624, 627, 628, 667, 668, 613, 669, 610, 629, 620,
	619, 608, 595, 630, 631, 580, 575, 611, 612, 598,
	614, 615, 616, 548, 576, 577, 578, 579, 864, 0,
	0, 400, 401, 402, 423, 386, 852, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 445,
	437, 0, 0, 0, 0, 0, 872, 876, 878, 880,
	882, 883, 885, 0, 890, 886, 887, 888, 889, 0,
	867, 868, 869, 870, 850, 851, 873, 0, 853, 0,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	865, 871, 0, 0, 0, 0, 0, 0, 0, 875,
	877, 879, 881, 884, 0, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1434, 1435, 1436, 1437,
	1438, 1439, 1432, 1433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 852, 0,
	0, 0, 842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 872, 876,
	878, 880, 882, 883, 885, 0, 890, 886, 887, 888,
	889, 0, 867, 868, 869, 870, 850, 851, 873, 0,
	853, 0, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 865, 871, 0, 0, 0, 0, 0, 0,
	0, 875, 877, 879, 881, 884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	1657, 1657, 1657, 0, 0, 0, 0, 0, 866, 0,
	0, 1657, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2190,
	2191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 590, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 277, 1497, 874, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 581, 0, 0, 361, 316, 0,
	115, 0, 0, 641, 649, 0, 0, 0, 0, 0,
	0, 0, 1681, 0, 0, 538, 0, 0, 571, 618,
	617, 558, 568, 0, 0, 255, 187, 435, 0, 436,
	559, 0, 567, 560, 564, 563, 561, 562, 0, 633,
	0, 0, 0, 1657, 0, 0, 529, 542, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 539, 540, 0, 0, 0, 0, 591,
	0, 541, 0, 0, 1682, 565, 569, 874, 0, 0,
	0, 246, 366, 382, 256, 357, 395, 261, 364, 251,
	331, 354, 0, 0, 248, 380, 363, 313, 296, 297,
	247, 0, 349, 275, 288, 272, 329, 566, 589, 593,
	271, 655, 587, 390, 250, 0, 389, 328, 376, 381,
	314, 308, 249, 378, 312, 307, 300, 279, 656, 292,
	340, 306, 341, 293, 318, 317, 319, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 0, 0, 0,
	392, 0, 0, 639, 0, 0, 0, 365, 0, 0,
	301, 0, 0, 0, 588, 0, 352, 334, 652, 530,
	0, 350, 304, 377, 342, 383, 367, 391, 346, 343,
	241, 368, 274, 315, 252, 254, 269, 276, 278, 280,
	281, 324, 325, 337, 356, 369, 370, 371, 273, 262,
	351, 263, 290, 264, 242, 266, 265, 267, 358, 268,
	244, 338, 375, 0, 286, 347, 311, 245, 310, 339,
	374, 373, 253, 399, 405, 406, 0, 0, 411, 0,
	0, 0, 419, 424, 425, 426, 428, 429, 430, 431,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 404, 284, 238, 239, 444, 637, 330, 0, 0,
	0, 0, 651, 632, 634, 635, 638, 642, 643, 644,
	645, 646, 648, 650, 654, 443, 0, 0, 0, 0,
	0, 442, 336, 0, 355, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 362, 385, 397,
	414, 417, 0, 0, 0, 0, 243, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 592, 0, 115, 320,
	321, 322, 323, 640, 0, 260, 415, 345, 0, 0,
	1657, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 283, 289,
	427, 291, 259, 335, 285, 394, 298, 0, 420, 0,
	421, 0, 0, 0, 0, 327, 294, 295, 359, 299,
	305, 348, 393, 333, 353, 257, 384, 360, 309, 0,
	0, 662, 636, 661, 663, 664, 660, 665, 666, 647,
	549, 0, 596, 658, 657, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 115,
	236, 0, 240, 0, 303, 0, 344, 282, 0, 0,
	625, 602, 603, 604, 547, 605, 599, 600, 601, 626,
	594, 622, 623, 573, 597, 606, 621, 607, 624, 627,
	628, 667, 668, 613, 669, 610, 629, 620, 619, 608,
	595, 630, 631, 580, 575, 611, 612, 598, 614, 615,
	616, 548, 576, 577, 578, 579, 164, 590, 0, 400,
	401, 402, 423, 386, 0, 441, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 445, 437, 545,
	0, 0, 0, 277, 0, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 1004, 0, 0, 361, 316, 0,
	0, 0, 0, 641, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 538, 0, 0, 571, 618,
	617, 558, 568, 0, 0, 255, 187, 435, 0, 436,
	559, 0, 567, 560, 564, 563, 561, 562, 0, 633,
	0, 0, 0, 0, 0, 0, 529, 542, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 539, 540, 0, 0, 0, 0, 591,
	0, 541, 0, 0, 586, 565, 569, 0, 0, 0,
	0, 246, 366, 382, 256, 357, 395, 261, 364, 251,
	331, 354, 0, 0, 248, 380, 363, 313, 296, 297,
	247, 0, 349, 275, 288, 272, 329, 566, 589, 593,
	271, 655, 587, 390, 250, 0, 389, 328, 376, 381,
	314, 308, 249, 378, 312, 307, 300, 279, 656, 292,
	340, 306, 341, 293, 318, 317, 319, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 0, 0, 0,
	392, 0, 0, 639, 0, 0, 0, 365, 0, 0,
	301, 0, 0, 0, 588, 0, 352, 334, 652, 530,
	0, 350, 304, 377, 342, 383, 367, 391, 346, 343,
	241, 368, 274, 315, 252, 254, 269, 276, 278, 280,
	281, 324, 325, 337, 356, 369, 370, 371, 273, 262,
	351, 263, 290, 264, 242, 266, 265, 267, 358, 268,
	244, 338, 375, 0, 286, 347, 311, 245, 310, 339,
	374, 373, 253, 399, 405, 406, 0, 0, 411, 0,
	0, 0, 419, 424, 425, 426, 428, 429, 430, 431,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 404, 284, 238, 239, 444, 637, 330, 0, 0,
	0, 0, 651, 632, 634, 635, 638, 642, 643, 644,
	645, 646, 648, 650, 654, 443, 0, 0, 0, 0,
	0, 442, 336, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 385, 397,
	414, 417, 0, 0, 0, 0, 243, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 592, 0, 0, 320,
	321, 322, 323, 640, 0, 260, 415, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 283, 289,
	427, 291, 259, 335, 285, 394, 298, 0, 420, 0,
	421, 0, 0, 0, 0, 327, 294, 295, 359, 299,
	305, 348, 393, 333, 353, 257, 384, 360, 309, 0,
	0, 662, 636, 661, 663, 664, 660, 665, 666, 647,
	549, 0, 596, 658, 657, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	236, 0, 240, 0, 303, 133, 344, 282, 0, 0,
	625, 602, 603, 604, 547, 605, 599, 600, 601, 626,
	594, 622, 623, 573, 597, 606, 621, 607, 624, 627,
	628, 667, 668, 613, 669, 610, 629, 620, 619, 608,
	595, 630, 631, 580, 575, 611, 612, 598, 614, 615,
	616, 548, 576, 577, 578, 579, 0, 590, 0, 400,
	401, 402, 423, 386, 0, 441, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 445, 437, 545,
	0, 0, 0, 277, 3261, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 581, 0, 0, 361, 316, 0,
	0, 0, 0, 641, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 538, 0, 0, 571, 618,
	617, 558, 568, 0, 0, 255, 187, 435, 0, 436,
	559, 0, 567, 560, 564, 563, 561, 562, 0, 633,
	0, 0, 0, 0, 0, 0, 529, 542, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 539, 540, 0, 0, 0, 0, 591,
	0, 541, 0, 0, 586, 565, 569, 0, 0, 0,
	0, 246, 366, 382, 256, 357, 395, 261, 364, 251,
	331, 354, 0, 0, 248, 380, 363, 313, 296, 297,
	247, 0, 349, 275, 288, 272, 329, 566, 589, 593,
	271, 655, 587, 390, 250, 0, 389, 328, 376, 381,
	314, 308, 249, 378, 312, 307, 300, 279, 656, 292,
	340, 306, 341, 293, 318, 317, 319, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 0, 0, 0,
	392, 0, 0, 639, 0, 0, 0, 365, 0, 0,
	301, 0, 0, 0, 588, 0, 352, 334, 652, 530,
	0, 350, 304, 377, 342, 383, 367, 391, 346, 343,
	241, 368, 274, 315, 252, 254, 269, 276, 278, 280,
	281, 324, 325, 337, 356, 369, 370, 371, 273, 262,
	351, 263, 290, 264, 242, 266, 265, 267, 358, 268,
	244, 338, 375, 0, 286, 347, 311, 245, 310, 339,
	374, 373, 253, 399, 405, 406, 0, 0, 411, 0,
	0, 0, 419, 424, 425, 426, 428, 429, 430, 431,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 404, 284, 238, 239, 444, 637, 330, 0, 0,
	0, 0, 651, 632, 634, 635, 638, 642, 643, 644,
	645, 646, 648, 650, 654, 443, 0, 0, 0, 0,
	0, 442, 336, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 385, 397,
	414, 417, 0, 0, 0, 0, 243, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 592, 0, 0, 320,
	321, 322, 323, 640, 0, 260, 415, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 283, 289,
	427, 291, 259, 335, 285, 394, 298, 0, 420, 0,
	421, 0, 0, 0, 0, 327, 294, 295, 359, 299,
	305, 348, 393, 333, 353, 257, 384, 360, 309, 0,
	0, 662, 636, 661, 663, 664, 660, 665, 666, 647,
	549, 0, 596, 658, 657, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	236, 0, 240, 0, 303, 0, 344, 282, 0, 0,
	625, 602, 603, 604, 547, 605, 599, 600, 601, 626,
	594, 622, 623, 573, 597, 606, 621, 607, 624, 627,
	628, 667, 668, 613, 669, 610, 629, 620, 619, 608,
	595, 630, 631, 580, 575, 611, 612, 598, 614, 615,
	616, 548, 576, 577, 578, 579, 0, 590, 0, 400,
	401, 402, 423, 386, 0, 441, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 445, 437, 545,
	0, 0, 0, 277, 1497, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 581, 0, 0, 361, 316, 0,
	0, 0, 0, 641, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 538, 0, 0, 571, 618,
	617, 558, 568, 0, 0, 255, 187, 435, 0, 436,
	559, 0, 567, 560, 564, 563, 561, 562, 0, 633,
	0, 0, 0, 0, 0, 0, 529, 542, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 539, 540, 0, 0, 0, 0, 591,
	0, 541, 0, 0, 586, 565, 569, 0, 0, 0,
	0, 246, 366, 382, 256, 357, 395, 261, 364, 251,
	331, 354, 0, 0, 248, 380, 363, 313, 296, 297,
	247, 0, 349, 275, 288, 272, 329, 566, 589, 593,
	271, 655, 587, 390, 250, 0, 389, 328, 376, 381,
	314, 308, 249, 378, 312, 307, 300, 279, 656, 292,
	340, 306, 341, 293, 318, 317, 319, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 0, 0, 0,
	392, 0, 0, 639, 0, 0, 0, 365, 0, 0,
	301, 0, 0, 0, 588, 0, 352, 334, 652, 530,
	0, 350, 304, 377, 342, 383, 367, 391, 346, 343,
	241, 368, 274, 315, 252, 254, 269, 276, 278, 280,
	281, 324, 325, 337, 356, 369, 370, 371, 273, 262,
	351, 263, 290, 264, 242, 266, 265, 267, 358, 268,
	244, 338, 375, 0, 286, 347, 311, 245, 310, 339,
	374, 373, 253, 399, 405, 406, 0, 0, 411, 0,
	0, 0, 419, 424, 425, 426, 428, 429, 430, 431,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 404, 284, 238, 239, 444, 637, 330, 0, 0,
	0, 0, 651, 632, 634, 635, 638, 642, 643, 644,
	645, 646, 648, 650, 654, 443, 0, 0, 0, 0,
	0, 442, 336, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 385, 397,
	414, 417, 0, 0, 0, 0, 243, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 592, 0, 0, 320,
	321, 322, 323, 640, 0, 260, 415, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 283, 289,
	427, 291, 259, 335, 285, 394, 298, 0, 420, 0,
	421, 0, 0, 0, 0, 327, 294, 295, 359, 299,
	305, 348, 393, 333, 353, 257, 384, 360, 309, 0,
	0, 662, 636, 661, 663, 664, 660, 665, 666, 647,
	549, 0, 596, 658, 657, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	236, 0, 240, 0, 303, 0, 344, 282, 0, 0,
	625, 602, 603, 604, 547, 605, 599, 600, 601, 626,
	594, 622, 623, 573, 597, 606, 621, 607, 624, 627,
	628, 667, 668, 613, 669, 610, 629, 620, 619, 608,
	595, 630, 631, 580, 575, 611, 612, 598, 614, 615,
	616, 548, 576, 577, 578, 579, 0, 590, 0, 400,
	401, 402, 423, 386, 0, 441, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 445, 437, 545,
	0, 0, 0, 277, 0, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 581, 0, 0, 361, 316, 0,
	0, 0, 0, 641, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 538, 0, 0, 571, 618,
	617, 558, 568, 0, 0, 255, 187, 435, 0, 436,
	559, 0, 567, 560, 564, 563, 561, 562, 0, 633,
	0, 0, 0, 0, 0, 0, 529, 542, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 539, 540, 1248, 0, 0, 0, 591,
	0, 541, 0, 0, 586, 565, 569, 0, 0, 0,
	0, 246, 366, 382, 256, 357, 395, 261, 364, 251,
	331, 354, 0, 0, 248, 380, 363, 313, 296, 297,
	247, 0, 349, 275, 288, 272, 329, 566, 589, 593,
	271, 655, 587, 390, 250, 0, 389, 328, 376, 381,
	314, 308, 249, 378, 312, 307, 300, 279, 656, 292,
	340, 306, 341, 293, 318, 317, 319, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 0, 0, 0,
	392, 0, 0, 639, 0, 0, 0, 365, 0, 0,
	301, 0, 0, 0, 588, 0, 352, 334, 652, 530,
	0, 350, 304, 377, 342, 383, 367, 391, 346, 343,
	241, 368, 274, 315, 252, 254, 269, 276, 278, 280,
	281, 324, 325, 337, 356, 369, 370, 371, 273, 262,
	351, 263, 290, 264, 242, 266, 265, 267, 358, 268,
	244, 338, 375, 0, 286, 347, 311, 245, 310, 339,
	374, 373, 253, 399, 405, 406, 0, 0, 411, 0,
	0, 0, 419, 424, 425, 426, 428, 429, 430, 431,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 404, 284, 238, 239, 444, 637, 330, 0, 0,
	0, 0, 651, 632, 634, 635, 638, 642, 643, 644,
	645, 646, 648, 650, 654, 443, 0, 0, 0, 0,
	0, 442, 336, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 385, 397,
	414, 417, 0, 0, 0, 0, 243, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 592, 0, 0, 320,
	321, 322, 323, 640, 0, 260, 415, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 283, 289,
	427, 291, 259, 335, 285, 394, 298, 0, 420, 0,
	421, 0, 0, 0, 0, 327, 294, 295, 359, 299,
	305, 348, 393, 333, 353, 257, 384, 360, 309, 0,
	0, 662, 636, 661, 663, 664, 660, 665, 666, 647,
	549, 0, 596, 658, 657, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	236, 0, 240, 0, 303, 0, 344, 282, 0, 0,
	625, 602, 603, 604, 547, 605, 599, 600, 601, 626,
	594, 622, 623, 573, 597, 606, 621, 607, 624, 627,
	628, 667, 668, 613, 669, 610, 629, 620, 619, 608,
	595, 630, 631, 580, 575, 611, 612, 598, 614, 615,
	616, 548, 576, 577, 578, 579, 0, 0, 0, 400,
	401, 402, 423, 386, 590, 441, 0, 1831, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 445, 437, 0,
	0, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	277, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 0, 434, 0,
	0, 581, 0, 0, 361, 316, 0, 0, 0, 0,
	641, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 538, 0, 0, 571, 618, 617, 558, 568,
	0, 0, 255, 187, 435, 0, 436, 559, 0, 567,
	560, 564, 563, 561, 562, 0, 633, 0, 0, 0,
	0, 0, 0, 529, 542, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 540, 0, 0, 0, 0, 591, 0, 541, 0,
	0, 586, 565, 569, 0, 0, 0, 0, 246, 366,
	382, 256, 357, 395, 261, 364, 251, 331, 354, 0,
	0, 248, 380, 363, 313, 296, 297, 247, 0, 349,
	275, 288, 272, 329, 566, 589, 593, 271, 655, 587,
	390, 250, 0, 389, 328, 376, 381, 314, 308, 249,
	378, 312, 307, 300, 279, 656, 292, 340, 306, 341,
	293, 318, 317, 319, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 0, 0, 0, 392, 0, 0,
	639, 0, 0, 0, 365, 0, 0, 301, 0, 0,
	0, 588, 0, 352, 334, 652, 530, 0, 350, 304,
	377, 342, 383, 367, 391, 346, 343, 241, 368, 274,
	315, 252, 254, 269, 276, 278, 280, 281, 324, 325,
	337, 356, 369, 370, 371, 273, 262, 351, 263, 290,
	264, 242, 266, 265, 267, 358, 268, 244, 338, 375,
	0, 286, 347, 311, 245, 310, 339, 374, 373, 253,
	399, 405, 406, 0, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 404, 284,
	238, 239, 444, 637, 330, 0, 0, 0, 0, 651,
	632, 634, 635, 638, 642, 643, 644, 645, 646, 648,
	650, 654, 443, 0, 0, 0, 0, 0, 442, 336,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 385, 397, 414, 417, 0,
	0, 0, 0, 243, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 592, 0, 0, 320, 321, 322, 323,
	640, 0, 260, 415, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 283, 289, 427, 291, 259,
	335, 285, 394, 298, 0, 420, 0, 421, 0, 0,
	0, 0, 327, 294, 295, 359, 299, 305, 348, 393,
	333, 353, 257, 384, 360, 309, 0, 0, 662, 636,
	661, 663, 664, 660, 665, 666, 647, 549, 0, 596,
	658, 657, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 236, 0, 240,
	0, 303, 0, 344, 282, 0, 0, 625, 602, 603,
	604, 547, 605, 599, 600, 601, 626, 594, 622, 623,
	573, 597, 606, 621, 607, 624, 627, 628, 667, 668,
	613, 669, 610, 629, 620, 619, 608, 595, 630, 631,
	580, 575, 611, 612, 598, 614, 615, 616, 548, 576,
	577, 578, 579, 0, 590, 0, 400, 401, 402, 423,
	386, 0, 441, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 445, 437, 545, 0, 0, 0,
	277, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 0, 434, 0,
	0, 581, 0, 0, 361, 316, 0, 0, 0, 0,
	641, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 538, 0, 0, 571, 618, 617, 558, 568,
	0, 0, 255, 187, 435, 0, 436, 559, 0, 567,
	560, 564, 563, 561, 562, 0, 633, 0, 0, 0,
	0, 0, 0, 529, 542, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 540, 0, 0, 0, 0, 591, 0, 541, 0,
	0, 586, 565, 569, 0, 0, 0, 0, 246, 366,
	382, 256, 357, 395, 261, 364, 251, 331, 354, 0,
	0, 248, 380, 363, 313, 296, 297, 247, 0, 349,
	275, 288, 272, 329, 566, 589, 593, 271, 655, 587,
	390, 250, 0, 389, 328, 376, 381, 314, 308, 249,
	378, 312, 307, 300, 279, 656, 292, 340, 306, 341,
	293, 318, 317, 319, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 0, 0, 0, 392, 0, 0,
	639, 0, 0, 0, 365, 0, 0, 301, 0, 0,
	0, 588, 0, 352, 334, 652, 530, 0, 350, 304,
	377, 342, 383, 367, 391, 346, 343, 241, 368, 274,
	315, 252, 254, 269, 276, 278, 280, 281, 324, 325,
	337, 356, 369, 370, 371, 273, 262, 351, 263, 290,
	264, 242, 266, 265, 267, 358, 268, 244, 338, 375,
	0, 286, 347, 311, 245, 310, 339, 374, 373, 253,
	399, 405, 406, 0, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 404, 284,
	238, 239, 444, 637, 330, 0, 0, 0, 0, 651,
	632, 634, 635, 638, 642, 643, 644, 645, 646, 648,
	650, 654, 443, 0, 0, 0, 0, 0, 442, 336,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 385, 397, 414, 417, 0,
	0, 0, 0, 243, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 592, 0, 0, 320, 321, 322, 323,
	640, 0, 260, 415, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 283, 289, 427, 291, 259,
	335, 285, 394, 298, 0, 420, 0, 421, 0, 0,
	0, 0, 327, 294, 295, 359, 299, 305, 348, 393,
	333, 353, 257, 384, 360, 309, 0, 0, 662, 636,
	661, 663, 664, 660, 665, 666, 647, 549, 0, 596,
	658, 657, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 236, 0, 240,
	0, 303, 0, 344, 282, 0, 0, 625, 602, 603,
	604, 547, 605, 599, 600, 601, 626, 594, 622, 623,
	573, 597, 606, 621, 607, 624, 627, 628, 667, 668,
	613, 669, 610, 629, 620, 619, 608, 595, 630, 631,
	580, 575, 611, 612, 598, 614, 615, 616, 548, 576,
	577, 578, 579, 0, 590, 0, 400, 401, 402, 423,
	386, 0, 441, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 1373, 0, 445, 437, 545, 0, 0, 0,
	277, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 0, 434, 0,
	0, 581, 0, 0, 361, 316, 0, 0, 0, 0,
	641, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 538, 0, 0, 571, 618, 617, 558, 568,
	0, 0, 255, 187, 435, 0, 436, 559, 0, 567,
	560, 564, 563, 561, 562, 0, 633, 0, 0, 0,
	0, 0, 0, 0, 542, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 540, 0, 0, 0, 0, 591, 0, 541, 0,
	0, 586, 565, 569, 0, 0, 0, 0, 246, 366,
	382, 256, 357, 395, 261, 364, 251, 331, 354, 0,
	0, 248, 380, 363, 313, 296, 297, 247, 0, 349,
	275, 288, 272, 329, 566, 589, 593, 271, 655, 587,
	390, 250, 0, 389, 328, 376, 381, 314, 308, 249,
	378, 312, 307, 300, 279, 656, 292, 340, 306, 341,
	293, 318, 317, 319, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 0, 0, 0, 392, 0, 0,
	639, 0, 0, 0, 365, 0, 0, 301, 0, 0,
	0, 588, 0, 352, 334, 652, 0, 0, 350, 304,
	377, 342, 383, 367, 391, 346, 343, 241, 368, 274,
	315, 252, 254, 269, 276, 278, 280, 281, 324, 325,
	337, 356, 369, 370, 371, 273, 262, 351, 263, 290,
	264, 242, 266, 265, 267, 358, 268, 244, 338, 375,
	0, 286, 347, 311, 245, 310, 339, 374, 373, 253,
	399, 1374, 1375, 0, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 404, 284,
	238, 239, 444, 637, 330, 0, 0, 0, 0, 651,
	632, 634, 635, 638, 642, 643, 644, 645, 646, 648,
	650, 654, 443, 0, 0, 0, 0, 0, 442, 336,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 385, 397, 414, 417, 0,
	0, 0, 0, 243, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 592, 0, 0, 320, 321, 322, 323,
	640, 0, 260, 415, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 283, 289, 427, 291, 259,
	335, 285, 394, 298, 0, 420, 0, 421, 0, 0,
	0, 0, 327, 294, 295, 359, 299, 305, 348, 393,
	333, 353, 257, 384, 360, 309, 0, 0, 662, 636,
	661, 663, 664, 660, 665, 666, 647, 549, 0, 596,
	658, 657, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 236, 0, 240,
	0, 303, 0, 344, 282, 0, 0, 625, 602, 603,
	604, 547, 605, 599, 600, 601, 626, 594, 622, 623,
	573, 597, 606, 621, 607, 624, 627, 628, 667, 668,
	613, 669, 610, 629, 620, 619, 608, 595, 630, 631,
	580, 575, 611, 612, 598, 614, 615, 616, 548, 576,
	577, 578, 579, 0, 590, 0, 400, 401, 402, 423,
	386, 0, 441, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 445, 437, 545, 0, 0, 0,
	277, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 0, 434, 0,
	0, 581, 0, 0, 361, 316, 0, 0, 0, 0,
	641, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 571, 618, 617, 558, 568,
	0, 0, 255, 187, 435, 0, 436, 559, 0, 567,
	560, 564, 563, 561, 562, 0, 633, 0, 0, 0,
	0, 0, 0, 529, 542, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 540, 0, 0, 0, 0, 591, 0, 541, 0,
	0, 586, 565, 569, 0, 0, 0, 0, 246, 366,
	382, 256, 357, 395, 261, 364, 251, 331, 354, 0,
	0, 248, 380, 363, 313, 296, 297, 247, 0, 349,
	275, 288, 272, 329, 566, 589, 593, 271, 655, 587,
	390, 250, 0, 389, 328, 376, 381, 314, 308, 249,
	378, 312, 307, 300, 279, 656, 292, 340, 306, 341,
	293, 318, 317, 319, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 0, 0, 0, 392, 0, 0,
	639, 0, 0, 0, 365, 0, 0, 301, 0, 0,
	0, 588, 0, 352, 334, 652, 530, 0, 350, 304,
	377, 342, 383, 367, 391, 346, 343, 241, 368, 274,
	315, 252, 254, 269, 276, 278, 280, 281, 324, 325,
	337, 356, 369, 370, 371, 273, 262, 351, 263, 290,
	264, 242, 266, 265, 267, 358, 268, 244, 338, 375,
	0, 286, 347, 311, 245, 310, 339, 374, 373, 253,
	399, 405, 406, 0, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 404, 284,
	238, 239, 444, 637, 330, 0, 0, 0, 0, 651,
	632, 634, 635, 638, 642, 643, 644, 645, 646, 648,
	650, 654, 443, 0, 0, 0, 0, 0, 442, 336,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 385, 397, 414, 417, 0,
	0, 0, 0, 243, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 592, 0, 0, 320, 321, 322, 323,
	640, 0, 260, 415, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 283, 289, 427, 291, 259,
	335, 285, 394, 298, 0, 420, 0, 421, 0, 0,
	0, 0, 327, 294, 295, 359, 299, 305, 348, 393,
	333, 353, 257, 384, 360, 309, 0, 0, 662, 636,
	661, 663, 664, 660, 665, 666, 647, 549, 0, 596,
	658, 657, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 236, 0, 240,
	0, 303, 0, 344, 282, 0, 0, 625, 602, 603,
	604, 547, 605, 599, 600, 601, 626, 594, 622, 623,
	573, 597, 606, 621, 607, 624, 627, 628, 667, 668,
	613, 669, 610, 629, 620, 619, 608, 595, 630, 631,
	580, 575, 611, 612, 598, 614, 615, 616, 548, 576,
	577, 578, 579, 0, 590, 0, 400, 401, 402, 423,
	386, 0, 441, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 445, 437, 545, 0, 0, 0,
	277, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 0, 434, 0,
	0, 581, 0, 0, 361, 316, 0, 0, 0, 0,
	641, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 538, 0, 0, 571, 618, 617, 558, 568,
	0, 0, 255, 187, 435, 0, 436, 559, 0, 567,
	560, 564, 563, 561, 562, 0, 633, 0, 0, 0,
	0, 0, 0, 0, 542, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 540, 0, 0, 0, 0, 591, 0, 541, 0,
	0, 586, 565, 569, 0, 0, 0, 0, 246, 366,
	382, 256, 357, 395, 261, 364, 251, 331, 354, 0,
	0, 248, 380, 363, 313, 296, 297, 247, 0, 349,
	275, 288, 272, 329, 566, 589, 593, 271, 655, 587,
	390, 250, 0, 389, 328, 376, 381, 314, 308, 249,
	378, 312, 307, 300, 279, 656, 292, 340, 306, 341,
	293, 318, 317, 319, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 0, 0, 0, 392, 0, 0,
	639, 0, 0, 0, 365, 0, 0, 301, 0, 0,
	0, 588, 0, 352, 334, 652, 0, 0, 350, 304,
	377, 342, 383, 367, 391, 346, 343, 241, 368, 274,
	315, 252, 254, 269, 276, 278, 280, 281, 324, 325,
	337, 356, 369, 370, 371, 273, 262, 351, 263, 290,
	264, 242, 266, 265, 267, 358, 268, 244, 338, 375,
	0, 286, 347, 311, 245, 310, 339, 374, 373, 253,
	399, 405, 406, 0, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 404, 284,
	238, 239, 444, 637, 330, 0, 0, 0, 0, 651,
	632, 634, 635, 638, 642, 643, 644, 645, 646, 648,
	650, 654, 443, 0, 0, 0, 0, 0, 442, 336,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 385, 397, 414, 417, 0,
	0, 0, 0, 243, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 592, 0, 0, 320, 321, 322, 323,
	640, 0, 260, 415, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 283, 289, 427, 291, 259,
	335, 285, 394, 298, 0, 420, 0, 421, 0, 0,
	0, 0, 327, 294, 295, 359, 299, 305, 348, 393,
	333, 353, 257, 384, 360, 309, 0, 0, 662, 636,
	661, 663, 664, 660, 665, 666, 647, 549, 0, 596,
	658, 657, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 236, 0, 240,
	0, 303, 0, 344, 282, 0, 0, 625, 602, 603,
	604, 547, 605, 599, 600, 601, 626, 594, 622, 623,
	573, 597, 606, 621, 607, 624, 627, 628, 667, 668,
	613, 669, 610, 629, 620, 619, 608, 595, 630, 631,
	580, 575, 611, 612, 598, 614, 615, 616, 548, 576,
	577, 578, 579, 0, 0, 0, 400, 401, 402, 423,
	386, 0, 441, 164, 51, 156, 132, 0, 0, 0,
	0, 0, 0, 332, 445, 437, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 149, 0,
	277, 0, 158, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 0, 434, 0,
	0, 113, 0, 0, 361, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 0, 0, 0,
	0, 0, 161, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 255, 187, 435, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 366,
	382, 256, 357, 395, 261, 364, 251, 331, 354, 0,
	0, 248, 380, 363, 313, 296, 297, 247, 0, 349,
	275, 288, 272, 329, 0, 379, 407, 271, 398, 0,
	390, 250, 0, 389, 328, 376, 381, 314, 308, 249,
	378, 312, 307, 300, 279, 422, 292, 340, 306, 341,
	293, 318, 317, 319, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 131, 155, 162, 0,
	99, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	179, 0, 0, 0, 365, 0, 0, 301, 154, 148,
	147, 408, 0, 352, 334, 57, 0, 0, 350, 304,
	377, 342, 383, 367, 391, 346, 343, 241, 368, 274,
	315, 252, 254, 269, 276, 278, 280, 281, 324, 325,
	337, 356, 369, 370, 371, 273, 262, 351, 263, 290,
	264, 242, 266, 265, 267, 358, 268, 244, 338, 375,
	0, 286, 347, 311, 245, 310, 339, 374, 373, 253,
	399, 405, 406, 0, 0, 411, 150, 151, 152, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 404, 284,
	238, 239, 387, 270, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 403, 182, 0,
	0, 432, 190, 0, 0, 0, 153, 0, 191, 336,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 385, 397, 414, 417, 0,
	0, 0, 0, 243, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 412, 0, 0, 320, 321, 322, 323,
	287, 0, 260, 415, 345, 111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	0, 0, 0, 409, 410, 283, 289, 427, 291, 259,
	335, 285, 394, 298, 0, 420, 0, 421, 0, 0,
	0, 0, 327, 294, 295, 359, 299, 305, 348, 393,
	333, 353, 257, 384, 360, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 236, 0, 240,
	0, 303, 133, 344, 282, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 0, 0, 0, 237, 232,
	233, 234, 235, 0, 0, 0, 400, 401, 402, 423,
	386, 332, 192, 39, 180, 183, 185, 184, 0, 49,
	5, 0, 0, 116, 193, 437, 0, 0, 277, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 0, 434, 0, 0, 0,
	0, 0, 361, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1037, 0, 0, 186, 0, 0, 558, 568, 0, 0,
	255, 187, 435, 0, 436, 559, 0, 567, 560, 564,
	563, 561, 562, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 0, 0, 0, 0, 0, 246, 366, 382, 256,
	357, 395, 261, 364, 251, 331, 354, 0, 0, 248,
	380, 363, 313, 296, 297, 247, 0, 349, 275, 288,
	272, 329, 566, 379, 407, 271, 398, 0, 390, 250,
	0, 389, 328, 376, 381, 314, 308, 249, 378, 312,
	307, 300, 279, 422, 292, 340, 306, 341, 293, 318,
	317, 319, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 0, 365, 0, 0, 301, 0, 0, 0, 408,
	0, 352, 334, 0, 0, 0, 350, 304, 377, 342,
	383, 367, 391, 346, 343, 241, 368, 274, 315, 252,
	254, 269, 276, 278, 280, 281, 324, 325, 337, 356,
	369, 370, 371, 273, 262, 351, 263, 290, 264, 242,
	266, 265, 267, 358, 268, 244, 338, 375, 0, 286,
	347, 311, 245, 310, 339, 374, 373, 253, 399, 405,
	406, 0, 0, 411, 0, 0, 0, 419, 424, 425,
	426, 428, 429, 430, 431, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 404, 284, 238, 239,
	444, 270, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 403, 0, 0, 0, 432,
	443, 0, 0, 0, 0, 0, 442, 336, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 385, 397, 414, 417, 0, 0, 0,
	0, 243, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 412, 0, 0, 320, 321, 322, 323, 287, 0,
	260, 415, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 283, 289, 427, 291, 259, 335, 285,
	394, 298, 0, 420, 0, 421, 0, 0, 0, 0,
	327, 294, 295, 359, 299, 305, 348, 393, 333, 353,
	257, 384, 360, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 236, 0, 240, 0, 303,
	0, 344, 282, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 0, 0, 0, 237, 232, 233, 234,
	235, 0, 0, 0, 400, 401, 402, 423, 386, 0,
	441, 0, 0, 0, 164, 51, 156, 132, 0, 0,
	0, 0, 445, 437, 332, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 0, 434,
	0, 0, 0, 0, 0, 361, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 255, 187, 435, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	366, 382, 256, 357, 395, 261, 364, 251, 331, 354,
	0, 0, 248, 380, 363, 313, 296, 297, 247, 0,
	349, 275, 288, 272, 329, 0, 379, 407, 271, 398,
	0, 390, 250, 0, 389, 328, 376, 381, 314, 308,
	249, 378, 312, 307, 300, 279, 422, 292, 340, 306,
	341, 293, 318, 317, 319, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 0, 365, 0, 0, 301, 0,
	0, 0, 408, 0, 352, 334, 0, 0, 0, 350,
	304, 377, 342, 383, 367, 391, 346, 343, 241, 368,
	274, 315, 252, 254, 269, 276, 278, 280, 281, 324,
	325, 337, 356, 369, 370, 371, 273, 262, 351, 263,
	290, 264, 242, 266, 265, 267, 358, 268, 244, 338,
	375, 0, 286, 347, 311, 245, 310, 339, 374, 373,
	253, 399, 405, 406, 0, 0, 411, 0, 0, 0,
	419, 424, 425, 426, 428, 429, 430, 431, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 404,
	284, 238, 239, 444, 270, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 403, 0,
	0, 0, 432, 443, 0, 0, 0, 0, 0, 442,
	336, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 385, 397, 414, 417,
	0, 0, 0, 0, 243, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 412, 0, 0, 320, 321, 322,
	323, 463, 465, 260, 415, 345, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 283, 289, 427, 291,
	259, 335, 285, 394, 298, 0, 420, 0, 421, 0,
	0, 0, 0, 327, 294, 295, 359, 299, 305, 348,
	393, 333, 353, 257, 384, 360, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 236, 0,
	240, 0, 303, 133, 344, 282, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 0, 332, 0, 237,
	232, 233, 234, 235, 0, 864, 0, 400, 401, 402,
	423, 386, 0, 441, 277, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 445, 437, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 361, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 255, 187, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 852, 0, 0, 0, 0,
	0, 0, 246, 366, 382, 256, 357, 395, 261, 364,
	251, 331, 354, 0, 0, 1917, 1919, 1920, 1921, 1922,
	1923, 1924, 0, 1929, 1925, 1926, 1927, 1928, 0, 1912,
	1913, 1914, 1915, 850, 1898, 1918, 0, 1899, 328, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910,
	1916, 340, 306, 341, 293, 318, 317, 319, 875, 877,
	879, 881, 884, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 365, 0,
	0, 301, 0, 0, 0, 1911, 0, 352, 334, 0,
	0, 0, 350, 304, 377, 342, 383, 367, 391, 346,
	343, 241, 368, 274, 315, 252, 254, 269, 276, 278,
	280, 281, 324, 325, 337, 356, 369, 370, 371, 273,
	262, 351, 263, 290, 264, 242, 266, 265, 267, 358,
	268, 244, 338, 375, 0, 286, 347, 311, 245, 310,
	339, 374, 373, 253, 399, 405, 406, 0, 0, 411,
	0, 0, 0, 419, 424, 425, 426, 428, 429, 430,
	431, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 404, 284, 238, 239, 444, 270, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 403, 0, 0, 0, 432, 443, 0, 0, 0,
	0, 0, 442, 336, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 385,
	397, 414, 417, 0, 0, 0, 0, 243, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 412, 0, 0,
	320, 321, 322, 323, 287, 0, 260, 415, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 283,
	289, 427, 291, 259, 335, 285, 394, 298, 0, 420,
	0, 421, 0, 0, 0, 0, 327, 294, 295, 359,
	299, 305, 348, 393, 333, 353, 257, 384, 360, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 864, 0, 0, 372,
	0, 236, 0, 240, 874, 303, 0, 344, 282, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 0,
	332, 0, 237, 232, 233, 234, 235, 0, 0, 0,
	400, 401, 402, 423, 386, 0, 441, 277, 0, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 445, 437,
	0, 0, 0, 433, 0, 434, 0, 0, 0, 0,
	0, 361, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 852, 0, 0, 255,
	187, 435, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 1991, 1994, 872, 876, 878, 880,
	882, 883, 885, 0, 890, 886, 887, 888, 889, 0,
	867, 868, 869, 870, 850, 851, 873, 0, 853, 0,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	865, 871, 0, 0, 0, 0, 0, 0, 0, 875,
	877, 879, 881, 884, 0, 246, 366, 382, 256, 357,
	395, 261, 364, 251, 331, 354, 0, 0, 248, 380,
	363, 313, 296, 297, 247, 0, 349, 275, 288, 272,
	329, 0, 379, 407, 271, 398, 866, 390, 250, 0,
	389, 328, 376, 381, 314, 308, 249, 378, 312, 307,
	300, 279, 422, 292, 340, 306, 341, 293, 318, 317,
	319, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1995, 392, 0, 0, 0, 1990, 0,
	1989, 365, 1987, 1992, 301, 0, 0, 0, 408, 0,
	352, 334, 0, 0, 0, 350, 304, 377, 342, 383,
	367, 391, 346, 343, 241, 368, 274, 315, 252, 254,
	269, 276, 278, 280, 281, 324, 325, 337, 356, 369,
	370, 371, 273, 262, 351, 263, 290, 264, 242, 266,
	265, 267, 358, 268, 244, 338, 375, 1993, 286, 347,
	311, 245, 310, 339, 374, 373, 253, 399, 405, 406,
	0, 0, 411, 0, 0, 0, 419, 424, 425, 426,
	428, 429, 430, 431, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 404, 284, 238, 239, 444,
	270, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 403, 0, 0, 0, 432, 443,
	0, 0, 0, 0, 0, 442, 336, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 385, 397, 414, 417, 0, 0, 0, 0,
	243, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	412, 0, 0, 320, 321, 322, 323, 287, 0, 260,
	415, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 283, 289, 427, 291, 259, 335, 285, 394,
	298, 0, 420, 0, 421, 874, 0, 0, 0, 327,
	294, 295, 359, 299, 305, 348, 393, 333, 353, 257,
	384, 360, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 236, 0, 240, 0, 303, 0,
	344, 282, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 0, 0, 0, 237, 232, 233, 234, 235,
	332, 0, 0, 400, 401, 402, 423, 386, 0, 441,
	0, 0, 1716, 0, 0, 0, 0, 277, 0, 0,
	302, 445, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 0, 434, 0, 0, 0, 0,
	0, 361, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 1717, 0, 0, 0, 255,
	187, 435, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 970, 971, 972, 969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 366, 382, 256, 357,
	395, 261, 364, 251, 331, 354, 0, 0, 248, 380,
	363, 313, 296, 297, 247, 0, 349, 275, 288, 272,
	329, 0, 379, 407, 271, 398, 0, 390, 250, 0,
	389, 328, 376, 381, 314, 308, 249, 378, 312, 307,
	300, 279, 422, 292, 340, 306, 341, 293, 318, 317,
	319, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	0, 365, 0, 0, 301, 0, 0, 0, 408, 0,
	352, 334, 0, 0, 0, 350, 304, 377, 342, 383,
	367, 391, 346, 343, 241, 368, 274, 315, 252, 254,
	269, 276, 278, 280, 281, 324, 325, 337, 356, 369,
	370, 371, 273, 262, 351, 263, 290, 264, 242, 266,
	265, 267, 358, 268, 244, 338, 375, 0, 286, 347,
	311, 245, 310, 339, 374, 373, 253, 399, 405, 406,
	0, 0, 411, 0, 0, 0, 419, 424, 425, 426,
	428, 429, 430, 431, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 404, 284, 238, 239, 444,
	270, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 403, 0, 0, 0, 432, 443,
	0, 0, 0, 0, 0, 442, 336, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 385, 397, 414, 417, 0, 0, 0, 0,
	243, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	412, 0, 0, 320, 321, 322, 323, 287, 0, 260,
	415, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 283, 289, 427, 291, 259, 335, 285, 394,
	298, 0, 420, 0, 421, 0, 0, 0, 0, 327,
	294, 295, 359, 299, 305, 348, 393, 333, 353, 257,
	384, 360, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 236, 0, 240, 0, 303, 0,
	344, 282, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 0, 332, 0, 237, 232, 233, 234, 235,
	0, 0, 0, 400, 401, 402, 423, 386, 0, 441,
	277, 786, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 445, 437, 0, 0, 0, 433, 0, 434, 0,
	0, 0, 0, 0, 361, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 793, 794, 0, 0,
	0, 0, 255, 187, 435, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 366,
	781, 256, 357, 395, 261, 364, 251, 331, 354, 0,
	0, 248, 380, 363, 313, 296, 297, 247, 0, 349,
	275, 288, 272, 329, 0, 379, 407, 271, 398, 772,
	390, 250, 771, 389, 328, 376, 381, 314, 308, 249,
	378, 312, 307, 300, 279, 422, 292, 340, 306, 341,
	293, 318, 317, 319, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 0, 365, 0, 0, 301, 0, 0,
	0, 408, 0, 352, 334, 0, 0, 0, 350, 304,
	377, 342, 383, 367, 391, 784, 343, 241, 368, 274,
	315, 252, 254, 269, 276, 278, 280, 281, 324, 325,
	337, 356, 369, 370, 371, 273, 262, 351, 263, 290,
	264, 242, 266, 265, 267, 358, 268, 244, 338, 375,
	0, 286, 347, 311, 245, 310, 339, 374, 373, 253,
	399, 405, 406, 0, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 404, 284,
	238, 239, 444, 270, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 403, 0, 0,
	0, 432, 443, 0, 0, 0, 0, 0, 442, 336,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 385, 397, 414, 417, 0,
	0, 0, 0, 243, 416, 0, 0, 0, 0, 0,
	0, 785, 0, 388, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 788, 0, 0, 320, 321, 322, 323,
	287, 0, 260, 415, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 283, 289, 427, 291, 259,
	335, 285, 394, 298, 0, 420, 0, 421, 0, 0,
	0, 0, 795, 782, 791, 783, 299, 305, 348, 393,
	333, 353, 257, 384, 360, 792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 236, 0, 240,
	0, 303, 0, 344, 282, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 0, 332, 0, 237, 232,
	233, 234, 235, 0, 0, 0, 400, 401, 402, 423,
	386, 0, 441, 277, 0, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 445, 437, 0, 0, 0, 433,
	0, 434, 0, 0, 0, 0, 0, 361, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 255, 187, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 2010, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 366, 382, 256, 357, 395, 261, 364, 251,
	331, 354, 0, 0, 248, 380, 363, 313, 296, 297,
	247, 0, 349, 275, 288, 272, 329, 0, 379, 407,
	271, 398, 0, 390, 250, 0, 389, 328, 376, 381,
	314, 308, 249, 378, 312, 307, 300, 279, 422, 292,
	340, 306, 341, 293, 318, 317, 319, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2009,
	392, 0, 0, 0, 2014, 2012, 0, 365, 0, 2013,
	301, 0, 0, 0, 408, 0, 352, 334, 0, 0,
	0, 350, 304, 377, 342, 383, 367, 391, 346, 343,
	241, 368, 274, 315, 252, 254, 269, 276, 278, 280,
	281, 324, 325, 337, 356, 369, 370, 371, 273, 262,
	351, 263, 290, 264, 242, 266, 265, 267, 358, 268,
	244, 338, 375, 0, 286, 347, 311, 245, 310, 339,
	374, 373, 253, 399, 405, 406, 0, 0, 411, 0,
	0, 0, 419, 424, 425, 426, 428, 429, 430, 431,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 404, 284, 238, 239, 444, 270, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	403, 0, 0, 0, 432, 443, 0, 0, 0, 0,
	0, 442, 336, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 385, 397,
	414, 417, 0, 0, 0, 0, 243, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 412, 0, 0, 320,
	321, 322, 323, 287, 0, 260, 415, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 283, 289,
	427, 291, 259, 335, 285, 394, 298, 0, 420, 0,
	421, 0, 0, 0, 0, 327, 294, 295, 359, 299,
	305, 348, 393, 333, 353, 257, 384, 360, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	236, 0, 240, 0, 303, 0, 344, 282, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 0, 0,
	0, 237, 232, 233, 234, 235, 164, 0, 0, 400,
	401, 402, 423, 386, 0, 441, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 445, 437, 0,
	0, 0, 0, 277, 0, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 113, 0, 0, 361, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 1760, 0, 186, 0,
	0, 0, 0, 0, 0, 255, 187, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 366, 382, 256, 357, 395, 261, 364, 251,
	331, 354, 0, 0, 248, 380, 363, 313, 296, 297,
	247, 0, 349, 275, 288, 272, 329, 0, 379, 407,
	271, 398, 0, 390, 250, 0, 389, 328, 376, 381,
	314, 308, 249, 378, 312, 307, 300, 279, 422, 292,
	340, 306, 341, 293, 318, 317, 319, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 365, 0, 0,
	301, 0, 0, 0, 408, 0, 352, 334, 0, 0,
	0, 350, 304, 377, 342, 383, 367, 391, 346, 343,
	241, 368, 274, 315, 252, 254, 269, 276, 278, 280,
	281, 324, 325, 337, 356, 369, 370, 371, 273, 262,
	351, 263, 290, 264, 242, 266, 265, 267, 358, 268,
	244, 338, 375, 0, 286, 347, 311, 245, 310, 339,
	374, 373, 253, 399, 405, 406, 0, 0, 411, 0,
	0, 0, 419, 424, 425, 426, 428, 429, 430, 431,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 404, 284, 238, 239, 444, 270, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	403, 0, 0, 0, 432, 443, 0, 0, 0, 0,
	0, 442, 336, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 385, 397,
	414, 417, 0, 0, 0, 0, 243, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 412, 0, 0, 320,
	321, 322, 323, 287, 0, 260, 415, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 283, 289,
	427, 291, 259, 335, 285, 394, 298, 0, 420, 0,
	421, 0, 0, 0, 0, 327, 294, 295, 359, 299,
	305, 348, 393, 333, 353, 257, 384, 360, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	236, 0, 240, 0, 303, 133, 344, 282, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 0, 0,
	0, 237, 232, 233, 234, 235, 164, 0, 0, 400,
	401, 402, 423, 386, 0, 441, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 445, 437, 0,
	0, 0, 0, 277, 0, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 113, 0, 0, 361, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 1751, 0, 186, 0,
	0, 0, 0, 0, 0, 255, 187, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 366, 382, 256, 357, 395, 261, 364, 251,
	331, 354, 0, 0, 248, 380, 363, 313, 296, 297,
	247, 0, 349, 275, 288, 272, 329, 0, 379, 407,
	271, 398, 0, 390, 250, 0, 389, 328, 376, 381,
	314, 308, 249, 378, 312, 307, 300, 279, 422, 292,
	340, 306, 341, 293, 318, 317, 319, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 365, 0, 0,
	301, 0, 0, 0, 408, 0, 352, 334, 0, 0,
	0, 350, 304, 377, 342, 383, 367, 391, 346, 343,
	241, 368, 274, 315, 252, 254, 269, 276, 278, 280,
	281, 324, 325, 337, 356, 369, 370, 371, 273, 262,
	351, 263, 290, 264, 242, 266, 265, 267, 358, 268,
	244, 338, 375, 0, 286, 347, 311, 245, 310, 339,
	374, 373, 253, 399, 405, 406, 0, 0, 411, 0,
	0, 0, 419, 424, 425, 426, 428, 429, 430, 431,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 404, 284, 238, 239, 444, 270, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	403, 0, 0, 0, 432, 443, 0, 0, 0, 0,
	0, 442, 336, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 385, 397,
	414, 417, 0, 0, 0, 0, 243, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 412, 0, 0, 320,
	321, 322, 323, 287, 0, 260, 415, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 283, 289,
	427, 291, 259, 335, 285, 394, 298, 0, 420, 0,
	421, 0, 0, 0, 0, 327, 294, 295, 359, 299,
	305, 348, 393, 333, 353, 257, 384, 360, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	236, 0, 240, 0, 303, 133, 344, 282, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 0, 0,
	0, 237, 232, 233, 234, 235, 164, 0, 0, 400,
	401, 402, 423, 386, 0, 441, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 445, 437, 0,
	0, 0, 0, 277, 0, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 434, 0, 0, 113, 0, 0, 361, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1655, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 255, 187, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 366, 382, 256, 357, 395, 261, 364, 251,
	331, 354, 0, 0, 248, 380, 363, 313, 296, 297,
	247, 0, 349, 275, 288, 272, 329, 0, 379, 407,
	271, 398, 0, 390, 250, 0, 389, 328, 376, 381,
	314, 308, 249, 378, 312, 307, 300, 279, 422, 292,
	340, 306, 341, 293, 318, 317, 319, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 365, 0, 0,
	301, 0, 0, 0, 408, 0, 352, 334, 0, 0,
	0, 350, 304, 377, 342, 383, 367, 391, 346, 343,
	241, 368, 274, 315, 252, 254, 269, 276, 278, 280,
	281, 324, 325, 337, 356, 369, 370, 371, 273, 262,
	351, 263, 290, 264, 242, 266, 265, 267, 358, 268,
	244, 338, 375, 0, 286, 347, 311, 245, 310, 339,
	374, 373, 253, 399, 405, 406, 0, 0, 411, 0,
	0, 0, 419, 424, 425, 426, 428, 429, 430, 431,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 404, 284, 238, 239, 444, 270, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	403, 0, 0, 0, 432, 443, 0, 0, 0, 0,
	0, 442, 336, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 385, 397,
	414, 417, 0, 0, 0, 0, 243, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 412, 0, 0, 320,
	321, 322, 323, 287, 0, 260, 415, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 283, 289,
	427, 291, 259, 335, 285, 394, 298, 0, 420, 0,
	421, 0, 0, 0, 0, 327, 294, 295, 359, 299,
	305, 348, 393, 333, 353, 257, 384, 360, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	236, 0, 240, 0, 303, 133, 344, 282, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 0, 332,
	0, 237, 232, 233, 234, 235, 0, 0, 0, 400,
	401, 402, 423, 386, 0, 441, 277, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 445, 437, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	361, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 793, 794, 0, 0, 0, 0, 255, 187,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 366, 382, 256, 357, 395,
	261, 364, 251, 331, 354, 0, 0, 248, 380, 363,
	313, 296, 297, 247, 0, 349, 275, 288, 272, 329,
	0, 379, 407, 271, 398, 772, 390, 250, 771, 389,
	328, 376, 381, 314, 308, 249, 378, 312, 307, 300,
	279, 422, 292, 340, 306, 341, 293, 318, 317, 319,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 0,
	365, 0, 0, 301, 0, 0, 0, 408, 0, 352,
	334, 0, 0, 0, 350, 304, 377, 342, 383, 367,
	391, 346, 343, 241, 368, 274, 315, 252, 254, 269,
	276, 278, 280, 281, 324, 325, 337, 356, 369, 370,
	371, 273, 262, 351, 263, 290, 264, 242, 266, 265,
	267, 358, 268, 244, 338, 375, 0, 286, 347, 311,
	245, 310, 339, 374, 373, 253, 399, 405, 406, 0,
	0, 411, 0, 0, 0, 419, 424, 425, 426, 428,
	429, 430, 431, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 404, 284, 238, 239, 444, 270,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 403, 0, 0, 0, 432, 443, 0,
	0, 0, 0, 0, 442, 336, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 385, 397, 414, 417, 0, 0, 0, 0, 243,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 412,
	0, 0, 320, 321, 322, 323, 287, 0, 260, 415,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 283, 289, 427, 291, 259, 335, 285, 394, 298,
	0, 420, 0, 421, 0, 0, 0, 0, 795, 1674,
	791, 1675, 299, 305, 348, 393, 333, 353, 257, 384,
	360, 792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 236, 0, 240, 0, 303, 0, 344,
	282, 0, 0, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 0, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 0, 332, 0, 237, 232, 233, 234, 235, 0,
	0, 2408, 400, 401, 402, 423, 386, 0, 441, 277,
	0, 0, 302, 0, 0, 0, 0, 0, 0, 0,
	445, 437, 0, 0, 0, 433, 0, 434, 0, 0,
	0, 0, 0, 361, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 255, 187, 435, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 366, 382,
	256, 357, 395, 261, 364, 251, 331, 354, 0, 0,
	248, 380, 363, 313, 296, 297, 247, 0, 349, 275,
	288, 272, 329, 0, 379, 407, 271, 398, 0, 390,
	250, 0, 389, 328, 376, 381, 314, 308, 249, 378,
	312, 307, 300, 279, 422, 292, 340, 306, 341, 293,
	318, 317, 319, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 2411, 0, 0,
	2410, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 0, 365, 0, 0, 301, 0, 0, 0,
	408, 0, 352, 334, 0, 0, 0, 350, 304, 377,
	342, 383, 367, 391, 346, 343, 241, 368, 274, 315,
	252, 254, 269, 276, 278, 280, 281, 324, 325, 337,
	356, 369, 370, 371, 273, 262, 351, 263, 290, 264,
	242, 266, 265, 267, 358, 268, 244, 338, 375, 0,
	286, 347, 311, 245, 310, 339, 374, 373, 253, 399,
	405, 406, 0, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 404, 284, 238,
	239, 444, 270, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 403, 0, 0, 0,
	432, 443, 0, 0, 0, 0, 0, 442, 336, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 385, 397, 414, 417, 0, 0,
	0, 0, 243, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 412, 0, 0, 320, 321, 322, 323, 287,
	0, 260, 415, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 283, 289, 427, 291, 259, 335,
	285, 394, 298, 0, 420, 0, 421, 0, 0, 0,
	0, 327, 294, 295, 359, 299, 305, 348, 393, 333,
	353, 257, 384, 360, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 236, 0, 240, 0,
	303, 0, 344, 282, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 0, 332, 0, 237, 232, 233,
	234, 235, 0, 0, 0, 400, 401, 402, 423, 386,
	0, 441, 277, 1220, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 445, 437, 0, 0, 0, 433, 0,
	434, 0, 0, 0, 0, 0, 361, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	1218, 0, 0, 0, 255, 187, 435, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1216, 0, 0, 0, 0, 0, 0,
	246, 366, 382, 256, 357, 395, 261, 364, 251, 331,
	354, 0, 0, 248, 380, 363, 313, 296, 297, 247,
	0, 349, 275, 288, 272, 329, 0, 379, 407, 271,
	398, 0, 390, 250, 0, 389, 328, 376, 381, 314,
	308, 249, 378, 312, 307, 300, 279, 422, 292, 340,
	306, 341, 293, 318, 317, 319, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 0, 365, 0, 0, 301,
	0, 0, 0, 408, 0, 352, 334, 0, 0, 0,
	350, 304, 377, 342, 383, 367, 391, 346, 343, 241,
	368, 274, 315, 252, 254, 269, 276, 278, 280, 281,
	324, 325, 337, 356, 369, 370, 371, 273, 262, 351,
	263, 290, 264, 242, 266, 265, 267, 358, 268, 244,
	338, 375, 0, 286, 347, 311, 245, 310, 339, 374,
	373, 253, 399, 405, 406, 0, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	404, 284, 238, 239, 444, 270, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 403,
	0, 0, 0, 432, 443, 0, 0, 0, 0, 0,
	442, 336, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 385, 397, 414,
	417, 0, 0, 0, 0, 243, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 412, 0, 0, 320, 321,
	322, 323, 287, 0, 260, 415, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 283, 289, 427,
	291, 259, 335, 285, 394, 298, 0, 420, 0, 421,
	0, 0, 0, 0, 327, 294, 295, 359, 299, 305,
	348, 393, 333, 353, 257, 384, 360, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 236,
	0, 240, 0, 303, 0, 344, 282, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 0, 332, 0,
	237, 232, 233, 234, 235, 0, 0, 0, 400, 401,
	402, 423, 386, 0, 441, 277, 1214, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 445, 437, 0, 0,
	0, 433, 0, 434, 0, 0, 0, 0, 0, 361,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 1218, 0, 0, 0, 255, 187, 435,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1216, 0, 0, 0,
	0, 0, 0, 246, 366, 382, 256, 357, 395, 261,
	364, 251, 331, 354, 0, 0, 248, 380, 363, 313,
	296, 297, 247, 0, 349, 275, 288, 272, 329, 0,
	379, 407, 271, 398, 0, 390, 250, 0, 389, 328,
	376, 381, 314, 308, 249, 378, 312, 307, 300, 279,
	422, 292, 340, 306, 341, 293, 318, 317, 319, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 0, 365,
	0, 0, 301, 0, 0, 0, 408, 0, 352, 334,
	0, 0, 0, 350, 304, 377, 342, 383, 367, 391,
	346, 343, 241, 368, 274, 315, 252, 254, 269, 276,
	278, 280, 281, 324, 325, 337, 356, 369, 370, 371,
	273, 262, 351, 263, 290, 264, 242, 266, 265, 267,
	358, 268, 244, 338, 375, 0, 286, 347, 311, 245,
	310, 339, 374, 373, 253, 399, 405, 406, 0, 0,
	411, 0, 0, 0, 419, 424, 425, 426, 428, 429,
	430, 431, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 404, 284, 238, 239, 444, 270, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 403, 0, 0, 0, 432, 443, 0, 0,
	0, 0, 0, 442, 336, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	385, 397, 414, 417, 0, 0, 0, 0, 243, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 412, 0,
	0, 320, 321, 322, 323, 287, 0, 260, 415, 345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	283, 289, 427, 291, 259, 335, 285, 394, 298, 0,
	420, 0, 421, 0, 0, 0, 0, 327, 294, 295,
	359, 299, 305, 348, 393, 333, 353, 257, 384, 360,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 236, 0, 240, 0, 303, 0, 344, 282,
	0, 0, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 0, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	0, 332, 0, 237, 232, 233, 234, 235, 0, 0,
	0, 400, 401, 402, 423, 386, 0, 441, 277, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 445,
	437, 0, 0, 0, 433, 0, 434, 0, 0, 0,
	0, 0, 361, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3181, 0, 186, 618, 0, 0, 0, 0, 0,
	255, 187, 435, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 366, 382, 256,
	357, 395, 261, 364, 251, 331, 354, 0, 0, 248,
	380, 363, 313, 296, 297, 247, 0, 349, 275, 288,
	272, 329, 0, 379, 407, 271, 398, 0, 390, 250,
	0, 389, 328, 376, 381, 314, 308, 249, 378, 312,
	307, 300, 279, 422, 292, 340, 306, 341, 293, 318,
	317, 319, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 0, 365, 0, 0, 301, 0, 0, 0, 408,
	0, 352, 334, 0, 0, 0, 350, 304, 377, 342,
	383, 367, 391, 346, 343, 241, 368, 274, 315, 252,
	254, 269, 276, 278, 280, 281, 324, 325, 337, 356,
	369, 370, 371, 273, 262, 351, 263, 290, 264, 242,
	266, 265, 267, 358, 268, 244, 338, 375, 0, 286,
	347, 311, 245, 310, 339, 374, 373, 253, 399, 405,
	406, 0, 0, 411, 0, 0, 0, 419, 424, 425,
	426, 428, 429, 430, 431, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 404, 284, 238, 239,
	444, 270, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 403, 0, 0, 0, 432,
	443, 0, 0, 0, 0, 0, 442, 336, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 385, 397, 414, 417, 0, 0, 0,
	0, 243, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 412, 0, 0, 320, 321, 322, 323, 287, 0,
	260, 415, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 283, 289, 427, 291, 259, 335, 285,
	394, 298, 0, 420, 0, 421, 0, 0, 0, 0,
	327, 294, 295, 359, 299, 305, 348, 393, 333, 353,
	257, 384, 360, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 236, 0, 240, 0, 303,
	0, 344, 282, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 0, 332, 0, 237, 232, 233, 234,
	235, 0, 0, 0, 400, 401, 402, 423, 386, 0,
	441, 277, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 445, 437, 0, 0, 0, 433, 0, 434,
	0, 0, 0, 0, 0, 361, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 1218,
	0, 0, 0, 255, 187, 435, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1216, 0, 0, 0, 0, 0, 0, 246,
	366, 382, 256, 357, 395, 261, 364, 251, 331, 354,
	0, 0, 248, 380, 363, 313, 296, 297, 247, 0,
	349, 275, 288, 272, 329, 0, 379, 407, 271, 398,
	0, 390, 250, 0, 389, 328, 376, 381, 314, 308,
	249, 378, 312, 307, 300, 279, 422, 292, 340, 306,
	341, 293, 318, 317, 319, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 0, 365, 0, 0, 301, 0,
	0, 0, 408, 0, 352, 334, 0, 0, 0, 350,
	304, 377, 342, 383, 367, 391, 346, 343, 241, 368,
	274, 315, 252, 254, 269, 276, 278, 280, 281, 324,
	325, 337, 356, 369, 370, 371, 273, 262, 351, 263,
	290, 264, 242, 266, 265, 267, 358, 268, 244, 338,
	375, 0, 286, 347, 311, 245, 310, 339, 374, 373,
	253, 399, 405, 406, 0, 0, 411, 0, 0, 0,
	419, 424, 425, 426, 428, 429, 430, 431, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 404,
	284, 238, 239, 444, 270, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 403, 0,
	0, 0, 432, 443, 0, 0, 0, 0, 0, 442,
	336, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 385, 397, 414, 417,
	0, 0, 0, 0, 243, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 412, 0, 0, 320, 321, 322,
	323, 287, 0, 260, 415, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 283, 289, 427, 291,
	259, 335, 285, 394, 298, 0, 420, 0, 421, 0,
	0, 0, 0, 327, 294, 295, 359, 299, 305, 348,
	393, 333, 353, 257, 384, 360, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 236, 0,
	240, 0, 303, 0, 344, 282, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 0, 332, 0, 237,
	232, 233, 234, 235, 0, 0, 0, 400, 401, 402,
	423, 386, 0, 441, 277, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 445, 437, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 361, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 1218, 0, 0, 0, 255, 187, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2908, 0, 0, 0, 0,
	0, 0, 246, 366, 382, 256, 357, 395, 261, 364,
	251, 331, 354, 0, 0, 248, 380, 363, 313, 296,
	297, 247, 0, 349, 275, 288, 272, 329, 0, 379,
	407, 271, 398, 0, 390, 250, 0, 389, 328, 376,
	381, 314, 308, 249, 378, 312, 307, 300, 279, 422,
	292, 340, 306, 341, 293, 318, 317, 319, 0, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 365, 0,
	0, 301, 0, 0, 0, 408, 0, 352, 334, 0,
	0, 0, 350, 304, 377, 342, 383, 367, 391, 346,
	343, 241, 368, 274, 315, 252, 254, 269, 276, 278,
	280, 281, 324, 325, 337, 356, 369, 370, 371, 273,
	262, 351, 263, 290, 264, 242, 266, 265, 267, 358,
	268, 244, 338, 375, 0, 286, 347, 311, 245, 310,
	339, 374, 373, 253, 399, 405, 406, 0, 0, 411,
	0, 0, 0, 419, 424, 425, 426, 428, 429, 430,
	431, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 404, 284, 238, 239, 444, 270, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 403, 0, 0, 0, 432, 443, 0, 0, 0,
	0, 0, 442, 336, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 385,
	397, 414, 417, 0, 0, 0, 0, 243, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 412, 0, 0,
	320, 321, 322, 323, 287, 0, 260, 415, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 283,
	289, 427, 291, 259, 335, 285, 394, 298, 0, 420,
	0, 421, 0, 0, 0, 0, 327, 294, 295, 359,
	299, 305, 348, 393, 333, 353, 257, 384, 360, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 236, 0, 240, 0, 303, 0, 344, 282, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 0,
	0, 0, 237, 232, 233, 234, 235, 332, 0, 0,
	400, 401, 402, 423, 386, 0, 441, 0, 0, 2079,
	0, 0, 0, 0, 277, 0, 0, 302, 445, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 361, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 2081, 0, 0, 0, 255, 187, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 366, 382, 256, 357, 395, 261, 364,
	251, 331, 354, 0, 0, 248, 380, 363, 313, 296,
	297, 247, 0, 349, 275, 288, 272, 329, 0, 379,
	407, 271, 398, 0, 390, 250, 0, 389, 328, 376,
	381, 314, 308, 249, 378, 312, 307, 300, 279, 422,
	292, 340, 306, 341, 293, 318, 317, 319, 0, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 365, 0,
	0, 301, 0, 0, 0, 408, 0, 352, 334, 0,
	0, 0, 350, 304, 377, 342, 383, 367, 391, 346,
	343, 241, 368, 274, 315, 252, 254, 269, 276, 278,
	280, 281, 324, 325, 337, 356, 369, 370, 371, 273,
	262, 351, 263, 290, 264, 242, 266, 265, 267, 358,
	268, 244, 338, 375, 0, 286, 347, 311, 245, 310,
	339, 374, 373, 253, 399, 405, 406, 0, 0, 411,
	0, 0, 0, 419, 424, 425, 426, 428, 429, 430,
	431, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 404, 284, 238, 239, 444, 270, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 403, 0, 0, 0, 432, 443, 0, 0, 0,
	0, 0, 442, 336, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 385,
	397, 414, 417, 0, 0, 0, 0, 243, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 412, 0, 0,
	320, 321, 322, 323, 287, 0, 260, 415, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 283,
	289, 427, 291, 259, 335, 285, 394, 298, 0, 420,
	0, 421, 0, 0, 0, 0, 327, 294, 295, 359,
	299, 305, 348, 393, 333, 353, 257, 384, 360, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 236, 0, 240, 0, 303, 0, 344, 282, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 0,
	332, 0, 237, 232, 233, 234, 235, 0, 0, 0,
	400, 401, 402, 423, 386, 0, 441, 277, 2100, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 445, 437,
	0, 0, 0, 433, 0, 434, 0, 0, 0, 0,
	0, 361, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 1218, 0, 0, 0, 255,
	187, 435, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 366, 382, 256, 357,
	395, 261, 364, 251, 331, 354, 0, 0, 248, 380,
	363, 313, 296, 297, 247, 0, 349, 275, 288, 272,
	329, 0, 379, 407, 271, 398, 0, 390, 250, 0,
	389, 328, 376, 381, 314, 308, 249, 378, 312, 307,
	300, 279, 422, 292, 340, 306, 341, 293, 318, 317,
	319, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	0, 365, 0, 0, 301, 0, 0, 0, 408, 0,
	352, 334, 0, 0, 0, 350, 304, 377, 342, 383,
	367, 391, 346, 343, 241, 368, 274, 315, 252, 254,
	269, 276, 278, 280, 281, 324, 325, 337, 356, 369,
	370, 371, 273, 262, 351, 263, 290, 264, 242, 266,
	265, 267, 358, 268, 244, 338, 375, 0, 286, 347,
	311, 245, 310, 339, 374, 373, 253, 399, 405, 406,
	0, 0, 411, 0, 0, 0, 419, 424, 425, 426,
	428, 429, 430, 431, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 404, 284, 238, 239, 444,
	270, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 403, 0, 0, 0, 432, 443,
	0, 0, 0, 0, 0, 442, 336, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 385, 397, 414, 417, 0, 0, 0, 0,
	243, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	412, 0, 0, 320, 321, 322, 323, 287, 0, 260,
	415, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 283, 289, 427, 291, 259, 335, 285, 394,
	298, 0, 420, 0, 421, 0, 0, 0, 0, 327,
	294, 295, 359, 299, 305, 348, 393, 333, 353, 257,
	384, 360, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 236, 0, 240, 0, 303, 0,
	344, 282, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 0, 332, 0, 237, 232, 233, 234, 235,
	0, 0, 0, 400, 401, 402, 423, 386, 0, 441,
	277, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 445, 437, 0, 0, 0, 433, 0, 434, 0,
	0, 0, 0, 0, 361, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3270, 0, 186, 0, 0, 0, 0,
	0, 0, 255, 187, 435, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 366,
	382, 256, 357, 395, 261, 364, 251, 331, 354, 0,
	0, 248, 380, 363, 313, 296, 297, 247, 0, 349,
	275, 288, 272, 329, 0, 379, 407, 271, 398, 0,
	390, 250, 0, 389, 328, 376, 381, 314, 308, 249,
	378, 312, 307, 300, 279, 422, 292, 340, 306, 341,
	293, 318, 317, 319, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 0, 365, 0, 0, 301, 0, 0,
	0, 408, 0, 352, 334, 0, 0, 0, 350, 304,
	377, 342, 383, 367, 391, 346, 343, 241, 368, 274,
	315, 252, 254, 269, 276, 278, 280, 281, 324, 325,
	337, 356, 369, 370, 371, 273, 262, 351, 263, 290,
	264, 242, 266, 265, 267, 358, 268, 244, 338, 375,
	0, 286, 347, 311, 245, 310, 339, 374, 373, 253,
	399, 405, 406, 0, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 404, 284,
	238, 239, 444, 270, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 403, 0, 0,
	0, 432, 443, 0, 0, 0, 0, 0, 442, 336,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 385, 397, 414, 417, 0,
	0, 0, 0, 243, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 412, 0, 0, 320, 321, 322, 323,
	287, 0, 260, 415, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 283, 289, 427, 291, 259,
	335, 285, 394, 298, 0, 420, 0, 421, 0, 0,
	0, 0, 327, 294, 295, 359, 299, 305, 348, 393,
	333, 353, 257, 384, 360, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 236, 0, 240,
	0, 303, 0, 344, 282, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 0, 332, 0, 237, 232,
	233, 234, 235, 0, 0, 0, 400, 401, 402, 423,
	386, 0, 441, 277, 0, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 445, 437, 0, 0, 0, 433,
	0, 434, 0, 0, 0, 0, 0, 361, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 618,
	0, 0, 0, 0, 0, 255, 187, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 366, 382, 256, 357, 395, 261, 364, 251,
	331, 354, 0, 0, 248, 380, 363, 313, 296, 297,
	247, 0, 349, 275, 288, 272, 329, 0, 379, 407,
	271, 398, 0, 390, 250, 0, 389, 328, 376, 381,
	314, 308, 249, 378, 312, 307, 300, 279, 422, 292,
	340, 306, 341, 293, 318, 317, 319, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 365, 0, 0,
	301, 0, 0, 0, 408, 0, 352, 334, 0, 0,
	0, 350, 304, 377, 342, 383, 367, 391, 346, 343,
	241, 368, 274, 315, 252, 254, 269, 276, 278, 280,
	281, 324, 325, 337, 356, 369, 370, 371, 273, 262,
	351, 263, 290, 264, 242, 266, 265, 267, 358, 268,
	244, 338, 375, 0, 286, 347, 311, 245, 310, 339,
	374, 373, 253, 399, 405, 406, 0, 0, 411, 0,
	0, 0, 419, 424, 425, 426, 428, 429, 430, 431,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 404, 284, 238, 239, 444, 270, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	403, 0, 0, 0, 432, 443, 0, 0, 0, 0,
	0, 442, 336, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 385, 397,
	414, 417, 0, 0, 0, 0, 243, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 412, 0, 0, 320,
	321, 322, 323, 287, 0, 260, 415, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 283, 289,
	427, 291, 259, 335, 285, 394, 298, 0, 420, 0,
	421, 0, 0, 0, 0, 327, 294, 295, 359, 299,
	305, 348, 393, 333, 353, 257, 384, 360, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	236, 0, 240, 0, 303, 0, 344, 282, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 0, 332,
	0, 237, 232, 233, 234, 235, 0, 0, 0, 400,
	401, 402, 423, 386, 0, 441, 277, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 445, 437, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	361, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3196, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 255, 187,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 366, 382, 256, 357, 395,
	261, 364, 251, 331, 354, 0, 0, 248, 380, 363,
	313, 296, 297, 247, 0, 349, 275, 288, 272, 329,
	0, 379, 407, 271, 398, 0, 390, 250, 0, 389,
	328, 376, 381, 314, 308, 249, 378, 312, 307, 300,
	279, 422, 292, 340, 306, 341, 293, 318, 317, 319,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 0,
	365, 0, 0, 301, 0, 0, 0, 408, 0, 352,
	334, 0, 0, 0, 350, 304, 377, 342, 383, 367,
	391, 346, 343, 241, 368, 274, 315, 252, 254, 269,
	276, 278, 280, 281, 324, 325, 337, 356, 369, 370,
	371, 273, 262, 351, 263, 290, 264, 242, 266, 265,
	267, 358, 268, 244, 338, 375, 0, 286, 347, 311,
	245, 310, 339, 374, 373, 253, 399, 405, 406, 0,
	0, 411, 0, 0, 0, 419, 424, 425, 426, 428,
	429, 430, 431, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 404, 284, 238, 239, 444, 270,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 403, 0, 0, 0, 432, 443, 0,
	0, 0, 0, 0, 442, 336, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 385, 397, 414, 417, 0, 0, 0, 0, 243,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 412,
	0, 0, 320, 321, 322, 323, 287, 0, 260, 415,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 283, 289, 427, 291, 259, 335, 285, 394, 298,
	0, 420, 0, 421, 0, 0, 0, 0, 327, 294,
	295, 359, 299, 305, 348, 393, 333, 353, 257, 384,
	360, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 236, 0, 240, 0, 303, 0, 344,
	282, 0, 0, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 0, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 0, 332, 0, 237, 232, 233, 234, 235, 0,
	0, 0, 400, 401, 402, 423, 386, 0, 441, 277,
	0, 0, 302, 0, 0, 0, 0, 0, 0, 0,
	445, 437, 0, 0, 0, 433, 0, 434, 0, 0,
	0, 0, 0, 361, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 255, 187, 435, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 366, 382,
	256, 357, 395, 261, 364, 251, 331, 354, 0, 0,
	248, 380, 363, 313, 296, 297, 247, 0, 349, 275,
	288, 272, 329, 0, 379, 407, 271, 398, 0, 390,
	250, 0, 389, 328, 376, 381, 314, 308, 249, 378,
	312, 307, 300, 279, 422, 292, 340, 306, 341, 293,
	318, 317, 319, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	3126, 0, 0, 365, 0, 0, 301, 0, 0, 0,
	408, 0, 352, 334, 0, 0, 0, 350, 304, 377,
	342, 383, 367, 391, 346, 343, 241, 368, 274, 315,
	252, 254, 269, 276, 278, 280, 281, 324, 325, 337,
	356, 369, 370, 371, 273, 262, 351, 263, 290, 264,
	242, 266, 265, 267, 358, 268, 244, 338, 375, 0,
	286, 347, 311, 245, 310, 339, 374, 373, 253, 399,
	405, 406, 0, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 404, 284, 238,
	239, 444, 270, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 403, 0, 0, 0,
	432, 443, 0, 0, 0, 0, 0, 442, 336, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 385, 397, 414, 417, 0, 0,
	0, 0, 243, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 412, 0, 0, 320, 321, 322, 323, 287,
	0, 260, 415, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 283, 289, 427, 291, 259, 335,
	285, 394, 298, 0, 420, 0, 421, 0, 0, 0,
	0, 327, 294, 295, 359, 299, 305, 348, 393, 333,
	353, 257, 384, 360, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 236, 0, 240, 0,
	303, 0, 344, 282, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 0, 332, 0, 237, 232, 233,
	234, 235, 0, 0, 0, 400, 401, 402, 423, 386,
	0, 441, 277, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 445, 437, 0, 0, 0, 433, 0,
	434, 0, 0, 0, 0, 0, 361, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2904, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 255, 187, 435, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 366, 382, 256, 357, 395, 261, 364, 251, 331,
	354, 0, 0, 248, 380, 363, 313, 296, 297, 247,
	0, 349, 275, 288, 272, 329, 0, 379, 407, 271,
	398, 0, 390, 250, 0, 389, 328, 376, 381, 314,
	308, 249, 378, 312, 307, 300, 279, 422, 292, 340,
	306, 341, 293, 318, 317, 319, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 0, 365, 0, 0, 301,
	0, 0, 0, 408, 0, 352, 334, 0, 0, 0,
	350, 304, 377, 342, 383, 367, 391, 346, 343, 241,
	368, 274, 315, 252, 254, 269, 276, 278, 280, 281,
	324, 325, 337, 356, 369, 370, 371, 273, 262, 351,
	263, 290, 264, 242, 266, 265, 267, 358, 268, 244,
	338, 375, 0, 286, 347, 311, 245, 310, 339, 374,
	373, 253, 399, 405, 406, 0, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	404, 284, 238, 239, 444, 270, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 403,
	0, 0, 0, 432, 443, 0, 0, 0, 0, 0,
	442, 336, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 385, 397, 414,
	417, 0, 0, 0, 0, 243, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 412, 0, 0, 320, 321,
	322, 323, 287, 0, 260, 415, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 283, 289, 427,
	291, 259, 335, 285, 394, 298, 0, 420, 0, 421,
	0, 0, 0, 0, 327, 294, 295, 359, 299, 305,
	348, 393, 333, 353, 257, 384, 360, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 236,
	0, 240, 0, 303, 0, 344, 282, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 0, 332, 0,
	237, 232, 233, 234, 235, 0, 0, 0, 400, 401,
	402, 423, 386, 0, 441, 277, 0, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 445, 437, 0, 0,
	0, 433, 0, 434, 0, 0, 0, 0, 0, 361,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 2768, 0, 0, 0, 255, 187, 435,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 366, 382, 256, 357, 395, 261,
	364, 251, 331, 354, 0, 0, 248, 380, 363, 313,
	296, 297, 247, 0, 349, 275, 288, 272, 329, 0,
	379, 407, 271, 398, 0, 390, 250, 0, 389, 328,
	376, 381, 314, 308, 249, 378, 312, 307, 300, 279,
	422, 292, 340, 306, 341, 293, 318, 317, 319, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 0, 365,
	0, 0, 301, 0, 0, 0, 408, 0, 352, 334,
	0, 0, 0, 350, 304, 377, 342, 383, 367, 391,
	346, 343, 241, 368, 274, 315, 252, 254, 269, 276,
	278, 280, 281, 324, 325, 337, 356, 369, 370, 371,
	273, 262, 351, 263, 290, 264, 242, 266, 265, 267,
	358, 268, 244, 338, 375, 0, 286, 347, 311, 245,
	310, 339, 374, 373, 253, 399, 405, 406, 0, 0,
	411, 0, 0, 0, 419, 424, 425, 426, 428, 429,
	430, 431, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 404, 284, 238, 239, 444, 270, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 403, 0, 0, 0, 432, 443, 0, 0,
	0, 0, 0, 442, 336, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	385, 397, 414, 417, 0, 0, 0, 0, 243, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 412, 0,
	0, 320, 321, 322, 323, 287, 0, 260, 415, 345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	283, 289, 427, 291, 259, 335, 285, 394, 298, 0,
	420, 0, 421, 0, 0, 0, 0, 327, 294, 295,
	359, 299, 305, 348, 393, 333, 353, 257, 384, 360,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 236, 0, 240, 0, 303, 0, 344, 282,
	0, 0, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 0, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	0, 332, 0, 237, 232, 233, 234, 235, 0, 0,
	0, 400, 401, 402, 423, 386, 0, 441, 277, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 445,
	437, 0, 0, 0, 433, 0, 434, 0, 0, 0,
	0, 0, 361, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	255, 187, 435, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 366, 382, 256,
	357, 395, 261, 364, 251, 331, 354, 0, 0, 248,
	380, 363, 313, 296, 297, 247, 0, 349, 275, 288,
	272, 329, 0, 379, 407, 271, 398, 0, 390, 250,
	0, 389, 328, 376, 381, 314, 308, 249, 378, 312,
	307, 300, 279, 422, 292, 340, 306, 341, 293, 318,
	317, 319, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 2978,
	0, 0, 365, 0, 0, 301, 0, 0, 0, 408,
	0, 352, 334, 0, 0, 0, 350, 304, 377, 342,
	383, 367, 391, 346, 343, 241, 368, 274, 315, 252,
	254, 269, 276, 278, 280, 281, 324, 325, 337, 356,
	369, 370, 371, 273, 262, 351, 263, 290, 264, 242,
	266, 265, 267, 358, 268, 244, 338, 375, 0, 286,
	347, 311, 245, 310, 339, 374, 373, 253, 399, 405,
	406, 0, 0, 411, 0, 0, 0, 419, 424, 425,
	426, 428, 429, 430, 431, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 404, 284, 238, 239,
	444, 270, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 403, 0, 0, 0, 432,
	443, 0, 0, 0, 0, 0, 442, 336, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 385, 397, 414, 417, 0, 0, 0,
	0, 243, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 412, 0, 0, 320, 321, 322, 323, 287, 0,
	260, 415, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 283, 289, 427, 291, 259, 335, 285,
	394, 298, 0, 420, 0, 421, 0, 0, 0, 0,
	327, 294, 295, 359, 299, 305, 348, 393, 333, 353,
	257, 384, 360, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 236, 0, 240, 0, 303,
	0, 344, 282, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 0, 332, 0, 237, 232, 233, 234,
	235, 0, 0, 0, 400, 401, 402, 423, 386, 0,
	441, 277, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 445, 437, 0, 0, 0, 433, 0, 434,
	0, 0, 0, 0, 0, 361, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 255, 187, 435, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	366, 382, 256, 357, 395, 261, 364, 251, 331, 354,
	0, 0, 248, 380, 363, 313, 296, 297, 247, 0,
	349, 275, 288, 272, 329, 0, 379, 407, 271, 398,
	0, 390, 250, 0, 389, 328, 376, 381, 314, 308,
	249, 378, 312, 307, 300, 279, 422, 292, 340, 306,
	341, 293, 318, 317, 319, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 0, 365, 0, 0, 301, 0,
	0, 0, 408, 0, 352, 334, 0, 0, 0, 350,
	304, 377, 342, 383, 367, 391, 346, 343, 241, 368,
	274, 315, 252, 254, 269, 276, 278, 280, 281, 324,
	325, 337, 356, 369, 370, 371, 273, 262, 351, 263,
	290, 264, 242, 266, 265, 267, 358, 268, 244, 338,
	375, 0, 286, 347, 311, 245, 310, 339, 374, 373,
	253, 399, 405, 406, 0, 0, 411, 0, 0, 0,
	419, 424, 425, 426, 428, 429, 430, 431, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 404,
	284, 238, 239, 444, 270, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 403, 0,
	0, 0, 432, 443, 0, 0, 0, 0, 0, 442,
	336, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 385, 397, 414, 417,
	0, 0, 0, 0, 243, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 412, 0, 0, 320, 321, 322,
	323, 287, 0, 260, 415, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 283, 289, 427, 291,
	259, 335, 285, 394, 298, 0, 420, 0, 421, 0,
	0, 0, 0, 327, 294, 295, 359, 299, 305, 348,
	393, 333, 353, 257, 384, 360, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 236, 0,
	240, 0, 303, 0, 344, 282, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 0, 332, 0, 237,
	232, 233, 234, 235, 0, 0, 0, 400, 401, 402,
	423, 386, 0, 441, 277, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 445, 437, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 361, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 255, 187, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 366, 382, 256, 357, 395, 261, 364,
	251, 331, 354, 0, 0, 248, 380, 363, 313, 296,
	297, 247, 0, 349, 275, 288, 272, 329, 0, 379,
	407, 271, 398, 0, 390, 250, 0, 389, 328, 376,
	381, 314, 308, 249, 378, 312, 307, 300, 279, 422,
	292, 340, 306, 341, 293, 318, 317, 319, 0, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 365, 0,
	0, 301, 0, 0, 0, 408, 0, 352, 334, 0,
	0, 0, 350, 304, 377, 342, 383, 367, 391, 346,
	343, 241, 368, 274, 315, 252, 254, 269, 276, 278,
	280, 281, 324, 325, 337, 356, 369, 370, 371, 273,
	262, 351, 263, 290, 264, 242, 266, 265, 267, 358,
	268, 244, 338, 375, 0, 286, 347, 311, 245, 310,
	339, 374, 373, 253, 399, 405, 406, 0, 0, 411,
	0, 0, 0, 419, 424, 425, 426, 428, 429, 430,
	431, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 404, 284, 238, 239, 444, 270, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 403, 0, 0, 0, 432, 443, 0, 0, 0,
	0, 0, 442, 336, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 385,
	397, 414, 417, 0, 0, 0, 0, 243, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 412, 0, 0,
	320, 321, 322, 323, 287, 0, 260, 415, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 283,
	289, 427, 291, 259, 335, 285, 394, 298, 0, 420,
	0, 421, 0, 0, 0, 0, 327, 294, 295, 359,
	299, 305, 348, 393, 333, 353, 257, 384, 360, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 236, 0, 240, 0, 303, 0, 344, 282, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 0,
	332, 0, 237, 232, 233, 234, 235, 0, 0, 0,
	400, 401, 402, 423, 386, 0, 441, 277, 0, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 445, 437,
	0, 0, 0, 433, 0, 434, 0, 0, 0, 0,
	0, 361, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 255,
	187, 435, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 366, 382, 256, 357,
	395, 261, 364, 251, 331, 354, 0, 0, 248, 380,
	363, 313, 296, 297, 247, 0, 349, 275, 288, 272,
	329, 0, 379, 407, 271, 398, 0, 390, 250, 0,
	389, 328, 376, 381, 314, 308, 249, 378, 312, 307,
	300, 279, 422, 292, 340, 306, 341, 293, 318, 317,
	319, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	0, 365, 0, 0, 301, 0, 0, 0, 408, 0,
	352, 334, 0, 0, 0, 350, 304, 377, 342, 383,
	367, 391, 346, 343, 241, 368, 274, 315, 252, 254,
	269, 276, 278, 280, 281, 324, 325, 337, 356, 369,
	370, 371, 273, 262, 351, 263, 290, 264, 242, 266,
	265, 267, 358, 268, 244, 338, 375, 0, 286, 347,
	311, 245, 310, 339, 374, 373, 253, 399, 405, 406,
	0, 0, 411, 0, 0, 0, 419, 424, 425, 426,
	428, 429, 430, 431, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 404, 284, 238, 239, 444,
	270, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 403, 0, 0, 0, 432, 443,
	0, 0, 0, 0, 0, 442, 336, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 385, 397, 414, 417, 0, 0, 0, 0,
	243, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	412, 0, 0, 320, 321, 322, 323, 287, 0, 260,
	415, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 283, 289, 427, 291, 259, 335, 285, 394,
	298, 0, 420, 0, 421, 0, 0, 0, 0, 327,
	294, 295, 359, 299, 305, 348, 393, 333, 353, 257,
	384, 360, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 236, 0, 240, 0, 303, 0,
	344, 282, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 0, 332, 0, 237, 232, 233, 234, 235,
	0, 0, 0, 400, 401, 402, 423, 386, 0, 441,
	277, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 445, 437, 0, 0, 0, 433, 0, 434, 0,
	0, 0, 0, 0, 361, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 2569, 0,
	0, 0, 255, 187, 435, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 366,
	382, 256, 357, 395, 261, 364, 251, 331, 354, 0,
	0, 248, 380, 363, 313, 296, 297, 247, 0, 349,
	275, 288, 272, 329, 0, 379, 407, 271, 398, 0,
	390, 250, 0, 389, 328, 376, 381, 314, 308, 249,
	378, 312, 307, 300, 279, 422, 292, 340, 306, 341,
	293, 318, 317, 319, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 0, 365, 0, 0, 301, 0, 0,
	0, 408, 0, 352, 334, 0, 0, 0, 350, 304,
	377, 342, 383, 367, 391, 346, 343, 241, 368, 274,
	315, 252, 254, 269, 276, 278, 280, 281, 324, 325,
	337, 356, 369, 370, 371, 273, 262, 351, 263, 290,
	264, 242, 266, 265, 267, 358, 268, 244, 338, 375,
	0, 286, 347, 311, 245, 310, 339, 374, 373, 253,
	399, 405, 406, 0, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 404, 284,
	238, 239, 444, 270, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 403, 0, 0,
	0, 432, 443, 0, 0, 0, 0, 0, 442, 336,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 385, 397, 414, 417, 0,
	0, 0, 0, 243, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 412, 0, 0, 320, 321, 322, 323,
	287, 0, 260, 415, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 283, 289, 427, 291, 259,
	335, 285, 394, 298, 0, 420, 0, 421, 0, 0,
	0, 0, 327, 294, 295, 359, 299, 305, 348, 393,
	333, 353, 257, 384, 360, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 236, 0, 240,
	0, 303, 0, 344, 282, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 0, 332, 0, 237, 232,
	233, 234, 235, 0, 0, 0, 400, 401, 402, 423,
	386, 0, 441, 277, 0, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 445, 437, 0, 0, 0, 433,
	0, 434, 0, 0, 0, 0, 0, 361, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 255, 187, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 366, 382, 256, 357, 395, 261, 364, 251,
	331, 354, 0, 0, 248, 380, 363, 313, 296, 297,
	247, 0, 349, 275, 288, 272, 329, 0, 379, 407,
	271, 398, 0, 390, 250, 0, 389, 328, 376, 381,
	314, 308, 249, 378, 312, 307, 300, 279, 422, 292,
	340, 306, 341, 293, 318, 317, 319, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 365, 0, 0,
	301, 0, 0, 0, 408, 0, 352, 334, 0, 0,
	0, 350, 304, 377, 342, 383, 367, 391, 346, 343,
	241, 368, 274, 315, 252, 254, 269, 276, 278, 280,
	281, 324, 325, 337, 356, 369, 370, 371, 273, 262,
	351, 263, 290, 264, 242, 266, 265, 267, 358, 268,
	244, 338, 375, 0, 286, 347, 311, 245, 310, 339,
	374, 373, 253, 399, 405, 406, 0, 0, 411, 0,
	0, 0, 419, 424, 425, 426, 428, 429, 430, 431,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 404, 284, 238, 239, 444, 270, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	403, 0, 0, 0, 432, 443, 0, 0, 0, 0,
	0, 442, 336, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 385, 397,
	414, 417, 0, 0, 0, 0, 243, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 412, 0, 0, 320,
	321, 322, 323, 287, 0, 260, 415, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 283, 289,
	427, 291, 259, 335, 285, 394, 298, 0, 420, 0,
	421, 0, 0, 0, 0, 327, 294, 295, 359, 299,
	305, 348, 393, 333, 353, 257, 384, 360, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	236, 0, 240, 0, 303, 0, 344, 282, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 0, 332,
	0, 237, 232, 233, 234, 235, 0, 0, 0, 400,
	401, 402, 423, 386, 0, 441, 277, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 445, 437, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	361, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 1218, 0, 0, 0, 255, 187,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 366, 382, 256, 357, 395,
	261, 364, 251, 331, 354, 0, 0, 248, 380, 363,
	313, 296, 297, 247, 0, 349, 275, 288, 272, 329,
	0, 379, 407, 271, 398, 0, 390, 250, 0, 389,
	328, 376, 381, 314, 308, 249, 378, 312, 307, 300,
	279, 422, 292, 340, 306, 341, 293, 318, 317, 319,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 0,
	365, 0, 0, 301, 0, 0, 0, 408, 0, 352,
	334, 0, 0, 0, 350, 304, 377, 342, 383, 367,
	391, 346, 343, 241, 368, 274, 315, 252, 254, 269,
	276, 278, 280, 281, 324, 325, 337, 356, 369, 370,
	371, 273, 262, 351, 263, 290, 264, 242, 266, 265,
	267, 358, 268, 244, 338, 375, 0, 286, 347, 311,
	245, 310, 339, 374, 373, 253, 399, 405, 406, 0,
	0, 411, 0, 0, 0, 419, 424, 425, 426, 428,
	429, 430, 431, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 404, 284, 238, 239, 444, 270,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 403, 0, 0, 0, 432, 443, 0,
	0, 0, 0, 0, 442, 336, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 385, 397, 414, 417, 0, 0, 0, 0, 243,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 412,
	0, 0, 320, 321, 322, 323, 287, 0, 260, 415,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 283, 289, 427, 291, 259, 335, 285, 394, 298,
	0, 420, 0, 421, 0, 0, 0, 0, 327, 294,
	295, 359, 299, 305, 348, 393, 333, 353, 257, 384,
	360, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 236, 0, 240, 0, 303, 0, 344,
	282, 0, 0, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 0, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 0, 332, 0, 237, 232, 233, 234, 235, 0,
	0, 0, 400, 401, 402, 423, 386, 0, 441, 277,
	0, 0, 302, 0, 0, 0, 0, 0, 0, 0,
	445, 437, 0, 0, 0, 433, 0, 434, 0, 0,
	0, 0, 0, 361, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 2081, 0, 0,
	0, 255, 187, 435, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 366, 382,
	256, 357, 395, 261, 364, 251, 331, 354, 0, 0,
	248, 380, 363, 313, 296, 297, 247, 0, 349, 275,
	288, 272, 329, 0, 379, 407, 271, 398, 0, 390,
	250, 0, 389, 328, 376, 381, 314, 308, 249, 378,
	312, 307, 300, 279, 422, 292, 340, 306, 341, 293,
	318, 317, 319, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 0, 365, 0, 0, 301, 0, 0, 0,
	408, 0, 352, 334, 0, 0, 0, 350, 304, 377,
	342, 383, 367, 391, 346, 343, 241, 368, 274, 315,
	252, 254, 269, 276, 278, 280, 281, 324, 325, 337,
	356, 369, 370, 371, 273, 262, 351, 263, 290, 264,
	242, 266, 265, 267, 358, 268, 244, 338, 375, 0,
	286, 347, 311, 245, 310, 339, 374, 373, 253, 399,
	405, 406, 0, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 404, 284, 238,
	239, 444, 270, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 403, 0, 0, 0,
	432, 443, 0, 0, 0, 0, 0, 442, 336, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 385, 397, 414, 417, 0, 0,
	0, 0, 243, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 412, 0, 0, 320, 321, 322, 323, 287,
	0, 260, 415, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 283, 289, 427, 291, 259, 335,
	285, 394, 298, 0, 420, 0, 421, 0, 0, 0,
	0, 327, 294, 295, 359, 299, 305, 348, 393, 333,
	353, 257, 384, 360, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 236, 0, 240, 0,
	303, 0, 344, 282, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 0, 332, 0, 237, 232, 233,
	234, 235, 0, 0, 0, 400, 401, 402, 423, 386,
	0, 441, 277, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 445, 437, 0, 0, 0, 433, 0,
	434, 0, 0, 0, 0, 0, 361, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 255, 187, 435, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 366, 382, 256, 357, 395, 261, 364, 251, 331,
	354, 0, 0, 248, 380, 363, 313, 296, 297, 247,
	0, 349, 275, 288, 272, 329, 0, 379, 407, 271,
	398, 0, 390, 250, 0, 389, 328, 376, 381, 314,
	308, 249, 378, 312, 307, 300, 279, 422, 292, 340,
	306, 341, 293, 318, 317, 319, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 0, 365, 0, 0, 301,
	0, 0, 0, 408, 0, 352, 334, 0, 0, 0,
	350, 304, 377, 342, 383, 367, 391, 346, 343, 241,
	368, 274, 315, 252, 254, 269, 276, 278, 280, 281,
	324, 325, 337, 356, 369, 370, 371, 273, 262, 351,
	263, 290, 264, 242, 266, 265, 267, 358, 268, 244,
	338, 375, 0, 286, 347, 311, 245, 310, 339, 374,
	373, 253, 399, 405, 406, 0, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	404, 284, 238, 239, 444, 270, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 403,
	0, 0, 0, 432, 443, 0, 0, 0, 0, 0,
	442, 336, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 385, 397, 414,
	417, 0, 0, 0, 0, 243, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 412, 0, 0, 320, 321,
	322, 323, 287, 0, 260, 415, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 283, 289, 427,
	291, 259, 335, 285, 394, 298, 0, 420, 0, 421,
	0, 0, 0, 0, 327, 294, 295, 359, 299, 305,
	348, 393, 333, 353, 257, 384, 360, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 236,
	0, 240, 0, 303, 0, 344, 282, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 0, 332, 0,
	237, 232, 233, 234, 235, 0, 0, 0, 400, 401,
	402, 423, 386, 0, 441, 277, 0, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 445, 437, 0, 0,
	0, 433, 0, 434, 0, 0, 0, 0, 0, 361,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 255, 187, 435,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 366, 382, 256, 357, 395, 261,
	364, 251, 331, 354, 0, 0, 248, 380, 363, 313,
	296, 297, 247, 0, 349, 275, 288, 272, 329, 0,
	379, 407, 271, 398, 0, 390, 250, 0, 389, 328,
	376, 381, 314, 308, 249, 378, 312, 307, 300, 279,
	422, 292, 340, 306, 341, 293, 318, 317, 319, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 0, 365,
	0, 0, 301, 0, 0, 0, 408, 0, 352, 334,
	0, 0, 0, 350, 304, 377, 342, 383, 367, 391,
	346, 343, 241, 368, 274, 315, 252, 254, 269, 276,
	278, 280, 281, 324, 325, 337, 356, 369, 370, 371,
	273, 262, 351, 263, 290, 264, 242, 266, 265, 267,
	358, 268, 244, 338, 375, 0, 286, 347, 311, 245,
	310, 339, 374, 373, 253, 399, 405, 406, 0, 0,
	411, 0, 0, 0, 419, 424, 425, 426, 428, 429,
	430, 431, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 404, 284, 238, 239, 444, 270, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 403, 0, 0, 0, 432, 443, 0, 0,
	0, 0, 0, 442, 336, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	385, 397, 414, 417, 0, 0, 0, 0, 243, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 412, 0,
	0, 320, 321, 322, 323, 287, 0, 260, 415, 345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	283, 289, 427, 291, 259, 335, 285, 394, 298, 0,
	420, 0, 421, 0, 0, 0, 0, 327, 294, 295,
	359, 299, 305, 348, 393, 333, 353, 257, 384, 360,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 236, 0, 240, 0, 303, 0, 344, 282,
	0, 0, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 0, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	0, 332, 0, 237, 232, 233, 234, 235, 0, 0,
	0, 400, 401, 402, 423, 386, 0, 441, 277, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 445,
	437, 0, 0, 0, 433, 0, 434, 0, 0, 0,
	0, 0, 361, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 2116, 0, 0, 0,
	255, 187, 435, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 366, 382, 256,
	357, 395, 261, 364, 251, 331, 354, 0, 0, 248,
	380, 363, 313, 296, 297, 247, 0, 349, 275, 288,
	272, 329, 0, 379, 407, 271, 398, 0, 390, 250,
	0, 389, 328, 376, 381, 314, 308, 249, 378, 312,
	307, 300, 279, 422, 292, 340, 306, 341, 293, 318,
	317, 319, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 0, 365, 0, 0, 301, 0, 0, 0, 408,
	0, 352, 334, 0, 0, 0, 350, 304, 377, 342,
	383, 367, 391, 346, 343, 241, 368, 274, 315, 252,
	254, 269, 276, 278, 280, 281, 324, 325, 337, 356,
	369, 370, 371, 273, 262, 351, 263, 290, 264, 242,
	266, 265, 267, 358, 268, 244, 338, 375, 0, 286,
	347, 311, 245, 310, 339, 374, 373, 253, 399, 405,
	406, 0, 0, 411, 0, 0, 0, 419, 424, 425,
	426, 428, 429, 430, 431, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 404, 284, 238, 239,
	444, 270, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 403, 0, 0, 0, 432,
	443, 0, 0, 0, 0, 0, 442, 336, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 385, 397, 414, 417, 0, 0, 0,
	0, 243, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 412, 0, 0, 320, 321, 322, 323, 287, 0,
	260, 415, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 283, 289, 427, 291, 259, 335, 285,
	394, 298, 0, 420, 0, 421, 0, 0, 0, 0,
	327, 294, 295, 359, 299, 305, 348, 393, 333, 353,
	257, 384, 360, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 236, 0, 240, 0, 303,
	0, 344, 282, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 0, 0, 1954, 237, 232, 233, 234,
	235, 332, 0, 0, 400, 401, 402, 423, 386, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 302, 445, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 0, 434, 0, 0, 0,
	0, 0, 361, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	255, 187, 435, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 366, 382, 256,
	357, 395, 261, 364, 251, 331, 354, 0, 0, 248,
	380, 363, 313, 296, 297, 247, 0, 349, 275, 288,
	272, 329, 0, 379, 407, 271, 398, 0, 390, 250,
	0, 389, 328, 376, 381, 314, 308, 249, 378, 312,
	307, 300, 279, 422, 292, 340, 306, 341, 293, 318,
	317, 319, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 0, 365, 0, 0, 301, 0, 0, 0, 408,
	0, 352, 334, 0, 0, 0, 350, 304, 377, 342,
	383, 367, 391, 346, 343, 241, 368, 274, 315, 252,
	254, 269, 276, 278, 280, 281, 324, 325, 337, 356,
	369, 370, 371, 273, 262, 351, 263, 290, 264, 242,
	266, 265, 267, 358, 268, 244, 338, 375, 0, 286,
	347, 311, 245, 310, 339, 374, 373, 253, 399, 405,
	406, 0, 0, 411, 0, 0, 0, 419, 424, 425,
	426, 428, 429, 430, 431, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 404, 284, 238, 239,
	444, 270, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 403, 0, 0, 0, 432,
	443, 0, 0, 0, 0, 0, 442, 336, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 385, 397, 414, 417, 0, 0, 0,
	0, 243, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 412, 0, 0, 320, 321, 322, 323, 287, 0,
	260, 415, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 283, 289, 427, 291, 259, 335, 285,
	394, 298, 0, 420, 0, 421, 0, 0, 0, 0,
	327, 294, 295, 359, 299, 305, 348, 393, 333, 353,
	257, 384, 360, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 236, 0, 240, 0, 303,
	0, 344, 282, 0, 0, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 0, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 0, 332, 0, 237, 232, 233, 234,
	235, 0, 1642, 0, 400, 401, 402, 423, 386, 0,
	441, 277, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 445, 437, 0, 0, 0, 433, 0, 434,
	0, 0, 0, 0, 0, 361, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 255, 187, 435, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	366, 382, 256, 357, 395, 261, 364, 251, 331, 354,
	0, 0, 248, 380, 363, 313, 296, 297, 247, 0,
	349, 275, 288, 272, 329, 0, 379, 407, 271, 398,
	0, 390, 250, 0, 389, 328, 376, 381, 314, 308,
	249, 378, 312, 307, 300, 279, 422, 292, 340, 306,
	341, 293, 318, 317, 319, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 0, 365, 0, 0, 301, 0,
	0, 0, 408, 0, 352, 334, 0, 0, 0, 350,
	304, 377, 342, 383, 367, 391, 346, 343, 241, 368,
	274, 315, 252, 254, 269, 276, 278, 280, 281, 324,
	325, 337, 356, 369, 370, 371, 273, 262, 351, 263,
	290, 264, 242, 266, 265, 267, 358, 268, 244, 338,
	375, 0, 286, 347, 311, 245, 310, 339, 374, 373,
	253, 399, 405, 406, 0, 0, 411, 0, 0, 0,
	419, 424, 425, 426, 428, 429, 430, 431, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 404,
	284, 238, 239, 444, 270, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 403, 0,
	0, 0, 432, 443, 0, 0, 0, 0, 0, 442,
	336, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 385, 397, 414, 417,
	0, 0, 0, 0, 243, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 412, 0, 0, 320, 321, 322,
	323, 287, 0, 260, 415, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 283, 289, 427, 291,
	259, 335, 285, 394, 298, 0, 420, 0, 421, 0,
	0, 0, 0, 327, 294, 295, 359, 299, 305, 348,
	393, 333, 353, 257, 384, 360, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 236, 0,
	240, 0, 303, 0, 344, 282, 0, 0, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 0, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 0, 332, 0, 237,
	232, 233, 234, 235, 0, 0, 0, 400, 401, 402,
	423, 386, 0, 441, 277, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 445, 437, 0, 0, 0,
	433, 0, 434, 0, 0, 0, 0, 0, 361, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 1218, 0, 0, 0, 255, 187, 435, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 366, 382, 256, 357, 395, 261, 364,
	251, 331, 354, 0, 0, 248, 380, 363, 313, 296,
	297, 247, 0, 349, 275, 288, 272, 329, 0, 379,
	407, 271, 398, 0, 390, 250, 0, 389, 328, 376,
	381, 314, 308, 249, 378, 312, 307, 300, 279, 422,
	292, 340, 306, 341, 293, 318, 317, 319, 0, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 365, 0,
	0, 301, 0, 0, 0, 408, 0, 352, 334, 0,
	0, 0, 350, 304, 377, 342, 383, 367, 391, 1555,
	343, 241, 368, 274, 315, 252, 254, 269, 276, 278,
	280, 281, 324, 325, 337, 356, 369, 370, 371, 273,
	262, 351, 263, 290, 264, 242, 266, 265, 267, 358,
	268, 244, 338, 375, 0, 286, 347, 311, 245, 310,
	339, 374, 373, 253, 399, 405, 406, 0, 0, 411,
	0, 0, 0, 419, 424, 425, 426, 428, 429, 430,
	431, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 404, 284, 238, 239, 444, 270, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 403, 0, 0, 0, 432, 443, 0, 0, 0,
	0, 0, 442, 336, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 385,
	397, 414, 417, 0, 0, 0, 0, 243, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 412, 0, 0,
	320, 321, 322, 323, 287, 0, 260, 415, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 283,
	289, 427, 291, 259, 335, 285, 394, 298, 0, 420,
	0, 421, 0, 0, 0, 0, 327, 294, 295, 359,
	299, 305, 348, 393, 333, 353, 257, 384, 360, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 236, 0, 240, 0, 303, 0, 344, 282, 0,
	0, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 0, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 0,
	332, 0, 237, 232, 233, 234, 235, 0, 0, 0,
	400, 401, 402, 423, 386, 0, 441, 277, 0, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 445, 437,
	0, 0, 0, 433, 0, 434, 0, 0, 0, 0,
	0, 361, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 255,
	187, 435, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 366, 382, 256, 357,
	395, 261, 364, 251, 331, 354, 0, 0, 248, 380,
	363, 313, 296, 297, 247, 0, 349, 275, 288, 272,
	329, 0, 379, 407, 271, 398, 0, 390, 250, 0,
	389, 328, 376, 381, 314, 308, 249, 378, 312, 307,
	300, 279, 422, 292, 340, 306, 341, 293, 318, 317,
	319, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 1243, 0, 0,
	0, 365, 0, 0, 301, 0, 0, 0, 408, 0,
	352, 334, 0, 0, 0, 350, 304, 377, 342, 383,
	367, 391, 346, 343, 241, 368, 274, 315, 252, 254,
	269, 276, 278, 280, 281, 324, 325, 337, 356, 369,
	370, 371, 273, 262, 351, 263, 290, 264, 242, 266,
	265, 267, 358, 268, 244, 338, 375, 0, 286, 347,
	311, 245, 310, 339, 374, 373, 253, 399, 405, 406,
	0, 0, 411, 0, 0, 0, 419, 424, 425, 426,
	428, 429, 430, 431, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 404, 284, 238, 239, 444,
	270, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 403, 0, 0, 0, 432, 443,
	0, 0, 0, 0, 0, 442, 336, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 385, 397, 414, 417, 0, 0, 0, 0,
	243, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	412, 0, 0, 320, 321, 322, 323, 287, 0, 260,
	415, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 283, 289, 427, 291, 259, 335, 285, 394,
	298, 0, 420, 0, 421, 0, 0, 0, 0, 327,
	294, 295, 359, 299, 305, 348, 393, 333, 353, 257,
	384, 360, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 236, 0, 240, 0, 303, 0,
	344, 282, 0, 0, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 0, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 0, 332, 0, 237, 232, 233, 234, 235,
	0, 0, 0, 400, 401, 402, 423, 386, 0, 441,
	277, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 445, 437, 0, 0, 0, 433, 0, 434, 0,
	0, 0, 0, 0, 361, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 255, 187, 435, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 366,
	382, 256, 357, 395, 261, 364, 251, 331, 354, 0,
	0, 248, 380, 363, 313, 296, 297, 247, 0, 349,
	275, 288, 272, 329, 0, 379, 407, 271, 398, 0,
	390, 250, 0, 389, 328, 376, 381, 314, 308, 249,
	378, 312, 307, 300, 279, 422, 292, 340, 306, 341,
	293, 318, 317, 319, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 0, 365, 0, 0, 301, 0, 0,
	0, 408, 0, 352, 334, 0, 0, 0, 350, 304,
	377, 342, 383, 367, 391, 346, 343, 241, 368, 274,
	315, 252, 254, 269, 276, 278, 280, 281, 324, 325,
	337, 356, 369, 370, 371, 273, 262, 351, 263, 290,
	264, 242, 266, 265, 267, 358, 268, 244, 338, 375,
	0, 286, 347, 311, 245, 310, 339, 374, 373, 253,
	399, 405, 406, 0, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 404, 284,
	238, 239, 444, 270, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 403, 0, 0,
	0, 432, 443, 0, 0, 0, 0, 0, 442, 336,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 385, 397, 414, 417, 0,
	0, 0, 0, 243, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 412, 0, 0, 320, 321, 322, 323,
	287, 0, 260, 415, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 283, 289, 427, 291, 259,
	335, 285, 394, 298, 0, 420, 0, 421, 0, 0,
	0, 0, 327, 294, 295, 359, 299, 305, 348, 393,
	333, 353, 257, 384, 360, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 727, 0, 0, 372, 0, 236, 0, 240,
	0, 303, 0, 344, 282, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 0, 332, 0, 237, 232,
	233, 234, 235, 0, 0, 0, 400, 401, 402, 423,
	386, 0, 441, 277, 0, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 445, 437, 0, 0, 0, 433,
	0, 434, 0, 0, 0, 0, 0, 361, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 255, 187, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 366, 382, 256, 357, 395, 261, 364, 251,
	331, 354, 0, 0, 248, 380, 363, 313, 296, 297,
	247, 0, 349, 275, 288, 272, 329, 0, 379, 407,
	271, 398, 0, 390, 250, 0, 389, 328, 376, 381,
	314, 308, 249, 378, 312, 307, 300, 279, 422, 292,
	340, 306, 341, 293, 318, 317, 319, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 365, 0, 0,
	301, 0, 0, 0, 408, 0, 352, 334, 0, 0,
	0, 350, 304, 377, 342, 383, 367, 391, 483, 343,
	241, 368, 274, 315, 252, 254, 269, 276, 278, 280,
	281, 324, 325, 337, 356, 369, 370, 371, 273, 262,
	351, 263, 290, 264, 242, 266, 265, 267, 358, 268,
	244, 338, 375, 0, 286, 347, 311, 245, 310, 339,
	374, 373, 253, 399, 405, 406, 0, 0, 411, 0,
	0, 0, 419, 424, 425, 426, 428, 429, 430, 431,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 404, 284, 238, 239, 444, 270, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	403, 0, 0, 0, 432, 443, 0, 0, 0, 0,
	0, 442, 336, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 385, 397,
	414, 417, 0, 0, 0, 0, 243, 416, 0, 0,
	0, 0, 0, 0, 484, 0, 388, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 412, 0, 0, 320,
	321, 322, 323, 287, 0, 260, 415, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 283, 289,
	427, 291, 259, 335, 285, 394, 298, 0, 420, 0,
	421, 0, 0, 0, 0, 327, 294, 295, 359, 299,
	305, 348, 393, 333, 353, 257, 384, 360, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	236, 0, 240, 0, 303, 0, 344, 282, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 0, 332,
	0, 237, 232, 233, 234, 235, 0, 0, 0, 400,
	401, 402, 423, 386, 0, 441, 277, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 445, 437, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	361, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 255, 187,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 366, 382, 256, 357, 395,
	261, 364, 251, 331, 354, 0, 0, 248, 380, 363,
	313, 296, 297, 247, 0, 349, 275, 288, 272, 329,
	0, 379, 407, 271, 398, 0, 390, 250, 0, 389,
	328, 376, 381, 314, 308, 249, 378, 312, 307, 300,
	279, 422, 292, 340, 306, 341, 293, 318, 317, 319,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 0, 0, 392, 0, 0, 0, 0, 0, 0,
	365, 0, 0, 301, 0, 0, 0, 408, 0, 352,
	334, 0, 0, 0, 350, 304, 377, 342, 383, 367,
	391, 346, 343, 241, 368, 274, 315, 252, 254, 269,
	276, 278, 280, 281, 324, 325, 337, 356, 369, 370,
	371, 273, 262, 351, 263, 290, 264, 242, 266, 265,
	267, 358, 268, 244, 338, 375, 0, 286, 347, 311,
	245, 310, 339, 374, 373, 253, 399, 405, 406, 0,
	0, 411, 0, 0, 0, 419, 424, 425, 426, 428,
	429, 430, 431, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 404, 284, 238, 239, 444, 270,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 403, 0, 0, 0, 432, 443, 0,
	0, 0, 0, 0, 442, 336, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 385, 397, 414, 417, 0, 0, 0, 0, 243,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 412,
	0, 0, 320, 321, 322, 323, 287, 0, 260, 415,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 283, 289, 427, 291, 259, 335, 285, 394, 298,
	0, 420, 0, 421, 0, 0, 0, 0, 327, 294,
	295, 359, 299, 305, 348, 393, 333, 353, 257, 384,
	360, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 236, 0, 240, 0, 303, 0, 344,
	282, 0, 0, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 0, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 0, 0, 332, 237, 232, 233, 234, 235, 0,
	0, 0, 400, 401, 402, 423, 386, 0, 441, 450,
	277, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	445, 437, 0, 0, 0, 0, 433, 0, 434, 0,
	0, 0, 0, 0, 361, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 255, 187, 435, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 366,
	382, 256, 357, 395, 261, 364, 251, 331, 354, 0,
	0, 248, 380, 363, 313, 296, 297, 247, 0, 349,
	275, 288, 272, 329, 0, 379, 407, 271, 398, 0,
	390, 250, 0, 389, 328, 376, 381, 314, 308, 249,
	378, 312, 307, 300, 279, 422, 292, 340, 306, 341,
	293, 318, 317, 319, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 0, 365, 0, 0, 301, 0, 0,
	0, 408, 0, 352, 334, 0, 0, 0, 350, 304,
	377, 342, 383, 367, 391, 346, 343, 241, 368, 274,
	315, 252, 254, 269, 276, 278, 280, 281, 324, 325,
	337, 356, 369, 370, 371, 273, 262, 351, 263, 290,
	264, 242, 266, 265, 267, 358, 268, 244, 338, 375,
	0, 286, 347, 311, 245, 310, 339, 374, 373, 253,
	399, 405, 406, 0, 0, 411, 0, 0, 0, 419,
	424, 425, 426, 428, 429, 430, 431, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 404, 284,
	238, 239, 444, 270, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 403, 0, 0,
	0, 432, 443, 0, 0, 0, 0, 0, 442, 336,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 385, 397, 414, 417, 0,
	0, 0, 0, 243, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 412, 0, 0, 320, 321, 322, 323,
	287, 0, 260, 415, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 283, 289, 427, 291, 259,
	335, 285, 394, 298, 0, 420, 0, 421, 0, 0,
	0, 0, 327, 294, 295, 359, 299, 305, 348, 393,
	333, 353, 257, 384, 360, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 236, 0, 240,
	0, 303, 0, 344, 282, 0, 0, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	0, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 0, 332, 0, 237, 232,
	233, 234, 235, 0, 0, 0, 400, 401, 402, 423,
	386, 0, 441, 277, 0, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 445, 437, 0, 0, 0, 433,
	0, 434, 0, 0, 0, 0, 0, 361, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 255, 187, 435, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 366, 382, 256, 357, 395, 261, 364, 251,
	331, 354, 0, 0, 248, 380, 363, 313, 296, 297,
	247, 0, 349, 275, 288, 272, 329, 0, 379, 407,
	271, 398, 0, 390, 250, 0, 389, 328, 376, 381,
	314, 308, 249, 378, 312, 307, 300, 279, 422, 292,
	340, 306, 341, 293, 318, 317, 319, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 365, 0, 0,
	301, 0, 0, 0, 408, 0, 352, 334, 0, 0,
	0, 350, 304, 377, 342, 383, 367, 391, 346, 343,
	241, 368, 274, 315, 252, 254, 269, 276, 278, 280,
	281, 324, 325, 337, 356, 369, 370, 371, 273, 262,
	351, 263, 290, 264, 242, 266, 265, 267, 358, 268,
	244, 338, 375, 0, 286, 347, 311, 245, 310, 339,
	374, 373, 253, 399, 405, 406, 0, 0, 411, 0,
	0, 0, 419, 424, 425, 426, 428, 429, 430, 431,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 404, 284, 238, 239, 444, 270, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	403, 0, 0, 0, 432, 443, 0, 0, 0, 0,
	0, 442, 336, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 385, 397,
	414, 417, 0, 0, 0, 0, 243, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 412, 0, 0, 320,
	321, 322, 323, 287, 0, 260, 415, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 283, 289,
	427, 291, 259, 335, 285, 394, 298, 0, 420, 0,
	421, 0, 0, 0, 0, 327, 294, 295, 359, 299,
	305, 348, 393, 333, 353, 257, 384, 360, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	236, 0, 240, 0, 303, 0, 344, 282, 0, 0,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 0, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 0, 332,
	0, 237, 232, 233, 234, 235, 0, 0, 0, 400,
	401, 402, 423, 386, 0, 441, 277, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 445, 437, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	361, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 255, 187,
	435, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 366, 1198, 256, 357, 395,
	261, 364, 251, 331, 354, 0, 0, 248, 380, 363,
	313, 296, 297, 247, 0, 349, 275, 288, 272, 329,
	0, 379, 407, 271, 398, 0, 390, 250, 0, 389,
	328, 376, 381, 314, 308, 249, 378, 312, 307, 300,
	279, 422, 292, 340, 306, 341, 293, 318, 317, 319,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 0,
	365, 0, 0, 301, 0, 0, 0, 408, 0, 352,
	334, 0, 0, 0, 350, 304, 377, 342, 383, 367,
	391, 346, 343, 241, 368, 274, 315, 252, 254, 269,
	276, 278, 280, 281, 324, 325, 337, 356, 369, 370,
	371, 273, 262, 351, 263, 290, 264, 242, 266, 265,
	267, 358, 268, 244, 338, 375, 0, 286, 347, 311,
	245, 310, 339, 374, 373, 253, 399, 405, 406, 0,
	0, 411, 0, 0, 0, 419, 424, 425, 426, 428,
	429, 430, 431, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 404, 284, 238, 239, 444, 270,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 403, 0, 0, 0, 432, 443, 0,
	0, 0, 0, 0, 442, 336, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 385, 397, 414, 417, 0, 0, 0, 0, 243,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 412,
	0, 0, 320, 321, 322, 323, 287, 0, 260, 415,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 283, 289, 427, 291, 259, 335, 285, 394, 298,
	0, 420, 0, 421, 0, 0, 0, 0, 327, 294,
	295, 359, 299, 305, 348, 393, 333, 353, 257, 384,
	360, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 236, 0, 240, 0, 303, 0, 344,
	282, 0, 0, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 0, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 0, 332, 0, 237, 232, 233, 234, 235, 0,
	0, 0, 400, 401, 402, 423, 386, 0, 441, 277,
	0, 0, 302, 0, 0, 0, 0, 0, 0, 0,
	445, 437, 0, 0, 0, 433, 0, 434, 0, 0,
	0, 0, 0, 361, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 255, 187, 435, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 366, 1196,
	256, 357, 395, 261, 364, 251, 331, 354, 0, 0,
	248, 380, 363, 313, 296, 297, 247, 0, 349, 275,
	288, 272, 329, 0, 379, 407, 271, 398, 0, 390,
	250, 0, 389, 328, 376, 381, 314, 308, 249, 378,
	312, 307, 300, 279, 422, 292, 340, 306, 341, 293,
	318, 317, 319, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 0, 365, 0, 0, 301, 0, 0, 0,
	408, 0, 352, 334, 0, 0, 0, 350, 304, 377,
	342, 383, 367, 391, 346, 343, 241, 368, 274, 315,
	252, 254, 269, 276, 278, 280, 281, 324, 325, 337,
	356, 369, 370, 371, 273, 262, 351, 263, 290, 264,
	242, 266, 265, 267, 358, 268, 244, 338, 375, 0,
	286, 347, 311, 245, 310, 339, 374, 373, 253, 399,
	405, 406, 0, 0, 411, 0, 0, 0, 419, 424,
	425, 426, 428, 429, 430, 431, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 404, 284, 238,
	239, 444, 270, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 403, 0, 0, 0,
	432, 443, 0, 0, 0, 0, 0, 442, 336, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 385, 397, 414, 417, 0, 0,
	0, 0, 243, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 412, 0, 0, 320, 321, 322, 323, 287,
	0, 260, 415, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 283, 289, 427, 291, 259, 335,
	285, 394, 298, 0, 420, 0, 421, 0, 0, 0,
	0, 327, 294, 295, 359, 299, 305, 348, 393, 333,
	353, 257, 384, 360, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 236, 0, 240, 0,
	303, 0, 344, 282, 0, 0, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 0,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 0, 332, 0, 237, 232, 233,
	234, 235, 0, 0, 0, 400, 401, 402, 423, 386,
	0, 441, 277, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 445, 437, 0, 0, 0, 433, 0,
	434, 0, 0, 0, 0, 0, 361, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 255, 187, 435, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 366, 382, 256, 357, 395, 261, 364, 251, 331,
	354, 0, 0, 248, 380, 363, 313, 296, 297, 247,
	0, 349, 275, 288, 272, 329, 0, 379, 407, 271,
	398, 0, 390, 250, 0, 389, 328, 376, 381, 314,
	308, 249, 378, 312, 307, 300, 279, 422, 292, 340,
	306, 341, 293, 318, 317, 319, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 0, 365, 0, 0, 301,
	0, 0, 0, 408, 0, 352, 334, 0, 0, 0,
	350, 304, 377, 342, 383, 367, 391, 346, 343, 241,
	368, 274, 315, 252, 254, 524, 276, 278, 280, 281,
	324, 325, 337, 356, 369, 370, 371, 273, 262, 351,
	263, 290, 264, 242, 266, 265, 267, 358, 268, 244,
	338, 375, 0, 286, 347, 311, 245, 310, 339, 374,
	373, 253, 399, 405, 406, 0, 0, 411, 0, 0,
	0, 419, 424, 425, 426, 428, 429, 430, 431, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	404, 284, 238, 239, 444, 270, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 403,
	0, 0, 0, 432, 443, 0, 0, 0, 0, 0,
	442, 336, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 385, 397, 414,
	417, 0, 0, 0, 0, 243, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 412, 0, 0, 320, 321,
	322, 323, 287, 0, 260, 415, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 283, 289, 427,
	291, 259, 335, 285, 394, 298, 0, 420, 0, 421,
	0, 719, 0, 720, 327, 294, 295, 359, 299, 305,
	348, 393, 333, 353, 257, 384, 360, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 713, 0, 716, 0, 0, 372, 0, 236,
	0, 240, 0, 303, 0, 344, 282, 0, 0, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 0, 0, 0,
	237, 232, 233, 234, 235, 0, 0, 0, 400, 401,
	402, 423, 386, 0, 441, 164, 51, 156, 132, 0,
	0, 0, 0, 0, 0, 0, 445, 437, 164, 51,
	156, 132, 0, 157, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 158, 0, 157, 0, 732, 0,
	0, 0, 0, 149, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 113, 0, 0, 0, 0, 715, 0,
	709, 0, 697, 0, 0, 0, 113, 0, 101, 712,
	711, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 101, 0, 0, 0, 0, 694, 161, 0, 0,
	702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 708, 0, 0, 0, 707, 0,
	0, 0, 0, 0, 693, 0, 0, 0, 700, 0,
	118, 119, 0, 120, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 119, 698, 120, 121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 502, 509,
	499, 0, 0, 0, 0, 0, 0, 0, 695, 506,
	507, 0, 508, 512, 0, 0, 494, 0, 0, 0,
	772, 0, 717, 771, 0, 0, 517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 155,
	162, 0, 99, 0, 0, 0, 0, 0, 699, 0,
	0, 131, 155, 162, 0, 99, 0, 757, 0, 0,
	154, 148, 147, 0, 0, 733, 0, 57, 0, 521,
	0, 0, 523, 154, 148, 147, 0, 522, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 1592, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 150, 151,
	152, 0, 0, 0, 0, 1632, 1601, 0, 0, 0,
	0, 150, 151, 152, 0, 1633, 1634, 0, 0, 0,
	0, 0, 0, 0, 159, 756, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 1600, 754, 0, 109, 0, 0, 0, 153, 0,
	110, 0, 0, 730, 0, 0, 1607, 109, 0, 0,
	0, 153, 0, 110, 734, 765, 0, 0, 0, 970,
	971, 972, 969, 0, 0, 0, 0, 0, 0, 0,
	495, 497, 496, 0, 0, 0, 0, 0, 761, 0,
	501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 111, 0, 520,
	0, 0, 0, 0, 0, 0, 498, 0, 0, 50,
	111, 0, 0, 1623, 762, 766, 0, 0, 0, 0,
	0, 0, 50, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 751, 0, 749, 753, 769, 1431, 0,
	0, 750, 747, 746, 0, 752, 737, 738, 736, 739,
	740, 741, 742, 0, 767, 0, 768, 0, 52, 0,
	0, 0, 0, 0, 0, 0, 0, 763, 764, 0,
	0, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1591, 1593, 1590, 0, 1587, 0, 0, 0, 0,
	1611, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 1617, 0, 0, 759, 0, 0, 133, 0, 0,
	500, 504, 510, 0, 511, 513, 0, 0, 514, 515,
	516, 1605, 1639, 518, 519, 1606, 1608, 1610, 0, 1612,
	1613, 1614, 1618, 1619, 1620, 1622, 1625, 1626, 1627, 0,
	0, 1630, 0, 0, 0, 0, 1615, 1624, 1616, 0,
	0, 0, 0, 0, 112, 39, 0, 0, 1595, 0,
	0, 49, 5, 0, 0, 116, 117, 112, 39, 0,
	0, 0, 0, 0, 49, 1632, 0, 0, 116, 117,
	1631, 0, 758, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1427, 0, 0, 0, 0, 0, 1424,
	0, 1588, 1589, 1426, 1423, 1425, 1429, 1430, 0, 0,
	0, 1428, 0, 0, 0, 1630, 3287, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 0, 0, 1603, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 1609, 0, 0, 0,
	0, 0, 503, 502, 509, 499, 0, 0, 0, 1636,
	1635, 0, 0, 1623, 506, 507, 0, 508, 512, 0,
	1607, 494, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1632, 1597, 0, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1434, 1435, 1436, 1437, 1438, 1439,
	1432, 1433, 0, 3031, 0, 0, 0, 1623, 0, 0,
	1611, 503, 502, 509, 499, 0, 1638, 0, 0, 1637,
	0, 1617, 0, 506, 507, 0, 508, 512, 0, 0,
	494, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 1605, 1639, 0, 0, 1606, 1608, 1610, 0, 1612,
	1613, 1614, 1618, 1619, 1620, 1622, 1625, 1626, 1627, 0,
	0, 0, 0, 0, 0, 0, 1615, 1624, 1616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 521, 1611, 0, 523, 0, 0, 0,
	0, 522, 0, 0, 0, 1617, 0, 0, 1623, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1605, 1639, 0, 0, 1606,
	1608, 1610, 0, 1612, 1613, 1614, 1618, 1619, 1620, 1622,
	1625, 1626, 1627, 0, 0, 495, 497, 496, 0, 1628,
	1615, 1624, 1616, 0, 0, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 505, 0, 0,
	0, 0, 0, 1603, 520, 0, 0, 0, 0, 0,
	0, 498, 0, 0, 1631, 1611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1617, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1605, 1639, 0, 0,
	1606, 1608, 1610, 1628, 1612, 1613, 1614, 1618, 1619, 1620,
	1622, 1625, 1626, 1627, 495, 497, 496, 0, 0, 0,
	1604, 1615, 1624, 1616, 501, 0, 0, 1603, 0, 0,
	0, 0, 0, 0, 0, 0, 505, 0, 0, 0,
	0, 0, 0, 520, 0, 0, 0, 0, 0, 0,
	498, 1621, 0, 0, 489, 1631, 0, 0, 0, 0,
	1609, 0, 0, 0, 0, 500, 504, 510, 0, 511,
	513, 0, 0, 514, 515, 516, 0, 0, 518, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1604, 0, 0, 0, 0, 0, 0, 1603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 0, 0, 0, 0, 0, 0,
	0, 1609, 0, 0, 500, 504, 510, 0, 511, 513,
	0, 0, 514, 515, 516, 0, 0, 518, 519,
}

var yyPact = [...]int{
	36663, -1000, -1000, -1000, -314, 9911, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34464,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34464,
	-310, 33921, 33921, -1000, -1000, 2122, -1000, 33377, 11042, 34464,
	327, 322, 34464, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 656,
	-1000, 32834, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 549,
	37449, 36093, 7661, -262, -1000, 2917, -90, 2038, 796, 810,
	926, 926, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 36496, 758, 32291, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 36682, 370, 758, 13221, 6, -2,
	2917, 315, 237, -1000, 1181, 36676, 159, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7661, 7661,
	9911, -342, 9911, 7661, 34464, 34464, -1000, -1000, -1000, -1000,
	549, 37449, 7661, 2038, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -2, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3928, -1000,
	1337, -1000, -1000, -1000, -1000, -1000, 2511, 1328, 2033, 497,
	34464, -1000, 1313, 497, -1000, -1000, -1000, 2917, 2917, -1000,
	34464, 34464, 84, 1514, -1000, 337, 365, 300, 1309, -1000,
	-1000, -1000, -1000, -1000, -1000, 417, 2893, -1000, 34464, 34464,
	2553, 34464, -1000, 1917, 472, 36835, 2726, 1131, 676, 2577,
	-1000, -1000, 2506, -1000, 188, 203, 152, 667, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 209, -1000, 2811, -1000, -1000,
	177, -1000, -1000, 236, -1000, -1000, -1000, -5, -1000, -1000,
	-1000, -1000, -1000, -1000, -88, -1000, -1000, 864, 2136, 7661,
	-1000, 1606, -1000, 3245, -1000, -1000, -1000, -1000, 4854, 9341,
	9341, 9341, 9341, -1000, -1000, 2350, 7661, 2504, 2503, 2499,
	-1000, -1000, -1000, -1000, -1000, 1294, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1680, -1000, -1000, -1000, 8781,
	-1000, 2498, 2497, 2496, 2495, 2492, 2488, 2487, 2486, 2482,
	2467, 2465, 2464, 2458, 2457, 2257, 10469, 2456, 2032, 2030,
	2455, 2454, 2450, 2029, 2257, 2257, 2448, 2447, 2446, 2441,
	2440, 2439, 2437, 2426, 2425, 2419, 2418, 2417, 2409, 2406,
	2405, 2400, 2399, 2398, 2393, 2387, 2380, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1095, -1000, 2378, 2709, 2829, 2256, 2870, 2801, 2798, 2794,
	2790, 1770, -1000, -1000, 66, -1000, -124, -1000, -1000, 809,
	-1000, 762, -1000, 34464, 34464, 34464, 815, 542, 542, 542,
	542, 542, 542, 580, 542, -153, 655, 654, 650, 542,
	-1000, -1000, -1000, -1000, -1000, -1000, -112, -1000, 1505, 1502,
	2622, 735, -1000, -1000, -1000, -1000, 1140, 34464, -1000, 2293,
	1431, 1431, 2824, 479, 478, 451, 1431, 367, -1000, 1497,
	1497, 1497, 1497, 1431, 388, 476, 2829, 2829, -4, 1497,
	-17, 1431, 1431, -17, 1431, 1431, 1431, 187, -305, -1000,
	-1000, -1000, 1497, 1497, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2806, 2805, 549, 34464, 124, 34464, 549, 549, 549,
	553, -54, 35550, 35007, 1917, 453, 447, 1160, 1499, -1000,
	1446, 34464, 34464, 1446, 1446, 17616, 17073, -1000, 34464, -1000,
	2829, 2256, -1000, 2202, 2639, 2199, 2256, 549, 549, 549,
	549, 549, 162, 549, 549, 549, 549, 34464, 34464, 31748,
	549, 549, 6534, 6534, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 9911, 1842, 1783, 158, -70, -313, 206,
	-1000, -1000, 34464, 2684, 180, -1000, -1000, -1000, 2263, -1000,
	2292, 2292, 2292, 2292, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2318, 2376, -1000, -1000, 2290, 2290, 2290,
	2263, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2307, 2307, 2315, 2315,
	2307, 34464, 7661, 34464, 2711, 314, 2375, -1000, 34464, 310,
	2829, 2709, 2829, -1000, -1000, 1283, 1768, 2028, -1000, -1000,
	337, 1390, -1000, 909, -1000, -1000, -1000, -1000, 34464, -88,
	323, -1000, -1000, 2007, 2374, -1000, 486, 960, 1155, -1000,
	181, 37360, 27397, 1917, 27397, 34464, -1000, -1000, -1000, -1000,
	-1000, -1000, -7, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 176, -1000, 7661, 7661,
	7661, 7661, 7661, -1000, 514, 8221, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 9341, 9341, 9341, 9341, 9341, 9341, 9341,
	9341, 9341, 9341, 9341, 9341, 2348, 1503, 9341, 9341, 9341,
	9341, 2639, 2673, 1150, 228, -1000, -1000, -1000, -1000, -1000,
	1533, 2136, 7661, 7661, 7661, 34464, -1000, -1000, 36941, 7661,
	7661, 3543, 7661, 2780, 7661, 7661, 7661, 2185, 3386, 34464,
	7661, -1000, 2181, 2178, -1000, -1000, 1663, 7661, -1000, -1000,
	7661, -1000, -1000, 7661, 9341, 7661, -1000, -1000, -1000, 301,
	2780, 2780, 1527, 7661, 7661, 2780, 2780, 2780, 1511, 2780,
	2780, 2780, 2780, 2780, 2780, 2780, 2780, 2177, 2176, 2175,
	2829, -262, 5974, -1000, -270, 2709, 7661, -1000, -1000, 7661,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2026, 2024,
	-326, -44, 787, 759, 772, -1000, 2757, -1000, 2361, 2357,
	1279, 542, -1000, -116, 34464, 1536, 34464, 27397, 34464, 34464,
	1917, 34464, 34464, 542, -156, 542, 542, 542, 34464, -1000,
	2637, 27397, 2626, 553, -1000, 34464, 1140, 2753, 34464, 2883,
	9341, 9341, -1000, 31205, 1497, 1431, 1431, -1000, -1000, 34464,
	-1000, -1000, -1000, 1497, 34464, 1497, 1497, 2883, 1497, -1000,
	-1000, -1000, 1431, 1431, -1000, -1000, -1000, -1000, 1497, 1497,
	-1000, -1000, 2883, 34464, -11, 2883, 2883, -14, -1000, -1000,
	-1000, 34464, 34464, 542, 34464, -1000, 34464, 34464, -1000, -1000,
	34464, 36945, 34464, 30662, 2804, -1000, 27397, 34464, 34464, 25225,
	-1000, 1094, -1000, -68, -1000, -47, -54, 1446, -54, 1446,
	-1000, 480, 506, 15987, 429, 27397, 4294, -1000, -1000, 1446,
	1446, 4294, 4294, 1266, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1139, -1000, 178, 2709, -1000, -1000, -1000, -1000, -1000,
	34464, 34464, 27397, 1917, 34464, 549, 34464, 34464, 34464, 34464,
	-1000, 2351, -1000, 2721, 34464, 34464, 1080, -1000, -1000, 12678,
	1276, 1080, -1000, 1553, -1000, 7661, 9911, -290, 7661, 9911,
	9911, 7661, 9911, -1000, 7661, 140, -1000, -1000, -1000, -1000,
	1763, -1000, 1761, -1000, -1000, -1000, 2020, 2020, -1000, 1756,
	-1000, -1000, -1000, -1000, 1754, -1000, -1000, 1751, -1000, -1000,
	-1000, 2160, 864, -1000, 2015, 2575, -266, -1000, 14884, 34464,
	34464, -1000, -1000, -266, -1000, 14324, 34464, 2709, -1000, 2709,
	34464, -1000, 2822, -1000, 337, 271, -1000, -1000, -1000, -1000,
	-1000, -1000, 1270, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1137, -1000, 34464, -1000, -1000, 181, 27397, 28483,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 201, -1000, -1000,
	171, -1000, 566, 115, 1387, -1000, -1000, 127, 172, 87,
	678, 2136, -1000, 1567, 1567, 1563, -1000, 518, -1000, -1000,
	-1000, -1000, 2350, -1000, -1000, -1000, 1733, 2414, -1000, 1445,
	1445, 1292, 1292, 1292, 1292, 1292, 1467, 1467, -1000, -1000,
	-1000, 4854, 2348, 9341, 9341, 9341, 9341, 512, 512, 3470,
	3294, -1000, 7661, 1544, -1000, 7661, 2111, 2061, 1285, 1261,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2159, 2147, 1946, 2892, 2144, 7661, -1000, -1000, 1385, 1379,
	1376, -1000, 1723, 7101, -1000, -1000, -1000, 2134, 1255, 2133,
	-1000, -1000, -1000, 2132, 1373, 1075, 2127, 1612, 2124, 1135,
	7661, 7661, 7661, 2119, 1372, 1371, 7661, 7661, 7661, 7661,
	2118, 7661, 7661, 7661, 7661, 7661, 7661, 7661, 7661, 29,
	29, 29, -1000, -1000, 1355, -1000, 2136, -1000, 2003, -1000,
	1366, 1114, -1000, 1862, -1000, -1000, -1000, 1974, -1000, -1000,
	784, 755, 799, 34464, 996, 11585, 34464, 34464, -1000, 2293,
	2718, 133, -1000, 1101, -1000, 115, -102, 313, 877, 2551,
	2891, 34464, 542, 34464, 34464, 34464, 2752, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 30119, -1000, 2337, 1352, -1000,
	-1000, 7661, -1000, -1000, 2535, 34464, 34464, 2883, 2883, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 34464, 2883, 2883, 1431,
	1497, -1000, -1000, 1497, -1000, -1000, 1497, -1000, 1245, -1000,
	34464, -1000, -1000, -1000, 2293, 1105, -1000, 1136, 529, 529,
	827, 483, 2869, 13764, -1000, 1426, 1037, 563, 2650, 175,
	-1000, 1426, -207, 1426, 1426, 1426, 1426, 1426, 1426, 1426,
	414, 413, 1426, 1426, 1426, 1426, 1426, 1426, 1426, 1426,
	1426, 1426, 1426, 802, 1426, 1426, 1426, 1426, 1426, -1000,
	1426, 2332, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 466,
	130, 2788, 232, 229, 1101, 2786, 244, 2727, 962, -1000,
	-1000, -1000, -1000, 19795, 19795, 15444, 19795, -1000, 1392, -54,
	-58, -1000, -1000, 1094, 4294, 1094, 4294, -1000, -1000, 561,
	-1000, -1000, 877, -1000, 34464, 34464, -1000, -1000, 2326, 1501,
	-1000, -1000, 10469, -1000, 4294, 4294, -1000, -1000, 20338, 34464,
	-1000, -92, -1000, -84, 2820, 1040, -1000, -1000, 1093, 877,
	2574, 34464, 1040, 1040, -1000, -1000, 11585, 34464, -1000, -1000,
	2883, 6534, -1000, 25225, -1000, -1000, 29569, -1000, 29026, 2883,
	1528, -1000, 9911, 1745, 153, -1000, 192, -320, 151, 1576,
	150, 2136, -1000, -1000, 2116, 2114, 1351, -1000, 1334, 2113,
	1331, 1329, -1000, -21, -1000, 2697, 882, -1000, 2325, -1000,
	1325, 2617, -1000, 1013, -1000, 1500, 1310, -1000, 882, 1305,
	2616, 1013, 2820, -1000, 1220, 81, -1000, -1000, 34464, 2007,
	1303, 28483, 928, -1000, 558, 1219, 1216, -1000, 27397, 161,
	27397, -1000, 27397, -1000, -1000, 325, -1000, 34464, 2708, -1000,
	-1000, -1000, 1974, 1496, -332, -1000, -1000, -1000, -1000, -1000,
	1273, -1000, 512, 512, 3470, 2483, -1000, 9341, -1000, 9341,
	2660, 1525, -1000, 7661, 1686, 3816, 3816, 1262, 18702, 34464,
	-1000, -1000, 7661, 7661, -1000, 2624, -1000, -1000, -1000, -1000,
	7661, 7661, 1654, -1000, 34464, -1000, -1000, -1000, -1000, 18702,
	-1000, 9341, -1000, 7661, 1028, 2619, 1265, 29, 29, 29,
	2555, 2525, 2501, 1236, 29, 2493, 2480, 2433, 2415, 2403,
	2384, 2354, 2283, -1000, 2322, -1000, -1000, 5974, -1000, -21,
	7661, 7661, 7661, 2652, -1000, -1000, 110, -1000, 1494, -1000,
	-1000, -1000, 751, 160, 2112, 982, -1000, -1000, 34464, -1000,
	-1000, -1000, 2110, 969, -1000, -1000, -1000, 12066, 2292, 2292,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2318,
	-1000, -1000, 2290, 2290, 2290, 2263, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2307, 2307, 2315, 2315, 2307,
	-1000, 2293, 2751, -1000, 28, 1426, 508, 27397, 443, -1000,
	34464, 1735, 1493, 2573, 303, 2662, 34464, 253, 34464, 2306,
	2304, 2299, 294, 12066, 34464, 1031, -1000, 1206, 36676, -1000,
	34464, 2136, -1000, 1917, -1000, 1431, -1000, -1000, 2883, 1251,
	-1000, -1000, 2883, 1431, 1431, 1497, 34464, -1000, 2745, 36945,
	-1000, 34464, -1000, -1000, -1000, 617, -1000, 753, 542, 34464,
	1594, 753, 1591, 2296, -1000, -1000, 34464, 34464, 34464, 34464,
	-1000, -1000, 34464, -1000, 34464, 34464, 34464, 34464, -1000, 34464,
	34464, -1000, 34464, 1589, 1587, 2766, -1000, 1426, 1426, 711,
	-1000, -1000, 467, -1000, 1748, 1747, 1746, 1740, 2000, 1998,
	1996, 1426, 1426, 1730, 1994, 27940, 1991, 901, 1725, 1722,
	1721, 1787, 1988, 736, -1000, 1987, 1785, 1767, 1764, 34464,
	2294, 1915, -1000, -1000, 28, 1426, 213, 34464, 1481, 508,
	304, 1750, 16530, 34464, 25225, 25225, 25225, 25225, -1000, 2607,
	2601, -1000, 2590, 2589, 2603, 34464, 25225, 2293, -1000, 27940,
	-1000, -1000, -1000, 2639, 1235, 2797, 839, 7661, -1000, -1000,
	-73, -64, -1000, -1000, -1000, 27397, 1986, 429, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2902, 34464, 34464, 632,
	2104, -1000, 2878, -1000, 948, -1000, -1000, 1200, -1000, 2878,
	1535, -317, 9911, 1462, 1374, -1000, 7661, 9911, 7661, -291,
	215, -294, -1000, -1000, -1000, 1984, -1000, -1000, -1000, 1720,
	-1000, 1716, 36, 69, 1581, -266, 5974, 312, 34464, -266,
	34464, 5974, -1000, 34464, 308, -266, -1000, 34464, 1715, -1000,
	-1000, -1000, 2888, 27397, 1917, 1341, 26854, -1000, 173, -1000,
	200, 469, 1982, -1000, 640, 108, 1975, 1974, -1000, -1000,
	-1000, 9341, -1000, -1000, -1000, -1000, 2136, 7661, 2103, -1000,
	733, 733, 2101, 2098, -1000, 2292, 2292, -1000, 2263, 2290,
	2263, 733, 733, 2097, -1000, 2066, 2225, -1000, 2201, 2187,
	7661, -1000, 2096, 3369, 1108, -123, 29, 29, -1000, -1000,
	-1000, -1000, 29, 29, 29, 29, -1000, 29, 29, 29,
	29, 29, 29, 29, 29, 504, -1000, 36, 2136, 2136,
	-1000, -1000, 2675, -1000, 1974, 1962, -1000, 1961, 1960, 996,
	12066, 648, 11585, 2672, 2742, 311, 1805, -1000, -1000, -1000,
	26311, 436, -1000, -1000, -1000, 541, 202, 1713, 428, -1000,
	34464, 244, 2635, 1480, 1957, 34464, -1000, -1000, -1000, -1000,
	-1000, 2662, -1000, 785, 269, 12128, 2741, 2289, 2288, 12128,
	12128, 12128, 283, 1464, -1000, 497, 946, 1184, 25225, 34464,
	-1000, 24682, 2083, -1000, 877, 2883, -1000, 34464, -1000, 2883,
	2883, 1431, -1000, 311, -1000, 2669, 12066, -1000, 34464, -1000,
	34464, -1000, 34464, 34464, 542, 7661, 2669, 34464, 543, -1000,
	-1000, 863, 320, 556, 556, 935, -1000, 2701, -1000, -1000,
	-1000, 34464, -1000, -1000, -1000, -1000, -1000, -1000, 18702, 18702,
	2779, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1956, 1955, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 34464, 1204, -1000, 1478, 1805, 26311,
	1477, 1446, 1952, 436, 1735, 1474, -1000, 1951, -1000, 887,
	34464, 34464, -1000, 1149, -1000, 1461, 2520, 2571, 2520, -1000,
	-1000, -1000, -1000, 2591, -1000, 2429, -1000, -1000, 1149, -1000,
	-1000, -1000, -1000, -1000, 839, -1000, 2819, 753, 753, 753,
	2077, -1000, -1000, -1000, 928, 2075, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2873, 2868, 25768, 2873, -1000,
	-317, 1506, -1000, 1556, 141, 1532, 34464, -1000, -1000, -1000,
	2074, 2073, -277, 72, 2867, 2866, 2901, -1000, 2070, 924,
	-266, -1000, -1000, 882, -1000, -1000, -1000, -266, -1000, 882,
	-1000, -1000, 1917, -1000, 179, -1000, -1000, -1000, -1000, -1000,
	-1000, 100, -1000, 34464, -1000, 919, 107, -1000, 2136, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7661, -1000, -1000, -1000, 2169,
	-1000, -1000, 7661, 2065, 1950, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2906,
	-1000, 2865, -277, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12066, -1000, 1475, 311, -165, -1000, 1932, 112, -1000,
	-1000, -1000, 1929, 1928, 1703, -1000, -1000, 1753, 1039, 128,
	-1000, -1000, -1000, -1000, -1000, -1000, 1750, 1691, 1460, -339,
	-1000, 2287, -1000, 1426, 1426, 1426, 34464, 2064, 898, -1000,
	-1000, -1000, -1000, 311, 23596, 12128, 2062, 2060, 2058, 507,
	1458, 1453, -1000, 1696, 19795, 25225, 24682, 1148, -1000, 1179,
	-1000, -1000, -1000, 2883, -1000, -1000, 2883, -1000, -1000, -1000,
	34464, 241, 2285, -1000, 2281, 2534, 316, 2279, 2278, 34464,
	2129, -1000, 2669, 34464, 584, 2659, -1000, -1000, -1000, -1000,
	-1000, 372, -1000, 34464, -1000, -1000, 1180, -1000, 18702, -1000,
	-1000, 1187, -1000, 1915, 1909, -1000, 112, 1908, 4294, -1000,
	-1000, 2635, 1897, -1000, 34464, 887, 887, 2906, 34464, 5974,
	-1000, -1000, 7661, 2277, -1000, 7661, -1000, -1000, -1000, -1000,
	-1000, 2271, 2649, -1000, -1000, -1000, -1000, -1000, -1000, 7661,
	7661, -1000, -1000, 539, 9911, -295, 214, -1000, -1000, -1000,
	-279, 1896, -1000, -1000, 2863, 1893, 1815, 34464, -1000, 882,
	882, 877, -1000, -1000, -14, 416, -1000, 2080, -1000, 1990,
	29, -1000, 149, 7661, -279, -163, -1000, -1000, -165, -1000,
	328, -1000, -1000, 321, -1000, -1000, 231, -1000, -1000, 1704,
	481, -1000, -1000, -1000, 1892, 1601, 1853, 23053, 18702, 19245,
	1891, -1000, -175, 12128, -1000, 1182, -1000, 1426, 1426, 2056,
	37390, 176, 37390, 814, 1444, -1000, 1694, -1000, 1693, -1000,
	2883, 1148, 1179, -1000, -1000, 1315, -1000, -1000, -1000, -1000,
	241, -1000, -1000, 1604, 9341, -1000, -1000, 1887, 19245, 644,
	1450, 1448, 674, 2270, -1000, 376, 2898, -1000, -1000, -1000,
	710, 2267, -1000, 1575, 1573, -1000, 34464, -1000, 23053, 23053,
	400, 400, 23053, 23053, 2266, 556, -1000, -1000, 9341, -1000,
	-1000, -1000, -1000, 1426, 1141, -1000, -1000, -1000, -1000, -1000,
	-1000, 1691, -1000, -1000, 2829, -1000, -1000, 2136, 34464, 2136,
	24139, -1000, 2860, 2858, 2136, 864, -1000, -317, 34464, 34464,
	-281, 1688, -1000, 1872, 57, -1000, -1000, 865, -283, 33,
	65, 1447, -1000, -1000, -1000, 2050, -1000, 987, -1000, -1000,
	-1000, 864, -281, 34464, -1000, 375, -1000, -1000, 449, 1870,
	-1000, -1000, 218, -1000, -1000, -1000, -1000, -1000, 99, -1000,
	1429, 1176, -1000, 2263, 7661, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 23596, 1475, 1475, -175, 494, 37299, -1000,
	1037, -1000, -14, 494, 431, 243, -1000, 1682, -1000, -1000,
	2906, -1000, -1000, -1000, 3470, -1000, -1000, -1000, -1000, -1000,
	-1000, 1869, 1867, -1000, -1000, -1000, -1000, -1000, 1645, 2262,
	-78, 2773, 1859, -1000, -1000, 2260, 1174, 1162, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1154, 1129, 23053, -1000, -1000,
	3470, 18702, 1426, -1000, -1000, 1121, 1120, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2258, -1000, -1000, 2857, -1000, 1857,
	552, 58, 65, -1000, 2856, 49, 2855, 2854, 1856, -1000,
	-1000, 980, -268, 26, 22, 11, -1000, -1000, -1000, 7661,
	-1000, 2728, -1000, 166, -1000, 98, -1000, -1000, -1000, 1853,
	1850, -1000, 23053, 2701, 1883, -1000, -1000, -1000, -1000, 330,
	2852, 37390, -1000, 1426, -1000, 330, -1000, 289, -1000, 1367,
	-1000, 1624, -1000, 2829, -1000, -1000, 2048, 7661, 2257, 1426,
	1847, -159, 23053, 2517, 2514, 2485, 2227, 1111, -1000, 18702,
	-1000, -1000, 22510, 34464, 1815, -1000, 2249, 1620, 72, 45,
	2849, -1000, 1815, 2842, 1815, 1815, -1000, 1548, -1000, 20,
	18, 16, -1000, -1000, -1000, -1000, 1849, -1000, -1000, -1000,
	-1000, 238, -1000, -1000, 2701, -1000, 2836, 362, -1000, 18702,
	-1000, -1000, -1000, 1619, -1000, -1000, -1000, 1878, -1000, 34464,
	-1000, 2564, -1000, 155, 1098, 238, 400, 238, 400, 238,
	400, 238, 400, 157, -1000, -1000, -1000, 1097, -1000, -1000,
	2763, 18159, 42, -1000, -1000, -1000, 1823, -1000, 1815, -1000,
	-1000, 980, -1000, -1000, -1000, -1000, -1000, 1426, 1810, 260,
	-1000, -1000, -1000, 21967, 324, 406, 366, -1000, 487, -1000,
	-1000, -1000, 556, -1000, -1000, 2563, 2560, 2887, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34464, -1000,
	34464, -1000, 1087, -1000, -1000, -1000, 1169, -1000, -1000, -1000,
	-1000, -1000, 1617, -1000, 34464, -1000, 34464, 352, 1615, 9341,
	2234, 9341, 2224, 364, 2223, -1000, -1000, 2889, -1000, 2895,
	646, 646, 238, 238, 238, 238, -1000, 835, -1000, 1407,
	-1000, 21424, 34464, -1000, -1000, 1076, 2212, 2807, -1000, 3199,
	34464, 2308, 34464, 2208, 1401, 9341, -1000, -1000, -1000, 1684,
	382, -1000, 34464, 5414, -1000, 997, -1000, -1000, 489, 358,
	-1000, 1056, -1000, 1051, 20881, 1614, 1885, -1000, -1000, -1000,
	-1000, -1000, 2136, 34464, 1038, -1000, 34464, 345, -1000, -1000,
	-1000, 1022, -1000, -1000, -1000, -1000, 489, 2424, -1000, 1613,
	-1000, -1000, 37225, 610, -1000, -1000, 37225, 338, -1000, 484,
	2207, -1000, -1000, 1002, -1000, 34464, 675, 7661, -1000, 338,
	37390, -1000, 7661, 967, -1000, 37390, 944, -1000, -1000,
}

var yyPgo = [...]int{
	0, 147, 2929, 241, 159, 3415, 85, 240, 232, 216,
	239, 3414, 3413, 2717, 2710, 3412, 3411, 3409, 3407, 3406,
	3404, 3402, 3401, 3400, 3398, 3397, 3396, 3395, 3394, 3393,
	3392, 3374, 3373, 3372, 3371, 3370, 3369, 3368, 3366, 3363,
	238, 3362, 3360, 3358, 3355, 3353, 3352, 3351, 3350, 3348,
	3347, 3346, 3319, 3315, 3314, 3313, 3312, 3311, 3309, 3308,
	3306, 3301, 3300, 3299, 3298, 3297, 3295, 3293, 3292, 3291,
	3289, 3287, 204, 3286, 2709, 3285, 3283, 3280, 3279, 3278,
	3276, 3275, 237, 3274, 3273, 3271, 3270, 3269, 3268, 3266,
	3265, 3262, 3261, 3259, 235, 3257, 3253, 3252, 3251, 3250,
	3249, 213, 3248, 155, 209, 3247, 3246, 3244, 3243, 3242,
	3240, 224, 245, 68, 3238, 42, 3236, 211, 3235, 131,
	3232, 127, 3230, 3229, 3227, 3226, 3225, 3224, 3221, 3220,
	3219, 3218, 3217, 3216, 3215, 3214, 3213, 3212, 84, 3210,
	252, 3208, 69, 3207, 3206, 109, 174, 205, 250, 2104,
	248, 242, 172, 157, 87, 3204, 2687, 3203, 166, 220,
	130, 23, 3202, 161, 3196, 133, 45, 46, 246, 125,
	56, 152, 108, 3194, 215, 98, 97, 3193, 3191, 171,
	244, 173, 3190, 110, 3189, 3188, 3183, 3182, 192, 187,
	3180, 3178, 114, 3177, 3175, 92, 3174, 67, 182, 143,
	180, 3173, 96, 105, 113, 106, 168, 3172, 116, 3171,
	3170, 3169, 3168, 163, 3167, 3166, 124, 64, 3165, 3163,
	3161, 66, 3159, 47, 3158, 48, 3157, 62, 3156, 3155,
	3153, 3152, 3151, 3149, 3142, 3140, 3139, 3138, 3137, 70,
	3136, 3135, 16, 17, 19, 3134, 26, 3131, 144, 3130,
	3128, 3127, 83, 77, 3126, 80, 1, 43, 3125, 219,
	255, 90, 136, 3124, 427, 3123, 3122, 3121, 135, 3120,
	2265, 3119, 3117, 3116, 3115, 3114, 123, 3113, 217, 51,
	3112, 111, 142, 3111, 35, 41, 190, 189, 3109, 3107,
	3106, 299, 184, 81, 29, 0, 3105, 132, 3104, 3103,
	3102, 247, 3099, 223, 210, 139, 207, 254, 151, 3095,
	3093, 61, 3092, 137, 44, 55, 121, 9, 20, 225,
	3088, 14, 165, 3085, 202, 3084, 176, 7, 126, 3083,
	3078, 27, 280, 3077, 3075, 3074, 107, 3073, 3072, 164,
	72, 3071, 3070, 3066, 3065, 34, 3061, 31, 25, 3059,
	89, 3058, 228, 3057, 197, 118, 169, 153, 140, 218,
	222, 73, 74, 3056, 1653, 129, 91, 18, 3052, 221,
	3051, 288, 115, 3050, 75, 3049, 236, 366, 199, 3048,
	170, 8, 39, 33, 3046, 10, 3045, 191, 201, 3044,
	3043, 22, 54, 3042, 30, 3041, 3040, 3039, 3038, 5,
	3035, 3034, 3032, 2, 4, 3031, 3, 212, 3028, 3027,
	3026, 3021, 49, 117, 3019, 145, 167, 150, 3018, 86,
	3017, 3016, 3014, 1661, 3013, 243, 3012, 3011, 3010, 3009,
	3008, 3007, 3006, 3005, 3003, 93, 37, 2999, 2998, 2997,
	2996, 71, 128, 2995, 2994, 2993, 2992, 36, 162, 2991,
	21, 2990, 32, 28, 38, 2989, 119, 2987, 12, 175,
	2986, 2985, 15, 2984, 2983, 11, 13, 2982, 2981, 104,
	2980, 82, 24, 141, 94, 2979, 2978, 79, 203, 122,
	2977, 2975, 231, 234, 188, 2974, 146, 226, 251, 2973,
	208, 2971, 2970, 2969, 2967, 2966, 2961, 1017, 2958, 2956,
	230, 65, 88, 101, 2955, 2954, 2952, 78, 138, 103,
	99, 57, 76, 2951, 100, 195, 2950, 177, 2949, 2948,
	95, 2945, 2944, 2941, 2940, 2939, 178, 2937, 2936, 179,
	229, 2935, 2931, 2927, 2921, 227, 214, 2918,
}

//line mysql_sql.y:10333
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 525, 533, 533, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 109, 109, 108, 523, 523, 523, 524,
	524, 105, 126, 125, 128, 128, 127, 127, 124, 124,
	120, 123, 123, 122, 122, 121, 116, 118, 118, 117,
	119, 119, 106, 94, 107, 468, 468, 467, 467, 466,
	466, 420, 420, 465, 465, 465, 464, 464, 464, 463,
	463, 462, 462, 461, 461, 459, 459, 460, 458, 457,
	457, 457, 455, 455, 455, 451, 451, 453, 452, 452,
	454, 446, 446, 449, 449, 447, 447, 447, 447, 450,
	445, 445, 445, 444, 444, 93, 93, 93, 366, 366,
	92, 92, 380, 380, 380, 380, 380, 378, 378, 378,
	378, 378, 378, 377, 377, 376, 376, 381, 381, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 83,
	83, 83, 83, 83, 88, 88, 88, 530, 530, 529,
	529, 531, 531, 531, 531, 532, 532, 86, 86, 86,
	87, 375, 375, 375, 84, 85, 85, 365, 365, 370,
	370, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 374, 374, 374, 372, 372, 371,
	371, 373, 373, 77, 77, 77, 80, 79, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 78, 78, 78,
	78, 78, 78, 73, 73, 73, 73, 73, 72, 72,
	74, 74, 362, 362, 361, 89, 89, 90, 527, 527,
	526, 528, 528, 528, 528, 91, 97, 97, 97, 97,
	97, 97, 97, 96, 96, 99, 99, 98, 100, 82,
	82, 82, 82, 82, 82, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 493, 493, 493, 495, 495, 299,
	300, 534, 302, 298, 298, 298, 489, 489, 490, 491,
	492, 492, 492, 95, 11, 11, 11, 11, 11, 11,
	11, 71, 76, 247, 247, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 235, 235, 235,
	230, 230, 230, 230, 231, 231, 232, 232, 233, 233,
	233, 233, 234, 234, 292, 292, 252, 252, 252, 254,
	254, 253, 251, 249, 249, 249, 249, 249, 249, 250,
	250, 250, 255, 255, 69, 75, 75, 75, 506, 506,
	70, 517, 517, 423, 423, 313, 313, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 428, 429, 309, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 47, 50, 46, 46, 46,
	351, 351, 45, 535, 535, 287, 287, 58, 57, 49,
	59, 60, 61, 62, 63, 64, 44, 56, 56, 56,
	56, 56, 56, 56, 56, 67, 67, 440, 440, 537,
	537, 537, 65, 66, 422, 422, 422, 55, 54, 53,
	52, 51, 51, 43, 43, 42, 42, 48, 132, 133,
	306, 306, 306, 308, 308, 304, 536, 536, 394, 394,
	307, 307, 41, 41, 41, 41, 68, 305, 305, 286,
	303, 303, 303, 12, 12, 10, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 23,
	24, 26, 359, 359, 356, 25, 18, 17, 17, 20,
	16, 16, 19, 21, 22, 22, 9, 9, 9, 9,
	13, 13, 14, 153, 153, 203, 203, 501, 501, 497,
	497, 498, 498, 498, 499, 499, 500, 500, 101, 434,
	434, 434, 434, 434, 434, 8, 175, 175, 433, 433,
	433, 433, 433, 433, 363, 363, 478, 478, 478, 479,
	174, 174, 169, 169, 435, 435, 328, 480, 480, 443,
	443, 442, 442, 441, 441, 172, 172, 173, 173, 156,
	156, 112, 112, 448, 448, 448, 448, 456, 456, 419,
	419, 239, 239, 279, 279, 280, 280, 146, 146, 147,
	147, 147, 147, 147, 147, 486, 486, 488, 488, 487,
	171, 171, 167, 167, 168, 168, 168, 166, 166, 165,
	164, 164, 163, 161, 161, 161, 162, 162, 162, 179,
	179, 149, 149, 149, 148, 148, 148, 148, 148, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 150, 150, 494, 494, 494, 424, 424, 424, 431,
	431, 261, 261, 262, 262, 260, 260, 151, 151, 152,
	152, 152, 152, 259, 259, 258, 154, 154, 160, 159,
	159, 155, 155, 155, 155, 269, 269, 268, 268, 268,
	268, 104, 110, 110, 111, 178, 178, 267, 266, 266,
	266, 177, 177, 176, 176, 170, 170, 158, 158, 158,
	158, 265, 157, 263, 522, 522, 521, 521, 520, 518,
	518, 518, 519, 519, 519, 519, 470, 470, 470, 470,
	470, 293, 293, 293, 297, 297, 296, 296, 296, 296,
	296, 301, 7, 7, 7, 7, 7, 7, 30, 30,
	30, 30, 30, 30, 30, 30, 30, 36, 187, 188,
	37, 189, 189, 190, 190, 191, 191, 192, 193, 194,
	194, 194, 194, 35, 180, 180, 181, 181, 182, 182,
	183, 184, 184, 184, 186, 185, 34, 34, 27, 139,
	139, 140, 140, 140, 140, 142, 142, 236, 236, 236,
	141, 141, 143, 143, 143, 502, 505, 503, 503, 507,
	507, 507, 508, 508, 508, 508, 509, 509, 28, 129,
	134, 512, 512, 512, 511, 511, 513, 513, 514, 514,
	283, 283, 284, 284, 137, 138, 138, 136, 131, 145,
	145, 145, 145, 145, 130, 135, 504, 510, 510, 510,
	360, 360, 357, 358, 358, 355, 354, 354, 354, 516,
	516, 515, 515, 515, 294, 294, 29, 350, 350, 352,
	353, 353, 353, 344, 344, 344, 344, 33, 348, 348,
	349, 349, 349, 349, 349, 345, 345, 347, 347, 343,
	343, 343, 343, 343, 32, 144, 144, 342, 342, 339,
	339, 337, 337, 338, 338, 336, 336, 336, 340, 340,
	39, 39, 39, 341, 341, 31, 31, 31, 114, 113,
	113, 113, 113, 282, 282, 281, 281, 115, 38, 215,
	215, 408, 408, 408, 408, 408, 426, 426, 426, 409,
	409, 409, 410, 410, 410, 411, 411, 411, 411, 411,
	425, 425, 427, 427, 427, 382, 382, 383, 383, 383,
	386, 386, 400, 400, 401, 401, 399, 399, 406, 406,
	405, 405, 404, 404, 403, 403, 402, 402, 402, 402,
	397, 397, 396, 396, 384, 384, 384, 384, 384, 385,
	385, 385, 395, 395, 398, 398, 223, 223, 224, 224,
	257, 257, 221, 221, 222, 222, 222, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 476, 476, 477, 226, 226, 237, 237, 237,
	237, 237, 237, 225, 225, 227, 227, 204, 204, 202,
	202, 195, 195, 196, 196, 197, 197, 197, 201, 201,
	200, 200, 200, 200, 198, 198, 199, 199, 199, 199,
	199, 199, 368, 368, 473, 473, 474, 474, 469, 469,
	469, 472, 472, 472, 472, 472, 475, 475, 475, 471,
	471, 205, 277, 277, 277, 295, 295, 295, 295, 276,
	276, 276, 220, 220, 219, 219, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 367, 367,
	310, 310, 311, 311, 246, 245, 245, 245, 245, 245,
	243, 244, 242, 242, 242, 242, 242, 241, 241, 240,
	240, 240, 346, 346, 238, 238, 229, 229, 229, 228,
	228, 228, 407, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 275, 275,
	275, 320, 320, 325, 325, 485, 485, 484, 206, 206,
	206, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	216, 216, 216, 391, 391, 391, 391, 392, 392, 392,
	392, 393, 393, 393, 389, 389, 390, 390, 329, 330,
	330, 432, 432, 387, 387, 388, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 439, 439, 439, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 496, 496, 496, 481, 481, 481,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 273,
	273, 273, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 331, 331, 332,
	332, 436, 436, 436, 436, 436, 436, 437, 437, 438,
	438, 438, 438, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 318, 270, 270, 270, 333, 326, 326, 327,
	327, 321, 321, 321, 321, 321, 321, 321, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	322, 322, 324, 324, 335, 335, 335, 334, 334, 334,
	334, 334, 334, 334, 218, 218, 218, 218, 315, 315,
	315, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 208, 208, 208, 208, 212, 212, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 213, 213, 213, 213, 213, 211, 211,
	211, 211, 211, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 102,
	103, 103, 210, 278, 278, 412, 412, 415, 415, 413,
	413, 414, 416, 416, 416, 417, 417, 417, 418, 418,
	418, 421, 421, 285, 285, 285, 291, 291, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 4, 5, 5, 6,
	5, 5, 3, 2, 2, 1, 3, 4, 3, 7,
	5, 8, 2, 2, 1, 3, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 2, 1,
	3, 2, 1, 2, 2, 1, 2, 3, 2, 3,
	3, 3, 1, 1, 7, 7, 8, 8, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 5, 3,
	3, 2, 4, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	4, 6, 7, 4, 4, 7, 8, 3, 3, 3,
	0, 2, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 4, 3, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 1, 3, 1, 4, 6, 6, 4, 4,
	4, 4, 3, 6, 3, 5, 1, 1, 2, 2,
	11, 8, 9, 1, 3, 2, 4, 0, 2, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 4, 2,
	1, 5, 4, 4, 2, 5, 1, 3, 2, 1,
	5, 4, 4, 2, 0, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 1, 3, 4, 0, 1, 0,
	1, 1, 3, 1, 1, 0, 4, 1, 3, 2,
	1, 0, 8, 0, 4, 7, 4, 0, 2, 0,
	2, 0, 2, 0, 4, 1, 3, 1, 1, 5,
	3, 4, 6, 4, 5, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 0,
	2, 3, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 7, 1, 1,
	7, 1, 3, 0, 1, 1, 3, 1, 3, 0,
	1, 1, 1, 12, 1, 3, 0, 1, 1, 3,
	1, 1, 2, 4, 1, 1, 9, 8, 7, 1,
	2, 2, 3, 3, 3, 0, 4, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 4, 1, 1, 3,
	4, 3, 0, 1, 1, 1, 0, 2, 7, 8,
	8, 0, 3, 3, 0, 2, 0, 3, 0, 5,
	1, 3, 0, 3, 3, 0, 2, 9, 6, 0,
	2, 2, 3, 3, 4, 4, 1, 0, 2, 2,
	1, 3, 2, 1, 3, 2, 1, 3, 2, 0,
	1, 3, 4, 3, 1, 1, 4, 1, 3, 1,
	1, 1, 1, 0, 1, 1, 1, 11, 0, 2,
	3, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 6, 0, 4, 1, 1, 0,
	3, 0, 1, 1, 2, 4, 4, 4, 0, 1,
	9, 10, 8, 0, 2, 11, 9, 11, 2, 2,
	8, 4, 5, 1, 3, 0, 3, 5, 10, 0,
	2, 0, 3, 2, 4, 3, 0, 2, 1, 0,
	2, 3, 0, 2, 3, 0, 3, 2, 4, 3,
	0, 1, 0, 1, 1, 0, 6, 0, 3, 5,
	0, 4, 0, 3, 1, 3, 4, 5, 0, 3,
	1, 3, 2, 3, 1, 2, 0, 4, 6, 5,
	0, 2, 0, 2, 4, 5, 4, 5, 1, 5,
	6, 5, 0, 3, 0, 1, 0, 4, 1, 3,
	3, 3, 0, 1, 1, 3, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	5, 4, 1, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 1, 1, 1,
	7, 9, 7, 9, 2, 1, 7, 9, 7, 9,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 3, 3, 2, 2, 1, 5,
	6, 4, 1, 1, 1, 5, 4, 1, 1, 2,
	0, 1, 1, 2, 5, 0, 1, 1, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	2, 2, 0, 3, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 3,
	5, 2, 2, 2, 2, 1, 1, 2, 5, 6,
	6, 6, 6, 1, 1, 1, 1, 1, 4, 4,
	4, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 2, 0, 1, 6, 8, 6, 6, 5,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 4, 4, 4, 3, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 2, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -525, -533, -2, -5, 589, -1, -4, -103, -77,
	-7, -105, -106, -8, -101, -9, -10, -12, -81, -96,
	-98, -100, -99, -40, -11, -95, -72, -73, -83, -89,
	-92, -93, -94, -107, -102, -104, -146, -108, -109, 582,
	-78, -79, -80, -30, -29, -28, -27, -129, -134, 588,
	436, 13, 485, -13, -14, -486, -15, 254, -298, -299,
	-300, -302, -534, -41, -42, -43, -51, -52, -53, -54,
	-55, -65, -66, -67, -44, -45, -46, -49, -47, -58,
	-57, -59, -60, -61, -62, -63, -64, -48, -132, -133,
	-68, -50, -70, -69, -75, -71, -76, -131, -136, 229,
	-74, 75, -84, -85, -86, -87, -88, -90, -91, 361,
	367, 424, 581, 60, -147, -149, 592, 593, 157, 158,
	160, 161, -31, -32, -33, -34, -35, -36, -38, -37,
	-39, 225, 15, 521, -16, -19, -17, -20, -18, -25,
	-26, -24, -21, -23, -130, -22, -135, 249, 248, 37,
	315, 316, 317, 365, 247, 226, 14, 30, 41, 341,
	-148, 81, 227, -150, 12, 596, -6, -3, -2, -116,
	-120, -124, -127, -128, -125, -126, -4, -103, 115, 239,
	583, -295, 357, 584, 586, 585, 84, 92, -288, -290,
	361, 367, 581, 593, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 488, 568, 569, 570, 571, 516, 567, 339, 340,
	518, 266, 290, 392, 296, 303, 157, 176, 170, 198,
	190, 165, 270, 308, 271, 91, 160, 471, 105, 448,
	421, 163, 285, 287, 289, 292, 291, 293, 295, 272,
	342, 186, 181, 284, 268, 179, 273, 39, 274, 203,
	275, 276, 523, 444, 338, 450, 300, 419, 180, 445,
	288, 447, 205, 209, 462, 463, 174, 175, 452, 465,
	202, 246, 42, 520, 258, 466, 207, 201, 197, 474,
	304, 302, 200, 173, 196, 269, 64, 211, 210, 212,
	415, 416, 417, 418, 277, 278, 355, 461, 193, 182,
	343, 166, 22, 469, 253, 449, 368, 279, 297, 305,
	206, 208, 260, 265, 522, 423, 264, 301, 467, 178,
	257, 286, 252, 470, 167, 370, 280, 161, 294, 464,
	473, 63, 383, 172, 164, 243, 158, 262, 267, 281,
	282, 283, 514, 307, 306, 298, 194, 259, 199, 184,
	171, 195, 159, 261, 472, 384, 579, 341, 402, 192,
	189, 263, 236, 468, 451, 162, 406, 385, 187, 309,
	575, 576, 577, 356, 337, 310, 311, 185, 250, 442,
	443, 314, 412, 330, 386, 422, 393, 387, 218, 318,
	454, 456, 204, 578, 319, 320, 321, 446, 322, 323,
	324, 325, 360, 55, 57, 93, 95, 594, -373, -371,
	-295, 581, 367, 361, 341, 593, -189, -295, 595, -156,
	38, -202, -295, -156, -74, -14, -13, -148, -149, -202,
	233, -303, 23, 419, -82, 420, 229, 81, -295, -9,
	-94, -8, -101, -72, -146, 424, -301, -295, 315, 315,
	-301, 233, -295, 264, 400, -423, 239, -377, -350, 265,
	-376, -352, -379, -353, 31, 225, 227, 226, 261, 15,
	365, 235, 13, 12, 366, 247, 24, 25, 27, 14,
	367, 369, 28, 370, 373, 374, 375, 41, 378, 379,
	254, 84, 92, 87, 272, -188, -295, -327, -321, 112,
	255, -323, -316, -317, -319, -465, -459, -314, 81, 139,
	140, 147, 113, -318, -407, 35, 115, 530, 567, 486,
	-271, -272, -273, -274, -275, -295, -460, -458, 87, 96,
	99, 102, 103, 101, 100, 151, 183, 98, 88, 152,
	-149, 84, -481, 539, -289, 560, 568, 569, 570, 571,
	559, 60, -430, -438, 232, -436, 150, 188, 250, 184,
	13, 145, 412, 185, 536, 556, 488, 540, 563, 532,
	533, 534, 527, 528, 529, 531, 541, 543, 555, -439,
	551, 561, 562, 549, 564, 565, 566, 86, 85, 554,
	553, 542, 537, 538, 544, 526, 535, 545, 546, 552,
	557, 558, 349, 105, 350, 351, 478, 342, 352, 239,
	419, 69, 353, 354, 355, 356, 357, 485, 358, 70,
	359, 348, 254, 402, 360, 187, 204, 490, 489, 491,
	482, 479, 477, 480, 481, 483, 484, 547, 548, 550,
	-110, -111, 573, -165, -166, -264, 11, 6, 7, 8,
	9, -523, 421, 522, 87, 162, 159, -364, 162, 111,
	167, 166, -364, 318, 260, 362, -139, 236, 339, 402,
	322, 93, 264, -344, -342, -341, -425, 312, 308, 234,
	-140, 244, 243, 106, 478, 232, 108, 376, 303, 55,
	57, -497, -498, 222, 223, 224, -488, 511, -487, -295,
	351, 95, 26, 233, 362, 260, 456, 454, 455, 457,
	458, 459, 460, -56, -440, -422, 451, 450, -307, 443,
	449, 441, 453, 444, 340, 324, 323, 225, 590, 512,
	-285, 386, 422, 475, 476, 363, 423, 462, 464, 445,
	105, 191, 188, 236, 233, 339, 478, 402, 93, 322,
	-497, 159, 462, 464, 264, 400, 40, -370, 412, -369,
	-371, 463, 474, 85, 86, 461, -285, 105, 442, 442,
	-166, -264, -165, -147, -149, -104, -486, 234, 339, 402,
	264, 235, 233, 515, 236, 478, 232, 315, 362, 260,
	322, 93, -424, -494, 31, -431, 219, 220, 221, 32,
	33, -1, 119, 596, -321, -321, -6, 599, -6, -321,
	-295, -295, 154, -208, -212, -209, -211, -210, -214, -213,
	188, 189, 150, 192, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 30, 204, 250, 184, 185, 186,
	187, 205, 170, 190, 519, 213, 171, 214, 172, 215,
	173, 216, 174, 175, 217, 176, 179, 180, 181, 182,
	178, 153, 81, 153, 87, -172, 256, -202, 153, -172,
	-166, -165, -166, -202, -276, -295, 421, 122, -82, -82,
	420, -489, -490, -491, -493, 229, 420, 419, 153, 272,
	16, -301, -301, 79, -202, -352, 264, -377, -350, 35,
	78, 154, 237, 154, 78, 81, 363, 339, 402, 364,
	478, 233, 376, 236, 264, 377, 339, 402, 233, 236,
	478, 264, 339, 233, 236, 402, 264, 377, 441, 442,
	236, 26, 368, 371, 372, 442, -444, 474, 154, 111,
	108, 109, 110, -321, 129, -334, 122, 123, 124, 125,
	126, 127, 128, 136, 135, 146, 139, 140, 141, 142,
	143, 144, 145, 137, 138, 132, 112, 130, 134, 131,
	114, -149, -321, -327, 60, -319, -319, -319, -319, -407,
	-325, -321, 81, 81, 81, 153, 100, 87, -321, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, -437, 81, 81, -331, -332, 81, 81, -314, -276,
	81, 87, 87, 81, 81, 81, 87, -332, -332, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	-166, 154, 81, -112, 38, -168, 21, -150, -149, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 96, 594,
	218, 467, 521, 165, 166, 167, -187, -295, -189, -180,
	-295, 236, -140, 108, -339, 239, -339, -339, -339, -339,
	-339, 235, -339, 515, 514, 233, 233, 233, -339, 485,
	122, 122, 58, -499, 169, 154, -488, -171, 81, -306,
	130, 134, -306, 23, 262, 262, 262, -306, 302, -535,
	-536, 16, 132, -304, -536, -304, -304, -306, -537, 235,
	452, 42, 263, 262, -167, -168, -167, 446, 442, -394,
	447, 448, -308, -536, -307, -306, -306, -307, -306, -306,
	-306, 233, 236, 478, 322, 591, -535, -535, 30, 30,
	-423, -202, -423, 512, -286, -295, -423, -423, -423, -500,
	238, -530, -529, 465, -532, 467, 159, -371, 159, -371,
	-352, 264, 264, 154, 122, 23, -372, 122, 133, -371,
	-371, -372, -372, -225, 40, -294, 150, -295, 87, -225,
	40, -527, -526, -202, -167, -150, -149, 82, 82, 82,
	-423, -423, -423, -423, -423, -425, -423, -423, -423, -423,
	-301, -180, -189, 239, -423, -423, -151, -152, 141, -321,
	-295, -151, -3, -118, -117, 116, 117, 119, 584, 357,
	583, 587, 581, -371, 40, -418, 384, 383, -412, -414,
	81, -413, 81, -413, -413, -413, 81, 81, -415, 81,
	-415, -415, -412, -416, 81, -416, -417, 81, -417, -416,
	-295, -326, -327, -295, 38, -433, 60, -146, 81, 30,
	81, -295, -434, 60, -146, 81, 30, -167, -112, -168,
	153, 96, 87, -82, 82, 154, -492, 102, 103, -495,
	202, 194, -295, -97, 87, -7, -8, -9, -10, -40,
	-72, -146, -461, -459, 81, 31, 411, 78, 16, -378,
	233, 478, 362, 260, 236, 339, -376, -359, -356, -354,
	-294, -352, -355, -354, -381, -276, 442, -113, 426, 425,
	314, -321, -321, -321, -321, -321, 101, 112, 337, 102,
	103, -316, -335, 31, 310, 311, -317, -317, -317, -317,
	-317, -317, -317, -317, -317, -317, -317, -317, -324, -333,
	-407, 81, 132, 130, 134, 131, 114, -319, -319, -317,
	-317, 82, 154, -485, -484, 116, -321, -321, -321, -295,
	-482, -483, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 353, 348, 354, 352, 342, 360, 355,
	356, 187, 509, 510, 503, 504, 505, 506, 507, 508,
	-326, -326, -321, -482, -326, -270, 32, 31, -327, -327,
	-327, 82, -321, -496, 335, 334, 336, -169, -295, -326,
	82, 82, 82, 96, -327, -327, -326, -317, -326, -483,
	-270, -270, -270, 141, -327, -327, -270, -270, -270, -270,
	141, -270, -270, -270, -270, -270, -270, -270, -270, 82,
	82, 82, -167, -111, -442, -441, -321, 40, 574, -112,
	-321, -164, -163, -321, -524, 87, 87, 597, 468, 469,
	163, 166, 165, 34, 81, 81, 153, -339, 485, -202,
	112, -502, -295, -360, -357, -354, -295, -295, -350, -295,
	-295, -339, 515, -339, -339, -339, -202, -236, 52, 53,
	54, -354, -141, 55, 56, -500, -487, 34, -170, -295,
	-260, 17, -319, -319, -354, 264, -535, -306, -306, -287,
	-286, -308, -303, -308, -308, -260, -536, -306, -306, -308,
	-304, -260, -295, 442, -260, -260, -394, -305, -295, -305,
	-339, -286, -287, -287, -202, -247, -248, 230, 346, 347,
	228, 226, 11, 227, -256, 303, -340, 486, -231, -232,
	76, 41, -234, 388, 381, 266, 270, 91, 271, 421,
	272, 235, 274, 275, 276, 291, 293, 246, 277, 278,
	279, 412, 280, 158, 292, 281, 282, 283, 364, -226,
	6, 325, 40, 50, 51, 435, 434, 524, 521, 267,
	-502, -502, 30, 30, -360, -295, -295, -159, -154, -158,
	-155, -160, -263, -265, -157, 81, -202, -149, -295, 154,
	466, 468, 469, -530, -372, -530, -372, 31, 411, -375,
	411, 31, -350, -369, 462, 464, -365, 87, 412, -355,
	-374, 78, 150, -441, -372, -372, -374, -374, 149, 154,
	-528, 467, 468, 222, -112, -204, -202, -502, -359, -350,
	-295, -423, -204, -204, -295, -295, 81, 35, -295, -295,
	-259, 154, -258, 16, -296, -295, 34, 87, 153, -259,
	-119, -117, 118, -321, -6, 583, -321, -6, -6, -321,
	-6, -321, -421, 385, 96, 96, -278, 87, -278, 96,
	96, 96, 82, 87, -363, 78, -435, -328, -480, 573,
	-174, 82, -169, -478, -479, -169, -173, -295, -435, -174,
	82, -478, -112, -112, -295, 23, -82, -490, 153, 154,
	-170, -378, -358, -355, -380, 141, -295, -366, 154, 521,
	600, 85, 237, -516, -515, 403, 82, 154, -445, 238,
	485, 87, 597, 419, 218, 101, 337, 102, 103, -407,
	-327, -324, -319, -319, -317, -317, -322, 251, -322, 111,
	-321, -320, -484, 118, -321, 34, 34, 154, 79, 153,
	82, 82, 16, 16, 82, -321, 82, 82, 82, 82,
	16, 16, -321, 82, 153, 82, 82, 82, 82, 79,
	82, 154, 82, 154, -327, -321, -327, 82, 82, 82,
	-321, -321, -321, -327, 82, -321, -321, -321, -321, -321,
	-321, -321, -321, -388, 437, -388, -388, 154, 82, 87,
	154, 22, 154, -161, 36, 37, -282, -281, 87, 164,
	167, 167, 166, -188, -190, -191, -192, -193, -194, 132,
	155, 156, -181, -182, -183, -184, -208, -276, 189, 192,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 250, 184, 185, 186, 187, 205, 170, 190, 171,
	172, 173, 174, 175, 176, 179, 180, 181, 182, 178,
	-295, -202, -171, 35, -505, 389, -517, 154, 40, -515,
	478, -137, 314, -343, 79, -144, 16, -202, -339, -202,
	-202, -202, -215, 34, 16, -153, -203, -295, 81, 82,
	154, -321, -351, 79, -295, -287, -260, -260, -202, -295,
	-260, -260, -306, -308, -308, -304, 153, -286, -171, 154,
	-201, -292, -198, -200, 241, -311, -199, 244, -474, 242,
	240, 106, 245, 299, 107, 235, -292, -292, 241, -235,
	237, 34, -292, -250, 235, 299, 242, 20, -249, 235,
	107, -295, 241, 245, 240, -291, 122, -285, 149, 237,
	42, 364, -291, 525, -291, -291, -291, -291, -291, -291,
	-291, 273, 273, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, 159, -291, -291, -291, -291, -291,
	-291, 81, 268, 269, -506, 389, 30, 345, 345, -517,
	30, -145, 339, 30, -266, -267, -268, -269, 67, 71,
	73, 68, 69, 70, 74, 30, 154, -293, -297, 34,
	-295, 87, -293, -149, -154, -159, -293, 81, -529, -531,
	470, 467, 473, -374, -374, 237, 81, 122, -374, -374,
	40, -294, -526, 474, 468, -179, 23, 154, 78, -204,
	-181, -189, -260, -152, -154, -295, 87, -295, 141, -260,
	119, -6, 117, -123, -122, -121, 120, 581, 587, 119,
	119, 119, 82, 82, 82, 154, 82, 82, 82, 154,
	82, 154, -448, 447, 39, 154, 81, 82, 154, 60,
	154, 122, 82, 154, 82, 60, -179, 153, 421, -295,
	-459, 82, -380, 154, 237, 153, 153, -356, 367, -294,
	-358, 20, 521, -276, 38, -282, 122, 597, 82, -322,
	-322, 111, -319, -316, 82, 119, -321, 117, -206, -208,
	383, 384, -206, -207, -213, 150, 188, 250, 187, 186,
	184, 383, 384, -225, -295, -321, -321, 82, -321, -321,
	16, -295, -225, -317, -321, -166, 82, 82, -387, -388,
	-387, -387, 82, 82, 82, 82, -387, 82, 82, 82,
	82, 82, 82, 82, 82, 81, -441, -448, -321, -321,
	-163, -162, 43, 598, 154, 122, 167, 375, 82, 154,
	-276, 82, 154, -208, -171, 34, -508, 449, 391, 401,
	-291, -313, -312, 341, 41, -428, 412, 397, 398, -357,
	264, -295, -514, 94, 122, 78, 329, 330, 331, 332,
	-337, -338, -336, -340, -502, 81, -223, 521, -202, 81,
	81, 81, -408, 319, -208, -202, -153, -295, 16, 154,
	-501, 153, -1, -295, -350, -306, -260, -536, -260, -306,
	-306, -308, -295, 34, -248, -205, -276, -199, -473, -474,
	-339, -295, 107, -473, 107, 81, -205, -276, -276, -251,
	-305, -276, -295, -295, -295, -254, -253, -276, -295, -295,
	-295, 107, 107, -230, 40, 47, 48, 49, -291, -291,
	191, -233, 40, 411, 413, 414, 96, 96, 96, 96,
	87, 87, 87, -291, -291, 96, 87, -297, 87, -475,
	166, 44, 45, 96, 96, 96, 96, 40, 87, -237,
	40, 284, 288, 285, 286, 287, 87, 96, 40, 96,
	40, 96, 40, -295, 81, -476, -477, 87, -508, -291,
	345, -371, 122, -313, -513, 314, -138, 91, 31, -175,
	230, 227, -502, -362, -361, -276, -158, -158, -158, -158,
	67, 67, 67, 72, 67, 72, 67, -268, -362, -160,
	-171, -297, 82, -522, -521, -520, -518, 75, 238, 76,
	-326, 467, 471, 472, -358, -309, 87, -365, 14, -202,
	-202, -427, 294, 295, 82, -262, 18, 153, -262, 115,
	-6, -119, -121, -321, -6, -321, 583, 357, 584, 87,
	96, 96, -456, 432, 427, 429, 107, -328, -443, -442,
	60, -146, -169, -435, -479, -441, -295, 60, -146, -435,
	-295, 96, 16, -355, -350, 141, 141, -295, 368, -366,
	87, 390, 87, 233, 598, 87, -282, -316, -321, 82,
	-216, 175, 174, -216, 82, 82, -413, -413, -412, -415,
	-412, -216, -216, 82, 82, 23, 82, 82, 82, -321,
	82, 82, 154, -432, 487, -387, -387, -387, -387, -387,
	-387, -387, -387, -387, -387, -387, -387, -387, -387, -330,
	-329, 256, -456, 44, 45, -281, 87, 87, 87, -192,
	-208, 231, -183, 40, 34, -146, -509, 91, -503, 87,
	-295, -510, 91, 392, 152, 343, 40, 393, 394, 409,
	338, 96, 96, 399, -504, -295, -145, -512, 51, 122,
	87, -202, -336, -285, 149, 275, 322, -195, -196, -197,
	-205, -198, -200, 34, 81, 81, -195, -195, -195, -409,
	321, 20, 96, 140, -172, 79, 153, -154, -203, -295,
	141, 82, -260, -295, -260, -260, -306, -146, -252, 44,
	46, -208, -471, -295, -469, -471, -295, -469, -469, -339,
	-321, -252, -205, 237, 30, 227, -255, 327, 328, -367,
	300, 112, -367, 154, -161, -295, -225, -225, 30, 87,
	87, -204, 82, 154, 122, -509, -503, 122, -372, 87,
	-510, -514, 122, 87, 154, -175, -175, -260, 154, 122,
	-177, -176, 78, 79, -178, 78, -176, 67, 67, -260,
	-520, -519, 23, -474, -474, -474, 82, 82, -261, 19,
	20, 141, -261, 119, 117, 119, 119, -295, 82, 82,
	-419, 575, -452, -454, 427, 20, 20, 14, 82, -435,
	-435, -350, -366, 412, -202, 154, 598, -321, 82, -321,
	82, 87, -166, 20, -419, -185, -208, -314, -146, -142,
	521, 87, -507, 403, 87, 87, 96, 40, 96, 152,
	395, -429, -138, -511, 91, 122, 597, 81, -291, -291,
	-291, -295, 82, 154, -146, -224, -257, -295, 87, -195,
	82, 82, 82, -410, 255, 96, 140, 96, 140, 96,
	-293, -154, -295, -260, -501, 153, -260, -260, -276, -220,
	-219, -217, 101, 112, 40, 381, -218, 91, 149, 289,
	292, 291, 267, 290, -246, -310, 78, 387, 327, 328,
	-340, 575, 516, 240, 106, 107, 369, -311, 81, 81,
	79, 309, 81, 81, -471, 82, -252, -276, 40, -255,
	40, 300, -253, 149, -225, 82, -477, 87, -507, 87,
	-374, -512, 87, -502, -166, -361, -441, -321, 81, -321,
	81, 67, 11, 18, -321, -327, 239, -6, 584, 357,
	-239, 576, 87, 20, 87, -450, 87, -362, -115, -446,
	-394, 272, 82, 82, -387, -390, -389, -393, 433, 301,
	440, -327, -239, 520, -142, -143, 59, 474, 20, 521,
	342, 40, 96, 40, 396, 87, 102, 103, -283, -284,
	87, -345, -347, -276, 81, -225, -227, -294, 150, 87,
	-223, -197, 82, 154, -291, -291, 82, -221, -222, -256,
	-340, -114, -113, -221, -411, 158, 96, 140, 96, 96,
	-260, -260, -217, 101, -317, 87, -227, -228, 40, 288,
	284, 122, 122, -229, 40, 268, 269, -238, 81, 299,
	14, 191, 81, 107, 107, -202, -345, -345, -472, 329,
	330, 331, 333, 332, -472, -345, -345, 81, -368, -367,
	-317, -291, 149, -511, -167, -170, -470, -295, 240, 20,
	20, -295, -295, -279, 577, 96, 87, 429, -420, 578,
	-455, 432, -449, -447, 427, 428, 429, 430, 122, 82,
	-392, 114, 395, 399, -315, -318, 96, 99, 183, 152,
	-279, -186, -295, 299, 87, 390, 87, 342, 598, 154,
	122, 82, 154, -412, -321, -257, -314, -314, -223, -382,
	256, 154, -256, -285, -115, -382, -426, 166, 320, 521,
	96, 140, 96, -166, 87, 87, 96, 81, -436, 30,
	87, -346, 81, 82, 82, 82, 82, -345, -225, -291,
	82, 82, 154, 81, 20, 87, -457, 238, -453, -454,
	431, -447, 20, 429, 20, 20, 87, -391, -392, 399,
	-315, -318, 573, 438, 438, 438, 34, 368, 412, -284,
	87, -348, -347, -161, 82, -383, 308, 20, -256, -291,
	-383, 320, 96, 140, 96, -167, 82, -321, -331, -291,
	82, -241, -240, 517, -345, -348, 79, -348, 79, -348,
	79, -348, 79, 82, -225, -295, 240, -280, -295, -450,
	-464, 81, 96, -452, -451, -453, 20, -450, 20, -450,
	-450, 111, 439, 439, 439, 87, -349, 246, 91, 521,
	327, 328, -161, 20, -384, 301, 302, -385, -398, 304,
	-225, 96, 82, -295, -245, -243, -244, 78, 445, 297,
	298, 82, -472, -472, -472, -472, -246, 82, 154, -468,
	30, 82, -463, -462, -277, -458, -295, 432, 433, 87,
	-450, -391, -291, 87, 326, -276, 81, -396, 305, 81,
	-394, 81, -394, 107, 330, -367, -244, 78, -243, 78,
	15, 14, -348, -348, -348, -348, -295, -467, -466, -465,
	82, 154, 153, 96, -295, -381, -386, 306, 96, -317,
	81, -317, 81, -395, 303, 81, -242, 294, 295, 30,
	166, -242, 154, 122, -462, -295, 82, -400, 81, 20,
	82, -381, 82, -381, 81, 122, -317, 101, 40, 296,
	-466, 40, -321, 153, -401, -399, 256, -385, 82, 82,
	82, -381, 96, 82, -295, 82, 154, -295, -397, 307,
	82, -399, -402, 60, 96, -406, -403, 81, -256, 258,
	132, -406, -256, -405, -404, 306, 259, 81, 82, 154,
	-295, 255, 81, -327, -404, -403, -327, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 822, 823, 824, 825, 826, 827, 0,
	0, 0, 0, 596, 597, 0, 565, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 354, 355, 356, 357, 358, 359, 360, 0,
	288, 284, 209, 210, 211, 212, 213, 295, 296, 433,
	0, 0, 0, 0, 677, -2, 56, 0, 277, 0,
	268, 268, 828, 829, 830, 831, 832, 833, 834, 835,
	836, -2, 609, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 343, 344, 345,
	339, 340, 342, 341, -2, 0, 609, 0, 0, 0,
	697, 0, 0, 714, 736, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1185, 1186, 1187, 1188,
	-2, 1677, 1655, 1820, 1832, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762,
	1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 0, 261,
	259, 1655, 1677, 1737, 1770, 1820, 0, 841, 0, 655,
	0, 660, 1139, 655, 289, 598, 599, 697, 697, 563,
	0, 325, 0, 1668, 329, 0, 0, 0, 560, 319,
	320, 321, 322, 323, 324, 0, 0, 821, 0, 0,
	315, 0, 283, 1728, 0, 0, 0, 0, 0, 0,
	153, 947, 155, 949, 159, 166, 0, 0, 171, 172,
	175, 176, 177, 178, 179, 0, 183, 0, 185, 188,
	0, 190, 191, 0, 194, 195, 196, 0, 206, 207,
	208, 950, 951, 952, -2, 84, 839, 1589, 1479, 0,
	1486, 1487, 1498, 1509, 1265, 1266, 1267, 1268, 0, 0,
	0, 0, 0, 1275, 1276, 0, 1293, 1836, 1875, 0,
	1283, 1284, 1285, 1286, 1287, 93, 105, 106, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 0, 1539, 1540, 1541, 1452,
	1252, 1185, 0, 1845, 0, 1865, 1870, 1871, 1872, 1873,
	1864, 0, 0, 1437, 0, 1427, 0, 0, -2, -2,
	0, 0, 1795, -2, 1842, 1861, 1869, 1846, 1868, 1838,
	1839, 1840, 1833, 1834, 1835, 1837, 1847, 1849, 1860, 0,
	1856, 1866, 1867, 0, 0, 0, 0, 107, 108, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1443, -2, 1445, 1446, 1448, -2, 1450, 1451,
	-2, 1454, 1455, 1456, -2, -2, 1459, 1460, 1461, 1462,
	1463, 1464, 1467, -2, -2, -2, -2, 1439, 1440, 1441,
	1442, 1431, 1432, 1433, 1434, 1435, 1436, -2, -2, -2,
	697, 772, 0, -2, 0, 0, 0, 719, 722, 725,
	728, 0, 57, 58, 0, 278, 279, 267, 269, 0,
	273, 0, 266, 0, 0, 0, 0, 979, 979, 979,
	979, 979, 979, 0, 979, 0, 0, 0, 0, 979,
	869, 954, 955, 956, 977, 978, 0, 1031, 0, 0,
	0, 614, 610, 611, 612, 613, 685, 0, 687, 690,
	540, 540, 487, 0, 0, 0, 540, 0, 501, 493,
	0, 0, 0, 540, 0, 0, 692, 692, 0, 543,
	550, 540, 540, -2, 540, 540, 540, 0, 0, 507,
	508, 509, 493, 493, 512, 513, 514, 525, 526, 551,
	1613, 0, 0, 433, 0, 433, 0, 433, 433, 433,
	616, 1765, 1675, 1742, 1728, 0, 0, 234, 1795, 239,
	0, 1676, 1691, 0, 0, 1709, 0, -2, 0, 305,
	692, 0, 698, 0, 697, 0, 0, 433, 433, 433,
	433, 433, 1030, 433, 433, 433, 433, 0, 0, 0,
	433, 433, 0, 0, 737, 738, 733, 734, 735, 739,
	740, 5, 6, 19, 0, 0, 0, 0, 0, 0,
	63, 62, 0, 1590, 1608, 1544, 1545, 1546, 1595, 1548,
	1599, 1599, 1599, 1599, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 0, 0, 1588, 1568, 1597, 1597, 1597,
	1595, 1592, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1602, 1602, 1605, 1605,
	1602, 0, 1477, 0, 0, 0, 0, 659, 0, 0,
	692, -2, 0, 564, 326, 1189, 0, 0, 330, 331,
	0, 0, 346, 0, 349, 334, 335, 336, 0, 133,
	0, 317, 318, 0, 0, 285, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 163, 160, 167, 170,
	180, 187, 0, 199, 201, 204, 161, 168, 173, 174,
	181, 202, 162, 164, 165, 169, 203, 205, 182, 186,
	200, 184, 189, 192, 193, 198, 0, 134, 0, 0,
	0, 0, 0, 1485, 0, 0, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 1479, 0, 0, 1271, 1272, 1273, 1274, 1277,
	0, 1294, 0, 0, 0, 0, 1538, 1542, 0, 1477,
	1477, 0, 1477, 1473, 0, 0, 0, 0, 0, 0,
	1477, 1413, 0, 0, 1415, 1428, 0, 0, 1417, 1418,
	0, 1421, 1422, 1477, 0, 1477, 1426, 1409, 1410, 0,
	1473, 1473, 1473, 0, 0, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 0, 0, 0,
	692, 0, 0, 680, 0, 661, 0, 716, 718, 0,
	720, 721, 723, 724, 726, 727, 729, 730, 59, 0,
	0, 0, 0, 271, 0, 276, 0, 838, 0, 0,
	854, 979, 870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 979, 0, 979, 979, 979, 0, -2,
	0, 0, 0, 616, 615, 0, 686, 0, 0, 745,
	0, 0, 486, 0, 493, 540, 540, 499, 500, 495,
	494, 546, 547, 543, 0, 543, 543, 745, 0, 519,
	520, 521, 540, 540, 527, 693, 528, 529, 543, 0,
	548, 549, 745, 0, 0, 745, 745, 0, 537, 538,
	539, 0, 0, 979, 0, 556, 495, 495, 1614, 1615,
	0, 988, 0, 0, 0, 559, 0, 0, 0, 0,
	617, 214, 217, 0, 220, 0, 1765, 0, 1765, 0,
	227, 0, 0, 0, 0, 0, 0, 257, 258, 0,
	0, 0, 0, 248, 251, 1133, 1134, 944, 945, 252,
	253, 297, 298, 0, 661, 715, 717, 711, 712, 713,
	0, 0, 0, 0, 0, 433, 0, 0, 0, 0,
	592, 0, 594, 0, 0, 0, 753, 747, 749, 816,
	93, 753, 8, 80, 77, 0, 19, 0, 0, 19,
	19, 0, 19, 262, 0, 1611, 1609, 1610, 1547, 1596,
	0, 1573, 0, 1574, 1575, 1576, 0, 0, 1569, 0,
	1570, 1571, 1572, 1563, 0, 1564, 1565, 0, 1566, 1567,
	260, 0, 1478, 842, 0, 634, 647, 629, 0, 636,
	0, 1140, 618, 647, 620, 0, 636, 661, 683, 661,
	0, 327, 0, 332, 0, 0, 348, 350, 351, 352,
	337, 338, 561, 313, 314, 306, 307, 308, 309, 310,
	311, 312, 316, 103, 0, 286, 287, 0, 0, 0,
	147, 148, 149, 150, 151, 152, 154, 138, 582, 584,
	936, 948, 0, 939, 0, 157, 197, 130, 0, 0,
	0, 1480, 1481, 1482, 1483, 1484, 1488, 0, 1490, 1492,
	1494, 1496, 0, 1514, -2, -2, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1499, 1512,
	1513, 0, 0, 0, 0, 0, 0, 1510, 1510, 1505,
	0, 1269, 0, 1291, 1295, 0, 0, 0, 0, 94,
	1472, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	0, 0, 1479, 0, 0, 0, 1474, 1475, 0, 0,
	0, 1368, 0, 0, 1374, 1375, 1376, 0, 642, 0,
	1438, 1414, 1429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 773, 0, 651, 653, 654, 0, 681,
	694, 699, 700, 703, 55, 60, 53, 1005, 280, 281,
	0, 0, 275, 0, -2, 856, 0, 0, 871, 690,
	0, 0, 885, 431, 930, 0, 0, 0, 946, 969,
	975, 0, 979, 0, 0, 0, 1009, 872, 877, 878,
	879, 873, 874, 880, 881, 0, 688, 0, 0, 785,
	485, 0, 541, 542, 490, 1728, 495, 745, 745, 502,
	496, 503, 545, 504, 505, 506, 0, 745, 745, 540,
	543, 530, 544, 543, 533, 534, 0, 552, 557, 553,
	0, 555, 510, 511, 690, 362, 363, 404, 404, 404,
	387, 404, 0, 0, 375, 1616, 0, 0, 0, 0,
	384, 1616, 0, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
	0, 0, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
	1616, 1616, 1616, 0, 1616, 1616, 1616, 1616, 1616, 1119,
	1616, 0, 989, 394, 395, 396, 397, 402, 403, 0,
	428, 0, 0, 0, 431, 0, 919, 758, 0, 759,
	760, 756, 787, 811, 811, 0, 811, 791, 1139, 0,
	0, 225, 226, 215, 0, 216, 0, 228, 229, 0,
	231, 232, 233, 240, 1675, 1742, 235, 237, 0, 0,
	241, 254, 255, 256, 0, 0, 246, 247, 0, 0,
	300, 301, 303, 0, 709, 579, 1137, 580, 581, 585,
	0, 0, 588, 589, 590, 591, 856, 0, 924, 925,
	745, 0, 754, 0, 750, 817, 0, 819, 0, 745,
	0, 78, 19, 0, 71, 68, 0, 0, 0, 0,
	0, 1591, 1543, 1612, 0, 0, 0, 1593, 0, 0,
	0, 0, 61, 663, 625, 0, 628, 644, 0, 648,
	0, 0, 640, 633, 637, 0, 0, 657, 619, 0,
	0, 624, 709, 684, 1190, 0, 333, 347, 0, 0,
	0, 0, 141, 933, 0, 142, 146, 136, 0, 0,
	0, 938, 0, 935, 940, 0, 156, 0, 0, 131,
	132, 999, 1005, 0, 0, 1489, 1491, 1493, 1495, 1497,
	0, 1500, 1510, 1510, 1506, 0, 1501, 0, 1503, 0,
	1480, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	1358, 1359, 0, 0, 1363, 0, 1365, 1366, 1367, 1369,
	0, 0, 0, 1373, 0, 1412, 1430, 1416, 1419, 0,
	1423, 0, 1425, 0, 697, 0, 0, 1333, 1333, 1333,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 1288, 0, 1289, 1290, 0, 774, 663,
	0, 0, 0, 706, 704, 705, 0, 1003, 0, 282,
	270, 272, 0, 0, 0, 844, 845, 847, 0, 850,
	851, 852, 0, 857, 858, 860, 861, 0, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1660,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	855, 690, 0, 980, 892, 1616, 435, 0, 0, 932,
	0, 908, 0, 0, 0, -2, 0, 1076, 0, 0,
	0, 0, 1011, 0, 0, 0, 603, 607, 23, 691,
	0, 746, 488, 0, 489, 540, 497, 498, 745, 1139,
	522, 523, 745, 540, 540, 543, 0, 554, 0, 988,
	365, 0, 1148, 1149, 405, 0, 1155, 1164, 979, 1222,
	0, 1164, 0, 0, 1166, 1167, 0, 0, 0, 0,
	388, 389, 0, 374, 0, 0, 0, 0, 373, 0,
	0, 415, 0, 0, 0, 0, 1617, 1616, 1616, 0,
	382, 383, 0, 386, 0, 0, 0, 0, 0, 0,
	0, 1616, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 0, 0, 0, 0, 0,
	0, 0, 1125, 1126, 892, 1616, 0, 0, 0, 435,
	906, 915, 0, 0, 0, 0, 0, 0, 778, 0,
	0, 777, 0, 0, 0, 0, 0, 690, 812, 0,
	814, 815, 789, -2, 0, 758, 794, 1477, 218, 219,
	0, 0, 224, 242, 244, 0, 0, 0, 243, 245,
	249, 250, 299, 302, 304, 679, 0, 0, 0, 1032,
	0, 595, 743, 748, 755, 818, 820, 94, 751, 743,
	0, 81, 19, 80, 72, 73, 0, 19, 0, 0,
	0, 0, 1601, 1600, 1586, 0, 1587, 1598, 1603, 0,
	1606, 0, 667, 0, 0, 647, 649, 0, 0, 647,
	0, 0, 656, 0, 0, 647, 682, 0, 0, 562,
	104, 353, 0, 0, 0, 0, 0, 583, 0, 937,
	138, 0, 0, 158, 0, 0, 0, 1005, 1476, 1502,
	1504, 0, 1511, 1507, 1270, 1278, 1292, 0, 0, 1298,
	1310, 1310, 0, 0, 1301, 1599, 1599, 1304, 1595, 1597,
	1595, 1310, 1310, 0, 95, 0, 0, 1364, 0, 0,
	0, 643, 0, 0, 0, 1331, 1333, 1333, 1339, 1334,
	1340, 1341, 1333, 1333, 1333, 1333, 1346, 1333, 1333, 1333,
	1333, 1333, 1333, 1333, 1333, 1329, 652, 667, 695, 696,
	701, 702, 0, 54, 1005, 0, 274, 0, 0, 849,
	0, 0, 0, 862, 0, 0, 896, 893, 894, 895,
	0, 927, 436, 437, 438, 439, 0, 0, 0, 931,
	0, 919, 901, 0, 0, 0, 970, 971, 972, 973,
	974, -2, 983, 0, 0, 1141, 0, 0, 0, 1141,
	1141, 1141, 1019, 0, 1010, 655, 0, -2, 0, 0,
	605, 0, 0, 786, 491, 745, 515, 0, 531, 745,
	745, 540, 558, 0, 364, 406, 0, 1154, 1179, 1165,
	1179, 1223, 1179, 1179, 979, 0, 406, 0, 0, 376,
	412, 0, 0, 0, 0, 372, 409, 703, 413, 414,
	416, 0, 418, 378, 390, 391, 392, 393, 0, 0,
	0, 385, 398, 399, 400, 401, 1087, 1088, 1089, 1092,
	1093, 1094, 1095, 0, 0, 1098, 1099, 1100, 1101, 1102,
	1176, 1177, 1178, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1127, 1128, 1129, 1130, 1131, 1132, 1111, 1112, 1113, 1114,
	1115, 1116, 1117, 1118, 0, 0, 1122, 0, 896, 0,
	0, 0, 0, 927, 908, 0, 918, 0, 920, 921,
	0, 0, 626, 745, 292, 0, 781, 775, 0, 764,
	779, 780, 767, 0, 769, 0, 765, 766, 745, 757,
	788, 813, 790, 793, 795, 796, 802, 0, 0, 0,
	0, 221, 222, 223, 230, 0, 455, 236, 710, 1138,
	586, 587, 1033, 1034, 593, 741, 0, 0, 741, 76,
	79, 0, 74, 0, 0, 0, 0, 66, 64, 1594,
	0, 0, 669, 118, 0, 0, 0, 645, 0, 650,
	647, 632, 641, 631, 638, 639, 658, 647, 623, 622,
	1191, 328, 0, 934, 138, 143, 144, 145, 139, 137,
	941, 0, 943, 0, 1001, 0, 0, 1508, 1297, 1279,
	1299, 1311, 1312, 1300, 1280, 1281, 1302, 1303, 1305, 1306,
	1307, 1308, 1309, 1282, 1360, 0, 1362, 1370, 1371, 0,
	1420, 1424, 0, 0, 0, 1337, 1338, 1342, 1343, 1344,
	1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 697,
	1330, 0, 669, 707, 708, 1004, 1006, 837, 840, 846,
	848, 0, 859, 0, 0, 875, 868, 0, 0, 887,
	888, 898, 0, 0, 0, 441, 442, 0, 0, 0,
	454, 450, 451, 452, 432, 926, 915, 904, 0, 0,
	914, 0, 984, 1616, 1616, 1616, 0, 0, 1142, 1143,
	1145, 1146, 1147, 0, 0, 1141, 0, 0, 0, 1022,
	0, 0, 1013, 0, 811, 0, 0, 745, 604, 607,
	608, 689, 492, 745, 535, 532, 745, 361, 377, 407,
	0, -2, 0, 1180, 0, 1168, 1180, 0, 0, 1179,
	0, 366, 406, 0, 0, 0, 419, 422, 423, 420,
	1218, 0, 421, 0, 411, 417, 1090, 1091, 0, 1096,
	1097, 0, 1121, 0, 0, 424, 0, 0, 0, 425,
	430, 901, 0, 916, 0, 922, 923, 697, 0, 0,
	761, 782, 0, 0, 762, 0, 763, 768, 770, 291,
	797, 0, 0, 799, 800, 801, 792, 238, 731, 0,
	0, 752, 732, 0, 19, 0, 0, 69, 1604, 1607,
	671, 0, 668, 119, 0, 0, 0, 0, 646, 630,
	621, 140, 135, 942, 121, 0, 1002, 0, 1372, 0,
	1333, 1332, 1326, 0, 671, 0, 865, 863, 875, 867,
	882, 897, 886, 0, 928, 929, 0, 443, 444, 0,
	447, 453, 899, 900, 0, 0, 912, 0, 0, 0,
	0, 976, 1076, 0, 992, 0, 1078, 1616, 1616, 0,
	-2, 0, -2, 1025, 0, 1020, 0, 1012, 0, 1015,
	745, 745, -2, 601, 606, 0, 516, 536, 408, 1181,
	-2, 1194, 1196, 0, 989, 1199, 1200, 0, 0, 0,
	0, 0, 0, 1244, 1208, 0, 0, 1212, 1213, 1214,
	0, 0, 1217, 0, 1526, 1527, 0, 1221, 0, 0,
	0, 0, 0, 0, 0, 1162, 367, 368, 0, 370,
	371, 1219, 410, 1616, 380, 1120, 1123, 1124, 429, 426,
	427, 904, 907, 627, 692, 293, 294, 783, 0, 776,
	806, 803, 0, 0, 742, 744, 70, 75, 0, 0,
	673, 0, 670, 0, 664, 666, 129, 635, 91, 112,
	0, 0, 1361, 1411, 1336, 0, 1327, 0, 1321, 1322,
	1323, 1328, 673, 0, 866, 0, 883, 884, 0, 0,
	440, 445, 0, 448, 449, 905, 902, 903, 0, 910,
	0, 0, 965, 1595, 0, 985, 986, 1135, 1136, 987,
	990, 1144, 1077, 0, 0, 0, 1076, 1035, -2, 1084,
	0, 996, 121, 1035, 1016, 0, 1023, 0, 1021, 1014,
	697, 602, 1195, 1197, 1198, 1201, 1202, 1203, 1249, 1250,
	1251, 0, 0, 1206, 1246, 1247, 1248, 1207, 0, 0,
	0, 0, 0, 1524, 1525, 1242, 0, 0, 1169, 1171,
	1172, 1173, 1174, 1175, 1170, 0, 0, 0, 1161, 1163,
	369, 0, 1616, 917, 290, 0, 0, 807, 809, 804,
	805, 65, 67, 82, 0, 672, 120, 0, 83, 0,
	109, 0, 122, 123, 0, 0, 0, 0, 0, 1335,
	1324, 0, 0, 0, 0, 0, 1528, 1529, 1530, 0,
	662, 0, 864, 0, 889, 0, 891, 446, 909, 912,
	0, 958, 0, 703, 0, 1079, 1080, 1081, 991, 1037,
	0, 988, 1086, 1616, 998, 1037, 1008, 0, 1018, 0,
	1027, 0, 1024, 692, 1204, 1205, 0, 0, 1427, 1616,
	0, 1237, 0, 958, 958, 958, 958, 0, 379, 0,
	784, 798, 0, 0, 0, 92, 96, 0, 118, 115,
	0, 124, 0, 0, 0, 0, 1000, 0, 1313, 0,
	0, 0, 1317, 1318, 1319, 1320, 0, 876, 890, 911,
	913, 957, 966, 967, 703, 995, 0, 1074, 1085, 0,
	997, 1017, 1026, 0, 1029, 600, 1245, 0, 1211, 0,
	1216, 1225, 1238, 0, 0, 1150, 0, 1152, 0, 1156,
	0, 1158, 0, 0, 381, 808, 810, 0, 675, 665,
	85, 0, 0, 113, 114, 116, 0, 125, 0, 127,
	128, 0, 1314, 1315, 1316, 853, 959, 1616, 0, 0,
	963, 964, 968, 0, 1062, 0, 0, 1068, 0, 1075,
	1090, 1028, 1209, 1215, 1224, 1226, 1227, 0, 1239, 1240,
	1241, 1243, 958, 958, 958, 958, 1160, 674, 0, 1007,
	0, 97, 0, 99, 101, 102, 1182, 110, 111, 117,
	126, 1325, 0, 961, 0, 1038, 0, 1040, 0, 0,
	0, 0, 0, 1072, 0, 1210, 1228, 0, 1229, 0,
	0, 0, 1151, 1153, 1157, 1159, 676, 86, 87, 0,
	98, 0, 0, 960, 962, 0, 1042, 0, 1063, 0,
	0, 0, 0, 0, 0, 0, 1230, 1232, 1233, 0,
	0, 1231, 0, 0, 100, 1183, 1039, 1036, 0, 1074,
	1064, 0, 1066, 0, 0, 0, 0, 1234, 1236, 1235,
	88, 89, 90, 0, 0, 1044, 0, 1060, 1065, 1067,
	1069, 0, 1073, 1071, 1184, 1043, 0, 1056, 1041, 0,
	1070, 1045, -2, 0, 1061, 1046, -2, 0, 1054, 0,
	0, 1047, 1055, 0, 1050, 0, 0, 0, 1049, 0,
	-2, 1057, 0, 0, 1051, -2, 0, 1059, 1058,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 599, 596,
	123, 122, 124, 3, 600, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 597, 135, 598, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:750
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:757
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:763
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:771
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:777
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:781
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:796
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:800
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:806
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:811
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:815
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:847
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:855
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:863
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:873
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:893
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:899
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:906
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:914
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:920
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:929
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:955
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:963
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:973
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:991
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:998
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1021
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1027
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1031
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1037
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1046
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1056
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1060
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1066
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1079
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1085
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1106
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1119
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1126
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1130
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1136
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1140
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1146
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1153
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1161
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1165
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1179
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1183
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1187
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1200
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1206
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1215
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1226
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1230
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1236
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1240
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1246
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1250
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1256
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1280
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1299
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1303
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1307
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1312
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1316
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1323
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1331
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1338
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1343
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1350
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1359
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1383
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1387
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1393
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1399
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1417
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1434
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1457
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1461
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1465
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1470
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1480
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1493
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1504
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1517
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1521
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1531
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1557
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1569
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1584
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1593
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1597
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1620
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1624
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1630
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1637
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1646
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1650
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1656
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1660
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1664
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1668
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1865
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1872
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1889
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1893
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1899
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1906
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1914
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1918
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1922
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1926
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1932
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1936
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1942
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1949
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1956
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1965
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2019
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2026
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2032
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2036
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2059
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2068
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2076
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2084
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2107
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2130
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2137
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2144
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2152
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2159
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2166
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2175
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2179
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2183
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2189
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2193
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2199
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2203
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2209
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2213
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2230
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2235
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2239
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2243
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2247
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2251
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2255
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2259
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2263
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2267
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2273
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2277
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2308
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2328
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2338
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2345
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2356
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2367
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2371
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2377
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2387
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2393
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2397
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2403
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2409
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2413
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2417
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2421
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2439
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2445
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2449
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2488
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2534
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2575
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2579
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2585
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2591
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2596
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2597
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2598
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2603
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2619
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2630
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2639
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2643
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2649
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2656
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2665
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2675
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2684
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2694
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2704
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2713
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2721
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2725
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2729
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2733
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2737
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2746
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2752
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2756
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2760
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2764
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2768
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2772
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2776
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2780
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2785
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2816
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2820
		{
			yyVAL.str = string("COLUMN")
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2825
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2831
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2837
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2846
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2850
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2856
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2863
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2878
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2885
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2892
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2899
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2937
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2941
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2960
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2976
		{
			assignments := []*tree.VarAssignmentExpr{
				{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2989
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2995
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3006
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3026
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3030
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3039
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3059
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3063
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3067
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3075
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3083
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3087
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3091
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3095
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3103
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3121
		{
			yyVAL.item = nil
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3126
		{
			yyVAL.item = nil
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3166
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3172
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3180
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3184
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3188
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3201
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3207
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3212
		{
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3216
		{
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3221
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3255
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3261
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3267
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3273
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3279
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3285
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3298
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3302
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3310
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3314
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3322
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3328
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3335
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3345
		{
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3347
		{
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3356
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3366
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3375
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3379
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3383
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3389
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3395
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3401
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3407
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3416
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3426
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3438
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3442
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3448
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3460
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3474
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3487
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3492
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3496
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3500
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3505
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3509
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3515
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3528
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3532
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3538
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3543
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3547
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3551
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3557
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3563
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3567
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3573
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3579
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3583
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3587
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3593
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3597
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3621
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3630
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3639
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3648
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3652
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3658
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3667
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3676
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3686
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3690
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3697
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3703
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3707
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3713
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3719
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3728
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3735
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3746
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3751
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3758
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3774
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3787
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3798
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3802
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3808
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3813
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3820
		{
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3822
		{
		}
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3825
		{
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3834
		{
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3838
		{
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3843
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3852
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3859
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3865
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3873
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3880
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3887
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3907
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3917
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3921
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3927
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3934
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3940
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3948
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3955
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3962
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3981
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3985
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3994
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3998
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4004
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4013
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4017
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4023
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4027
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4033
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4037
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4043
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4048
		{
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4059
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4063
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4070
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4079
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4085
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4089
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4095
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4099
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4108
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4121
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4128
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4135
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4153
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4172
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4178
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4185
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4189
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4202
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4206
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4211
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4215
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4222
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4227
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4234
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4240
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4244
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4248
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4252
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4256
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4260
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4266
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4273
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4282
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4286
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4292
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4304
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4313
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4319
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4323
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4327
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4332
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4336
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4342
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4348
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4352
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4358
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4363
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4367
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4371
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4376
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4380
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4384
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4393
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4401
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4405
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4409
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4423
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4427
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4437
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4447
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4457
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4469
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4477
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4485
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4494
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4502
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4510
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4518
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4526
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4534
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4542
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4550
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4558
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4568
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4579
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4593
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4597
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4601
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4606
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4610
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4614
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4627
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4636
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4645
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4651
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4655
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4661
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4665
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4670
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4674
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4679
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4687
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4693
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4701
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4709
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4719
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4725
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4734
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4743
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4752
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4762
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4766
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4776
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4780
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4784
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4788
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4794
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4804
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4808
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4814
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4824
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4830
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4836
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4840
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4844
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4854
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4860
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4864
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4870
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4874
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4880
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4884
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4894
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4907
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4913
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4919
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4932
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4950
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4954
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4960
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4970
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4974
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4978
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4983
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4987
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4991
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4995
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5004
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5008
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5012
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5016
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5021
		{
			yyVAL.str = ""
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5025
		{
			yyVAL.str = yyDollar[1].str
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5029
		{
			yyVAL.str = yyDollar[2].str
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5035
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5041
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5045
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5049
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5053
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5057
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5063
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 837:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5098
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5108
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5114
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 840:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5120
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5130
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5135
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5141
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5148
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5152
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5158
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5164
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5169
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5173
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5177
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5181
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5188
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5200
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5205
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5211
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5218
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5222
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5228
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5234
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5238
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5242
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5248
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5254
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5260
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5269
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5280
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5292
		{
			yyVAL.str = yyDollar[1].str
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5296
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5302
		{
			yyVAL.str = "OR REPLACE"
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5306
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5310
		{
			yyVAL.str = "DEFINER = "
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5314
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5319
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5323
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5337
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5345
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5351
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5361
		{
			yyVAL.str = yyDollar[1].str
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5365
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5371
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5378
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5384
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5392
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5398
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5420
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5426
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5435
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5447
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5459
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5471
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5477
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5492
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5498
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5506
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5512
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5520
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5526
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5535
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5539
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5544
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5548
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5555
		{
			yyVAL.str = yyDollar[3].str
		}
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5560
		{
			yyVAL.str = ""
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5564
		{
			yyVAL.str = yyDollar[2].str
		}
	case 917:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5570
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5598
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5604
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5610
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5616
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5625
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5634
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5643
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5648
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5654
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5662
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5768
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5772
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5778
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5788
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5792
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5798
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5808
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5812
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5816
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5825
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5831
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5838
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5844
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5853
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5860
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5869
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5873
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5879
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5893
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5897
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5901
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5906
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5910
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5914
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5918
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5924
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5947
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5969
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5973
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5977
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5981
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5985
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5991
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5995
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6001
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6006
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6011
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6015
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6019
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6023
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6027
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6033
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6048
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6058
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6062
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6071
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6077
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6081
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6087
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6091
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6095
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6100
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6104
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6110
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6121
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6132
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6143
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6147
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6153
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6165
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6174
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6187
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6194
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6204
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6214
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6222
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6233
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6237
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6242
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6246
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6253
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6264
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6277
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6291
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6295
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6299
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6306
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6313
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6320
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6327
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6331
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6335
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6343
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6350
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6361
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6368
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6375
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6379
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6386
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6393
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6400
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6407
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6411
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6416
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6420
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6424
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6433
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6447
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6454
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6465
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6474
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6478
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6484
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6488
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6494
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6503
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6517
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6523
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6527
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6533
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6540
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6549
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6553
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6558
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6562
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6567
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6571
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6576
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6580
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6590
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6594
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6605
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6613
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6621
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6629
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6640
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6649
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6659
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6669
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6673
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6691
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6697
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6701
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6707
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6711
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6720
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6726
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6730
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6734
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6740
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6744
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6748
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6752
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6756
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6760
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6764
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6769
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6773
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6777
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6781
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6785
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6789
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6793
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6797
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6801
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6805
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6809
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6813
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6817
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6821
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6825
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6829
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6833
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6837
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6841
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6845
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6849
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6853
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6857
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6861
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6865
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6869
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6873
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6877
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6883
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6887
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6893
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6899
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6903
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6909
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6913
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6917
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6921
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6925
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6929
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6947
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6956
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6961
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6967
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6974
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6978
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6984
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6988
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6992
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6998
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7002
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7008
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7017
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7026
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7049
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7074
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7088
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7094
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7103
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7112
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7121
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7130
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7140
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7148
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7154
		{
			yyVAL.str = ""
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7158
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7168
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7174
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7180
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7199
		{
			yyVAL.str = ""
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7203
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7209
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7215
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7219
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7223
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7229
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7233
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7237
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7241
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7247
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7251
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7255
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7264
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7270
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7274
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7280
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7284
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7288
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7292
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7296
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7300
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7305
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7309
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7321
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7325
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7329
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7333
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7337
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7341
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7354
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7358
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7362
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7370
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7374
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7389
		{
			yyVAL.str = ""
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7393
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7399
		{
			yyVAL.str = ""
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7403
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1224:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7409
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7421
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7428
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7435
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7442
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7449
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7458
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7464
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7470
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7474
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7478
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7482
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7486
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7491
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7498
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7502
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7506
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7511
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7515
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7520
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7524
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7540
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7546
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7550
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7554
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7558
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7562
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7566
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7570
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7574
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7578
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7582
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7586
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7590
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7594
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7600
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7604
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7608
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7612
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7616
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7620
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7624
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7628
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7632
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7636
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7640
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7644
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7649
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7657
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7661
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7665
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7669
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7678
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7682
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7686
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7690
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7694
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7700
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7708
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7716
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7729
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7738
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7744
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7748
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7754
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7763
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7775
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7792
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7809
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7822
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7835
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7847
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7861
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7876
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7891
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7908
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7923
		{
		}
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7930
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7934
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7938
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7944
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7948
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7952
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7956
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7962
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7966
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7970
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7976
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7984
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7998
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8005
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8010
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8014
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8019
		{
			yyVAL.str = ","
		}
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8023
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8028
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8035
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8061
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8072
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8082
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8092
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8102
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8111
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8120
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8130
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8140
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8150
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8160
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8170
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8180
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8190
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8200
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8210
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8220
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8230
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8240
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8259
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8267
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8275
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8283
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8291
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8301
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8309
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8318
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8326
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8334
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8342
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8350
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8361
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8371
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8383
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8394
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8416
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8452
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8464
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8476
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8487
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8495
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8502
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8509
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8521
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8529
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8539
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8549
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8557
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8568
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8577
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8586
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8594
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8604
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8612
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8626
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8636
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8655
		{
		}
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8657
		{
		}
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8698
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8709
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8713
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8717
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8723
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8732
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8738
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8742
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8749
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8753
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8757
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8765
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8769
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8773
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8777
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8783
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8787
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8791
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8795
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8799
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8803
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8807
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8811
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8815
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8819
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8827
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8831
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8835
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8839
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8843
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8847
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8851
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8855
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8859
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8863
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8869
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8873
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8879
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8883
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8890
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8894
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8898
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8904
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8908
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8912
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8916
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8920
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8924
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8928
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8934
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8938
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8942
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8946
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8952
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8965
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8970
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8976
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8980
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8993
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8998
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9002
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9006
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9010
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9014
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9021
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9025
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9039
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9043
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9050
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9061
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9066
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9072
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9084
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9096
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9108
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9121
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9134
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9147
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9160
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9173
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9186
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9199
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9212
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9225
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9238
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9253
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9280
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9322
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9358
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9394
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9411
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9423
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9443
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9463
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9483
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9499
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9512
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9525
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9538
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9551
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9563
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9575
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9587
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9599
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9611
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9623
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9635
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9647
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9659
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9672
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9685
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9700
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9708
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9717
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9727
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9750
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9755
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9761
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9768
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9772
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9777
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9781
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9787
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9793
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9800
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9807
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9816
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9823
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9830
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9839
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9843
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9847
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9853
		{
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9855
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9865
		{
			yyVAL.str = ""
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9869
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

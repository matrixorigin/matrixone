// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const SCHEMA = 57534
const TABLE = 57535
const INDEX = 57536
const VIEW = 57537
const TO = 57538
const IGNORE = 57539
const IF = 57540
const PRIMARY = 57541
const COLUMN = 57542
const CONSTRAINT = 57543
const SPATIAL = 57544
const FULLTEXT = 57545
const FOREIGN = 57546
const KEY_BLOCK_SIZE = 57547
const SHOW = 57548
const DESCRIBE = 57549
const EXPLAIN = 57550
const DATE = 57551
const ESCAPE = 57552
const REPAIR = 57553
const OPTIMIZE = 57554
const TRUNCATE = 57555
const MAXVALUE = 57556
const PARTITION = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const STATUS = 57563
const VARIABLES = 57564
const ROLE = 57565
const PROXY = 57566
const AVG_ROW_LENGTH = 57567
const STORAGE = 57568
const DISK = 57569
const MEMORY = 57570
const CHECKSUM = 57571
const COMPRESSION = 57572
const DATA = 57573
const DIRECTORY = 57574
const DELAY_KEY_WRITE = 57575
const ENCRYPTION = 57576
const ENGINE = 57577
const MAX_ROWS = 57578
const MIN_ROWS = 57579
const PACK_KEYS = 57580
const ROW_FORMAT = 57581
const STATS_AUTO_RECALC = 57582
const STATS_PERSISTENT = 57583
const STATS_SAMPLE_PAGES = 57584
const DYNAMIC = 57585
const COMPRESSED = 57586
const REDUNDANT = 57587
const COMPACT = 57588
const FIXED = 57589
const COLUMN_FORMAT = 57590
const AUTO_RANDOM = 57591
const RESTRICT = 57592
const CASCADE = 57593
const ACTION = 57594
const PARTIAL = 57595
const SIMPLE = 57596
const CHECK = 57597
const ENFORCED = 57598
const RANGE = 57599
const LIST = 57600
const ALGORITHM = 57601
const LINEAR = 57602
const PARTITIONS = 57603
const SUBPARTITION = 57604
const SUBPARTITIONS = 57605
const CLUSTER = 57606
const TYPE = 57607
const ANY = 57608
const SOME = 57609
const EXTERNAL = 57610
const LOCALFILE = 57611
const URL = 57612
const PREPARE = 57613
const DEALLOCATE = 57614
const RESET = 57615
const PROPERTIES = 57616
const PARSER = 57617
const VISIBLE = 57618
const INVISIBLE = 57619
const BTREE = 57620
const HASH = 57621
const RTREE = 57622
const BSI = 57623
const ZONEMAP = 57624
const LEADING = 57625
const BOTH = 57626
const TRAILING = 57627
const UNKNOWN = 57628
const EXPIRE = 57629
const ACCOUNT = 57630
const ACCOUNTS = 57631
const UNLOCK = 57632
const DAY = 57633
const NEVER = 57634
const PUMP = 57635
const SECOND = 57636
const ASCII = 57637
const COALESCE = 57638
const COLLATION = 57639
const HOUR = 57640
const MICROSECOND = 57641
const MINUTE = 57642
const MONTH = 57643
const QUARTER = 57644
const REPEAT = 57645
const REVERSE = 57646
const ROW_COUNT = 57647
const WEEK = 57648
const REVOKE = 57649
const FUNCTION = 57650
const PRIVILEGES = 57651
const TABLESPACE = 57652
const EXECUTE = 57653
const SUPER = 57654
const GRANT = 57655
const OPTION = 57656
const REFERENCES = 57657
const REPLICATION = 57658
const SLAVE = 57659
const CLIENT = 57660
const USAGE = 57661
const RELOAD = 57662
const FILE = 57663
const TEMPORARY = 57664
const ROUTINE = 57665
const EVENT = 57666
const SHUTDOWN = 57667
const NULLX = 57668
const AUTO_INCREMENT = 57669
const APPROXNUM = 57670
const SIGNED = 57671
const UNSIGNED = 57672
const ZEROFILL = 57673
const ENGINES = 57674
const LOW_CARDINALITY = 57675
const ADMIN_NAME = 57676
const RANDOM = 57677
const SUSPEND = 57678
const ATTRIBUTE = 57679
const HISTORY = 57680
const REUSE = 57681
const CURRENT = 57682
const OPTIONAL = 57683
const FAILED_LOGIN_ATTEMPTS = 57684
const PASSWORD_LOCK_TIME = 57685
const UNBOUNDED = 57686
const SECONDARY = 57687
const USER = 57688
const IDENTIFIED = 57689
const CIPHER = 57690
const ISSUER = 57691
const X509 = 57692
const SUBJECT = 57693
const SAN = 57694
const REQUIRE = 57695
const SSL = 57696
const NONE = 57697
const PASSWORD = 57698
const MAX_QUERIES_PER_HOUR = 57699
const MAX_UPDATES_PER_HOUR = 57700
const MAX_CONNECTIONS_PER_HOUR = 57701
const MAX_USER_CONNECTIONS = 57702
const FORMAT = 57703
const VERBOSE = 57704
const CONNECTION = 57705
const TRIGGERS = 57706
const PROFILES = 57707
const LOAD = 57708
const INFILE = 57709
const TERMINATED = 57710
const OPTIONALLY = 57711
const ENCLOSED = 57712
const ESCAPED = 57713
const STARTING = 57714
const LINES = 57715
const ROWS = 57716
const IMPORT = 57717
const MODUMP = 57718
const OVER = 57719
const PRECEDING = 57720
const FOLLOWING = 57721
const GROUPS = 57722
const DATABASES = 57723
const TABLES = 57724
const EXTENDED = 57725
const FULL = 57726
const PROCESSLIST = 57727
const FIELDS = 57728
const COLUMNS = 57729
const OPEN = 57730
const ERRORS = 57731
const WARNINGS = 57732
const INDEXES = 57733
const SCHEMAS = 57734
const NODE = 57735
const LOCKS = 57736
const NUMBER = 57737
const SIZE = 57738
const NAMES = 57739
const GLOBAL = 57740
const SESSION = 57741
const ISOLATION = 57742
const LEVEL = 57743
const READ = 57744
const WRITE = 57745
const ONLY = 57746
const REPEATABLE = 57747
const COMMITTED = 57748
const UNCOMMITTED = 57749
const SERIALIZABLE = 57750
const LOCAL = 57751
const EVENTS = 57752
const PLUGINS = 57753
const CURRENT_TIMESTAMP = 57754
const DATABASE = 57755
const CURRENT_TIME = 57756
const LOCALTIME = 57757
const LOCALTIMESTAMP = 57758
const UTC_DATE = 57759
const UTC_TIME = 57760
const UTC_TIMESTAMP = 57761
const REPLACE = 57762
const CONVERT = 57763
const SEPARATOR = 57764
const TIMESTAMPDIFF = 57765
const CURRENT_DATE = 57766
const CURRENT_USER = 57767
const CURRENT_ROLE = 57768
const SECOND_MICROSECOND = 57769
const MINUTE_MICROSECOND = 57770
const MINUTE_SECOND = 57771
const HOUR_MICROSECOND = 57772
const HOUR_SECOND = 57773
const HOUR_MINUTE = 57774
const DAY_MICROSECOND = 57775
const DAY_SECOND = 57776
const DAY_MINUTE = 57777
const DAY_HOUR = 57778
const YEAR_MONTH = 57779
const SQL_TSI_HOUR = 57780
const SQL_TSI_DAY = 57781
const SQL_TSI_WEEK = 57782
const SQL_TSI_MONTH = 57783
const SQL_TSI_QUARTER = 57784
const SQL_TSI_YEAR = 57785
const SQL_TSI_SECOND = 57786
const SQL_TSI_MINUTE = 57787
const RECURSIVE = 57788
const CONFIG = 57789
const DRAINER = 57790
const MATCH = 57791
const AGAINST = 57792
const BOOLEAN = 57793
const LANGUAGE = 57794
const WITH = 57795
const QUERY = 57796
const EXPANSION = 57797
const ADDDATE = 57798
const BIT_AND = 57799
const BIT_OR = 57800
const BIT_XOR = 57801
const CAST = 57802
const COUNT = 57803
const APPROX_COUNT_DISTINCT = 57804
const APPROX_PERCENTILE = 57805
const CURDATE = 57806
const CURTIME = 57807
const DATE_ADD = 57808
const DATE_SUB = 57809
const EXTRACT = 57810
const GROUP_CONCAT = 57811
const MAX = 57812
const MID = 57813
const MIN = 57814
const NOW = 57815
const POSITION = 57816
const SESSION_USER = 57817
const STD = 57818
const STDDEV = 57819
const MEDIAN = 57820
const STDDEV_POP = 57821
const STDDEV_SAMP = 57822
const SUBDATE = 57823
const SUBSTR = 57824
const SUBSTRING = 57825
const SUM = 57826
const SYSDATE = 57827
const SYSTEM_USER = 57828
const TRANSLATE = 57829
const TRIM = 57830
const VARIANCE = 57831
const VAR_POP = 57832
const VAR_SAMP = 57833
const AVG = 57834
const ARROW = 57835
const ROW = 57836
const OUTFILE = 57837
const HEADER = 57838
const MAX_FILE_SIZE = 57839
const FORCE_QUOTE = 57840
const UNUSED = 57841
const BINDINGS = 57842
const DO = 57843
const DECLARE = 57844
const KILL = 57845

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"NUMBER",
	"SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8185

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 90,
	21, 526,
	-2, 507,
	-1, 96,
	211, 707,
	-2, 754,
	-1, 114,
	42, 361,
	211, 361,
	238, 368,
	239, 368,
	408, 361,
	-2, 389,
	-1, 477,
	67, 1120,
	-2, 1631,
	-1, 478,
	67, 1138,
	-2, 1602,
	-1, 483,
	67, 1139,
	-2, 1630,
	-1, 504,
	67, 1052,
	-2, 1678,
	-1, 505,
	67, 1053,
	-2, 1677,
	-1, 506,
	67, 1054,
	-2, 1667,
	-1, 507,
	67, 1642,
	-2, 1662,
	-1, 508,
	67, 1643,
	-2, 1663,
	-1, 509,
	67, 1644,
	-2, 1669,
	-1, 510,
	67, 1645,
	-2, 1652,
	-1, 511,
	67, 1646,
	-2, 1660,
	-1, 512,
	67, 1647,
	-2, 1670,
	-1, 513,
	67, 1648,
	-2, 1671,
	-1, 514,
	67, 1649,
	-2, 1676,
	-1, 515,
	67, 1650,
	-2, 1681,
	-1, 516,
	67, 1651,
	-2, 1682,
	-1, 518,
	67, 1117,
	-2, 1483,
	-1, 525,
	67, 1126,
	-2, 1509,
	-1, 529,
	67, 1130,
	-2, 1548,
	-1, 530,
	67, 1131,
	-2, 1626,
	-1, 538,
	67, 1141,
	-2, 1611,
	-1, 540,
	67, 1143,
	-2, 1621,
	-1, 552,
	67, 1033,
	-2, 1672,
	-1, 553,
	67, 1034,
	-2, 1673,
	-1, 554,
	67, 1035,
	-2, 1674,
	-1, 561,
	21, 527,
	-2, 490,
	-1, 611,
	403, 389,
	404, 389,
	-2, 362,
	-1, 653,
	103, 1483,
	114, 1483,
	133, 1483,
	-2, 1279,
	-1, 690,
	21, 527,
	-2, 490,
	-1, 789,
	21, 526,
	-2, 944,
	-1, 1101,
	67, 1186,
	-2, 1628,
	-1, 1102,
	67, 1187,
	-2, 1629,
	-1, 1258,
	1, 733,
	68, 733,
	521, 733,
	-2, 740,
	-1, 1381,
	133, 1289,
	-2, 1287,
	-1, 1383,
	133, 650,
	-2, 1284,
	-1, 1384,
	133, 651,
	-2, 1285,
	-1, 1680,
	1, 734,
	68, 734,
	521, 734,
	-2, 740,
	-1, 1739,
	21, 526,
	-2, 617,
	-1, 1911,
	65, 433,
	134, 433,
	-2, 849,
	-1, 2178,
	87, 740,
	129, 740,
	166, 740,
	169, 740,
	-2, 797,
	-1, 2180,
	272, 912,
	-2, 891,
	-1, 2208,
	87, 740,
	129, 740,
	166, 740,
	169, 740,
	-2, 797,
	-1, 2211,
	65, 433,
	134, 433,
	-2, 850,
	-1, 2249,
	87, 740,
	129, 740,
	166, 740,
	169, 740,
	-2, 798,
	-1, 2277,
	272, 912,
	-2, 892,
	-1, 2688,
	68, 769,
	134, 769,
	-2, 740,
	-1, 2692,
	68, 769,
	134, 769,
	-2, 740,
	-1, 2706,
	68, 773,
	134, 773,
	-2, 740,
	-1, 2711,
	68, 774,
	134, 774,
	-2, 740,
}

const yyPrivate = 57344

const yyLast = 28875

var yyAct = [...]int{
	448, 2250, 1165, 2692, 2691, 2668, 2700, 2533, 1081, 2316,
	430, 2614, 2657, 450, 2570, 2289, 2598, 1736, 2599, 2432,
	2503, 2479, 2236, 2499, 2245, 1664, 2314, 423, 1341, 993,
	816, 2172, 2440, 2487, 2334, 2315, 475, 562, 132, 132,
	1732, 1307, 1077, 2234, 132, 367, 374, 947, 2299, 374,
	2351, 2203, 1886, 2065, 2278, 1264, 1914, 1084, 652, 1266,
	135, 2298, 2248, 916, 2061, 1766, 1367, 1373, 928, 1023,
	1931, 2184, 1299, 372, 30, 379, 2191, 846, 1329, 131,
	131, 2066, 428, 1731, 1805, 358, 1570, 1772, 557, 422,
	1952, 2139, 2122, 2081, 385, 1212, 2078, 1688, 1773, 594,
	2070, 2076, 684, 427, 2012, 2059, 1378, 1215, 1381, 1566,
	1368, 1804, 1374, 1375, 1236, 1965, 1222, 1302, 1322, 1930,
	463, 90, 557, 1565, 1720, 1281, 1888, 371, 19, 370,
	7, 132, 3, 1164, 368, 8, 1846, 1687, 2253, 1883,
	659, 41, 656, 369, 6, 1681, 679, 1282, 1244, 1598,
	1567, 852, 1080, 1254, 1300, 1015, 1326, 1075, 89, 1673,
	654, 1293, 357, 431, 678, 90, 360, 1272, 930, 1577,
	1292, 1652, 686, 614, 1129, 1581, 1115, 429, 1066, 363,
	1734, 1362, 701, 644, 1074, 41, 1345, 1253, 1741, 680,
	1288, 962, 593, 972, 439, 559, 1135, 985, 1134, 1227,
	387, 30, 16, 9, 388, 4, 948, 122, 2005, 607,
	897, 1014, 373, 125, 591, 2005, 1584, 1807, 127, 2347,
	1574, 382, 1767, 2171, 1240, 2521, 1370, 560, 817, 645,
	2561, 126, 126, 561, 37, 116, 97, 570, 126, 126,
	37, 116, 97, 126, 658, 126, 126, 721, 90, 356,
	126, 126, 37, 116, 97, 19, 1155, 7, 1792, 1033,
	677, 377, 8, 1571, 974, 2307, 1800, 2148, 41, 2551,
	914, 6, 1582, 128, 755, 1030, 1155, 939, 1067, 1982,
	1071, 959, 657, 960, 1310, 1311, 1885, 754, 123, 123,
	936, 2587, 953, 954, 1874, 123, 1032, 736, 944, 737,
	123, 1051, 1026, 123, 1070, 624, 2585, 123, 123, 664,
	663, 665, 2602, 2603, 1020, 975, 547, 556, 546, 548,
	549, 951, 550, 551, 950, 953, 954, 739, 571, 1284,
	1083, 753, 748, 2522, 2523, 1847, 2343, 2332, 1884, 662,
	759, 760, 761, 758, 2574, 2575, 2335, 2336, 2337, 2338,
	2052, 2425, 2428, 2053, 729, 2054, 731, 2349, 2173, 1086,
	132, 694, 384, 1787, 695, 704, 2502, 1323, 2156, 2192,
	693, 1315, 1578, 1072, 628, 2560, 374, 374, 1062, 132,
	2092, 2199, 2312, 583, 732, 563, 741, 667, 742, 1715,
	1671, 1649, 734, 1069, 689, 691, 2082, 2408, 1319, 1151,
	2000, 692, 1148, 1777, 660, 2296, 1150, 1147, 1149, 1153,
	1154, 1998, 1891, 2090, 1152, 750, 744, 751, 752, 1151,
	712, 2086, 1148, 1211, 1210, 1797, 1150, 1147, 1149, 1153,
	1154, 96, 629, 124, 1152, 2411, 791, 418, 724, 2309,
	419, 2402, 2612, 2601, 2589, 376, 2563, 2564, 704, 725,
	735, 114, 762, 2342, 375, 688, 1085, 2701, 2441, 2344,
	2685, 790, 661, 2623, 2087, 2088, 2584, 942, 2535, 798,
	2630, 727, 938, 1588, 1590, 1591, 2501, 716, 2558, 2089,
	2395, 740, 933, 730, 733, 90, 90, 658, 2679, 2660,
	803, 1899, 1900, 1901, 1902, 1583, 966, 2364, 1068, 421,
	690, 961, 2363, 420, 585, 41, 41, 726, 655, 1093,
	1096, 1097, 2386, 2084, 582, 581, 745, 738, 746, 747,
	1094, 2531, 2532, 915, 2535, 657, 2591, 2592, 2541, 666,
	2390, 1897, 981, 980, 937, 575, 706, 705, 714, 743,
	2702, 1025, 946, 945, 697, 698, 1158, 1159, 1160, 1161,
	1162, 1163, 1156, 1157, 789, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1158, 1159, 1160, 1161,
	1162, 1163, 1156, 1157, 728, 2464, 579, 2708, 2669, 917,
	578, 2352, 2167, 1572, 685, 713, 2696, 1599, 709, 710,
	1954, 1956, 657, 594, 1572, 383, 894, 2423, 2160, 1572,
	573, 699, 973, 2661, 721, 2004, 2488, 2489, 2490, 2492,
	2491, 1793, 792, 793, 794, 795, 1748, 1575, 1248, 706,
	705, 920, 2008, 2562, 2003, 923, 922, 953, 954, 2074,
	952, 378, 1586, 925, 580, 796, 1170, 1958, 918, 919,
	1745, 921, 953, 954, 978, 2524, 2525, 557, 557, 557,
	1313, 2590, 997, 997, 949, 2500, 934, 935, 574, 38,
	825, 2014, 2013, 2093, 943, 1314, 1585, 1324, 374, 1018,
	1018, 1573, 1744, 2083, 1312, 1021, 2409, 38, 1890, 2001,
	1747, 1746, 999, 720, 902, 588, 589, 590, 1028, 631,
	2085, 98, 98, 1589, 995, 995, 1017, 1017, 98, 98,
	2313, 632, 1001, 98, 2714, 98, 98, 2695, 1049, 756,
	98, 98, 1316, 827, 828, 2308, 1801, 976, 977, 1063,
	1824, 997, 2642, 997, 694, 584, 2658, 2659, 2713, 1095,
	1894, 1895, 2388, 1082, 2391, 2392, 2387, 1034, 2704, 1318,
	2686, 2707, 655, 1955, 1893, 715, 892, 889, 890, 891,
	1729, 2075, 1829, 1912, 1828, 1827, 1825, 1626, 1024, 2681,
	1625, 757, 1031, 1780, 963, 2672, 963, 1784, 2103, 899,
	757, 940, 635, 2671, 721, 2646, 1003, 901, 956, 957,
	357, 2179, 1058, 1064, 1658, 1088, 1089, 1090, 1091, 1092,
	1792, 1267, 1267, 1768, 757, 2465, 2467, 2468, 2469, 2466,
	1730, 561, 1133, 1675, 2705, 90, 1580, 927, 2616, 90,
	967, 1757, 1180, 2666, 1087, 1348, 1826, 1571, 955, 634,
	90, 958, 1186, 637, 636, 2682, 757, 1131, 1132, 90,
	2609, 1580, 1079, 1167, 1192, 1193, 1057, 1913, 1174, 1580,
	41, 1580, 2604, 1054, 979, 1663, 557, 991, 992, 41,
	970, 971, 1053, 719, 1730, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 356, 1098, 1002,
	1124, 1125, 1913, 1076, 2617, 1060, 988, 989, 990, 1040,
	1013, 1019, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1757,
	670, 675, 676, 2593, 1233, 1630, 2413, 1674, 1036, 2579,
	2556, 1035, 1044, 1045, 2555, 1065, 1188, 718, 2413, 1730,
	2119, 1056, 1055, 625, 1052, 2071, 2074, 1251, 2554, 997,
	1073, 1562, 1258, 964, 1238, 1179, 1078, 594, 1242, 564,
	1265, 1245, 561, 997, 1346, 926, 1830, 1831, 1257, 1166,
	2553, 1169, 1234, 2543, 1127, 982, 1181, 759, 760, 761,
	758, 1218, 1219, 2618, 2214, 1905, 1187, 625, 1189, 1757,
	1289, 1289, 1217, 1294, 1123, 2580, 2413, 2104, 1294, 1226,
	2413, 1251, 997, 1309, 1967, 1237, 1608, 719, 1249, 1117,
	2420, 1287, 1915, 557, 2413, 997, 1259, 1260, 1224, 1225,
	1048, 2033, 627, 1795, 2419, 626, 1794, 1786, 1047, 2358,
	1277, 759, 760, 761, 758, 1168, 2413, 1251, 997, 2544,
	1340, 132, 132, 1238, 1256, 1250, 1285, 1286, 1350, 1238,
	1238, 965, 132, 2198, 721, 1291, 1190, 1180, 1366, 2412,
	679, 2232, 1712, 1180, 1180, 1972, 627, 1622, 2075, 626,
	1343, 687, 1949, 2068, 895, 1607, 2421, 2069, 2072, 1609,
	1356, 1561, 1342, 1342, 1353, 1383, 672, 673, 674, 1662,
	1692, 1037, 1265, 1342, 893, 1870, 997, 1868, 1866, 1296,
	1864, 1255, 801, 680, 707, 1207, 1320, 1906, 1852, 1809,
	687, 963, 963, 1273, 1273, 1269, 1790, 1273, 1782, 1278,
	1229, 1235, 1232, 1308, 1325, 2413, 774, 1973, 1384, 2073,
	1273, 1973, 1778, 1339, 1274, 1337, 1275, 1276, 1730, 1268,
	1241, 1335, 1774, 1691, 1279, 1280, 1997, 1563, 1261, 1262,
	1283, 1593, 1569, 1659, 1255, 1270, 1271, 759, 760, 761,
	758, 1871, 931, 1869, 1865, 2108, 1865, 1995, 1295, 964,
	1364, 1633, 1632, 1579, 757, 757, 1364, 658, 1333, 1334,
	1041, 1290, 1692, 658, 1775, 1601, 1172, 1171, 1605, 1297,
	1076, 1298, 90, 986, 984, 2655, 1321, 1996, 1779, 1743,
	2643, 1661, 633, 1568, 987, 1887, 2578, 1344, 1775, 1692,
	586, 2545, 41, 2120, 2006, 657, 1330, 1331, 1332, 1658,
	1785, 657, 1338, 759, 760, 761, 758, 1750, 1615, 696,
	1637, 1616, 1817, 1620, 1596, 1597, 1354, 757, 757, 1580,
	1815, 1130, 1336, 1604, 1371, 1130, 1042, 1881, 1382, 1631,
	1252, 1559, 1634, 1635, 1636, 1560, 758, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 687, 1647, 965, 2381, 789,
	1840, 761, 758, 1564, 983, 1376, 1198, 1377, 2398, 132,
	132, 775, 776, 777, 778, 779, 780, 781, 774, 2397,
	132, 132, 1689, 1587, 777, 778, 779, 780, 781, 774,
	2188, 1294, 1294, 2183, 367, 1971, 2678, 657, 2690, 1704,
	782, 783, 775, 776, 777, 778, 779, 780, 781, 774,
	1667, 1669, 1294, 638, 1592, 1693, 1594, 630, 1595, 2475,
	679, 1684, 1685, 1603, 2473, 2675, 2471, 1309, 759, 760,
	761, 758, 2461, 2310, 1117, 759, 760, 761, 758, 2677,
	1703, 2640, 773, 772, 782, 783, 775, 776, 777, 778,
	779, 780, 781, 774, 2624, 1701, 997, 2474, 1184, 1705,
	1706, 1628, 2472, 680, 2470, 2513, 2481, 1018, 1185, 1309,
	2460, 2311, 1761, 2459, 1763, 2077, 1122, 2196, 1238, 1238,
	1238, 1180, 1251, 2458, 2457, 1737, 1737, 2454, 1737, 2448,
	2281, 1120, 1121, 1119, 1017, 1665, 1666, 2445, 1755, 1740,
	765, 766, 767, 768, 769, 770, 771, 763, 2444, 1738,
	2195, 1742, 867, 1654, 2291, 2197, 2091, 1682, 1698, 2050,
	1700, 2049, 1702, 1991, 1969, 1758, 1657, 2284, 2611, 1709,
	1710, 1656, 1655, 2279, 1765, 2026, 1651, 2706, 2294, 2295,
	1612, 1760, 1650, 1038, 2280, 1676, 1770, 1739, 1771, 759,
	760, 761, 758, 1776, 912, 1273, 681, 682, 683, 2596,
	1699, 1696, 1697, 2595, 2683, 418, 1173, 1708, 419, 2480,
	1707, 2246, 2576, 1713, 2539, 1711, 2538, 1716, 2462, 2285,
	2025, 759, 760, 761, 758, 657, 2455, 1191, 2451, 1308,
	1194, 1195, 1196, 1197, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 759, 760, 761, 758, 2450, 1751, 1752, 1753,
	2449, 2410, 855, 2383, 2348, 759, 760, 761, 758, 2244,
	2242, 2206, 1759, 2194, 2193, 2190, 825, 1618, 1606, 2159,
	875, 879, 881, 883, 885, 886, 888, 1806, 892, 889,
	890, 891, 2048, 2002, 870, 871, 872, 873, 853, 854,
	876, 1970, 856, 1961, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 868, 874, 2293, 2095, 2067, 1660,
	2676, 503, 502, 878, 880, 882, 884, 887, 1653, 1355,
	1617, 1247, 1788, 1039, 759, 760, 761, 758, 826, 2506,
	821, 820, 997, 2287, 997, 802, 997, 2546, 2431, 2208,
	2207, 694, 759, 760, 761, 758, 2178, 2169, 869, 2407,
	1802, 759, 760, 761, 758, 2286, 2288, 773, 772, 782,
	783, 775, 776, 777, 778, 779, 780, 781, 774, 997,
	1833, 759, 760, 761, 758, 2168, 1798, 2152, 2138, 2137,
	2238, 2109, 126, 1841, 2031, 116, 97, 997, 2024, 2016,
	2237, 2011, 1816, 1867, 1863, 1862, 1638, 1629, 1832, 1627,
	1834, 1835, 759, 760, 761, 758, 1838, 1839, 2163, 1624,
	1623, 995, 759, 760, 761, 758, 1842, 1621, 1844, 1614,
	1611, 1610, 2296, 565, 566, 567, 568, 1183, 1182, 995,
	759, 760, 761, 758, 2282, 997, 564, 1004, 2029, 123,
	2292, 126, 2703, 2654, 1819, 2648, 1238, 1911, 2631, 1875,
	1876, 1245, 2628, 1917, 2626, 818, 2512, 2497, 2485, 1799,
	759, 760, 761, 758, 1813, 2482, 2477, 2437, 1820, 1821,
	2028, 1843, 1214, 1926, 2405, 1791, 2404, 2403, 694, 1309,
	1309, 1309, 1309, 2400, 1076, 1005, 1789, 1932, 1909, 1796,
	694, 1309, 759, 760, 761, 758, 1880, 1872, 123, 1932,
	2394, 1904, 2379, 929, 2224, 1810, 2222, 2201, 2189, 997,
	2035, 1223, 1216, 1977, 1908, 1907, 1882, 132, 132, 1823,
	1781, 1749, 1690, 1920, 30, 1118, 123, 1922, 1928, 1361,
	1848, 1228, 1231, 1221, 1948, 1853, 1180, 1812, 1220, 1061,
	1978, 1027, 2636, 2027, 896, 1180, 844, 843, 842, 841,
	1918, 2401, 1861, 997, 1737, 840, 839, 838, 1963, 1964,
	1947, 837, 836, 835, 1989, 759, 760, 761, 758, 1238,
	834, 90, 1877, 1238, 759, 760, 761, 758, 19, 1682,
	7, 833, 832, 1916, 1910, 8, 1903, 1255, 1896, 831,
	877, 41, 830, 829, 6, 824, 823, 1925, 822, 1308,
	1308, 1308, 1308, 1929, 1974, 2010, 819, 1990, 1946, 1945,
	1984, 1308, 1921, 1944, 1927, 815, 1983, 814, 812, 811,
	1237, 810, 809, 808, 1986, 1919, 807, 806, 2030, 1962,
	805, 804, 1959, 1933, 1934, 1935, 1936, 1957, 1923, 1924,
	800, 1968, 561, 694, 799, 723, 1999, 2080, 1994, 1975,
	1695, 1979, 2064, 1987, 1678, 1988, 1981, 1985, 711, 132,
	2123, 2124, 1993, 90, 2634, 2600, 2126, 1898, 694, 694,
	1756, 1358, 722, 1309, 1689, 2009, 2107, 2064, 2064, 2007,
	2017, 2129, 2111, 2019, 2128, 2021, 2015, 1879, 1943, 2080,
	1726, 1727, 1941, 2018, 1939, 2022, 2023, 1942, 1860, 1940,
	2096, 1938, 1859, 1937, 2689, 2020, 772, 782, 783, 775,
	776, 777, 778, 779, 780, 781, 774, 2097, 2098, 2099,
	759, 760, 761, 758, 759, 760, 761, 758, 1833, 1722,
	1725, 1726, 1727, 1723, 1251, 1724, 1728, 1858, 1251, 2110,
	2055, 2056, 2034, 2112, 2113, 2105, 2036, 2037, 2038, 2039,
	2118, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 759,
	760, 761, 758, 1360, 132, 2130, 1976, 1783, 1683, 132,
	1208, 2106, 2102, 2100, 2101, 1857, 2227, 1769, 2226, 1359,
	73, 40, 39, 2117, 1808, 2116, 1803, 129, 2127, 2115,
	1665, 1666, 2058, 1308, 898, 1672, 2144, 759, 760, 761,
	758, 717, 2131, 2150, 2350, 2157, 2146, 2057, 2149, 2153,
	2161, 1856, 2225, 1263, 2162, 2134, 2135, 2136, 2567, 132,
	2143, 2164, 353, 354, 355, 2151, 352, 969, 2182, 1172,
	1171, 968, 2147, 759, 760, 761, 758, 910, 911, 908,
	909, 2155, 906, 907, 1811, 904, 905, 2154, 749, 2133,
	2158, 1558, 932, 90, 2114, 90, 900, 2649, 997, 997,
	2177, 1855, 2529, 2517, 1309, 2211, 773, 772, 782, 783,
	775, 776, 777, 778, 779, 780, 781, 774, 2515, 2442,
	694, 2438, 2430, 759, 760, 761, 758, 2202, 2429, 1932,
	2427, 2176, 2329, 2328, 2186, 1854, 565, 566, 567, 568,
	995, 2204, 2180, 2187, 2229, 2243, 1180, 2181, 1238, 564,
	564, 2221, 2240, 2175, 2223, 2174, 2218, 759, 760, 761,
	758, 2141, 903, 1737, 2213, 2212, 1267, 2140, 2228, 1966,
	2185, 2215, 2185, 1851, 2216, 1992, 2210, 1613, 90, 708,
	694, 2638, 2637, 2637, 2300, 2302, 2209, 2300, 2300, 2064,
	2219, 2638, 2396, 2217, 2145, 759, 760, 761, 758, 2220,
	941, 48, 694, 2239, 1, 1246, 2652, 1850, 569, 1357,
	1950, 1951, 2132, 2230, 1953, 2231, 1849, 2306, 1576, 1714,
	1670, 2094, 924, 1265, 1308, 2326, 587, 2233, 1175, 759,
	760, 761, 758, 2301, 2297, 913, 2241, 1046, 759, 760,
	761, 758, 669, 2345, 2275, 703, 2247, 1043, 2303, 2304,
	1845, 2354, 2305, 773, 772, 782, 783, 775, 776, 777,
	778, 779, 780, 781, 774, 2319, 2323, 1837, 2213, 2321,
	2322, 2320, 759, 760, 761, 758, 1836, 2330, 2324, 702,
	700, 1128, 465, 1369, 2478, 2325, 997, 2566, 2613, 759,
	760, 761, 758, 2511, 2569, 1059, 449, 132, 759, 760,
	761, 758, 2422, 2051, 2355, 2356, 2302, 2359, 2360, 2361,
	2362, 1814, 2357, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 1126, 2204, 2331,
	2424, 2297, 2380, 759, 760, 761, 758, 2384, 2399, 2333,
	1873, 2235, 1980, 603, 497, 2415, 473, 813, 1029, 759,
	760, 761, 758, 1022, 2406, 2443, 671, 472, 785, 2418,
	788, 2200, 1892, 2416, 2382, 572, 668, 604, 2426, 2436,
	1717, 2417, 1648, 2170, 1209, 786, 787, 784, 2476, 773,
	772, 782, 783, 775, 776, 777, 778, 779, 780, 781,
	774, 1230, 1213, 1722, 1725, 1726, 1727, 1723, 2699, 1724,
	1728, 694, 2688, 2667, 694, 694, 694, 2647, 2456, 2534,
	2446, 2447, 2414, 2684, 694, 2583, 2452, 2453, 2629, 2341,
	2339, 2340, 2509, 2622, 2439, 2530, 389, 2486, 1737, 1317,
	2494, 2495, 2496, 2483, 555, 642, 2493, 2498, 2527, 390,
	2505, 1694, 2559, 2484, 576, 1677, 577, 997, 997, 2504,
	2507, 1680, 2516, 2520, 2518, 2519, 2514, 1679, 1099, 764,
	1116, 2436, 2165, 2528, 2166, 797, 2508, 426, 1602, 438,
	432, 90, 1889, 2290, 1960, 47, 2536, 2537, 132, 46,
	45, 44, 1349, 1379, 467, 134, 694, 1380, 2526, 995,
	995, 2346, 2571, 447, 446, 445, 444, 1721, 694, 1719,
	1718, 1304, 1303, 1347, 2597, 2549, 2542, 2550, 2393, 2463,
	2547, 2389, 2552, 2573, 2548, 2385, 2540, 2249, 2276, 1342,
	2277, 2283, 851, 847, 2557, 849, 2572, 850, 848, 1822,
	694, 1818, 2565, 2062, 2063, 2060, 2125, 2121, 1365, 2581,
	1243, 1878, 2577, 1305, 1301, 2318, 558, 31, 5, 29,
	28, 27, 14, 15, 2586, 2588, 13, 1050, 12, 18,
	26, 25, 24, 23, 81, 80, 2594, 79, 78, 22,
	11, 77, 76, 75, 2605, 2606, 2607, 2608, 2615, 21,
	20, 2620, 70, 694, 71, 58, 57, 56, 69, 68,
	67, 2621, 1082, 66, 65, 64, 63, 602, 2619, 55,
	54, 53, 52, 62, 61, 60, 2436, 59, 51, 50,
	49, 95, 94, 2610, 93, 92, 2635, 2633, 2573, 2645,
	2632, 32, 33, 34, 35, 2639, 2650, 694, 105, 694,
	2641, 2572, 2644, 104, 106, 2651, 1082, 2653, 1082, 773,
	772, 782, 783, 775, 776, 777, 778, 779, 780, 781,
	774, 2662, 102, 2615, 2663, 694, 100, 2670, 103, 101,
	99, 42, 10, 2674, 1082, 17, 2, 2680, 2625, 0,
	2627, 2665, 0, 773, 772, 782, 783, 775, 776, 777,
	778, 779, 780, 781, 774, 0, 0, 0, 2687, 0,
	2694, 0, 0, 0, 2698, 0, 0, 2697, 0, 0,
	0, 0, 0, 0, 0, 0, 2709, 0, 2694, 0,
	2711, 2712, 2710, 2698, 2656, 1495, 1537, 0, 0, 1484,
	302, 1442, 1497, 1415, 1431, 1505, 1432, 1433, 1470, 1394,
	1452, 264, 1429, 0, 0, 0, 0, 0, 0, 1487,
	1386, 1418, 1419, 1388, 1425, 1389, 1416, 1444, 209, 1414,
	1455, 234, 1467, 1428, 1449, 1503, 0, 0, 294, 248,
	0, 0, 1447, 1489, 1450, 1475, 1441, 1471, 1402, 1463,
	1498, 1430, 0, 1468, 1499, 0, 0, 0, 0, 681,
	682, 683, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 1466, 1493, 1427, 0, 193, 1496, 1448, 1469,
	0, 0, 1387, 1464, 0, 1392, 1395, 1504, 1491, 1422,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	1451, 1472, 1438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1420, 0, 1460, 0, 0, 0, 1397, 1393,
	0, 1443, 0, 0, 181, 299, 315, 191, 290, 328,
	196, 297, 186, 263, 286, 0, 1536, 183, 313, 296,
	245, 228, 229, 182, 0, 281, 207, 220, 203, 261,
	0, 312, 340, 202, 331, 1396, 323, 185, 1531, 322,
	260, 309, 314, 246, 240, 184, 311, 244, 239, 232,
	211, 0, 224, 272, 238, 273, 225, 250, 249, 251,
	1515, 1516, 1517, 1518, 1519, 351, 1527, 1528, 0, 1532,
	1533, 1534, 1401, 0, 1421, 1473, 0, 1385, 1482, 1490,
	1440, 325, 1492, 1437, 1436, 1522, 0, 1521, 298, 1523,
	1524, 233, 1488, 1417, 1426, 341, 1424, 284, 266, 1494,
	1459, 1535, 282, 236, 310, 274, 316, 300, 324, 278,
	275, 176, 301, 205, 247, 187, 189, 201, 208, 210,
	212, 213, 256, 257, 269, 289, 303, 304, 305, 204,
	197, 283, 198, 222, 199, 177, 291, 200, 179, 270,
	308, 1520, 218, 279, 243, 180, 242, 271, 307, 306,
	188, 332, 338, 339, 343, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 1529,
	0, 1530, 337, 216, 173, 174, 320, 0, 262, 0,
	1485, 1390, 1400, 1398, 1434, 1461, 1462, 258, 336, 1477,
	1481, 1478, 1506, 287, 0, 0, 0, 0, 0, 227,
	268, 1479, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1391, 0, 295, 318, 330, 347, 350,
	1538, 1539, 1540, 178, 349, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 321, 1435, 1408, 1446, 329, 1411, 1409, 1476,
	1410, 1465, 345, 252, 253, 254, 255, 219, 0, 195,
	348, 277, 1456, 1439, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1457, 1549, 1550, 1551, 1552, 1553, 1413, 342, 215,
	221, 2032, 223, 194, 267, 217, 327, 230, 1483, 1554,
	1555, 1556, 1557, 259, 226, 292, 231, 237, 280, 326,
	265, 285, 192, 317, 293, 241, 0, 0, 1407, 1412,
	1406, 1453, 1454, 1500, 1501, 1502, 1474, 1399, 1486, 0,
	1403, 1405, 1404, 0, 0, 0, 0, 0, 773, 772,
	782, 783, 775, 776, 777, 778, 779, 780, 781, 774,
	0, 0, 1480, 302, 479, 1458, 175, 0, 235, 1507,
	276, 214, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 440, 0, 0,
	0, 209, 0, 0, 234, 0, 0, 0, 471, 0,
	0, 294, 248, 0, 0, 0, 0, 526, 534, 0,
	1525, 1526, 333, 334, 335, 319, 0, 206, 1548, 433,
	0, 0, 464, 503, 502, 451, 460, 0, 1600, 190,
	452, 0, 459, 453, 457, 456, 454, 455, 0, 518,
	0, 0, 0, 0, 0, 0, 424, 437, 2433, 441,
	773, 772, 782, 783, 775, 776, 777, 778, 779, 780,
	781, 774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 435, 0, 0, 0, 0, 480, 0, 436,
	0, 0, 482, 461, 462, 0, 0, 181, 299, 315,
	191, 290, 328, 196, 297, 186, 263, 286, 0, 0,
	183, 313, 296, 245, 228, 229, 182, 0, 281, 207,
	220, 203, 261, 458, 478, 483, 202, 540, 476, 323,
	185, 0, 322, 260, 309, 314, 246, 240, 184, 311,
	244, 239, 232, 211, 541, 224, 272, 238, 273, 225,
	250, 249, 251, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 0, 0, 325, 0, 0, 524, 0, 0,
	0, 298, 0, 0, 233, 0, 0, 0, 477, 0,
	284, 266, 537, 425, 0, 282, 236, 310, 274, 316,
	300, 324, 278, 275, 176, 301, 205, 247, 187, 189,
	201, 208, 210, 212, 213, 256, 257, 269, 289, 303,
	304, 305, 204, 197, 283, 198, 222, 199, 177, 291,
	200, 179, 270, 308, 0, 218, 279, 243, 180, 242,
	271, 307, 306, 188, 332, 338, 339, 343, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 337, 216, 173, 174, 320,
	522, 262, 0, 536, 517, 519, 520, 523, 527, 528,
	529, 530, 531, 533, 535, 539, 287, 0, 0, 0,
	0, 0, 227, 268, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 318,
	330, 347, 350, 0, 0, 0, 178, 349, 0, 2434,
	0, 0, 0, 2435, 0, 538, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 481, 252, 253, 254, 255,
	525, 0, 195, 348, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 215, 221, 0, 223, 194, 267, 217, 327,
	230, 0, 0, 0, 0, 0, 259, 226, 292, 231,
	237, 280, 326, 265, 285, 192, 317, 293, 241, 0,
	0, 547, 521, 546, 548, 549, 545, 550, 551, 532,
	443, 0, 486, 543, 542, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 235, 0, 276, 214, 510, 490, 491, 492, 442,
	493, 488, 489, 511, 484, 507, 508, 466, 469, 494,
	506, 495, 509, 512, 513, 552, 553, 501, 554, 498,
	514, 505, 504, 496, 485, 515, 516, 470, 468, 499,
	500, 487, 302, 479, 0, 333, 334, 335, 319, 0,
	206, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 440, 0, 0, 0,
	209, 0, 0, 234, 0, 0, 0, 471, 0, 0,
	294, 248, 0, 0, 0, 0, 526, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 0,
	0, 464, 503, 502, 451, 460, 0, 0, 190, 452,
	0, 459, 453, 457, 456, 454, 455, 0, 518, 0,
	0, 0, 0, 0, 0, 424, 437, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 435, 0, 0, 0, 0, 480, 0, 436, 0,
	0, 482, 461, 462, 0, 0, 181, 299, 315, 191,
	290, 328, 196, 297, 186, 263, 286, 0, 0, 183,
	313, 296, 245, 228, 229, 182, 0, 281, 207, 220,
	203, 261, 458, 478, 483, 202, 540, 476, 323, 185,
	0, 322, 260, 309, 314, 246, 240, 184, 311, 244,
	239, 232, 211, 541, 224, 272, 238, 273, 225, 250,
	249, 251, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 0, 0, 325, 0, 0, 524, 0, 0, 0,
	298, 0, 0, 233, 0, 0, 0, 477, 0, 284,
	266, 537, 425, 0, 282, 236, 310, 274, 316, 300,
	324, 278, 275, 176, 301, 205, 247, 187, 189, 201,
	208, 210, 212, 213, 256, 257, 269, 289, 303, 304,
	305, 204, 197, 283, 198, 222, 199, 177, 291, 200,
	179, 270, 308, 0, 218, 279, 243, 180, 242, 271,
	307, 306, 188, 332, 338, 339, 343, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 1177, 1176, 1178, 337, 216, 173, 174, 320, 522,
	262, 0, 536, 517, 519, 520, 523, 527, 528, 529,
	530, 531, 533, 535, 539, 287, 0, 0, 0, 0,
	0, 227, 268, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 318, 330,
	347, 350, 0, 0, 0, 178, 349, 0, 0, 0,
	0, 0, 0, 0, 538, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 481, 252, 253, 254, 255, 525,
	0, 195, 348, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 215, 221, 0, 223, 194, 267, 217, 327, 230,
	0, 0, 0, 0, 0, 259, 226, 292, 231, 237,
	280, 326, 265, 285, 192, 317, 293, 241, 0, 0,
	547, 521, 546, 548, 549, 545, 550, 551, 532, 443,
	0, 486, 543, 542, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	235, 0, 276, 214, 510, 490, 491, 492, 442, 493,
	488, 489, 511, 484, 507, 508, 466, 469, 494, 506,
	495, 509, 512, 513, 552, 553, 501, 554, 498, 514,
	505, 504, 496, 485, 515, 516, 470, 468, 499, 500,
	487, 302, 479, 0, 333, 334, 335, 319, 0, 206,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 440, 0, 0, 0, 209,
	0, 0, 234, 0, 0, 0, 471, 0, 0, 294,
	248, 0, 0, 0, 0, 526, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 0, 0,
	464, 503, 502, 451, 460, 0, 0, 190, 452, 0,
	459, 453, 457, 456, 454, 455, 0, 518, 0, 0,
	0, 0, 0, 0, 424, 437, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	435, 0, 0, 0, 0, 480, 0, 436, 0, 0,
	482, 461, 462, 0, 0, 181, 299, 315, 191, 290,
	328, 196, 297, 186, 263, 286, 0, 0, 183, 313,
	296, 245, 228, 229, 182, 0, 281, 207, 220, 203,
	261, 458, 478, 483, 202, 540, 476, 323, 185, 0,
	322, 260, 309, 314, 246, 240, 184, 311, 244, 239,
	232, 211, 541, 224, 272, 238, 273, 225, 250, 249,
	251, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	0, 0, 325, 0, 0, 524, 0, 0, 0, 298,
	0, 0, 233, 0, 0, 0, 477, 0, 284, 266,
	537, 425, 0, 282, 236, 310, 274, 316, 300, 324,
	278, 275, 176, 301, 205, 247, 187, 189, 201, 208,
	210, 212, 213, 256, 257, 269, 289, 303, 304, 305,
	204, 197, 283, 198, 222, 199, 177, 291, 200, 179,
	270, 308, 0, 218, 279, 243, 180, 242, 271, 307,
	306, 188, 332, 338, 339, 343, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 337, 216, 173, 174, 320, 522, 262,
	0, 536, 517, 519, 520, 523, 527, 528, 529, 530,
	531, 533, 535, 539, 287, 0, 0, 0, 0, 0,
	227, 268, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 318, 330, 347,
	350, 0, 0, 0, 178, 349, 0, 2434, 0, 0,
	0, 2435, 0, 538, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 481, 252, 253, 254, 255, 525, 0,
	195, 348, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	215, 221, 0, 223, 194, 267, 217, 327, 230, 0,
	0, 0, 0, 0, 259, 226, 292, 231, 237, 280,
	326, 265, 285, 192, 317, 293, 241, 0, 0, 547,
	521, 546, 548, 549, 545, 550, 551, 532, 443, 0,
	486, 543, 542, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 235,
	0, 276, 214, 510, 490, 491, 492, 442, 493, 488,
	489, 511, 484, 507, 508, 466, 469, 494, 506, 495,
	509, 512, 513, 552, 553, 501, 554, 498, 514, 505,
	504, 496, 485, 515, 516, 470, 468, 499, 500, 487,
	302, 479, 0, 333, 334, 335, 319, 0, 206, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 440, 0, 0, 0, 209, 1239,
	0, 234, 0, 0, 0, 471, 0, 0, 294, 248,
	0, 0, 0, 0, 526, 534, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 433, 0, 0, 464,
	503, 502, 451, 460, 0, 0, 190, 452, 0, 459,
	453, 457, 456, 454, 455, 0, 518, 0, 0, 0,
	0, 0, 0, 424, 437, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 435,
	0, 0, 0, 0, 480, 0, 436, 0, 0, 1328,
	461, 462, 0, 0, 181, 299, 315, 191, 290, 328,
	196, 297, 186, 263, 286, 0, 0, 183, 313, 296,
	245, 228, 229, 182, 0, 281, 207, 220, 203, 261,
	458, 478, 483, 202, 540, 476, 323, 185, 0, 322,
	260, 309, 314, 246, 240, 184, 311, 244, 239, 232,
	211, 541, 224, 272, 238, 273, 225, 250, 249, 251,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 0,
	0, 325, 0, 0, 524, 0, 0, 0, 298, 0,
	0, 233, 0, 0, 0, 477, 0, 284, 266, 537,
	425, 0, 282, 236, 310, 274, 316, 300, 324, 278,
	275, 176, 301, 205, 247, 187, 189, 201, 208, 210,
	212, 213, 256, 257, 269, 289, 303, 304, 305, 204,
	197, 283, 198, 222, 199, 177, 291, 200, 179, 270,
	308, 0, 218, 279, 243, 180, 242, 271, 307, 306,
	188, 332, 338, 339, 343, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 337, 216, 173, 174, 320, 522, 262, 0,
	536, 517, 519, 520, 523, 527, 528, 529, 530, 531,
	533, 535, 539, 287, 0, 0, 0, 0, 0, 227,
	268, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 318, 330, 347, 350,
	0, 0, 0, 178, 349, 0, 0, 0, 0, 0,
	0, 0, 538, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 481, 252, 253, 254, 255, 525, 0, 195,
	348, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 215,
	221, 0, 223, 194, 267, 217, 327, 230, 0, 0,
	0, 0, 0, 259, 226, 292, 231, 237, 280, 326,
	265, 285, 192, 317, 293, 241, 0, 0, 547, 521,
	546, 548, 549, 545, 550, 551, 532, 443, 0, 486,
	543, 542, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 235, 0,
	276, 214, 510, 490, 491, 492, 442, 493, 488, 489,
	511, 484, 507, 508, 466, 469, 494, 506, 495, 509,
	512, 513, 552, 553, 501, 554, 498, 514, 505, 504,
	496, 485, 515, 516, 470, 468, 499, 500, 487, 126,
	302, 479, 333, 334, 335, 319, 0, 206, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 440, 0, 0, 0, 209, 0,
	0, 234, 0, 0, 0, 471, 0, 0, 294, 248,
	0, 0, 0, 0, 526, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 0, 0, 464,
	503, 502, 451, 460, 0, 0, 190, 452, 0, 459,
	453, 457, 456, 454, 455, 0, 518, 0, 0, 0,
	0, 0, 0, 424, 437, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 435,
	0, 0, 0, 0, 480, 0, 436, 0, 0, 482,
	461, 462, 0, 0, 181, 299, 315, 191, 290, 328,
	196, 297, 186, 263, 286, 0, 0, 183, 313, 296,
	245, 228, 229, 182, 0, 281, 207, 220, 203, 261,
	458, 478, 483, 202, 540, 476, 323, 185, 0, 322,
	260, 309, 314, 246, 240, 184, 311, 244, 239, 232,
	211, 541, 224, 272, 238, 273, 225, 250, 249, 251,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 0,
	0, 325, 0, 0, 524, 0, 0, 0, 298, 0,
	0, 233, 0, 0, 0, 477, 0, 284, 266, 537,
	425, 0, 282, 236, 310, 274, 316, 300, 324, 278,
	275, 176, 301, 205, 247, 187, 189, 201, 208, 210,
	212, 213, 256, 257, 269, 289, 303, 304, 305, 204,
	197, 283, 198, 222, 199, 177, 291, 200, 179, 270,
	308, 0, 218, 279, 243, 180, 242, 271, 307, 306,
	188, 332, 338, 339, 343, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 337, 216, 173, 174, 320, 522, 262, 0,
	536, 517, 519, 520, 523, 527, 528, 529, 530, 531,
	533, 535, 539, 287, 0, 0, 0, 0, 0, 227,
	268, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 318, 330, 347, 350,
	0, 0, 0, 178, 349, 0, 0, 0, 0, 0,
	0, 0, 538, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 481, 252, 253, 254, 255, 525, 0, 195,
	348, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 215,
	221, 0, 223, 194, 267, 217, 327, 230, 0, 0,
	0, 0, 0, 259, 226, 292, 231, 237, 280, 326,
	265, 285, 192, 317, 293, 241, 0, 0, 547, 521,
	546, 548, 549, 545, 550, 551, 532, 443, 0, 486,
	543, 542, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 235, 98,
	276, 214, 510, 490, 491, 492, 442, 493, 488, 489,
	511, 484, 507, 508, 466, 469, 494, 506, 495, 509,
	512, 513, 552, 553, 501, 554, 498, 514, 505, 504,
	496, 485, 515, 516, 470, 468, 499, 500, 487, 302,
	479, 0, 333, 334, 335, 319, 0, 206, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 440, 0, 0, 0, 209, 2664, 0,
	234, 0, 0, 0, 471, 0, 0, 294, 248, 0,
	0, 0, 0, 526, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 0, 0, 464, 503,
	502, 451, 460, 0, 0, 190, 452, 0, 459, 453,
	457, 456, 454, 455, 0, 518, 0, 0, 0, 0,
	0, 0, 424, 437, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 435, 0,
	0, 0, 0, 480, 0, 436, 0, 0, 482, 461,
	462, 0, 0, 181, 299, 315, 191, 290, 328, 196,
	297, 186, 263, 286, 0, 0, 183, 313, 296, 245,
	228, 229, 182, 0, 281, 207, 220, 203, 261, 458,
	478, 483, 202, 540, 476, 323, 185, 0, 322, 260,
	309, 314, 246, 240, 184, 311, 244, 239, 232, 211,
	541, 224, 272, 238, 273, 225, 250, 249, 251, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 0, 0,
	325, 0, 0, 524, 0, 0, 0, 298, 0, 0,
	233, 0, 0, 0, 477, 0, 284, 266, 537, 425,
	0, 282, 236, 310, 274, 316, 300, 324, 278, 275,
	176, 301, 205, 247, 187, 189, 201, 208, 210, 212,
	213, 256, 257, 269, 289, 303, 304, 305, 204, 197,
	283, 198, 222, 199, 177, 291, 200, 179, 270, 308,
	0, 218, 279, 243, 180, 242, 271, 307, 306, 188,
	332, 338, 339, 343, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 337, 216, 173, 174, 320, 522, 262, 0, 536,
	517, 519, 520, 523, 527, 528, 529, 530, 531, 533,
	535, 539, 287, 0, 0, 0, 0, 0, 227, 268,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 318, 330, 347, 350, 0,
	0, 0, 178, 349, 0, 0, 0, 0, 0, 0,
	0, 538, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 481, 252, 253, 254, 255, 525, 0, 195, 348,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 215, 221,
	0, 223, 194, 267, 217, 327, 230, 0, 0, 0,
	0, 0, 259, 226, 292, 231, 237, 280, 326, 265,
	285, 192, 317, 293, 241, 0, 0, 547, 521, 546,
	548, 549, 545, 550, 551, 532, 443, 0, 486, 543,
	542, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 235, 0, 276,
	214, 510, 490, 491, 492, 442, 493, 488, 489, 511,
	484, 507, 508, 466, 469, 494, 506, 495, 509, 512,
	513, 552, 553, 501, 554, 498, 514, 505, 504, 496,
	485, 515, 516, 470, 468, 499, 500, 487, 302, 479,
	0, 333, 334, 335, 319, 0, 206, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 440, 0, 0, 0, 209, 1239, 0, 234,
	0, 0, 0, 471, 0, 0, 294, 248, 0, 0,
	0, 0, 526, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 0, 0, 464, 503, 502,
	451, 460, 0, 0, 190, 452, 0, 459, 453, 457,
	456, 454, 455, 0, 518, 0, 0, 0, 0, 0,
	0, 424, 437, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 435, 0, 0,
	0, 0, 480, 0, 436, 0, 0, 482, 461, 462,
	0, 0, 181, 299, 315, 191, 290, 328, 196, 297,
	186, 263, 286, 0, 0, 183, 313, 296, 245, 228,
	229, 182, 0, 281, 207, 220, 203, 261, 458, 478,
	483, 202, 540, 476, 323, 185, 0, 322, 260, 309,
	314, 246, 240, 184, 311, 244, 239, 232, 211, 541,
	224, 272, 238, 273, 225, 250, 249, 251, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 0, 0, 325,
	0, 0, 524, 0, 0, 0, 298, 0, 0, 233,
	0, 0, 0, 477, 0, 284, 266, 537, 425, 0,
	282, 236, 310, 274, 316, 300, 324, 278, 275, 176,
	301, 205, 247, 187, 189, 201, 208, 210, 212, 213,
	256, 257, 269, 289, 303, 304, 305, 204, 197, 283,
	198, 222, 199, 177, 291, 200, 179, 270, 308, 0,
	218, 279, 243, 180, 242, 271, 307, 306, 188, 332,
	338, 339, 343, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	337, 216, 173, 174, 320, 522, 262, 0, 536, 517,
	519, 520, 523, 527, 528, 529, 530, 531, 533, 535,
	539, 287, 0, 0, 0, 0, 0, 227, 268, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 318, 330, 347, 350, 0, 0,
	0, 178, 349, 0, 0, 0, 0, 0, 0, 0,
	538, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	481, 252, 253, 254, 255, 525, 0, 195, 348, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 215, 221, 0,
	223, 194, 267, 217, 327, 230, 0, 0, 0, 0,
	0, 259, 226, 292, 231, 237, 280, 326, 265, 285,
	192, 317, 293, 241, 0, 0, 547, 521, 546, 548,
	549, 545, 550, 551, 532, 443, 0, 486, 543, 542,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 235, 0, 276, 214,
	510, 490, 491, 492, 442, 493, 488, 489, 511, 484,
	507, 508, 466, 469, 494, 506, 495, 509, 512, 513,
	552, 553, 501, 554, 498, 514, 505, 504, 496, 485,
	515, 516, 470, 468, 499, 500, 487, 302, 479, 0,
	333, 334, 335, 319, 0, 206, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 440, 0, 0, 0, 209, 0, 0, 234, 0,
	0, 0, 471, 0, 0, 294, 248, 0, 0, 0,
	0, 526, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 0, 0, 464, 503, 502, 451,
	460, 0, 0, 190, 452, 0, 459, 453, 457, 456,
	454, 455, 0, 518, 0, 0, 0, 0, 0, 0,
	424, 437, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 435, 1016, 0, 0,
	0, 480, 0, 436, 0, 0, 482, 461, 462, 0,
	0, 181, 299, 315, 191, 290, 328, 196, 297, 186,
	263, 286, 0, 0, 183, 313, 296, 245, 228, 229,
	182, 0, 281, 207, 220, 203, 261, 458, 478, 483,
	202, 540, 476, 323, 185, 0, 322, 260, 309, 314,
	246, 240, 184, 311, 244, 239, 232, 211, 541, 224,
	272, 238, 273, 225, 250, 249, 251, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 325, 0,
	0, 524, 0, 0, 0, 298, 0, 0, 233, 0,
	0, 0, 477, 0, 284, 266, 537, 425, 0, 282,
	236, 310, 274, 316, 300, 324, 278, 275, 176, 301,
	205, 247, 187, 189, 201, 208, 210, 212, 213, 256,
	257, 269, 289, 303, 304, 305, 204, 197, 283, 198,
	222, 199, 177, 291, 200, 179, 270, 308, 0, 218,
	279, 243, 180, 242, 271, 307, 306, 188, 332, 338,
	339, 343, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 337,
	216, 173, 174, 320, 522, 262, 0, 536, 517, 519,
	520, 523, 527, 528, 529, 530, 531, 533, 535, 539,
	287, 0, 0, 0, 0, 0, 227, 268, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 318, 330, 347, 350, 0, 0, 0,
	178, 349, 0, 0, 0, 0, 0, 0, 0, 538,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 481,
	252, 253, 254, 255, 525, 0, 195, 348, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 215, 221, 0, 223,
	194, 267, 217, 327, 230, 0, 0, 0, 0, 0,
	259, 226, 292, 231, 237, 280, 326, 265, 285, 192,
	317, 293, 241, 0, 0, 547, 521, 546, 548, 549,
	545, 550, 551, 532, 443, 0, 486, 543, 542, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 235, 0, 276, 214, 510,
	490, 491, 492, 442, 493, 488, 489, 511, 484, 507,
	508, 466, 469, 494, 506, 495, 509, 512, 513, 552,
	553, 501, 554, 498, 514, 505, 504, 496, 485, 515,
	516, 470, 468, 499, 500, 487, 0, 0, 0, 333,
	334, 335, 319, 0, 206, 302, 479, 0, 0, 1619,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 440,
	0, 0, 0, 209, 0, 0, 234, 0, 0, 0,
	471, 0, 0, 294, 248, 0, 0, 0, 0, 526,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 0, 0, 464, 503, 502, 451, 460, 0,
	0, 190, 452, 0, 459, 453, 457, 456, 454, 455,
	0, 518, 0, 0, 0, 0, 0, 0, 424, 437,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 435, 0, 0, 0, 0, 480,
	0, 436, 0, 0, 482, 461, 462, 0, 0, 181,
	299, 315, 191, 290, 328, 196, 297, 186, 263, 286,
	0, 0, 183, 313, 296, 245, 228, 229, 182, 0,
	281, 207, 220, 203, 261, 458, 478, 483, 202, 540,
	476, 323, 185, 0, 322, 260, 309, 314, 246, 240,
	184, 311, 244, 239, 232, 211, 541, 224, 272, 238,
	273, 225, 250, 249, 251, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 0, 0, 325, 0, 0, 524,
	0, 0, 0, 298, 0, 0, 233, 0, 0, 0,
	477, 0, 284, 266, 537, 425, 0, 282, 236, 310,
	274, 316, 300, 324, 278, 275, 176, 301, 205, 247,
	187, 189, 201, 208, 210, 212, 213, 256, 257, 269,
	289, 303, 304, 305, 204, 197, 283, 198, 222, 199,
	177, 291, 200, 179, 270, 308, 0, 218, 279, 243,
	180, 242, 271, 307, 306, 188, 332, 338, 339, 343,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 337, 216, 173,
	174, 320, 522, 262, 0, 536, 517, 519, 520, 523,
	527, 528, 529, 530, 531, 533, 535, 539, 287, 0,
	0, 0, 0, 0, 227, 268, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 318, 330, 347, 350, 0, 0, 0, 178, 349,
	0, 0, 0, 0, 0, 0, 0, 538, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 481, 252, 253,
	254, 255, 525, 0, 195, 348, 277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 215, 221, 0, 223, 194, 267,
	217, 327, 230, 0, 0, 0, 0, 0, 259, 226,
	292, 231, 237, 280, 326, 265, 285, 192, 317, 293,
	241, 0, 0, 547, 521, 546, 548, 549, 545, 550,
	551, 532, 443, 0, 486, 543, 542, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 235, 0, 276, 214, 510, 490, 491,
	492, 442, 493, 488, 489, 511, 484, 507, 508, 466,
	469, 494, 506, 495, 509, 512, 513, 552, 553, 501,
	554, 498, 514, 505, 504, 496, 485, 515, 516, 470,
	468, 499, 500, 487, 302, 479, 0, 333, 334, 335,
	319, 0, 206, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 440, 0,
	0, 0, 209, 0, 0, 234, 0, 0, 0, 471,
	0, 0, 294, 248, 0, 0, 0, 0, 526, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 0, 464, 503, 502, 451, 460, 0, 0,
	190, 452, 0, 459, 453, 457, 456, 454, 455, 0,
	518, 0, 0, 0, 0, 0, 0, 424, 437, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 434, 435, 0, 0, 0, 0, 480, 0,
	436, 0, 0, 482, 461, 462, 0, 0, 181, 299,
	315, 191, 290, 328, 196, 297, 186, 263, 286, 0,
	0, 183, 313, 296, 245, 228, 229, 182, 0, 281,
	207, 220, 203, 261, 458, 478, 483, 202, 540, 476,
	323, 185, 0, 322, 260, 309, 314, 246, 240, 184,
	311, 244, 239, 232, 211, 541, 224, 272, 238, 273,
	225, 250, 249, 251, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 0, 0, 325, 0, 0, 524, 0,
	0, 0, 298, 0, 0, 233, 0, 0, 0, 477,
	0, 284, 266, 537, 425, 0, 282, 236, 310, 274,
	316, 300, 324, 278, 275, 176, 301, 205, 247, 187,
	189, 201, 208, 210, 212, 213, 256, 257, 269, 289,
	303, 304, 305, 204, 197, 283, 198, 222, 199, 177,
	291, 200, 179, 270, 308, 0, 218, 279, 243, 180,
	242, 271, 307, 306, 188, 332, 338, 339, 343, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 337, 216, 173, 174,
	320, 522, 262, 0, 536, 517, 519, 520, 523, 527,
	528, 529, 530, 531, 533, 535, 539, 287, 0, 0,
	0, 0, 0, 227, 268, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	318, 330, 347, 350, 0, 0, 0, 178, 349, 0,
	0, 0, 0, 0, 0, 0, 538, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 481, 252, 253, 254,
	255, 525, 0, 195, 348, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 215, 221, 0, 223, 194, 267, 217,
	327, 230, 0, 0, 0, 0, 0, 259, 226, 292,
	231, 237, 280, 326, 265, 285, 192, 317, 293, 241,
	0, 0, 547, 521, 546, 548, 549, 545, 550, 551,
	532, 443, 0, 486, 543, 542, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 235, 0, 276, 214, 510, 490, 491, 492,
	442, 493, 488, 489, 511, 484, 507, 508, 466, 469,
	494, 506, 495, 509, 512, 513, 552, 553, 501, 554,
	498, 514, 505, 504, 496, 485, 515, 516, 470, 468,
	499, 500, 487, 302, 479, 0, 333, 334, 335, 319,
	0, 206, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 0, 0, 0, 440, 0, 0,
	0, 209, 0, 0, 234, 0, 0, 0, 471, 0,
	0, 294, 248, 0, 0, 0, 0, 526, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 0, 464, 503, 502, 451, 460, 0, 0, 190,
	452, 0, 459, 453, 457, 456, 454, 455, 0, 518,
	0, 0, 0, 0, 0, 0, 0, 437, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 435, 0, 0, 0, 0, 480, 0, 436,
	0, 0, 482, 461, 462, 0, 0, 181, 299, 315,
	191, 290, 328, 196, 297, 186, 263, 286, 0, 0,
	183, 313, 296, 245, 228, 229, 182, 0, 281, 207,
	220, 203, 261, 458, 478, 483, 202, 540, 476, 323,
	185, 0, 322, 260, 309, 314, 246, 240, 184, 311,
	244, 239, 232, 211, 541, 224, 272, 238, 273, 225,
	250, 249, 251, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 0, 0, 325, 0, 0, 524, 0, 0,
	0, 298, 0, 0, 233, 0, 0, 0, 477, 0,
	284, 266, 537, 0, 0, 282, 236, 310, 274, 316,
	300, 324, 278, 275, 176, 301, 205, 247, 187, 189,
	201, 208, 210, 212, 213, 256, 257, 269, 289, 303,
	304, 305, 204, 197, 283, 198, 222, 199, 177, 291,
	200, 179, 270, 308, 0, 218, 279, 243, 180, 242,
	271, 307, 306, 188, 332, 1101, 1102, 343, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 337, 216, 173, 174, 320,
	522, 262, 0, 536, 517, 519, 520, 523, 527, 528,
	529, 530, 531, 533, 535, 539, 287, 0, 0, 0,
	0, 0, 227, 268, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 318,
	330, 347, 350, 0, 0, 0, 178, 349, 0, 0,
	0, 0, 0, 0, 0, 538, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 481, 252, 253, 254, 255,
	525, 0, 195, 348, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 215, 221, 0, 223, 194, 267, 217, 327,
	230, 0, 0, 0, 0, 0, 259, 226, 292, 231,
	237, 280, 326, 265, 285, 192, 317, 293, 241, 0,
	0, 547, 521, 546, 548, 549, 545, 550, 551, 532,
	443, 0, 486, 543, 542, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 235, 0, 276, 214, 510, 490, 491, 492, 442,
	493, 488, 489, 511, 484, 507, 508, 466, 469, 494,
	506, 495, 509, 512, 513, 552, 553, 501, 554, 498,
	514, 505, 504, 496, 485, 515, 516, 470, 468, 499,
	500, 487, 302, 479, 0, 333, 334, 335, 319, 0,
	206, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 440, 0, 0, 0,
	209, 0, 0, 234, 0, 0, 0, 471, 0, 0,
	294, 248, 0, 0, 0, 0, 526, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 464, 503, 502, 451, 460, 0, 0, 190, 452,
	0, 459, 453, 457, 456, 454, 455, 0, 518, 0,
	0, 0, 0, 0, 0, 424, 437, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 435, 0, 0, 0, 0, 480, 0, 436, 0,
	0, 482, 461, 462, 0, 0, 181, 299, 315, 191,
	290, 328, 196, 297, 186, 263, 286, 0, 0, 183,
	313, 296, 245, 228, 229, 182, 0, 281, 207, 220,
	203, 261, 458, 478, 483, 202, 540, 476, 323, 185,
	0, 322, 260, 309, 314, 246, 240, 184, 311, 244,
	239, 232, 211, 541, 224, 272, 238, 273, 225, 250,
	249, 251, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 0, 0, 325, 0, 0, 524, 0, 0, 0,
	298, 0, 0, 233, 0, 0, 0, 477, 0, 284,
	266, 537, 425, 0, 282, 236, 310, 274, 316, 300,
	324, 278, 275, 176, 301, 205, 247, 187, 189, 201,
	208, 210, 212, 213, 256, 257, 269, 289, 303, 304,
	305, 204, 197, 283, 198, 222, 199, 177, 291, 200,
	179, 270, 308, 0, 218, 279, 243, 180, 242, 271,
	307, 306, 188, 332, 338, 339, 343, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 337, 216, 173, 174, 320, 522,
	262, 0, 536, 517, 519, 520, 523, 527, 528, 529,
	530, 531, 533, 535, 539, 287, 0, 0, 0, 0,
	0, 227, 268, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 318, 330,
	347, 350, 0, 0, 0, 178, 349, 0, 0, 0,
	0, 0, 0, 0, 538, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 481, 252, 253, 254, 255, 525,
	0, 195, 348, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 215, 221, 0, 223, 194, 267, 217, 327, 230,
	0, 0, 0, 0, 0, 259, 226, 292, 231, 237,
	280, 326, 265, 285, 192, 317, 293, 241, 0, 0,
	547, 521, 546, 548, 549, 545, 550, 551, 532, 443,
	0, 486, 543, 542, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	235, 0, 276, 214, 510, 490, 491, 492, 442, 493,
	488, 489, 511, 484, 507, 508, 466, 469, 494, 506,
	495, 509, 512, 513, 552, 553, 501, 554, 498, 514,
	505, 504, 496, 485, 515, 516, 470, 468, 499, 500,
	487, 302, 479, 0, 333, 334, 335, 319, 0, 206,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 440, 0, 0, 0, 209,
	0, 0, 234, 0, 0, 0, 471, 0, 0, 294,
	248, 0, 0, 0, 0, 526, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 0, 0,
	464, 503, 502, 451, 460, 0, 0, 190, 452, 0,
	459, 453, 457, 456, 454, 455, 0, 518, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	435, 0, 0, 0, 0, 480, 0, 436, 0, 0,
	482, 461, 462, 0, 0, 181, 299, 315, 191, 290,
	328, 196, 297, 186, 263, 286, 0, 0, 183, 313,
	296, 245, 228, 229, 182, 0, 281, 207, 220, 203,
	261, 458, 478, 483, 202, 540, 476, 323, 185, 0,
	322, 260, 309, 314, 246, 240, 184, 311, 244, 239,
	232, 211, 541, 224, 272, 238, 273, 225, 250, 249,
	251, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	0, 0, 325, 0, 0, 524, 0, 0, 0, 298,
	0, 0, 233, 0, 0, 0, 477, 0, 284, 266,
	537, 0, 0, 282, 236, 310, 274, 316, 300, 324,
	278, 275, 176, 301, 205, 247, 187, 189, 201, 208,
	210, 212, 213, 256, 257, 269, 289, 303, 304, 305,
	204, 197, 283, 198, 222, 199, 177, 291, 200, 179,
	270, 308, 0, 218, 279, 243, 180, 242, 271, 307,
	306, 188, 332, 338, 339, 343, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 337, 216, 173, 174, 320, 522, 262,
	0, 536, 517, 519, 520, 523, 527, 528, 529, 530,
	531, 533, 535, 539, 287, 0, 0, 0, 0, 0,
	227, 268, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 318, 330, 347,
	350, 0, 0, 0, 178, 349, 0, 0, 0, 0,
	0, 0, 0, 538, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 481, 252, 253, 254, 255, 525, 0,
	195, 348, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	215, 221, 0, 223, 194, 267, 217, 327, 230, 0,
	0, 0, 0, 0, 259, 226, 292, 231, 237, 280,
	326, 265, 285, 192, 317, 293, 241, 0, 0, 547,
	521, 546, 548, 549, 545, 550, 551, 532, 443, 0,
	486, 543, 542, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 235,
	0, 276, 214, 510, 490, 491, 492, 442, 493, 488,
	489, 511, 484, 507, 508, 466, 469, 494, 506, 495,
	509, 512, 513, 552, 553, 501, 554, 498, 514, 505,
	504, 496, 485, 515, 516, 470, 468, 499, 500, 487,
	0, 0, 0, 333, 334, 335, 319, 0, 206, 126,
	302, 37, 116, 97, 0, 0, 0, 0, 0, 0,
	0, 264, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 294, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 299, 315, 191, 290, 328,
	196, 297, 186, 263, 286, 0, 0, 183, 313, 296,
	245, 228, 229, 182, 0, 281, 207, 220, 203, 261,
	0, 312, 340, 202, 331, 0, 323, 185, 0, 322,
	260, 309, 314, 246, 240, 184, 311, 244, 239, 232,
	211, 0, 224, 272, 238, 273, 225, 250, 249, 251,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 325, 0, 0, 0, 0, 0, 0, 298, 0,
	0, 233, 0, 0, 0, 341, 0, 284, 266, 0,
	0, 0, 282, 236, 310, 274, 316, 300, 324, 278,
	275, 176, 301, 205, 247, 187, 189, 201, 208, 210,
	212, 213, 256, 257, 269, 289, 303, 304, 305, 204,
	197, 283, 198, 222, 199, 177, 291, 200, 179, 270,
	308, 0, 218, 279, 243, 180, 242, 271, 307, 306,
	188, 332, 338, 339, 343, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 337, 216, 173, 174, 320, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 336, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 227,
	268, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 318, 330, 347, 350,
	0, 0, 0, 178, 349, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 345, 252, 253, 254, 255, 362, 364, 195,
	348, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 215,
	221, 0, 223, 194, 267, 217, 327, 230, 0, 0,
	0, 0, 0, 259, 226, 292, 231, 237, 280, 326,
	265, 285, 192, 317, 293, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 38, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 235, 98,
	276, 214, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 0, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 302,
	0, 0, 333, 334, 335, 319, 0, 206, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 294, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 2071, 2074, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 299, 315, 191, 290, 328, 196,
	297, 186, 263, 286, 0, 0, 183, 313, 296, 245,
	228, 229, 182, 0, 281, 207, 220, 203, 261, 0,
	312, 340, 202, 331, 0, 323, 185, 0, 322, 260,
	309, 314, 246, 240, 184, 311, 244, 239, 232, 211,
	0, 224, 272, 238, 273, 225, 250, 249, 251, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	325, 0, 0, 0, 2068, 0, 2067, 298, 2069, 2072,
	233, 0, 0, 0, 341, 0, 284, 266, 0, 0,
	0, 282, 236, 310, 274, 316, 300, 324, 278, 275,
	176, 301, 205, 247, 187, 189, 201, 208, 210, 212,
	213, 256, 257, 269, 289, 303, 304, 305, 204, 197,
	283, 198, 222, 199, 177, 291, 200, 179, 270, 308,
	2073, 218, 279, 243, 180, 242, 271, 307, 306, 188,
	332, 338, 339, 343, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 337, 216, 173, 174, 320, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 336, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 227, 268,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 318, 330, 347, 350, 0,
	0, 0, 178, 349, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 345, 252, 253, 254, 255, 219, 0, 195, 348,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 215, 221,
	0, 223, 194, 267, 217, 327, 230, 0, 0, 0,
	0, 0, 259, 226, 292, 231, 237, 280, 326, 265,
	285, 192, 317, 293, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 235, 0, 276,
	214, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 0, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 302, 0,
	0, 333, 334, 335, 319, 0, 206, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1351, 0, 0, 0, 0, 209, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 294, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	1352, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 759, 760, 761,
	758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 299, 315, 191, 290, 328, 196, 297,
	186, 263, 286, 0, 0, 183, 313, 296, 245, 228,
	229, 182, 0, 281, 207, 220, 203, 261, 0, 312,
	340, 202, 331, 0, 323, 185, 0, 322, 260, 309,
	314, 246, 240, 184, 311, 244, 239, 232, 211, 0,
	224, 272, 238, 273, 225, 250, 249, 251, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 0, 298, 0, 0, 233,
	0, 0, 0, 341, 0, 284, 266, 0, 0, 0,
	282, 236, 310, 274, 316, 300, 324, 278, 275, 176,
	301, 205, 247, 187, 189, 201, 208, 210, 212, 213,
	256, 257, 269, 289, 303, 304, 305, 204, 197, 283,
	198, 222, 199, 177, 291, 200, 179, 270, 308, 0,
	218, 279, 243, 180, 242, 271, 307, 306, 188, 332,
	338, 339, 343, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	337, 216, 173, 174, 320, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 336, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 227, 268, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 318, 330, 347, 350, 0, 0,
	0, 178, 349, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	345, 252, 253, 254, 255, 219, 0, 195, 348, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 215, 221, 0,
	223, 194, 267, 217, 327, 230, 0, 0, 0, 0,
	0, 259, 226, 292, 231, 237, 280, 326, 265, 285,
	192, 317, 293, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 235, 0, 276, 214,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 0, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 302, 0, 0,
	333, 334, 335, 319, 0, 206, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 641, 0, 234, 0,
	0, 0, 0, 0, 0, 294, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 649, 650, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 299, 315, 191, 290, 328, 196, 297, 186,
	263, 286, 0, 0, 183, 313, 296, 245, 228, 229,
	182, 0, 281, 207, 220, 203, 261, 0, 312, 340,
	202, 331, 627, 323, 185, 626, 322, 260, 309, 314,
	246, 240, 184, 311, 244, 239, 232, 211, 0, 224,
	272, 238, 273, 225, 250, 249, 251, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 233, 0,
	0, 0, 341, 0, 284, 266, 0, 0, 0, 282,
	236, 310, 274, 316, 300, 324, 639, 275, 176, 301,
	205, 247, 187, 189, 201, 208, 210, 212, 213, 256,
	257, 269, 289, 303, 304, 305, 204, 197, 283, 198,
	222, 199, 177, 291, 200, 179, 270, 308, 0, 218,
	279, 243, 180, 242, 271, 307, 306, 188, 332, 338,
	339, 343, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 337,
	216, 173, 174, 320, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 336, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 227, 268, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 318, 330, 347, 350, 0, 0, 0,
	178, 349, 0, 0, 0, 0, 0, 0, 640, 321,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 643,
	252, 253, 254, 255, 219, 0, 195, 348, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 215, 221, 0, 223,
	194, 267, 217, 327, 230, 0, 0, 0, 0, 0,
	651, 646, 647, 231, 237, 280, 326, 265, 285, 192,
	317, 293, 648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 235, 0, 276, 214, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 0, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 126, 302, 0, 333,
	334, 335, 319, 0, 206, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 294, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 1372, 0, 133, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 299, 315, 191, 290, 328, 196, 297, 186,
	263, 286, 0, 0, 183, 313, 296, 245, 228, 229,
	182, 0, 281, 207, 220, 203, 261, 0, 312, 340,
	202, 331, 0, 323, 185, 0, 322, 260, 309, 314,
	246, 240, 184, 311, 244, 239, 232, 211, 0, 224,
	272, 238, 273, 225, 250, 249, 251, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 233, 0,
	0, 0, 341, 0, 284, 266, 0, 0, 0, 282,
	236, 310, 274, 316, 300, 324, 278, 275, 176, 301,
	205, 247, 187, 189, 201, 208, 210, 212, 213, 256,
	257, 269, 289, 303, 304, 305, 204, 197, 283, 198,
	222, 199, 177, 291, 200, 179, 270, 308, 0, 218,
	279, 243, 180, 242, 271, 307, 306, 188, 332, 338,
	339, 343, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 337,
	216, 173, 174, 320, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 336, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 227, 268, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 318, 330, 347, 350, 0, 0, 0,
	178, 349, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 345,
	252, 253, 254, 255, 219, 0, 195, 348, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 215, 221, 0, 223,
	194, 267, 217, 327, 230, 0, 0, 0, 0, 0,
	259, 226, 292, 231, 237, 280, 326, 265, 285, 192,
	317, 293, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 235, 98, 276, 214, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 0, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 126, 302, 0, 333,
	334, 335, 319, 0, 206, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 294, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 1363, 0, 133, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 299, 315, 191, 290, 328, 196, 297, 186,
	263, 286, 0, 0, 183, 313, 296, 245, 228, 229,
	182, 0, 281, 207, 220, 203, 261, 0, 312, 340,
	202, 331, 0, 323, 185, 0, 322, 260, 309, 314,
	246, 240, 184, 311, 244, 239, 232, 211, 0, 224,
	272, 238, 273, 225, 250, 249, 251, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 233, 0,
	0, 0, 341, 0, 284, 266, 0, 0, 0, 282,
	236, 310, 274, 316, 300, 324, 278, 275, 176, 301,
	205, 247, 187, 189, 201, 208, 210, 212, 213, 256,
	257, 269, 289, 303, 304, 305, 204, 197, 283, 198,
	222, 199, 177, 291, 200, 179, 270, 308, 0, 218,
	279, 243, 180, 242, 271, 307, 306, 188, 332, 338,
	339, 343, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 337,
	216, 173, 174, 320, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 336, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 227, 268, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 318, 330, 347, 350, 0, 0, 0,
	178, 349, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 345,
	252, 253, 254, 255, 219, 0, 195, 348, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 215, 221, 0, 223,
	194, 267, 217, 327, 230, 0, 0, 0, 0, 0,
	259, 226, 292, 231, 237, 280, 326, 265, 285, 192,
	317, 293, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 235, 98, 276, 214, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 0, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 302, 0, 0, 333,
	334, 335, 319, 0, 206, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 294, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 649, 650, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 299, 315, 191, 290, 328, 196, 297, 186, 263,
	286, 0, 0, 183, 313, 296, 245, 228, 229, 182,
	0, 281, 207, 220, 203, 261, 0, 312, 340, 202,
	331, 627, 323, 185, 626, 322, 260, 309, 314, 246,
	240, 184, 311, 244, 239, 232, 211, 0, 224, 272,
	238, 273, 225, 250, 249, 251, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 0,
	0, 0, 0, 0, 298, 0, 0, 233, 0, 0,
	0, 341, 0, 284, 266, 0, 0, 0, 282, 236,
	310, 274, 316, 300, 324, 278, 275, 176, 301, 205,
	247, 187, 189, 201, 208, 210, 212, 213, 256, 257,
	269, 289, 303, 304, 305, 204, 197, 283, 198, 222,
	199, 177, 291, 200, 179, 270, 308, 0, 218, 279,
	243, 180, 242, 271, 307, 306, 188, 332, 338, 339,
	343, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 337, 216,
	173, 174, 320, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 336, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 227, 268, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 318, 330, 347, 350, 0, 0, 0, 178,
	349, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 345, 252,
	253, 254, 255, 219, 0, 195, 348, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 215, 221, 0, 223, 194,
	267, 217, 327, 230, 0, 0, 0, 0, 0, 651,
	646, 647, 231, 237, 280, 326, 265, 285, 192, 317,
	293, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 235, 0, 276, 214, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	0, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 126, 302, 0, 333, 334,
	335, 319, 0, 206, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 294, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1306, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 299, 315, 191, 290, 328, 196, 297, 186, 263,
	286, 0, 0, 183, 313, 296, 245, 228, 229, 182,
	0, 281, 207, 220, 203, 261, 0, 312, 340, 202,
	331, 0, 323, 185, 0, 322, 260, 309, 314, 246,
	240, 184, 311, 244, 239, 232, 211, 0, 224, 272,
	238, 273, 225, 250, 249, 251, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 0,
	0, 0, 0, 0, 298, 0, 0, 233, 0, 0,
	0, 341, 0, 284, 266, 0, 0, 0, 282, 236,
	310, 274, 316, 300, 324, 278, 275, 176, 301, 205,
	247, 187, 189, 201, 208, 210, 212, 213, 256, 257,
	269, 289, 303, 304, 305, 204, 197, 283, 198, 222,
	199, 177, 291, 200, 179, 270, 308, 0, 218, 279,
	243, 180, 242, 271, 307, 306, 188, 332, 338, 339,
	343, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 337, 216,
	173, 174, 320, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 336, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 227, 268, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 318, 330, 347, 350, 0, 0, 0, 178,
	349, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 345, 252,
	253, 254, 255, 219, 0, 195, 348, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 215, 221, 0, 223, 194,
	267, 217, 327, 230, 0, 0, 0, 0, 0, 259,
	226, 292, 231, 237, 280, 326, 265, 285, 192, 317,
	293, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 235, 98, 276, 214, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	0, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 302, 0, 0, 333, 334,
	335, 319, 0, 206, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 1000, 0, 234, 0, 0, 0,
	0, 0, 0, 294, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 0, 0, 998, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 996, 0, 0, 0, 0, 181,
	299, 315, 191, 290, 328, 196, 297, 186, 263, 286,
	0, 0, 183, 313, 296, 245, 228, 229, 182, 0,
	281, 207, 220, 203, 261, 0, 312, 340, 202, 331,
	0, 323, 185, 0, 322, 260, 309, 314, 246, 240,
	184, 311, 244, 239, 232, 211, 0, 224, 272, 238,
	273, 225, 250, 249, 251, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 0, 0, 0,
	0, 0, 0, 298, 0, 0, 233, 0, 0, 0,
	341, 0, 284, 266, 0, 0, 0, 282, 236, 310,
	274, 316, 300, 324, 278, 275, 176, 301, 205, 247,
	187, 189, 201, 208, 210, 212, 213, 256, 257, 269,
	289, 303, 304, 305, 204, 197, 283, 198, 222, 199,
	177, 291, 200, 179, 270, 308, 0, 218, 279, 243,
	180, 242, 271, 307, 306, 188, 332, 338, 339, 343,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 337, 216, 173,
	174, 320, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 336, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 227, 268, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 318, 330, 347, 350, 0, 0, 0, 178, 349,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 345, 252, 253,
	254, 255, 219, 0, 195, 348, 277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 215, 221, 0, 223, 194, 267,
	217, 327, 230, 0, 0, 0, 0, 0, 259, 226,
	292, 231, 237, 280, 326, 265, 285, 192, 317, 293,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 235, 0, 276, 214, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 0,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 302, 0, 0, 333, 334, 335,
	319, 0, 206, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 994, 0, 234, 0, 0, 0, 0,
	0, 0, 294, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 998, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 996, 0, 0, 0, 0, 181, 299,
	315, 191, 290, 328, 196, 297, 186, 263, 286, 0,
	0, 183, 313, 296, 245, 228, 229, 182, 0, 281,
	207, 220, 203, 261, 0, 312, 340, 202, 331, 0,
	323, 185, 0, 322, 260, 309, 314, 246, 240, 184,
	311, 244, 239, 232, 211, 0, 224, 272, 238, 273,
	225, 250, 249, 251, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 233, 0, 0, 0, 341,
	0, 284, 266, 0, 0, 0, 282, 236, 310, 274,
	316, 300, 324, 278, 275, 176, 301, 205, 247, 187,
	189, 201, 208, 210, 212, 213, 256, 257, 269, 289,
	303, 304, 305, 204, 197, 283, 198, 222, 199, 177,
	291, 200, 179, 270, 308, 0, 218, 279, 243, 180,
	242, 271, 307, 306, 188, 332, 338, 339, 343, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 337, 216, 173, 174,
	320, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 336, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 227, 268, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	318, 330, 347, 350, 0, 0, 0, 178, 349, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 345, 252, 253, 254,
	255, 219, 0, 195, 348, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 215, 221, 0, 223, 194, 267, 217,
	327, 230, 0, 0, 0, 0, 0, 259, 226, 292,
	231, 237, 280, 326, 265, 285, 192, 317, 293, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 235, 0, 276, 214, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 0, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 302, 0, 0, 333, 334, 335, 319,
	0, 206, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 294, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2568, 0, 133, 503, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 299, 315,
	191, 290, 328, 196, 297, 186, 263, 286, 0, 0,
	183, 313, 296, 245, 228, 229, 182, 0, 281, 207,
	220, 203, 261, 0, 312, 340, 202, 331, 0, 323,
	185, 0, 322, 260, 309, 314, 246, 240, 184, 311,
	244, 239, 232, 211, 0, 224, 272, 238, 273, 225,
	250, 249, 251, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 0, 0, 0, 0,
	0, 298, 0, 0, 233, 0, 0, 0, 341, 0,
	284, 266, 0, 0, 0, 282, 236, 310, 274, 316,
	300, 324, 278, 275, 176, 301, 205, 247, 187, 189,
	201, 208, 210, 212, 213, 256, 257, 269, 289, 303,
	304, 305, 204, 197, 283, 198, 222, 199, 177, 291,
	200, 179, 270, 308, 0, 218, 279, 243, 180, 242,
	271, 307, 306, 188, 332, 338, 339, 343, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 337, 216, 173, 174, 320,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 336, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 227, 268, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 318,
	330, 347, 350, 0, 0, 0, 178, 349, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 345, 252, 253, 254, 255,
	219, 0, 195, 348, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 215, 221, 0, 223, 194, 267, 217, 327,
	230, 0, 0, 0, 0, 0, 259, 226, 292, 231,
	237, 280, 326, 265, 285, 192, 317, 293, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 235, 0, 276, 214, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 0, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 302, 0, 0, 333, 334, 335, 319, 0,
	206, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	294, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 998, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 996, 0, 0, 0, 0, 181, 299, 315, 191,
	290, 328, 196, 297, 186, 263, 286, 0, 0, 183,
	313, 296, 245, 228, 229, 182, 0, 281, 207, 220,
	203, 261, 0, 312, 340, 202, 331, 0, 323, 185,
	0, 322, 260, 309, 314, 246, 240, 184, 311, 244,
	239, 232, 211, 0, 224, 272, 238, 273, 225, 250,
	249, 251, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 0, 0, 0, 0, 0,
	298, 0, 0, 233, 0, 0, 0, 341, 0, 284,
	266, 0, 0, 0, 282, 236, 310, 274, 316, 300,
	324, 278, 275, 176, 301, 205, 247, 187, 189, 201,
	208, 210, 212, 213, 256, 257, 269, 289, 303, 304,
	305, 204, 197, 283, 198, 222, 199, 177, 291, 200,
	179, 270, 308, 0, 218, 279, 243, 180, 242, 271,
	307, 306, 188, 332, 338, 339, 343, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 337, 216, 173, 174, 320, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	336, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 227, 268, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 318, 330,
	347, 350, 0, 0, 0, 178, 349, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 345, 252, 253, 254, 255, 219,
	0, 195, 348, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 215, 221, 0, 223, 194, 267, 217, 327, 230,
	0, 0, 0, 0, 0, 259, 226, 292, 231, 237,
	280, 326, 265, 285, 192, 317, 293, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	235, 0, 276, 214, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 0, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 302, 0, 0, 333, 334, 335, 319, 0, 206,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 294,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 998, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2205, 0, 0, 0, 0, 181, 299, 315, 191, 290,
	328, 196, 297, 186, 263, 286, 0, 0, 183, 313,
	296, 245, 228, 229, 182, 0, 281, 207, 220, 203,
	261, 0, 312, 340, 202, 331, 0, 323, 185, 0,
	322, 260, 309, 314, 246, 240, 184, 311, 244, 239,
	232, 211, 0, 224, 272, 238, 273, 225, 250, 249,
	251, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 0, 0, 0, 0, 0, 298,
	0, 0, 233, 0, 0, 0, 341, 0, 284, 266,
	0, 0, 0, 282, 236, 310, 274, 316, 300, 324,
	278, 275, 176, 301, 205, 247, 187, 189, 201, 208,
	210, 212, 213, 256, 257, 269, 289, 303, 304, 305,
	204, 197, 283, 198, 222, 199, 177, 291, 200, 179,
	270, 308, 0, 218, 279, 243, 180, 242, 271, 307,
	306, 188, 332, 338, 339, 343, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 337, 216, 173, 174, 320, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 336,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	227, 268, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 318, 330, 347,
	350, 0, 0, 0, 178, 349, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 345, 252, 253, 254, 255, 219, 0,
	195, 348, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	215, 221, 0, 223, 194, 267, 217, 327, 230, 0,
	0, 0, 0, 0, 259, 226, 292, 231, 237, 280,
	326, 265, 285, 192, 317, 293, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 235,
	0, 276, 214, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 0, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	302, 0, 0, 333, 334, 335, 319, 0, 206, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 1754,
	0, 234, 0, 0, 0, 0, 0, 0, 294, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 998, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 299, 315, 191, 290, 328,
	196, 297, 186, 263, 286, 0, 0, 183, 313, 296,
	245, 228, 229, 182, 0, 281, 207, 220, 203, 261,
	0, 312, 340, 202, 331, 0, 323, 185, 0, 322,
	260, 309, 314, 246, 240, 184, 311, 244, 239, 232,
	211, 0, 224, 272, 238, 273, 225, 250, 249, 251,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 0, 0, 0, 0, 298, 0,
	0, 233, 0, 0, 0, 341, 0, 284, 266, 0,
	0, 0, 282, 236, 310, 274, 316, 300, 324, 278,
	275, 176, 301, 205, 247, 187, 189, 201, 208, 210,
	212, 213, 256, 257, 269, 289, 303, 304, 305, 204,
	197, 283, 198, 222, 199, 177, 291, 200, 179, 270,
	308, 0, 218, 279, 243, 180, 242, 271, 307, 306,
	188, 332, 338, 339, 343, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 337, 216, 173, 174, 320, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 336, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 227,
	268, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 318, 330, 347, 350,
	0, 0, 0, 178, 349, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 345, 252, 253, 254, 255, 219, 0, 195,
	348, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 215,
	221, 0, 223, 194, 267, 217, 327, 230, 0, 0,
	0, 0, 0, 259, 226, 292, 231, 237, 280, 326,
	265, 285, 192, 317, 293, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 235, 0,
	276, 214, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 0, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 302,
	0, 0, 333, 334, 335, 319, 0, 206, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 294, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2673, 0, 133, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 299, 315, 191, 290, 328, 196,
	297, 186, 263, 286, 0, 0, 183, 313, 296, 245,
	228, 229, 182, 0, 281, 207, 220, 203, 261, 0,
	312, 340, 202, 331, 0, 323, 185, 0, 322, 260,
	309, 314, 246, 240, 184, 311, 244, 239, 232, 211,
	0, 224, 272, 238, 273, 225, 250, 249, 251, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 298, 0, 0,
	233, 0, 0, 0, 341, 0, 284, 266, 0, 0,
	0, 282, 236, 310, 274, 316, 300, 324, 278, 275,
	176, 301, 205, 247, 187, 189, 201, 208, 210, 212,
	213, 256, 257, 269, 289, 303, 304, 305, 204, 197,
	283, 198, 222, 199, 177, 291, 200, 179, 270, 308,
	0, 218, 279, 243, 180, 242, 271, 307, 306, 188,
	332, 338, 339, 343, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 337, 216, 173, 174, 320, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 336, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 227, 268,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 318, 330, 347, 350, 0,
	0, 0, 178, 349, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 345, 252, 253, 254, 255, 219, 0, 195, 348,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 215, 221,
	0, 223, 194, 267, 217, 327, 230, 0, 0, 0,
	0, 0, 259, 226, 292, 231, 237, 280, 326, 265,
	285, 192, 317, 293, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 235, 0, 276,
	214, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 0, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 302, 0,
	0, 333, 334, 335, 319, 0, 206, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 294, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 503, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 299, 315, 191, 290, 328, 196, 297,
	186, 263, 286, 0, 0, 183, 313, 296, 245, 228,
	229, 182, 0, 281, 207, 220, 203, 261, 0, 312,
	340, 202, 331, 0, 323, 185, 0, 322, 260, 309,
	314, 246, 240, 184, 311, 244, 239, 232, 211, 0,
	224, 272, 238, 273, 225, 250, 249, 251, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 0, 298, 0, 0, 233,
	0, 0, 0, 341, 0, 284, 266, 0, 0, 0,
	282, 236, 310, 274, 316, 300, 324, 278, 275, 176,
	301, 205, 247, 187, 189, 201, 208, 210, 212, 213,
	256, 257, 269, 289, 303, 304, 305, 204, 197, 283,
	198, 222, 199, 177, 291, 200, 179, 270, 308, 0,
	218, 279, 243, 180, 242, 271, 307, 306, 188, 332,
	338, 339, 343, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	337, 216, 173, 174, 320, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 336, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 227, 268, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 318, 330, 347, 350, 0, 0,
	0, 178, 349, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	345, 252, 253, 254, 255, 219, 0, 195, 348, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 215, 221, 0,
	223, 194, 267, 217, 327, 230, 0, 0, 0, 0,
	0, 259, 226, 292, 231, 237, 280, 326, 265, 285,
	192, 317, 293, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 235, 0, 276, 214,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 0, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 302, 0, 0,
	333, 334, 335, 319, 0, 206, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 294, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2582, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 299, 315, 191, 290, 328, 196, 297, 186,
	263, 286, 0, 0, 183, 313, 296, 245, 228, 229,
	182, 0, 281, 207, 220, 203, 261, 0, 312, 340,
	202, 331, 0, 323, 185, 0, 322, 260, 309, 314,
	246, 240, 184, 311, 244, 239, 232, 211, 0, 224,
	272, 238, 273, 225, 250, 249, 251, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 233, 0,
	0, 0, 341, 0, 284, 266, 0, 0, 0, 282,
	236, 310, 274, 316, 300, 324, 278, 275, 176, 301,
	205, 247, 187, 189, 201, 208, 210, 212, 213, 256,
	257, 269, 289, 303, 304, 305, 204, 197, 283, 198,
	222, 199, 177, 291, 200, 179, 270, 308, 0, 218,
	279, 243, 180, 242, 271, 307, 306, 188, 332, 338,
	339, 343, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 337,
	216, 173, 174, 320, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 336, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 227, 268, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 318, 330, 347, 350, 0, 0, 0,
	178, 349, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 345,
	252, 253, 254, 255, 219, 0, 195, 348, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 215, 221, 0, 223,
	194, 267, 217, 327, 230, 0, 0, 0, 0, 0,
	259, 226, 292, 231, 237, 280, 326, 265, 285, 192,
	317, 293, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 235, 0, 276, 214, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 0, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 302, 0, 0, 333,
	334, 335, 319, 0, 206, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 294, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2317, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 299, 315, 191, 290, 328, 196, 297, 186, 263,
	286, 0, 0, 183, 313, 296, 245, 228, 229, 182,
	0, 281, 207, 220, 203, 261, 0, 312, 340, 202,
	331, 0, 323, 185, 0, 322, 260, 309, 314, 246,
	240, 184, 311, 244, 239, 232, 211, 0, 224, 272,
	238, 273, 225, 250, 249, 251, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 0,
	0, 0, 0, 0, 298, 0, 0, 233, 0, 0,
	0, 341, 0, 284, 266, 0, 0, 0, 282, 236,
	310, 274, 316, 300, 324, 278, 275, 176, 301, 205,
	247, 187, 189, 201, 208, 210, 212, 213, 256, 257,
	269, 289, 303, 304, 305, 204, 197, 283, 198, 222,
	199, 177, 291, 200, 179, 270, 308, 0, 218, 279,
	243, 180, 242, 271, 307, 306, 188, 332, 338, 339,
	343, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 337, 216,
	173, 174, 320, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 336, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 227, 268, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 318, 330, 347, 350, 0, 0, 0, 178,
	349, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 345, 252,
	253, 254, 255, 219, 0, 195, 348, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 215, 221, 0, 223, 194,
	267, 217, 327, 230, 0, 0, 0, 0, 0, 259,
	226, 292, 231, 237, 280, 326, 265, 285, 192, 317,
	293, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 235, 0, 276, 214, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	0, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 302, 0, 0, 333, 334,
	335, 319, 0, 206, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 294, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	299, 315, 191, 290, 328, 196, 297, 186, 263, 286,
	0, 0, 183, 313, 296, 245, 228, 229, 182, 0,
	281, 207, 220, 203, 261, 0, 312, 340, 202, 331,
	0, 323, 185, 0, 322, 260, 309, 314, 246, 240,
	184, 311, 244, 239, 232, 211, 0, 224, 272, 238,
	273, 225, 250, 249, 251, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 0, 0, 0,
	2510, 0, 0, 298, 0, 0, 233, 0, 0, 0,
	341, 0, 284, 266, 0, 0, 0, 282, 236, 310,
	274, 316, 300, 324, 278, 275, 176, 301, 205, 247,
	187, 189, 201, 208, 210, 212, 213, 256, 257, 269,
	289, 303, 304, 305, 204, 197, 283, 198, 222, 199,
	177, 291, 200, 179, 270, 308, 0, 218, 279, 243,
	180, 242, 271, 307, 306, 188, 332, 338, 339, 343,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 337, 216, 173,
	174, 320, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 336, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 227, 268, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 318, 330, 347, 350, 0, 0, 0, 178, 349,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 345, 252, 253,
	254, 255, 219, 0, 195, 348, 277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 215, 221, 0, 223, 194, 267,
	217, 327, 230, 0, 0, 0, 0, 0, 259, 226,
	292, 231, 237, 280, 326, 265, 285, 192, 317, 293,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 235, 0, 276, 214, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 0,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 302, 0, 0, 333, 334, 335,
	319, 0, 206, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 294, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 299,
	315, 191, 290, 328, 196, 297, 186, 263, 286, 0,
	0, 183, 313, 296, 245, 228, 229, 182, 0, 281,
	207, 220, 203, 261, 0, 312, 340, 202, 331, 0,
	323, 185, 0, 322, 260, 309, 314, 246, 240, 184,
	311, 244, 239, 232, 211, 0, 224, 272, 238, 273,
	225, 250, 249, 251, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 2327,
	0, 0, 298, 0, 0, 233, 0, 0, 0, 341,
	0, 284, 266, 0, 0, 0, 282, 236, 310, 274,
	316, 300, 324, 278, 275, 176, 301, 205, 247, 187,
	189, 201, 208, 210, 212, 213, 256, 257, 269, 289,
	303, 304, 305, 204, 197, 283, 198, 222, 199, 177,
	291, 200, 179, 270, 308, 0, 218, 279, 243, 180,
	242, 271, 307, 306, 188, 332, 338, 339, 343, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 337, 216, 173, 174,
	320, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 336, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 227, 268, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	318, 330, 347, 350, 0, 0, 0, 178, 349, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 345, 252, 253, 254,
	255, 219, 0, 195, 348, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 215, 221, 0, 223, 194, 267, 217,
	327, 230, 0, 0, 0, 0, 0, 259, 226, 292,
	231, 237, 280, 326, 265, 285, 192, 317, 293, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 235, 0, 276, 214, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 0, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 302, 0, 0, 333, 334, 335, 319,
	0, 206, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 294, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 299, 315,
	191, 290, 328, 196, 297, 186, 263, 286, 0, 0,
	183, 313, 296, 245, 228, 229, 182, 0, 281, 207,
	220, 203, 261, 0, 312, 340, 202, 331, 0, 323,
	185, 0, 322, 260, 309, 314, 246, 240, 184, 311,
	244, 239, 232, 211, 0, 224, 272, 238, 273, 225,
	250, 249, 251, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 0, 0, 0, 0,
	0, 298, 0, 0, 233, 0, 0, 0, 341, 0,
	284, 266, 0, 0, 0, 282, 236, 310, 274, 316,
	300, 324, 278, 275, 176, 301, 205, 247, 187, 189,
	201, 208, 210, 212, 213, 256, 257, 269, 289, 303,
	304, 305, 204, 197, 283, 198, 222, 199, 177, 291,
	200, 179, 270, 308, 0, 218, 279, 243, 180, 242,
	271, 307, 306, 188, 332, 338, 339, 343, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 337, 216, 173, 174, 320,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 336, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 227, 268, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 318,
	330, 347, 350, 0, 0, 0, 178, 349, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 345, 252, 253, 254, 255,
	219, 0, 195, 348, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 215, 221, 0, 223, 194, 267, 217, 327,
	230, 0, 0, 0, 0, 0, 259, 226, 292, 231,
	237, 280, 326, 265, 285, 192, 317, 293, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 235, 0, 276, 214, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 0, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 302, 0, 0, 333, 334, 335, 319, 0,
	206, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	294, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1306, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 299, 315, 191,
	290, 328, 196, 297, 186, 263, 286, 0, 0, 183,
	313, 296, 245, 228, 229, 182, 0, 281, 207, 220,
	203, 261, 0, 312, 340, 202, 331, 0, 323, 185,
	0, 322, 260, 309, 314, 246, 240, 184, 311, 244,
	239, 232, 211, 0, 224, 272, 238, 273, 225, 250,
	249, 251, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 0, 0, 0, 0, 0,
	298, 0, 0, 233, 0, 0, 0, 341, 0, 284,
	266, 0, 0, 0, 282, 236, 310, 274, 316, 300,
	324, 278, 275, 176, 301, 205, 247, 187, 189, 201,
	208, 210, 212, 213, 256, 257, 269, 289, 303, 304,
	305, 204, 197, 283, 198, 222, 199, 177, 291, 200,
	179, 270, 308, 0, 218, 279, 243, 180, 242, 271,
	307, 306, 188, 332, 338, 339, 343, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 337, 216, 173, 174, 320, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	336, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 227, 268, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 318, 330,
	347, 350, 0, 0, 0, 178, 349, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 345, 252, 253, 254, 255, 219,
	0, 195, 348, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 215, 221, 0, 223, 194, 267, 217, 327, 230,
	0, 0, 0, 0, 0, 259, 226, 292, 231, 237,
	280, 326, 265, 285, 192, 317, 293, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	235, 0, 276, 214, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 0, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 302, 0, 0, 333, 334, 335, 319, 0, 206,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 294,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 299, 315, 191, 290,
	328, 196, 297, 186, 263, 286, 0, 0, 183, 313,
	296, 245, 228, 229, 182, 0, 281, 207, 220, 203,
	261, 0, 312, 340, 202, 331, 0, 323, 185, 0,
	322, 260, 309, 314, 246, 240, 184, 311, 244, 239,
	232, 211, 0, 224, 272, 238, 273, 225, 250, 249,
	251, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 0, 0, 0, 0, 0, 298,
	0, 0, 233, 0, 0, 0, 341, 0, 284, 266,
	0, 0, 0, 282, 236, 310, 274, 316, 300, 324,
	278, 275, 176, 301, 205, 247, 187, 189, 201, 208,
	210, 212, 213, 256, 257, 269, 289, 303, 304, 305,
	204, 197, 283, 198, 222, 199, 177, 291, 200, 179,
	270, 308, 0, 218, 279, 243, 180, 242, 271, 307,
	306, 188, 332, 338, 339, 343, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 337, 216, 173, 174, 320, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 336,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	227, 268, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 318, 330, 347,
	350, 0, 0, 0, 178, 349, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 345, 252, 253, 254, 255, 219, 0,
	195, 348, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	215, 221, 0, 223, 194, 267, 217, 327, 230, 0,
	0, 0, 0, 0, 259, 226, 292, 231, 237, 280,
	326, 265, 285, 192, 317, 293, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 235,
	0, 276, 214, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 0, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	302, 0, 0, 333, 334, 335, 319, 0, 206, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 294, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 2079, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 299, 315, 191, 290, 328,
	196, 297, 186, 263, 286, 0, 0, 183, 313, 296,
	245, 228, 229, 182, 0, 281, 207, 220, 203, 261,
	0, 312, 340, 202, 331, 0, 323, 185, 0, 322,
	260, 309, 314, 246, 240, 184, 311, 244, 239, 232,
	211, 0, 224, 272, 238, 273, 225, 250, 249, 251,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 0, 0, 0, 0, 298, 0,
	0, 233, 0, 0, 0, 341, 0, 284, 266, 0,
	0, 0, 282, 236, 310, 274, 316, 300, 324, 278,
	275, 176, 301, 205, 247, 187, 189, 201, 208, 210,
	212, 213, 256, 257, 269, 289, 303, 304, 305, 204,
	197, 283, 198, 222, 199, 177, 291, 200, 179, 270,
	308, 0, 218, 279, 243, 180, 242, 271, 307, 306,
	188, 332, 338, 339, 343, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 337, 216, 173, 174, 320, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 336, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 227,
	268, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 318, 330, 347, 350,
	0, 0, 0, 178, 349, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 345, 252, 253, 254, 255, 219, 0, 195,
	348, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 215,
	221, 0, 223, 194, 267, 217, 327, 230, 0, 0,
	0, 0, 0, 259, 226, 292, 231, 237, 280, 326,
	265, 285, 192, 317, 293, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 235, 0,
	276, 214, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 0, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 302,
	0, 0, 333, 334, 335, 319, 0, 206, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 294, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 998, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 299, 315, 191, 290, 328, 196,
	297, 186, 263, 286, 0, 0, 183, 313, 296, 245,
	228, 229, 182, 0, 281, 207, 220, 203, 261, 0,
	312, 340, 202, 331, 0, 323, 185, 0, 322, 260,
	309, 314, 246, 240, 184, 311, 244, 239, 232, 211,
	0, 224, 272, 238, 273, 225, 250, 249, 251, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 0, 0, 0, 0, 0, 298, 0, 0,
	233, 0, 0, 0, 341, 0, 284, 266, 0, 0,
	0, 282, 236, 310, 274, 316, 300, 324, 278, 275,
	176, 301, 205, 247, 187, 189, 201, 208, 210, 212,
	213, 256, 257, 269, 289, 303, 304, 305, 204, 197,
	283, 198, 222, 199, 177, 291, 200, 179, 270, 308,
	0, 218, 279, 243, 180, 242, 271, 307, 306, 188,
	332, 338, 339, 343, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 337, 216, 173, 174, 320, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 336, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 227, 268,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 318, 330, 347, 350, 0,
	0, 0, 178, 349, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 345, 252, 253, 254, 255, 219, 0, 195, 348,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 215, 221,
	0, 223, 194, 267, 217, 327, 230, 0, 0, 0,
	0, 0, 259, 226, 292, 231, 237, 280, 326, 265,
	285, 192, 317, 293, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 235, 0, 276,
	214, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 0, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 302, 0,
	0, 333, 334, 335, 319, 0, 206, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 294, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 299, 315, 191, 290, 328, 196, 297,
	186, 263, 286, 0, 0, 183, 313, 296, 245, 228,
	229, 182, 0, 281, 207, 220, 203, 261, 0, 312,
	340, 202, 331, 0, 323, 185, 0, 322, 260, 309,
	314, 246, 240, 184, 311, 244, 239, 232, 211, 0,
	224, 272, 238, 273, 225, 250, 249, 251, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 0, 298, 0, 0, 233,
	0, 0, 0, 341, 0, 284, 266, 0, 0, 0,
	282, 236, 310, 274, 316, 300, 324, 278, 275, 176,
	301, 205, 247, 187, 189, 201, 208, 210, 212, 213,
	256, 257, 269, 289, 303, 304, 305, 204, 197, 283,
	198, 222, 199, 177, 291, 200, 179, 270, 308, 0,
	218, 279, 243, 180, 242, 271, 307, 306, 188, 332,
	338, 339, 343, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	337, 216, 173, 174, 320, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 336, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 227, 268, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 318, 330, 347, 350, 0, 0,
	0, 178, 349, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	345, 252, 253, 254, 255, 219, 0, 195, 348, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 215, 221, 0,
	223, 194, 267, 217, 327, 230, 0, 0, 0, 0,
	0, 259, 226, 292, 231, 237, 280, 326, 265, 285,
	192, 317, 293, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 235, 0, 276, 214,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 0, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 302, 0, 0,
	333, 334, 335, 319, 0, 206, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 294, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 1762,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 299, 315, 191, 290, 328, 196, 297, 186,
	263, 286, 0, 0, 183, 313, 296, 245, 228, 229,
	182, 0, 281, 207, 220, 203, 261, 0, 312, 340,
	202, 331, 0, 323, 185, 0, 322, 260, 309, 314,
	246, 240, 184, 311, 244, 239, 232, 211, 0, 224,
	272, 238, 273, 225, 250, 249, 251, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 233, 0,
	0, 0, 341, 0, 284, 266, 0, 0, 0, 282,
	236, 310, 274, 316, 300, 324, 278, 275, 176, 301,
	205, 247, 187, 189, 201, 208, 210, 212, 213, 256,
	257, 269, 289, 303, 304, 305, 204, 197, 283, 198,
	222, 199, 177, 291, 200, 179, 270, 308, 0, 218,
	279, 243, 180, 242, 271, 307, 306, 188, 332, 338,
	339, 343, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 337,
	216, 173, 174, 320, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 336, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 227, 268, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 318, 330, 347, 350, 0, 0, 0,
	178, 349, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 345,
	252, 253, 254, 255, 219, 0, 195, 348, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 215, 221, 0, 223,
	194, 267, 217, 327, 230, 0, 0, 0, 0, 0,
	259, 226, 292, 231, 237, 280, 326, 265, 285, 192,
	317, 293, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 235, 0, 276, 214, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 0, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 0, 0, 0, 333,
	334, 335, 319, 302, 206, 0, 0, 1686, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 294, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 299, 315,
	191, 290, 328, 196, 297, 186, 263, 286, 0, 0,
	183, 313, 296, 245, 228, 229, 182, 0, 281, 207,
	220, 203, 261, 0, 312, 340, 202, 331, 0, 323,
	185, 0, 322, 260, 309, 314, 246, 240, 184, 311,
	244, 239, 232, 211, 0, 224, 272, 238, 273, 225,
	250, 249, 251, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 0, 0, 0, 0,
	0, 298, 0, 0, 233, 0, 0, 0, 341, 0,
	284, 266, 0, 0, 0, 282, 236, 310, 274, 316,
	300, 324, 278, 275, 176, 301, 205, 247, 187, 189,
	201, 208, 210, 212, 213, 256, 257, 269, 289, 303,
	304, 305, 204, 197, 283, 198, 222, 199, 177, 291,
	200, 179, 270, 308, 0, 218, 279, 243, 180, 242,
	271, 307, 306, 188, 332, 338, 339, 343, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 337, 216, 173, 174, 320,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 336, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 227, 268, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 318,
	330, 347, 350, 0, 0, 0, 178, 349, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 345, 252, 253, 254, 255,
	219, 0, 195, 348, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 215, 221, 0, 223, 194, 267, 217, 327,
	230, 0, 0, 0, 0, 0, 259, 226, 292, 231,
	237, 280, 326, 265, 285, 192, 317, 293, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 235, 0, 276, 214, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 0, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 302, 0, 0, 333, 334, 335, 319, 0,
	206, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	294, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 299, 315, 191,
	290, 328, 196, 297, 186, 263, 286, 0, 0, 183,
	313, 296, 245, 228, 229, 182, 0, 281, 207, 220,
	203, 261, 0, 312, 340, 202, 331, 0, 323, 185,
	0, 322, 260, 309, 314, 246, 240, 184, 311, 244,
	239, 232, 211, 0, 224, 272, 238, 273, 225, 250,
	249, 251, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 0, 1668, 0, 0, 0,
	298, 0, 0, 233, 0, 0, 0, 341, 0, 284,
	266, 0, 0, 0, 282, 236, 310, 274, 316, 300,
	324, 278, 275, 176, 301, 205, 247, 187, 189, 201,
	208, 210, 212, 213, 256, 257, 269, 289, 303, 304,
	305, 204, 197, 283, 198, 222, 199, 177, 291, 200,
	179, 270, 308, 0, 218, 279, 243, 180, 242, 271,
	307, 306, 188, 332, 338, 339, 343, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 337, 216, 173, 174, 320, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	336, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 227, 268, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 318, 330,
	347, 350, 0, 0, 0, 178, 349, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 345, 252, 253, 254, 255, 219,
	0, 195, 348, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 215, 221, 0, 223, 194, 267, 217, 327, 230,
	0, 0, 0, 0, 0, 259, 226, 292, 231, 237,
	280, 326, 265, 285, 192, 317, 293, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	235, 0, 276, 214, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 0, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 302, 0, 0, 333, 334, 335, 319, 0, 206,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 294,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 299, 315, 191, 290,
	328, 196, 297, 186, 263, 286, 0, 0, 183, 313,
	296, 245, 228, 229, 182, 0, 281, 207, 220, 203,
	261, 0, 312, 340, 202, 331, 0, 323, 185, 0,
	322, 260, 309, 314, 246, 240, 184, 311, 244, 239,
	232, 211, 0, 224, 272, 238, 273, 225, 250, 249,
	251, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 0, 0, 0, 0, 0, 298,
	0, 0, 233, 0, 0, 0, 341, 0, 284, 266,
	0, 0, 0, 282, 236, 310, 274, 316, 300, 324,
	278, 275, 176, 301, 205, 247, 187, 189, 201, 208,
	210, 212, 213, 256, 257, 269, 289, 303, 304, 305,
	204, 197, 283, 198, 222, 199, 177, 291, 200, 179,
	270, 308, 0, 218, 279, 243, 180, 242, 271, 307,
	306, 188, 332, 338, 339, 343, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 337, 216, 173, 174, 320, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 336,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	227, 268, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 318, 330, 347,
	350, 0, 0, 0, 178, 349, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 345, 252, 253, 254, 255, 219, 0,
	195, 348, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	215, 221, 0, 223, 194, 267, 217, 327, 230, 0,
	0, 0, 0, 0, 259, 226, 292, 231, 237, 280,
	326, 265, 285, 192, 317, 293, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 175, 0, 235,
	0, 276, 214, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 0, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	302, 0, 0, 333, 334, 335, 319, 0, 206, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 294, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 299, 315, 191, 290, 328,
	196, 297, 186, 263, 286, 0, 0, 183, 313, 296,
	245, 228, 229, 182, 0, 281, 207, 220, 203, 261,
	0, 312, 340, 202, 331, 0, 323, 185, 0, 322,
	260, 309, 314, 246, 240, 184, 311, 244, 239, 232,
	211, 0, 224, 272, 238, 273, 225, 250, 249, 251,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 0, 0, 0, 0, 0, 298, 0,
	0, 233, 0, 0, 0, 341, 0, 284, 266, 0,
	0, 0, 282, 236, 310, 274, 316, 300, 324, 380,
	275, 176, 301, 205, 247, 187, 189, 201, 208, 210,
	212, 213, 256, 257, 269, 289, 303, 304, 305, 204,
	197, 283, 198, 222, 199, 177, 291, 200, 179, 270,
	308, 0, 218, 279, 243, 180, 242, 271, 307, 306,
	188, 332, 338, 339, 343, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 337, 216, 173, 174, 320, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 336, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 227,
	268, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 318, 330, 347, 350,
	0, 0, 0, 178, 349, 0, 0, 0, 0, 0,
	0, 381, 321, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 345, 252, 253, 254, 255, 219, 0, 195,
	348, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 215,
	221, 0, 223, 194, 267, 217, 327, 230, 0, 0,
	0, 0, 0, 259, 226, 292, 231, 237, 280, 326,
	265, 285, 192, 317, 293, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 235, 0,
	276, 214, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 0, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 302,
	0, 0, 333, 334, 335, 319, 0, 206, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 294, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 299, 315, 191, 290, 328, 196,
	297, 186, 263, 286, 0, 0, 183, 313, 296, 245,
	228, 229, 182, 0, 281, 207, 220, 203, 261, 0,
	312, 340, 202, 331, 0, 323, 185, 0, 322, 260,
	309, 314, 246, 240, 184, 311, 244, 239, 232, 211,
	0, 224, 272, 238, 273, 225, 250, 249, 251, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 0,
	325, 0, 0, 0, 0, 0, 0, 298, 0, 0,
	233, 0, 0, 0, 341, 0, 284, 266, 0, 0,
	0, 282, 236, 310, 274, 316, 300, 324, 278, 275,
	176, 301, 205, 247, 187, 189, 201, 208, 210, 212,
	213, 256, 257, 269, 289, 303, 304, 305, 204, 197,
	283, 198, 222, 199, 177, 291, 200, 179, 270, 308,
	0, 218, 279, 243, 180, 242, 271, 307, 306, 188,
	332, 338, 339, 343, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 337, 216, 173, 174, 320, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 336, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 227, 268,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 318, 330, 347, 350, 0,
	0, 0, 178, 349, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 345, 252, 253, 254, 255, 219, 0, 195, 348,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 215, 221,
	0, 223, 194, 267, 217, 327, 230, 0, 0, 0,
	0, 0, 259, 226, 292, 231, 237, 280, 326, 265,
	285, 192, 317, 293, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 235, 0, 276,
	214, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 0, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 302, 0,
	0, 333, 334, 335, 319, 0, 206, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 209, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 294, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 299, 315, 191, 290, 328, 196, 297,
	186, 263, 286, 0, 0, 183, 313, 296, 245, 228,
	229, 182, 0, 281, 207, 220, 203, 261, 0, 312,
	340, 202, 331, 0, 323, 185, 0, 322, 260, 309,
	314, 246, 240, 184, 311, 244, 239, 232, 211, 0,
	224, 272, 238, 273, 225, 250, 249, 251, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 0, 298, 0, 0, 233,
	0, 0, 0, 341, 0, 284, 266, 0, 0, 0,
	282, 236, 310, 274, 316, 300, 324, 278, 275, 176,
	301, 205, 247, 187, 189, 201, 208, 210, 212, 213,
	256, 257, 269, 289, 303, 304, 305, 204, 197, 283,
	198, 222, 199, 177, 291, 200, 179, 270, 308, 0,
	218, 279, 243, 180, 242, 271, 307, 306, 188, 332,
	338, 339, 343, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	337, 216, 173, 174, 320, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 336, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 227, 268, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 318, 330, 347, 350, 0, 0,
	0, 178, 349, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	345, 252, 253, 254, 255, 219, 0, 195, 348, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 215, 221, 0,
	223, 194, 267, 217, 327, 230, 0, 0, 0, 0,
	0, 259, 226, 292, 231, 237, 280, 326, 265, 285,
	192, 317, 293, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 235, 0, 276, 214,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 0, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 302, 0, 0,
	333, 334, 335, 319, 0, 206, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 294, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 299, 315, 191, 290, 328, 196, 297, 186,
	263, 286, 0, 0, 183, 313, 296, 245, 228, 229,
	182, 0, 281, 207, 220, 203, 261, 0, 312, 340,
	202, 331, 0, 323, 185, 0, 322, 260, 309, 314,
	246, 240, 184, 311, 244, 239, 232, 211, 0, 224,
	272, 238, 273, 225, 250, 249, 251, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 233, 0,
	0, 0, 341, 0, 284, 266, 0, 0, 0, 282,
	236, 310, 274, 316, 300, 324, 278, 275, 176, 301,
	205, 247, 187, 189, 201, 208, 210, 212, 213, 256,
	257, 269, 289, 303, 304, 305, 204, 197, 283, 198,
	222, 199, 177, 291, 200, 179, 270, 308, 0, 218,
	279, 243, 180, 242, 271, 307, 306, 188, 332, 338,
	339, 343, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 337,
	216, 173, 174, 320, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 336, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 227, 268, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 318, 330, 347, 350, 0, 0, 0,
	178, 349, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 345,
	252, 253, 254, 255, 219, 0, 195, 348, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 215, 221, 0, 223,
	194, 267, 217, 327, 230, 0, 0, 0, 0, 0,
	259, 226, 292, 231, 237, 280, 326, 265, 285, 192,
	317, 293, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 235, 0, 276, 214, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 0, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 302, 0, 0, 333,
	334, 335, 319, 0, 206, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	0, 0, 0, 0, 209, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 294, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 681, 682, 683, 1735, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 299, 315, 191, 290, 328, 196, 297, 186, 263,
	286, 0, 0, 183, 313, 296, 245, 228, 229, 182,
	0, 281, 207, 220, 203, 261, 0, 312, 340, 202,
	331, 0, 323, 185, 0, 322, 260, 309, 314, 246,
	240, 184, 311, 244, 239, 232, 211, 0, 224, 272,
	238, 273, 225, 250, 249, 251, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 0,
	0, 0, 0, 0, 298, 0, 0, 233, 0, 0,
	0, 341, 0, 284, 266, 0, 0, 0, 282, 236,
	310, 274, 316, 300, 324, 278, 275, 176, 301, 205,
	247, 187, 189, 201, 208, 210, 212, 213, 256, 257,
	269, 289, 303, 304, 305, 204, 197, 283, 198, 222,
	199, 177, 291, 200, 179, 270, 308, 0, 218, 279,
	243, 180, 242, 271, 307, 306, 188, 332, 338, 339,
	343, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 337, 216,
	173, 174, 320, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 336, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 227, 268, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 318, 330, 347, 350, 0, 0, 0, 178,
	349, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 345, 252,
	253, 254, 255, 219, 0, 195, 348, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 215, 221, 302, 223, 194,
	267, 217, 327, 230, 0, 0, 0, 0, 264, 259,
	226, 292, 231, 237, 280, 326, 265, 285, 192, 317,
	293, 241, 0, 0, 0, 209, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 294, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 682, 683, 1735,
	0, 0, 175, 190, 235, 0, 276, 214, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 319, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 181, 299, 315, 191, 290, 328, 196, 297, 186,
	263, 286, 0, 0, 183, 313, 296, 245, 228, 229,
	182, 0, 281, 207, 220, 203, 261, 0, 312, 340,
	202, 331, 0, 323, 185, 0, 322, 260, 309, 314,
	246, 240, 184, 311, 244, 239, 232, 211, 0, 224,
	272, 238, 273, 225, 250, 249, 251, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 233, 0,
	0, 0, 341, 0, 284, 266, 0, 0, 0, 282,
	236, 310, 274, 316, 300, 324, 278, 275, 176, 301,
	205, 247, 187, 189, 201, 208, 210, 212, 213, 256,
	257, 269, 289, 303, 304, 305, 204, 197, 283, 198,
	222, 199, 177, 291, 200, 179, 270, 308, 0, 218,
	279, 243, 180, 242, 271, 307, 306, 188, 332, 338,
	339, 343, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 337,
	216, 173, 174, 320, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 336, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 227, 268, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 318, 330, 347, 350, 0, 0, 0,
	178, 349, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 345,
	252, 253, 254, 255, 219, 0, 195, 348, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 215, 221, 302, 223,
	194, 267, 217, 327, 230, 0, 0, 0, 0, 264,
	259, 226, 292, 231, 237, 280, 326, 265, 285, 192,
	317, 293, 241, 0, 0, 0, 209, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 294, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 681, 682, 683,
	0, 0, 0, 175, 190, 235, 0, 276, 214, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 319, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 181, 299, 315, 191, 290, 328, 196, 297,
	186, 263, 286, 0, 0, 183, 313, 296, 245, 228,
	229, 182, 0, 281, 207, 220, 203, 261, 0, 312,
	340, 202, 331, 0, 323, 185, 0, 322, 260, 309,
	314, 246, 240, 184, 311, 244, 239, 232, 211, 0,
	224, 272, 238, 273, 225, 250, 249, 251, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 0, 298, 0, 0, 233,
	0, 0, 0, 341, 0, 284, 266, 0, 0, 0,
	282, 236, 310, 274, 316, 300, 324, 278, 275, 176,
	301, 205, 247, 187, 189, 201, 208, 210, 212, 213,
	256, 257, 269, 289, 303, 304, 305, 204, 197, 283,
	198, 222, 199, 177, 291, 200, 179, 270, 308, 0,
	218, 279, 243, 180, 242, 271, 307, 306, 188, 332,
	338, 339, 343, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	337, 216, 173, 174, 320, 126, 262, 37, 116, 97,
	0, 0, 0, 0, 0, 258, 336, 0, 0, 0,
	0, 287, 0, 0, 0, 121, 0, 227, 268, 0,
	288, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 295, 318, 330, 347, 350, 0, 0,
	0, 178, 349, 0, 0, 0, 74, 0, 0, 0,
	321, 0, 123, 0, 329, 0, 0, 0, 0, 0,
	345, 252, 253, 254, 255, 219, 0, 195, 348, 277,
	0, 0, 0, 0, 759, 760, 761, 758, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 215, 221, 0,
	223, 194, 267, 217, 327, 230, 0, 0, 0, 0,
	0, 259, 226, 292, 231, 237, 280, 326, 265, 285,
	192, 317, 293, 241, 0, 0, 867, 0, 0, 0,
	117, 118, 0, 119, 120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1155,
	0, 0, 0, 0, 175, 0, 235, 0, 276, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 96, 115,
	124, 0, 72, 0, 0, 0, 0, 0, 867, 0,
	333, 334, 335, 319, 0, 206, 0, 0, 114, 108,
	107, 0, 0, 0, 0, 43, 855, 0, 0, 0,
	845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 875, 879, 881, 883, 885, 886,
	888, 0, 892, 889, 890, 891, 0, 0, 870, 871,
	872, 873, 853, 854, 876, 0, 856, 0, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 868, 874,
	0, 0, 0, 110, 111, 112, 596, 878, 880, 882,
	884, 887, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1151, 0, 0, 1148, 0, 0, 855, 1150,
	1147, 1149, 1153, 1154, 0, 0, 0, 1152, 0, 82,
	0, 0, 869, 113, 0, 83, 875, 879, 881, 883,
	885, 886, 888, 0, 892, 889, 890, 891, 0, 0,
	870, 871, 872, 873, 853, 854, 876, 625, 856, 0,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	868, 874, 0, 0, 0, 0, 0, 0, 0, 878,
	880, 882, 884, 887, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 36, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	0, 399, 406, 396, 869, 0, 0, 0, 0, 0,
	0, 0, 0, 403, 404, 0, 405, 409, 0, 0,
	391, 0, 0, 0, 0, 0, 627, 0, 0, 626,
	414, 0, 38, 0, 0, 0, 0, 0, 1136, 1137,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1158,
	1159, 1160, 1161, 1162, 1163, 1156, 1157, 2273, 0, 418,
	0, 0, 419, 612, 0, 98, 0, 0, 0, 0,
	597, 0, 0, 0, 0, 0, 0, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1683, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2273, 0, 0,
	0, 0, 0, 86, 87, 91, 0, 0, 2693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2273, 0, 0,
	0, 0, 0, 0, 877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 0, 0, 0, 2255, 0,
	0, 0, 0, 0, 0, 598, 620, 0, 0, 0,
	0, 1683, 392, 394, 393, 0, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 615,
	0, 0, 402, 0, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 395, 0, 2255, 0,
	386, 0, 0, 0, 0, 2353, 0, 0, 0, 0,
	0, 616, 621, 0, 0, 0, 877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 609, 0,
	611, 624, 2259, 0, 0, 608, 606, 605, 0, 610,
	599, 600, 0, 2263, 0, 622, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 618, 619, 0,
	0, 0, 0, 2252, 0, 0, 0, 2254, 2256, 2258,
	0, 2260, 2261, 2262, 2264, 2265, 2266, 2268, 2269, 2270,
	2271, 0, 2259, 0, 0, 0, 0, 397, 401, 407,
	0, 408, 410, 2263, 613, 411, 412, 413, 0, 0,
	415, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2274, 2252, 0, 0, 0, 2254, 2256, 2258,
	0, 2260, 2261, 2262, 2264, 2265, 2266, 2268, 2269, 2270,
	2271, 0, 2259, 0, 0, 400, 0, 399, 406, 396,
	0, 0, 0, 2263, 0, 0, 0, 0, 2272, 403,
	404, 0, 405, 409, 0, 0, 391, 0, 0, 0,
	0, 0, 2274, 2252, 0, 2251, 414, 2254, 2256, 2258,
	0, 2260, 2261, 2262, 2264, 2265, 2266, 2268, 2269, 2270,
	2271, 0, 400, 0, 399, 406, 396, 0, 0, 0,
	0, 0, 0, 0, 2267, 0, 403, 404, 2272, 405,
	409, 2257, 0, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 2274, 414, 0, 2251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 2267, 419, 0, 0, 2272, 0,
	0, 2257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2267, 0, 0, 0, 0, 0,
	0, 2257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 394,
	393, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 394, 393, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 401, 407, 0, 408, 410, 0,
	0, 411, 412, 413, 0, 0, 415, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 401, 407, 0, 408, 410, 0, 0, 411, 412,
	413, 0, 0, 415, 416,
}

var yyPact = [...]int{
	27725, -1000, -303, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -157, 25647, 25647, -1000,
	-1000, 1612, -1000, 25148, 9669, 26146, 166, 157, 26146, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 421, -1000, 24649, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 380, 28119, 255, 251, 7663, 26146, -284, -1000,
	2130, -143, -1000, -1000, -1000, -1000, 295, 485, 24150, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 27990, 69, 485, 549, 564, 679,
	679, 11166, 2130, 236, 99, -1000, 859, 27725, 27427, 352,
	26146, -1000, 947, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 352, -1000, -1000, -1000, 2130, 2130, -1000, 26146,
	26146, -16, 1096, -1000, 240, 222, 241, 941, -1000, -1000,
	-1000, -1000, -1000, 2164, -1000, 26146, 26146, 1833, 26146, -1000,
	1375, 298, 28532, 2006, 843, 470, 1848, -1000, -1000, 1818,
	-1000, 112, 144, 87, 176, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 120, -1000, 2062, -1000, -1000, 84, -1000, -1000,
	83, -1000, -1000, -1000, -68, -1000, -1000, -1000, -1000, -1000,
	-152, -152, 627, 1218, 7663, -1000, 1277, -1000, 2264, -1000,
	-1000, -1000, -1000, 5159, 9160, 9160, 9160, 9160, -1000, -1000,
	1699, 7663, 1817, 1813, -1000, -1000, -1000, -1000, 939, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1502, 8661, -1000, 1804, 1803, 1800, 1799, 1796, 1795,
	1794, 1792, 1791, 1790, 1788, 1628, 1779, 1498, 1497, 1771,
	1769, 1768, 9160, 1495, 1628, 1628, 1766, 1765, 1762, 1755,
	1754, 1743, 1736, 1735, 1734, 1730, 1729, 1728, 1722, 1721,
	1720, 1719, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 27826, -1000, 931, 910, -1000,
	1717, 1996, 2075, 1671, 2142, 2054, 2051, 2048, 2046, 1356,
	-1000, -1000, 60, 364, 364, 364, 410, 364, 416, 415,
	-1000, -1000, -1000, -1000, -1000, -1000, 486, -1000, -1000, -1000,
	-1000, 801, 26146, -1000, 1676, 1021, 2069, 244, 296, 197,
	-1000, -135, 1021, 256, 304, 2075, 2075, -78, -96, 1021,
	1021, -96, 71, -1000, -1000, -1000, 1124, 258, 1124, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2041, 2037, 380, 380,
	388, -1000, -155, -1000, -1000, 574, -1000, 499, -1000, 1375,
	293, 292, 811, 1141, -1000, 1060, 26146, 26146, 26146, 1060,
	1060, 14163, 13664, -1000, 2075, 1671, -1000, 1609, 1657, 1671,
	380, 380, 380, 380, 380, 380, 380, 26146, 6656, 6656,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 276, -1000,
	-1000, -1000, -1000, -1000, 235, 1714, -1000, 26146, 229, 2075,
	1996, 2075, -1000, -1000, 928, 1345, 1490, -1000, -1000, 240,
	1082, -1000, 818, -1000, -1000, -1000, -1000, 26146, 228, -1000,
	-1000, 1480, 1712, -1000, 347, 719, 890, -1000, 68, 28485,
	21648, 1375, 21648, 26146, -1000, -1000, -1000, -1000, -1000, -1000,
	-69, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 72, -1000, 72, 7663, 7663, 7663,
	7663, 7663, -1000, 426, 8162, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9160, 9160, 9160, 9160, 9160, 9160, 9160, 9160,
	9160, 9160, 9160, 9160, 1698, 1260, 9160, 9160, 9160, 1657,
	2259, 810, -1000, -1000, -1000, -1000, -1000, 1117, 1218, 7663,
	7663, 26146, -1000, 27724, 7663, 7663, 111, 7663, 2038, 2038,
	3661, 26146, 7663, -1000, 1600, 1599, -1000, -1000, 1270, 7663,
	-1000, -1000, 7663, 9160, 7663, -1000, -1000, -1000, -1000, 91,
	2038, 7663, 7663, 2038, 2038, 2038, 1125, 2038, 2038, 2038,
	2038, 2038, 2038, 2038, 2038, 26146, 1970, 77, -1000, -1000,
	-1000, 1645, -1000, 1685, 1685, 1645, 1645, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1711, 1706, -1000, -1000,
	1684, 1684, 1684, 1645, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1704,
	1704, 1705, 1704, 26146, 2075, -284, 6157, -1000, -288, 1996,
	7663, -1000, -1000, 7663, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1488, 406, 364, -1000, 26146, 1126, 21648, 1375,
	1366, 26146, 364, 364, 388, -1000, 26146, 801, 2019, 26146,
	2150, 9160, 21648, 1124, 1124, 1124, 1124, 1021, -1000, 1124,
	2150, 1124, -1000, -1000, -1000, 1021, 1021, -1000, -1000, -1000,
	-1000, 1124, 1124, -1000, -1000, -70, 2150, 2150, -111, 26146,
	26146, 364, 26146, -1000, -1000, -1000, -1000, 26146, -1000, -1000,
	26146, 21648, 20151, -1000, -136, 533, 506, 522, -1000, -1000,
	340, 367, 12665, 294, 21648, 4659, -1000, -1000, 1060, 1060,
	1060, 4659, 4659, 982, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1996, -1000, -1000, -1000, -1000, 26146, 21648, 1375, 26146,
	26146, 26146, 27427, -1000, 800, -1000, -1000, 10667, 921, 800,
	1486, 26146, 1847, 1973, -1000, 1702, 12166, 26146, -1000, -1000,
	-285, -1000, 11666, 26146, 1996, -1000, 1996, 2709, -1000, 2068,
	-1000, 240, 158, -1000, -1000, -1000, -1000, -1000, -1000, 918,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 787,
	-1000, 26146, -1000, -1000, 68, 21648, 1052, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 129, -1000, -1000, 149, -1000, 404,
	8, 1075, -1000, -1000, 58, 143, 436, 58, 1218, -1000,
	1149, 1149, 1133, -1000, 390, -1000, -1000, -1000, -1000, 1699,
	-1000, -1000, -1000, 1163, 1830, -1000, 1143, 1143, 970, 970,
	970, 970, 970, 1132, 1132, -1000, -1000, -1000, 5159, 1698,
	9160, 9160, 9160, 360, 2524, 3145, -1000, 7663, 1113, -1000,
	7663, 1474, 911, 916, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1593, 627, 1592, 1405, 2162, 1591,
	7663, -1000, -1000, 7663, 1492, 7164, -1000, -1000, -1000, 1589,
	904, 1582, -1000, -1000, -1000, 1581, 692, 1571, 1207, 1569,
	761, 7663, 1074, 1073, 7663, 7663, 7663, 7663, 1568, 7663,
	7663, 7663, 7663, 7663, 7663, 7663, 7663, -1000, 7663, 43,
	-1000, -1000, -1000, -1000, 1344, -1000, 1338, -1000, -1000, -1000,
	1485, 1485, -1000, 1334, -1000, -1000, -1000, -1000, 1333, -1000,
	-1000, 1328, -1000, -1000, -1000, -1000, 1055, -1000, 1218, -1000,
	1476, -1000, 1037, 711, -1000, 1339, -1000, -1000, 23651, 26146,
	39, -1000, 2000, 763, -1000, 8, 640, 1829, 1968, 26146,
	26146, 23152, -1000, 1695, 1045, -1000, -1000, 7663, -1000, 1825,
	26146, 26146, 1124, 26146, 1124, 2150, 1124, -1000, 26146, 2150,
	2150, 1021, 27427, 1124, 1124, -1000, -1000, 1124, -1000, 899,
	-1000, 26146, -1000, -1000, -1000, -1000, 38, 763, 2340, 720,
	-1000, -1000, -1000, -1000, 26645, 26645, 13165, 26645, -1000, 1102,
	-1000, -1000, 530, 495, 536, -1000, -1000, 403, -1000, -1000,
	640, -1000, -1000, -1000, 1694, 1094, -1000, -1000, 9160, -1000,
	4659, 4659, 4659, -1000, -1000, 16159, -1000, -1000, 683, 640,
	1846, 677, -1000, 677, -1000, 2150, 6656, -1000, 20151, -1000,
	-1000, 22646, -1000, 22147, 2150, -292, 755, -1000, 1978, -285,
	26146, 26146, 1044, 97, -1000, 1034, -1000, 629, -1000, 1693,
	-1000, 1020, 1961, 633, -1000, 1087, -1000, -1000, -1000, 864,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -17, -1000,
	-1000, 26146, 1480, 1018, 1052, 656, -1000, 398, 863, 860,
	-1000, 21648, 95, 21648, -1000, 21648, -1000, -1000, 246, -1000,
	26146, 1988, -1000, -1000, -1000, 1444, -306, 1986, -1000, -1000,
	-1000, -1000, -1000, 1011, -1000, 360, 2524, 1991, -1000, 9160,
	9160, 2243, 1109, -1000, 7663, 1103, 1362, 590, 15161, 26146,
	-1000, -1000, 7663, 7663, -1000, 2208, 2199, -1000, 7663, 7663,
	1225, -1000, 26146, -1000, -1000, -1000, 15161, -1000, 9160, -1000,
	7663, 2182, -59, -59, 2148, 2139, 2105, 1010, -59, 2067,
	2033, 1983, 1947, 1909, 1874, 1870, 1724, 1218, -1000, -1000,
	1567, 1566, 1002, -1000, 1000, 1565, 999, 997, 6157, -1000,
	-109, 7663, 7663, 7663, 1884, -1000, -1000, 1676, 1123, 1689,
	-67, 1072, -1000, 371, 21648, 291, -1000, 1843, 196, -1000,
	1968, -1000, 826, -1000, 1688, 1687, 26146, 738, -1000, 849,
	27725, -1000, 26146, 1218, -1000, 1375, 1021, -1000, -1000, -1000,
	-1000, -1000, -1000, 2150, 908, -1000, -1000, 2150, -1000, 1021,
	1021, 1124, 26146, -1000, -67, 1072, 371, 26146, 20151, 20151,
	20151, 20151, -1000, 1890, 1888, -1000, 1881, 1879, 1875, 26146,
	20151, 1676, -1000, 27036, -1000, -1000, -1000, -1000, -1000, 1657,
	974, 1916, 529, 7663, -1000, -1000, -1000, 492, 21648, 1460,
	294, -1000, -1000, -1000, -1000, -1000, 26146, 26146, 2152, -1000,
	666, -1000, -1000, 841, -1000, 2152, -1000, 1326, 1458, 1186,
	629, 633, 967, -1000, 97, 26146, 1960, 1686, -1000, 26146,
	-285, 6157, 233, -285, 26146, 6157, 2709, 1325, -1000, -1000,
	-1000, 2160, 21648, 1375, 1016, 1046, -1000, 80, -1000, 124,
	327, 1450, -1000, 414, 81, -1000, 1081, 1444, 412, -1000,
	-1000, 9160, -1000, -1000, -1000, -1000, 1218, 7663, 1563, -1000,
	509, 509, 1561, -1000, 1645, 1685, -1000, 1645, 1684, 1645,
	509, 509, 1560, -1000, 1392, 1715, -1000, -1000, 1642, 1610,
	7663, -1000, 1556, 3043, 857, -59, -1000, 1683, -1000, -59,
	-59, -59, -59, -1000, -59, -59, -59, -59, -59, -59,
	-59, -59, -1000, -1000, -1000, 1449, -1000, -1000, -1000, 1323,
	-1000, 1321, -1000, -40, -32, 1218, 1218, -1000, -1000, 1936,
	2013, 1997, 10168, 1278, -1000, -1000, 21149, -1000, 319, -1000,
	-1000, -1000, 381, 109, 1318, 302, -1000, 1477, 26146, -1000,
	-1000, -1000, -1000, -1000, 1072, 1072, 1072, 10168, 10168, 352,
	703, 834, 20151, 26146, -1000, 19652, 1553, -1000, 640, 2150,
	-1000, 26146, -1000, 2150, 2150, 1021, -1000, 1278, 21149, 319,
	776, -1000, 1080, 1836, 1842, 1836, -1000, -1000, -1000, -1000,
	1871, -1000, 1868, -1000, -1000, 776, -1000, -1000, -1000, -1000,
	-1000, 529, -1000, 2066, 540, 540, 540, 1551, -1000, 656,
	1550, -1000, -1000, -1000, -1000, 2149, 2141, 20650, 2149, -1000,
	-292, 2181, 236, 26146, 221, -1000, -285, 26146, -1000, -1000,
	1549, 650, -285, -1000, 629, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1375, -1000, 113, -1000, -1000, -1000, -1000, -1000,
	-1000, -5, -1000, 26146, -1000, 1444, 1436, 74, 26146, -1000,
	1218, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 7663, -1000, -1000, -1000,
	1580, -1000, -1000, 7663, -1000, 350, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1547,
	1519, -290, -27, 2135, 2133, -1000, -1000, 236, 26146, 1518,
	647, -1000, -1000, -1000, 27908, 827, -1000, 26146, 1184, 540,
	364, 540, 1181, 1681, -1000, -1000, -1000, 1432, 5, -1000,
	-1000, -1000, 1431, 1430, 1312, -1000, -1000, 1317, 891, 24,
	-1000, -1000, -1000, -1000, -1000, -1000, 1680, 15161, 15660, 1428,
	1512, 1511, 26645, 20151, 19652, 775, -1000, 821, -1000, -1000,
	-1000, 2150, -1000, -1000, 2150, -1000, 5, -1000, 2131, 26146,
	6157, -1000, -1000, 7663, 1679, -1000, 7663, -1000, -1000, -1000,
	-1000, -1000, 1677, 1999, -1000, -1000, -1000, -1000, -1000, -1000,
	7663, 7663, -1000, -1000, -1000, 26146, -1000, -1000, -285, -1000,
	629, 963, -1000, 629, 640, -1000, -1000, 97, -1000, -1000,
	-1000, -111, 1562, -1000, 1552, 2131, -1000, 2132, -1000, -1000,
	-292, 1427, -1000, 2125, 1426, 1378, -1000, 1676, 28281, 10168,
	1330, -1000, -1000, 26146, 26146, -1000, 26146, 26146, 364, 7663,
	-1000, -1000, 245, -1000, -1000, 131, -1000, -1000, 1273, 342,
	-1000, 18155, -1000, -1000, -1000, -1000, -1000, 72, 28281, 2150,
	775, 821, -1000, -1000, 1014, -1000, -1000, -1000, 2075, -1000,
	-1000, 1218, 26146, 1218, 19153, -1000, 2113, 2112, 1218, 627,
	633, 629, -1000, -111, -1000, -53, -39, -1000, -1000, 62,
	7663, -296, -1000, 1421, -30, -1000, -1000, 2010, 349, 28231,
	-1000, 1072, 1072, 870, 1072, 1072, 1072, 1072, 253, 248,
	1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072,
	1072, 1072, 1072, 1072, 1675, -1000, -1000, 1330, -1000, -1000,
	1155, 9160, -1000, -1000, 1420, 15660, 472, 490, 1673, -1000,
	208, 2179, -1000, 1170, 1159, -1000, 26146, -1000, 1656, 1726,
	159, 1650, -1000, 1649, 1647, 26146, 1521, 324, 1418, -1000,
	-1000, 127, -1000, -1000, 961, -1000, 1645, 7663, -1000, -111,
	349, 2131, -1000, -1000, 926, 912, -1000, -1000, -1000, -1000,
	-1000, 383, -38, -39, -1000, 2110, -35, 2108, 2102, 1510,
	-1000, 3162, -1000, -1000, -1000, 627, -1000, 1640, -1000, 2101,
	236, 177, 2099, 28281, -1000, 1310, 1299, 1072, 1072, 1291,
	1417, 1413, 1395, 1072, 1072, 1289, 1393, 27036, 1286, 1285,
	1275, 1272, 1385, 535, 1266, 1264, 1259, 26146, 1639, 1376,
	-1000, -1000, 2524, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1268, 1638, -113, -1000, -1000, 1631,
	18155, 311, 311, 18155, 18155, 18155, 1630, 382, -1000, -7,
	-1000, -1000, -1000, 18155, 1994, 1501, -1000, 177, 2075, -1000,
	-1000, 18654, 1629, 1267, -27, 2098, -1000, 1378, 2083, 1378,
	1378, -1000, -1000, 4160, -286, -62, 250, 26146, 1378, -1000,
	-1000, 2082, 247, -1000, -1000, -1000, 15161, 15161, -1000, -1000,
	-1000, -1000, 1383, 1381, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 285, 26146, 875, -1000,
	1078, 1509, 7663, 1628, -197, 18155, 872, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 850, 836, 832, 18155, -1000, -1000,
	-1000, 205, -1000, 153, -1000, -1000, 1994, -1000, -1000, -1000,
	-1000, 2028, 14662, -46, -1000, 1379, -1000, 1378, -1000, -1000,
	1083, -1000, -1000, -1000, -1000, -1000, 831, -1000, -1000, 17656,
	188, 239, 224, -1000, 355, -1000, -1000, -1000, -1000, -1000,
	-1000, 282, 825, -1000, 1376, 1370, -1000, 1371, -1000, 1841,
	-1000, 42, 774, -1000, -1000, -1000, -1000, 762, -1000, -1000,
	1072, 1335, 150, -1000, -1000, -1000, -1000, 26146, -1000, 740,
	-1000, -1000, -1000, 820, -1000, -1000, -1000, -1000, 4160, -1000,
	26146, -1000, 26146, 184, 1256, 9160, 1627, 9160, 1625, 194,
	1621, -1000, -1000, -1000, -1000, -1000, 382, -1000, 1840, 1718,
	2168, -1000, -1000, -1000, -1000, 153, 153, 153, 153, 73,
	1243, -1000, 1366, 588, -1000, 1067, -1000, 17157, 26146, -1000,
	-1000, 707, 1618, 2077, -1000, 2558, 26146, 2138, 26146, 1616,
	1062, 9160, -1000, -1000, 2178, -1000, 2169, 459, 459, -1000,
	-1000, -1000, 26146, 5658, -1000, 680, -1000, -1000, 346, 191,
	-1000, 705, -1000, 697, 16658, 1227, 1482, -1000, -1000, -1000,
	1236, 219, -1000, -1000, -1000, 1218, 26146, 691, -1000, 1374,
	180, -1000, -1000, -1000, 672, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 346, 1898, -1000, 1200, -1000, -1000, 28181, 473,
	-1000, -1000, 28181, 178, -1000, 305, 1615, -1000, -1000, 670,
	-1000, 1347, 510, 7663, -1000, 178, 28281, -1000, 7663, 660,
	-1000, 28281, 636, -1000, -1000,
}

var yyPgo = [...]int{
	0, 132, 2666, 205, 143, 134, 203, 2665, 2662, 2022,
	2021, 2661, 2660, 2659, 2658, 2656, 2652, 2634, 2633, 2628,
	2624, 2623, 2622, 2621, 2615, 2614, 2612, 2611, 202, 2610,
	2609, 2608, 2607, 2605, 2604, 2603, 2602, 2601, 2600, 2599,
	2597, 2596, 2595, 2594, 2593, 2590, 2589, 2588, 2587, 2586,
	2585, 2584, 2582, 127, 2580, 2020, 2579, 2573, 2572, 2571,
	2570, 179, 2569, 2568, 2567, 2565, 2564, 2563, 2562, 2561,
	2560, 2559, 2558, 2557, 2556, 2553, 2552, 129, 2551, 2550,
	2549, 2548, 2547, 2546, 195, 210, 57, 2545, 43, 73,
	158, 207, 120, 213, 211, 155, 137, 72, 2544, 2027,
	2543, 154, 188, 117, 25, 2541, 148, 2540, 142, 37,
	47, 206, 113, 55, 68, 102, 2538, 181, 69, 87,
	92, 2537, 2536, 105, 2535, 64, 2534, 81, 41, 97,
	28, 2533, 2531, 2529, 77, 2528, 2527, 2525, 2523, 151,
	2522, 104, 54, 2521, 2520, 2518, 62, 2517, 29, 2516,
	51, 2515, 2511, 2509, 2508, 65, 2507, 2505, 12, 16,
	18, 2504, 15, 1, 2503, 186, 59, 91, 115, 2502,
	385, 2501, 2500, 2499, 124, 2497, 636, 2496, 2495, 2494,
	2493, 9, 2492, 171, 2491, 2488, 84, 111, 2487, 58,
	161, 170, 2485, 2484, 108, 60, 52, 106, 2483, 2482,
	83, 180, 17, 42, 0, 164, 40, 2481, 2480, 2479,
	212, 2475, 166, 167, 190, 168, 209, 125, 2474, 2473,
	53, 2472, 126, 2470, 103, 82, 2469, 177, 2468, 27,
	149, 2467, 176, 2465, 133, 2, 110, 2464, 2462, 30,
	228, 2460, 2459, 2458, 145, 2457, 2451, 63, 138, 2446,
	2445, 2444, 26, 2443, 35, 20, 2442, 94, 2441, 204,
	2439, 152, 109, 157, 153, 123, 184, 187, 70, 119,
	1172, 118, 86, 23, 2437, 183, 2435, 229, 197, 2434,
	156, 2429, 200, 362, 178, 2426, 150, 8, 50, 32,
	2425, 7, 2423, 136, 2421, 2420, 19, 2419, 22, 2418,
	2415, 2413, 2409, 5, 2407, 2403, 2402, 3, 6, 2398,
	4, 194, 95, 107, 2392, 116, 199, 2391, 2374, 2373,
	2372, 2367, 221, 2366, 2365, 2362, 2361, 2357, 2356, 2353,
	2348, 66, 36, 2347, 2346, 2344, 2343, 78, 114, 2342,
	287, 175, 2341, 34, 2340, 2339, 24, 2330, 31, 2329,
	2303, 2302, 13, 163, 2296, 2295, 14, 2294, 2293, 10,
	11, 2288, 2287, 61, 2285, 48, 33, 71, 100, 2284,
	21, 67, 112, 2283, 2282, 198, 196, 174, 2281, 140,
	192, 214, 2280, 182, 2279, 2247, 2245, 2242, 2237, 2235,
	2228, 1180, 2226, 2222, 193, 56, 98, 96, 2221, 2220,
	2219, 76, 139, 101, 93, 169, 2218, 159, 2214, 2212,
	90, 2211, 2210, 2209, 2208, 2205, 2204, 2201, 191, 147,
	2200,
}

//line mysql_sql.y:8185
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 416, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 82, 414, 414, 414, 415, 415, 81,
	81, 70, 69, 362, 362, 361, 361, 360, 360, 359,
	359, 359, 358, 358, 358, 357, 357, 356, 356, 355,
	355, 353, 353, 354, 352, 351, 351, 351, 349, 349,
	347, 347, 348, 348, 342, 342, 345, 345, 343, 343,
	343, 343, 346, 341, 341, 341, 340, 340, 68, 68,
	68, 272, 272, 67, 67, 286, 286, 286, 286, 286,
	284, 284, 284, 284, 284, 284, 283, 283, 282, 282,
	287, 287, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 62, 62, 62, 62, 65, 65, 65, 66,
	281, 281, 281, 63, 64, 64, 271, 271, 276, 276,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 280, 280, 280, 278, 278, 277, 277, 279,
	279, 56, 56, 56, 59, 58, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 57, 57, 57, 57, 57,
	57, 54, 54, 54, 54, 54, 53, 53, 55, 55,
	269, 269, 268, 73, 73, 73, 73, 73, 73, 73,
	72, 72, 75, 75, 74, 76, 61, 61, 61, 61,
	61, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	386, 386, 386, 388, 388, 208, 209, 417, 211, 207,
	207, 207, 382, 382, 383, 384, 385, 385, 385, 71,
	7, 7, 51, 400, 400, 52, 407, 407, 322, 322,
	222, 222, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 325, 326,
	218, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 35, 34, 34, 258, 258, 33, 418, 418,
	191, 191, 41, 42, 43, 44, 45, 46, 47, 32,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 50,
	50, 336, 336, 420, 420, 420, 48, 49, 321, 321,
	321, 39, 38, 37, 36, 36, 31, 31, 30, 30,
	215, 215, 217, 217, 213, 419, 419, 298, 298, 216,
	216, 29, 29, 29, 214, 214, 190, 212, 212, 212,
	8, 8, 6, 11, 11, 11, 11, 11, 11, 11,
	11, 17, 19, 266, 266, 263, 18, 14, 13, 16,
	12, 15, 5, 5, 5, 5, 9, 9, 10, 96,
	96, 129, 129, 395, 395, 391, 391, 392, 392, 392,
	393, 393, 394, 394, 77, 330, 330, 330, 330, 330,
	330, 4, 118, 118, 119, 119, 329, 329, 329, 329,
	329, 329, 329, 413, 413, 371, 371, 371, 372, 117,
	117, 112, 112, 331, 331, 236, 373, 373, 339, 339,
	338, 338, 337, 337, 115, 115, 116, 116, 99, 99,
	85, 85, 344, 344, 344, 344, 350, 350, 319, 319,
	155, 155, 184, 184, 185, 185, 89, 89, 90, 90,
	90, 90, 90, 90, 379, 379, 381, 381, 380, 114,
	114, 110, 110, 111, 111, 111, 109, 109, 108, 107,
	107, 106, 104, 104, 104, 105, 105, 105, 92, 92,
	91, 91, 91, 91, 91, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 93, 93, 387,
	387, 387, 323, 323, 323, 328, 328, 167, 167, 168,
	168, 166, 166, 94, 94, 95, 95, 95, 95, 165,
	165, 164, 97, 97, 103, 102, 102, 98, 98, 98,
	98, 175, 175, 174, 174, 174, 174, 80, 83, 83,
	84, 122, 122, 173, 172, 172, 172, 121, 121, 120,
	120, 113, 113, 101, 101, 101, 101, 171, 100, 169,
	412, 412, 411, 411, 410, 408, 408, 408, 409, 409,
	409, 409, 364, 364, 364, 364, 364, 200, 200, 200,
	206, 206, 199, 199, 199, 199, 199, 210, 205, 205,
	201, 201, 202, 202, 202, 3, 3, 3, 3, 23,
	23, 23, 23, 27, 27, 389, 389, 20, 396, 399,
	397, 397, 401, 401, 401, 402, 402, 402, 403, 403,
	21, 398, 404, 404, 404, 267, 267, 264, 265, 265,
	262, 261, 261, 261, 406, 406, 405, 405, 405, 203,
	203, 22, 257, 257, 259, 260, 260, 251, 251, 251,
	251, 26, 255, 255, 256, 256, 256, 256, 256, 252,
	252, 254, 254, 250, 250, 250, 250, 250, 25, 249,
	249, 247, 247, 245, 245, 246, 246, 244, 244, 244,
	248, 248, 24, 24, 24, 87, 86, 86, 86, 187,
	187, 186, 186, 88, 324, 324, 288, 288, 289, 289,
	289, 292, 292, 304, 304, 305, 305, 303, 303, 310,
	310, 309, 309, 308, 308, 307, 307, 306, 306, 306,
	306, 301, 301, 300, 300, 290, 290, 290, 290, 290,
	291, 291, 291, 299, 299, 302, 302, 146, 146, 147,
	147, 147, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 369, 369, 370, 149, 149, 149, 153, 153, 153,
	153, 153, 153, 148, 148, 150, 150, 130, 130, 128,
	128, 123, 123, 124, 124, 125, 125, 126, 126, 127,
	127, 127, 127, 127, 127, 274, 274, 367, 367, 368,
	368, 363, 363, 363, 366, 366, 366, 366, 366, 365,
	365, 131, 182, 182, 182, 204, 204, 204, 181, 181,
	181, 145, 145, 144, 144, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	273, 273, 219, 219, 220, 220, 162, 161, 161, 161,
	161, 161, 159, 160, 158, 158, 158, 158, 158, 157,
	157, 156, 156, 156, 253, 253, 154, 154, 152, 152,
	152, 151, 151, 151, 311, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 228, 228,
	233, 233, 378, 378, 377, 132, 132, 132, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 141, 141, 141,
	296, 296, 296, 296, 296, 297, 297, 297, 294, 294,
	295, 295, 237, 238, 238, 293, 293, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 335, 335, 335, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 390,
	390, 390, 374, 374, 374, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 179, 179, 179, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	239, 239, 240, 240, 332, 332, 332, 332, 332, 332,
	333, 333, 334, 334, 334, 334, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 226, 176, 176, 176, 241,
	234, 234, 235, 235, 229, 229, 229, 229, 229, 229,
	229, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 230, 230, 232, 232, 243, 243, 243, 242, 242,
	242, 242, 242, 242, 242, 143, 143, 143, 143, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	134, 134, 134, 134, 138, 138, 140, 140, 140, 140,
	140, 140, 140, 140, 140, 140, 140, 140, 140, 140,
	139, 139, 139, 139, 137, 137, 137, 137, 137, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 78, 79, 79, 136, 183,
	183, 312, 312, 315, 315, 313, 313, 314, 316, 316,
	316, 317, 317, 317, 318, 318, 318, 320, 320, 189,
	189, 189, 196, 196, 188, 188, 197, 197, 198, 198,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 4, 0, 1, 1, 0, 1, 6,
	8, 9, 10, 0, 2, 1, 3, 3, 3, 1,
	3, 5, 0, 2, 3, 1, 3, 1, 1, 1,
	3, 1, 1, 1, 1, 0, 3, 3, 0, 3,
	0, 3, 0, 3, 0, 2, 1, 2, 3, 4,
	3, 3, 1, 0, 1, 1, 0, 1, 8, 5,
	7, 0, 3, 8, 5, 1, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 4,
	1, 3, 1, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 2, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 4, 6,
	1, 1, 1, 2, 4, 6, 1, 4, 1, 3,
	3, 4, 4, 4, 3, 3, 2, 4, 4, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 2, 2, 0, 1, 4, 2,
	4, 1, 5, 3, 2, 1, 2, 2, 4, 4,
	5, 2, 1, 3, 4, 4, 1, 2, 9, 7,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 2, 3, 4, 7, 2, 3, 3, 4, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 7, 0, 4, 7, 0, 3, 0, 2,
	0, 1, 1, 1, 1, 4, 2, 2, 3, 3,
	4, 5, 3, 4, 4, 2, 2, 2, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 2, 5, 0, 2, 7, 0, 1,
	0, 1, 5, 3, 2, 5, 5, 5, 5, 4,
	1, 1, 1, 3, 2, 3, 1, 1, 1, 6,
	8, 0, 1, 1, 1, 1, 5, 5, 0, 1,
	1, 3, 3, 3, 6, 7, 4, 4, 7, 8,
	0, 2, 0, 2, 2, 1, 1, 1, 1, 0,
	1, 4, 4, 5, 1, 3, 1, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 3, 1, 4, 6, 4, 4,
	4, 3, 1, 1, 2, 2, 11, 8, 9, 1,
	3, 2, 4, 0, 2, 0, 1, 1, 1, 1,
	0, 1, 0, 1, 4, 2, 1, 5, 4, 4,
	2, 5, 0, 4, 1, 3, 3, 1, 5, 6,
	5, 5, 3, 0, 5, 0, 1, 3, 3, 1,
	3, 1, 3, 1, 3, 4, 0, 1, 0, 1,
	1, 3, 1, 1, 0, 4, 1, 3, 2, 1,
	0, 8, 0, 4, 7, 4, 0, 2, 0, 2,
	0, 2, 0, 4, 1, 3, 1, 1, 4, 3,
	4, 5, 4, 5, 2, 3, 1, 3, 6, 0,
	3, 0, 1, 2, 4, 4, 0, 1, 3, 1,
	3, 3, 0, 1, 1, 0, 2, 2, 3, 3,
	1, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 7, 7, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 2, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 4, 4,
	3, 2, 2, 2, 3, 2, 3, 4, 1, 3,
	4, 0, 2, 1, 1, 2, 2, 0, 1, 2,
	4, 1, 3, 1, 3, 2, 3, 1, 4, 3,
	0, 1, 1, 2, 5, 2, 2, 2, 0, 2,
	3, 3, 0, 1, 3, 1, 3, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 11, 0, 1, 7, 1, 4,
	1, 1, 3, 4, 3, 0, 1, 1, 0, 2,
	7, 1, 0, 2, 2, 1, 3, 2, 1, 3,
	2, 1, 3, 2, 0, 1, 3, 4, 3, 1,
	1, 4, 1, 3, 1, 1, 1, 0, 1, 1,
	1, 11, 0, 2, 3, 2, 3, 1, 1, 1,
	3, 3, 4, 0, 2, 2, 2, 2, 5, 1,
	1, 0, 3, 0, 1, 1, 2, 4, 4, 4,
	0, 1, 11, 9, 11, 2, 2, 4, 5, 1,
	3, 0, 3, 5, 0, 1, 0, 6, 0, 3,
	5, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 4, 6,
	5, 0, 2, 0, 2, 4, 5, 4, 5, 1,
	5, 6, 5, 0, 3, 0, 1, 0, 1, 1,
	3, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	4, 1, 3, 3, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 1, 7,
	7, 7, 7, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 2, 1, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 5, 6, 4, 1,
	1, 2, 0, 1, 1, 2, 5, 0, 1, 1,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 3, 5, 2, 2, 2, 2, 1, 1, 2,
	5, 6, 6, 6, 1, 1, 1, 1, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 5,
	0, 1, 3, 0, 1, 0, 6, 6, 5, 5,
	6, 6, 6, 6, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 5, 4, 6, 6, 7, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 8, 4, 2, 3,
	2, 4, 6, 2, 2, 4, 6, 4, 2, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 1, 3, 4, 4, 5, 3, 4, 5, 6,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -416, -2, -1, -3, -81, -4, -77, -5, -6,
	-8, -60, -72, -74, -76, -75, -28, -7, -71, -53,
	-54, -56, -62, -67, -68, -69, -70, -78, -79, -80,
	-89, -82, -23, -22, -21, -20, 393, 12, 437, -9,
	-10, -379, -11, 230, -207, -208, -209, -211, -417, -29,
	-30, -31, -36, -37, -38, -39, -48, -49, -50, -32,
	-33, -34, -35, -41, -42, -43, -44, -45, -46, -47,
	-52, -51, 207, -55, 61, -57, -58, -59, -63, -64,
	-65, -66, 324, 330, 383, 392, 518, 519, 46, -90,
	-92, 520, -24, -25, -26, -27, 203, 14, 470, -12,
	-15, -13, -16, -14, -18, -19, -17, 225, 224, 37,
	288, 289, 290, 328, 223, 204, 13, 135, 136, 138,
	139, 30, -91, 67, 205, -93, 10, 521, 430, -99,
	38, -128, -204, 70, -192, -195, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 440, 305, 306, 467, 242, 266, 354, 269,
	276, 135, 154, 148, 176, 168, 143, 246, 281, 247,
	77, 138, 423, 87, 404, 380, 141, 261, 263, 265,
	268, 248, 164, 159, 260, 244, 518, 157, 249, 39,
	250, 181, 251, 252, 472, 400, 304, 406, 273, 378,
	158, 401, 264, 403, 183, 187, 415, 330, 152, 153,
	408, 417, 180, 222, 42, 469, 234, 418, 185, 179,
	175, 426, 277, 275, 178, 151, 174, 245, 50, 189,
	188, 190, 374, 375, 376, 377, 253, 254, 318, 414,
	171, 160, 309, 144, 22, 421, 229, 405, 331, 255,
	270, 278, 184, 186, 236, 241, 471, 382, 240, 274,
	419, 156, 233, 262, 228, 422, 145, 324, 333, 256,
	139, 267, 416, 425, 49, 346, 150, 142, 219, 136,
	238, 243, 11, 257, 258, 259, 280, 279, 271, 172,
	235, 177, 162, 149, 173, 137, 237, 424, 347, 516,
	307, 363, 170, 167, 239, 212, 420, 407, 140, 367,
	348, 165, 282, 513, 514, 515, 319, 303, 283, 284,
	163, 226, 399, 285, 287, 373, 296, 349, 381, 355,
	350, 196, -99, -55, -10, -9, -91, -92, -128, 210,
	-212, 23, 378, -61, 379, 207, 67, -204, -5, -4,
	-77, -53, -89, -210, -204, 288, 288, -210, 210, -204,
	240, 362, -322, 215, -283, -257, 241, -282, -259, -285,
	-260, 31, 203, 205, 204, 237, 14, 328, 211, 12,
	10, 329, 223, 24, 25, 27, 13, 330, 332, 28,
	333, 336, 337, 338, 41, 341, 342, 230, 70, 73,
	248, 248, -235, -229, 94, 231, -231, -224, -225, -227,
	-359, -353, -223, 67, 119, 120, 127, 95, -226, -311,
	35, 97, 477, 438, -177, -178, -179, -180, -204, -354,
	-352, 73, 78, 81, 84, 85, 83, 82, 161, 80,
	74, 131, 132, -92, 70, -374, 485, -193, 506, 486,
	505, 46, -327, -334, 209, -332, 166, 226, 162, 12,
	125, 373, 130, 163, 482, 502, 440, 509, 479, 480,
	474, 475, 476, 478, 487, 489, 501, -335, 497, 507,
	508, 495, 72, 71, 500, 499, 488, 483, 484, 490,
	473, 481, 491, 492, 498, 503, 504, 312, 87, 313,
	314, 430, 308, 315, 215, 378, 55, 316, 317, 318,
	319, 320, 437, 321, 56, 322, 311, 230, 363, 323,
	165, 182, 442, 441, 443, 434, 431, 429, 432, 433,
	435, 436, 493, 494, 496, -279, -277, -204, -83, -84,
	511, -108, -109, -170, 19, 6, 7, 8, 9, -414,
	380, 471, -324, 305, 363, 240, -251, -249, 285, 281,
	339, 220, 219, 88, 430, 209, -391, -392, 200, 201,
	202, -381, 463, -380, -204, 314, 26, 210, 325, 410,
	411, 217, -40, -336, -321, 407, 406, -216, 405, 398,
	409, 400, 203, 464, -189, 349, 381, 236, 427, 428,
	326, 382, 415, 416, 401, 87, 169, 166, 305, 363,
	-391, 140, 137, -270, 140, 93, 145, 144, -270, 240,
	362, 40, -276, 373, -275, -277, 415, 416, 426, 71,
	72, 414, -189, 87, -109, -170, -108, -90, -92, -379,
	305, 363, 240, 211, 210, 212, 430, 288, -323, -387,
	31, -328, 197, 198, 199, 32, 33, -1, -205, -202,
	-195, 70, 71, 72, -115, 232, -128, 133, -115, -109,
	-108, -109, -128, -181, -204, 380, 103, -61, -61, 379,
	-382, -383, -384, -386, 207, 379, 378, 133, 15, -210,
	-210, 65, -128, -259, 240, -283, -257, 35, 64, 134,
	213, 134, 64, 67, 326, 305, 363, 327, 430, 210,
	339, 212, 240, 340, 305, 363, 210, 212, 430, 240,
	305, 210, 212, 363, 240, 340, 398, 399, 212, 26,
	331, 334, 335, 399, -340, 426, -340, 134, 93, 90,
	91, 92, -229, 110, -242, 103, 104, 105, 106, 107,
	108, 109, 116, 115, 126, 119, 120, 121, 122, 123,
	124, 125, 117, 118, 113, 94, 111, 112, 96, -92,
	-229, -235, -227, -227, -227, -227, -311, -233, -229, 67,
	67, 133, 73, -229, 67, 67, 67, 67, 67, 67,
	67, 67, 67, -333, 67, 67, -239, -240, 67, 67,
	73, 73, 67, 67, 67, -227, 73, -240, -240, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 134, -134, -138, -135, -137,
	-136, -140, -139, 166, 167, 130, 170, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 30, 182, 226,
	162, 163, 164, 165, 183, 148, 168, 468, 191, 149,
	192, 150, 193, 151, 194, 152, 153, 195, 154, 157,
	158, 159, 156, 133, -109, 134, 67, -85, 38, -111,
	21, -93, -92, 20, 31, 32, 31, 32, 31, 32,
	31, 32, 78, -389, 210, 463, -247, 215, -247, -247,
	211, -247, 210, 210, -393, 147, 134, -381, -114, 67,
	-215, 111, 23, 238, 412, 413, 46, 238, 275, 412,
	-215, -420, 211, 408, 42, 239, 238, -110, -111, -110,
	402, 399, -298, 403, 404, -216, -215, -215, -216, 210,
	212, 430, -418, -419, 15, 113, 238, -418, 30, 30,
	-322, -322, -394, 214, 419, 470, 143, 144, 145, -259,
	240, 240, 134, 103, 23, -278, 103, 114, -277, -277,
	-277, -278, -278, -148, 40, -203, 130, -204, 73, -148,
	40, -110, -93, -92, 68, 68, -322, -322, -322, -322,
	-322, -322, -322, -210, -94, -95, 121, -229, -204, -94,
	38, 399, -329, -118, -89, 306, 67, 67, -204, -330,
	46, -89, 67, 30, -110, -85, -111, 133, 78, 73,
	-61, 68, 134, -385, 84, 85, -388, 180, 172, -204,
	-73, 73, -3, -4, -5, -6, -28, -53, -89, -355,
	-353, 67, 31, 372, 64, 15, -284, 210, 430, 325,
	236, 212, 305, -282, -266, -263, -261, -203, -259, -262,
	-261, -287, -181, 399, -86, 384, 287, -86, -229, -229,
	-229, -229, -229, 83, 94, 303, 84, 85, -224, -243,
	31, 283, 284, -225, -225, -225, -225, -225, -225, -225,
	-225, -225, -225, -225, -225, -232, -241, -311, 67, 113,
	111, 112, 96, -227, -225, -225, 68, 134, -378, -377,
	98, -229, -229, -204, -375, -376, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 316, 311, 317,
	315, 308, 323, 318, 319, 165, 461, 462, 455, 456,
	457, 458, 459, 460, -234, -235, -234, -229, -375, -234,
	-176, 32, 31, -176, -229, -390, 301, 300, 302, -112,
	-204, -234, 68, 68, 68, 78, -235, -234, -225, -234,
	-376, -176, -235, -235, -176, -176, -176, -176, 121, -176,
	-176, -176, -176, -176, -176, -176, -176, -277, 40, -318,
	347, 346, -312, -314, 67, -313, 67, -313, -312, -312,
	67, 67, -315, 67, -315, -315, -312, -316, 67, -316,
	-317, 67, -316, -204, -110, -84, -338, -337, -229, 40,
	512, -85, -229, -107, -106, -229, -415, 73, 212, -247,
	-396, -204, 94, -267, -264, -261, -257, -202, -204, -247,
	-247, -394, -380, 34, -113, -204, -166, 16, -227, -261,
	-418, -418, -213, -419, -213, -215, -213, -166, -419, -215,
	-215, -217, -419, -213, 399, -166, -166, -298, -214, -204,
	-214, -247, -191, -190, -204, -191, -396, -267, -102, -97,
	-101, -98, -103, -169, -171, -100, 67, -128, -92, -204,
	420, 421, 141, 144, 143, 31, 372, -281, 372, 31,
	-257, -275, -271, 73, 373, -262, -280, 64, 130, -337,
	-278, -278, -278, -280, -280, 129, -85, -396, -266, -257,
	-204, -130, -128, -130, -205, -165, 134, -164, 15, -199,
	-204, 34, 73, 133, -165, 73, -130, -413, 64, 46,
	30, 67, -117, 68, -112, -116, -204, -331, -236, -373,
	511, -117, 68, -371, -372, -112, -85, -85, -197, -198,
	-188, -194, -201, -202, -195, 208, 31, 93, 34, 36,
	312, 344, 96, 130, 20, 97, 166, 129, 314, 438,
	313, 203, 59, 441, 443, 442, 431, 429, 365, 369,
	371, 368, 430, 398, 40, 14, 37, 224, 32, 33,
	123, 205, 100, 101, 227, 35, 225, 85, 44, 23,
	62, 15, 17, 18, 315, 364, 215, 214, 113, 384,
	211, 57, 12, 132, 38, 110, 366, 53, 89, 45,
	55, 111, 21, 432, 433, 41, 383, 392, 466, 231,
	125, 316, 317, 60, 94, 372, 83, 43, 64, 90,
	19, 58, 112, 206, 437, 56, 370, 320, 322, 332,
	463, 321, 209, 409, 10, 311, 439, 30, 223, 54,
	210, 99, 213, 84, 230, 6, 88, 13, 61, 65,
	434, 435, 436, 46, 98, 16, 323, 470, 385, 386,
	387, 388, 389, 390, 391, 191, 192, 193, 194, 195,
	272, 218, 216, 220, 221, 511, 512, 197, 198, 300,
	302, 169, 200, 201, 202, 232, 147, 7, 351, 352,
	353, 356, 357, 358, 359, 360, 361, 362, 519, 393,
	394, 395, 396, 397, 410, 411, 412, 413, 23, -61,
	-383, 133, 134, -113, -284, -265, -262, -286, 121, 70,
	-272, 134, 470, 522, 71, 213, -406, -405, 364, 68,
	134, -341, 214, 437, 73, 523, 196, -341, 83, 303,
	84, 85, -311, -235, -232, -227, -225, -225, -230, 227,
	93, -229, -228, -377, 100, -229, 34, 134, 65, 133,
	68, 68, 15, 15, 68, -229, -229, 68, 15, 15,
	-229, 68, 133, 68, 68, 68, 65, 68, 134, 68,
	134, -229, 68, 68, -229, -229, -229, -235, 68, -229,
	-229, -229, -229, -229, -229, -229, -229, -229, -320, 348,
	78, 78, -183, 73, -183, 78, 78, 78, 134, 68,
	73, 134, 22, 134, -104, 36, 37, -128, 215, -128,
	-399, 351, 35, -407, 134, 40, -405, -250, 65, -245,
	-246, -244, -248, 40, -128, -128, 15, -96, -129, -204,
	67, 68, 134, -229, -258, 65, -191, -191, -217, -212,
	-217, -166, -217, -128, -204, -166, -166, -215, -205, -217,
	-217, -213, 133, -190, -400, 351, -407, 30, -172, -173,
	-174, -175, 53, 57, 59, 54, 55, 56, 60, 30,
	134, -200, -206, 34, -201, 73, -202, -195, -200, -92,
	-97, -102, -200, 67, 142, 145, 145, 144, 213, 67,
	103, -280, -280, -280, 40, -203, 64, 134, -166, -95,
	-97, -204, 73, -204, 121, -166, -155, 514, 38, 39,
	-331, -371, -119, -396, 68, 134, -118, 306, 68, 134,
	134, 67, 68, 46, 134, 103, 133, 380, -204, -353,
	68, -286, 134, 213, 133, 133, -263, 330, -203, -265,
	20, 470, -181, 38, -187, -186, 73, 523, 38, 68,
	-230, 93, -227, -224, 68, 101, -229, 99, -132, -134,
	346, 347, -133, -139, 130, 166, 226, 165, 164, 162,
	346, 347, -148, -204, -229, -229, 68, 68, -229, -229,
	15, -204, -148, -225, -229, 68, -293, 394, -293, 68,
	68, 68, 68, -293, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 134, 68, 68, 68, 134,
	68, 134, -337, -344, 403, -229, -229, -106, -105, 43,
	-114, 94, 67, -402, 405, 353, -196, 103, -222, -221,
	307, 41, -325, 373, 359, 360, -264, 240, 64, 295,
	296, 297, 298, -244, -189, 129, 251, 67, 67, -128,
	-96, -204, 15, 134, -395, 133, -1, -204, -257, -215,
	-166, -419, -166, -215, -215, -217, -204, -402, -196, -222,
	-269, -268, -181, -101, -101, -101, -101, 53, 53, 53,
	58, 53, 58, 53, -174, -269, -103, -114, -206, 68,
	-412, -411, -410, -408, 61, 214, 62, -234, 145, -265,
	-218, 73, -271, -128, -128, -168, 17, 133, -168, 78,
	73, 89, 68, 134, -118, -112, 46, 67, -204, -236,
	-339, -338, 46, -89, -331, -372, -337, -197, -194, -202,
	-195, 78, 15, -262, -257, 121, 121, 70, 331, -272,
	73, 352, 73, 210, 524, 134, 103, -187, 210, -224,
	-229, 68, -141, 153, 152, -141, 68, -312, -313, -312,
	-315, -312, -141, -141, 68, 68, 23, 68, 68, 68,
	-229, 68, 68, 134, -293, 67, -293, -293, -293, -293,
	-293, -293, -293, -293, -293, -293, -293, -293, 73, 78,
	78, -350, 390, 385, 387, 44, 45, 34, 35, -123,
	-124, -125, -131, -126, -181, -220, -127, 218, 216, 220,
	-368, 88, 221, 272, 89, 211, -403, 77, -397, 73,
	-204, -404, 77, 354, 132, 309, 40, 355, 356, 370,
	304, 78, 78, 361, -398, 70, -128, -196, -196, -196,
	-123, -123, -115, 65, 133, -97, -129, -204, 121, 68,
	-166, -204, -166, -166, -215, -403, -397, -404, -166, 134,
	103, -121, -120, 64, 65, -122, 64, -120, 53, 53,
	-166, -410, -409, 23, -368, -368, -368, 68, 68, -167,
	18, 20, 121, -167, -155, 13, -89, -396, 46, -89,
	-331, -119, 68, -331, -257, -272, 373, -128, -186, 73,
	524, -128, -229, 68, -229, -238, -237, 232, 68, 68,
	-319, 513, -348, 385, 20, 20, -89, -128, 68, 134,
	-134, -127, -204, 89, -367, -368, -247, -367, 89, 67,
	73, -401, 364, 73, 73, 78, 40, 78, 132, 357,
	-326, 67, -148, -150, -203, 130, 73, 68, 68, -200,
	-97, -204, -166, -395, 133, -166, -166, -401, -109, -268,
	-337, -229, 67, -229, 67, 53, 19, 17, -229, -235,
	-371, -331, 68, -118, -88, -342, -298, 68, 68, -109,
	20, -155, 73, 20, 73, -346, 73, -114, -146, -147,
	-163, 344, 242, -248, 246, 77, 247, 380, 248, 211,
	250, 251, 252, 222, 253, 254, 255, 373, 256, 257,
	258, 259, 327, 6, 291, -125, -145, -144, -142, 83,
	94, 40, 344, -143, 77, 129, 265, 243, 266, -162,
	-219, 64, 350, 216, 88, 89, 332, -220, -363, -365,
	-204, -365, -204, -363, -363, -247, -229, 20, 470, 308,
	40, 78, 40, 358, -252, -254, -181, 67, -87, -86,
	-146, -166, -166, -110, -113, -364, -204, 216, 20, 20,
	-88, -349, 390, -345, -343, 385, 386, 387, 388, -295,
	-294, -297, 391, 274, 397, -235, -184, 515, 73, 387,
	34, -288, 232, 134, -163, -196, -196, -189, 129, -196,
	-196, -196, -196, 249, 249, -196, -196, -196, -196, -196,
	-196, -196, -196, -196, -196, -196, -196, -196, -196, 67,
	-142, 83, -225, 73, -150, -151, 40, 264, 260, -152,
	40, 244, 245, -154, 67, 272, 13, 89, 89, -128,
	67, 65, 282, 67, 67, 67, -365, 68, 73, 352,
	73, 308, 68, 134, -312, -229, -88, -288, -109, 68,
	68, 134, -351, 214, -347, 389, -343, 20, 387, 20,
	20, 68, -296, 96, 357, 361, -229, 67, 20, -89,
	-289, 281, 20, -163, 78, 78, -196, -196, 78, 73,
	73, 73, -196, -196, 78, 73, -206, 78, 78, 78,
	78, 40, 73, -153, 40, 260, 264, 261, 262, 263,
	78, 40, 78, 40, 78, 40, -204, 67, -369, -370,
	73, 78, 67, -332, -253, 67, -252, -366, 295, 296,
	297, 299, 298, -366, -252, -252, -252, 67, -274, -273,
	273, 94, 373, -255, -254, -104, 68, -289, -110, -204,
	216, -358, 67, 78, -348, 20, -346, 20, -346, -346,
	-296, 511, 395, 396, 395, 396, -185, -204, -346, 20,
	-290, 274, 275, -291, -302, 277, -148, -148, 73, 73,
	-149, 243, -130, 68, 134, 103, 68, -229, -239, -157,
	-156, 466, -252, 68, 68, 68, 68, -252, 273, -256,
	222, 77, 470, 293, 294, -104, -362, 30, 68, -357,
	-356, -182, -352, -204, 390, 391, 73, -346, 93, 68,
	134, -181, 67, -300, 278, 67, -298, 67, -298, 89,
	296, 244, 245, 68, -370, 73, 68, -161, -159, -160,
	64, 401, 270, 271, 68, -255, -255, -255, -255, 68,
	-196, 73, 292, -361, -360, -359, 68, 134, 133, -296,
	-204, -287, -292, 279, 78, -225, 67, -225, 67, -299,
	276, 67, -273, -160, 64, -159, 64, 14, 13, -162,
	78, -202, 134, 103, -356, -204, 68, -304, 67, 20,
	68, -287, 68, -287, 67, 103, -225, -158, 267, 268,
	30, 144, -158, -360, 40, -229, 133, -305, -303, 232,
	-291, 68, 68, 68, -287, 78, 68, 83, 40, 269,
	-204, 68, 134, 70, -301, 280, 68, -303, -306, 46,
	78, -310, -307, 67, -163, 234, 113, -310, -163, -309,
	-308, 279, 235, 67, 68, 134, 70, 231, 67, -235,
	-308, -307, -235, 68, 68,
}

var yyDef = [...]int{
	32, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 655, 656, 657, 658, 0, 0, 0, 422,
	423, 0, 402, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 314, 315, 316, 317, 318, 319, 320, 321,
	322, 323, 324, 325, 326, 327, 328, 329, 330, 331,
	280, 281, 0, 226, 222, 201, 202, 203, 162, 163,
	164, 165, 288, 0, 0, 0, 0, 0, 0, 506,
	-2, 34, 659, 660, 661, 662, -2, 435, 0, 403,
	404, 405, 406, 407, 408, 409, 410, 269, 270, 271,
	265, 266, 268, 267, -2, 0, 435, 215, 0, 206,
	206, 0, 526, 0, 0, 540, 562, 32, 0, 484,
	0, 489, 849, 885, 886, 887, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 484, 227, 424, 425, 526, 526, 400, 0,
	251, 0, 1509, 255, 0, 0, 0, 397, 246, 247,
	248, 249, 250, 0, 647, 0, 0, 242, 0, 221,
	1568, 0, 0, 0, 0, 0, 0, 106, 702, 108,
	704, 112, 119, 0, 0, 124, 125, 128, 129, 130,
	131, 132, 0, 136, 0, 138, 141, 0, 143, 144,
	0, 147, 148, 149, 0, 159, 160, 161, 705, 706,
	86, 86, 1255, 1152, 0, 1159, 1160, 1171, 1180, 957,
	958, 959, 960, 0, 0, 0, 0, 0, 967, 968,
	0, 980, 1656, 0, 974, 975, 976, 977, 49, 61,
	62, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 0, 1125, 944, 885, 0, 1664, 0, 1684, 1665,
	1683, 0, 0, 1110, 0, 1100, 0, -2, -2, 0,
	0, 1635, 0, -2, 1661, 1680, 1688, 1687, 1658, 1659,
	1653, 1654, 1655, 1657, 1666, 1668, 1679, 0, 1675, 1685,
	1686, 0, 63, 64, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1116, -2, 1118,
	1119, 1121, 1122, 1123, 1124, -2, 1127, 1128, 1129, -2,
	-2, 1132, 1133, 1134, 1135, 1136, 1137, 1140, -2, 1142,
	-2, 1144, 1112, 1113, 1114, 1115, 1104, 1105, 1106, 1107,
	1108, 1109, -2, -2, -2, 0, 199, 197, 526, 598,
	0, -2, 0, 0, 0, 545, 548, 551, 554, 0,
	35, 36, 665, 731, 731, 731, 0, 731, 0, 0,
	755, 708, 709, 710, 729, 730, 440, 436, 437, 438,
	439, 514, 0, 516, 519, 380, 333, 0, 0, 0,
	344, 0, 380, 0, 0, 521, 521, 0, 389, 380,
	380, -2, 0, 350, 351, 352, 338, 0, 338, 356,
	357, 358, 369, 370, 390, 1279, 0, 0, 288, 288,
	442, 216, 217, 205, 207, 0, 211, 0, 204, 1568,
	0, 0, 173, 1635, 178, 0, 1516, 1582, 1531, 0,
	0, 1549, 0, -2, 521, 0, 527, 0, 526, 0,
	288, 288, 288, 288, 288, 288, 288, 0, 0, 0,
	563, 564, 559, 560, 561, 565, 566, 3, 0, 648,
	649, 652, 653, 654, 452, 0, 488, 0, 0, 521,
	-2, 0, 401, 252, 888, 0, 0, 256, 257, 0,
	0, 272, 0, 275, 260, 261, 262, 0, 0, 244,
	245, 0, 0, 223, 0, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 116, 113, 120, 123, 133, 140,
	0, 152, 154, 157, 114, 121, 126, 127, 134, 155,
	115, 117, 118, 122, 156, 158, 135, 139, 153, 137,
	142, 145, 146, 151, 0, 87, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	1152, 0, 963, 964, 965, 966, 969, 0, 981, 0,
	0, 0, 1209, 0, 1150, 1150, 0, 1150, 1146, 1146,
	0, 0, 1150, 1088, 0, 0, 1090, 1101, 0, 0,
	1093, 1094, 1150, 0, 1150, 1098, 1099, 1084, 1085, 0,
	1146, 0, 0, 1146, 1146, 1146, 1146, 1146, 1146, 1146,
	1146, 1146, 1146, 1146, 1146, 0, 1256, 1274, 1211, 1212,
	1213, 1261, 1215, 1265, 1265, 1261, 1261, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 0, 0, 1254, 1234,
	1263, 1263, 1263, 1261, 1258, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1268,
	1268, 1271, 1268, 0, 521, 0, 0, 509, 0, 490,
	0, 542, 544, 0, 546, 547, 549, 550, 552, 553,
	555, 556, 37, 0, 731, 666, 0, 0, 0, 0,
	0, 0, 731, 731, 442, 441, 0, 515, 0, 0,
	571, 0, 0, 338, 338, 0, 0, 380, 343, 0,
	571, 0, 363, 364, 365, 380, 380, 371, 522, 372,
	373, 382, 0, 387, 388, 0, 571, 571, 0, 0,
	0, 731, 340, 339, 385, 386, 354, 340, 1280, 1281,
	0, 0, 0, 443, 0, 0, 209, 0, 214, 166,
	0, 0, 0, 0, 0, 0, 195, 196, 0, 0,
	0, 0, 0, 186, 189, 843, 844, 699, 700, 190,
	191, 490, 541, 543, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 421, 579, 573, 575, 642, 49, 579,
	0, 0, 463, 0, 457, 0, 0, 0, 850, 444,
	476, 446, 0, 465, 490, 512, 490, 0, 253, 0,
	258, 0, 0, 274, 276, 277, 278, 263, 264, 398,
	240, 241, 233, 234, 235, 236, 237, 238, 239, 243,
	59, 0, 224, 225, 0, 0, 0, 100, 101, 102,
	103, 104, 105, 107, 91, 413, 415, 691, 703, 0,
	694, 0, 110, 150, 83, 0, 0, 83, 1153, 1154,
	1155, 1156, 1157, 1161, 0, 1163, 1165, 1167, 1169, 0,
	1185, -2, -2, 945, 946, 947, 948, 949, 950, 951,
	952, 953, 954, 955, 956, 1172, 1183, 1184, 0, 0,
	0, 0, 0, 1181, 1176, 0, 961, 0, 978, 982,
	0, 0, 0, 50, 1145, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 0, 1151, 0, 1152, 0, 0,
	0, 1147, 1148, 0, 0, 0, 1049, 1050, 1051, 0,
	471, 0, 1111, 1089, 1102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 1277,
	1275, 1276, 1214, 1262, 0, 1239, 0, 1240, 1241, 1242,
	0, 0, 1235, 0, 1236, 1237, 1238, 1230, 0, 1231,
	1232, 0, 1233, 198, 597, 599, 0, 480, 482, 483,
	0, 510, 523, 528, 529, 532, 33, 38, 0, 0,
	0, 668, 0, 286, 685, 0, 701, 723, -2, 0,
	0, 0, 517, 0, 0, 611, 332, 0, 381, 335,
	340, 340, 382, 0, 382, 571, 382, 349, 0, 571,
	571, 380, 0, 382, 382, 376, 377, 0, 391, 394,
	392, 0, 353, 341, 396, 355, 283, 286, 584, 0,
	585, 586, 582, 613, 637, 637, 0, 637, 617, 849,
	218, 219, 0, 0, 213, 167, 168, 0, 170, 171,
	172, 179, 174, 176, 0, 0, 180, 192, 193, 194,
	0, 0, 0, 184, 185, 0, 508, 411, 412, 416,
	0, 418, 847, 419, 420, 571, 0, 580, 0, 576,
	643, 0, 645, 0, 571, 500, 0, 451, 0, 476,
	465, 0, 0, 452, 469, 0, 486, 445, 473, 0,
	477, 0, 0, 450, 466, 0, 511, 513, 889, 0,
	1286, -2, 1288, -2, -2, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 0, 259,
	273, 0, 0, 0, 0, 94, 688, 0, 95, 99,
	89, 0, 0, 0, 693, 0, 690, 695, 0, 109,
	0, 0, 84, 85, 746, 751, 0, 0, 1162, 1164,
	1166, 1168, 1170, 0, 1173, 1181, 1177, 0, 1174, 0,
	0, 1153, 0, 983, 0, 0, 0, 0, 0, 0,
	1036, 1037, 0, 0, 1041, 0, 0, 1044, 0, 0,
	0, 1048, 0, 1087, 1103, 1091, 0, 1095, 0, 1097,
	0, 0, 1015, 1015, 0, 0, 0, 0, 1015, 0,
	0, 0, 0, 0, 0, 0, 0, 1257, 1210, 1278,
	0, 0, 0, 1259, 0, 0, 0, 0, 0, 600,
	492, 0, 0, 0, 535, 533, 534, 519, 0, 0,
	675, 1282, 732, 290, 0, 0, 687, 0, 0, 728,
	-2, 735, 0, 741, 0, 0, 0, 0, 429, 433,
	32, 520, 0, 572, 334, 0, 380, 345, 347, 384,
	348, 342, 346, 571, 849, 366, 367, 571, 383, 380,
	380, 382, 0, 393, 675, 1282, 290, 0, 0, 0,
	0, 0, 604, 0, 0, 603, 0, 0, 0, 0,
	0, 519, 638, 0, 640, 641, 650, 651, 615, -2,
	0, 584, 620, 1150, 220, 208, 210, 0, 0, 0,
	0, 181, 182, 183, 187, 188, 0, 0, 569, 574,
	581, 644, 646, 50, 577, 569, 39, 0, 0, 0,
	456, 462, 0, 454, 452, 0, 0, 0, 485, 0,
	476, 478, 0, 476, 0, 0, 0, 0, 399, 60,
	279, 0, 0, 0, 0, 0, 414, 0, 692, 91,
	0, 0, 111, 0, 0, 749, 0, 751, 0, 1149,
	1175, 0, 1182, 1178, 962, 970, 979, 0, 0, 985,
	997, 997, 0, 988, 1261, 1265, 991, 1261, 1263, 1261,
	997, 997, 0, 51, 0, 0, 1042, 1043, 0, 0,
	0, 472, 0, 0, 0, 1015, 1018, 0, 1019, 1015,
	1015, 1015, 1015, 1024, 1015, 1015, 1015, 1015, 1015, 1015,
	1015, 1015, 1267, 1266, 1252, 0, 1253, 1264, 1269, 0,
	1272, 0, 481, 496, 0, 524, 525, 530, 531, 0,
	0, 0, 851, 678, 676, 677, 0, 1283, 682, 291,
	292, 293, 294, 0, 0, 0, 686, 0, 0, 724,
	725, 726, 727, 736, 1282, 1282, 1282, 851, 851, 484,
	0, -2, 0, 0, 431, 0, 0, 612, 336, 571,
	359, 0, 374, 571, 571, 380, 395, 678, 0, 682,
	571, 230, 0, 607, 601, 0, 590, 605, 606, 593,
	0, 595, 0, 591, 592, 571, 583, 614, 639, 616,
	619, 621, 622, 628, 0, 0, 0, 0, 212, 169,
	0, 310, 175, 417, 848, 567, 0, 0, 567, 501,
	500, 0, 453, 0, 0, 470, 476, 0, 487, 474,
	0, 479, 476, 449, 448, 467, 468, 890, 1287, 1284,
	1285, 254, 0, 689, 91, 96, 97, 98, 92, 90,
	696, 0, 698, 0, 747, 751, 0, 0, 0, 1179,
	984, 971, 986, 998, 999, 987, 972, 989, 990, 992,
	993, 994, 995, 996, 973, 1038, 0, 1040, 1045, 1046,
	0, 1092, 1096, 0, 1017, 1013, 1020, 1021, 1022, 1023,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1260, 0,
	0, 498, 72, 0, 0, 536, 537, 0, 0, 0,
	852, 853, 855, 856, 0, 0, 858, 914, 0, 867,
	731, 867, 0, 0, 869, 870, 667, 0, 0, 670,
	671, 680, 0, 0, 0, 296, 297, 0, 0, 0,
	309, 305, 306, 307, 287, 681, 0, 0, 0, 0,
	0, 0, 637, 0, 0, 571, 430, 433, 434, 518,
	337, 571, 378, 375, 571, 282, 0, 285, 526, 0,
	0, 587, 608, 0, 0, 588, 0, 589, 594, 596,
	229, 623, 0, 0, 625, 626, 627, 618, 177, 557,
	0, 0, 578, 558, 40, 465, 458, 455, 476, 461,
	460, 0, 475, 447, 93, 88, 697, 452, 750, 752,
	748, 74, 0, 1047, 0, 526, 1014, 0, 1270, 1273,
	500, 0, 497, 0, 0, 0, 663, 519, -2, 0,
	-2, 857, 915, 879, 879, 868, 879, 879, 731, 0,
	679, 669, 0, 683, 684, 0, 298, 299, 0, 302,
	308, 0, 737, 738, 845, 846, 739, 0, -2, 571,
	571, -2, 427, 432, 0, 360, 379, 284, 521, 231,
	232, 609, 0, 602, 632, 629, 0, 0, 568, 570,
	464, 459, 453, 74, 41, 68, 0, 1039, 1086, 1010,
	0, 502, 499, 0, 493, 495, 82, 0, 756, -2,
	799, 1282, 1282, 0, 1282, 1282, 1282, 1282, 0, 0,
	1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
	1282, 1282, 1282, 1282, 0, 854, 881, -2, 893, 895,
	0, 0, 898, 899, 0, 0, 0, 0, 936, 905,
	0, 0, 909, 0, 1197, 1198, 0, 913, 0, 871,
	880, 0, 880, 0, 0, 879, 0, 0, 0, 295,
	300, 0, 303, 304, 0, 719, 1261, 0, 743, 74,
	756, 526, 428, 228, 0, 0, 633, 635, 630, 631,
	42, 65, 70, 75, 76, 0, 0, 0, 0, 0,
	1011, 0, 1005, 1006, 1007, 1012, 491, 0, 73, 0,
	0, 758, 0, 740, 801, 0, 0, 1282, 1282, 0,
	0, 0, 0, 1282, 1282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	894, 896, 897, 900, 901, 902, 941, 942, 943, 903,
	938, 939, 940, 904, 0, 0, 0, 1195, 1196, 934,
	0, 0, 0, 0, 0, 0, 0, 865, 672, 0,
	674, 301, 712, 0, 532, 0, 745, 758, 521, 610,
	624, 0, 52, 0, 72, 0, 77, 0, 0, 0,
	0, 1016, 1008, 0, 0, 0, 0, 0, 0, 664,
	742, 0, 795, 800, 802, 803, 0, 0, 806, 807,
	808, 809, 0, 0, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 837, 838, 839, 840, 841, 842,
	822, 823, 824, 825, 826, 827, 834, 0, 0, 831,
	0, 0, 0, 1100, 929, 0, 0, 872, 874, 875,
	876, 877, 878, 873, 0, 0, 0, 0, 864, 866,
	910, 0, 673, 711, 720, 721, 532, 744, 426, 634,
	636, 43, 0, 0, 69, 0, 78, 0, 80, 81,
	0, 1000, 1001, 1003, 1002, 1004, 0, 504, 494, 0,
	783, 0, 0, 789, 0, 796, 804, 805, 810, 811,
	828, 0, 0, 830, 0, 0, 937, 0, 908, 917,
	930, 0, 0, 712, 712, 712, 712, 0, 911, 713,
	1282, 0, 0, 717, 718, 722, 753, 0, 53, 0,
	55, 57, 58, 882, 66, 67, 71, 79, 0, 503,
	0, 759, 0, 761, 0, 0, 0, 0, 0, 793,
	0, 835, 836, 829, 832, 833, 906, 916, 918, 919,
	0, 931, 932, 933, 935, 859, 860, 861, 862, 0,
	0, 715, 0, 44, 45, 0, 54, 0, 0, 1009,
	505, 0, 763, 0, 784, 0, 0, 0, 0, 0,
	0, 0, 907, 920, 0, 921, 0, 0, 0, 863,
	714, 716, 0, 0, 56, 883, 760, 757, 0, 795,
	785, 0, 787, 0, 0, 0, 0, 922, 924, 925,
	0, 0, 923, 46, 47, 48, 0, 0, 765, 0,
	781, 786, 788, 790, 0, 794, 792, 926, 928, 927,
	884, 764, 0, 777, 762, 0, 791, 766, -2, 0,
	782, 767, -2, 0, 775, 0, 0, 768, 776, 0,
	771, 0, 0, 0, 770, 0, -2, 778, 0, 0,
	772, -2, 0, 780, 779,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 521,
	104, 103, 105, 3, 522, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 523, 115, 524, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:605
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:611
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:645
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:650
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:656
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:676
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:682
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:689
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:697
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:703
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:712
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:720
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:733
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:745
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:757
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:761
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:767
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:771
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:777
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:784
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:793
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:797
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:801
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:810
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:814
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:820
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:829
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:840
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:844
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:850
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:854
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:860
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:864
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:870
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:894
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:913
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:917
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:921
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:930
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:938
		{
			yyVAL.str = ""
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:942
		{
			yyVAL.str = yyDollar[3].str
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:947
		{
			yyVAL.str = "\n"
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:951
		{
			yyVAL.str = yyDollar[3].str
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:960
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:984
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:988
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:994
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1000
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1018
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1035
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1058
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1066
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1071
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1075
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1081
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1094
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1105
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1118
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1122
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1132
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1145
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1158
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1164
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1170
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1177
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1185
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1194
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1198
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1202
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1206
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1210
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1214
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1221
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1225
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1231
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1238
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1247
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1251
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1257
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1261
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1265
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1389
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1393
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1397
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1401
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1405
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1409
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1413
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1417
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1421
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1425
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1429
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1433
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1437
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1441
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1445
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1449
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1453
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1465
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1472
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1479
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1488
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1518
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1522
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1526
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1549
		{
			yyVAL.str = yyDollar[3].str
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1555
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1559
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1565
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1573
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1582
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1590
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1598
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1621
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1644
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1651
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1658
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1666
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1673
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1680
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1697
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1703
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1707
		{
			yyVAL.str = yyDollar[1].str
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1714
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1720
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1724
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1735
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1741
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1746
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1750
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1754
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1758
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1762
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1766
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1770
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1774
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1778
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1784
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1788
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1792
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1796
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1801
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1806
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1812
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1819
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1825
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1832
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1839
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1849
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1856
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1867
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1878
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1882
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1888
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1900
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1906
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1916
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1920
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1926
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1942
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1948
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1952
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1956
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1960
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1964
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1968
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1976
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1984
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1994
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2035
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2039
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2045
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2051
		{
			yyVAL.str = yyDollar[1].str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2056
		{
			yyVAL.str = "true"
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2057
		{
			yyVAL.str = "false"
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2058
		{
			yyVAL.str = yyDollar[1].str
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2063
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2074
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2085
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2091
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2102
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2117
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2122
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2126
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2135
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2151
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2155
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2159
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2163
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2167
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2171
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2179
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2183
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2187
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2191
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2195
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2199
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2203
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2207
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2211
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2217
		{
			yyVAL.item = nil
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2222
		{
			yyVAL.item = nil
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2254
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2259
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2263
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2272
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2283
		{
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2287
		{
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2292
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2307
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2313
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2319
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[4].unresolvedObjectNameUnion(), DbName: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[4].unresolvedObjectNameUnion(), DbName: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2331
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[4].unresolvedObjectNameUnion(), DbName: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2350
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2358
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2362
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2370
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2374
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2378
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2384
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2391
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2401
		{
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2403
		{
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2412
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2422
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2431
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2435
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2439
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2445
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2451
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2457
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2463
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2485
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2495
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2507
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2524
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2529
		{
			yyVAL.str = ""
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2533
		{
			yyVAL.str = yyDollar[2].str
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2539
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2552
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2556
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2562
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2567
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2571
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2577
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2581
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2590
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2594
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2598
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2604
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2608
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2627
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2636
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2645
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2649
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2655
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2664
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2673
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2683
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2689
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2695
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2701
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2709
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2714
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2721
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2737
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2750
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2761
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2765
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2771
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2776
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2783
		{
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2785
		{
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2788
		{
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2797
		{
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2801
		{
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2806
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2815
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2822
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2828
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2836
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2843
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2850
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2870
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2883
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2889
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2893
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2899
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2913
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2920
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2929
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2937
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2945
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2969
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2992
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2996
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3002
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3011
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3015
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3021
		{
			yyVAL.str = yyDollar[1].str
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3025
		{
			yyVAL.str = yyDollar[3].str
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3031
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3035
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3041
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3046
		{
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3057
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3061
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3068
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3073
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3077
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3083
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3087
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3093
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3097
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3106
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3119
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3126
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3133
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3151
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3170
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3176
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3183
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3187
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3200
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3204
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3209
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3213
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3220
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3225
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3242
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3246
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3250
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3254
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3264
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3271
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3280
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3284
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3290
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3302
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3311
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3317
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3321
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3325
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3334
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3340
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3346
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3350
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3356
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3361
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3365
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3369
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3374
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3378
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3382
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3388
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3392
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3398
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3402
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3412
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3432
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3444
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3452
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3460
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3477
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3485
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3493
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3501
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3509
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3517
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3525
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3533
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3543
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3554
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3572
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3576
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3580
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3593
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3602
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3607
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3611
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3617
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3621
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3627
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3631
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3635
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3639
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3644
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3652
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3658
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3666
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3674
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3684
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3690
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3699
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3708
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3717
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3727
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3731
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3741
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3745
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3749
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3753
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3759
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3769
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3773
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3779
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3789
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3795
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3801
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3805
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3809
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3815
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3819
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3825
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3829
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3835
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3839
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3845
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3849
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3859
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3872
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3878
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3884
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3897
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3915
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3919
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3925
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3935
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3939
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3943
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3948
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3952
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3956
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3960
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3969
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3973
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3977
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3981
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3986
		{
			yyVAL.str = ""
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3990
		{
			yyVAL.str = yyDollar[1].str
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3994
		{
			yyVAL.str = yyDollar[2].str
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4003
		{
			yyVAL.str = ""
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4007
		{
			yyVAL.str = yyDollar[1].str
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4011
		{
			yyVAL.str = yyDollar[2].str
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4015
		{
			yyVAL.str = yyDollar[1].str
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4019
		{
			yyVAL.str = yyDollar[2].str
		}
	case 663:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4053
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4063
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4074
		{
		}
	case 667:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4079
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4091
		{
			yyVAL.str = yyDollar[1].str
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4097
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4107
		{
			yyVAL.str = yyDollar[1].str
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4111
		{
			yyVAL.str = yyDollar[1].str
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4117
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4124
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4130
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4138
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4144
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4151
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4159
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4165
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4174
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4186
		{
			yyVAL.str = yyDollar[1].str
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4191
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4197
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4205
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4311
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4315
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4321
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4331
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4335
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4341
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4351
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4355
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4359
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4368
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4374
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4381
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4387
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4400
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4409
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4413
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4419
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4436
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4440
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4444
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4448
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4454
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4473
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4477
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4499
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4503
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4507
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4511
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4515
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4521
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4525
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4531
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4536
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4541
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4545
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4549
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4553
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4557
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4563
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4577
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4581
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4590
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4596
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4600
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4606
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4610
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4614
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4619
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4623
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4629
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4641
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4650
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4663
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4670
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4678
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4684
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4693
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4697
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4702
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4706
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4713
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4724
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4737
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4747
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4751
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4758
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4765
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4769
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4782
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4788
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4792
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4798
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4807
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4821
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4827
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4831
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4837
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4844
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4853
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4857
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4862
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4866
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4871
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4875
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4880
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4884
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4894
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4898
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4909
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4917
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4925
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4933
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4944
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4953
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4963
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4973
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4977
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4982
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4986
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4991
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4995
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5001
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5005
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5009
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5015
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5019
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5031
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5035
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5039
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5043
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5047
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5051
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5055
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5059
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5063
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5067
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5071
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5075
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5079
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5083
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5087
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5091
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5095
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5099
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5103
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5107
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5111
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5115
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5119
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5123
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5127
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5134
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5138
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5144
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5149
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5153
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5157
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5163
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5167
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5171
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5175
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5179
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5183
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5197
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5201
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5210
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5215
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5221
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5228
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5232
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5238
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5242
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5248
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5258
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5264
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5273
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5282
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5305
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5314
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5324
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5332
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5338
		{
			yyVAL.str = ""
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5342
		{
			yyVAL.str = yyDollar[1].str
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5352
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5358
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5364
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5378
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5385
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5395
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5410
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5414
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5418
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5423
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5427
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5433
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5437
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5443
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5447
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5451
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5455
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5459
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5463
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5467
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5471
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5475
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5479
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5483
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5487
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5491
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5495
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5508
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5514
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5523
		{
			yyVAL.str = ""
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5527
		{
			yyVAL.str = yyDollar[1].str
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5533
		{
			yyVAL.str = ""
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5537
		{
			yyVAL.str = yyDollar[2].str
		}
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5543
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5555
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5562
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5569
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5576
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5583
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5592
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5598
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5604
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5608
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5612
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5616
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5620
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5625
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5632
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5636
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5640
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5645
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5649
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5654
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5658
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5674
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5680
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5684
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5688
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5692
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5696
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5700
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5704
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5708
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5712
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5716
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5720
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5724
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5728
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5734
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5738
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5742
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5746
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5750
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5754
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5758
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5762
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5766
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5770
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5774
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5778
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5783
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5791
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5795
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5799
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5808
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5812
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5816
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5820
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5829
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5838
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5844
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5848
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5854
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5864
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5881
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5898
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5911
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5924
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5936
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5950
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5965
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5980
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5997
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6012
		{
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6018
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6022
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6026
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6032
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6036
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6044
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6048
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6052
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6058
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6065
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6078
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6085
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6094
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6103
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6113
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6123
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6132
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6141
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6151
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6161
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6171
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6181
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6191
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6201
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6211
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6221
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6231
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6241
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6251
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6261
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6278
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6286
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6294
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6302
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6310
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6319
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6327
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6336
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6345
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6353
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6361
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6370
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6379
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6401
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6437
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6449
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6461
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6471
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6479
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6486
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6493
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6505
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6513
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6524
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6533
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6542
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6550
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6560
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6568
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6576
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6590
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6596
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6600
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6619
		{
		}
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6621
		{
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6662
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6672
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6676
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6680
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6686
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6695
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6701
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6705
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6712
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6716
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6720
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6728
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6732
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6736
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6740
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6746
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6750
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6754
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6758
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6762
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6766
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6770
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6790
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6798
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6802
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6806
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6810
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6814
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6818
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6824
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6828
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6834
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6838
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6845
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6849
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6853
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6859
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6863
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6867
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6871
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6875
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6879
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6883
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6889
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6893
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6897
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6901
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6907
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6911
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6924
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6929
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6933
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6937
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6941
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6945
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6949
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6963
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6967
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6974
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6985
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6990
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6996
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7008
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7032
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7045
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7058
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7071
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7084
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7097
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7123
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7136
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7149
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7162
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7177
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7200
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7234
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7282
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7299
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7311
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7331
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7351
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7371
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7387
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7400
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7413
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7426
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7439
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7451
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7463
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7475
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7487
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7499
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7511
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7523
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7535
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7547
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7560
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7573
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7588
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7596
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7605
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7615
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7638
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7643
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7649
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7656
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7660
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7665
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7669
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7675
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7681
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7688
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7695
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7704
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7711
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7718
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7727
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7731
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7735
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7741
		{
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7743
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7753
		{
			yyVAL.str = ""
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7757
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
